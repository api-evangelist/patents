---
title: Wrong way detection system
abstract: The Wrong Way Detection System includes detection stations deployed at each egress point along a tollway in addition to various locations along the tollway's mainline. The detection hardware communicates preferably via fiber optic network to a customized software platform housed at a centrally located Incident Management Center (IMC) of the system, where each site is monitored 24/7 in real time for wrong way vehicles. Once a vehicle is detected, operators at the IMC are able to immediately dispatch law enforcement officers and monitor the vehicle's whereabouts via CCTV cameras.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08428861&OS=08428861&RS=08428861
owner: Transcore, LP
number: 08428861
owner_city: Hummelstown
owner_country: US
publication_date: 20100609
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This utility application claims the benefit under 35 U.S.C. \u00a7119(e) of Provisional Application Ser. No. 61\/185,464 filed on Jun. 9, 2009 entitled WRONG WAY DETECTION SYSTEM and whose entire disclosure is incorporated by reference herein.","1. Field of Invention","This invention relates to motorist safety, in particular with motorist safety within the toll industry.","2. Description of Related Art","Motorist oftentimes face unique roadway geometries and signage on tollways versus connecting freeways and state highways. One of these unique scenarios is present for example on the Westpark Tollway, where the absence of frontage roads requires tollway exit ramps to intersect at-grade with signalized intersections. As a result, motorists face unique configurations and alignments along the corridor, which is atypical for the Houston region and along Texas and national highways. Toll authorities are regularly confronted with unique operational issues and are required to solve problems without precedent to follow.","Due to multiple fatalities caused by wrong way drivers along the Westpark Tollway, the inventors conceived and reduced to practice a solution to reliably detect vehicles traveling or entering the tollway in the wrong direction. As a result, the inventors designed a system based on best-fit technology and extreme reliability after evaluating and testing multiple leading-edge technologies.","All references cited herein are incorporated herein by reference in their entireties.","The Wrong Way Detection System by example includes detection stations deployed at ingress\/egress points along a roadway (e.g., tollway, expressway, highway, limited access road, restricted access road, high occupancy vehicle lanes, parkway, road) in addition to various locations along the tollway's mainline. The detection hardware communicates preferably via fiber optic network to a customized software platform housed at a central location, such as an Incident Management Center (IMC), where each site is monitored 24\/7 in real time for wrong way vehicles. Once a vehicle is detected, operators at the IMC are able to immediately dispatch law enforcement officers and monitor the vehicle's whereabouts via CCTV cameras.","In an example of the preferred embodiments, the invention includes a detection system for detecting vehicles traveling the wrong way along a roadway. The detection system includes wrong way detection stations at a plurality of detection sites, a detection communicator at each detection site, a receiver terminal and a special purpose computer at a central location. At least one of the plurality of wrong way detection stations is deployed at a corresponding one of a plurality of detection sites adjacent a roadway, with each wrong way detection station monitoring a lane of the roadway for vehicles traveling the wrong way along the lane. The wrong way detection stations detect a vehicle traveling the wrong way along the lane and transmit a wrong way alert upon the detection. The detection communicator at the detection site with the wrong way detection station that transmitted the wrong way alert is communicatively coupled to the wrong way detection station to receive the wrong way alert. The detection communicator transmits an alarm signal based on the wrong way alert. The receiver terminal located at the central location receives the transmitted alarm signal from the detection communicator as a wrong way detection alarm message. The special purpose computer is communicatively coupled with the receiver terminal and is programmed by computer programming software to interface with the receiver terminal to detect the wrong way detection alarm message and monitor the vehicle traveling the wrong way that was detected by the wrong way detection station. The special purpose computer communicates the wrong way traveling vehicle whereabouts to enforcement personnel as needed.","Further scope of applicability of the present invention will become apparent from the detailed description given hereinafter. However, it should be understood that the detailed description and specific examples, while indicating preferred embodiments of the invention, are given by way of illustration only, and that the invention is not limited to the precise arrangements and instrumentalities shown, since the invention will become apparent to those skilled in the art from this detailed description.","The present invention will now be described with reference to the accompanying drawing, in which an example of the preferred embodiments of the invention is shown. This invention may, however, be embodied in many different forms and should not be construed as limited to the examples set forth below. Rather, the exemplary embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art.","In steps that reduced the invention to practice, the inventors designed, constructed, and integrated fourteen (14) exemplary wrong way detection sites at each egress point and mainline plaza location along the Westpark Tollway in Harris County, TX using radar based technology due to its reliable, cost effective, and readily deployable solution. Fiber optic cabling links each site in real-time to the Incident Management Center (IMC) for a redundant and robust communications network. After establishing this connectivity, each vehicle detection site was rigorously tested.","During use of the exemplary system, dispatchers at the IMC monitor the detection sites nonstop on a video display (e.g., a 3\u2032\u00d72\u2032 video wall, monitor) via a general purpose computer transformed to a special purpose computer programmed to perform a customized software platform that the inventors reduced to practice using Java programming and a SQL server database. The platform also interfaces with a Geographic Information System (GIS) database and displays a real-time status of each site on the video wall system map. When a wrong way vehicle is detected, an audible alarm is sounded in the IMC and the nearest roadway cameras are panned toward the tollway segment where the detection occurred.","To further enhance system reliability, the inventors developed computer programming software that transforms computers\/servers in the system into special purpose computers programmed to perform the software to interface with the field hardware to test and confirm the operational status of each site and that each site is properly detecting vehicles at all times. If the special purpose computer(s) of the system performing the software detects that either site communications or hardware is malfunctioning, the system notifies dispatchers that mobilize technicians to repair the problem. All incidents are logged and tracked via the GIS within the SQL server database for historical tracking purposes and resolution. The system displays warning messages on Dynamic Message Signs (DMS) along the tollway to alert oncoming traffic of approaching wrong way vehicles.","This exemplary deployment represents a first-of-its-kind wrong way vehicle detection system, covering more than 10 miles of the United States' first all-electronic tollway. During its use, the detection system and associated response protocol has been credited with stopping numerous wrong way drivers before a potentially fatal accident could have occurred. The results of this project are truly immeasurable. By stopping the wrong way drivers, the exemplary wrong way detection system has already saved the lives of countless individuals and a lifetime of tragedy for their families. Since the exemplary wrong way detection system has been installed, no accidents have occurred as a result of wrong way drivers.","After rigorously testing the reliability and accuracy of various technologies, the inventors selected a readily deployable technology. Wrong way detection stations were designed and deployed at each egress point along the Westpark Tollway in addition to various locations along the tollway's mainline, for a total of fourteen (14) separate detection sites. The detection hardware communicates preferably via fiber optic network to a customized software platform housed at the Incident Management Center (IMC), where each site is monitored continuously in real time for wrong way vehicles. Once a vehicle is detected, operators at the IMC are able to immediately dispatch law enforcement officers and monitor the vehicle's whereabouts via CCTV cameras based on the information provided by the system.","While not being limited to a particular theory,  depicts an exemplary hardware configuration for the Wrong Way Detection System. The system  includes a plurality of radar detectors  (e.g., Electronic Integrated System Inc. (EIS) X3) at a plurality of remote detection sites as detection stations mounted in overhead configuration preferably above or adjacent a monitored road with an unobstructed line of sight of the monitored road, with each radar detector responsible for detecting movement along a single lane. Therefore, for efficiency and precision, one radar detector  is mounted per lane, with each lane generally being about twelve feet wide. At each remote detection site, wrong way detection stations (e.g., radar detectors ) communicate wrong way alerts to a communication controller , preferably via a wired connection  upon detection of a vehicle moving the wrong way through the detection zone of the detection station. For example, a 6 pair cable with a Military Specification (MS) connector that links an EIS radar to an EIS Notification Event Warning System (NEWS) Controller in National Electrical Manufacturer's Association (NEMA) 4R cabinet with a hardened Uninterruptible Power Supply (UPS) back-up. Each communication controller  is communicatively connected to a receiver\/port terminal server  (e.g., digital port terminal) via a fiber optic data transceiver  that converts or decodes the communication controller wrong way detection alarm messages from RS232 to fiber optic and transmits the data as an alarm signal over fiber optic cable  (e.g., single mode) to the receiver\/port terminal server via a fiber optic data receiver  connected to the server .","It is contemplated that the system equipment at each remote detection site includes detection stations (e.g., radar detectors , radar guns, electromagnetic, RFID, signal strength measuring device, equipment for detecting movement of a vehicle), and a wrong way detection communicator (e.g., communication controller , data transceiver , transmission lines such as wire, fiber optic cable, wireless, equipment communicating data from the detection stations to a special purpose computer). In this example, the remote detection site's detection equipment includes the radar detectors , the communication controller  and the data transceiver  assigned to detect vehicles traveling through the detection site's interrogation zone of the roadway. While each detection site preferably includes one communication controller and data transceiver for all of the radar detectors at that detection site, the scope of the invention is not so limited as the number of radar detectors, communication controllers and data transceivers for each detection site is based on the configuration and number of lanes at the detection site, as well as any limitations of the specific detection stations and detection communicators at the detection site.","Each radar detector  is assigned to a specific one of the communication controllers  and assigned to a specific communication port on the receiver\/port terminal server . For example, as can be seen in , radar detector # (e.g., Radar ) is assigned to communication controller # (e.g., NEWS), which is assigned to communication port  on the receiver\/port terminal server  (e.g., Digi port).","As noted above, it is contemplated that each detection site includes a plurality of radar detectors  with one or more detectors assigned to monitor one or more predetermined lanes along a section of a monitored road. It is also understood that while each radar detector  is assigned to a specific communication controller , a plurality of radar detectors at a detection site are preferably assigned to the same commutation controller at that detection site for cost efficiency. In other words each communication controller preferably is communicatively coupleable with more that one, and most preferably with all of the radar detectors at a single detection site, and is configured to distinguish each assigned radar detector in order to identify and communicate the source radar detector of any wrong way alarm, and thus the associated specific monitored lane of every wrong way motorist.","The receiver\/port terminal server  (also referred to as the receiver terminal) communicates with an application\/database server  located preferably at a central location, such as the Incident Management Center, and communicates with a workstation computer  at the Center as needed to execute the software. While not being limited to a particular theory, the receiver\/port terminal server  preferably is also located at the Center for communication with the application\/database server . However it is understood that the receiver\/port terminal server , the fiber optic data receiver , the application\/database server  and the workstation computer  are not limited to any one location. What is contemplated by the inventors within the scope of the invention is that the servers and workstation computer are configured to communication with each other regardless of their location. Having the equipment at one location is considered most efficient and thus preferable for the examples discussed herein, even if the scope of the invention is not so restrictive. It is also understood that while the examples of the preferred embodiments discussed herein set forth a wired\/cable connection between the various equipment, the invention also includes the use of wireless connections between the equipment as would readily be understood by a skilled artisan.","At the central location of the exemplary embodiment, the fiber optic receiver  is communicatively connected to the receiver\/port terminal server  to convert RS232 serial output alarm signals to Ethernet as needed. The software or computer program running on the special purpose computers of the application\/database server  and the workstation computer  (hereinafter also referred to collectively as an exemplary special purpose computer) pings the receiver\/port terminal server  every time interval (e.g., 3 seconds, 10 seconds, one second) to detect specific wrong way messages sent from the communication controller . If an appropriate message is received and confirmed, the receiver\/port terminal server  sends an Ethernet signal to a database (e.g., SQL) in the application\/database server  that populates the appropriate fields in the database accordingly.","During operation of the system , when a vehicle enters a monitored lane traveling in the wrong direction, a radar detector  configured to monitor the lane alerts its assigned communication controller , which outputs a corresponding wrong way detection alarm message to the receiver\/port terminal server  and the application\/database server . The server  running the computer program receives the wrong way alert message and determines the location of the wrong way alert. While not being limited to a particular theory, the code below represents an exemplary computer program segment for receiving the alert and determining the location of the source of the alert.",{"@attributes":{"id":"p-0027","num":"0026"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"WWDMain.java"},{"entry":"package com.tcore.hctra.wwd;"},{"entry":"import java.sql.CallableStatement;"},{"entry":"import java.sql.Connection;"},{"entry":"import java.sql.ResultSet;"},{"entry":"import java.sql.SQLException;"},{"entry":"import java.util.ArrayList;"},{"entry":"import java.util.concurrent.ExecutorService;"},{"entry":"import java.util.concurrent.Executors;"},{"entry":"import org.apache.log4j.Category;"},{"entry":"import com.tcore.util.DataAccessor;"},{"entry":"public class WWDMain"},{"entry":"{"},{"entry":"\u2003static Category log ="},{"entry":"Category.getInstance(\u201ccom.tcore.hctra.wwd.WWDMain\u201d);"},{"entry":"\u2003public static void main( String[ ] args )"},{"entry":"\u2003{"},{"entry":"\u2003\u2003String filename=\u201cbuzzthruloud.wav\u201d;"},{"entry":"\u2003\u2003if(args != null && args.length > 0)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003filename = args[0];"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003Connection con = null;"},{"entry":"\u2003\u2003CallableStatement cstmt = null;"},{"entry":"\u2003\u2003ResultSet rs = null;"},{"entry":"\u2003\u2003String query = \u201c{call SelectDetectorsToMonitor( )}\u201d;"},{"entry":"\u2003\u2003ArrayList detectorPorts = null;"},{"entry":"\u2003\u2003try"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003con = DataAccessor.getConnection( );"},{"entry":"\u2003\u2003\u2003cstmt = con.prepareCall(query);"},{"entry":"\u2003\u2003\u2003log.debug(\u201cexecuting query to get detectors configured"},{"entry":"for monitoring...\u201d);"},{"entry":"\u2003\u2003\u2003rs = cstmt.executeQuery( );"},{"entry":"\u2003\u2003\u2003if(rs.next( ))"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003log.debug(\u201cfound detectors configured for"},{"entry":"monitoring...\u201d);"},{"entry":"\u2003\u2003\u2003\u2003detectorPorts = new ArrayList( );"},{"entry":"\u2003\u2003\u2003\u2003rs.beforeFirst( );"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003log.debug(\u201cno detectors found for monitoring...\u201d);"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003while(rs.next( ))"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003log.debug(\u201cadding port \u201d+rs.getString(\u201cComPort\u201d)+\u201c"},{"entry":"to the detector list\u201d);"},{"entry":"\u2003\u2003\u2003\u2003LocationComportMapping mapping = new"},{"entry":"LocationComportMapping( );"},{"entry":"\u2003\u2003\u2003\u2003mapping.setComPort(rs.getString(\u201cComPort\u201d));"},{"entry":"\u2003\u2003\u2003\u2003mapping.setLocationID(rs.getString(\u201cLocationID\u201d));"},{"entry":"\u2003\u2003\u2003\u2003detectorPorts.add(mapping);"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003catch(SQLException e)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003e.printStackTrace( );"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003catch(Exception e)"},{"entry":"\u2003\u2003\u2003{ "},{"entry":"\u2003\u2003\u2003\u2003e.printStackTrace( );"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003finally"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003DataAccessor.close(cstmt,rs,con);"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003if(detectorPorts != null && detectorPorts.size( ) > 0)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003log.debug(\u201cfound \u201d+detectorPorts.size( )+\u201cdetectors to"},{"entry":"monitor...\u201d);"},{"entry":"\u2003\u2003\u2003\u2003ExecutorService threadExecutor ="},{"entry":"Executors.newFixedThreadPool(detectorPorts.size( )+1);"},{"entry":"\u2003\u2003\u2003\u2003for(int i=0; i<detectorPorts.size( ); i++)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003log.debug(\u201ccreating thread for detector running on"},{"entry":"\u201d+detectorPorts.get(i));"},{"entry":"\u2003\u2003\u2003\u2003\u2003LocationComportMapping mapping ="},{"entry":"(LocationComportMapping)detectorPorts.get(i);"},{"entry":"\u2003\u2003\u2003\u2003\u2003WWDThread task = new"},{"entry":"WWDThread(mapping.getComPort( ), mapping.getLocationID( ));"},{"entry":"\u2003\u2003\u2003\u2003\u2003log.debug(\u201cexecuting thread for"},{"entry":"\u201d+detectorPorts.get(i));"},{"entry":"\u2003\u2003\u2003\u2003\u2003threadExecutor.execute(task);"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003log.debug(\u201cstarting the play wave thread...\u201d);"},{"entry":"\u2003\u2003\u2003\u2003PlayWave audioAlarm = new PlayWave(filename);"},{"entry":"\u2003\u2003\u2003\u2003threadExecutor.execute(audioAlarm);"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"}"},{"entry":"LocationComportMapping.java"},{"entry":"package com.tcore.hctra.wwd;"},{"entry":"public class LocationComportMapping"},{"entry":"{"},{"entry":"\u2003private String comPort = null;"},{"entry":"\u2003private String locationID = null;"},{"entry":"\u2003public String getComPort( ) {"},{"entry":"\u2003\u2003return comPort;"},{"entry":"\u2003}"},{"entry":"\u2003public void setComPort(String comPort) {"},{"entry":"\u2003\u2003this.comPort = comPort;"},{"entry":"\u2003}"},{"entry":"\u2003public String getLocationID( ) {"},{"entry":"\u2003\u2003return locationID;"},{"entry":"\u2003}"},{"entry":"\u2003public void setLocationID(String locationID) {"},{"entry":"\u2003\u2003this.locationID = locationID;"},{"entry":"\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The special purpose application\/database server  listens to the receiver\/port terminal server , preferable on its serial port, for any wrong way alert message sent from the communication controllers . While not being limited to a particular theory, the code below represents an exemplary computer program segment for directing the application\/database server to listen for wrong way alert messages.",{"@attributes":{"id":"p-0029","num":"0028"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"WWDThread.java"},{"entry":"package com.tcore.hctra.wwd;"},{"entry":"import java.io.IOException;"},{"entry":"import java.io.InputStream;"},{"entry":"import java.sql.CallableStatement;"},{"entry":"import java.sql.Connection;"},{"entry":"import java.sql.ResultSet;"},{"entry":"import java.sql.SQLException;"},{"entry":"import java.util.Enumeration;"},{"entry":"import java.util.TooManyListenersException;"},{"entry":"import javax.comm.CommPortIdentifier;"},{"entry":"import javax.comm.PortInUseException;"},{"entry":"import javax.comm.SerialPort;"},{"entry":"import javax.comm.SerialPortEvent;"},{"entry":"import javax.comm.SerialPortEventListener;"},{"entry":"import javax.comm.UnsupportedCommOperationException;"},{"entry":"import com.tcore.util.DataAccessor;"},{"entry":"import com.tcore.util.DataValidator;"},{"entry":"public class WWDThread implements Runnable, SerialPortEventListener"},{"entry":"{ "},{"entry":"\u2003CommPortIdentifier portId;"},{"entry":"\u2003Enumeration portList;"},{"entry":"\u2003InputStream inputStream;"},{"entry":"\u2003SerialPort serialPort;"},{"entry":"\u2003Thread readThread;"},{"entry":"\u2003StringBuffer readBuffer = new StringBuffer( );"},{"entry":"\u2003String defaultPort = \u201cCOM1\u201d;"},{"entry":"\u2003String newsHubID = null;"},{"entry":"\u2003public void init( )"},{"entry":"\u2003{ "},{"entry":"\u2003\u2003boolean portFound = false;"},{"entry":"\u2003\u2003\/\/ determine the name of the serial port on several operating"},{"entry":"systems"},{"entry":"\u2003\u2003System.out.println(\u201cSet default port to \u201d+defaultPort);"},{"entry":"\u2003\u2003\/\/ parse ports and if the default port is found, initialized"},{"entry":"the reader"},{"entry":"\u2003\u2003portList = CommPortIdentifier.getPortIdentifiers( );"},{"entry":"\u2003\u2003while (portList.hasMoreElements( ))"},{"entry":"\u2003\u2003{ "},{"entry":"\u2003\u2003\u2003portId = (CommPortIdentifier) portList.nextElement( );"},{"entry":"\u2003\u2003\u2003if (portId.getPortType( ) =="},{"entry":"CommPortIdentifier.PORT_SERIAL)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003if (portId.getName( ).equals(defaultPort))"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003System.out.println(\u201cFound port:"},{"entry":"\u201d+defaultPort);"},{"entry":"\u2003\u2003\u2003\u2003\u2003portFound = true; break;"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003if (!portFound)"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\u2003System.out.println(\u201cport \u201d + defaultPort + \u201c not"},{"entry":"found.\u201d);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"public WWDThread(String comPortNo, String location)"},{"entry":"{"},{"entry":"\u2003\u2003this.defaultPort = comPortNo;"},{"entry":"\u2003\u2003this.newsHubID = location;"},{"entry":"\u2003\u2003init( );"},{"entry":"\u2003\u2003try"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003serialPort = (SerialPort) portId.open(\u201cSimpleReadApp\u201d,"},{"entry":"2000);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003catch (PortInUseException e) { }"},{"entry":"\u2003\u2003try"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003inputStream = serialPort.getInputStream( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003catch (IOException e) { }"},{"entry":"\u2003\u2003try"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003serialPort.addEventListener(this);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003catch (TooManyListenersException e) { }"},{"entry":"\u2003\u2003\/\/\u2003 activate the DATA_AVAILABLE notifier"},{"entry":"\u2003\u2003serialPort.notifyOnDataAvailable(true);"},{"entry":"\u2003\u2003try"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\/\/\u2003 set port parameters"},{"entry":"\u2003\u2003\u2003serialPort.setSerialPortParams(9600,"},{"entry":"SerialPort.DATABITS_8,"},{"entry":"\u2003SerialPort.STOPBITS_1,"},{"entry":"\u2003SerialPort.PARITY_NONE);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003catch (UnsupportedCommOperationException e) { }"},{"entry":"}"},{"entry":"public void run( )"},{"entry":"{"},{"entry":"\u2003try"},{"entry":"\u2003{"},{"entry":"\u2003\u2003while (true)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003if(readBuffer.length( ) >0)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003System.out.println(defaultPort+\u201c:Read:\u201d+readBuffer.toString( ));"},{"entry":"\u2003\u2003\u2003\u2003saveMessage(readBuffer.toString( ));"},{"entry":"\u2003\u2003\u2003\u2003readBuffer ="},{"entry":"(StringBuffer)readBuffer.delete(0,readBuffer.length( ));"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003Thread.sleep(1000);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003catch (InterruptedException e) { }"},{"entry":"}"},{"entry":"public void serialEvent(SerialPortEvent event)"},{"entry":"{"},{"entry":"\u2003switch (event.getEventType( ))"},{"entry":"\u2003{"},{"entry":"\u2003\u2003case SerialPortEvent.BI:"},{"entry":"\u2003\u2003case SerialPortEvent.OE:"},{"entry":"\u2003\u2003case SerialPortEvent.FE:"},{"entry":"\u2003\u2003case SerialPortEvent.PE:"},{"entry":"\u2003\u2003case SerialPortEvent.CD:"},{"entry":"\u2003\u2003case SerialPortEvent.CTS:"},{"entry":"\u2003\u2003case SerialPortEvent.DSR:"},{"entry":"\u2003\u2003case SerialPortEvent.RI:"},{"entry":"\u2003\u2003case SerialPortEvent.OUTPUT_BUFFER_EMPTY:"},{"entry":"\u2003\u2003break;"},{"entry":"\u2003\u2003case SerialPortEvent.DATA_AVAILABLE:"},{"entry":"\u2003\u2003try"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003while(inputStream.available( ) > 0)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003int numBytes = inputStream.read( );"},{"entry":"\u2003\u2003\u2003\u2003readBuffer.append(numBytes);"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003} catch (IOException e) { }"},{"entry":"\u2003\u2003break;"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"public void saveMessage (String message)"},{"entry":"{"},{"entry":"\u2003Connection con = null;"},{"entry":"\u2003CallableStatement cstmt = null;"},{"entry":"\u2003ResultSet rs = null;"},{"entry":"\u2003String query = \u201c{call InsertDetectionLog(?,?)}\u201d;"},{"entry":"\u2003int status = 0;"},{"entry":"\u2003try"},{"entry":"\u2003{"},{"entry":"\u2003\u2003message = readBuffer.toString( );"},{"entry":"\u2003\u2003System.out.println(\u201cParsing message...\u201d);"},{"entry":"\u2003\u2003if(message.indexOf(\u201c25597\u201d) !=\u22121 && message.length( ) > 8)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\/\/newsHubID ="},{"entry":"message.substring(message.indexOf(\u201c25597\u201d)"},{"entry":"+6,message.indexOf(\u201c25597\u201d)+8);"},{"entry":"\u2003\u2003\u2003if(message.indexOf(\u201c25582\u201d)!=\u22121)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003status = 1;"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003if(message.length( ) > 12)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003String malfunction ="},{"entry":"message.substring(message.indexOf(\u201c25597\u201d)"},{"entry":"+9,message.indexOf(\u201c25597\u201d)+11);"},{"entry":"\u2003\u2003\u2003\u2003System.out.println(\u201cparsing for"},{"entry":"malfunction...\u201d+malfunction);"},{"entry":"\u2003\u2003\u2003\u2003if(malfunction.equalsIgnoreCase(\u201c16\u201d))"},{"entry":"\u2003\u2003\u2003\u2003{status = 2;}"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003if(DataValidator.isEmpty(newsHubID))"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003throw new Exception(\u201cNEWS HUB ID cannot be empty.\u201d);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003if(status == 0)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003throw new Exception(\u201cStatus cannot be ZERO.\u201d);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003System.out.println(\u201cNEWS HUB ID:\u201d+newsHubID+\u201d STATUS"},{"entry":"ID:\u201d+status);"},{"entry":"\u2003\u2003System.out.println(\u201cBEGIN inserting into database....\u201d);"},{"entry":"\u2003\u2003con = DataAccessor.getConnection( );"},{"entry":"\u2003\u2003cstmt = con.prepareCall(query);"},{"entry":"\u2003\u2003cstmt.setInt(1, Integer.parseInt(newsHubID));"},{"entry":"\u2003\u2003cstmt.setInt(2, status);"},{"entry":"\u2003\u2003cstmt.execute( );"},{"entry":"\u2003\u2003System.out.println(\u201cEND inserting into database....\u201d);"},{"entry":"\u2003}"},{"entry":"\u2003catch(NumberFormatException e)"},{"entry":"\u2003{"},{"entry":"\u2003}"},{"entry":"\u2003catch(SQLException e)"},{"entry":"\u2003{"},{"entry":"\u2003}"},{"entry":"\u2003catch(Exception e)"},{"entry":"\u2003{"},{"entry":"\u2003}"},{"entry":"\u2003finally"},{"entry":"\u2003}"},{"entry":"\u2003\u2003DataAccessor.close(cstmt, null, con);"},{"entry":"\u2003}"},{"entry":"\u2002}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"If an appropriate wrong way alert message is received and confirmed, the application\/database server  running the customized software breaks the binary message down into different fields and inserts the data into a database of the application\/database server (e.g., HP DL360 SQL database server). As can be seen in , the special purpose workstation computer  (e.g., Dell) programmed with the application software to run the associated programs is connected to the application\/database server . The special purpose application\/database server houses a web application (e.g., a Java web application built from Apache freeware) that pings the application\/database server database (e.g., SQL) every predetermined time interval (e.g., 3 seconds, 10 seconds, 1 second, 5 seconds) for changes to the status of any alerts as indicated in a corresponding field or table in the database.","A video monitor  (e.g., 3\u2032\u00d72\u2032 video display wall, 40\u2033 NEC LCD(s)) is connected to the workstation computer . Upon receipt of a confirmed alarm input into the application\/database server  database from a communication controller  in the field, the application\/database server running the web application directs the video monitor to zoom into the specific site location. The system's special purpose computer (e.g., server , workstation computer ) causes a speaker within the workstation computer or otherwise coupled to the special purpose computer to sound an audible alarm and the video monitor to display an alert banner with the specific site location. In addition, the video monitor  displays communication and hardware status of each site in real time as would readily be understood by a skilled artisan. While not being limited to a particular theory, the code below represents an exemplary computer program segment for directing the application\/database server to perform the functions discussed above.",{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"PlayWave.java"},{"entry":"package com.tcore.hctra.wwd;"},{"entry":"import java.io.File;"},{"entry":"import java.io.IOException;"},{"entry":"import java.sql.CallableStatement;"},{"entry":"import java.sql.Connection;"},{"entry":"import java.sql.ResultSet;"},{"entry":"import java.sql.SQLException;"},{"entry":"import javax.sound.sampled.AudioFormat;"},{"entry":"import javax.sound.sampled.AudioInputStream;"},{"entry":"import javax.sound.sampled.AudioSystem;"},{"entry":"import javax.sound.sampled.DataLine;"},{"entry":"import javax.sound.sampled.FloatControl;"},{"entry":"import javax.sound.sampled.LineUnavailableException;"},{"entry":"import javax.sound.sampled.SourceDataLine;"},{"entry":"import javax.sound.sampled.UnsupportedAudioFileException;"},{"entry":"import org.apache.log4j.Category;"},{"entry":"import com.tcore.util.DataAccessor;"},{"entry":"public class PlayWave extends Thread"},{"entry":"{"},{"entry":"\u2003Category log = Category.getInstance(\u201ccom.tcore.hctra.wwd.PlayWave\u201d);"},{"entry":"\u2003private static String filename = \u201cbuzzthruloud.wav\u201d;"},{"entry":"\u2003private Position curPosition;"},{"entry":"\u2003private final int EXTERNAL_BUFFER_SIZE = 524288; \/\/ 128Kb"},{"entry":"\u2003public static void main(String[ ] args)"},{"entry":"\u2003{"},{"entry":"\u2003\u2003if(args != null && args.length > 0)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003filename = args[0];"},{"entry":"\u2003\u2003\u2003System.out.println(\u201cargs[0]:\u201d+args[0]);"},{"entry":"\u2003\u2003\u2003PlayWave playWave = new PlayWave(args[0]);"},{"entry":"\u2003\u2003\u2003playWave.start( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003PlayWave playWave = new PlayWave( );"},{"entry":"\u2003\u2003\u2003playWave.start( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003enum Position"},{"entry":"\u2003{"},{"entry":"\u2003\u2003LEFT, RIGHT, NORMAL"},{"entry":"\u2003};"},{"entry":"\u2003public PlayWave( ) {"},{"entry":"\u2003\u2003curPosition = Position.NORMAL;"},{"entry":"\u2003}"},{"entry":"\u2003public PlayWave(String wavfile) {"},{"entry":"\u2003\u2003filename = wavfile;"},{"entry":"\u2003\u2003curPosition = Position.NORMAL;"},{"entry":"\u2003}"},{"entry":"\u2003public PlayWave(String wavfile, Position p) {"},{"entry":"\u2003\u2003filename = wavfile;"},{"entry":"\u2003\u2003curPosition = p;"},{"entry":"\u2003}"},{"entry":"\u2003public void run( ) {"},{"entry":"\u2003\u2003try"},{"entry":"\u2003\u2003{ "},{"entry":"\u2003\u2003\u2003while(true)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003if(checkForWrongWayDetection( ))"},{"entry":"\u2003\u2003\u2003\u2003{ "},{"entry":"\u2003\u2003\u2003\u2003\u2003log.debug(\u201cplaying\u201dwav file...\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003File soundFile = new File(filename);"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (!soundFile.exists( )) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003System.err.println(\u201cWave file not"},{"entry":"found: \u201d + filename); "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003AudioInputStream audioInputStream = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003try {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003audioInputStream ="},{"entry":"AudioSystem.getAudioInputStream(soundFile);"},{"entry":"\u2003\u2003\u2003\u2003\u2003} catch (UnsupportedAudioFileException e1) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e1.printStackTrace( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} catch (IOException e1) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e1.printStackTrace( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003AudioFormat format ="},{"entry":"audioInputStream.getFormat( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003SourceDataLine auline = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003DataLine.Info info = new"},{"entry":"DataLine.Info(SourceDataLine.class, format);"},{"entry":"\u2003\u2003\u2003\u2003\u2003try {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003auline = (SourceDataLine)"},{"entry":"AudioSystem.getLine(info);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003auline.open(format);"},{"entry":"\u2003\u2003\u2003\u2003\u2003} catch (LineUnavailableException e) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e.printStackTrace( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} catch (Exception e) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e.printStackTrace( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003if"},{"entry":"(auline.isControlSupported(FloatControl.Type.PAN)) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003FloatControl pan = (FloatControl)"},{"entry":"auline"},{"entry":"\u2003\u2003.getControl(FloatControl.Type.PAN);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (curPosition == Position.RIGHT)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003pan.setValue(\u22121.0f);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003else if (curPosition == Position.LEFT)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003pan.setValue(\u22121.0f);"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003auline.start( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003int nBytesRead = 0;"},{"entry":"\u2003\u2003\u2003\u2003\u2003byte[ ] abData = new"},{"entry":"byte[EXTERNAL_BUFFER_SIZE];"},{"entry":"\u2003\u2003\u2003\u2003\u2003try {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003while (nBytesRead != \u22121) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003nBytesRead ="},{"entry":"audioInputStream.read(abData, 0, abData.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (nBytesRead >= 0)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003auline.write(abData, 0,"},{"entry":"nBytesRead);"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003} catch (IOException e) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003e.printStackTrace( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003return;"},{"entry":"\u2003\u2003\u2003\u2003} finally {"},{"entry":"\u2003\u2003\u2003\u2003\u2003auline.drain( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003auline.close( );"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003log.debug(\u201cdone playing wav file...\u201d);"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003Thread.sleep(1000);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003catch(InterruptedException e)"},{"entry":"\u2003{"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"private boolean checkForWrongWayDetection( )"},{"entry":"{"},{"entry":"\u2003Connection con = null;"},{"entry":"\u2003CallableStatement cstmt = null;"},{"entry":"\u2003ResultSet rs = null;"},{"entry":"\u2003String query = \u201c{call SelectWrongWayIncidents( )}\u201d;"},{"entry":"\u2003boolean detection = false;"},{"entry":"\u2003try"},{"entry":"\u2003{"},{"entry":"\u2003\u2003con = DataAccessor.getConnection( );"},{"entry":"\u2003\u2003cstmt = con.prepareCall(query);"},{"entry":"\u2003\u2003log.debug(\u201cQuerying for wrong way incidents...\u201d);"},{"entry":"\u2003\u2003rs = cstmt.executeQuery( );"},{"entry":"\u2003\u2003if(rs.next( ))"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003log.debug(\u201cfound wrong way incidents...\u201d);"},{"entry":"\u2003\u2003\u2003detection = true;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003log.debug(\u201cno wrong way incidents found...\u201d);"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003catch(SQLException e)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003e.printStackTrace( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003catch(Exception e)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003e.printStackTrace( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003finally"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003DataAccessor.close(cstmt,rs,con);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003return detection;"},{"entry":"\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The Wrong Way Detection System preferably also includes features that operate cameras  and dynamic message signs  (e.g., electronic road signs, electronic billboards, traffic warning signs) above or near the monitored road, as well as hardware\/communication testing functionality. For example, the application\/database server  hosted web application programs the specialized application\/database server to interface with a closed circuit television (CCTV) application server to hook into a preset for accessing specific cameras based on detection location. These CCTV cameras pan towards the detection site once an alarm is activated so that dispatchers can track a wrong way vehicle and relay information to first responders. In a specific application of this example, application programming interface (API) from Chameleon  allows a web application to activate the pan, tilt and zoom (PTZ) commands for each camera.","Warning messages conveyed to other drivers on the dynamic message signs  is displayed in automated incident response plans based on the direction of travel and location of the detection. For example, the application\/database server  hosted web application programs the specialized application\/database server to interface with the dynamic message signs  located near the triggered radar detector  to warn nearby drivers of a motorist traveling on the road in the wrong direction. Most preferably the dynamic message signs also indicate the lane the wrong way motorist is traveling in real time.","Regarding the testing hardware and communication functionality, the specialized application\/database server  customized by the system software communicates with each radar detector  once per minute to confirm proper operation and also reverses the polarity of each detector once every hour to confirm that vehicles traveling in the correct direction are being detected. For example, the application\/database server  hosted web application programs the specialized application\/database server to interface with the communication controllers  to send commands to reverse the polarity of the radar detectors  in the corresponding detection zone of each site. Returned detection data bypasses the application\/database server database and is sent directly to the application\/database server web application log as a text file. The server is programmed by its web application to then verify that \u2018detection\u2019 data is being received from the field. This \u201cbelt-and-suspenders\u201d approach and active system management allows the system  to continuously confirm that each site has working communications and operating hardware.","The Wrong Way Detection System described by example herein has been credited with detecting vehicles traveling in the wrong direction on numerous occasions since its commission. On each of those occasions, law enforcement was quickly dispatched and able to stop those vehicles before any incident occurred.","While the invention has been described in detail and with reference to specific examples thereof, it will be apparent to one skilled in the art that various changes and modifications can be made therein without departing from the spirit and scope thereof. It is understood, therefore, that this invention is not limited to the particular embodiments disclosed, but it is intended to cover modifications within the spirit and scope of the present invention. Without further elaboration the foregoing will so fully illustrate my invention that others may, by applying current or future knowledge, readily adapt the same for use under various conditions of service."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING","p":["The invention will be described in conjunction with the following drawing in which like reference numerals designate like elements, and wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"}]},"DETDESC":[{},{}]}
