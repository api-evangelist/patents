---
title: Simulated communication
abstract: A system for simulated communication is described. A simulator module generates simulated communication information. A Graphical User Interface module (“GUI module”) generates graphical data based at least in part on the simulated communication information. The graphical data creates the appearance of an ongoing communication between a reserved agent and a third party user that is not yet occurring. The GUI module sends the graphical data to a display associated with the reserved agent device so that the display depicts a simulated communication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09037977&OS=09037977&RS=09037977
owner: ShoreTel, Inc.
number: 09037977
owner_city: Sunnyvale
owner_country: US
publication_date: 20110322
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["INCORPORATION BY REFERENCE","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is related to the following U.S. utility application, which is hereby incorporated by reference: Ser. No. 12\/985,326, filed on Jan. 5, 2011 and entitled \u201cUNIFIED COMMUNICATION.\u201d","This application is also related to the following U.S. provisional patent application, which is hereby incorporated by reference: Ser. No. 61\/365,262, filed on Jul. 16, 2010 and entitled \u201cUC CLIENT APPLICATION SERVER (CAS) ARCHITECTURE & API.\u201d","1. Field of the Invention","The present invention relates to telephony systems such as those using Voice over Internet Protocol (VoIP). In particular, the present invention relates to simulating an inbound or outbound communication.","2. Description of the Background Art","Many businesses today have call centers systems that perform various functions. For example, a call center can handle customer services calls, make sales calls, etc. Communications are received at the call center. Sometimes these communications are terminated before a call center agent responds to the communication. For example, the call center is a customer service center that helps customers (i.e., third-party users of the call center system) with problems related to products or services sold by the business that runs the call center. A customer makes a telephone call to the customer service center. Before a customer service agent is able to take the customer's call, the customer hangs up. This is referred to herein as a \u201cterminated communication.\u201d A terminated communication includes, among other things, telephone calls to the call center that are terminated (e.g., customer hangs up, mobile phone service disconnects, etc.), chat sessions to the call center that are terminated (e.g., loss of bandwidth, customer terminated chat session, etc.), etc. Existing call center systems have numerous problems dealing with terminated communications.","First, the call center wants to respond to all users who call the call center, including those that experience a terminated communication. However, existing call center systems do not provide a way to reconnect with users who have experienced a terminated communication.","Second, the call center wants to be responsive to various types of terminated communications received at the call center, including telephone calls, chats and emails. However, existing call center systems do not provide a way to reconnect with users who have experienced a terminated communication using these various different communication types.","Third, existing call center systems do not provide a familiar interface for reconnecting with users that have experienced a terminated communication.","The present invention overcomes the deficiencies and shortcomings of the prior art by providing a system, method and computer program product for simulated communication. The system of the present invention is particularly advantageous because it provides simulated communications. The system comprises a reservation module stored on a memory and communicatively coupled to a reserved agent. The reservation module is configured to generate simulated communication information, generate graphical data based at least in part on the simulated communication information. The graphical data creates the appearance of an ongoing communication between a reserved agent and a third party user that is not yet occurring. The reservation module sends the graphical data to a display associated with the reserved agent device so that the display depicts a simulated communication.","A system and method for simulating communications is described. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention can be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the invention. For example, the present invention is described in one embodiment below with reference to system operation and particular hardware. However, the present invention applies to any type of computing device that can receive a data and commands, and any peripheral devices providing services.","Although the examples given herein describe the present invention in embodiments applicable to telephony, a person having ordinary skill in the art will recognize that the present invention is applicable to other technologies.","Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a non-transitory computer-readable memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers or the like.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d or \u201ccomputing\u201d or \u201ccalculating\u201d or \u201cdetermining\u201d or \u201cdisplaying\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program is stored on a non-transitory computer readable storage medium, such as, but is not limited to, a flash memory and\/or any type of disk device including floppy disks, optical disks, CD-ROMs and magnetic optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.","Descriptions herein to a server include one or more of: (1) a hardware server; (2) a software server executed by a processor; (3) a software server stored on a non-transitory computer-readable memory; (4) a virtual server executed by a processor; and (5) a virtual server stored on a non-transitory computer-readable memory. In one embodiment, the server is configured to provide the functionality of a telephony switch.","Descriptions herein a switch refer to a telephony switch, and include one or more of: (1) a hardware telephony switch; (2) a software telephony switch executed by a processor; (3) a software telephony switch stored on a non-transitory computer-readable memory; (4) a virtual telephony switch executed by a processor; and (5) a virtual telephony switch stored on a non-transitory computer-readable memory. A hardware telephony switch is a hardware device configured to provide the functionality of a telephony switch. A virtual switch is a virtualized telephony switch.","All descriptions herein to modules include one or more of (1) computer code and routines stored on a non-transitory computer-readable memory and (2) a hardware device comprised of one or more circuit boards and\/or a processor.","The  include various lines with arrowheads. These lines are signal lines that indicate communicative coupling between the various elements they connect. In one embodiment, the signaling indicated in  is implemented using Session Initiation Protocol (\u201cSIP\u201d), Computer Telephony Integration (\u201cCTI\u201d) or the Call Application Server protocol (\u201cCAS protocol\u201d) described in the U.S. patent application Ser. No. 12\/985,326, the entirety of which is hereby incorporated by reference. In one embodiment, the signaling indicated in  are implemented using a combination of one or of SIP, CTI, the CAS protocol and one or more other signaling protocols. SIP and CTI are known to persons having ordinary skill in the art.","Finally, the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.","System Overview","An Enterprise Contact Center module (\u201cECC module\u201d) (e.g., element  in ) communicates with a reservation module (e.g., element  in ) to provide a call center system. The call center system simulates a communication to overcome the deficiencies present in the prior art. Simulating a communication includes, in one embodiment, detecting a communication. The detected communication is an inbound communication to the call center system or an outbound communication from the call center system (e.g., an inbound telephone call or chat from a third party user to a customer service call center or an outbound telephone call from a sales agent at the call center to a third party user that is a prospective customer).","The call center system tracks the communication (e.g., to determine if a telephone call is terminated before it is answered) and queues a \u201ccontact back communication\u201d responsive to the tracking. In one embodiment, a contact back event is a communication to proactively reinitiate communication with a third-party user via any form of communication, including telephone calls, video conference calls, emails, chats, etc. The contact back event is described in further detail below with reference to the reservation module  and .","The call center system identifies an agent device associated with the call center that is available to participate in the contact back communication, reserves the available agent device and generates simulated communication information. In one embodiment, the call center identifies an extension associated with one or more agent devices that is available to participate in the contact back communication, reserves the agent device and generates the simulated communication information. One or more of the reserved agent device and the reserved extension are associated with a human user that is reserved to participate in the contact back event (i.e., the human user is a reserved agent). In one embodiment, the human user is a user of the agent device. The simulated communication information is call string information that is picked up by a graphics subsystem to generate a graphical user interface (\u201cGUI\u201d) that is depicted on a display of an agent device used by the reserved agent. In one embodiment, the display depicts a simulated communication that indicates to the reserved agent that an incoming call is being made to the reserved agent device by the third party user. In one embodiment, the incoming call is a pending call that will be made to the reserved agent at a time in the future (e.g., 0.01 to 5.00 seconds in the future). For example, the GUI includes a call identifier (e.g., a TAPI string) that appears to be from a third party user. However, the incoming call is from the ECC application, and the call identifier is a simulated TAPI call string that indicates that the third party user is calling the reserved agent device when in fact there is not an incoming call from the third party user. This is referred to herein as a simulated call or a virtualized call since the call appears to be from a third party user when it is not.","The call center system generates and sends the GUI to the display of the reserved agent. The reserved agent then has the option to answer the simulated call. In some embodiments, the reserved agent does not have the option to answer the call. Different embodiments of the call center system are described below.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["196","196","100","100","100","100","100","190","100","100","196","190","100","100","190","100","100"]},"In one embodiment of the present invention, the network  is a partially public or a wholly public network such as the Internet. The network  can also be a private network or include one or more distinct or logical private networks (e.g., virtual private networks, Wide Area Networks (\u201cWAN\u201d) and\/or Local Area Networks (\u201cLAN\u201d)). Additionally, the communication links to and from the network  can be wireline or wireless (i.e., terrestrial- or satellite-based transceivers). In one embodiment of the present invention, the network  is an IP-based wide or metropolitan area network.","The software that supports the computer-integrated functionality of providing the above-described telephony services is generally implemented as a client-server environment in which the participants or clients (distributed telephony users) communicate with a server . Computer-integrated features rely not only on a server's application platform but also on the availability of the network  bandwidth that connects the switches A, B and the server .","In the illustrated embodiment, the switch A is coupled to the network . The switch A is also coupled to the server  via signal line A and to the Public Switched Telephone Network (PSTN) trunk  via an analog or digital trunk line (e.g., a T1 or E1 interface) or a Session Initiation Protocol (\u201cSIP\u201d) trunk service provider. In the illustrated configuration, the switch A provides an interface for calls originating from or terminating on the PSTN or SIP trunk . The PSTN  is coupled to any number of Plain Old Telephone phone Service phone (POTS phone) , and a mobile voice network  coupled to any number of mobile phones represented by mobile phone . Thus, POTS phone  calls and mobile phone  calls can originate on the switch A via the PSTN . The mobile phone  is communicatively coupled to the mobile voice network  and a mobile data network . The mobile data network  is communicatively coupled to an Internet Protocol network  (\u201cIP network \u201d). The IP network  is communicatively coupled to the network . In one embodiment, the IP network  communicates indirectly with the switch A and\/or the server  via the network .","The mobile voice network  is one or more cellular networks configured to transmit voice packets to different phones via the one or more cellular phone networks. For example, the mobile voice network  is one or more cellular telephone networks.","The mobile data network  is one or more wireless networks configured to transmit data such to different phones and\/or networks. For example, the mobile data network  transmits text messages, instant messages, e-mail and data associated with browsing a network such as the Internet. In one embodiment, the mobile data network  is a 3G network. In another embodiment, the mobile data network  is a 4G network.","In one embodiment, the IP network  is a WAN or a similar data network. In another embodiment, the IP network  is an IP-based wide or metropolitan area network. The IP network  can also be a private network or include one or more distinct or logical private networks (e.g., virtual private networks or WANs). In one embodiment, the IP network  includes SIP signaling and Wi-Fi or other wireless IP network to the mobile phone. The mobile data network  is communicatively coupled to the IP network  and the switch  is communicatively coupled to the IP network . In one embodiment, the communicative couplings to and from the network  can be wire line or wireless (i.e., terrestrial- or satellite-based transceivers).","In one embodiment, there is no IP network  and the mobile data network  is communicatively coupled to the network  (either directly or indirectly). For example, the network  is a WAN or LAN and the mobile data network  is communicatively coupled to the network . In another example, the site A is a business site and the mobile phone  is physically present at the site A. The business site has a Wi-Fi network and the mobile phone connects to the network  using the Wi-Fi network.","A person having ordinary skill in the art will recognize that there are many ways for the mobile phone  to connect to the network , and that the examples described above are illustrative, but not limiting, of the scope of the present invention.","Although only a single switch A is shown in , those skilled in the art will recognize that a particular site such as the first site A may include a plurality of switches . The switches A, B will be described in more detail below with reference to . In one embodiment, the switch A includes a Call Application Server  (\u201cCAS \u201d). The CAS  is depicted with a dotted line to depict that it is an optional feature of the switch A. The CAS  is described in U.S. patent application Ser. No. 12\/985,326, the entirety of which is hereby incorporated by reference and referred to herein as \u201cthe Unified Communication application.\u201d A person having ordinary skill in the art will recognize that the CAS  is distinct from the CAS protocol described above.","Site A","The first site A includes a server , a switch A, a storage device  and eight endpoints (analog phone , IP phone A and software phone , a conference bridge , an email client , a web client , a Mobile Call Manager  (\u201cMCM \u201d) and a Personal Call Manager  (\u201cPCM \u201d).","In the depicted embodiment, the server  comprises a Telephony Application Programming Interface  (\u201cserver-side TAPI \u201d), a Telephony Management System  (\u201cTMS \u201d) and an Enterprise Contact Center module  (\u201cECC \u201d).","In one embodiment, the server  comprises the CAS . The CAS  is depicted with a dashed line in  to indicate that it is an optional feature of the server . In one embodiment, the CAS  is comprised in the switch A. In another embodiment, the CAS  is comprised within the switch A of the first site A and\/or the switch B of the second site B. In yet another embodiment, the system  does not include the CAS .","The CAS , the TAPI , the TMS , the web client , the MCM  and the endpoints A,  are described in the Unified Communication application. These descriptions are incorporated by reference in this application and will not be repeated here. In one embodiment, the first site A includes and\/or is communicatively coupled to features not depicted in . In one embodiment, the first site A includes one or more of a collaboration services device, a voicemail server, a Client Server Internet Service server (\u201cCSIS server\u201d) and one or more of the elements depicted in  of the Unified Communication application. The collaboration service device, voicemail server, CSIS server and the elements depicted in  of the Unified Communication application are described in the Unified Communication application. These descriptions are incorporated by reference in this application and will not be repeated here. In one embodiment, the system  includes a conventional email server (not depicted in ).","The analog phone  is a device known to those having skill in the art. The conference bridge  is telephony device that connects conference calls. In one embodiment, the conference bridge  stores a reservation module  and connects conference calls and provides other features as described below with reference to , B, C, A and B. In one embodiment, the conference bridge  connects conference calls without communicating with the ECC . In another embodiment, the PCM  and the reservation module  are stored on the server . In yet another embodiment, the PCM  and the reservation module  are stored in the agent device.","The PCM  is described in the Unified Communication application which is incorporated by reference, so that description will not be repeated here. The difference between the PCM  depicted in  and the PCM described in the Unified Communication application is that the PCM  depicted in  includes a reservation module  that communicates with the ECC  and different endpoints , , , , , ,  to provide the functionality described below. Specifically, the reservation module  is described below with reference to .","In one embodiment, the web client , the PCM , the reservation module  and\/or the MCM  is stored on a non-transitory memory (not pictured) of a processor-based device such as a personal computer, a smartphone, etc and executed by the processor (not pictured) of that device. Accordingly, in one embodiment one or more of the web client , MCM  and the PCM  (and the reservation module  included in the PCM ) are comprised within an endpoint such as a personal computer, smartphone, mobile phone, server etc.","The switch A represents a Voice over Internet Protocol (VoIP) device to which a number of endpoints can be coupled, such as one or more of endpoints , A, , . In one embodiment, the switch A is comprised within the server  so that the server  can provide the functionality of the switch A. For example, in one embodiment the sever  stores computer code and routines on a memory (not pictured) that is executable by a processor (not pictured) to provide the functionality of the switch A (i.e., the sever  stores and is configured to execute a softswitch and\/or a virtual switch). In another embodiment, electronic circuits are comprised within the server  and configured to provide the functionality of the switch A. A person having ordinary skill in the art will recognize that there are other ways for configuring the server  so that the server  provides the functionality of the switch A.","In one embodiment, the CAS  is comprised within the switch A and a protocol adapter  is communicatively coupled to the switch  via signal line . Signal line  is depicted with a dashed line to indicate that it is an optional feature of the system . The protocol adapter  is described in the Unified Communication application which is incorporated by reference, so that description will not be repeated here.","An endpoint enables a user to carry on a communication. A communication includes any communication possible using the endpoints , , , , , , ,  of . For example, a communication includes a telephone call, an email, a chat, a video conference, etc. Although in the illustrated embodiment the first site A has eight endpoints , A, , , , , , , in other embodiments the first site A has different numbers and types of endpoints. Examples of endpoints not depicted in  that can be comprised within the first site A include a video conferencing device, a Multipoint Control Unit (\u201cMCU\u201d), an Analog Terminal Adapter (\u201cATA\u201d) and any other device that originates and\/or terminates a media stream. An endpoint is coupled to the switch A, the server A or both. Each of the endpoints can also include a display device (not shown) that is used in conjunction with the phone of the endpoint.","In one embodiment, the conference bridge  is adapted to have the functionality of a switch A. For example, the conference bridge  includes hardware that provides the conference bridge  with the functionality of a switch A. Such hardware includes, for example, one or more electronic circuit boards, one or more processors and\/or a non-transitory storage device (e.g., flash memory, hard drive, etc.) storing data and\/or software (e.g., a call manager as depicted in , element ), and these components are configured to work together with the other components of the conference bridge so that the conference bridge  has the functionality of a switch A. In another embodiment, the conference bridge  has, among other things, a processor and a non-transitory storage memory that stores a call manager  that, when executed by the processor, causes the conference bridge  to have the functionality of a switch A.","In one embodiment, an endpoint , , ,  has a user interface to send data to and receive data from a user. The analog phone  has, for example, a Telephone User Interface (\u201cTUI\u201d) that sends data through a speaker and receives data through a microphone and a keypad. The IP phone  has, for example, both a TUI and a Graphical User Interface (\u201cGUI\u201d) that sends data through a display device associated with the IP phone . In one embodiment, the IP phone's graphical user interface also receives data from a touch screen display device associated with the IP phone . The software phone  has, for example, a software application that runs on a computer and sends data through a display device and a speaker and receives data through a microphone, a keyboard and a pointing device. A person having ordinary skill in the art will recognize that other user interfaces are possible for the endpoints , , , , , , , . In one embodiment, for example, one or more endpoints are communicatively coupled to a computer monitor that acts as the display for the endpoint (e.g., a softphone , email client , web client  and\/or PCM  is stored and executed by a personal computer communicatively coupled to a computer monitor to display GUIs for the endpoint).","The server  is configured to implement features or functions of the telephony system in accordance with the present invention. The server  is communicatively coupled to the network , the first switch A, the email client , the storage device , the web client , the MCM  and the PCM . In one embodiment, the server  is communicatively coupled to the PSTN  via signal line . In another embodiment, the server  includes the CAS  and is communicatively coupled to the protocol adapter  via signal line . In yet another embodiment, the server  is communicatively coupled to the second switch B.","As described above, the server  includes the TAPI , the TMS  and the ECC . The server  optionally includes the CAS . The TAPI , TMS , ECC  (and optionally the CAS ) are communicatively coupled to one another.","The server  implements a server architecture according to one embodiment of the present invention. The server  includes a processor (not pictured). The processor is a conventional processing device, such as a general-purpose microprocessor. The server  also includes a non-transitory computer-readable memory (\u201cthe memory\u201d or \u201ca memory\u201d). The memory includes program instructions or functional units that in one embodiment implement features of the present invention. Specifically, in one embodiment the TAPI  and a TMS  are stored in a memory of the server  along with a directory unit (not pictured). In one embodiment, the memory also includes one or more application units that interact with the TAPI  and the TMS  to enable a specific computer-integrated function. An application unit uses the TAPI  to exchange data with the TMS . The TMS  communicates with and manages one or more switches . For example, with reference to , the TMS  included in the server A manages the switches A, B. Through the TAPI , the TMS  presents an application with Computer-Telephony Integration (\u201cCTI\u201d) view of these switches A, B. The application manages the switches A, B. Switches A, B operate without an associated TMS  if CTI features are not being used.","In one embodiment, the server  has a user interface to send data to and receive data from a user. The user interface interacts with the TMS  in order to allow a user with administrative rights to manage the switches A, B, change the configuration settings of the switches A, B, queue criteria described below with reference to , the configuration data described below with reference to  and\/or the login data described below with reference to . The user can access the user interface at the server . For example, the server  stores and executes a conventional web browser application. The server serves a web page including the user interface. The user accesses the user interface via the web browser. The user changes the configuration settings, queue criteria, configuration data and\/or the login data using the user interface.","In one embodiment the server  includes an application unit and\/or a directory unit. The application unit assists the switch A in providing one or more phones (e.g., phones , A, B ) communicatively coupled to the switch A (directly or indirectly) with access to PBX applications (e.g., among others, instant messaging, collaboration tools, sidebar conversations between two or more users during ongoing PBX calls, chat sessions between two or more users and\/or APIs for integrating third party applications with the standard PBX functions provided by the switch A). For example, the application unit is data and routines stored on a non-transitory computer-readable medium comprised within the server . In one embodiment, one or more of the application unit and directory unit is comprised within the CAS .","In general, the directory unit enables a phone to access a directory and use the directory in conjunction with other phone functions. In one embodiment, the directory unit is implemented as a service that interacts with TMS . In another embodiment, the directory unit is comprised within the CAS . Communication or data exchange is between the TMS  and the directory unit. The directory unit can be distributed among computing devices as is known to one of skill in the art. For example, the functionality enabled by directory unit can be implemented in a client-server fashion by having the client (user's local system, such as a general-purpose computer or endpoint) perform some functions and having the server  (directory unit) perform others. As another example, some or all of the functionality enabled by the directory unit can be implemented by having a switch A perform some or all functions. In one embodiment, the communication or data exchange is between a client and CAS .","The ECC  is computer code and routines stored on a non-transitory computer-readable medium (not pictured) comprised within the server  and executable by a processor (not pictured) of the server  provide third party users with: (1) an automated and\/or interactive communication experience based on a script executed by an automated attendant or an Interactive Voice Response module (\u201cIVR\u201d) stored on the server  or the switch A; (2) a communication experience with a live human user of an endpoint , , , , , , , ; or (3) a combination of an automated and\/or interactive communication experience and a communication experience with a live human user of an endpoint , , , , , , , . Embodiments of other endpoints with a live human user, the automated attendant, IVR and script are described in the application having U.S. patent application Ser. No. 12\/895,729 and entitled \u201cCALL RECOVERY,\u201d the entirety of which is hereby incorporated by reference in the present application. In one embodiment, the ECC  is the ShoreTel Enterprise Contact Center application offered by ShoreTel\u2122 of Sunnyvale, Calif.","In one embodiment, the ECC  is configured to make outbound calls. For example, the ECC  makes outbound calls that are connected to reserved agents of the endpoints , , , , , , , . This embodiment is described in more detail with reference to .","In one embodiment, communications with the ECC  include one or more of the third party user, an IVR, an automated attendant and an agent. A third party user is any human user that communicates with the ECC  and is not an agent. The third party user communicates with the ECC  using a communication device such as a mobile phone, POTS phone, IP phone, chat application, email client, etc. In one embodiment, the third party user initiated communication with the ECC . For example, the third party user is a customer calling a customer service call center. In another embodiment the ECC  initiates the communication with the third party user. For example, the ECC  calls the third party user to collect political polling data from the third party user (i.e., the ECC  plays a script that is configured to collect political polling data). An agent is a human user associated with an endpoint , , , , , , ,  at the first site A or the second site B. For example, the first site A is a customer support call center and the third party user is a customer that initiates communication with the call center by calling the ECC . The ECC  plays an IVR script for the third party user to determine, among other things, how the communication should be routed, i.e., which agent at the first site A should handle the communication with the third party user.","In one embodiment, the ECC  gathers and stores data about the third party user. This data is referred to herein as \u201ccommunication data.\u201d In one embodiment, the communication data includes one or more of: (1) a communication identifier; (2) the topic of the communication; (3) a time at which communication was received by the ECC ; (4) the progress of the call in an automated attendant or IVR script; (5) the form of the communication (e.g., any combination of an audio call, a video call, an email or a chat); (6) a time at which the communication ended; (7) an indication that the communication is important (e.g., the communication involves an important client, the communication is an important sales call, etc.); and (8) the name of a user or customer the call is for. If the communication is a telephone call, then the communication identifier is a call identifier including information for calling the customer back (e.g., a telephone number, SIP address, etc). If the communication is an email, then the communication identifier is an email address. If the communication is a chat, then the communication identifier is a chat address. In one embodiment, the ECC  initiates communication with the third party user using the communication identifier. For example, if a telephone call between the third party user and the ECC  is terminated, the ECC  uses the communication identifier to call the third party user back for a contact back event. A contact back event is described with reference to . The ECC  then automatically connects the call with a reserved agent. This embodiment is described in further detail with reference to . In another embodiment, the communication identifier is provided to an agent that then uses the communication identifier to call the third party user back (e.g., a contact back event). Persons having ordinary skill in the art will recognize that other communication identifiers not listed above are possible for telephone calls, emails and chats. Such a person will also recognize that other forms of communication are possible, such as video calls, web and\/or audio conferences, etc, and these communication forms have other communication identifiers not listed above.","In one embodiment, the ECC  gathers the communication data based on the third party user's answers to the script executed by the automated attendant and\/or the IVR. The third party user and the ECC  communicate via one or more of a telephone call, chat, email, video conference, etc. In one embodiment, the ECC  includes different scripts for these different forms of communication. Thus, the communication experience provided by the ECC  includes one or more of a telephone call, a chat, an email, a video conference, etc. The ECC  executes the script and collects the communication data. In one embodiment, the ECC  is communicatively coupled to the storage device  and stores the communication data in a communication data unit described with reference to  (i.e., communication data unit ). The ECC  determines how to route the communication based on the communication data, e.g., which agent the call should be routed to. In one embodiment, the agents are geographically present at a call center. In another embodiment, one or more of the agents are remotely located and not physically present at the call center. In one embodiment, a simulation module  comprised within the reservation module  simulates call strings using the communication data and\/or other data.","A call center is a grouping of resources that respond to inbound communications and place outbound communications. In one embodiment, the first site A is a call center. For example, the first site A is a customer service call center. A human user of the POTS phone  calls the customer service call center. The ECC  receives the call via the switch A and does one of the following: (1) connects the call to an automated attendant or IVR; (2) connects the call to a human user of an endpoint at the first site A or an associated site (e.g., second site B); or (3) connects the call to automated attendant or IVR for a period of time and then transfers the call to a agent device associated with an endpoint at the first site A or an associated site. Thus, the ECC  determines how incoming communications are handled by the call center. In one embodiment, for step (2) described above, the ECC  determines a human user having an appropriate skill set to handle the call and connects the call to that human user. For example, the ECC  determines what the subject matter of the call is, accesses a stored database having a record of the skill sets for the different human users, determines a user having an appropriate skill set that matches the subject matter of the call and connects the call to that determined human user. Persons having ordinary skill in the art will recognize other features of the call center .","In one embodiment, the ECC  is stored on the switch A and executed by a processor of the switch A.","The storage device  is a non-transitory computer readable medium that stores, for example, directory information (not pictured) and\/or other information described with reference to . The directory information includes directory entries and associations between directories and phones. In one embodiment, the storage device  also includes information regarding which users have administrative rights to access the server's user interface and make changes to data stored in the storage device  or other memories comprised within the server  and\/or the switches A, B. The storage device  is described in more detail with reference to .","Site B","The second site B includes an IP phone B and a switch B. The IP phone B is an endpoint. The switch B is communicatively coupled to the network  and the IP phone B. In one embodiment, the CAS  is comprised in the switch B. In another embodiment, the second site B includes different and\/or additional endpoints. For example, the second site B includes one or more of the endpoints , , , , , , . The elements of the second site B work similar to the elements of the first site A described above, and so, that description will not be repeated here. Similar elements have similar reference numerals.","A person having ordinary skill in the art will recognize that in one embodiment, the system  includes one or more third party servers (not shown) similar to server  that provide, among other things, third-party applications to the endpoints , , , , , , ,  via the network . For example, in one embodiment the third party server includes a CAS plug-in as described in the Unified Communication application.","Reference is made below to an agent device. An agent device is a hardware device including any of the endpoints described endpoints described above for . For example, an agent device is an analog phone , an IP phone , a POT phone , a mobile phone , a bridge  (for instances where the bridge is a hardware bridge ) or a processor-based hardware device that stores and executes a software phone , a bridge  (for instances where the bridge  is a virtual bridge), an email client , a web client , an MCM  and a PCM . In one embodiment, the agent device includes an extension for the agent device.","Switch ","Referring now to , an embodiment of the switch  according to one embodiment of the present invention is shown. In one embodiment, the switch A includes one or more processors (not shown). The processor can be a conventional processing device, such as a general-purpose microprocessor. In a different embodiment, the switch  does not include a processor but is instead controlled by a processor comprised within a server  at the same site A and\/or a server  at a different site  (e.g., site B).","The switch  also includes a non-transitory computer readable memory (e.g., flash memory). The memory stores, among other things, software and routines (not shown) conventionally used to operate a switch  in a VoIP telephony system . For example, the switch  includes software routines for performing call monitoring, transferring calls, placing calls on hold, establishing hunt groups, automated attendant functions, call setup, call teardown, etc. The memory also stores program instructions or functional units that implement the features of the present invention. The switch  also includes a switch storage module  and a call manager .","The switch storage module  is a memory for storing data and information. For example, the switch storage module  stores data and information utilized by the call manager  to perform its functions. In one embodiment, the switch storage module  is a tangible, non-transitory computer readable memory (e.g., flash memory). The switch storage module  is communicatively coupled to the call manager  via signal line . In one embodiment, the switch storage module  is a portion of the memory of the switch .","A device, such as the processor of the switch , runs the call manager  software application and is coupled to and controls one or more endpoints (e.g., , A, B, , , ) with which it is associated. While shown as operational and as part of the switch  in , in other embodiments the call manager  is operational as a separate module in a site A or as part of a server  or conference bridge .","Although in the illustrated embodiment site A has only one call manager  comprised within the switch , in other embodiments the site A has a different number of call managers . In one embodiment, more than one call manager  can control the same endpoint , , A, B, . The association between a call manager  and an endpoint , , A, B,  that it controls is accessed through the server . In one embodiment, the second switch B includes its own call manager  and switch storage  similar to the first switch .","In one embodiment, the trunk  is a SIP trunk and provides connectivity to SIP-compatible devices. One having ordinary skill in the art will recognize that network  also provides connectivity for SIP-compatible devices.","As shown in , the call manager  is coupled to the PSTN or SIP trunk  and the network . The call manager  comprises: an extension module ; a trunk module ; a location service engine ; and a bandwidth manager . In one embodiment, the manager module  described above is a module comprised within the call manager .","The extension module  communicates with endpoints coupled to the call manager  in order to allow a user to perform call-related functions on an endpoint. In addition, the extension module  is used to communicate with other call managers  in the telephony system .","The trunk module  is coupled to and controls the interaction between the endpoints ,  and  and the PSTN or SIP trunk . In particular, the call manager \/switch  is often coupled to a trunk line. The trunk module  of the call manager  manages the usage of the trunk line by multiple endpoints ,  and  and optimizes the usage of the trunk line. The trunk module  also manages trunk services such as caller identification, direct inward dial, etc.","The location service engine  resolves the dialed numbers (converts raw dialed digits into routable contacts) and routes the call to the destination endpoint such a phone, trunk, hunt group, auto attendant, pickup group etc.","The bandwidth manager  is coupled to the network  and allocates bandwidth necessary to support calls handled by the call manager .","In one embodiment, one or more of the above described components of the call manager (i.e., the extension module , trunk module , location service engine , bandwidth manager ) are codes and routines stored on a memory comprised within the switch  and executable by the switch's processor to provide the functionality described above.","In another embodiment, one or more of the above described components of the call manager  are a specialized hardware devices configured to perform the function of the particular components. For example, one or more of the manager module , schedule module , extension module , trunk module , location service engine  and bandwidth manager  is a combination of one or more electronic circuit boards configured to provide the above-described functionality for that component. In one embodiment, the one or more electronic circuit boards that comprises the component includes one or more of: (1) a processor; (2) a non-transitory computer-readable memory (e.g., flash memory, a hard-drive, a buffer, a circular buffer, etc.) communicatively coupled to the processor; and (3) processor-executable firmware stored on the non-transitory memory.","Reservation Module  and Storage Device ",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 3","b":["144","140","144","141","125","142","118","190","130","333","144","121","122","123","124","125","136","138","130","306","308","310","311","312","316","144","125","142","118","190","130","333","144","139","140","306","308","310","311","312","316","144","301","302","303","304","305","140","306","308","310","316","144","306","308","310","316","139","306","308","310","316","139","301","302","303","304","305","311","312","144","399","399","139","311","312","316","142"]},"The storage device  is communicatively coupled to the ECC  and the reservation module  (as well as the modules , , , , ,  of the reservation module ). The storage device  is a non-transitory memory that stores data and\/or information used by the PCM , the reservation module  and\/or the ECC  to perform their functions. The storage device  comprises: a communication data unit ; a queue data unit ; a configuration data unit ; a GUI data unit ; and a login data unit . The storage device  is communicatively coupled to the PCM , the reservation module  and the ECC . The storage units , , , ,  are non-transitory memories that store data and\/or information. In one embodiment, the storage units , , , ,  are communicatively coupled to one another, the ECC  and the reservation module  via a second bus . The communication data unit  stores communication data. The communication data is described above with reference to the ECC . The queue data unit  stores queue data. The queue data is described below with reference to the queue module . The configuration data unit  stores configuration data used by the GUI module  to generate GUIs. The configuration data includes, for example, user preference for which data (e.g., call strings, icons, buttons, etc.) should be displayed in GUIs generated by the GUI module . The configuration data is described below with reference to the GUI module . The GUI data unit  stores various data described below with reference to . In one embodiment, the GUI data includes graphics data necessary to generate the GUIs depicted, for example, in . The login data  stores login data used by the login module  to authenticate an agent device to the reservation module . The login data is described below with reference to the login module . In one embodiment, the login data  authenticates a participant device to the reservation module  using methods similar to authenticating an agent device. As described below, a participant device is any hardware device capable of connecting to a conference call as described herein.","The reservation module  comprises: a tracking module ; a queue module ; a monitor module ; a simulation module ; a GUI module ; and a login module . In the depicted embodiment the reservation modules , , , , ,  are communicatively coupled to one another. The reservation modules , , , , ,  are coupled differently in other embodiments. In one embodiment, the reservation module  is comprised in the PCM  and the PCM  is stored in a memory of a processor-based computing device (e.g., a processor-based client device). The processor of the computing device executes the reservation module  and the sub-modules of the reservation module .","The tracking module  is code and routines stored on a non-transitory memory (not pictured) and executed by a processor (not pictured) for identifying communications, detecting queue events and transmitting an indication of the queue events to the queue module . In one embodiment, the tracking module  is comprised in the reservation module . In another embodiment, the tracking module  is comprised in the ECC . As described above, the tracking module  detects queue events. A queue event is an indication that a third party should be contacted by an agent. The tracking module  communicates with the ECC  and\/or the TMS  through the TAPI  to determine queue events. In one embodiment, the ECC  determines that a communication is terminated by a third party user and the tracking module  determines a queue event responsive to the termination. For example, a third party user communicates with the ECC  via a telephone call. The tracking module  communicates with the ECC  and\/or the TAPI  to track this call. The ECC  determines that the third party user terminated the call. The ECC  and\/or TAPI  communicates this termination event to the tracking module . The tracking module  generates a queue event responsive to the termination event. The tracking module  communicates with the queue module  to send the queue event to the queue module . As described below, this queue event triggers a contact back event (described below, for example, with reference to the simulation module  and the GUI module ). A person having ordinary skill in the art will recognize how this same example is applicable to video conference calls and calls received from a user of a mobile phone . In one embodiment, the tracking module  determines queue events for chat communications. For example, a third party user communications with the ECC  (and\/or an agent) via a chat session. The tracking module  communicates with the ECC  to track this call. The ECC  determines that chat session is terminated. The ECC  communicates this termination event to the tracking module . The tracking module  determines a queue event responsive to the termination event. The tracking module  communicates with the queue module  to send the queue event to the queue module . The queue event triggers a contact back event.","The queue module  is code and routines stored on a non-transitory memory (not pictured) and executed by a processor (not pictured) for generating and maintaining queue data that is stored in the queue data unit . In one embodiment, the queue module  is comprised in the reservation module . In another embodiment, the queue module  is comprised in the ECC . The queue module  receives a communication from the tracking module  reporting a queue event. The queue module  is communicatively coupled to the communication data unit . The queue module  retrieves the communication data from the communication data unit . The queue module  uses the communication data to generate the queue data. The queue data includes an ordered list of communication identifiers (\u201ca contact back list\u201d). The contact back list is ordered based on one or more predetermined criteria that are stored in the configuration data unit . In one embodiment, the predetermined criteria are provided by an administrator or any human user having sufficient access rights to provide the access criteria. For example, an administrator having certain access rights accesses the interface of the server  (described above) and provides one or more criteria for ranking the communication identifiers in the queue data. The criteria can include receipt order (the time at which a communication was received at the ECC , with communications received earliest being ranked higher or lower based on this criteria), termination order (the time at which a communication was terminated at the ECC , with communications terminated earliest being ranked higher or lower based on this criteria), importance order (how important the other party in the communication is), or any combination of the above (e.g., communications received earliest in time by the ECC  are ranked higher, but communications identifiers for important parties are ranked in a higher order than other communications identifiers that are not indicated as important in the tracking data).","In one embodiment, the contact back list includes any combination of the communication data described above with reference to the ECC . For example, the contact back list includes the communication identifier, an indication of the topic of the initial communication between the ECC  and the third party user and an indication that the third party user is important.","In one embodiment, the ECC  attempts to communicate with a third party user based on the ordering of the contact back list (referred to herein as \u201ca contact back event\u201d). For example, the contact back list includes a telephone number for a third party user and an indication of the topic of the initial call between the ECC  and the third party user. The ECC  attempts to communicate with a third party user with the highest ranked communication identifier in the contact back list and connect a reserved agent on the call with the third party user, for example, using a GUI and a simulated TAPI call string described below with reference to the simulation module  and the GUI module . The reservation module  presents a reserved agent with a GUI having depicting a simulated communication between the agent and the third party user. The agent attempts to communicate with the third party user. In one embodiment, the agent has the option to decline to attempt communication with the third party user. In another embodiment, the agent does not have this option. The simulated communication is described in more detail below with reference to .","The monitor module  is code and routines stored on a non-transitory memory (not pictured) and executed by a processor (not pictured) for (1) accessing the contact back list stored in the queue data unit  to determine whether to initiate a contact back event and (2) communicating with the switch A, ECC  and\/or the TAPI  to reserve an agent for the contact back event. In one embodiment, the monitor module  is comprised in the reservation module . In another embodiment, the monitor module  is comprised in the ECC . In one embodiment, the monitor module  initiates a contact back event for a first highest ranked communication identifier in the contact back list.","In one embodiment, the monitor module  deletes the first highest ranked communication identifier after a predetermined number of attempts to communicate with the first highest ranked identifier. The predetermined number of attempts is based on the configuration data described with reference to  below. For example, the configuration data includes data defining the number of predetermined attempts. In one embodiment, different attempts to communication with the first highest ranked communication identifier can be of a different form of communication (e.g., a first attempt is via telephone call, a second attempt is via email, a third attempt is via chat, and so on). The monitor module  deletes the first highest ranked communication identifier from the contact back list. The contact back list is refreshed so that a second highest ranked communication identifier is present in the contact back list. In one embodiment, the contact back list is refreshed after the first highest ranked communication identifier is deleted. The second highest ranked communication identifier is the highest ranked communication identifier in the contact back list after (1) deleting the first highest ranked communication identifier from the contact back list and, optionally, (2) the tracking module  adding new communication identifiers to the contact back list. This process is repeated so long as communication identifiers are present in the contact back list.","As described above, the monitor module  also reserves an agent for the contact back event. The agent is a human user of any endpoint communicatively coupled to the reservation module . For example, the agent is a human user of any endpoint at the first site A, the second site B, the POTS phone , the mobile phone  and\/or a personal computer (not pictured) that stores and executes a endpoint similar to the web client , PCM , software phone , email client  and\/or any other endpoint capable of communication with the reservation module . In one embodiment, the monitor module  monitors endpoints to determine agents that are available to participate in a contact back event. For example, the switch A stores information (e.g., on switch storage ) about which devices are currently being used and the monitor module  communicates with the switch A to determine which agents are available to participate in a contact back event. In another embodiment, the monitor module  monitors agents by communicating with the TAPI  to determine which agents are available. An available agent is any agent that is not currently engaged in communication and is present at an endpoint. In one embodiment, an agent is \u201cnot currently engaged in communication\u201d if no calls are currently forwarded to the agent by the ECC . In another embodiment, an agent is present at an endpoint if the agent is logged into the endpoint. In yet another embodiment, the agent is present at an endpoint if the agent is one or more of (1) logged in to an endpoint and (2) the ECC  has forwarded one or more calls to the agent. In one embodiment, an agent can enter a released state that prevents the ECC  from forwarded calls to the agent (e.g., if the agent needs to take a break from work, the agent provides an input indicating to the ECC  and\/or reservation module  to place the agent in the released state). A released state is a \u201cbetween calls\u201d state an agent enters when doing something not related to servicing the workgroup. The monitor module  places an available agent in a reserved state (also referred to herein as \u201ca reserved agent,\u201d and\/or \u201can agent reserved for callback state\u201d). A reserved agent is an agent that is identified by the monitor module  as available and is placed in a reserved state by the monitor module . In one embodiment, the ECC  attempts to communicate with the third party user associated with the highest ranked communication identifier after the reserved agent accepts an invitation to participate in the contact back event. In another embodiment, ECC  attempts to communicate with the third party user associated with the highest ranked communication identifier automatically after the reserved agent is in a reserved state for a predetermined period of time.","In one embodiment, the monitor module  communicates with the simulation module  and\/or the GUI module . For example, the monitor module  sends an indication of the call back event to simulation module  so that the simulation module  knows to begin simulating call strings for the contact event. Similarly, the monitor module  sends an indication of the contact back event to the GUI module  so that the GUI module  is triggered to generate and send events describing a desired GUI state to a display-enabled endpoint associated with the reserved agent. In another embodiment, the monitor module  communicates with the ECC  to indicate that the agent is in a reserved state, and the ECC  communicates with the simulation module  and\/or the GUI module  to trigger the actions described above for the simulation module  and the GUI module .","In one embodiment, the monitor module  places the agent in the reserved state without having received a notification from the TAPI  (\u201ca TAPI notification\u201d) that the third party user is calling the reserved agent. This embodiment is described in greater detail in the description of the GUI module . In one embodiment, the third party user does not call the reserved agent directly. In this embodiment the third party user calls the ECC  and the ECC  connects the third party user to the reserved agent.","The simulation module  is code and routines stored on a non-transitory memory (not pictured) and executed by a processor (not pictured) for generating simulated communication information (i.e., simulated TAPI information, simulated email information, simulated chat information, etc). In one embodiment, the simulated call information is simulated TAPI information (e.g., \u201ca simulated TAPI caller identification string\u201d or \u201ca simulated TAPI call string\u201d). A simulated TAPI call string is a string of data that is configured to look like an actual TAPI call string when in fact no TAPI call is actually ongoing for the simulated TAPI call string. The simulation module  is communicatively coupled to one or more of the ECC , the monitor module , the GUI module  and the storage . The simulation module  receives an ECC call string (\u201cECC call string\u201d) from the ECC . In one embodiment, the ECC call string indicates to simulation module  that a contact back event is occurring. The simulation module  generates the simulated TAPI information using the ECC call string received from the ECC .","In one embodiment, the simulated TAPI information is a group of one or more objects. When a call is simulated the one or more objects are initialized and filled with values from the ECC call string and\/or call information such as \u201cwhich customer are we being reserved for\u201d, etc. Later, when the call is actually made, the one or more objects are refreshed with the non-simulated TAPI data for the actual call. For example, the TAPI  provides the following TAPI information that is used to refresh the objects: (1) a caller ID and routing information or (2) a routing slip (e.g. \u201cthird party user A called ECC , ECC  transferred the call to agent B, agent B put the call on hold, agent B retrieved the call after a period of time on hold\u201d). In one embodiment, there is no TAPI call when the agent is in the reserved state and the system  uses the ECC identifier to generate the ECC call string instead of using the TAPI identifier. The ECC identifier is generated by the ECC  when the agent is reserved. In this embodiment, the system  also does not have a caller ID, so, the system  uses the ECC routing number along with the ECC identifier to generate the ECC call string.","In one embodiment, the simulated TAPI information includes a simulated TAPI call string for a \u201csimulated call\u201d (or a \u201cvirtualized call\u201d). A simulated call (i.e., \u201ca virtualized call\u201d) is a call appearance generated using the simulated TAPI call string.","In one embodiment, the simulation module  is communicatively coupled to the TAPI . The simulation module  places the simulated TAPI call string in a call tracker array of the TAPI . A person having ordinary skill in the art will recognize that the call tracker array is a component of the TAPI . The simulated TAPI call string is picked up by the other components of the PCM  without the other components of the system  knowing that the TAPI call string is for a virtualized call. For example, the GUI module  (described below) then picks up the simulated TAPI call string so that it is displayed in a GUI generated by the GUI module . In one embodiment, the simulated TAPI call string is stored in one or more of the GUI data unit and the call tracker array.","In one embodiment, the simulation module  generates simulated email information based off an email address received from the ECC . The simulated email information is a call string that includes information describing a simulated email communication between the reserved agent and the third party user. For example, the simulated email information is the call string  depicted in .","In one embodiment, the simulation module  generates simulated chat information based off a chat address received from the ECC . The simulated chat information is a call string that includes information describing a virtualized chat communication between the reserved agent and a third party user. For example, the simulated chat information is the call string  depicted in .","The GUI module  is code and routines stored on a non-transitory memory (not pictured) and executed by a processor (not pictured) for generating a GUI. In one embodiment, the GUI module  is communicatively coupled to the storage device , the TAPI  and a display device of an endpoint associated with the reserved agent. In one embodiment, the GUI module  generates a GUI based on one or more GUI inputs. The GUI inputs include one or more of: (1) the GUI data stored in the GUI data unit , (2) the simulated communication information; (3) the queue data stored in the queue data unit ; (4) the configuration data stored in the configuration data unit ; (5) data received in a communication with the ECC  indicating that an agent is in a reserved state; (6) data received from the monitor module  indicating that the agent is in a reserved state; and (7) a TAPI notification received from the TAPI . For example, the GUI module  generates a GUI such as those depicted in  and B based on data, information and\/or TAPI notification described above.","In one embodiment, the GUIs generated by the GUI module  are displayed on a display device of one or more of the endpoints , , , , , , . In one embodiment, the GUI module  is communicatively coupled to the endpoints , , , , , ,  to provide the GUI data necessary to generate these GUIs.","In one embodiment, the GUI generated by the GUI module  includes one or more of the following features: (1) a reserved communicator call cell; (2) an icon in the reserved communicator call cell to indicate the agent is in a reserved state; (3) an icon in the reserved communicator call cell to indicate the form of the connection; (4) a communicator call string in the reserved communicator call cell including data specified by the configuration data (described below); (5) an icon in the reserved communicator call cell to indicate that the reserved agent has an option to participate in the contact back event; (6) an icon in the reserved communicator call cell to indicate that the reserved agent does not have an option to decline to participate in the contact back event; (7) a window including a button that is clickable by the reserved agent to participate in the contact back event; (8) a window including a button that is clickable by the reserved agent to decline to participate in the contact back event; (9) a key to help the agent to understand the call string; (10) a notification bubble reminding the reserved agent to use an email client stored on and executed by an personal computer of the reserved agent to retrieve email messages from the email server (not pictured); and (11) an interface to change the configuration data stored in the configuration storage unit.","The GUI data stored in the GUI data unit  includes graphics data necessary to generate a GUI including one or more of the above described features, as well as all of the features depicted in . The GUI module  accesses the configuration data stored in the configuration data unit  to determine which features to include in different GUIs generated by the GUI module . In one embodiment, the GUI module  generates a GUI used by a human user to input the configuration data stored in the configuration data unit  (see, for example, , element ).","A reserved communicator call cell is a call cell generated by GUI module  and displayed on the display device of an endpoint used by the reserved agent. The reserved communicator call cell indicates that an agent is in a reserved state. The reserved communicator call cell is displayed on the display device of the endpoint during the delay period (the delay period is described below). If the reserved agent clicks the accept button the reserved agent is connected on a call with the ECC . In one embodiment, the connected call with the ECC  also includes a third party user associated with the highest ranked communication identifier. The GUI module  generates a connected communicator call cell. In one embodiment, the connected communicator call cell includes, among other things, an icon to indicate that the reserved agent is connected on the call with the ECC .","In one embodiment, the reserved communicator call cell is a GUI item that the reserved agent uses to interact with the contact back event. The reserved communicator call cell includes all the graphical buttons necessary to interact with the contact back event. For example, reserved communicator call cell includes one or more of (1) a button the agent can click (e.g., with a mouse) to participate in the contact back event (\u201can accept button\u201d or \u201can answer button\u201d) and\/or (2) a button the agent can click to decline to participate in the contact back event (\u201ca decline button\u201d). In another embodiment, the reserved communicator call cell integrates data received from the ECC along with data received from the PCM  and\/or the TAPI . For example, the reserved communicator call string included in the reserved communicator call cell includes (1) both TAPI information (e.g., the simulated TAPI call string) and ECC information (e.g., an ECC call string) or (2) a portion of the TAPI information and a portion of the ECC information (this is referred to herein as \u201ca combination call string\u201d). In one embodiment, the simulation module  generates the combination call string. One skilled in the art will recognize that other GUI features may be used as alternatives to clickable buttons (e.g., icons, links, tabs, text-fillable fields, drop down boxes, etc.).","As described above, in one embodiment the monitor module  places the agent in the reserved state without having received a notification from the TAPI  (\u201ca TAPI notification\u201d). This portion of the application continues with the description of this embodiment. The monitor module  places the agent in a reserved state and for a period of time the reserved agent is not connected on the call with the ECC . This period of time is referred to herein as \u201ca delay period.\u201d During the delay period the reserved communicator call cell includes both simulated TAPI information (e.g., such as described with reference to the simulation module ) and ECC information (e.g., the ECC call string). Because the simulated TAPI information looks like a TAPI string for a currently connected call with the ECC , the GUI presented to the reserved agent has an appearance that makes it look as though the reserved agent is currently connected on a call with the ECC  when in fact the reserved agent is not connected on a call with the ECC . This feature beneficially provides the reserved agent with a familiar graphic that communicates the appearance of an imminent call to the reserved agent.","In one embodiment, the GUI module  retrieves configuration data indicating the reserved agent does not have the option to decline the call and the GUI module  configures the GUI accordingly. For example, the GUI module  generates a GUI without a decline button. In one embodiment, in addition to indicating that the reserved agent does not have the option to decline the call, the configuration data also includes data that causes the reservation module  to automatically connect the reserved agent on the call with the ECC  after a period of time indicated by the configuration data. For example, after a period of time reserved agent is connected on the call with the ECC  and the GUI module  causes a GUI to be displayed that includes an icon in the reserved communicator call cell that indicates that the reserved agent is connected on the call with the ECC . In another embodiment, GUI module  retrieves configuration data indicating that the reserved agent has the option to decline the call and the GUI module  configures the GUI accordingly. For example, the GUI module  generates a GUI having a reserved communicator call cell with a decline button. The decline button is in the reserved communicator call cell or a window that is separate from the reserved communicator call cell.","In one embodiment, the GUI module  generates a connected communicator call cell when the reserved agent is connected on the call with the ECC . Since the reserved agent is connected on the call with the ECC , the simulated call represented by the simulated TAPI information is ended. However, the TAPI  does not send a termination notification responsive to the simulated call ending. Instead, the ECC  detects that it is connected on the call with the reserved agent. The ECC  sends an \u201cOnReleased\u201d notification to the reservation module  to indicate that the reserved agent is now connected on the call with the ECC . The \u201cOnReleased\u201d notification indicates to the reservation module  that the agent is no longer in the reserved state and the delay period is ended. The simulated TAPI call string is removed from the TAPI call tracker array and GUI module  removes the reserved communicator call cell from the display of the endpoint associated with the agent that is now connected on the call with the ECC  (the \u201cagent\u201d described here was previously described as the \u201creserved agent\u201d). In one embodiment, the GUI module  instead modifies the reserved communicator call cell so that it reflects the connected state of the call and includes data similar to a connected communicator call cell. The GUI module  communicates with the GUI data unit  to retrieve data for generating a connected communicator call cell that includes an indication (e.g., an icon) that the agent is now connected to the ECC . The GUI module  sends the GUI data (which includes data for displaying the connected communicator call cell) to the display of the endpoint associated with the agent. In one embodiment, the GUI module  receives additional information from the ECC  that is used to generate the GUI including the connected communicator call cell. This additional information is included in the displayed connected communicator call cell in addition to the information included in normal TAPI call cells. For example, element  is additional information included in the displayed connected communicator call cell.","In one embodiment, the ECC call string comprises one or more of the following ECC properties: a TAPI call identifier (e.g., a TAPI call ID); a ECC call identifier that is generated by the ECC  and\/or the reservation module  when an agent device and\/or an extension are placed in a reserved state; a call start time indicating the time when the incoming call began (e.g., when the call from the third party was received or began); a first extension number for an agent device being communicated with; and a second extension number for the ECC . The ECC  communicates with the reservation module  to signal to the reservation module  to add one or more of the ECC properties to the call (e.g., the GUI module  includes graphical representations of this data in the GUIs generated by the GUI module ).","The login module  is code and routines stored on a non-transitory memory (not pictured) and executed by a processor (not pictured) for authenticating a user to the reservation module . The login module  is communicatively coupled to the login data unit . The login module  requests a user to provide login input. The login input is any data used to authenticate the user. For example, a user ID and a password. The login module  receives a login input. The login module  communicates with the login data unit  to authenticate the login input. For example, the login data unit  stores a list of known valid login inputs and the login module  checks compares the received login input against the known valid inputs in order to authenticate the user of an agent device. In one embodiment, the login module  then reads the configuration data  to identify the agent device the user is assigned to. In one embodiment, the User ID is an extension number for an agent device and the lookup is not required. In yet another embodiment, the User ID is the user name. In one embodiment, the user is authorized to use the system based upon other means such being authenticated to a Lightweight Directory Access Protocol (\u201cLDAP\u201d) directory.","GUI Data ",{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 4","b":["304","304","402","404","406","408","412","414","304","312","304","312","312","312"]},"The call cell graphics data  includes graphics data used by the GUI module  to generate GUIs that include call cells. In one embodiment, the call cell graphics data  is used by the GUI module  to generate GUIs that include one or more of a reserved communicator call cell, a connected communicator call cell, etc. For example, the call cell graphics data is used to generate GUIs including call cells such as those depicted in A, B, C, A, B,  and B.","The icon graphics data  includes graphics data used by the GUI module  to generate GUIs that include icons. In one embodiment, the icon graphics data  is used by the GUI module  to generate GUIs that include one or more of: (1) an icon in the reserved communicator call cell to indicate the agent is in a reserved state; (2) an icon in the reserved communicator call cell to indicate the form of the connection (telephone call, email, chat, etc); (3) an icon in the reserved communicator call cell to indicate that the reserved agent has an option to participate in the contact back event; and (4) an icon in the reserved communicator call cell to indicate that the reserved agent does not have an option to participate in the contact back event. For example, the call cell graphics data is used to generate GUIs including icons such as those depicted in A, B, C, A, B,  and B.","The string data  includes graphics data used by the GUI module  to generate GUIs that include call strings. In one embodiment, the string data  is used by the GUI module  to generate GUIs that include one or more of: (1) an ECC call string; (2) a simulated TAPI call string; (3) a combination of a ECC call string and simulated TAPI call string; (4) a TAPI call string for an actual ongoing TAPI call; (5) a combination of a ECC call string and a TAPI call string for an actual ongoing TAPI call; (6) a combination of a portion of a ECC call string and a portion of a TAPI call string. For example, the call cell graphics data is used to generate GUIs including call strings such as those depicted in , B,  and .","The mobile device graphics data  includes graphics data used by the GUI module  to provide the functionality of the reservation module  to a mobile phone device .","The conference call data  includes graphics data used by the GUI module  to generate GUIs for setting up conference calls as described below for , B and C. The conference call data  includes graphical data used by the GUI module  to generate a GUI for an administrator to set up a conference call, a GUI to remind a member of a conference call about the time for the conference call, a GUI to reserve the member for the conference call and other GUIs described below for , B and C. For example, the call cell graphics data is used to generate GUIs such as the one depicted in .","The login graphic data  includes graphics data used by the GUI module  to generate GUIs for authenticating an agent device to the reservation module . The login graphic data  includes graphical data used by the GUI module  to generate a GUI for the login module to request and receive login information from an agent device. For example, the login graphics data is used to generate GUIs such as the one depicted in .","Mobile Phone ",{"@attributes":{"id":"p-0137","num":"0136"},"figref":"FIG. 5","b":["108","108","502","502","108","108","144","108","502","312","502","144","142","502","138"]},"Methods",{"@attributes":{"id":"p-0138","num":"0137"},"figref":["FIG. 6","FIGS. 7A-10"],"b":["600","144","660","700","800","900","1000","306","602","308","603","308","603","310","604","310","310","605","311","139","606","139","311","304","660"]},"In one embodiment, the general setup step  does not include steps  and . Steps  and  are depicted in  with a dashed line to indicate that they are optional features of the general setup step . For example, the monitor module  moves the agent device for an agent into a reserved state  to alert the agent that it will soon be handling an incoming customer call. The call cell is modified as the actual incoming call is connected to transition from the reserved state to the actual call. In one embodiment, during the reserve state the call cell includes data identifying the general subject matter the agent should expect the call to be about.","In one embodiment, the general setup step  reserves a pool of reserved agents. A pool of reserved agents is more than one reserved agent. For example, at step  the monitor module  identifies more than one agent and at step  the monitor module reserves  more than one of the agents identified at step . The agents reserved at step  form the pool of reserved agents. In one embodiment, the pool of reserved agents comprises tens or even hundreds of reserved agents. In one embodiment, a reserved agent is unavailable for other incoming calls, chats, emails, etc. In yet another embodiment, the reserved agent can initiate outgoing calls, chats, emails, etc.","At step  the GUI module  generates a GUI based on one or more of the GUI inputs (e.g., a GUI input provided by an administrator using a GUI exposed to the administrator and\/or a GUI input provided by a third party user). In one embodiment, the GUI module  generates a GUI based on one or more of: (1) a system configuration; (2) the content of the simulated communication relevant to the third party user (e.g., based on inputs provided by the third party user); (3) the mode of contact used by the third party user (e.g. calls, chat, email, etc); and (4) the GUI data  described with reference to . The GUI module  sends the GUI to a display of an endpoint associated with the reserved agent. For example, the GUI module  sends a GUI to the reserved agent similar to the one depicted in . The reservation module  and the ECC  communicate with the endpoint to attempt  to connect the endpoint on a call with a third party user. For example, the GUI module  sends a GUI to the reserved agent similar to the one depicted in  in which the reserved agent has the option to click the answer button and participate in the contact back event. In one embodiment, reserving an agent device  includes a toast between the reservation module  (and\/or the PCM ) and the reserved agent device.",{"@attributes":{"id":"p-0142","num":"0141"},"figref":["FIGS. 7A and 7B","FIG. 6","FIG. 13B","FIG. 13B"],"b":["700","144","144","660","312","714","304","700","716","312","716","312","718","312","714","144","139","118","728","144","139","118","730","700"]},"At step  the GUI module  determines whether the configuration data provides the reserved agent with an option to answer the call. If the determination at step  is \u201cyes,\u201d the method  moves to . Turning now to , at step  a determination is made regarding whether a time counter is used to answer the call. For example, the GUI module  communicates with the configuration data  to determine whether a time counter is used to connect the call. A time counter is known to those having skill in the art. For example, a time counter includes a register having a predetermined time. At the expiration of the predetermined period of time, an event occurs. For example, the reserved agent is connected on the call and the delay period ends. If the determination at step  is \u201cyes,\u201d the method  moves to step . The GUI module  determines and retrieves GUI data  based on the GUI inputs. The GUI module  sends GUI data to the reserved agent device . The reservation module  begins  to countdown a predetermine period of time until the reserved agent is connected on the call. For example, the reservation module  deducts a time unit from the counter. For example, the predetermined period of time is 8 seconds and the reservation module  deducts one unit of time from the time counter so that 7 seconds remain in the time counter. In one embodiment, the predetermined period of time is based on the configuration data. The reservation module  determines whether the countdown has expired (e.g., whether the predetermined period of time has elapsed so that the time reflected in the time counter is 0 seconds). If the determination is \u201cno,\u201d the reservation moves to step  and the method  repeats steps  and . If the determination at step  is \u201cyes,\u201d then the method  moves to step  described above for .","If the determination at step  is \u201cno,\u201d then the method moves to step . The GUI module  determines and retrieves GUI data  based on one or more of the GUI inputs. The GUI module  sends  the GUI data to the reserved agent device. For example, the GUI module  sends a GUI to the reserved agent similar to the one depicted in  with the exception that the GUI includes both an \u201canswer button\u201d and a \u201cdecline button\u201d since the determination at step  was \u201cyes\u201d and so, the reserved agent has the option to decline to answer the call. The reservation module  receives  an answer input and the method  proceeds to step  described above for . In one embodiment, the reservation module  receives a decline input. In this embodiment, the reservation module  reserves the next available agent (i.e., a second reserved agent) and the method  is repeated for the second reserved agent. In one embodiment, the monitor module  reserves a pool of reserved agents in the general setup step  and, responsive to receiving a decline input, the reservation module  selects a reserved agent from the pool and moves to step  in the method . In one embodiment, the user has the option not to answer the call, and at step  the user provides an input to the reservation module  that the call is not accepted. The reservation module  reroutes the call to a second agent device identified as being available at step . The steps of method  are then repeated for the second agent device.",{"@attributes":{"id":"p-0145","num":"0144"},"figref":["FIGS. 8A and 8B","FIG. 6","FIG. 14A"],"b":["800","144","144","660","312","814","304","800","816","312","816","312","818","312","144","139","142","828","144","139","142","830","800"]},"At step  the GUI module  determines whether the configuration data provides the reserved agent with an option to join the chat session . If the determination at step  is \u201cyes,\u201d the method  moves to . Turning now to , at step  a determination is made regarding whether a time counter is used to determine when the reserved agent will join the chat session. For example, the GUI module  communicates with the configuration data  to determine whether a time counter is used to determine when the reserved agent will join the chat session. When the time period expires, the reservation module  connects the reserved agent so that the reserved agent joins the chat session. If the determination at step  is \u201cyes,\u201d the method  moves to step . The GUI module  determines and retrieves GUI data  based on one or more of the GUI inputs. The GUI module  sends  the GUI data to the reserved agent device. The reservation module  begins  to countdown a predetermine period of time until the reserved agent is connected on the call. For example, the reservation module  deducts a time unit from the time counter. The reservation module  determines whether the time in the time counter has expired (i.e., whether the predetermined period of time has elapsed). If the determination is \u201cno,\u201d the reservation moves to step  and the method  repeats steps  and . If the determination at step  is \u201cyes,\u201d then the method  moves to step  described above for .","If the determination at step  is \u201cno,\u201d then the method moves to step . The GUI module  determines and retrieves GUI data  based on one or more of the GUI inputs. The GUI module  sends  the GUI data to the reserved agent device. The reservation module  receives  an input from the reserved agent to join the chat session and the method  proceeds to step  described above for . In one embodiment, the reservation module  receives a decline input indicating that the reserved agent does not want to participate in the contact back event. In this embodiment, the reservation module  reserves the next available agent (i.e., a second reserved agent) and the method  is repeated for the second reserved agent. In one embodiment, the user has the option not to join the chat session, and at step  the user provides an input to the reservation module  that the chat is not accepted. The reservation module  reroutes the chat to a second agent device identified as being available at step . The steps of method  are then repeated for the second agent device.","In one embodiment, the monitor module  reserves a pool of reserved agents in the general setup step  and, responsive to receiving a decline input, the reservation module  selects a reserved agent from the pool and moves to step  in the method .",{"@attributes":{"id":"p-0149","num":"0148"},"figref":["FIGS. 9A","FIG. 18A"],"b":["9","9","900","144","121","122","107","108","124","124","123","124","124","125","136","138","141","100","312","312","144","312","902","144","312","904","301","905","902","900","906","906","902","907","900","906","906","907","908","312","312","908","910"]},"If the determination at step  is \u201cno,\u201d then the method moves to step . At step  a time count begins counting down the time until the time for the conference call. A determination is made at step  regarding whether it is time for the conference call. If the determination is \u201cno,\u201d the method  moves to step  and steps  and  are repeated. If the determination is \u201cyes,\u201d then the method moves to step  described with reference to .","Turning now to , at step  the monitor module  reserves the member participant device to be on a call. At step  the GUI module  communicates  with the configuration data unit  to determine if the reserved participant has the option to answer the call to join the conference call. If the reserved participant does not have the option to answer, the method  moves to step . At step  the GUI module  determines and retrieves the GUI data for generating GUIs based on one or more of the GUI inputs and the data input at step . The GUI module  sends  the GUI data to the reserved participant devices. For example, the GUI module  sends a GUI to the reserved member participant devices. In one embodiment, one or more of the reserved member participant devices are automatically connected to the conference call after a predetermined period of time. The reservation module , the ECC  and optionally the TAPI  communicate  with one another to connect the reserved member participant devices to the conference call. The reservation module  communicates with one or more of the ECC  and the TAPI  to determine that the call session has terminated  and the method  ends.","At step  the GUI module  determines whether the configuration data provides the reserved member participant device with an option to join the conference call. If the determination at step  is \u201cyes,\u201d the method  moves to . Turning now to , at step  a determination is made regarding whether a time counter is used to determine when the reserved participant will join the conference call. If the determination at step  is \u201cyes,\u201d then the method  moves to step . At step  the GUI module  determines and retrieves GUI data  based on one or more of the GUI inputs and the data collected at step . The GUI module  sends  the GUI data to the reserved participant device. The reservation module  begins  to countdown to a predetermine period of time until the reserved member participant device is connected on the conference call. For example, the reservation module  deducts a time unit from the time counter. The reservation module  determines whether the time in the time counter has expired (i.e., whether the predetermined period of time has elapsed). If the determination is \u201cno,\u201d the reservation moves to step  and the method  repeats steps  and . If the determination at step  is \u201cyes,\u201d then the method  moves to step  described above for .","If the determination at step  is \u201cno,\u201d then the method moves to step . The GUI module  determines and retrieves GUI data  based on one or more of the GUI inputs and the data collected at step . The GUI module  sends  the GUI data to one or more of the reserved member participant devices. The reservation module  receives  an input from the reserved participant to answer the conference call and the method  proceeds to step  described above for .","In one embodiment, the reservation module  (including one or more of the modules , , , , , ) is stored in a memory of a conference bridge  and executed by a processor of the conference bridge . In this embodiment, the conference bridge  implements the steps of method . In one embodiment, the conference bridge  implements the steps of method  without communicating with the ECC . In one embodiment, the system does not include an ECC  and the conference bridge  implements the steps of method  without communicating with the ECC . In one embodiment, step  is performed between steps  and .","In one embodiment, the reservation module  operates to provide the functionality of a conference bridge. The reservation module  keeps track of the schedule for conference calls and the participants for the conference call. The reservation module  performs the steps described above for , B and C to remind participants and set up the conference call. In one embodiment, the PCM  generates the GUIs necessary for setting up and\/or reminding participants about a scheduled conference call. In one embodiment where the reservation module  operates to provide the functionality of a conference bridge, the reservation module  does not include a tracking module and\/or a queuing module. In this embodiment the reservation module  uses the configuration data stored in the storage  to store and track conference calls.",{"@attributes":{"id":"p-0156","num":"0155"},"figref":["FIG. 10","FIG. 6","FIG. 15"],"b":["1000","144","144","312","1014","312","316","1018","316","1020"]},{"@attributes":{"id":"p-0157","num":"0156"},"figref":["FIG. 11","FIG. 16"],"b":["1100","144","312","1102","312","312","1104","312","303"]},{"@attributes":{"id":"p-0158","num":"0157"},"figref":"FIG. 12","b":["1200","144","316","1202","316","1204","316","305","1206","316","1204"]},{"@attributes":{"id":"p-0159","num":"0158"},"figref":"FIG. 13A","b":["1300","1300","1302","1304","1304","1304","1306","1308","1308","1302","1304","1306"]},"In one embodiment, the GUI  disappears if the reservation is canceled. In another embodiment, the call cell  disappears if the reservation is canceled.",{"@attributes":{"id":"p-0161","num":"0160"},"figref":"FIG. 13B","b":["1301","1301","1310","1310","1312","1314","1316","1318","1316","1316","1318","1318","1322","1328"]},"In one embodiment, the window  is a call alert window that alerts the agent of the incoming call. In the depicted embodiment the window  includes graphical text of the combination call string. In another embodiment the graphical text of the combination call string is truncated. In the depicted embodiment, the window  includes a first non-clickable button to forward the incoming call to voicemail (\u201cTo VM\u201d) and a second non-clickable button (\u201cTO IM\u201d) that allows a user to send an instant message to the caller of the incoming call, e.g., \u201cI will call you back in 3 minutes.\u201d Thus, the agent does not have the option to forward the incoming call to voicemail or instant messaging since these buttons are non-clickable.",{"@attributes":{"id":"p-0163","num":"0162"},"figref":["FIG. 13C","FIG. 13C"],"b":["1399","1399","1330","1340","1330","1340","1340","1399","1330","1340"]},"The reserved call cell  includes a graphical indication  that makes it appear to the reserved agent that there is an actual incoming TAPI call when in fact there is not (i.e., an indication  of a virtualized call). Element  is an icon indicating that the agent device has an incoming virtualized call. Element  is a call string that includes ECC information and TAPI information (referred to herein as a \u201ccombination call string\u201d).","The concurrent call cell  includes a graphical indication depicting an elapsed time for which the reserved agent has been on the call represented by the call cell  (e.g., \u201cFlorin Micle2\u2014126 (Connected\u201404:52)\u201d). In the depicted embodiment, the concurrent call has been ongoing for four minutes and fifty two seconds. Element  is an icon indicating that the agent device has an ongoing call.","In one embodiment, there is a call cell ,  for each call the reserved agent is connected to. If the call is a reserved call, then the call cell is a reservation call cell . If the call is not a reserved call, then the call cell is a concurrent call cell  or a similar call cell.",{"@attributes":{"id":"p-0167","num":"0166"},"figref":"FIG. 14A","b":["1400","1400","1410","1410","1412","1412","1412","1414","1416","1418","1410","1410","1420"]},{"@attributes":{"id":"p-0168","num":"0167"},"figref":"FIG. 14B","b":["1401","1401","1420","1420","1422","1422","1424","1426"]},{"@attributes":{"id":"p-0169","num":"0168"},"figref":["FIG. 15","FIG. 13B","FIG. 13B"],"b":["1500","1500","1502","1502","1504","1504","1504","1506","1506","1314","1314","1506","1314","1506","1508","1510","1508","1318","1512"]},{"@attributes":{"id":"p-0170","num":"0169"},"figref":"FIG. 16","b":["1600","1602","1600","1604","1606","1608","1610","139","1600","303"]},{"@attributes":{"id":"p-0171","num":"0170"},"figref":["FIG. 17","FIG. 16"],"b":["1700","1702","1704","1706","1708","144","1700","1710","1600"]},{"@attributes":{"id":"p-0172","num":"0171"},"figref":["FIG. 18A","FIG. 18A"],"b":["1800","124","144","139","144","124","144","144","124","139","1802","1804","1802","144","1804","144"]},"In one embodiment, members of the conference call are given a reminder about the conference call. Elements  and  are graphical selection indicators for a user to select whether the members of the conference call receive a reminder of the conference call. If element  is selected by the user, the reservation module  sends a reminder to one or more of the participants (\u201cSend a reminder to participants 5 minutes before start.\u201d). Element  is a field in which the user specifies a period of time for the reminder. For example, in the depicted embodiment the user has entered \u201c5,\u201d and the reservation module  will send a reminder to the participants 5 minutes before the start of the conference call. If element  is selected by the user, the reservation module  does not send out a reminder to the members of the conference call (\u201cDo not send a reminder.\u201d).","Element  is a field in which the user enters one or more email addresses identifying the members of the conference call (e.g., \u201cjsmith@shoretel.com, tmiller@shoretel.com, fmicle@shoretel.com, client@shoretel.com\u201d). The reservation module  receives these email address and identifies the users associated with the different email addresses as members of the conference call. In one embodiment, the data entered in field  is stored by the reservation module  in the storage . In the depicted embodiment, an invitation for the conference call is sent out by the reservation module  to each of the email addresses entered by the user. Element  is a field in which the user specifies the subject of the conference call (e.g., \u201cWeekly team meeting\u201d). In one embodiment, the data entered in field  is stored by the reservation module  in the storage . Element  is a filed in which the user can enter a message to be sent out with the invitation for the conference call (e.g., \u201cA ShoreTel conference call has been created for the conference. Communicator users will be jointed automatically\u201d). In one embodiment, this message is generated automatically by the reservation module  responsive to one or more of the user inputs described above with reference to elements , , , , , , . Element  is a graphical button for the user to provide an input indicating to the reservation module  to send out the invitations to conference call members specified by element  to participate in the conference call.","In one embodiment, one or more of the user inputs described above with reference to elements , , , , , ,  is included as graphical information with a reminder that is sent to a member of the conference call. An embodiment of this is described in further detail below with reference to elements , ,  of .",{"@attributes":{"id":"p-0176","num":"0175"},"figref":["FIG. 18B","FIG. 18A"],"b":["1801","1801","1818","1830","1818","144","1818","140","1820","1822","1812"]},"The concurrent call cell  is similar to the concurrent call cell  described above for . The concurrent call cell  includes a graphical indication depicting an elapsed time for which the reserved agent has been on the call represented by the call cell  (e.g., \u201cFlorin Micle2\u2014126 (Connected\u201400:52)\u201d). In the depicted embodiment, the concurrent call has been ongoing for zero minutes and fifty two seconds. Element  is an icon indicating that the participant device has an ongoing call.","The foregoing description of the embodiments of the present invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the present invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the present invention be limited not by this detailed description, but rather by the claims of this application. As will be understood by those familiar with the art, the present invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise, the particular naming and division of the modules, routines, features, attributes, methodologies and other aspects are not mandatory or significant, and the mechanisms that implement the present invention or its features may have different names, divisions and\/or formats. Furthermore, as will be apparent to one of ordinary skill in the relevant art, the modules, routines, features, attributes, methodologies and other aspects of the present invention can be implemented as software, hardware, firmware or any combination of the three. Also, wherever a component, an example of which is a module, of the present invention is implemented as software, the component can be implemented as a standalone program, as part of a larger program, as a plurality of separate programs, as a statically or dynamically linked library, as a kernel loadable module, as a device driver and\/or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally, the present invention is in no way limited to implementation in any specific programming language, or for any specific operating system or environment. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the present invention, which is set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate several embodiments of the invention and, together with the description, serve to explain the principles of the invention. The invention is illustrated by way of example, and not by way of limitation in the figures of the accompanying drawings in which like reference numerals are used to refer to similar elements.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 8A and 8B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 9A","b":["9","9"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 13A and 13C"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 14A"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 14B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 18A"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 18B"}]},"DETDESC":[{},{}]}
