---
title: Project structure
abstract: A method, apparatus, and article of manufacture provide the ability to define a project in a computer graphics program. A project file is defined with general information regarding the project. A folder structure for the project is defined where one or more project drawing files are organized into various folders by drawing file type. A companion file for each project drawing file is defined with information to link each project drawing file to the project.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07949690&OS=07949690&RS=07949690
owner: Autodesk, Inc.
number: 07949690
owner_city: San Rafael
owner_country: US
publication_date: 20030905
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","CONCLUSION"],"p":["This application claims the benefit under 35 U.S.C. Section 119(e) of the following commonly-assigned U.S. provisional patent application(s), which is\/are incorporated by reference herein:","U.S. patent application Ser. No. 60\/408,716, filed on Sep. 6, 2002, by Paul Joseph McArdle, Chad Steven Ames, Lang Sheng Yun, Scott Anthony Arvin, and Chris C. Yanchar, entitled \u201cMODEL MANAGEMENT\u201d.","1. Field of the Invention","The present invention relates generally to architectural and engineering projects and to Extensible Markup Language (XML), and in particular, to a method, apparatus, and article of manufacture for organizing and managing architectural projects with supporting XML documents.","2. Description of the Related Art","The use of Computer Aided Design (CAD) application programs is well known in the art. CAD application programs are often expensive, complex, and difficult to learn how to use. In this regard, CAD drawings often have many components that a user may desire to separately control and manage. However, prior art methods for organizing and managing components of a drawing remain complex and difficult. Further, prior art techniques fail to take advantage of documents defined by document definition languages (e.g., XML) as part of this organizational and management process. The disadvantages of the prior art may be better understood by describing prior art drawing file structures and document definition languages.","Drawing Programs","As described above, CAD applications are often used to create drawings used in the architectural, engineering, and construction (AEC) industry. The drawings are often defined by a collection (referred to as objects) of one or more graphical elements, such as lines, circles, polylines, text, or dimensions. For example, a collection of various lines may make up a door or window object. CAD programs may treat each object as a single element for creation, manipulation, and modification. Some CAD programs may also provide objects that are special entities with predefined behaviors and display characteristics.","Information relating to an object may be entered and defined in one or more properties of the object. For example, users may have the capability to enter information about the style, dimensions, location, schedule data, and\/or other important characteristics of an object.","To view a drawing, different views or layouts may be created. The views provide different ways to work on and plot a drawing\/model at the various stages in the design process.","While the prior art provides a limited structure for drawings, the prior art lacks the ability to easily manipulate and organize drawings and objects.","Document Definition Languages","Document definition languages define how a document or information is to be displayed (e.g., in a web browser). Sets of rules, referred to as schemas, may provide for a particular structure for information. For example, an address schema may comprise constraints and limitations as to the order and sequence of elements and datatypes that define an address.","To enable the interpretation and display of information in a particular format, document definition languages and standard programming languages are utilized to define a document. For example, hypertext markup language (HTML) is widely used to define web pages. However, HTML utilizes a predefined set of \u201ctags\u201d to describe elements on the web page. As a result, extensible markup language (XML) has become and is becoming more widely used on the internet. XML is more flexible than HTML and allows tags to be defined by the developer of the web page. Thus, tags for virtually any data items such as product, sales representative, and amount due, can be used for specific applications, allowing web pages to function like database records.","Thus, a schema is a model for describing the structure of information. An XML schema describes a model for a whole class of documents. The model describes the possible arrangement of tags and text in a valid document. A schema may also be viewed as an agreement on a common vocabulary for a particular application that involves exchanging documents.","While XML is increasingly utilized for web-based documents on the Internet, XML has not been frequently applied to the computer-aided design industry. In this regard, XML has not been utilized to manage and organize projects, drawings, or objects.","One or more embodiments of the invention provide for the concept and use of a project in a computer graphics program. The overall framework for the project is stored in a shared XML file that contains general project information (e.g., name, number, description, level and model division information).","Project files may be organized into various types (e.g., sheet, model view, construct, or element). The file organization is based upon a combination of location within a project folder structure and a companion XML file for each drawing file that identifies the type and properties of the file.","Sheets represent printed\/plotted documents and may contain model views. Model views (automatically) assemble appropriate constructs to represent a select portion of the building based upon selected level(s), wing(s), and construct categories. Further, model views may contain constructs.","Constructs uniquely identify the geometry and (property set) data for a specific level\/wing and category of a constructed building. Further, constructs may contain elements. Elements describe a set of geometry that may be repeated indiscriminately throughout a building information model.","In addition to the project structure described herein, user definable categories and values for miscellaneous project information may also be allowed. Such categories and values may be stored in one or more XML files of a project.","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Overview","One or more embodiments of the invention provide support for a project in a computer drawing program. The overall framework for the project is stored in a shared XML file that contains general project information (e.g., name, number, description, level, and model division information). Project drawing files may be organized into various types (e.g., sheet, model, view, construct, or element). The file organization is based upon a combination of location within a project folder structure and a companion XML file for each drawing file that identifies the type and properties of the file.","Hardware Environment",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1","b":["100","102","104","106","100"]},"One or more embodiments of the invention are implemented by a computer-implemented graphics program  (e.g., a computer-aided design [CAD] program), wherein the graphics program  is represented by a window displayed on the display device . Generally, the graphics program  comprises logic and\/or data embodied in or readable from a device, media, carrier, or signal, e.g., one or more fixed and\/or removable data storage devices  connected directly or indirectly to the computer , one or more remote devices coupled to the computer  via a data communications device, etc.","Those skilled in the art will recognize that the exemplary environment illustrated in  is not intended to limit the present invention. Indeed, those skilled in the art will recognize that other alternative environments may be used without departing from the scope of the present invention.","Software Embodiments",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2","b":["108","108","200","202","204","206"]},"The Graphical User Interface  displays information to the operator and provides the functionality for the operator's interaction with the graphics program .","The Image Engine  processes the DWG files  and delivers the resulting graphics to the monitor  for display. In one or more embodiments, the Image Engine  provides a complete application programming interface (API) that allows other computer programs to interface to the graphics program  as needed.","The Database  is comprised of two separate types of databases: (1) a 3D database  known as the \u201c3D world space\u201d that stores 3D information; and (2) one or more 2D databases  known as the \u201c2D view ports\u201d that stores 2D information derived from the 3D information.","Object List",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["300","208","300","302","304","306","300","208","304","300","208"]},"Project Structure","In the AEC industry, various parties may undertake to build and complete a project. One or more embodiments of the information provide for the organization and maintenance of information for such projects. In this regard, building information models are organized into projects.  illustrates the concept of a project  that is composed of two parts, a building information model  and reports  generated from the model .  further illustrates the components of project . As illustrated in , the building information model  is composed of elements  and constructs , while reports  consist of views  and plotting sheets . Within a project , elements  are referenced into constructs , constructs  are referenced into views , and views  are referenced into plotting sheets .","A project  has an underlying XML structure.  illustrates such an XML structure for a project . For each drawing file (e.g., DWG files A, A, A, and A) created within a project  (e.g., a door drawing or a structural drawing), an accompanying XML file (e.g., B, B, B, and B) is created. For example, for each element drawing file (DWG file) A, construct file A, view file A, and plotting sheet file A, an accompanying XML file B-B respectively is created. The XML files B-B contain project  relevant information (e.g., level and division information). Any drawing file A-A created within a project  may be used outside of the project , because the drawing file A-A itself does not contain project  relevant information.","As described above, the XML files B-B may provide basic project information such as level information and\/or model division information. A level represents a horizontal division of the building analogous to floors. Levels may contain elevation and (floor-to-floor) height information. Model division information (also referred to as wing) represents an arbitrary vertical division of the building. One purpose of model divisions is to limit the duplication of data, to support multi-user collaboration and to manage file size\/performance on large projects .","To more easily access, maintain, and modify the various components of a project , the project  may be organized into a file and directory structure. As part of the directory structure, embodiments of the invention may provide a project  file (referred to as an APJ file) that represents the highest level of the project . The APJ file contains general information like the project name, number, level and division information, default templates for new elements , constructs , views , and sheets . The APJ may also contain a user-configurable detail sheet in which a user may place additional information (e.g., contractor information or legal details). Typically, the APJ may be set up once during the lifetime of the project , and details may only change when necessary. In addition, the APJ file is a well-formed XML document that may be opened in an XML editor for editing.","Within the folder structure, project  drawing files A-A may be organized into various types (e.g., sheet , model view , construct , or element ). The file organization is based upon a combination of location within the project folder structure and a companion XML file B-B for each drawing file A-A that identifies the type and properties of the file A-A. Accordingly, a directory structure for each project  may include folders for each type of drawing file A-A. The XML files B-B provide the information used to create the directory structure and link each drawing file A-A to the project .","As described above, the various categories within a project  are represented by file folders. For example, a default category structure may be created as illustrated in . The Project Name category is a name that the user has assigned to the project. Within each project , there are folders for each of the various file types (i.e., elements , constructs , views , and sheets ). Subcategories within each of the folders may also be created.","Elements","Elements  provide a set of geometry that may be repeated (discriminatory or indiscriminately) throughout a building information model . Accordingly, elements  are for pieces of a building that may be repeated multiple times within a building. For example, an element  may be used to create a repeating design object like a desk\/chair combination to be used for a number of cubicles in an office building.","An element  is a generic building block for multiple use. The element  may know nothing about which level or division it is placed on. Such knowledge may be determined by the construct  that the element  is referenced into. If a bathroom layout is created as an element , the layout may be used on the second floor of the west wing just as well as on the first floor of the east wing. To place the element  on a specific floor and wing, the element  may be referenced into a construct.","Elements  may also be viewed as simple external reference files. Since individual instances of an external reference can be annotated, specific instances of the same element  may be used and annotated differently depending on its position.","As described above, an element  may be created in a drawing file A. Since the drawing file A is part of the project , an XML file B with the same name may also be created. The XML file B contains information to connect the drawing file A to the project .","In addition, an element file A may be categorized into one or more valid pre-defined or user-defined categories that may persist. The categories may provide multiple levels of subcategories or subcategory trees. Subcategories may represent components of a user's workflow. For example, subcategories may be created by discipline, by phase, by view type (working, presentation, sections, rendering, etc.), by sheet type (floor plans, ceiling plans, elevations, etc.), or by any other system the user finds helpful.","For example, the uppermost categories may be sheets , model views , constructs , and elements  as illustrated in . These categories may contain subcategories for each discipline (e.g., architecture, structural, electrical, etc.). The subcategories may also contain further subcategories for type (e.g., plans, elevations, etc.). The directory structure below a root project  directory (as illustrated in ) would reflect this categorization.","Constructs","Constructs  uniquely identify the geometry and (property set) data for a specific level\/wing and category of a constructed building. In other words, a construct  represents a set of objects that can be assigned within the building model  at the granularity of one per building. A construct  may also be viewed as an external reference file with some special behavior in the building model . In this regard, a construct  may be used to group elements  and may maintain a list of portions\/regions (i.e., a location within a building model  identified by a unique level and model division) to which it is assigned. A construct  may be referenced only once per portion and only once per level.","Typical constructs  may include curtain wall, shell, second floor core, etc. A construct  may have one to two behaviors in the building model \u2014unique and spanning. A unique construct  is only assigned to one region of the building model . A spanning construct  spans geometry across more than one region of the building model . In this regard, spanning constructs  (e.g., curtain walls) may be assigned to multiple levels and divisions. For example, the first level of a building project may consist of an exterior shell construct , a first level core construct , and a first-level interior partitions construct . Thus, a construct  may span geometry across multiple portions. Constructs  may also be \u201cpushed\u201d into portions of the building model  and be placed automatically.","In addition to the above, constructs  may contain drawing objects (e.g., walls and doors), external references to elements , or a combination of both. For example, a first-level core construct  may contain the core walls directly drawn into the construct  and an elevator element  inserted as an external reference.","Views","Once the structure of the building information model  is defined and constructs  are assigned to levels and divisions, a user may begin creating reports of the data. A view  automatically references\/assembles appropriate constructs  to present a specific view of the building project . To create a view , a user may first decide what portion\/region of the building the user desires to look at and the type of view to generate. For example, a user may select a level(s), wing(s), and\/or construct  categories. In this regard, a user may create a first floor reflected ceiling plan or a second floor-framing plan. A user may also create a composite view of all floors in the building.","Views  automatically reference the appropriate constructs  according to the constructs' location within the building. For example, to create a floor plan of the west wing of the second floor, a user may create a view  that references all constructs  assigned to the second floor and the west wing. This may also include a curtain wall spanning the first through fifth floors. A user may reference additional constructs  that do not lie on that floor but which the user desires to see in the view , such as a building outline or grid.","Thus, a model view  is a drawing file containing a subset of the building model  and default viewing parameters. A model view  has knowledge of its included portions\/regions and has the ability to query for a list of relevant constructs  based on categorization and portion\/region assignments. A model view  is intended to aid in transferring building model data into a construction sheet  format.","A model view  may be described as a saved partial construct  query. The construct  classification folders included in the query are saved. Additionally, the included regions and individually specified constructs  may also be saved as part of the query. The intent is to facilitate generation of certain \u201ctypes\u201d of drawings such as demo plans, construction plans, reflected ceiling plans, exterior elevations, etc. The included classifications of constructs  for a type of drawing will remain the same, but the included regions will change (i.e., the first floor reflected ceiling plan and the second floor reflected ceiling plan will both include the same construct  classifications). The regions will differ to distinguish the first floor from the second floor.","In the view , a user may also add project-wide data like annotation, dimensions, and schedule tables. Whether to create the annotation in the view  or in a plotting sheet  is a decision the user may make based on workflow and individual needs.","Plotting Sheets","Plotting sheets  represent printed\/plotted documents\/drawing sheets of a project . Accordingly, plotting sheets  are used to plot plans of a building project . The plotting sheet  references\/contains views  and may be stored in a drawing (i.e., DWG) file. When a view  is dragged onto a layout in a sheet , the view  is referenced into model space. A viewport is created on the layout large enough to fit the view  at the zoom specified by the view . The viewport is zoomed to match the scale specified by the view  and has the display configuration assigned as specified by the view . The viewport may also have a layer snapshot applied as specified by the view .","In the plotting sheet , a user may add annotation like tags, dimensions, and schedule tables. Whether to create the annotation in the view  or in a plotting sheet  is a decision a user may make based on workflow and individual needs.","Logical Flow",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 6","b":["400","600","400","406","408","410","412"]},"At step , a folder structure for the project  is defined. In the folder structure, the project drawing files are organized into folders by drawing file type. For example, the various folders may include an elements folder for element  type drawing files, a constructs folder for construct  type drawing files, a views folder for view  type drawing files, and\/or a sheets folder for sheet  type drawing files.","As described above, an element  type drawing file may comprise a set of geometry that may be repeated throughout a project . A construct  type drawing file may comprise an identification of geometry and data for a particular level\/wing and category of the project  (including one or more elements ). Further, a view  type drawing file may automatically assemble appropriate constructs  to represent a portion of a project  that has been selected based upon user specified data. Additionally, the sheet  type drawing file may include one or more views  and represents a printed\/plotted document.","At step , a companion file for each project drawing file is defined. Each companion file comprises information to link each project drawing file to the project . The companion drawing file may be an XML document. In addition, user definable categories may be defined along with values for miscellaneous project information. Such categories and information may then be stored in the companion file.","Assembling of Model Views Through Spatial Querying","Once a project structure has been established, users and developers may desire the ability to easily assemble, access, and maintain a project . Accordingly, the spatial space of an architectural construction may be divided into a matrix (i.e., a spatial matrix) comprised of levels (vertical) and model divisions (horizontal). For example, a building with three (3) divisions and three (3) levels may be a 3\u00d73 matrix.","The matrix of levels and divisions may then act as labels to help uniquely identify the building information model. For example, a construct  in a building may be named \u201cFirst Floor\u2014West Wing.\u201d Accordingly, architectural constructs  may be tagged for their spatial occupancy with cells of the spatial matrix. Constructs  of any spatial configuration could be represented this way. For example, a construct  in level  and division  and , could be represented as (L, (D, D)). Similarly, a spanning construct  from level  and level  can be represented as {(L, (D, D, D), (L, (D, D, D))}.","A model view  query could then be created by specifying desired view  spatial configuration with cells of the spatial matrix. For example, a view  of level  can be represented as (L, (D, D, D)). The view  could then be assembled by finding all constructs  that at least has a cell in common with the model view . Additionally, a query could be created for view  categorization with the query occurring through folder path and link.","Model Divisions","People may be familiar with the horizontal divisions of a building commonly referred to as levels or floors. One or more embodiments of the invention may utilize model divisions that refer to arbitrary (vertical) divisions of a building. For example, model divisions may be referred to geographically, such as North Wing, South Wing, etc.","Accordingly, a model division represents an arbitrary vertical division of a building. Model division may be used to limit the duplication of data, to support multi-user collaboration, and to manage file size\/performance on large projects. Further, model division information may be stored with other shared project  data (e.g., in the APJ file).","Current Project Banner","One or more embodiments of the invention may also provide for a project banner. The current project banner displays a project  specific image and project  specific text. The image and text displayed may be taken from information entered in project worksheets stored with project data (e.g., the APJ file).",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 7","b":"400"},"As described above, the text displayed in the project banner includes information about the current project. For example, the displayed text may include a project name, project number, a user-selected bitmap representing the project, an optional short project description, and\/or project location\/contractor information.","Project Web Page\/Bulletin Board","One or more embodiments of the invention may provide for a project web page\/bulletin board. Such a project web page\/bulletin is an HTML file or other type of document. Within a navigator\/browser that allows access to various project-related information, a uniform resource locator (URL) or other identifier may be used to point to the HTML file (e.g., at a company home page or a project website). The retrieved bulletin board may provide any type of information desired and may appear in a project or Internet browser. Such a project web page\/bulletin board may also be similar to the Bulletin Board available on the \u201cToday Page\u201d in AUTOCAD 2000i available from Autodesk, Inc. However, additional functionality may provide the ability to specify a bulletin board per project.","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example, any type of computer, such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention.","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
