---
title: Authentication of a secure virtual network computing (VNC) connection
abstract: A secure Virtual Network Computing (VNC) connection between a server and a client is authenticated using a series of message exchanges. A server receives a request from a client to establish a VNC connection. If the request indicates that the client supports an encryption scheme, the server provides a first set of mechanisms for a subsequent authentication process. If the request indicates that the client does not support the encryption scheme, the server provides the client a second set of mechanisms for the subsequent authentication process. The second set contains fewer mechanisms than the first set. The client chooses an authentication mechanism from the first set or the second set provided by the server. The server and the client then perform the subsequent authentication process, using the authentication mechanism chosen by the client, with a series of message exchanges.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08589683&OS=08589683&RS=08589683
owner: Red Hat, Inc.
number: 08589683
owner_city: Raleigh
owner_country: US
publication_date: 20091027
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["Embodiments of the present invention relate to Virtual Network Computing (VNC), and more specifically, to the authentication of a secure VNC connection.","Virtual Network Computing (VNC) can be used in a graphical desktop sharing system that allows a client computer to remotely use the processing capabilities of a server computer. For example, the client can transmit keyboard and mouse events to the server, and the server can send screen updates back to the client. Thus, the client can be used as a control console, which sends commands to the server and watches the computing results of the server at a local display screen. The client and the server interact using a communication protocol (e.g., the Remote Frame Buffer (RFB) protocol) over a VNC connection.","VNC is not a secure protocol. Conventional VNC does not have built-in security mechanisms, such as data encryption. Therefore, data streams transmitted on a VNC connection over an untrusted network are subject to snooping by an intermediate agent performing packet capture.","Described herein is a method and system for authenticating a Virtual Network Computer (VNC) connection. In one embodiment, a server and a client establish a secure VNC connection by negotiating encryption schemes and authentication mechanisms. The server and the client perform a handshake process that includes a series of message exchanges for authenticating a user of the client. The series of message exchanges may be performed in accordance with Simple Authentication and Security Layer (SASL). If the server and the client both support an encryption scheme for the VNC connection, such as VeNCrypt, the encryption scheme can be used in conjunction with SASL.","In one embodiment, when the server receives a request from a client to establish a VNC connection, the server determines whether the request indicates that the client supports an encryption scheme. If the request indicates that the client supports the encryption scheme, the server provides a first set of mechanisms for a subsequent authentication process. If the request indicates that the client does not support the encryption scheme, the server provides the client a second set of mechanisms for the subsequent authentication process. The second set contains fewer mechanisms than the first set. The client chooses an authentication mechanism from the first set or the second set provided by the server. The server and the client then perform the subsequent authentication process, using the authentication mechanism chosen by the client, with a series of message exchanges.","Conventional VNC connections do not have built-in encryption. Therefore, when using SASL on a VNC connection, the client may request strong encryption capabilities to ensure data security. The client may request a minimum security strength factor (SSF) for SASL. The minimum SSF is sufficiently high to prevent a brute force attack on the keys used for data encryption. The client may request that no \u201cplain text\u201d authentication can be used. This request can stop the server from using any authentication mechanism that is vulnerable to a packet capture on the network. The client may also request that no \u201canonymous\u201d authentication can be used. This request can stop the server from using any authentication mechanism that allows anonymous users. Thus, users need to be formally identified. As a result, when using SASL on a VNC connection without an additional encryption scheme, the server only offers a small number of authentication mechanisms for the client to choose. By contrast, when using SASL on a VNC connection with an additional strong encryption scheme (e.g., VeNCrypt), the server can offer a large number of authentication mechanisms for the client to choose.","Embodiments of the present invention maximize the number of authentication mechanisms that an administrator or user can choose to use, while ensuring a high level of security.","In the following description, numerous details are set forth. It will be apparent, however, to one skilled in the art, that the present invention may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present invention.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","100","101","108","106","101","101","108","101","102","103","105","103","105","108","106","108","120","101","102","108","120","106","101","100"]},"The server  may reside on one or more server machines. In one embodiment, the server  has graphical processing capabilities and can process graphics commands sent from the client . In one embodiment, the server  may host one or more virtual machines. Each virtual machine provides a virtual desktop for the client  and executes some or all of the graphics operations relating to the virtual desktop. In alternative embodiments, the server  may provide processing capabilities to the client  in a non-virtualized environment. The server  is coupled to data storage , which may comprise mass storage devices, such as magnetic or optical storage based disks, tapes or hard drives.","According to one embodiment of the present invention, the client  may request a Virtual Network Computer (VNC) connection to the server  for accessing the processing power of the server . The VNC connection allows the client  to transmit keyboard and mouse events to the server , and the server  to transmit processing results back to the client . The server  may authenticate the VNC connection; that is, to authenticate that data transferred over the VNC connection is from an authorized source. During the authentication process, the user enters his credentials (e.g., user ID, password and\/or other identifying information) to prove his identity to the server . In one embodiment, the authentication process includes a series of handshakes between the sever  and the client . The sever  and the client  use the handshakes to negotiate encryption schemes and authentication mechanisms, which will be used for authenticating the user and encoding the message exchanges between the sever  and the client . In one embodiment, the server  includes a server authentication module  and the client  includes a client authentication module  to perform the authentication process. The server authentication module  and the client authentication module  may include plug-in components. As will be described in greater detail with reference to , the server authentication module  and the client authentication module  performs handshakes to negotiate encryption schemes and authentication mechanisms.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2","b":["107","109","107","210","206","204","109","220","226","224","210","220","204","224","206","226","108","101","108","101","101"]},"In one embodiment, the negotiated encryption scheme may be VeNCrypt, which is an extension to the VNC authentication protocol. VeNCrypt encrypts data streams transmitted on a VNC connection using Transport Layer Security (TLS) or Secure Socket Layer (SSL) (referred to as \u201cTLS\/SSL\u201d), and identifies the server  and the client  using X.509 certificates. VeNCrypt can be used on top of (i.e., in addition to) the negotiated authentication mechanism.","In one embodiment, the negotiated authentication mechanism may be one of the authentication mechanisms defined by Simple Authentication and Security Layer (SASL), which is a framework for adding authentication support to connection-based protocols. SASL includes a number of authentication mechanisms, which also provide a data encryption security layer with various security strength factors (SSFs). The client  and the server  may negotiate the use of the mechanisms' security layer and its SSF.","In one embodiment, the server  and the client may first perform authentication according to VeNCrypt, and then perform authentication according to SASL. When VeNCrypt is used on top of SASL, the server  and the client  may choose to forgo the use of the security layer in SASL. Encrypting data with both of TLS\/SSL (according to VeNCrypt) and the security layer (according to SASL) may waste CPU resources for no greater security benefit. Thus, in one embodiment, the server  and the client  may choose to use either the TLS\/SSL encryption or the SASL encryption, but not both.","In one embodiment, the security layer options may vary based on whether VeNCrypt is in use. If VeNCrypt is used, a large number of SASL mechanisms can be used for authentication. If VeNCrypt is not used, only a small number (e.g., 2) of SASL mechanisms can be used for both authentication and encryption. Alternatively, the security layer options may vary based on whether an encryption scheme analogous to VeNCrypt (e.g., an external SSL tunnel) is used. A further option allows for the security layer options to vary based on whether the communication channel is susceptible to packet capture (e.g., a local connection over UNIX domains sockets is not susceptible to packet capture, a Transmission Control Protocol (TCP) connection running over the public Internet without any VPN software protecting the channel is susceptible to packet capture).","The server  and the client  can set up preferences for the SSF of the security layer. These preferences can be used by the server  and the client  to help determine which authentication mechanisms are acceptable for use on a VNC connection. The actual strength of the security layer can be negotiated during a series of message exchanges between the server  and the client .","In the following descriptions, VeNCrypt and SASL are used as an example of the encryption scheme and authentication process for VNC, respectively. It is understood that other encryption schemes and authentication processes may be used instead of VeNCrypt and SASL.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 3","FIG. 4","FIGS. 1 and 2"],"b":["300","101","108","300","400","300","101","107","101","109"]},"Referring to , in one embodiment, the method  begins when the server  receives a request from the client  for establishing a VNC connection (block ). Upon receiving the request, the server  determines whether the request indicates that the client  supports an encryption scheme, such as VeNCrypt (block ). In one embodiment, the request may include an argument that indicates VeNCrypt is supported.","If the request indicates that VeNCrypt is supported, the server  confirms that VeNCrypt is to be used. The server  and the client  then negotiate encryption options, such as whether to use X.509 certificates, and which subsequent authentication process to use, e.g., SASL (block ). If the request does not specify an encryption scheme, the server  and the client  negotiate which subsequent authentication process to use (block ). For example, the client  may indicate that it supports SASL, and the server  confirms the use of SASL. Other authentication processes, which involve a series of negotiations between the client  and the server , may be analogous to SASL and may be used instead of SASL. If either the client  or the server  does not support SASL or other analogous authentication processes, the server  may deny the request for a VNC connection.","In a scenario where SASL is used with VeNCrypt, after confirming the use of SASL, the client  performs a standard TLS\/SSL handshake. If the handshake is successful, then the following communication between the server  and the client  is encrypted by the TLS\/SSL session. After the initial handshake, the client  and the server  begin a series of message exchanges to negotiate authentication mechanisms.","In a scenario where SASL is used without VeNCrypt, the client  will request strong encryption capabilities in the security layer of SASL. The server  will also set up similar preferences for strong encryption capabilities. In an alternative scenario where VeNCrypt is used with SASL, the client  may choose an authentication mechanism without encryption capabilities or with weak encryption capabilities. The server  then uses the negotiated authentication mechanism to authenticate the user of the client  and the source of data transmitted on the VNC connection.","In one embodiment, the series of message exchanges begins with the server  sending a server initialization message to the client . The server initialization message includes advertised authentication mechanisms that the server  supports for a VNC connection. The advertised authentication mechanisms may be a subset of all of the mechanisms that the server  supports and may be determined by a system administrator. If the VeNCrypt or other strong encryption scheme is used, the server initialization message includes a first set of authentication mechanisms (block ). If the VeNCrypt or other strong encryption scheme is not used, the server initialization message includes a second set of authentication mechanisms (block ). The first set contains more authentication mechanisms than the second set. The first set and the second set contain authentication mechanisms that the server  is prepared to accept from the client . For example, the first set may contain \u201cANONYMOUS, KERBEROS_V4, DIGEST-MD5\u201d and the second set may contain only two options: \u201cDIGEST-MD5, GSSAPI.\u201d That is, the server  provides more options to the client  when VeNCrypt is used than when VeNCrypt is not used.","In the above example, the first set contains an anonymous option and the second set does not contain the anonymous option. This means that a user of the client  can login as an anonymous guest when VeNCrypt is used, but cannot do so when VeNCrypt is not used.","After the client  receives the server initialization message, the client  replies with a client start message (block ). The client start message may indicate one of the authentication mechanisms advertised by the server  and chosen by the client . The choice of the client  may be pre-determined by a system administrator. Alternatively, the client start message may indicate all of the authentication mechanisms advertised by the server  and let the server  determine which mechanism to be used.","Subsequently, the server  sends a server start message to the client  to confirm which authentication mechanism is to be used (block ). The server  then exchanges a series of step messages with the client , using the confirmed authentication mechanism, until the authentication process is completed (block ).","At this point, the client  and server  have completed the SASL negotiation process. If the client  had requested a security layer (e.g., when VeNCrypt is not used), the client  will validate that a suitable security layer was negotiated with the server . If the security layer is unsuitable (e.g., the SSF of the security layer does not meet the minimum requirement of the client ), the client  will drop the connection to the server . If the security layer is enabled and suitable for the client (e.g., the SSF of the security layer meets the minimum requirement of the client ), all future messages transmitted over the VNC connection will be passed through an \u201csasl_encode\u201d application programming interface (API), and all messages received from the server  after a result check message from the server  will be passed through an \u201csasl_decode\u201d API. In the embodiment shown in , the \u201csasl_encode\u201d and \u201csasl_decode\u201d APIs may be part of the client authentication module . The client  then proceeds to wait for a result check message from the server  to determine whether the server  considers the negotiation successful.","At the server side, if the SASL negotiation indicated that the client  failed to correctly authenticate, the server will send a result check message, indicating that the authentication has failed and then drop the connection. If the SASL negotiation indicated that the client  has been correctly authenticated and that the server  had requested a security layer (e.g., when VeNCrypt is not used), the server  will validate that a suitable security layer was negotiated with the client . If the security layer is unsuitable, the server  will send a result check message, indicating that authentication has failed and then drop the connection to the client . If the security layer is enabled and suitable for the server , all messages transmitted over the VNC connection after the result check message will be passed through the \u201csasl_encode\u201d API, and all messages received from the client  will be passed through the \u201csasl_decode\u201d API. That is, the messages transmitted on the VNC will be encrypted according to the negotiated security layer having the negotiated SSF. In the embodiment shown in , the \u201csasl_encode\u201d and \u201csasl_decode\u201d APIs may be part of the server authentication module . The server  then proceeds to send the result check message to the client  to indicate that the authentication was successful (block ).","During the authentication process described above, a user of the client  may be prompted for entering his credentials. The exact credentials may depend on what SASL mechanism is in use. Some SASL mechanisms may use user ID and password, others (e.g., Kerberos) may require a \u201cticket\u201d to be obtained beforehand from an authentication server. The time at which the user credentials are requested may vary depending on which SASL mechanism is in use. Some SASL mechanisms may request the credentials before the client  sends the start message to the server  at block . Other SASL mechanisms may request the credentials later during the exchange of step messages at block . In a scenario where the SASL mechanism (e.g., Kerberos) requires that a ticket be acquired ahead of time, the mechanism may not even be advertised to the server if the client does not have the ticket at the time of connection.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":"400"},"The exemplary computer system  includes a processing device , a main memory  (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM) or Rambus DRAM (RDRAM), etc.), a static memory  (e.g., flash memory, static random access memory (SRAM), etc.), and a secondary memory  (e.g., a data storage device), which communicate with each other via a bus .","The processing device  represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processing device  may be a complex instruction set computing (CISC) microprocessor, reduced instruction set computing (RISC) microprocessor, very long instruction word (VLIW) microprocessor, processor implementing other instruction sets, or processors implementing a combination of instruction sets. The processing device  may also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like. The processing device  is configured to execute the processing logic for performing the authentication operations and steps discussed herein.","The computer system  may further include a network interface device . The computer system  also may include a video display unit  (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an alphanumeric input device  (e.g., a keyboard), a cursor control device  (e.g., a mouse), and a signal generation device  (e.g., a speaker).","The secondary memory  may include a machine-readable storage medium (or more specifically a computer-readable storage medium)  on which is stored one or more sets of instructions (e.g., an authentication system ) embodying any one or more of the methodologies or functions described herein (e.g., the authentication modules ,  of ). The authentication system  may also reside, completely or at least partially, within the main memory  and\/or within the processing device  during execution thereof by the computer system ; the main memory  and the processing device  also constituting machine-readable storage media. The authentication system  may further be transmitted or received over a network  via the network interface device .","The machine-readable storage medium  may also be used to store the authentication system  persistently. While the machine-readable storage medium  is shown in an exemplary embodiment to be a single medium, the term \u201cmachine-readable storage medium\u201d should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-readable storage medium\u201d shall also be taken to include any medium that is capable of storing or encoding a set of instructions for execution by the machine that cause the machine to perform any one or more of the methodologies of the present invention. The term \u201cmachine-readable storage medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media.","The computer system  may additionally include authentication modules  for implementing the functionalities of the authentication modules ,  of . The modules , components and other features described herein (for example in relation to ) can be implemented as discrete hardware components or integrated in the functionality of hardware components such as ASICS, FPGAs, DSPs or similar devices. In addition, the modules  can be implemented as firmware or functional circuitry within hardware devices. Further, the modules  can be implemented in any combination of hardware devices and software components.","Some portions of the detailed descriptions which follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise, as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201creceiving\u201d, \u201cdetermining\u201d, \u201cproviding\u201d, \u201cperforming\u201d, \u201crequesting\u201d, or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","Embodiments of the present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general purpose computer system selectively programmed by a computer program stored in the computer system. Such a computer program may be stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic disk storage media, optical storage media, flash memory devices, other type of machine-accessible storage media, or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear as set forth in the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.","It is to be understood that the above description is intended to be illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. Although the present invention has been described with reference to specific exemplary embodiments, it will be recognized that the invention is not limited to the embodiments described, but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly, the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense. The scope of the invention should, therefore, be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, and can be more fully understood with reference to the following detailed description when considered in connection with the figures in which:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
