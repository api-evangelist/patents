---
title: Providing payments automatically in accordance with predefined instructions
abstract: Techniques are described for facilitating interactions between computing systems, such as by using an authorization system to automatically authorize financial payments between parties in accordance with previously specified private authorization instructions of at least one of the parties. In some situations, some or all of the payments are associated with commerce-related or other transactions, such as transactions initiated by a consumer via the Web to acquire items from a retailer. The authorization instructions may include predefined instruction sets that regulate conditions under which a potential payment can be authorized, with the instruction sets each associated in some situations with a reference. After one or more parties each supply one or more such references or otherwise indicate one or more such instruction sets for use with a potential payment, the authorization system can determine whether to authorize the payment based on whether the instruction sets are compatible or otherwise satisfied.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07742994&OS=07742994&RS=07742994
owner: Amazon Technologies, Inc.
number: 07742994
owner_city: Incline Village
owner_country: US
publication_date: 20090202
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION","Assertion Examples","Assignment Examples"],"p":["This application is a divisional application of co-pending U.S. patent application Ser. No. 11\/200,880, filed Aug. 9, 2005 and entitled \u201cProviding Payments Automatically in Accordance With Predefined Instructions,\u201d which is hereby incorporated herein by reference. U.S. patent application Ser. No. 11\/200,880 is a continuation-in-part of U.S. patent application Ser. No. 10\/894,350, filed Jul. 19, 2004 and entitled \u201cPerforming Automatically Authorized Programmatic Transactions,\u201d which is hereby incorporated by reference in its entirety.","The following disclosure relates generally to facilitating interactions between computing systems, and more particularly to automatically providing payments for transactions between parties in accordance with predefined instructions of at least one of the parties.","Various mechanisms exist to allow computers and executing software applications to programmatically interact. For example, remote procedure call (\u201cRPC\u201d) protocols have long existed that allow a program on one computer to cause a program on another computer to be executed, and various object-oriented architectures such as CORBA (\u201cCommon Object Request Broker Architecture\u201d), DCOM (\u201cDistributed Component Object Model\u201d), Java RMI (\u201cRemote Method Invocation\u201d), JavaSpaces, Jini, JXTA, and UPnP (\u201cUniversal Plug-n-Play\u201d) provide similar capabilities. In addition, a variety of middleware programs have been implemented to connect separate applications (often of distinct types and from unrelated sources) to allow communication. For example, various EDI (\u201cElectronic Data Interchange\u201d) networks exist that provide standard various EDI (\u201cElectronic Data Interchange\u201d) networks exist that provide standard mechanisms to allow a computer system of one user of the network to send data to a computer system of another user of the network.","The widespread popularity of the World Wide Web (\u201cWeb\u201d) has provided additional opportunities for computers to inter-communicate and for users to obtain various capabilities. For example, much current Web use involves users interactively requesting Web pages from Web servers (e.g., via executing Web browser applications of the users) and receiving the requested information in response. Such Web use has increasingly provided a medium for users to engage in shopping and other commerce-related transactions, such as to allow users to search for and order items (such as products, services and\/or information) that are available for purchase, rent, lease, license, trade, evaluation, sampling, subscription to, etc. In many circumstances, a user can visit the Web site of a Web merchant or retailer (also referred to as a \u201cWeb store\u201d) or other online or electronic marketplace that sells one or more items, and can view information about the items, give an instruction to place an order for one or more items, and provide information needed to complete the purchase (e.g., payment and shipping information). The Web merchant then fulfills the order by providing the ordered items to the indicated recipient, such as by providing product items that have been ordered through physical distribution channels (e.g., shipment via a governmental postal service or private common carrier) or electronically (e.g., via download over the Internet, such as for digital music or videos) as appropriate. Ordered service items may similarly be provided electronically (e.g., providing email service) or physically (e.g., performing cleaning services at the purchaser's house).","In addition to such interactive user specification of requested information, there is also growing use of the Web to support the programmatic interaction of remote applications to exchange information via defined APIs (\u201capplication program interfaces\u201d), such as via Web services. Web services allow heterogeneous applications and computers to interact, and can be defined and implemented using a variety of underlying protocols and techniques. For example, some Web service implementations return data in computer-readable XML (\u201ceXtensible Markup Language\u201d) format using HTTP (\u201cHyperText Transport Protocol\u201d) in response to a Web service invocation request specified as a URI (\u201cUniform Resource Identifier\u201d), such as a URL (\u201cUniform Resource Locator\u201d) that includes a specified operation and one or more query parameters. In other implementations, additional underlying protocols are used for various purposes, such as SOAP (\u201cSimple Object Access Protocol\u201d) for standard message exchange, WSDL (\u201cWeb Services Description Language\u201d) for description of service invocation interfaces (e.g., using XML format), and UDDI (\u201cUniversal Description, Discovery, and Integration service\u201d) for discovery of available services.","Although the Web allows users to engage in shopping and other commerce-related transactions involving the exchange of monetary payments, a variety of problems related to making such payments exist. For example, although using credit cards to make payments provides some benefits to purchasers (e.g., refunds for at least some unauthorized charges, such as when a credit card number is stolen), various drawbacks exist to credit card use, such as that many purchasers do not have credit cards (or available credit on their credit cards), many sellers do not accept credit cards, and the fees charged by credit card companies can be problematic (e.g., transaction-based fees charged to sellers). In at least some circumstances, debit-based payments via electronic funds transfer (\u201cEFT\u201d) from a financial account of the purchaser (e.g., payments from a purchaser's bank account using the ACH, or \u201cAutomated Clearing House,\u201d system) may have advantages over credit card use (e.g., lower fees, greater availability to purchasers, and\/or greater acceptance by sellers), but purchasers may have less protection from fraudulent activity on their accounts than from credit card use, and may be reluctant to provide the necessary account-related details to a seller to enable the EFT. Moreover, other types of payments have other drawbacks, such as the increased risk to the seller that arises for payments scheduled to occur after delivery of purchased items (e.g., based on invoicing the purchaser), and delays and risks in using paper bank checks (e.g., delays in obtaining a check from a purchaser and in verifying the corresponding availability of funds, and risks that sufficient funds are not available).","A software facility is described that facilitates interactions between computing systems, such as by in some embodiments providing a third-party authorization system that automatically authorizes financial payments between parties in accordance with previously specified private authorization instructions of at least one of the parties. In some embodiments, some or all of the payments are associated with commerce-related or other transactions having associated financial payments, such as transactions initiated by a consumer via the Web to acquire one or more items from a merchant. In addition, in some embodiments the authorization system further provides authorized payments to one or more of the parties on behalf of one or more other parties.","In particular, potential consumers or other users who may desire to make financial payments to others may first define usage instruction sets with the authorization system, such as payment usage instruction sets for later use in authorizing financial payments (e.g., payments associated with transactions to which the user is a party) and\/or fee-based transactions. In some embodiments, such users may specify such payment instruction sets in such a manner as to control debit-based payments made from one or more bank accounts of the user via the ACH (\u201cAutomated Clearing House\u201d) system, or more generally in some embodiments to control any type of electronic funds transfer from a financial account of the user related to a debit transaction or from another related payment source associated with the user (e.g., stored value cards, gift cards, gift certificates, etc.).","Each such payment instruction set or other set of payment authorization instructions for a user may specify a variety of types of conditions related to whether payments are determined to be authorized, and may further specify the conditions in a variety of manners (e.g., by using one or more specified rules that regulate the conditions under which payment is authorized). For example, a user may specify restrictions for a payment instruction set that limits the financial exposure to the user of the transactions that can be authorized by that payment instruction set (e.g., via a number of times that the payment instruction set can authorize a transaction, a maximum payment amount per transaction that the payment instruction set can authorize, a maximum total payment amount that the payment instruction set can authorize, an expiration date for the payment instruction set, restrictions on what other users (if any) can use the payment instruction set to authorize payments, etc.). Additional details regarding such payment instruction sets are discussed elsewhere.","In addition, in at least some embodiments each such payment instruction set is associated with one or more financial accounts or other payment sources from which financial payments may be obtained and\/or to which financial payments may be made. In some such embodiments, the authorization system will also verify the financial accounts or other payment sources before enabling the use of an associated payment instruction set, such as by verifying a checking or savings bank account by making one or more small deposits or withdrawals, and optionally verifying that the user can provide information about those transactions (so as to increase the likelihood that the financial account exists and that the user has access to monthly statements or other information about the account), while in other embodiments no such verification may be performed for at least some types of financial accounts or other payment sources. Moreover, in at least some embodiments the authorization system may take further action to verify other information about the user (whether in addition to or instead of verifying the financial accounts), such as to corroborate a user's identity and\/or indicated attributes based on evidence from third parties (e.g., a government-issued driver's license or passport) or in other manners.","After receiving a specified payment or other usage instruction set for a user, the authorization system stores the instruction set in a manner associated with the user (e.g., associates it with an account of the user with the authorization system), optionally after first approving the instruction set (e.g., based on verification that the instruction set includes required information, if any, and\/or is in the correct form). The authorization system also in at least some embodiments generates one or more references for later use in referring to the instruction set, associates the reference(s) with the instruction set (e.g., by storing an indication of the reference(s) with the stored instruction set), and in some such embodiments provides the reference(s) to the user for later use. As discussed in greater detail elsewhere, the reference can be generated in a variety of ways and can take a variety of forms (e.g., as a token in numerical or other form, such as a long random number guaranteed to be unique), including being generated in such a manner as to allow anonymous and\/or private use of a reference by a user, such as by lacking any identification information related to the user and\/or by lacking any information about the instruction set associated with the reference (e.g., to prevent other parties to a potential transaction that involves such a reference from obtaining such information about the user, about the associated instruction set and its conditions, and\/or about any financial accounts with which the instruction set is associated).","After a payment or other usage instruction set has been defined, the instruction set can then be used to allow automatic authorization of a financial payment or to otherwise authorize a transaction in accordance with the previously defined conditions of the instruction set. For example, in some embodiments a consumer may interact with a Web merchant or other online retailer in order to specify one or more items to be acquired, and then may indicate an instruction set of the consumer to be used as a source of payment for the acquisition of the items. After the authorization system receives an indication of the instruction set (e.g., an associated reference, whether received directly from the consumer or from the retailer after the consumer supplies the reference to the retailer) and information about the potential financial payment from the consumer to the retailer for the item acquisition transaction (e.g., along with other information about the transaction and the retailer), the authorization system determines whether the payment is authorized and provides a corresponding response.","In some embodiments, the authorization system may further assist in providing the payment from the consumer to the retailer, such as by debiting a financial account of the consumer (e.g., by using the ACH system to debit a bank account of the consumer, such as with the authorization system acting as the payment recipient, or instead by directly debiting an account of the consumer with the authorization system or an affiliated system) and crediting an account of the retailer (e.g., by using the ACH system to credit a bank account of the retailer, such as with the authorization system acting as the payment provider, or instead by directly crediting an account of the retailer with the authorization system or an affiliated system). Further, the authorization system may in some embodiments obtain payment for providing the authorization functionality from the consumer and\/or the retailer, such as by debiting their financial accounts (e.g., by charging a fixed fee per payment or transaction, such as five cents, or instead by varying the fee based on the amount of the payment or other factor). As discussed in greater detail elsewhere, including with respect to , payment and other usage instruction sets and their associated references may further be used in a wide variety of other situations and manners (e.g., as part of programmatic transactions conducted between executing computer programs, such as a transaction involving the use of one or more Web services of one or more Web service providers by one or more application programs affiliated with one or more Web service consumers).",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIGS. 1F-1G","FIGS. 1H-1I","FIG. 1F"],"b":["101","103"]},"In this example, the account creation screen also includes a section  in which the user CCC can specify one or more payment instruments to be used for payments to be made to others. In this example, user CCC specifies a bank account as an available payment instrument, although with a restriction that any individual payments from the account be no larger than $300, as well as a personal credit card payment instrument with restrictions of maximum individual payments of $200 and a maximum cumulative balance of $2,000. While not illustrated here, in some embodiments the user account being created may also be available for use as an additional payment instrument, such as based on funds pre-deposited in the account and\/or based on credit provided to the user by the PHS system. The account creation screen also includes an optional section  in which the user CCC can specify one or more payment repositories (e.g., the previously specified bank account) for payments that the user may receive, such as for monetary refunds that are not credited to a previously used payment instrument. In this example, no repositories have yet been specified, and in some embodiments the user account being created may also be available for use as a payment repository. After specifying the various types of information, the user can then select the control  to cause the account to be created.","In the illustrated embodiment, the user is next presented with the option of creating one or more payment or other usage instruction sets via the example screen shown in . In particular, the illustrated screen includes a header section  with overview information and a specification section  in which various conditions can be specified for a payment instruction set being created. In this example, section  allows the user to specify a name for the payment instruction set (which the user in this example designates \u201cOnlineShopping\u201d), an expiration date for the instruction set (which in this example is \u201c01\/01\/2006\u201d), a usage type for the instruction set (which in this example is to provide payments), and a payment instrument from which to provide any such payments. The user CCC can also specify one or more specific conditions for use in determining whether this instruction set authorizes a specific payment. In this example, five such conditions have been defined, with each condition in this example including an attribute (e.g., attributes related to a payment amount or to various aspects of a transaction with which the payment is associated) and indications of one or more corresponding allowed or prohibited values for that attribute. In addition, a drop-down menu for a sixth condition shows various other types of attributes that can be selected and customized for this payment instruction set in this example. Such conditions may be stored and used by the PHS system in various ways (e.g., as rules), and in other embodiments may be specified in a variety of other manners (e.g., by having the user supply a script or other executable code that when executed will provide an indication of whether a proposed payment is authorized).","In particular, in this example user CCC has specified that this payment instruction set will only authorize payments that do not exceed $100, despite the underlying bank account payment instrument in this example allowing payments of up to $300 (as specified in section  of FIG. F)\u2014thus, user CCC may, for example, define another payment instruction set for use with the bank account that will authorize payments above $100 but not more than $300. Other illustrated conditions include that the payment instruction set will only authorize 100 total payments (e.g., to limit financial exposure to user CCC if other users are allowed to use this payment instruction set), that the payment instruction set is only for use when the user is acting as the sender of a payment, that the user will not authorize any transaction fees separate from the payment, and that the user will receive at least a 30-day full refund policy. After specifying the various information for the payment instruction set being created, the user CCC can then select one of the controls in section  to create the current payment instruction set and continue with creating another instruction set for the user's account (e.g., another payment instruction set for use with the same bank account), to create the current payment instruction set and exit the account modification, or to skip the creation of a current payment instruction set and exit. Once created, the various information regarding the payment instruction set will be stored for later use.","Specific attribute examples and types of attributes are shown in this example for illustrative purposes and are provided in a simplified manner for the purpose of example, and similar information could instead be specified in other ways in other situations. For example, various other example attributes are presented in this example that can be used for specified conditions, including allowed or disallowed recipients to whom user CCC may send payment, allowed or disallowed transaction types with which the payment instruction set can be used, allowed or disallowed types of payment repositories to which payment will be sent, allowed or disallowed currencies in which payments may be made, various terms and conditions related to handling any disputes that occur, etc. In addition, the illustrated embodiment allows a user to specify a user-defined condition, such as by including executable code and\/or a mechanism for invoking an accessible executable function (e.g., a Web service). As an alternative, rather than having different attributes for a type of aspect such as attributes for both allowed and disallowed recipients, a single attribute for recipients could instead be provided, with the type of evaluation criteria instead used to determine whether a user is allowed or disallowed (e.g., by specifying that the recipient \u201cIS\u201d or \u201cIS-NOT\u201d a specified value). In addition, rather than specifying an expiration date and\/or use type separate from the other conditions, such information may instead be included among the various conditions that can be specified. Additional details regarding example attributes are discussed elsewhere.","Once the payment instruction set has been defined, user CCC can then use the payment instruction set to authorize payments in various ways. For example, in an embodiment in which the PHS system operates in conjunction with one or more online retailers (e.g., if the PHS system is implemented by a Web store), user CCC can then shop with the online retailer and use the defined payment instruction set as a payment mechanism for one or more items being ordered.  illustrates an example Web page that may be displayed to user CCC in such an embodiment after the payment instruction set has been created (e.g., the Web page may be sent from a server system to a client system in use by user CCC when the client system requests to review detailed information about the item), with this example Web page describing an item available from the online retailer.","In particular, the example Web page contains a summary description section  and a detailed description section  that each contain various information about the item (in this example, referred to as \u201cItem XYZ\u201d), an introductory section  that indicates that the identity of user CCC is known to the online retailer (e.g., based on the user having previously completed a login procedure), sections  and  for use by user CCC in ordering the item, and gift indication selection option . In particular, the shopping cart section  allows the user to add the described item to a shopping cart, from which user CCC can later indicate payment and shipping information for the item. The ordering section  allows the user to immediately initiate ordering of the described item by selecting the \u201cBuy It Now\u201d control (e.g., with a single click of the mouse button over the displayed indication of the control). When so indicated by user CCC, the item will be ordered using the payment option selected in user-selectable field to provide payment, and by using the shipping option selected in user-selectable field to provide shipping information. In this example, when generating the displayed Web page, the online retailer retrieved indications of the previously defined payment options for user CCC and included them with the page, thus allowing user CCC to select a payment option from the displayed dropdown list that includes options and . As is indicated, the payment instruction set (\u201cPIS\u201d) created by user CCC in  is illustrated as option , and is the currently selected value in the field . Thus, after selection of the control with that currently selected value, the online retailer and\/or the PHS system will use the information for the indicated payment instruction set to determine whether a payment (not indicated) for ordering Item XYZ is authorized, and if so will collect the payment from user CCC in accordance with the payment instruction set (e.g., by withdrawing the payment from the bank account associated with the payment instruction set).",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 1I","FIG. 1H","FIG. 1I"],"b":["151","157","153","155"]},"In addition, since this online retailer does not have information about defined payment options available to user CCC, the ordering section  in this embodiment does not include a dropdown list with information about such payment options. Instead, the ordering section  includes a field in which user CCC can specify a reference corresponding to the PHS payment instruction set created by user CCC in  (e.g., a unique numeric reference for the payment instruction set that was automatically created by the PHS system and provided to user CCC, not shown). The ordering section  also includes a \u201cBuy It Now Using A PHS PIS\u201d control that allows the user to immediately initiate ordering of the described item using the PHS payment instruction set specified in field as the payment source for the item ordering. In this example, when user CCC selects the control , the online retailer then supplies the PIS reference to the PHS system along with information about the payment (not shown) for ordering the described item, and optionally supplies various other information regarding the transaction and\/or the online retailer. The PHS system uses stored information for the payment instruction set to determine whether the payment for ordering Item WXY is authorized, and if so provides the payment to the online retailer (e.g., by depositing the payment in a PHS system account of the online retailer, such as after deducting a transaction fee charged to the retailer) and collects the payment from user CCC in accordance with the payment instruction set.","While in this embodiment the online retailer obtains the consumer's reference, the functionality provided by the authorization system allows the consumer to protect their confidential information from the retailer and\/or other third parties (e.g., hackers and identity thieves) in various ways. In particular, in this example the online retailer or other third party cannot obtain any information from the reference that provides information about the user, the bank account of the consumer that is associated with the reference, or any conditions or other information specified for the instruction set associated with the reference. In addition, the user can define any conditions that are desired to restrict the use of the reference, such as to limit the number of times that the reference can be used (e.g., to as little as a single use), the size of individual payments and\/or cumulative payments that the reference can be used to authorize (e.g., to as little as the payment for the current transaction, such as for a dynamically created instruction set and reference), the types of payments or transactions that the reference can be used to authorize (e.g., restrictions on items that can be purchased, such as one or more specific items; restrictions on types of acquisitions of items, such as purchases versus rentals; restrictions on payment recipients, such as for one or more specific retailers; etc.), etc. Moreover, the user and\/or authorization system may further provide various functionality to corroborate the identity of a user who attempts to use the reference in various ways, such as for every instruction set and potential payment or transaction, in accordance with instructions specified by a user for his\/her instruction set, in a random occasional manner (e.g., to perform spot checks and gather information about attempted fraudulent use), etc. Furthermore, as described elsewhere, in at least some embodiments the authorization system provides various protection against misuse of a user's reference or associated instruction set by others, such as to provide full refunds for a specified period of time (e.g., 30 days).","While not illustrated here, in such embodiments a variety of other types of information and\/or selections may be provided, such as to allow user CCC to specify other types of payment options that are not processed via the PHS system (e.g., a credit card), as well as to specify shipping and other types of information. In addition, in other embodiments user CCC may instead be prompted to specify a PHS payment instruction set in other ways, such as if the online retailer initially interacts with the third-party PHS system to obtain at least indications of one or more payment instruction sets of the user (e.g., the user-specified name of the payment instruction set) and to present those indications to the user as payment options (e.g., in a manner similar to that illustrated with respect to the dropdown list of ). As yet another alternative, in some embodiments the online retailer may instead provide functionality to redirect user CCC to a Web page or other interactive functionality provided by the PHS system (e.g., after the user selects control , such as via information included in a hyperlink associated with the control that specifies a Web page provided by the PHS system or that otherwise causes an appropriate API provided by the PHS system to be accessed) in such a manner as to allow the user to provide any user-specific information and\/or payment instruction set information directly to the PHS system (e.g., in such a manner as to prevent the online retailer from obtaining that information), and optionally to return the user to interactions with the online retailer after the interactions with the PHS system are completed.","In addition to the illustrated types of use of payment instruction sets by consumers for shopping-related purposes, consumers can similarly use such payment instruction sets for authorizing various other types of payments in other embodiments. In particular, in any situation in which a user may desire to make a financial payment, the user may use information about a payment instruction set (e.g., an associated reference) in conjunction with the PHS system to provide payment as appropriate to an intended recipient, whether by interacting directly with the PHS system or by providing the information about the payment instruction set to the intended recipient for use in interacting with the PHS system. In addition, payment and other usage instruction sets can be used in a variety of manners and by a variety of other types of users and entities in other embodiments. For example, in some embodiments two or more parties to a potential transaction each supply a reference for use in authorizing the potential transaction (or authorizing one or more payments related to the transaction). Those references and various information about the potential transaction can then be supplied to the authorization system for automatic determination of whether the transaction is authorized (e.g., a dynamic determination, such as in a real-time manner) using each of the references. As discussed in greater detail below, in some embodiments the automatic determination by the authorization system of whether a potential transaction is authorized based on the supplied references includes retrieving the instruction sets associated with those references and then determining whether the instruction sets are compatible.","As previously noted, in some embodiments payment and other usage instruction sets are used to authorize programmatic transactions (or payments associated with such transactions), such as transactions involving the use of Web services. For example, a Web service consumer user (e.g., an application developer who would like their application program to be able to invoke Web services under specified circumstances) may define a usage instruction set and make information about the usage instruction set accessible to an executing program so as to allow use of the usage instruction set to authorize Web service-related transactions and\/or payments for such transactions. Similarly, a potential Web service provider may specify rules for a usage instruction set that limits the liability to the Web service provider for the transactions that can be authorized by that usage instruction set (e.g., limitations on consumers that can purchase access to a Web service provided by the Web service provider, limitations on types of payment that can be used to purchase access to the Web service, limitations on remedies available to consumers that are unhappy with their use of the Web service, etc.). In addition, a potential Web service caller (e.g., an end user of an application program supplied by an application developer that invokes one or more Web services) may specify rules for a usage instruction set that limits the liability to the caller for the transactions that can be authorized by that usage instruction set (e.g., limitations on types of programmatic transactions that the caller is authorized to initiate and\/or on types of payments that can be made to purchase access to a programmatic service, such as payments to providers of the services and\/or fees paid to a transaction authorization service and\/or other third-party service such as a payment service).","Thus, the PHS system or other transaction authorization system may be used to authorize payments and\/or transactions for a variety of types of interactions between parties, with  illustrating examples of some such interactions. In particular,  illustrates an example of a 2-party transaction in which a party requests a service to be provided by a party , with the providing of the service having an associated cost. A transaction authorization system uses information about the parties and (e.g., information received from one of the parties who makes a programmatic call to the transaction authorization system requesting the authorization) in order to determine whether to authorize the transaction and\/or the providing of a payment from the service requester to the service provider to cover the cost associated with the transaction. After the transaction and\/or payment are authorized, the transaction authorization system provides an indication of the authorization (e.g., as a response to the authorization request call), and may further in some embodiments actually make the authorized payment on behalf of the service requester. Details regarding how the authorization process may occur are discussed in greater detail below.","The illustrated authorization and payment techniques can be used in a variety of situations. For example, the provided service may involve a programmatic transaction between the two parties (e.g., invocation by the service requester party of a Web service provided by the service provider party), or instead could involve other types of transactions (e.g., a physical transaction between the parties, such as providing a physical product or service from one party to the other). The authorization interactions with the transaction authorization system can similarly be performed in various ways, such as during the transaction (e.g., such that the transaction will not be completed unless an appropriate authorization response is received), or instead in a manner separate from the transaction (e.g., after the transaction is completed in order to provide payment to the service provider). In addition, the information regarding the parties that is used in performing the authorization may similarly have a variety of forms, as discussed in greater detail below.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 8B","b":["850","830","805","810","820","810","815"],"i":["b ","b ","b ","b","b ","b ","b "]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 8C","b":["830","860","860","815","820","840"],"i":["c ","a","n","c","c ","c "]},"The information about a potential payment and\/or potential transaction that is supplied to the transaction authorization system may vary in various embodiments and situations. For example, the information may in some situations be limited to merely a payment amount to be paid by one of the parties to another of the parties, while in other situations a variety of additional details about a related transaction may be supplied (e.g., a type of the transaction). Furthermore, in some situations the call to the transaction authorization system can further specify details about what (if any) each of the two or more parties is to pay, whether to another party and\/or as fees to the transaction authorization system.","As previously noted, in at least some embodiments in which multiple payment instruction sets or other usage instruction sets are supplied for use in authorizing a potential payment and\/or a potential transaction (e.g., a single instruction set from each of multiple parties, or multiple instructions sets from a single party), the determining of whether to authorize the payment and\/or transaction based on the usage instruction sets includes determining whether the instruction sets are compatible. This determining can be performed in various ways in various embodiments, such as by determining if each rule or other condition in each instruction set is satisfied for the current potential payment and\/or transaction. Such satisfaction can occur in various ways for different types of conditions, such as based on information about the potential payment and\/or transaction (e.g., a type of transaction and\/or a specific payment amount), information about one or more other parties to the transaction (e.g., whether the parties satisfy specified criteria), information about one or more other instruction sets specified for the potential transaction (e.g., whether one or more corresponding conditions in the other instruction rule set(s) match or are otherwise compatible with the condition), etc. Conversely, in some situations instruction sets may be determined not to be compatible because one or more of them (and their associated references) are invalid for a current potential payment and\/or transaction based on current circumstances and\/or circumstances at the time of the potential transaction, such as if the instruction set is not currently available for use (e.g., it has expired or is otherwise not currently available for use, such as based on a total number of allowable uses or total allowable payment amount having been exceeded) and\/or if it cannot be used for the potential transaction.","When a financial payment is automatically determined to be authorized, the authorization system may in some embodiments further perform or facilitate the payment exchange between the parties as appropriate. For example, in some embodiments a payment-providing user may have previously specified one or more payment instruments (e.g., a credit card, bank account, etc.), and if so a financial payment may be obtained from one or more of those payment instruments in an appropriate manner (e.g., from a payment instrument specified by a payment instruction set for the payment-providing user). Similarly, a payment-receiving user may have previously specified one or more payment repositories (e.g., a bank account, debit card, etc.), and if so a financial payment may be provided to one or more of those payment repositories in an appropriate manner (e.g., to a payment repository specified by a payment instruction set for the payment-receiving user).","After the transaction authorization system authorizes a potential transaction (and optionally performs any associated financial payments for the potential transaction), the parties to the transaction can then perform the transaction in an appropriate manner. For example, when the transaction is a fee-based Web service transaction, the Web service consumer can invoke the Web service and the provider of the Web service can provide the associated functionality for the Web service to the consumer. Alternatively, in some embodiments the authorization of such a potential payment and\/or potential transaction may occur at other times, such as after the payment and\/or transaction have occurred, or in advance of the potential payment and\/or potential transaction (e.g., to pre-authorize the payment or transaction).","In some embodiments, additional restrictions may be imposed by the transaction authorization system even after a potential transaction is authorized and\/or performed. For example, in some situations recipients of payments may not be allowed to immediately withdraw or receive those payments, such as by limiting access to an account of the transaction authorization system in which the payment has been deposited and\/or by delaying deposit of some or all of a received payment into another payment repository for the recipient. Such payment access restrictions may be performed for various reasons and in various ways, including to allow any disputes to be resolved and any refunds to be automatically made (e.g., as a chargeback to the payment recipient for the amount of the refund) during a specified period of time after the transaction is authorized and\/or performed. More generally, in at least some embodiments the one or more sets of private authorization instructions used to authorize a financial payment for a transaction may further specify one or more conditions related to handling disputes, and if so the transaction authorization system may enforce any such dispute-related conditions when resolving disputes, such as if the specified conditions were used to form a binding agreement between the parties to the transaction. In addition, in some embodiments additional related functionality may further be provided by the transaction authorization system or from a third-party, such as a fee-based underwriting or insurance service that guarantees or provides the funds for any such refunds, thus allowing a payment recipient to have immediate or more rapid access to any received payments.","In some embodiments, users of the transaction authorization system may more generally define other types of usage instruction sets for use in situations other than authorizing fee-based transactions and other payments, whether instead of or in addition to payment instruction sets. For example, such usage instruction sets can each include one or more specified rules or other conditions that regulate the circumstances under which the usage instruction set can authorize a potential transaction that does not include a fee, such as to determine whether to provide access to restricted information or a restricted service.","In addition, the rules and other conditions in usage instruction sets can be specified and used in various ways in various embodiments, and further can have a variety of forms in various embodiments. For example, in some embodiments a rule or other condition may specify a type of information to examine, a type of evaluation to perform with respect to that information, and a test for determining whether the results of the evaluation satisfy the condition. More generally, in other embodiments a rule or condition may reflect any circumstance or information that can be examined and\/or evaluated to determine whether it is satisfied in a specified situation. For example, in some embodiments a rule or other condition can be specified using XML format, and the instruction sets can further in some embodiments be specified and\/or stored as XML documents.","Furthermore, in some embodiments users may select from a variety of predefined types of rules or other conditions when creating usage instruction sets, such as with each predefined type specifying a type of condition related to use of an instruction set and with each user selection including specifying one or more parameter values to customize the predefined type so as to affect how or when the specific usage condition is satisfied for the instruction set being created. In addition, in some embodiments users may specify various user-specific rules or conditions, such as conditions that each indicate a user-specified procedure for determining when a condition is satisfied (e.g., by providing executable code for the condition that when invoked provides an indication as to whether the condition is satisfied, or instead by indicating a way to automatically obtain a response indicating whether the condition is satisfied, such as by invoking an accessible user-specified Web service or other function using specified parameter values).","In some embodiments, an evaluation of a rule or other condition may further involve obtaining additional information to be used as part of the determination as to whether the condition is satisfied, such as in an automated manner and\/or in an interactive manner with respect to one or more users (e.g., by querying the user that created the instruction set to confirm an evaluation and\/or to provide additional information). Moreover, in some embodiments in which functionality related to security and\/or privacy for a usage instruction set is provided, one or more of the rules or other conditions in the instruction set may be used to provide that functionality (e.g., by restricting who can access and\/or modify the instruction set), while in other embodiments such functionality may be provided in other manners (e.g., by controlling access to a user account with which one or more instruction sets can be associated).","In addition, payment\/usage instruction sets and their rules\/conditions can be created in various ways in various embodiments, such as interactively via a GUI provided by the transaction authorization system and\/or via invocation of one or more Web services provided by the transaction authorization system for that purpose. Such Web services may be implemented in various ways, such as using APIs based on XML over HTTP (e.g., as part of the REpresentational State Transfer, or \u201cREST\u201d, distributed interaction model that focuses on resources) and\/or on the use of SOAP and\/or other protocols related to Web services. Furthermore, after an instruction set has been created and associated with a reference (e.g., a reference token), the instruction set may in some embodiments not be allowed to be modified. Alternatively, in some embodiments such an instruction set may be modified, and a new reference for the modified instruction set will be generated for the new instruction set (e.g., to replace the prior reference). Moreover, in some embodiments references and\/or associated instruction sets may be dynamically created at the time of intended use (e.g., as part of or just prior to a customer engaging in an interactive commerce-related transaction, to attempting to invoke a programmatic service and\/or to sending an authorization request to a third-party authorizer)\u2014as one example, one-time or single-use references and\/or instruction sets may be created and used (e.g., for a specific potential payment and\/or potential transaction) in some embodiments.","Furthermore, in some embodiments in which fee-based transactions are authorized and financial payments are handled, some or all of the users may further have an account with the transaction authorization system that facilitates such payments, such as an account that can be used by a user as a payment instrument and\/or a payment repository. Such accounts and\/or other financial instruments\/repositories may in some embodiments support micro-payments of very small amounts. In addition, in some embodiments the transaction authorization system may further provide aggregation of financial payments to be provided and\/or received (e.g., on a periodic basis, such as a month), such as to minimize fees associated with financial payment transactions and\/or to allow minimum payment amounts to be reached. As with other types of accounts, such user accounts may in some embodiments have various conditions and restrictions related to their use, such as a maximum allowed credit balance, as well as various security and access control (e.g., password-based).","In addition, while the transaction authorization system has been described above as providing a variety of functionality and capabilities in various embodiments, in some embodiments some of such functionality and capabilities may instead be split across one or more systems. For example, in some embodiments some or all users may already have user accounts with another system with which the transaction authorization system is affiliated or to which the transaction authorization system otherwise has access, and if so some or all of the account-related functionality may be provided by that other system in conjunction with the transaction authorization system (e.g., the storing of instruction sets, the generating of references, the providing of payment repository\/instrument functionality, etc.).","For illustrative purposes, some embodiments of the software facility are described below in which various specific types of capabilities and functionalities are performed by a specific embodiment of a transaction authorization system, and in which users define and use specific types of instruction sets in specific ways, such as payment instruction sets to authorize various types of fee-based programmatic transactions and other types of payments, and such as by representing specified conditions for instruction sets in a rule format. However, those skilled in the art will appreciate that the techniques of the invention can be used in a wide variety of other situations, including with services and items other than Web services and for purposes other than providing financial payment, and that the invention is not limited to the exemplary details provided.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 2","b":["200","220","210"]},"In particular, in the illustrated embodiment a user (not shown) performing application development uses a computing system  to interact  with the PHS to enable later payment handling functionality on behalf of the application programs developed by the user. The application developer user's computing system  first interacts with the Account System to define a user account  for the application developer, such as via an interactive GUI  provided by the Account System or instead via one or more Web services APIs  provided by the Account System. In the illustrated embodiment, each such user account may include one or more usage instruction rule sets  that each specify various rules regarding how and when the usage instruction rule set can be used for payment purposes. In addition, each usage instruction rule set has an associated unique reference token  for later referencing of that usage instruction rule set. After the application developer user creates the account with one or more usage instruction rule sets, the user then includes one or more of the reference tokens  for the usage instruction rule sets within one or more application programs  that they create.","Similarly, one or more users (not shown) that provide Web services to others use a computing system  to interact  with the Account System via the interactive GUI and\/or Web services APIs of the Account System. As with the application developer, each Web services provider user can create an account with one or more usage instruction rule sets with the Account System. The Web services provider user can then associate one or more of their reference tokens  for their usage instruction rule sets as part of one or more Web services Provider Transaction Systems  with which the Web services provider provides Web services to others (e.g., for a fee).","When one of the application programs  is later being executed by an end user (not shown) on an end-user computing system , the application program invokes  one or more Web services provided by the Web services Provider's Transaction System, such as via a Web services API . However, the Web services provider in the illustrated embodiment will provide the requested Web service only if appropriate payment is provided for the application program. Thus, in the illustrated embodiment, the application program supplies a reference token  of the application developer user as part of the Web service invocation. Before providing the requested Web service to the application program, the Web services Provider Transaction System then contacts  the PHS Transaction System  to obtain appropriate authorization and payment, such as via invocation of a Web services API  of the PHS Transaction System. In the illustrated embodiment, the Web services Provider Transaction System provides the reference token  for the Web services Provider as well as the reference token  from the application program as part of the interaction with the PHS Transaction System, and further provides information about the transaction and associated payment that is to occur. While not illustrated here, in some embodiments the one or more Web services provided by the Web services Provider's Transaction System  and the reference token  may be part of one or more application programs of the Web services provider, such as application programs provided as part of a Web site (not shown) of the Web services provider.","The PHS Transaction System  determines if the payment transaction is approved in the illustrated embodiment by first interacting with the Account System  to retrieve information about the usage instruction rule sets  corresponding to the reference tokens provided in the call to the Web service API , as well as further retrieving other information from the user accounts  to which those usage instruction rule sets belong. After obtaining the usage instruction rule sets and other information, the PHS Transaction System  then determines whether the rule sets are compatible and otherwise authorize the requested payment to be made, and if so the PHS Transaction System performs the payment (e.g., by charging a payment instrument associated with the application program's reference token  and by depositing at least some of that charge in a payment repository associated with the Transaction System 's reference token ) and provides confirmation to the Transaction System , with the Transaction System  subsequently providing the initially requested Web service to the application program. In some embodiments, the PHS may further obtain payment for some or all of the services it provides, such as a portion of the payment for each transaction performed and\/or a payment associated with account creation and\/or modification.","Although the PHS Transaction System  and Account System  are illustrated in this embodiment as being separate but cooperating systems, in other embodiments the illustrated functionality can be provided in other ways. For example, in some embodiments a single system may provide the account creation and maintenance capability as well as the transaction authorization and handling capability, while in other embodiments the Transaction System  and Account System  may instead be provided by unrelated systems\/organizations.","In addition, while only payment-type transactions are illustrated here, in other embodiments a variety of other types of transactions could be performed, whether instead of or in addition to a payment transaction. Moreover, while the illustrated embodiment discusses a per-use fee for using the Web service of the Transaction System , in other embodiments a variety of other types of purchase transactions could be performed, such as an ongoing subscription to one or more Web services of the Transaction System  for one or more application programs . Alternatively, a specified number of uses of the Web service or an unlimited number of uses during a specified period of time may instead be purchased and associated with the reference token , such as by the application developer user before distributing the application program  to the end users. In such situations, information about the subscription or other multi-use purchase may be stored by the Account System in various ways so that the Transaction System  will later be able to determine that a payment transaction is authorized. Additional details regarding automatically authorizing programmatic transactions using usage instruction rule sets are included in related U.S. patent application Ser. No. 10\/894,347, filed Jul. 19, 2004 and entitled \u201cAutomatic Authorization Of Programmatic Transactions\u201d, which is hereby incorporated by reference in its entirety.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIGS. 9A-9B","FIGS. 9A and 9B"],"b":["10","10"]},"The illustrated series of actions for the example in  begins with a representative of MapX (not shown) performing interactive account setup actions  with the Subway transaction authorization system , and in particular using a Web site  provided by the Subway system  to specify information about MapX (e.g., credential information and Automated Clearing House (or \u201cACH\u201d) bank information for MapX). The Subway Web site  then interacts with a Subway Web service  to create an account for MapX by supplying the received information for MapX and by receiving an ID for the new account in response. A representative of MapX then initiates programmatic interactions  with a Subway Web service  to create a payment instruction rule set for MapX by supplying MapX's credentials, account ID and the rules for the payment instruction rule set\u2014such programmatic interactions by the MapX representative may include using a MapX Web service provider application  that will later provide the mapping Web service to consumers or, instead, using another program (not shown). The Subway system  stores the payment instruction rule set in storage  and returns an associated token to the MapX representative, and the MapX representative includes the token with the MapX Web service provider application  for later use in authorizing transactions. After registering the payment instruction rule set, MapX is now able to use the MapX application  to offer its mapping Web service to potential consumers of the Web service.","A representative of CellX (not shown) then interacts  with the MapX application  to sign up for the MapX mapping service (e.g., by using an appropriate Web service of the MapX application  to perform the signup activities), and receives MapX's token in response. The CellX representative also performs account setup actions  with the Subway system  by interacting with the Subway Web site  to specify information about CellX, and receives an account ID in response. To obtain the account ID, the Subway Web site  interacts with a Subway Web service  to create the CellX account by supplying the information received from CellX. The CellX representative then initiates programmatic interactions  with a Subway Web service  to create a payment instruction rule set for CellX by supplying CellX's credentials, account ID and the rules for the payment instruction rule set. The Subway system  then stores the payment instruction rule set in storage  and returns an associated token to the CellX representative, and the CellX representative includes the token with a CellX application  that is available to CellX customers via the cellphone service from CellX. After registering the payment instruction rule set, CellX is now able to offer MapX's mapping Web service to its customers via the CellX application .","A customer of the CellX cellphone service then selects  functionality in the CellX application  that uses MapX's mapping functionality from the MapX application , such as by selecting a map-related link that is part of an online directory service of the CellX application . The user selection then causes the CellX application  to programmatically invoke a MapX Web service from the MapX application  in order to request a particular map corresponding to the customer's selection, with the invocation including supplying the CellX reference token previously associated with the CellX application . The MapX application  then submits to a Subway Web service  a pay authorization request that includes information about the transaction, MapX's credential, and the MapX and CellX reference tokens. The Subway system  then retrieves the payment instruction rules sets for the reference tokens and uses them to determine that the transaction is authorized, performs the payment from CellX to MapX for the invocation, and returns a transaction ID to the MapX application  indicating the transaction authorization. The MapX application  then supplies the requested map to the CellX application , which displays the map to the customer. As one example of a possible implementation for the MapX application  and the CellX application , the CellX application  may operate in a manner similar to application program  previously described in , and the MapX application  may operate in a manner similar to an application program of the WS Provider Transaction System  that includes the WS API , as previously described in .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIGS. 10A-10C","b":["960","960","960","970"]},"The illustrated series of actions for the example in  begins with a representative of a merchant (not shown) performing interactive actions  to sign up for Rob's shopping cart service by interacting with Rob's shopping cart application , which first redirects the representative to the Subway transaction authorization system  to register a payment instruction rule set for the merchant. The merchant representative next interacts with a Web site  provided by the Subway system  to sign in (in this example the merchant already has an account with the Subway system ) and to supply payment instruction rule information to the Subway system . The Subway Web site  then interacts with a Subway Web service  to create a payment instruction rule set by supplying credentials for Rob's shopping cart Web site application , an account ID for the merchant, and the rules for the payment instruction rule set. The Subway system  next stores the payment instruction rule set in storage  and returns an associated token to the merchant via Rob's shopping cart Web site application . The merchant then includes customer-selectable controls related to shopping cart functionality as part of the merchant's Web site application , with the controls associated with appropriate URLs that use the merchant reference token as a parameter while invoking corresponding Web services provided by Rob's shopping cart Web site application .","A customer of the merchant then interacts  with the merchant's Web site application  to select an appropriate control to add an item to the customer's shopping cart, which causes information to be sent from the merchant application  to Rob's shopping cart Web site application  that includes a session ID for the customer and the reference token for the merchant. When the customer later indicates via the merchant Web site application  to proceed to checkout, the merchant application  sends information to Rob's shopping cart application , which in turn interacts with the Subway Web site  in order to dynamically specify a one-time set of payment instruction rules for the customer for the amount corresponding to purchasing the items in the customer's shopping cart. The customer is also prompted to sign in at the Subway Web site , including creating an account if need be. The Subway Web site  then proceeds to interact with a Subway Web service  to create the payment instruction rule set by supplying credentials for Rob's shopping cart Web site application , an account ID for the customer, and the rules for the payment instruction rule set. The Subway system  next stores the payment instruction rule set in storage  and returns an associated token for the customer to Rob's shopping cart Web site application .","When the customer of the merchant indicates placing an order by selecting a \u201cConfirm Order\u201d control via the merchant Web site application , the merchant application  sends an indication to Rob's shopping cart Web site application  that includes the session ID. Rob's shopping cart Web site application  then retrieves the reference token for the customer that was previously created, and submits a pay authorization request to a Subway Web service  that includes information about the transaction, the shopping cart Web site credential, and the reference tokens for the merchant and customer. The Subway system  next retrieves the payment instruction rules sets for the reference tokens and uses them to determine that the transaction is authorized, performs the payment from the customer to the merchant for the transaction, and returns a transaction ID to Rob's shopping cart Web site application  indicating the transaction authorization.","In a similar manner to ,  provide examples of interactions by users to create accounts and usage instruction rule sets for later use by a transaction authorization and handling system. In particular,  provides an example of a GUI via which a Web service provider user ABC interactively creates a user account, such as by filling in forms in a Web page provided by an Account System. In this illustrated example, the example interactive creation screen includes a heading area  with overview information, followed by an area  in which the user can specify various general information for the account, such as an account name, a password for access control to view and modify the account, any optional certifications, and any optional organization affiliations. In this example, user ABC specifies a certification from a third-party company BCD Corporation, as some usage instruction rule sets of potential consumers of the Web services provided by ABC may request such a certification in order to authorize payment to ABC. Similarly, user ABC indicates organization affiliations both to its own company and to an association of various Web service providers, as usage instruction rule sets of potential consumers of ABC's Web services may similarly request one or more such organization affiliations to authorize payment to user ABC.","In this example, the account creation screen also includes an optional section  in which the user ABC can specify one or more payment repositories for payments that the user may receive, such as for providing fee-based Web services to consumers. In this example embodiment, user ABC specifies two payment repositories in which incoming payments may be deposited, including a bank account and a debit card. The user further specifies restrictions for the debit card such that any payments deposited must be a minimum of at least five cents. The section  in this illustrated embodiment also indicates that the user account being created can itself serve as a payment repository for the user.","The account creation screen also includes a section  in which the user ABC can specify one or more payment instruments to be used for payments to be made to others. In this example, user ABC specifies the same bank account as an available payment instrument, although with a restriction that any individual payments from the account be no larger than $50, as well as a credit card payment instrument with restrictions of maximum individual payments of $200 and a maximum cumulative balance of $2,000. Section  similarly indicates that the user account being created can be used as a payment instrument by the user, which for this user and in this example includes a $1,000 maximum balance credit limit. After specifying the various types of information, the user can then select the control to create the account, or the user can instead select the control to cancel the account creation.","In the illustrated embodiment, after initially creating the user account, the user is then presented with the option of creating one or more usage instruction rule sets via the example screen shown in . In particular, the illustrated screen includes a header section  with overview information and a rule specification section  in which various information can be specified for a usage instruction rule set being created. In this example, section  allows the user to specify a name for the usage instruction rule set being created, a usage type for the rule set (which in this example is to receive payments), a payment repository to receive any such payments, and an expiration date which in this example is not specified. The user ABC can also specify one or more specific rules for this rule set. The example illustrates two rules that have been defined, and a drop-down menu for a third rule showing other types of rule attributes that can be selected and customized for this usage instruction rule set in this example.","For example, user ABC has specified that this usage instruction rule set will only receive payments from users that satisfy the first \u201cAllowedPayers\u201d role attribute, which in this example can be satisfied based on a specified organization affiliation of the payer, rating of the payer, or specific payer whose ID is indicated. As is indicated, other rule attributes that can be specified in this example include disallowed or blocked payers from whom user ABC will not accept payment, specifications of allowed or disallowed transaction types with which the usage instruction rule set can be used, allowed or disallowed types of payment instruments and currencies for received payments, terms and conditions for later handling any disputes that occur, etc. In addition, the illustrated embodiment allows a user to specify a user-defined rule, such as by including executable code and\/or a mechanism for invoking an accessible executable function (e.g., a Web service). After specifying the various information for the usage instruction rule set being created, the user ABC can then select one of the controls in section  to create the current usage instruction rule set and continue with creating another rule set for the account, to create the current usage instruction rule set and exit the account modification, or to skip the creation of a current instruction rule set and exit.","The types of rule attributes shown in this example are provided in a simplified manner for the purpose of example, and similar information could instead be specified in other ways in other situations. For example, rather than having different attributes for allowed and disallowed payers, a single attribute for payers could instead be provided, with the type of evaluation criteria instead used to determine whether a user is allowed or disallowed (e.g., to satisfy the rule, it is specified that the payer \u201cIS\u201d or \u201cIS-NOT\u201d a specified value). Additional details regarding example attributes are discussed elsewhere.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 1C","FIG. 1C","FIG. 1B"],"b":"131"},"In particular, this usage instruction rule set is being created by user CDE for use in providing payment for transactions that will be invoked by one or more application programs created by user CDE, such as fee-based Web services (e.g., one or more Web services provided by Web service provider user ABC). In this example, the usage instruction rule set being created will use user CDE's PHS account (designated in this example with the name \u201cMyPHSAccount\u201d), and has a specified expiration date. The second of the two rules defined for the usage instruction rule set further limits the total payments that this usage instruction rule set can authorize to be less than or equal to the amount of $1,000 by using the predefined rule attribute \u201cPaymentsAllowed\u201d with an appropriate evaluation type and rule value. The first rule specified for the usage instruction rule set identifies a specific payment recipient with which the usage instruction rule set cannot be used, which in this example is specified with a general attribute of \u201cRecipient\u201d and appropriate evaluation type of \u201cIS-NOT\u201d rather than a more specific attribute type of \u201cDisallowedRecipient\u201d. In other embodiments, corresponding information could be instead provided in a variety of other ways, including in XML documents using other formats and\/or in ways other than with XML.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 1C","b":["133","133"]},"This usage instruction rule set also illustrates an example of the definition of a user-defined rule, which in this example is given a user-specified name of \u201cAllowed-Use\u201d (e.g., for later use in referencing this user-defined rule independently of any other user-defined rule, not shown), as well as a URI-based invocation specification that when executed as indicated will provide a response indicating whether the rule is satisfied. In this example, the invocation specification includes an indication of a parameter to be filled in with information specific to a particular potential transaction by replacing the parameter \u201caccess-provider.name\u201denclosed in square brackets with the corresponding name from the account for the usage instruction rule set of an access provider to which this usage instruction rule set is being matched for a particular transaction. Such a user-defined rule can make a determination as to whether the rule is satisfied in a specific situation in a variety of ways and using a variety of types of information, including information about the application using the usage instruction rule set and\/or the end-user executing the application program. Similarly, user-defined rules can be defined and invoked in a variety of other ways in other embodiments, including by providing executable code (e.g., a script or applet) as part of the creation of the usage instruction rule set with which the user-defined rule will be associated.",{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIGS. 1D and 1E","FIG. 1D","FIG. 1A","FIG. 1A","FIG. 1A"],"b":["140","140","140","140","143","146","113","141","142"],"i":["a","b ","a "]},"In addition, as previously discussed with respect to , in this example embodiment the PHS provides for at least some of the users the ability to use their PHS account as a payment repository and\/or payment instrument. Thus, columns  and  include information corresponding to that aspect of the users PHS account, including a current balance on the account and a maximum balance allowed for the account (e.g., a maximum balance dynamically determined in a user-specific manner at the time of account creation and optionally adjusted as appropriate based on later experience with the user)\u2014however, since user ABC does not use the PHS account as a payment repository or instrument in this example, the current account balance is zero. While not illustrated here, a variety of other types of information may be associated with an account, such as indications of transactions that have previously been performed for an account, changes that have occurred to the account, indications of other users and associated access controls for those users to access the account, etc. Entry contains similar corresponding information for the account of user CDE previously discussed with respect to .","Columns  and  of the Account database  include information about any payment repositories and payment instruments defined for use with a user account. In particular, the information in column  for entry corresponds to the payment repositories specified in section  of , and the payment instrument information in column  of entry similarly corresponds to the payment instruments specified in section  of . In this example, each payment repository and payment instrument is given a unique ID, which are stored in the columns  and , with additional example databases Payment Repository database  and Payment Instrument database  to store information about user-specified payment repositories and user-specified payment instruments, respectively. In this example embodiment, the payment repository and instrument databases each contain multiple entries -and -, respectively, to correspond to individual payment repositories and instruments.","In addition, the databases  and  store a variety of information for each repository or instrument, including an automatically generated ID in columns  and , indications of the account with which the payment repository or instrument is associated in columns  and , a user-specified name for the repository or instrument in columns  and , and various information in columns - and - regarding how to use the payment repository or instrument for payment deposits or charges, respectively. In other embodiments, a variety of other types of additional information may be provided and used, such as in a manner specific to the type of instrument and\/or repository (e.g., using the full name of a user associated with a credit card in order to make a charge, but not using such information for a bank account). In addition, in this illustrated example the user can define one or more restrictions regarding use of a payment repository or instrument, as previously discussed, with such restriction information stored in columns - and - in this example.","While user ABC uses a single bank account as both a payment repository and a payment instrument (corresponding to entries and , respectively), in this example the bank account is given distinct IDs for each of these uses (as shown in columns  and  for those entries), although in other embodiments a single ID could instead be used. In addition, while not illustrated here, in other situations a single payment source or destination (e.g., a bank account) could be used with multiple defined payment repositories and\/or multiple defined payment instruments, such as to define different restrictions or other conditions with different uses of that payment source or destination. In addition, in this example user CDE has not yet designated any user-specified payment repositories or user-specified payment instruments, instead using the PHS account as a payment instrument (since user CDE does not currently receive any payments, he\/she does not currently need a payment repository).",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 1E","FIG. 1B","FIG. 1C"],"b":["160","160","160","131","161","163","160","162","164","165","167","166"],"i":["a ","b "]},"The database  also includes an indication of the rules for the usage instruction rule set in column , which in this example are illustrated with rule IDs corresponding to those rules. Additional information about the rules is then provided in the Usage Instruction Rule database . In particular, each rule in this example has an associated unique rule ID (as shown in column ) and an indication of the ID of the usage instruction rule set with which the rule is associated (as shown in column ). Columns - include various information regarding how to determine whether the rule is satisfied in a particular situation, and a variety of other types of information may similarly be stored in other embodiments and situations for such rules, such as in a manner specific to different types of rules (e.g., by storing invocation details for user-defined rules).",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 3","b":["300","332","350","370","340","305","310","320","330","311","312","313","315"]},"An embodiment of the Payment Authorization Handling system is executing in memory, and it includes a Payment Validater component , a Payment Handler component , an Account Manager component , an optional Payment Aggregator component , and an optional Security Manager component . In particular, the Payment Authorization Handling system receives indications of potential payments and determines whether to authorize the payments. Such potential payments may include payments related to commerce-related transactions initiated by a consumer user of a computing system , such as by using a browser program  executing in memory  that interacts with a server application  executing in memory  of a computing system  operated on behalf of an online retailer, or instead based on any payments sent between one or more of such systems  and  and one or more other computing systems . While not illustrated in detail in this example embodiment, the optional Transaction Authorization Handler system may similarly contain components corresponding to some or all of the illustrated components for the Payment Authorization Handling system, such as to receive indications of potential transactions (whether having associated financial payments or not) and to determine whether to authorize the transactions.","Before initiating potential payments to be authorized, users (e.g., users of the computing systems  and ) interact with the Account Manager component to create user accounts, with information  about the user accounts stored on storage . Each such user can also interact with the Account Manager to create one or more payment usage instruction sets, with information  about each such instruction set stored in a manner associated with the account of the user. The Account Manager in this example embodiment also creates a reference for each such usage instruction set that is created, with information  about the reference stored in a manner associated with the usage instruction set. If the created references are provided to users such as users of the computing system  and , those users may store the references  and  on storage  and  respectively of the computing systems for later use. While the Account Manager component is illustrated as part of the Payment Authorization Handling system in this illustrated embodiment, in other embodiments some or all of the Account Manager component functionality could instead be performed by another system with which the Payment Authorization Handling system interacts, including with the optional Transaction Authorization Handler system executing on this or another computing system.","When the Payment Authorization Handling system  receives an indication of a potential payment for an authorization determination and one or more references for one or more parties, the Payment Validater component retrieves stored information about the usage instruction set(s) that correspond to the reference(s) and determines whether the usage instruction set(s) are satisfied for the potential payment under the current conditions. If so, the Payment Handler component then assists in performing or otherwise handling the potential payment, such as by arranging for financial payment performance between the parties.","In some embodiments, the Payment Authorization Handling system further may include one or both of the optional Payment Aggregator component  and an optional Security Manager component . When present, the Payment Aggregator component can aggregate payments being made to and\/or received from parties as appropriate, such as based on preferences of those parties and\/or using other information. The Security Manager component can, when present, perform additional security-related verification of various types, such as to confirm the identity of parties, to confirm the identity and\/or authorization of users supplying references, to perform user authorization for users attempting to create and\/or modify user accounts and usage instruction sets, etc.","The functionality of the Payment Authorization Handling system and\/or the Transaction Authorization Handler system can be accessed in various ways in different embodiments. For example, some users may have physical access to the server computing system , and if so can interact with the various I\/O devices  to provide and\/or receive information. Alternatively, other users can use client computer systems to directly access the system, such as remotely via network  (e.g., via the Internet and\/or the World Wide Web). Such users can use software or other functionality provided on the client computer systems, such as browser  in memory  or a browser (not shown) executing in memory , to interact with system  and\/or system . In other embodiments, users may instead receive functionality and\/or information from system  and\/or system  indirectly via interactions with one or more other computers, which may directly receive that functionality or information from system  and\/or system  before providing it to the users. In addition, some or all of the components of system  and\/or system  may provide various feedback or other general types of information to users (e.g., in response to user requests), and this information can be presented to the user on the display  of the server system or on one of the I\/O devices  or  on a client system.","Those skilled in the art will appreciate that computing systems ,  and  are merely illustrative and are not intended to limit the scope of the present invention. Computing system  may be connected to other devices that are not illustrated, including through one or more networks such as the Internet or via the World Wide Web (\u201cWeb\u201d). More generally, a \u201cclient\u201d or \u201cserver\u201d device may comprise any combination of hardware or software that can interact, including computers, network devices, internet appliances, PDAs, wireless phones, cellphones, pagers, electronic organizers, television-based systems and various other consumer products that include inter-communication capabilities. For example, one of the computing systems  may be a cellphone, wireless PDA or other portable device, and a user of that phone\/PDA\/device may make one or more selections that result in using the capabilities of the system  and\/or the system , such as to provide payments to or to otherwise handle transactions with one or more computing systems . In addition, the functionality provided by the illustrated system  components may in some embodiments be combined in fewer components or distributed in additional components. Similarly, in some embodiments the functionality of some of those illustrated components may not be provided and\/or other additional functionality may be available.","Those skilled in the art will also appreciate that, while various items are illustrated as being stored in memory or on storage while being used, these items or portions of them can be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively, in other embodiments some or all of the software modules and\/or components may execute in memory on another device and communicate with the illustrated computing device via inter-computer communication. Some or all of the system  and\/or system  components or data structures may also be stored as contents (e.g., as software instructions or structured data) of a computer-readable medium, such as a hard disk, a memory, a computer network or other data transmission medium, or a portable media article (e.g., a DVD or flash memory device) to be read by an appropriate drive or via an appropriate connection. Some or all of the system  and\/or system  components and data structures can also be transmitted as contents of generated data signals (e.g., by being encoded as part of a carrier wave or otherwise included as part of an analog or digital propagated signal) on a variety of computer-readable data transmission mediums, including wireless-based and wired\/cable-based mediums, and can take a variety of forms (e.g., as part of a single or multiplexed analog signal, or as multiple discrete digital packets or frames). Such computer program products may also take other forms in other embodiments. Accordingly, the present invention may be practiced with other computer system configurations.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":["FIG. 4","FIG. 3","FIG. 3"],"b":["400","335"]},"The routine begins at step , where an instruction related to an account is received. In step , the routine determines whether the instruction is related to creating an account, and if so continues to step  to receive various information related to the definition of the account. For example, in some embodiments a user may supply an account name, an account password or other security access mechanism, indications of one or more payment instruments for use with the account, indications of one or more payment repositories for use with the account, etc. The routine then continues at step  to automatically generate additional information related to use of the account, such as in some embodiments a unique account ID, a determination of a maximum balance allowed for a user if the account can be used as a payment instrument that can include charges, etc. In step , the routine then creates the account using the received and generated account information, and in step  provides a reference for the new account to the creator of the account (e.g., an indication of the account ID).","If it was instead determined in step  that the received instruction was not related to creating an account, the routine continues to step  to receive information related to modifying the account, and in step  modifies the account as indicated if appropriate. In step , the routine then determines whether the account modification included creating or modifying a usage instruction set. If so, the routine continues at step  to generate one or more unique references (e.g., one or more reference tokens) associated with the usage instruction set to allow later reference to the instruction set. At step , the routine in this illustrated embodiment then provides an indication of the reference(s) to the account owner for later use in referencing the usage instruction set, although in other embodiments the reference(s) may instead be stored for later use with the account owner in other manners (e.g., by providing information about the instruction set to the account owner when the account owner is interactively specifying a payment and\/or transaction that may be authorized by the instruction set). After steps  or , or if it was instead determined in step  that the account instruction was not related to creating or modifying a usage instruction set, the routine continues at step  to determine whether to continue making modifications to the current account. If so, the routine returns to step , and if not the routine continues to step  and ends.","While not illustrated here, in other embodiments additional functionality related to user accounts could be provided, such as to allow a user to review an account by providing information about the account. In addition, in some embodiments additional security controls may be used to ensure that a user seeking to create and\/or modify an account is authorized to do so. Furthermore, in some embodiments the user accounts may be associated with a company or other entity distinct from the system providing the authorization and handling capabilities.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 5","FIG. 3","FIG. 3"],"b":["500","331"]},"The routine begins in step , where an indication is received of a multi-party payment and\/or transaction and of one or more references, such as at least one reference for each of multiple of the parties (e.g., one for each of the two or more parties to the payment\/transaction). The routine then continues to step  to retrieve the usage instruction sets corresponding to the references, and may in some embodiments further retrieve or otherwise make available other information from the user accounts to which some or all of those usage instruction sets belong.","The routine then continues to step  to determine whether to perform a security verification to determine whether the parties are allowed to use the usage instruction sets, such as based on additional security information provided by the parties. If so, the routine continues at step  to attempt to obtain and verify security information showing authorization of the parties, and in step  determines whether such authorization was verified. In other embodiments, such security or other access authorization may instead not be performed, such as when the use of the instruction sets will contain rules or other conditions or restrictions that control when the usage instruction sets are allowed to be used.","If it was determined in step  that the authorization was verified, or if it was instead determined in step  not to perform the security verification, the routine continues to execute subroutine  to validate the payment and\/or transaction based upon the retrieved usage instruction sets, as discussed in greater detail with respect to . If it is determined in step  that the payment and\/or transaction is validated, the routine continues to execute subroutine  to attempt to make the financial payment or to otherwise facilitate performance of the indicated transaction, such as in a manner specific to the type of transaction, as discussed in greater detail with respect to . In other embodiments, the routine may instead merely determine whether the payment and\/or transaction are authorized, leaving performance of the payment and\/or transaction for others.","After step , if it is determined in step  that the indicated payment\/transaction performance succeeded, the routine continues to step  to return an indication of success, such as in a response XML document if the routine  was invoked as part of a Web service. If it was instead determined in step  that the authorization was not verified, or in step  that the payment or transaction was not validated, or in step  that the performance did not succeed, the routine continues instead to step  to instead return an error message, such as an XML document sent as a response if the routine was invoked as part of a Web service. After steps  or , the routine continues to step  and ends.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 6","b":"530"},"The subroutine begins at step , where an indication is received of a payment and\/or transaction and of one or more usage instruction sets. In step , for each rule or other condition of one of the usage instruction sets that specifies criteria or circumstances in which the usage instruction set can be used and\/or that specifies information about parties with which the usage instruction set can be used, information about the payment and\/or transaction and\/or those other parties is retrieved in order to determine whether the conditions are satisfied. For example, to obtain information about another party, information from a user account associated with that other party may be obtained (e.g., the user account with which the usage instruction set for the reference from that other party is associated), as well as information about the other parties that may be accessible in other manners (e.g., based on the invocation requests for the authorization handling routine, such as from an HTTP header used as part of a Web services invocation). Similarly, information about the payment and\/or transaction may be available based on information received as part of the routine invocation (e.g., as part of a supplied payment or transaction object or document), or instead from an external source.","After step , the subroutine continues at step  to identify other specified rules or conditions that are not user-defined and that specify other criteria related to allowable payments or transactions, and determines whether any such other rules or conditions are satisfied (e.g., by being compatible with rules or conditions from other specified usage instruction sets and\/or the payment or transaction itself). The subroutine then continues at step  and invokes any user-defined rules or conditions in the manner specified for those rules or conditions, and obtains responses indicating whether those rules or conditions are satisfied. After step , the subroutine continues to step  to determine whether all of the rules or conditions for the specified usage instruction sets were satisfied. If so, the subroutine continues to step  and returns an indication that the payment or transaction is validated, and if not continues instead to step  to return an indication that the payment or transaction is not validated. After steps  or , the subroutine continues to step  and ends.","In other embodiments, the validation could instead be performed in other manners, such as by evaluating the various types of rules or other conditions in different orders and\/or stopping further evaluation if any rule or condition is found to not be satisfied. Alternatively, in other embodiments, determination of whether a payment or transaction is validated may be performed in manners other than requiring unanimous satisfaction of all specified rules or conditions, such as if usage instruction sets themselves specify other types of inter-relationships among the rules or conditions of those instruction sets and\/or based on other predefined criteria (e.g., a minimum threshold for a percentage or subset of specified rules or conditions that must be satisfied).",{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIGS. 7A and 7B","FIG. 3","FIG. 3"],"b":["545","333","337"]},"The subroutine begins in step , where an indication is received of a potential payment transaction (e.g., of a payment amount and possibly of other payment-related terms) and of one or more references (e.g., reference tokens) for each of at least one of one or more payment providers and of one or more payment recipients. In step , the subroutine determines a payment instrument to be used for each payment provider and any defined payment restrictions for that payment instrument, such as based on a payment instrument associated with a usage instruction set corresponding to a reference supplied by the payment provider. Similarly, in step  the subroutine determines a payment repository to be used for each payment recipient as well as any defined payment restrictions, such as based on a payment repository associated with a usage instruction set corresponding to a reference supplied by the payment recipient. In step , the subroutine then determines whether the one or more indicated payments satisfy any defined payment restrictions for the payment instruments and\/or repositories, such as based on minimum or maximum current charges, minimum or maximum cumulative balances, etc.","After step , the subroutine continues at step  to determine whether the payments satisfy any defined payment restrictions, and if so continues to step  to, for each such payment, determine whether to bill the payment instrument for the charge separately or instead to aggregate the payment along with other payments, such as on a periodic basis (e.g., monthly) or until a minimum cumulative charge is reached. If it is determined not to aggregate the charge for a payment, the subroutine continues to step  to immediately charge the corresponding payment instrument for the payment, while if it is instead determined in step  to aggregate the charges, the subroutine continues to step  to store an indication of the charge for later aggregated billing for that payment instrument. While not illustrated, steps - can be repeated multiple times for each payment if multiple payments are to occur.","After steps  or , the subroutine continues in step  to determine whether to deposit each payment directly in the corresponding payment repository or to instead aggregate the payment along with other payments before depositing the aggregate payments. If it is determined not to aggregate the payments, the subroutine continues to step  to immediately deposit each such payment into the appropriate payment repository, while if it is instead determined in step  to aggregate a payment the subroutine continues instead to step  to store an indication of the payment for later aggregated deposit into the appropriate payment repository. While not illustrated here, steps - can be performed for each payment to be made if multiple payments are to occur.","After steps  or , the subroutine continues to step  to return an indication that the payment succeeded. If it was instead determined in step  that an indicated payment did not satisfy one or more defined payment restrictions, the subroutine continues instead to step  to return an indication that the payment did not succeed. In some embodiments, the ability to aggregate payments and\/or deposits is considered when determining whether any defined payment restrictions are satisfied, such as to allow multiple payments or deposits to satisfy minimum amount restrictions, while in other embodiments each such payment is individually considered. Alternatively, in other embodiments the payment deposit aggregation and\/or payment charge aggregation may not be performed. After steps  or , the subroutine continues to step  and ends.","Those skilled in the art will also appreciate that in some embodiments the functionality provided by the routines discussed above may be provided in alternative ways, such as being split among more routines or consolidated into fewer routines. Similarly, in some embodiments illustrated routines may provide more or less functionality than is described, such as when other illustrated routines instead lack or include such functionality respectively, or when the amount of functionality that is provided is altered. In addition, while various operations may be illustrated as being performed in a particular manner (e.g., in serial or in parallel) and\/or in a particular order, those skilled in the art will appreciate that in other embodiments the operations may be performed in other orders and in other manners. Those skilled in the art will also appreciate that the data structures discussed above may be structured in different manners, such as by having a single data structure split into multiple data structures or by having multiple data structures consolidated into a single data structure. Similarly, in some embodiments illustrated data structures may store more or less information than is described, such as when other illustrated data structures instead lack or include such information respectively, or when the amount or types of information that is stored is altered.","In at least some embodiments, the authorization system may further provide a variety of additional types of functionality. For example, the authorization system may in some embodiments provide various incentives to users to use the authorization system, such as by providing discounts, rebates, etc. In addition, in some embodiments the authorization system may further take additional steps to prevent or minimize fraudulent activities. Thus, in some embodiments, in addition to verifying that a usage instruction set authorizes a payment or transaction and\/or to corroborating an identity of a user seeking to create or use a usage instruction set, the authorization system may perform various other types of processing in an attempt to identify fraudulent potential payments or potential transactions. Such other processing may include, for example, attempting to identify patterns across multiple payments\/transactions (e.g., to identify atypical payments\/transactions) and\/or attempting to obtain additional information related to a potential payment\/transaction (e.g., when an increased likelihood of fraud has been detected, on a random periodic basis, etc.), such as by interacting with one or more parties and\/or external information sources.","In addition, as previously noted, the authorization system may in some embodiments provide functionality to facilitate refunds or other corrective measures when disputes or other problems occur, such as by limiting access of payment receivers to payments for a limited period of time and\/or by providing underwriting or insurance services that guarantee or provide payments or corresponding paid-for items or services. More generally, in at least some embodiments the authorization system may automatically enforce any dispute-related conditions specified in the one or more usage instruction sets used to authorize a transaction or a related financial payment, such as based on the conditions having formed a binding agreement between the parties to the transaction. In addition, the authorization system may further provide users with various types of access to information about their accounts, their defined usage instruction sets, any prior activity using their usage instruction sets, ongoing subscriptions to services that are associated with the user account and\/or purchased using a usage instruction set, etc., such as in an interactive manner (e.g., via one or more Web pages provided by the authorization system) and\/or in a programmatic manner (e.g., via a Web services-based or other API provided by the authorization system). Using such interactive or programmatic mechanisms, users may be able to obtain information about prior payments or transactions, and immediately dispute a payment or transaction by selecting it (e.g., in an interactive manner) and optionally providing a reason for the dispute. The authorization system may then take various activities to handle such disputes, including notifying some or all other parties to the disputed payment or transaction, freezing or withholding any corresponding payments until the dispute is resolved, immediately providing a refund to a consumer who disputes a payment to a retailer (e.g., by debiting a bank or other financial account from which the consumer had made the disputed payment), etc.","In addition, in at least some embodiments, the authorization system further performs additional activities related to disputes so as to attempt to automatically identify any fraud or abuse related to such disputes. For example, as previously discussed, various fraud identification techniques may be used to look for patterns or other indicia of fraud, and if detected the authorization system may take additional activities related to those disputes (e.g., initiating human review of the dispute, withholding any payment refund that would otherwise be provided, etc.). In addition, in at least some embodiments the authorization system make take actions to ensure that any disputes and refunds are handled via the authorization system rather than via a third-party entity (e.g., a provider of a bank or other financial account from which or to which a payment was made), such as by regulating such activities in a contractual manner, initiating automatic or human monitoring of underlying financial accounts to determine if any such unauthorized behavior occurs, freezing use of any authorization system accounts (and\/or associated usage instruction sets) of users who engage in such unauthorized behavior, etc. Moreover, the authorization system may track information about such disputes, such as to identify users (whether payment providers or payment recipients) who are engaged in a number of disputes that exceed a threshold (whether for all such disputes, or only disputes determined to be unjustified)\u2014various activities may then be taken regarding any such identified users, such as to warn or notify other parties (e.g., other parties to any potential payments or transactions involving such users) and\/or to regulate or prevent additional use by such identified users of functionality provided by the authorization system. Furthermore, in some embodiments the authorization system may charge a fee to one or more parties for some or all such dispute-related activities, such as to a party found to have behaved improperly (such as in causing a bona-fide dispute or in misreporting a dispute that is not bona-fide) or for all disputes.","As previously noted, in at least some embodiments the authorization system may provide to users access to various types of information about their accounts, their defined usage instruction sets, any prior activity using their usage instruction sets, ongoing subscriptions to services that are associated with the user account and\/or purchased using a usage instruction set, etc. More generally, in at least some such embodiments the authorization system further may provide various types of reports or summaries to assist users, and may further provide various types of monitoring and\/or notification capabilities so that users are automatically apprised when events of interest occur, such as in an electronic manner (e.g., via email, instant messaging, a phone call, etc.). For example, users may be interested in any use of a specified or any defined instruction set, or instead may specify various criteria to identify only certain occurrences of interest (e.g., based on the size of payments made, the volume or frequency of payments or other uses, etc.). Furthermore, receiving such information may allow a user to manage their account and defined usage instruction sets in various ways, such as to dynamically modify specified conditions for a usage instruction set (e.g., to limit volume and\/or a type of use of the usage instruction set by other authorized users for a specified period of time, until specified conditions are satisfied, or until further notice). Furthermore, retailers and other payment recipients may further use such information to dynamically modify other aspects related to payments and\/or transactions, such as to modify pricing information for items being offered to consumers.","Various additional details regarding providing dispute-related capabilities, providing account-related information, and performing verification and other corroboration of information related to users are included in co-pending U.S. patent application Ser. No. 10\/991,339, filed Nov. 16, 2004 and entitled \u201cUsing Corroborated Information About Users to Facilitate User Performance of Tasks,\u201d and in co-pending U.S. patent application Ser. No. 10\/766,697, filed Jan. 27, 2004 and entitled \u201cProviding A Marketplace For Web Services,\u201d each of which is hereby incorporated by reference in its entirety.","The following provides illustrative examples of techniques for defining and using usage instruction sets and rules or other conditions for the instruction sets, such as in embodiments in which tokens are used for instruction set references, although the invention is not intended to be limited to these details.","An example of limiting a transaction to a particular payment sender or recipient is as follows:","Allowed Recipient Token","recipientToken==\u2018token1\u2019;","If the recipient's token exactly matches token1 the transaction will be allowed. This rule is available to all parties (sender, recipient, caller). Examples of specifying multiple allowed recipient tokens include the following:","RecipientToken in (\u2018token1\u2019, \u2018token2\u2019, \u2018token3 \u2019);","or, in an alternative embodiment,","recipientToken==\u2018token1\u2019 or recipientToken==\u2018token2\u2019 or recipientToken==\u2018token3\u2019;","Blocked Sender Token","senderToken !=\u2018token1\u2019;","The transaction will be disallowed if the sender's token matches token1. This rule is available to all parties (sender, recipient, caller). Examples of specifying multiple blocked senders include the following:","SenderToken notIn (\u2018token1\u2019, \u2018token2\u2019, \u2018token3\u2019);","or, in an alternative embodiment,","senderToken !=\u2018token1\u2019 and senderToken !=\u2018token2\u2019 and senderToken !=\u2018token3\u2019;","An example of creating a secret handshake is as follows:","This is an example of the sender and recipient exchanging a secret handshake to agree on some term. If both parties do not have rules like this defined, then the transaction will be disallowed.","Sender Secret","string SharedSecretSender :=\u2018rumplestilskin\u2019;","SharedSecretSender==SharedSecretRecipient;","For the secret handshake rule, if the sender and recipient do not define the same value, the transaction will be disallowed. Any string can be used in place of \u2018rumplestilskin\u2019, and any reference name can be used in place of SharedSecretSender and SharedSecretRecipient, as long as it is not a predefined reference.","Recipient Secret","string SharedSecretRecipient :=\u2018rumplestilskin\u2019;","SharedSecretSender==SharedSecretRecipient;","For the secret handshake rule, if the sender and recipient do not define the same value, the transaction will be disallowed. Any string can be used in place of \u2018rumplestilskin\u2019, and any reference name can be used in place of SharedSecretSender and SharedSecretRecipient, as long as it is not a predefined reference.","An example of creating a limited-use reference token is as follows:","Payment instruction rule sets can limit the number of times a token can be used to make a payment, the total amount that the token is used for, or the expiration date of a token. These rules apply only to the usage of that token, so a sender's payment instruction rule set can only limit the usage of the sender's token. Likewise, the same applies for the caller and recipient.\n\nSingle Use Token\n\nMyTokenUseCount<=1;\n\nor, in an alternative embodiment,\n\ntokenTransactionCount==1;\n\nThis rule causes the token to stop working after it has been used once. It applies only to its own payment instruction rule set, so a sender's instruction set can only limit the usage.\n\nLimit Number of Times Used\n\nMyTokenUseCount<=5;\n\nor, in an alternative embodiment,\n\ntokenTransactionCount<=5;\n\nThis rule causes the token to stop working after it has been used 5 times.\n\nLimit Total Amount\n\nMyTokenuseTotalAmount<=\u2018USD 50 \u2019;\n\nor, in an alternative embodiment,\n\ntokenTransactionAmount<=$50;\n\nThis rule limits the total amount this token is used for to USD 50.\n\nExpiration Date\n\nTransactionTimestamp<\u201830 Jan. 2005\u2019;\n\nor, in an alternative embodiment,\n\ntransactionRequestDate<dateTime \u201830 Jan. 2005 \u2019;\n\nThis rule causes the token to stop working on Jan. 30, 2005. From midnight on this date (00:00 GMT) and onwards, all transactions using this token are disallowed.\n\nUse Only as Recipient\n\nMyRole==\u2018recipient\u2019;\n","This rule causes the token to disallow payment unless this token is used as the recipient's token.","Use Only as Caller","MyRole==\u2018caller\u2019;","This rule causes the token to disallow payment unless this token is used as the caller's token.","Use Only as Recipient","MyRole==\u2018sender\u2019;","This rule causes the token to disallow payment unless this token is used as the sender's token.","An example of limiting the amounts of a transaction is as follows:","Transaction amount limit rules are available to all parties.","Maximum Transaction Amount","transactionAmount<=\u2018USD 50 \u2019;","This rule limits the transaction amount to USD 50 or less. If the transaction is greater than this amount, this rule will disallow the transaction.","Minimum Transaction Amount","transactionAmount>=\u2018USD 1\u2019;","This rule limits the transaction amount to USD 1 or greater. If the transaction is less than this amount, this rule will disallow the transaction.","Limit Transaction Currency","getCurrency(transactionAmount)==\u2018JPY\u2019;","This rule limits the transaction currency to Japanese Yen. If the transaction currency is not Japanese Yen, then the transaction will be disallowed.","An example of a payment provider\/sender specifying payment details is as follows:","The sender specifies the payment method, such as whether the payment is being made from a credit card, an ACH bank account, or from an existing account balance.","Balance Transfer","string paymentMethod :=\u2018balance transfer\u2019;","This rule specifies that funds will be taken from an existing account balance.","Default ACH Bank Account","string paymentMethod :=\u2018ach\u2019;","This rule specifies that a default ACH bank account for the account will be used. The default ACH account can be specified in various ways, such as via CrateAccount or SetDefaultFinancialInstrument messages.","Specific ACH Bank Account","string paymentMethod :=\u2018ach\u2019;","string paymentInstrument :=\u2018financialInstrumentReference\u2019;","This rule specifies a specific ACH bank account referred to by financialInstrumentReference. A financial instrument reference is returned from the installACHBankAccount message. In this example, a financial instrument reference is not a bank account number, which in some embodiments may not be included in payment instruction rule sets for privacy reasons. The PaymentMethod should be specified to allow assertions to be made against it in other payment instruction rule sets.\n\nDefault Credit Card\n\nstring paymentMethod :=\u2018credit card\u2019;\n\nThis rule specifies that the default credit card for the account will be used. The default credit card can be specified in various ways, such as via CrateAccount or SetDefaultFinancialInstrument messages.\n\nSpecific Credit Card\n\nstring paymentMethod :=\u2018credit card\u2019;\n\nstring paymentInstrument :=\u2018financialInstrumentReference\u2019;\n\nThis rule specifies a specific credit card bank account referred to by financialInstrumentReference. A payment instrument reference is returned from the installCreditCard message. In this example, a financial instrument reference is not a credit card number, which in some embodiments may not be included in payment instruction rule sets for privacy reasons. The PaymentMethod should be specified to allow assertions to be made against it in other payment instruction rule sets.\n","An example of a payment recipient specifying dispute resolution policies is as follows:","Dispute Resolution may happen when the sender registers a dispute about a particular transaction. If specified by the recipient's payment instruction rule set, an automatic refund will be issued from the recipient to the sender to resolve the dispute. A dispute is initiated by the sender, and is governed by the dispute resolution policies specified by the recipient. In this example embodiment, ordinary refunds are not disputes and can be requested by the recipient at any time, and will always succeed, regardless of the dispute resolution policies specified by these rules.\n\n\u2018Sender Wins\u2019 Time Limit\n\nduration SenderWinsTimeLimit :=\u201815 days\u2019;\n\nor, in alternative embodiments,\n\nSenderWinsTimeLimit :=duration \u2018P15D \u2019;\n\nThis rule specifies that if the sender registers a dispute within 15 days of the transaction, an automatic refund will be issued.\n\nNo Automatic Refund\n\nduration SenderWinsTimeLimit :=\u20180 days\u2019;\n\nor, in an alternative embodiment,\n\nsenderWinsTimeLimit :=duration \u2018P0D\u2019;\n\nThis rule specifies that there will be no automatic refund issued if the sender registers a dispute.\n\n\u2018Sender Wins\u2019 Refund Fraction or Percentage Limit\n\nnumber SenderWinsRefundFraction :=50%;\n\nor, in an alternative embodiment,\n\nsenderWinsPercentLimit :=50%;\n\nThis rule specifies only 50 percent of the transaction amount will be refunded to resolve a dispute.\n","An example of a caller\/end-user or payment recipient limiting the payment method is as follows:","The caller and\/or recipient can place limits on where the funds come from. For example, if the caller is paying for the transaction fees, the caller might wish to make sure that the source of funds is not a \u2018credit card\u2019, since credit cards transaction fees are higher than other methods.\n\nBalance Transfers Only\n\npaymentMethod==\u2018balance transfer\u2019;\n\nThis rule will disallow the transaction if the payment method is not a balance transfer.\n\nBalance Transfers and ACH Only\n\npaymentMethod==\u2018balance transfer\u2019 or paymentMethod=\u2018ach\u2019;\n\nThis rule will disallow the transaction if the payment method is not a balance transfer or ACH.\n\nNo Credit Cards\n\npaymentMethod !=\u2018credit card\u2019;\n\nThis rule will disallow the transaction if the payment method is a credit card.\n","An example of limiting the fraction of a fee paid is as follows:","Fee percentages are passed into the Pay message by the caller. Any party can use these rules.","Limit Sender's Fraction of the Total Fee","SenderFractionOfFee<=50%;","or, in an alternative embodiment,","senderFeePercent<=50%;","This rule will disallow the transaction if the sender is paying more than 50% of the total fees paid.","Limit Recipient's Fraction of the Total Fee","RecipientFractionOfFee<=80%;","or, in an alternative embodiment,","recipientFeePercent<=80%;","This rule will disallow the transaction if the recipient is paying more than 80% of the total fees paid.","Limit Caller's Fraction of the Total Fee","CallerFractionOfFee<=\u2153;","or, in an alternative embodiment,","callerFeePercent<=\u2153;","This rule will disallow the transaction if the recipient is paying more than \u2153 of the total fees paid.","Examples of context data available for payment instruction rule sets and that can be sent as an XML document as part of a pay request message (e.g., from a caller to the transaction authorizer) are as follows:",{"@attributes":{"id":"p-0136","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Value",{}]},{"entry":["Parameter","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["callerCredential","string","Created and authenticated by a"]},{"entry":[{},{},"credential service to validate the"]},{"entry":[{},{},"caller's identity"]},{"entry":["senderToken","string","Identifies the sender's payment"]},{"entry":[{},{},"instruction rule set in their account"]},{"entry":["recipientToken","string","Identifies the recipient's payment"]},{"entry":[{},{},"instruction rule set in their account"]},{"entry":["callerToken","string","Identifies the caller's payment"]},{"entry":[{},{},"instruction rule set in their account"]},{"entry":["senderFractionOfFees","number","The fraction of the fee amount that"]},{"entry":[{},{},"will be paid by the sender"]},{"entry":["recipientFractionOfFees","number","The fraction of the fee amount that"]},{"entry":[{},{},"will be paid by the recipient"]},{"entry":["callerFractionOfFees","number","The fraction of the fee amount that"]},{"entry":[{},{},"will be paid by the caller"]},{"entry":["transactionAmount","money","The amount of the payment between"]},{"entry":[{},{},"sender and recipient"]},{"entry":["SenderTxnReference","string","A description of the transaction that"]},{"entry":[{},{},"is meaningful to the sender\u2014in some"]},{"entry":[{},{},"situations this may be optional"]},{"entry":["RecipientTxnReference","string","A description of the transaction that"]},{"entry":[{},{},"is meaningful to the recipient\u2014in"]},{"entry":[{},{},"some situations this may be optional"]},{"entry":["CallerTxnReference","string","A description of the transaction that"]},{"entry":[{},{},"is meaningful to the caller\u2014in some"]},{"entry":[{},{},"situations this may be optional"]},{"entry":["ServiceDescription","string","Description of the service or product"]},{"entry":[{},{},"being provided (for which payment is"]},{"entry":[{},{},"being made)\u2014in some situations this"]},{"entry":[{},{},"may be optional"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Examples of context data available for tokens are as follows:",{"@attributes":{"id":"p-0138","num":"0137"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Parameter","Value Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["tokenTransactionCount","number","The number of transactions"]},{"entry":[{},{},"approved by this token,"]},{"entry":[{},{},"including the current transaction."]},{"entry":["tokenTransactionAmount","money","The total amount of all"]},{"entry":[{},{},"transactions approved by this"]},{"entry":[{},{},"token, including the current"]},{"entry":[{},{},"transaction."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"An example of using payment instruction rule sets to authorize a payment for a transaction is as follows:","In this example, the transaction includes a caller party requesting a Web service from a recipient party using an application program provided by a sender party. The caller is paying for the fees associated with the requested service that are charged by the transaction authorizer, the sender is paying for the cost of the transaction, and the transaction amount is USD $50.00. The values of the parameters passed in as part of the transaction authorization call to a third-party transaction authorizer are:\n\n","Any optional parameters are saved with the transaction, but don't affect the execution of the transaction.","Data Retrieval and Account Verification","The transaction authorizer receives the transaction authorization call from the caller, which includes tokens for the caller, recipient and sender, and retrieves data associated with the tokens. The data retrieved is the following.\n\n","The transaction authorizer verifies that the accounts for the various parties exist and are all active. If any of the accounts are inactive, then the transaction is disallowed and an error is returned. Otherwise, the transaction authorizer continues to retrieve data associated with the payment instruction rule sets:\n\n","The instruction sets are shown below for each of the token roles, and are then described.","Sender:","# limit to $50 per transaction","TransactionAmount<=\u2018USD 50 \u2019;","# limit token usage to 10 and $75 total, whichever comes first","TokenTransactionCount<=10;","TokenTransactionAmount<=\u2018USD 75 \u2019;","# token expires on Jun. 1, 2004","TransactionDate<=\u2018204 Jun. 1\u2019;","# refuse to pay any fees","SenderFractionOfFees==0%;","# withdraw funds from the sender's default ACH account","string PaymentMethod :=\u2018ach\u2019;","# dispute resolution: recipient must allow dispute refunds for 10 days or more, at 90% or more","SenderWinsTimeLimit>=\u201810 days\u2019;","SenderWinsFractionLimit>=90%;","Recipient:","# token expires on Oct. 1, 2004","TransactionDate<=\u20182004-Oct-1 \u2019;","# caller must pay all fees","CallerFractionOfFees==100%;","# dispute resolution: allow dispute refunds for 10 days or more, at 100%","duration SenderWinsTimeLimit :=\u201810 days\u2019;","number SenderWinsFractionLimit :=100%;","Caller:","# fail if the payment method is not ACH or balance transfer","PaymentMethod in (\u2018ach\u2019, \u2018balance transfer\u2019);","The Transaction Authorizer:","# fail if the payment method is not ACH, balance transfer, or credit card PaymentMethod in (\u2018ach\u2019, \u2018balance transfer\u2019, \u2018credit card\u2019);","The transaction authorizer merges the retrieved data with the data received in the pay request message in the authorization call, and evaluates the payment instruction rule sets of the various parties.","Evaluate Payment Instruction Rule Sets","The following discusses the evaluation, showing the interaction between the various payment instruction rules. The payment instruction rule sets presented here all agree.","Sender:","# limit to $50 per transaction","TransactionAmount<=\u2018USD 50 \u2019;","The sender is limiting the amount of each transaction to $50. This does not limit the total usage of the token (see next item).","Sender:","# limit token usage to 10 uses total","MyTokenUseCount<=10;","# limit token usage to $75 total","MyTokenTotalAmount<=\u2018USD 75 \u2019;","The sender is limiting the usage of the token to 10 uses or $75 total, whichever comes first.","Sender:","# token expires on Jun. 1, 2004","TransactionDate<=\u2018204 Jun. 1 \u2019;","Recipient:","# token expires on Oct. 1, 2004","TransactionDate<=\u2018204 Oct. 1 \u2019;","The sender's token can only be used until Jun. 1, 2004, while the recipient's token can be used until Oct. 1, 2004.","Sender:","# refuse to pay any fees","SenderFractionOfFees==0%;","Recipient:","# caller must pay all fees","CallerFractionOfFees==100%;","The sender asserts that she will not pay any fees. The recipient has a more stringent requirement, that the caller is paying all fees.","Sender:","# withdraw funds from the sender's default ACH account","PaymentMethod :=\u2018ach\u2019;","Caller:","# fail if the payment method is not ACH or balance transfer","PaymentMethod in (\u2018ach\u2019, \u2018balance transfer\u2019);","The Transaction Authorizer:","# fail if the payment method is not ACH, balance transfer, or credit card PaymentMethod in (\u2018ach\u2019, \u2018balance transfer\u2019, \u2018credit card\u2019);","The sender is setting the payment method to be ACH, which means that funds will be withdrawn from the default ACH bank account associated with the sender's Account with the transaction authorizer. Since the caller is paying 100% of the fees, the caller makes an assertion that the payment method must be either ACH or a balance transfer, to keep her costs down. The transaction authorizer's payment instruction rule set makes sure that the PaymentMethod is set, and restricts its values.","Recipient:","# allow dispute refunds for 10 days after the transaction date","duration SenderWinsTimeLimit :=\u201810 days\u2019;","# allow dispute refunds at 100%","number SenderWinsPractionLimit :=100%;","Sender:","# recipient must allow dispute refunds for 10 days or more","SenderWinsTimeLimit>=\u201810 days\u2019;","# recipient must allow dispute refunds at 90% or more","SenderWinsRefundPraction>=90%;","The recipient specifies a dispute resolution policy that allows the sender to receive a 100% refund for up to ten days after the transaction date. The sender refuses to pay unless the recipient specifies a dispute resolution policy that she agrees to: 90% or more refunds for at least 10 days after the transaction date. The sender and recipient are in agreement.","Execute Transaction","From the evaluation of the payment instruction rule sets, the following variables are known:\n\n","The transaction authorizer looks up the default ACH financial instrument for the sender to use as the source of funds for the primary transaction. According to the fee schedule, ACH transactions cost $0.60 for the $50 transaction (1.0%+$0.10 per transaction). The transaction authorizer also generates a Transaction ID that will be returned to the caller. Based on all this, the transaction authorizer executes the following.\n\n","The references and descriptions, along with the dispute resolution variables, are all stored in the transaction data. Account balances are updated in the course of executing the above transaction.","Pay Response Message","Since the transaction was successful, a Transaction ID is returned to the caller as part of a pay response message.",{"@attributes":{"id":"p-0161","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Parameter","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TransactionID","String","A reference to the transaction that can be"]},{"entry":[{},{},"supplied back to the transaction authorizer for"]},{"entry":[{},{},"queries, refunds, disputes and other operations."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In some embodiments, usage instruction rule sets are used to check to see if some event is to be authorized or not, and include a set of rules (also referred to as \u201cassertion expressions\u201d or \u201cassertions\u201d) that are evaluated against context data\u2014if the rules\/assertions evaluate to true for a given set of context data, then the event is authorized. An example of a language for defining usage instruction rule sets is as follows:","In this example language, assertions are expressions that evaluate to true or false (i.e., are boolean expressions). Assignments can also be used to set the value of a variable. If all of the assertions in an instruction rule set evaluate true, then a transaction is allowed, and if so the values of variables as assigned (if any) may be used to direct the execution of the transaction.","The simplest payment instruction rule set consists of the following text, as it will always evaluate to true: true;","Let's add more assertions with logical operators, some simple expressions and literals. Here's what it looks like now:","not false or false and true;","12.3 >=7;","(\u201812\/05\/2004\u2019>=now) !=(TransactionAmount*2<=\u2018USD 4.10 \u2019);","The above payment instruction rule sets will always evaluate to true (as long as it's before Dec. 5, 2004).","Expressions in this example language are similar to those in Perl or C with respect to operator precedence. To illustrate, look at the following expression:\n\n5+5*10==55;\n","The above evaluates to true, because it is equivalent to:\n\n(5+(5*10))==100;\n","More generally, the precedence of operator evaluation is in the following order","1) Literals, blackboard dereferences, and expressions in parentheses ( )","2) negate - not !","3) times * div \/, left to right","4) minus \u2212 plus +, left to right","5) equals == notEquals != lessThan < greaterThan > lessThanOrEquals <= greaterThanOr Equals >=, in, notIn","6) and &&, left to right","7) or \u2225, left to right","Also like C or Perl, white space is ignored in this example language, so tabs, spaces and newlines are not significant (except within string quotes, where exact formatting is preserved).","You can create variables and set their values by making assignment statements. An assignment statement looks like this:","type Name :=expression;","The following statement creates a variable, of money type, called MyFavoriteAmount, and sets the value to USD 7.99:","money MyFavoriteAmount :=\u2018USD 7.99 \u2019;","Variables do not change value throughout the evaluation of a payment instruction rule set. There can be multiple assignment statements for a variable (even in different payment instruction rule sets), but the values all have to agree, or it will be treated as an assertion failure. Variables are stored in the blackboard, which means that you can dereference them in assertions. Variables assigned in a payment instruction rule set (or another payment instruction rule set evaluated at the same time) can be used in any expression.","Context Blackboard","Doing expressions with literals is fairly useless, since they always evaluate to the same result. In practice, payment instruction rule sets are evaluated against some set of context data, which in this example language are stored in a memory area called a blackboard. In this example, a blackboard is a simple map of string keys to scalar values. The string keys typically start with a capital letter. The names are case-sensitive. The blackboard provides data that is specific to an event.","To dereference blackboard data in an expression, the reference name is simply included in an expression:\n\nTransactionAmount\/2>=\u2018USD 5.00 \u2019;\n","Blackboard dereferences can be used in any expression where a scalar value could go.","Variables stored in the blackboard are either global or private. Private variables can be used only by a specific payment instruction rule set (e.g., a sender, recipient or caller), while global variables can be used in expressions by any of the payment instruction rule sets.","In this example, variables are assigned a single value which does not change. Different variables have different sources for their value. For example, some variables are assigned their value within a payment instruction rule set, some are specified by the transaction authorization system (\u201cTAS\u201d), and some are passed in by a caller in a pay request message.","The chart below indicates variables that are defined for every pay request message, along with the source of each variable's value. In addition, payment instruction rule sets can create their own variables using assignment statements. These variables are global; for example, a variable created by an assignment statement in the sender's payment instruction rule set can be used in an expression in the recipient's instruction. User-specified variable names should start with an identifying sequence of characters specific to the user to avoid colliding with TAS-defined variable names and other user-defined variables. For example, variable names defined by Bob's Surf Shack could all start with \u2018BobsSurfShack\u2019.","With a few exceptions, all global variables can either be passed in by a caller in a pay request message, or can be specified in any of the payment instruction rule sets\u2014thus, current sources shown in the chart below are a convention only. Exceptions to this include variables with values specified by TAS, and the fact that at least one token has to be passed into the incoming authorization message, and any other tokens to be used have to be reachable. For example, if the CallerToken is the only token provided in a pay request message, then the corresponding payment instruction rule set could indicate the SenderToken or the RecipientToken or both. If it only indicates the SenderToken, then the sender's payment instruction rule set could indicate the RecipientToken, and vice versa.",{"@attributes":{"id":"p-0188","num":"0208"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"343pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GLOBAL VARIABLES"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Variable Name","Source","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["TransactionTimestamp","specified by TAS","datetime","The date and time of the transaction"]},{"entry":["TransactionID","specified by TAS","string","The ID of the transaction"]},{"entry":["TotalFeeAmount","specified by TAS","money","The total amount of the fee paid to TAS for this"]},{"entry":[{},{},{},"transaction."]},{"entry":["SenderFractionOfFees","passed in by caller","number","The fraction of the TAS fees that the sender will pay."]},{"entry":[{},"in pay request",{},"Value must be between 0 and 1"]},{"entry":[{},"message"]},{"entry":["RecipientFractionOfFees","passed in by caller","number","The fraction of the TAS fees that the recipient will"]},{"entry":[{},"in pay request",{},"pay, with a value between 0 and 1"]},{"entry":[{},"message"]},{"entry":["CallerFractionOfFees","passed in by caller","number","The fraction of the TAS fees that the caller will pay,"]},{"entry":[{},"in pay request",{},"with a value between 0 and 1"]},{"entry":[{},"message"]},{"entry":["TransactionAmount","passed in by caller","money","The amount of the transaction"]},{"entry":[{},"in pay request"]},{"entry":[{},"message"]},{"entry":["TransactionDescription","passed in by caller","string","A human readable description of what's being"]},{"entry":[{},"in pay request",{},"purchased. Stored with the transaction and used when"]},{"entry":[{},"message",{},"displaying the transaction for reporting and auditing"]},{"entry":["TransactionData","passed in by caller","string","Data provided by the caller regarding this"]},{"entry":[{},"in pay request",{},"transaction. For example, the caller could store an"]},{"entry":[{},"message",{},"XML description of the service being sold. This data"]},{"entry":[{},{},{},"is stored with the transaction but it is opaque to TAS"]},{"entry":["SenderToken","passed in by caller","string","Token referring to sender's payment instruction rule"]},{"entry":[{},"in pay request",{},"set"]},{"entry":[{},"message"]},{"entry":["RecipientToken","passed in by caller","string","Token referring to recipient's payment instruction"]},{"entry":[{},"in pay request",{},"rule set"]},{"entry":[{},"message"]},{"entry":["CallerToken","passed in by caller","string","Token referring to caller's payment instruction rule"]},{"entry":[{},"in pay request",{},"set"]},{"entry":[{},"message"]},{"entry":["PaymentMethod","specified by","string","Specifies the type of financial instrument used as the"]},{"entry":[{},"sender's payment",{},"source of funds. one of: ACH, credit card, account"]},{"entry":[{},"instruction rule set",{},"transfer"]},{"entry":["PaymentInstrument","specified by","string","Specifies the reference of the financial instrument"]},{"entry":[{},"sender's payment",{},"used as the source of funds"]},{"entry":[{},"instruction rule set"]},{"entry":["SenderWinsTimeLimit","specified by","duration","Specifies the maximum time after the"]},{"entry":[{},"recipient's",{},"TransactionTimestamp a sender can automatically"]},{"entry":[{},"payment",{},"obtain a refund by registering a dispute. The amount"]},{"entry":[{},"instruction rule set",{},"of the refund is limited by"]},{"entry":[{},{},{},"SenderWinsRefundFraction"]},{"entry":["SenderWinsRefundFraction","specified by","number","Specifies for what fraction of the TransactionAmount"]},{"entry":[{},"recipient's",{},"a sender can automatically obtain a refund by"]},{"entry":[{},"payment",{},"registering a dispute. The dispute must be registered"]},{"entry":[{},"instruction rule set",{},"within the time specified by SenderWinsTimeLimit."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The private variables listed in the chart below are provided for each payment instruction rule set such that each payment instruction rule set gets its own copy of each of these variables. For example, the data in these references are different for the sender than for the recipient. The recipient can not access the sender's values and vice versa.",{"@attributes":{"id":"p-0190","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Variable Name","Source","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MyTokenUseCount","specified by TAS","number","The number of transactions approved by this token,"]},{"entry":[{},{},{},"optimistically including the current transaction"]},{"entry":["MyTokenUseTotalAmount","specified by TAS","money","The total amount of all transactions approved by this"]},{"entry":[{},{},{},"token, optimistically including the current transaction"]},{"entry":["MyFeeAmount","specified by TAS","money","The amount of the fee paid by this payment instruction"]},{"entry":[{},{},{},"rule set. For example, for the caller's instruction, this"]},{"entry":[{},{},{},"is equal to CallerFractionOfFees times"]},{"entry":[{},{},{},"TotalFeeAmount"]},{"entry":["MyRole","specified by TAS","string","The role of the party for which this token is being used"]},{"entry":[{},{},{},"in the transaction. One of: sender, recipient, caller"]},{"entry":["MyTokenID","specified in","string","a user-meaningful ID for the payment instruction rule"]},{"entry":[{},"payment",{},"set"]},{"entry":[{},"instruction rule set"]},{"entry":[{},"or passed in to"]},{"entry":[{},"install payment"]},{"entry":[{},"instruction rule set"]},{"entry":[{},"message"]},{"entry":["MyTokenDescription","specified in","string","a user-meaningful human-readable description of the"]},{"entry":[{},"payment",{},"payment instruction rule set"]},{"entry":[{},"instruction rule set"]},{"entry":[{},"or passed in to"]},{"entry":[{},"install payment"]},{"entry":[{},"instruction rule set"]},{"entry":[{},"message"]},{"entry":["MyTokenData","specified in","string","user-meaningful machine-readable data related to the"]},{"entry":[{},"payment",{},"payment instruction rule set"]},{"entry":[{},"instruction rule set"]},{"entry":[{},"or passed in to"]},{"entry":[{},"install payment"]},{"entry":[{},"instruction rule set"]},{"entry":[{},"message"]},{"entry":["MyTransactionID","sender, recipient","string","An ID for the transaction that is meaningful only to"]},{"entry":[{},"and caller values",{},"the sender, recipient or caller. Stored with the"]},{"entry":[{},"each passed in by",{},"transaction"]},{"entry":[{},"caller in pay"]},{"entry":[{},"request message"]},{"entry":["MyTransactionDescription","sender, recipient","string","A human readable description of what's being"]},{"entry":[{},"and caller values",{},"purchased that is meaningful only to the sender,"]},{"entry":[{},"each passed in by",{},"recipient or caller. Stored with the transaction."]},{"entry":[{},"caller in pay"]},{"entry":[{},"request message"]},{"entry":["MyTransactionData","sender, recipient","string","Data provided by the caller regarding this transaction"]},{"entry":[{},"and caller values",{},"that is meaningful only to the sender, recipient or"]},{"entry":[{},"each passed in by",{},"caller. For example, the recipient could store an XML"]},{"entry":[{},"caller in pay",{},"description of the service being sold. This data is"]},{"entry":[{},"request message",{},"stored with the transaction but it is opaque to TAS"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Comments start with the pound sign (#) and cause the rest of the line to be ignored. For multi-line comments, put a # at the start of each line.","# this is a comment that","# spans more than one line","Language Characteristics","While in some embodiments the language may include temporal aspects such as looping constructs and\/or recursion, in this example there are no such temporal aspects or branching statements. Data types include boolean, number, string, datetime, duration, and money. Operators are as follows:",{"@attributes":{"id":"p-0193","num":"0213"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["==","equals: true if the left and right sides are equal"]},{"entry":["!=","notEquals: true if the left and right sides are not equal"]},{"entry":["<","lessThan"]},{"entry":[">","greaterThan"]},{"entry":["<","lessThanOrEquals"]},{"entry":[">=","greaterThanOrEquals"]},{"entry":["<=","lessThanOrEquals"]},{"entry":[":=","assignment: assigns the left hand side to the value of the right hand"]},{"entry":[{},"side"]},{"entry":["+","addition"]},{"entry":["\u2212","unary negate or subtraction"]},{"entry":["*","multiply"]},{"entry":["\/","divide"]},{"entry":["&&","and"]},{"entry":["||","or"]},{"entry":["!","not"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Boolean","true","false","Number","123","0.234","5%","Any integer is allowed, up to 2\u22121. Negative values are achieved via the \u2018negate\u2019 operation. Decimal numbers are also supported, and are not stored as floating-point numbers. Numbers start with a digit, so a leading zero is used for decimal numbers between zero and one. Expressing a number as a percentage is also supported.","String","\u2018any text\u2019","String literals are enclosed in single quotes. Double quotes are not currently used.","Datetime","now","\u2018YYYY-MON-DD\u2019","\u2018YYYY-MON-DD HH:MM:SS AM\u2019","The \u2018now\u2019 literal returns the current time. The quoted text that follows this pattern can be compared with. The datetime keyword works with quoted strings, not string expressions.","Duration","\u201810 days\u2019","The duration literal specifies a period of time, and can be added to dates to form new dates. A variety of math operations are available.","\u20181 year 2 months 3 days 10 hours 30 minutes\u2019","Inoperation","lhs in (rhs1, rhs2, rhs3)","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared. The in operator is shorthand for, and exactly equivalent to, the following:","lhs==rhs1 or lhs==rhs2 or lhs==rhs3","Notinoperation","lhs notIn (rhs1, rhs2, rhs3)","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared. The notIn operator is shorthand for, and exactly equivalent to, the following:","lhs !=rhs1 and lhs !=rhs2 and lhs !=rhs3","Equalsoperation","lhs equals rhs","lhs==rhs","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared.","Notequalsoperation","lhs notEquals rhs","lhs !=rhs","allowed types: all types","lhs and rhs should be the same type, except that integer and double types can be compared.","Lessthanoperation","lhs lessThan rhs","lhs<rhs","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","Greaterthanoperation","lhs greaterThan rhs","lhs>rhs","allowed types: integer, double, money, datetime, duration","\u2018P1Y2M3DT10H30M\u2019","The above 2 literals styles are both supported. The second one translates to 1 year, 2 months, 3 days, 10 hours, and 30 minutes. The second form of the duration literal follows the definition of the duration from the W3C XML Schema Specification. From http:\/\/www.w3.org\/TR\/xmlschema-2\/#duration:","The lexical representation for duration is the [ISO 8601] extended format PnYn MnDTnH nMnS, where nY represents the number of years, nM the number of months, nD the number of days, \u2018T\u2019 is the date\/time separator, nH the number of hours, nM the number of minutes and nS the number of seconds.","Money","\u2018USD 1.00\u2019","money(\u2018USD\u2019, TokenTransactionCount*0.05)","Money literals can be specified by a currency code and a number literal, or a currency code and an expression returning a number. See http:\/\/www.bsi-global.com\/iso4217currency for more information on currency codes, including a table listing all currency codes. The set of allowable currency codes is not limited to those specified by ISO 4217, but ISO 4217 currency codes will be recognized.","Operations and Built-in Functions","In the following section, lhs and rhs stand for the left-hand-side operand and the right-hand-side operand, respectively.","Negateoperation","- rhs","negate rhs","allowed types: integer, double, duration, money","Notoperation","! rhs","not rhs","allowed types: boolean","Andoperation","lhs or rhs","lhs && rhs","allowed types: boolean","lhs and rhs should be the same type, except that integer and double types can be compared.","Lessthanorequalsoperation","lhs lessThanOrEquals rhs","lhs>=rhs","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","Greaterthanorequalsoperation","lhs greaterThanOrEquals rhs","lhs>=rhs","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","Addoperation","lhs plus rhs","lhs+rhs","allowed types: integer, double, money, datetime, duration","Integer and double can be operated on, which will result in a double unless both operands are integers.","Operations on money require that both lhs and rhs be the money type.","A duration can be added to a duration, resulting in a duration.","A datetime can be added to a duration or a duration can be added to a datetime, resulting in a datetime.","Suboperation","lhs minus rhs","lhs\u2212rhs","allowed types: integer, double, money, datetime, duration","Integer and double can be operated on, which will result in a double unless both operands are integers.","Operations on money require that both lhs and rhs be the money type.","A duration can be subtracted from a duration, resulting in a duration.","A duration can be subtracted from a datetime, a datetime must be the lhs and a duration must be the rhs, resulting in a datetime.","Multoperation","lhs times rhs","lhs*rhs","allowed types: integer, double, money, duration","Integer and double can be operated on, which will result in a double unless both operands are integers.","For money, money can be multiplied by an integer or double, resulting in money.","For duration, a duration can be multiplied by an integer, resulting in a duration.","Divoperation","lhs div rhs","lhs\/rhs","allowed types: integer, double, money","Integer and double can be operated on, which will result in a double unless both operands are integers.","For money, money can be divided by an integer or double, the lhs must be a money value and the rhs must be an integer or double, resulting in money.","Minfunction","min(lhs, rhs)","allowed types: integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","Maxfunction","max(lhs, rhs)","allowed types: per integer, double, money, datetime, duration","lhs and rhs should be the same type, except that integer and double types can be compared.","Modfunction","mod(lhs, rhs)","allowed types: integer","Results in the integer remainder of dividing lhs and rhs.","Catfunction","cat(lhs, rhs)","allowed types: string","Results in the combined string of lhs and rhs.","Getcurrencycode","getcurrencycode(rhs)","allowed types: money","Returns the currency code as a string.","Parse Grammar",{"@attributes":{"id":"p-0274","num":"0294"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Tokens:"},{"entry":"\u2003\u2003OR = \u201c||\u201d;"},{"entry":"\u2003\u2003AND = \u201c&&\u201d;"},{"entry":"\u2003\u2003NOT = \u201c!\u201d;"},{"entry":"\u2003\u2003EQUALS = \u201c==\u201d;"},{"entry":"\u2003\u2003NOT_EQUALS = \u201c!=\u201d;"},{"entry":"\u2003\u2003L_THAN = \u201c<\u201d;"},{"entry":"\u2003\u2003G_THAN = \u201c>\u201d;"},{"entry":"\u2003\u2003LT_EQ = \u201c<=\u201d;"},{"entry":"\u2003\u2003GT_EQ = \u201c>=\u201d;"},{"entry":"\u2003\u2003PLUS = \u201c+\u201d;"},{"entry":"\u2003\u2003MINUS = \u201c\u2212\u201d;"},{"entry":"\u2003\u2003ASTERIK = \u201c*\u201d;"},{"entry":"\u2003\u2003DIV = \u201c\/\u201d;"},{"entry":"\u2003\u2003ASSIGN = \u201c:=\u201d;"},{"entry":"\u2003\u2003ASSERTION;"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/ Parser Rules"},{"entry":"instructionSet"},{"entry":"\u2003\u2003: ( statement )+"},{"entry":"\u2003\u2003;"},{"entry":"statement"},{"entry":"\u2003\u2003: ( \u201cduration\u201d"},{"entry":"\u2003\u2003\u2003\u2003| \u201cmoney\u201d"},{"entry":"\u2003\u2003\u2003\u2003| \u201cdatetime\u201d"},{"entry":"\u2003\u2003\u2003\u2003| \u201cstring\u201d"},{"entry":"\u2003\u2003\u2003\u2003| \u201cnumber\u201d"},{"entry":"\u2003\u2003\u2003\u2003)?"},{"entry":"\u2003\u2003\u2003\u2003BB_REFERENCE ASSIGN"},{"entry":"\u2003\u2003\u2003\u2003expression STATEMENT_END"},{"entry":"\u2003\u2003| exp:expression STATEMENT_END"},{"entry":"\u2003\u2003;"},{"entry":"\/\/ expressions"},{"entry":"expression"},{"entry":"\u2003\u2003: andExp ( ( OR | \u201cor\u201d ) andExp )*"},{"entry":"\u2003\u2003;"},{"entry":"andExp"},{"entry":"\u2003\u2003: compareExp ( ( AND |\u201cand\u201d ) compareExp )*"},{"entry":"\u2003\u2003;"},{"entry":"compareExp"},{"entry":"\u2003\u2003: addExp"},{"entry":"\u2003\u2003\u2003\u2003( ( EQUALS | \u201cequals\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003| NOT_EQUALS | \u201cnotEquals\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003| L_THAN | \u201clessThan\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003| G_THAN | \u201cgreaterThan\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003| LT_EQ | \u201clessThanOrEquals\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003| GT_EQ | \u201cgreaterThanOrEquals\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003) addExp"},{"entry":"\u2003\u2003\u2003\u2003| ( \u201cin\u201d | \u201cnotIn\u201d )"},{"entry":"\u2003\u2003\u2003\u2003\u2003LPAREN expression ( COMMA expression )* RPAREN"},{"entry":"\u2003\u2003\u2003\u2003)"},{"entry":"\u2003\u2003;"},{"entry":"addExp"},{"entry":"\u2003\u2003: multExp"},{"entry":"\u2003\u2003\u2003\u2003( ( PLUS | \u201cplus\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003| MINUS | \u201cminus\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003) multExp )*"},{"entry":"\u2003\u2003;"},{"entry":"multExp"},{"entry":"\u2003\u2003: unaryExp"},{"entry":"\u2003\u2003\u2003\u2003( ( ASTERIK | \u201ctimes\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003| DIV | \u201cdiv\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003) unaryExp )*"},{"entry":"\u2003\u2003;"},{"entry":"unaryExp"},{"entry":"\u2003\u2003: ( MINUS | \u201cnegate\u201d"},{"entry":"\u2003\u2003\u2003\u2003| NOT | \u201cnot\u201d"},{"entry":"\u2003\u2003\u2003\u2003) scalarExp"},{"entry":"\u2003\u2003| scalarExp"},{"entry":"\u2003\u2003;"},{"entry":"scalarExp"},{"entry":"\u2003\u2003: literal"},{"entry":"\u2003\u2003| function"},{"entry":"\u2003\u2003| BB_REFERENCE"},{"entry":"\u2003\u2003| LPAREN expression RPAREN"},{"entry":"\u2003\u2003;"},{"entry":"\/\/ functions"},{"entry":"function"},{"entry":"\u2003\u2003: minFunction"},{"entry":"\u2003\u2003| maxFunction"},{"entry":"\u2003\u2003| catFunction"},{"entry":"\u2003\u2003| getCurrencyCodeFunction"},{"entry":"\u2003\u2003;"},{"entry":"minFunction"},{"entry":"\u2003\u2003: \u201cmin\u201d LPAREN expression ( COMMA expression )+ RPAREN"},{"entry":"\u2003\u2003;"},{"entry":"maxFunction"},{"entry":"\u2003\u2003: \u201cmax\u201d LPAREN expression ( COMMA expression )+ RPAREN"},{"entry":"\u2003\u2003;"},{"entry":"catFunction"},{"entry":"\u2003\u2003: \u201ccat\u201d LPAREN expression ( COMMA expression )+ RPAREN"},{"entry":"\u2003\u2003;"},{"entry":"getCurrencyCodeFunction"},{"entry":"\u2003\u2003: \u201cgetCurrencyCode\u201d LPAREN expression RPAREN"},{"entry":"\u2003\u2003;"},{"entry":"\/\/ literals"},{"entry":"literal"},{"entry":"\u2003\u2003: booleanLiteral"},{"entry":"\u2003\u2003| numberLiteral"},{"entry":"\u2003\u2003| dateTimeLiteral"},{"entry":"\u2003\u2003| durationLiteral"},{"entry":"\u2003\u2003| stringLiteral"},{"entry":"\u2003\u2003| moneyLiteral"},{"entry":"\u2003\u2003;"},{"entry":"booleanLiteral"},{"entry":"\u2003\u2003: \u201ctrue\u201d"},{"entry":"\u2003\u2003| \u201cfalse\u201d"},{"entry":"\u2003\u2003;"},{"entry":"moneyLiteral"},{"entry":"\u2003\u2003: \u201cmoney\u201d LPAREN QUOTED_LITERAL COMMA"},{"entry":"\u2003\u2003expression RPAREN"},{"entry":"\u2003\u2003;"},{"entry":"numberLiteral"},{"entry":"\u2003\u2003: NUMBER_LITERAL ( PERCENT )?"},{"entry":"\u2003\u2003;"},{"entry":"dateTimeLiteral"},{"entry":"\u2003\u2003: \u201cdateTime\u201d LPAREN expression RPAREN"},{"entry":"\u2003\u2003| \u201cnow\u201d"},{"entry":"\u2003\u2003;"},{"entry":"durationLiteral"},{"entry":"\u2003\u2003: \u201cduration\u201d LPAREN expression RPAREN"},{"entry":"\u2003\u2003;"},{"entry":"stringLiteral"},{"entry":"\u2003\u2003: QUOTED_LITERAL"},{"entry":"\u2003\u2003;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0275","num":"0295"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/\/ character classifications"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DOT",": \u2018.\u2019;"]},{"entry":["LPAREN",": \u2018(\u2019;"]},{"entry":["RPAREN",": \u2018)\u2019;"]},{"entry":["COMMA",": \u2018,\u2019;"]},{"entry":["STATEMENT_END",": \u2018;\u2019;"]},{"entry":["PERCENT",": \u2018%\u2019;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"protected QUOTE_CHAR : \u2018\\\u2019\u2019;"},{"entry":"protected DIGIT_CHAR : ( \u20180\u2019..\u20189\u2019 );"},{"entry":"protected ALPHA_CHAR : ( \u2018a\u2019..\u2018z\u2019 | \u2018A\u2019..\u2018Z\u2019 );"},{"entry":"protected NAME_CHAR\u2003: ( ALPHA_CHAR | DIGIT_CHAR | \u2018_\u2019 );"},{"entry":"protected OPERATOR_CHAR"},{"entry":"\u2003\u2003: ( \u2018|\u2019 | \u2018&\u2019 | \u2018!\u2019 | \u2018<\u2019 | \u2018>\u2019 | \u2018=\u2019 | \u2018+\u2019 | \u2018\u2212\u2019 | \u2018*\u2019 | \u2018\/\u2019 | \u2018:\u2019 )"},{"entry":"\u2003\u2003;"},{"entry":"\/\/ skip all whitespace"},{"entry":"WHITESPACE"},{"entry":"\u2003\u2003: ( \u2018 \u2019"},{"entry":"\u2003\u2003\u2003\u2003| \u2018\\t\u2019"},{"entry":"\u2003\u2003\u2003\u2003| \u2018\\n\u2019"},{"entry":"\u2003\u2003\u2003\u2003| \u2018\\r\u2019"},{"entry":"\u2003\u2003\u2003\u2003)+"},{"entry":"\u2003\u2003\u2003\u2002\u2009;"},{"entry":"\/\/ token classifications"},{"entry":"BB_REFERENCE"},{"entry":"\u2003\u2003: ALPHA_CHAR ( NAME_CHAR )*"},{"entry":"\u2003\u2003;"},{"entry":"NUMBER_LITERAL"},{"entry":"\u2003\u2003: ( DIGIT_CHAR )+ ( \u2018.\u2019 ( DIGIT_CHAR )+ )?"},{"entry":"\u2003\u2003;"},{"entry":"QUOTED_LITERAL"},{"entry":"\u2003\u2003: QUOTE_CHAR"},{"entry":"\u2003\u2003\u2003\u2003( ~( \u2018\\n\u2019 | \u2018\\\u2019\u2019 )"},{"entry":"\u2003\u2003\u2003\u2003| \u2018\\n\u2019"},{"entry":"\u2003\u2003\u2003\u2003)*"},{"entry":"\u2003\u2003\u2003\u2003QUOTE_CHAR"},{"entry":"\u2003\u2003;"},{"entry":"OPERATOR"},{"entry":"\u2003\u2003: OPERATOR_CHAR ( OPERATOR_CHAR )?"},{"entry":"\u2003\u2003;"},{"entry":"COMMENT"},{"entry":"\u2003\u2003: \u2018#\u2019 ~( \u2018\\n\u2019 | \u2018\\r\u2019 )"},{"entry":"\u2003\u2003( \u2018\\n\u2019"},{"entry":"\u2003\u2003| \u2018\\r\u2019 )+"},{"entry":";"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"From the foregoing it will be appreciated that, although specific embodiments have been described herein for purposes of illustration, various modifications may be made without deviating from the spirit and scope of the invention. Accordingly, the invention is not limited except as by the appended claims and the elements recited therein. In addition, while certain aspects of the invention are presented below in certain claim forms, the inventors contemplate the various aspects of the invention in any available claim form. For example, while only some aspects of the invention may currently be recited as being embodied in a computer-readable medium, other aspects may likewise be so embodied."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 1A-11"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 8A-8C","b":["9","9","10","10"]}]},"DETDESC":[{},{}]}
