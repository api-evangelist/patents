---
title: Method and apparatus for transforming and rendering graphical curves
abstract: The present invention provides a method and apparatus for rendering images on a computer screen. Under the invention, a portion of a base image is described using a path. The path is then transformed using a non-affine transform to produce a transformed path. The transformed path is then rendered onto the computer screen. Another aspect of the present invention is a method and apparatus for rendering curves of any order and any dimension. In particular, the present invention provides a means for converting a function of any order and any dimension that describes one segment of a curve into a function that describes a different sized segment or an adjoining segment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06903742&OS=06903742&RS=06903742
owner: Microsoft Corporation
number: 06903742
owner_city: Redmond
owner_country: US
publication_date: 19991201
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","Bilinear Transforms","Perspective Transform","Rendering Bezier Curves","API for Transforming and Rendering Paths"],"p":["The present application is related to a co-pending application U.S. Ser. No. 09\/452,422, filed on even-date herewith and owned by a common assignee. The related application is entitled \u201cWARPING TEXT ALONG A CURVED PATH\u201d.","The present invention is related to computer graphing systems. In particular, the present invention is related to transforming and rendering shapes on a computer output device.","Many of the images that appear on a computer screen or on a computer-printed page are generated by passing a base image through some form of transform. This technique allows a computer to display many different versions of the base image without storing all of the versions in long-term memory. For example, using a single base image of the letter \u201cb\u201d, a computer can generate large versions of the letter, can change the location or orientation of the letter on the display or page, or can skew the letter by slanting its top to the left or to the right.","In two-dimensional graphics, transforms have historically been limited to affine transforms where all parallel lines in the base image remain parallel in the transformed image. Affine transforms include scaling, rotating, skewing, and translating (i.e. changing location).","Two techniques have been developed for performing affine transforms. In one technique, each pixel of the base image is transformed separately by transforming the coordinates of the pixel. Thus, if there were one hundred pixels in an image, one hundred transforms would be performed. In the other technique, pixels within a base image are described using a set of equations known as a path. Typically, the x-coordinates of the pixels are described using one equation and the y-coordinates of the pixels are described using a separate equation. These paths are then transformed to produce a new set of equations that describe the pixels of the transformed image.","Recently, more complex non-affine transforms have been developed, which provide a three-dimensional appearance to two-dimensional objects. In a non-affine transform, lines that are parallel in the base image do not necessarily remain parallel in the transformed image. Because of the complexity of these transforms, only pixels have been transformed in the prior art. To transform more complex curves, the prior art transforms selected points along the curve and then connects the transformed points together to construct the transformed curve.","This technique for performing non-affine transforms is less than ideal because a large number of data points must be transformed for very complex curves. In addition, the exact description of the curve is lost in the transform. This can cause the curve to appear jagged in the transformed space, especially if further transforms are performed on the points approximating the curve.","The present invention provides a method and apparatus for rendering images on a computer screen. Under the invention, a portion of a base image is described using a path. The path is then transformed using a non-affine transform to produce a transformed path. The transformed path is then rendered onto the computer screen.","Another aspect of the present invention is a method for rendering curves of any order and any dimension. In particular, the present invention provides a means for converting a function of any order that describes one segment of a curve into a function that describes a different sized segment or an adjoining segment.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIGS. 1A and 1B","FIG. 1A","FIG. 1B"],"b":["200","202","202","200","200","202"],"sub":["u,v","u,v","u,v","u,v","x,y","x,y","x,y","x,y"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 2A and 2B","b":["204","206","208","210","212","214","206","204","206","204"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIGS. 3A","FIG. 3A","FIG. 3B"],"b":["3","3","220","220","222","224","226","228","3","230","232","234","236","238","240","242","244","246","248","3","250"]},"Under the prior art, transformed curve  is an inaccurate approximation of the curve that would be produced if every point along curve  were transformed individually. In addition, because the curve is converted into a set of selected points, the description of the curve is lost during the transform process. Because of this, transformed curve  can appear jagged under the prior art.","The present invention overcomes the problems of the prior art by providing a means for transforming a set of equations that describe curves and lines in a base image instead of the individual points of the base image. This produces a more accurate non-affine transform and retains the description of curves in the base image so that the curve appears smoother in the transform space.","Two non-affine transforms known as bilinear and perspective are of particular interest under the present invention. Although both are \u201cquad\u201d transforms, they each have different properties from each other. In a bilinear transform, a square box is transformed into a quadrilateral such that any point along an edge of the square becomes a point on the edge of the quadrilateral and the point's relative position on the square edge is the same as its relative position on the quadrilateral edge. Thus, if a point's location along a square edge is one quarter the distance of the square edge, the transformed point's location will be one quarter the distance of the quadrilateral edge. In a perspective transform, the two-dimensional base image is transformed into a three-dimensional image. The three-dimensional image is then projected onto a two-dimensional surface to generate the transformed image.","Under one embodiment of the present invention, a bilinear transform is performed by transforming equations that describe the two coordinates of a curve. In most embodiments, the equations that describe the coordinates are functions of t, where t has values between zero and one. Thus, in a u, v coordinate system:\n\n()\u2003\u2003EQ. 1 \n\n()\u2003\u2003EQ. 2 \n","Each coordinate x, y in the transform space is formed by combining Equations 1 and 2 using coordinate specific transform functions of the form:\n\n\u2003\u2003EQ. 3 \n\n\u2003\u2003EQ. 4 \n\nwhere the constants, \u03b1, \u03b2, \u03b3, \u03b4, \u03b1, \u03b2, \u03b3, and \u03b4, are determined from the corner points of a quadrilateral formed by transforming a base image square having corners at u,v coordinates of 0,0, 0,1, 1,0, and 1,1.  shows a graph of such a unit square  in u,v space and  shows a resulting transform quadrilateral , which is defined by corners P, P, P, and P. Based on , the constants of Equations 3 and 4 are defined as:\n\n\u03b1\u2003\u2003EQ. 5 \n\n\u2003\u2003EQ. 6 \n\n\u2003\u2003EQ. 7 \n\n\u2003\u2003EQ. 8 \n\n\u2003\u2003EQ. 9 \n\n\u2003\u2003EQ. 10 \n\n\u2003\u2003EQ. 11 \n\n\u2003\u2003EQ. 12 \n\nwhere a subscript x designates the x coordinate of the point and a subscript y designates the y coordinate of the point.\n","Using equations 1 and 2 above, a line in the base image can be defined as:\n\n\u2003\u2003EQ. 13 \n\n\u2003\u2003EQ. 14 \n\nwhere (n, n) is the starting point of the line and (m+n, m+n) is the ending point of the line. An example of a line described by Equations 13 and 14 is shown as line  in FIG. A.\n","Combining equations 13 and 14 with equations 3 and 4 produces a set of transformed equations:\n\n=()()+()+()\u2003\u2003EQ. 15 \n\n=()()+()+()\u2003\u2003EQ. 16 \n\nwhich describe the x and y coordinates of a transformed curve. Equations 15 and 16 can be re-written as:\n\n\u2003\u2003EQ. 17 \n\n\u2003\u2003EQ. 18 \n\nwhere:\n\n\u2003\u2003EQ. 19 \n\n=()\u2003\u2003EQ. 20 \n\n\u2003\u2003EQ. 21 \n\n\u2003\u2003EQ. 22 \n\n=()\u2003\u2003EQ. 23 \n\n\u2003\u2003EQ. 24 \n\nEquations 17 and 18 show that a bilinear transform of a straight line results in a second order curve under the present invention.  shows a graph of a second order curve  produced by performing a bilinear transform of straight line  of FIG. A. This second order curve may be described using a Bezier notation in which the curve is described relative to a set of three control points q, q, and q. Using the Bezier notation, equations 17 and 18 become:\n\n(1\u2212)2(1)+\u2003\u2003EQ. 25 \n\n(1\u2212)2(1)+\u2003\u2003EQ. 26 \n\nwhere\n",{"@attributes":{"id":"p-0033","num":"0032"},"br":{},"in-line-formulae":[{},{}],"i":["q","=c","q","=c","+c","+c"],"sub":["0,x","0,x","2,x","0,x","1,x","2,x"],"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":"q","mrow":{"mn":"1","mo":",","mi":"x"}},"mo":"=","mrow":{"msub":{"mi":"c","mrow":{"mn":"0","mo":",","mi":"x"}},"mo":"+","mfrac":{"msub":{"mi":"c","mrow":{"mn":"1","mo":",","mi":"x"}},"mn":"2"}}}},{"mrow":{"mi":"EQ","mo":[".","\u2062"],"mstyle":{"mtext":"\u2003"},"mn":"28"}}]}}}},"b":"29 "},{"@attributes":{"id":"p-0034","num":"0033"},"br":{},"in-line-formulae":[{},{}],"i":["q","=c","q","=c","+c","+c"],"sub":["0,y","0,y","2,y","0,y","1,y","2,y"],"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":"q","mrow":{"mn":"1","mo":",","mi":"y"}},"mo":"=","mrow":{"msub":{"mi":"c","mrow":{"mn":"0","mo":",","mi":"y"}},"mo":"+","mfrac":{"msub":{"mi":"c","mrow":{"mn":"1","mo":",","mi":"y"}},"mn":"2"}}}},{"mrow":{"mi":"EQ","mo":[".","\u2062"],"mstyle":{"mtext":"\u2003"},"mn":"31"}}]}}}},"b":"32 "},"Based on equations 3 and 4, it can be seen that a path of order n in the base image becomes a path of order 2in the transformed image. Thus, under embodiments of the present invention, cubic curve  of , which is described by:\n\n\u2003\u2003EQ. 33 \n\n\u2003\u2003EQ. 34 \n\nbecomes sixth order curve  of  when it is transformed, where sixth order curve  is represented by the path:\n\n\u2003\u2003EQ. 35 \n\n\u2003\u2003EQ. 36 \n\nwith\n\n\u2003\u2003EQ. 37 \n\n=()\u2003\u2003EQ. 38 \n\n=()\u2003\u2003EQ. 39 \n\n=()\u2003\u2003EQ. 40 \n\n=()\u2003\u2003EQ. 41 \n\n=()\u2003\u2003EQ. 42 \n\n\u2003\u2003EQ. 43 \n\n\u2003\u2003EQ. 44 \n\n=()\u2003\u2003EQ. 45 \n\n=()\u2003\u2003EQ. 46 \n\n=()\u2003\u2003EQ. 47 \n\n=()\u2003\u2003EQ. 48 \n\n=()\u2003\u2003EQ. 49 \n\n\u2003\u2003EQ. 50 \n","Under other embodiments of the invention, a perspective transform is performed on a path defined in the u,v plane to produce a transformed path in the x,y plane. This involves first transforming the path into a three-dimensional x\u2032, y\u2032, w\u2032 space then projecting the path in the three-dimensional space onto the x,y plane.","The transform into the three-dimensional space can be represented by a matrix expression: \n\n\nwhere u and v are each functions of t. The projection onto the xy plane is then formed by dividing the equations for the x\u2032 and y\u2032 coordinates by the equation for the w\u2032 coordinate: \n\n","From equations 51, 52, and 53 it can be seen that if u and v are described by linear equations, then x and y will also be described by the ratio of linear equations. In fact, if u and v are functions of order n, then x and y are rational functions of order n.","Once the paths have been transformed, either through a bilinear or perspective transform, the transformed equations for x and y must be rendered into individual pixels on a display. When x and y are linear equations, it is relatively easy to convert the equations into individual pixels. However, for more complex x and y equations, the determination of individual pixels is computationally intensive.","Under the prior art, higher order curves are rendered by approximating the higher order curve as a series of lines. Although techniques for identifying these lines have been discussed in the prior art, specific examples have only been given for third order functions. From the examples, those skilled in the art can generate the lines for higher order curves. However, this involves generating a new set of rendering equations for each order curve, a task that is typically done by hand. The prior art does not provide an efficient means for generating the equations needed to render curves of any order. The present invention addresses this problem by providing a method for generating the equations needed to render any order curve.","Any order curve can be described using a Bezier notation. Under that notation, a curve r of order n is described by: \n\n\nwhere qare the B\u00e9zier control points for curve r, and Bare Bernstein polynomials of n-th order that are defined as: \n\n","Under this description of the curve, the locations of the control points, q, define the shape of the curve. In particular, qand qdefine the start and end of the curve. Note that the control points have the same dimensions as the curve they represent. Thus, for the two-dimensional curves produced by a bilinear transform, the control points have two dimensions and for the three-dimensional curves produced by a perspective transform, the control points have three dimensions. Our rendering technique can be applied to B\u00e9zier curves of any order and any dimensions.","The general technique of the prior art for determining the series of lines to approximate a curve, r, is described below with reference to a curve  shown in , and a flow diagram shown in .","The process of FIG. BA begins at start  and continues at step  where a variable, NSTEPS, is set to one. \u201cNSTEPS\u201d represents the number of lines that will need to be drawn given the current segment size. Initially, the current segment size is set to the entire length of the curve.","At step , the curve over the current segment is examined to determine if it may be approximated by a straight line. To decide this, a straight line is drawn between control points qand q, and a distance is calculated between the straight line and the other control points that define the curve. For example, in  a line  is drawn between control points  and . In most embodiments where the curve is defined in three dimensions, the three-dimensional control points are converted into two-dimensional control points using equations 52 and 53 above before the base line is drawn between the end control points. Thus, the distances are calculated using two-dimensional control points instead of three-dimensional control points. For a higher dimensional curve, the control points projected to a two-dimensional plane are used to calculate the distances. One rational for adopting this approach is that the curve is displayed in two-dimensions so that distances in the third dimension are irrelevant to approximating the curve with a straight two-dimensional line.","In one embodiment, the distance between a control point and the base line is measured along a line that is perpendicular to the base line and that intersects the control point. In some embodiments, the distance is determined by calculating a distance based on the x coordinate and a distance based on the y coordinate. The distance based on x coordinate is the distance between the point's x coordinate, q, and a line drawn between the endpoints of the curve, r, describing the x coordinate. The y coordinate distance is the distance between the y coordinate of the point, q, and a line drawn between the endpoints of the curve, r, describing the y coordinates. The distance with the larger magnitude can be used as the distance between the control point and the line or the square root of the sum of the squares of these two distances can be used as the distance between the control point and the line. In general, the selected distance is known as an error vector, with each control point having a separate error vector.","At step  of , the error vectors are compared against a threshold to determine if any of the vectors exceeds the threshold. If one of the vectors exceeds the threshold, the line is not considered to be a sufficient approximation for the curve and the process continues at step .","In step , the equations describing the curve are altered so that they are functions of t\/2 instead of functions of t. This produces equations that describe the first half of the curve. For example, in , the new equations describe curve segment  such that qof the new equations still corresponds to point  of curve  but qnow corresponds to point , midway along curve . A technique for generating these \u201chalf-step\u201d equations for any order curve is described below.","With the new segment size, the number of lines that needs to be generated doubles. Thus, in step , NSTEPS is doubled. The process then returns to step  to determine the error vectors for the new curve segment.","If none of the error vectors of a current curve segment exceed the threshold at step , the process continues at step  of FIG. B. In step , the last operation performed to produce the function describing the current curve segment is checked to see if it was a half-step operation. If it was, this is the largest segment that can be represented by a straight line and the process continues at state  where the line segment between the end points of the curve is stored in memory for later rendering. For example, if the last operation was a half-step operation to form the functions that describe curve segment  of , line  would be stored.","If the last operation performed was not a half-step operation at step , then it is possible that a segment twice the size of the current segment could be represented by a straight line.","Before doubling the segment size, the present invention checks NSTEPS to see if it is an even number at step . If NSTEPS is odd at step , such as for curve segment  of , the segment should not be doubled in size to see if a larger segment can be represented by a straight line. As such, the process continues at step  where the straight line for the current segment is stored in memory for later rendering. For example, line  of  would be stored for segment .","If NSTEPS is even at step , the equations describing the curve are changed so that they are functions of 2instead of t at step . This is shown in  where the equations that describe curve segment , between points  and , are changed to describe a curve segment twice as large between points  and . A method of generating an equation based on 2from an equation based on t for any order curve is described in more detail below.","With the doubling of the segment size, the number of lines that must be drawn is cut in half. Thus, at step , NSTEPS is divided by two. The process then returns to step  of  to determine if the larger segment may be approximated by a straight line such as line  of FIG. D.","After a line is stored for a curve segment at step  of , NSTEPS is decremented by one at step . NSTEPS is then checked to see if it is greater than zero. If NSTEPS is equal to zero, the end of the curve has been reached and the process ends at step . If NSTEPS is greater than zero, the process continues at step , where the equations describing the last curve segment are changed to describe the next curve segment. This is achieved by changing the equations so that they are based on t+1 instead of t. A technique for changing the equations in this manner for any order curve is discussed further below. In general, step  can be referred to as a move operation. An example of a move operation is shown in  where the equations are changed from describing segment  to describing segment .","After moving to the next segment, the process returns to step  of  to determine if the new segment can be represented by a straight line.","As mentioned above, one aspect of the present invention is a method for generating the half-step, double-step and move functions for any order function that defines a curve segment. This method simplifies the creation of these functions for larger order curves, such as the sixth order curve generated above by passing a cubic curve through a bilinear transform.","Under one embodiment of the present invention, a single method is used to generate both the half-step and double step functions. In the prior art, generating the functions involves taking a current B\u00e9zier function that is in terms of t, substituting t\/c for t, and reorganizing the function so that it is once again in terms of just t. This reorganization changes the control points of the B\u00e9zier function, but the order of the function remains the same. Under the method of the present invention, the reorganization of the function is simplified to a simple matrix calculation for converting the previous control points into a set of new control points.","Under one embodiment, the conversion matrix used in these calculations is formed by first re-writing the Bezier function for the curve in terms of a new variable {tilde over (t)} and a new set of control points {tilde over (q)}. Since both functions describe the same curve, they can be set equal to each other as: \n\n","Setting t=c{tilde over (t)} and using the identity: \n\n\nequation 57 provides the relationship between the control points of the two different equations as: \n\n","If the coordinates of each control point are written in matrix form such that: \n\n\nthen the relationship of equation 59 can be written as:\n\n()and ()\u2003\u2003EQ. 61 \n\nwhere D(c) is a matrix with ij components that are given by:\n\n(())()\u2003\u2003EQ. 62. \n\nFor a half-step conversion, in which a function that describes a curve segment is converted into a function that describes half of the curve segment, c is equal to \u00bd. Using Equation 62, matrix D(c) can be easily generated for any order curve, thus providing a simple means for determining the conversion equations for any order curve. For example, a sixth order curve has a half-step matrix D(\u00bd) of: \n\n","Similarly, the double-step matrix D(2) can be easily calculated for any order curve using equation 62. For example, for a sixth order curve, D(2) is easily calculated as: \n\n","If the curves are described as an n-th order polynomial instead of using the Bezier description, each curve, r, is represented as: \n\n\nIf the curves resented by equations 65 and 66 are described in terms of a new variable {tilde over (t)} and a new set of parameters \u00e3, the following equations are produced: \n\n","Setting t equal to c{tilde over (t)}, in equations 67 and 68 produces the following relationships between the parameters:\n\n\u2003\u2003EQ. 69 \n\n\u2003\u2003EQ. 70 \n\nwhich can be written in matrix notation as:\n\n()\u2003\u2003EQ. 71 \n\n()\u2003\u2003EQ. 72 \n\nwhere \n\n\nand \n\n","When a curve is defined in higher dimensions than two, each component will follow the same relation as Equations 71 and 72.","Embodiments of the present invention also provide a means for generating the move functions that are the result of changing a current function from representing one curve segment to representing a neighboring curve segment of equal length. Using equation 57 above, with t={tilde over (t)}+1, the identity: \n\n\ncan be used to generate the following relationship between the control points of the two functions: \n\n","This can be described in a matrix form as:\n\n\u2003\u2003EQ. 77 \n\nwhere \n\n\nand the ijth element of S, S, is defined as: \n\n","Thus, embodiments of the present invention provide a simple means for generating a matrix to convert a function from representing one curve segment to representing a neighboring curve segment.","If the function for the curve segment is in the form of a polynomial, equations 67 and 68 above can be used to generate the transform matrix by setting t={tilde over (t)}+1. This produces a transform matrix Sthat has ijth components defined as: \n\n\nand which can be used to determine the parameters \u00c3, \u00c3for the new curve segment from the parameters A, Afor the current segment using:\n\n\u2003\u2003EQ. 81 \n\n\u2003\u2003EQ. 82 \n\nwhere \n\n","Embodiments of the present invention also provide a method for converting a polynomial representation of a path into a B\u00e9zeir representation of the path. The method involves generating a conversion matrix that is determined by setting the B\u00e9zier representation of the path found in Equation 54 equal to the polynomial representation of the path found in Equations 65 and 66 above. This produces: \n\n","Using the identity: \n\n\nequation 84 can be modified to produce: \n\n\nwhere \n\n","Using equation 87, an n-by-n matrix H can be created to convert the polynomial coefficients into a set of B\u00e9zier control points through the matrix equations:\n\n\u2003\u2003EQ. 88 \n\n\u2003\u2003EQ. 89 \n\nwhere \n\n","An inverse relationship is also provided for converting B\u00e9zier control points into polynomial coefficients that describe the same path. That inverse relationship is:\n\n\u2003\u2003EQ. 91 \n\n\u2003\u2003EQ. 92 \n\nwhere \n\n\nand the ij elements of G are defined as: \n\n","Equations 62 and 79 above can also be represented as special cases for a more generalized description of selecting a new line segment. Specifically, we can describe t as extending from a point tto a point tusing the following equation:\n\n(1\u2212)+\u2003\u2003EQ. 95 \n\nwhere t goes from tto tas {tilde over (t)} goes from 0 to 1. Using the following identity: \n\n\nthe transformation rule for the coefficients are: \n\n","Equation 97 can be rewritten in terms of matrices as:\n\n()\u2003\u2003EQ. 98 \n\nwith the matrix element given as: \n\n","Using this generalized description, Equation 62 can be seen as a specific case where: \n\n\nand Equation 79 can be viewed as a specific case where: \n\n","Some embodiments of the present invention provide Application Programming Interfaces (API) that transform a path using the perspective or bilinear transform discussed above and then render the transformed path using the rendering technique described above. Under one such embodiment, an API for transforming and drawing a path is invoked using the API call DrawWarpPath(p, pen, dstPoints, dstCount, srcRect, srcUnit, quadMode) where p is the path to be transformed, pen is a pen type to be used when drawing the path, dstPoints is a list of edges for a quadrilateral that defines the transform, dstCount is three when the defining quadrilateral is a parallelogram and four otherwise, srcRect are points that describe a source rectangle in terms of a unit measure found in srcUnit, and quadMode is either bilinear or perspective. In other embodiments, an API for transforming and filling a path is invoked using the API call FillWarpPath(p, b, dstPoints, dstCount, srcRect, srcUnit, quadMode) where the parameters that are found in both DrawWarpPath and FillWarpPath have the same properties and the parameter b in FillWarpPath is a brush style that describes the texture, and color to be used to fill the path. In some embodiments, that path parameter passed to the API is a list of paths to be rendered on the screen.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 9","FIG. 9","FIG. 9"],"b":["600","602","604","606","602","608","610","608","612","614","616"]},"FIG.  and the related discussion are intended to provide a brief, general description of a suitable computing environment in which the invention may be implemented. Although not required, the invention will be described, at least in part, in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routine programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a conventional personal computer , including a processing unit (CPU) , a system memory , and a system bus  that couples various system components including the system memory  to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output (BIOS) , containing the basic routine that helps to transfer information between elements within the personal computer , such as during start-up, is stored in ROM . The personal computer  further includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from or writing to removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , magnetic disk drive interface , and an optical drive interface , respectively. The drives and the associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer .","Although the exemplary environment described herein employs the hard disk, the removable magnetic disk  and the removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memory (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into the personal computer  through local input devices such as a keyboard , pointing device  and a microphone . Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus , but may be connected by other interfaces, such as a sound card, a parallel port, a game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , personal computers may typically include other peripheral output devices, such as a speaker  and printers (not shown).","The personal computer  may operate in a networked environment using logic connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a hand-held device, a server, a router, a network PC, a peer device or other network node, and typically includes many or all of the elements described above relative to the personal computer , although only a memory storage device  has been illustrated in FIG. . The logic connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer network Intranets, and the Internet.","When used in a LAN networking environment, the personal computer  is connected to the local area network  through a network interface or adapter . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a network environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage devices. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used. For example, a wireless communication link may be established between one or more portions of the network.","Although the present invention has been described with reference to particular embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3C","FIG. 3B"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 6A and 6B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 7A","b":["7","7","7"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 8A","b":["8","8"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
