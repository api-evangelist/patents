---
title: Robust anchoring of annotations to content
abstract: Annotations are robustly anchored to content. The robust anchoring allows annotations to be associated with the content independently of the format used to store the content. The annotations can be re-anchored to the content after the content has been modified, including modifications to the format used to store the content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07747943&OS=07747943&RS=07747943
owner: Microsoft Corporation
number: 07747943
owner_city: Redmond
owner_country: US
publication_date: 20010907
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","This invention relates to annotating content, and more particularly to robust anchoring of annotations to content.","As computing technology has advanced, increasingly powerful computing devices have become available. Such devices have led to an increase in the number of computing devices being used as well as an expansion of the manner in which these devices are being used. One such usage for computing devices is the generation and distribution of electronic or digital documents.","The transition to content authoring, revising, and distributing using computers rather than pen (or typewriter) and paper has created many benefits, but has not been without its problems. Some of these problems are rooted in the different manner in which content is authored and revised on computers rather than the more traditional paper methods. One specific problem is the annotating of content. Paper documents have been traditionally annotated manually, such as by highlighting or underlining of text and\/or notes written in the margin of the paper. Annotating digital documents (e.g., documents which are being authored and revised on a computer) in a similar manner is difficult because digital documents are easily and frequently altered, thereby changing the portion of the document to which the annotation corresponds. It would thus be beneficial to provide a way to improve the manner in which annotations are associated with portions of documents so that the annotations are still associated with the correct portion of the document despite alterations to the underlying content.","Robust anchoring of annotations to content is described herein.","According to one aspect, an annotation is associated with a particular portion of content by capturing multiple features of the portion. These features include one or more features describing a beginning point of the portion, one or more features describing an ending point of the portion, and one or more features describing the portion between the beginning point and the ending point. According to one implementation, these one or more features are captured independently of a format used to store the content.","According to another aspect, an annotation anchor that describes a region of content to which an annotation corresponds is reassociated with the content (or a modified version thereof). One or more features (for example, keywords) in the annotation anchor are identified, and one or more candidate regions of the modified version to which the annotation potentially corresponds are identified. A score is generated for the one or more regions, and the identified region having the best score is selected as the region of the modified version of the original content to which the annotation corresponds.","Robust anchoring of annotations to content is described herein. For each annotation, information describing the portion of the content to which the annotation corresponds is robustly captured, thereby \u201canchoring\u201d the annotation to the portion of the content. This captured information, also referred to as an \u201canchor\u201d, includes information regarding a beginning point of the portion, an ending point of the portion, and the region between the two points. Subsequently, the content (including possibly the portion to which the annotation corresponds) can be modified, and the annotation re-anchored to the modified content.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","100","102","104","102","104","106","108","102","106","108","106","102","108","108"]},"Underlying content  can be any of one or more types of content, such as text content, audio content, video content, image content, etc., or combinations of one or more of these types of content. Underlying content  can be any type of content from which one or more partially- or uniquely-identifying robust features can be extracted. Similarly, the annotation generated by a user can be in any of a variety of types of content (e.g., text content, audio content, video content, image content, etc., or combinations thereof), and need not be of the same type of content as the underlying content  that it annotates. Any of a wide variety of conventional components can be used to generate the underlying content and\/or the annotation content, including text editors and keyboards, microphones, image capture devices, etc.","Upon receipt of indication , annotation marking engine  robustly captures the beginning point of the portion, ending point of the portion, and region between the beginning and ending points of the region. This capturing is performed by a beginning point capture module , an ending point capture module , and a region capture module , respectively.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 2"],"b":["120","122","120","122","124","126","128"]},"For text content, the beginning point refers to the first character in the highlighted portion, while the ending point refers to the last character in the highlighted portion. Alternatively, these points may be implemented in different manners. For example, the beginning point may be the character immediately preceding the first highlighted character, or the area between the first highlighted character and the character immediately preceding the first highlighted character. Similarly, the ending point may be the character immediately succeeding the last highlighted character, or the area between the last highlighted character and the character immediately succeeding the last highlighted character.","Returning to , beginning point capture module  extracts one or more features regarding the beginning of the portion to which the annotation corresponds. Any of a wide variety of features regarding the beginning point of the portion can be extracted. One example of such a feature is the actual characters of the content at the beginning point (e.g., one or more characters immediately preceding and\/or succeeding the beginning point). In one implementation, the fifteen characters before the beginning point and the fifteen characters after the beginning point are captured as the features of the beginning point. Another example of such a feature is a hash value of the characters at the beginning point (e.g., a hash value generated by using a conventional hashing function (such as MD5 (Message Digest 5), SH-1 (Secure Hash Algorithm-1), or other cryptographic or non-cryptographic hash functions) to hash one or more characters immediately preceding or succeeding the beginning point). Yet another example of such a feature is an offset of the beginning point relative to another point (e.g., relative to the beginning or ending of the entire document, the beginning or ending of a particular section of the document, etc.). Such an offset can be calculated in different manners, such as a number of characters, a number of words, a number of paragraphs, a number of pixels, a particular length (e.g., number of inches) on a printed copy of the document, and so on.","Another example of such a feature is punctuation at or near (e.g., within a particular number of characters of) the beginning point. Still another example of such a feature is one or more keywords or proper nouns at or near (e.g., within a particular number of characters of) the beginning point. Yet another example of such a feature is dependent on the implemented document structure (e.g., the position of the beginning point in a HyperText Markup Language (HTML), Portable Document Format (PDF), or Rich Text Format (RTF) parse tree).","Ending point capture module  extracts one or more features regarding the ending of the portion to which the annotation corresponds. Analogous to beginning point capture module , any of a wide variety of features regarding the ending point of the portion can be extracted. In one implementation, the fifteen characters before the ending point and the fifteen characters after the ending point are captured as the features of the ending point. Ending point capture module  may extract the same types of features as beginning point capture module  (e.g., both may capture actual characters), or different types of features (e.g., module  may capture actual characters and an offset, while module  may capture a hash value of the characters and an offset).","Region capture module  extracts one or more features regarding the portion to which the annotation corresponds (that is, the region between the beginning and ending points). Various different features can be extracted by module . One such feature is the length of the portion. This length can be expressed in different manners, such as a character or word count, a pixel count, a length of the portion (e.g., in inches) when printed, etc.","Another feature that can be extracted by module  is a set of one or more keywords that exist within the region.  illustrates an exemplary process  carried out by module  to generate a set of one or more keywords that exist within the region. Process  may optionally be implemented in software, firmware, hardware, or a combination thereof. Initially, a histogram that identifies word frequencies in the document is generated (act ). It is to be appreciated that the histogram is generated in act  need only be generated once for each document (and not every time an anchor is created). The histogram generated in act  identifies, for each word in the document, the frequency of that word (i.e., the number of times the word appears in the document). This generation in act  is over the entire document, not just the highlighted region. The words that appear in the highlighted region are then identified (act ). The frequency of the words in the highlighted region are then identified from the histogram (act ). The frequency identified for each word in act  is the frequency of that word across the whole document, not just the frequency within the highlighted region.","Once the frequencies are identified, one or more words having the lowest frequencies are selected from the highlighted region (act ). The number of words selected can vary, and in one implementation is dependent on the length of the region (e.g., the number of selected words may be a particular percentage of the number of words in the region). In one implementation, at least three keywords are selected. Alternatively, a particular number of words may not be selected, rather the words selected are those one or more words that have the lowest frequency (and all of the words with the lowest frequency are selected, regardless of how many there are). For example, one region of fifteen words may have three words that all have the lowest frequency (e.g., appearing five times each in the document while all others appear six or more times each), while another region of fifteen words may have only one word with the lowest frequency (e.g., appearing three times in the document while all others appear four or more times each). In the first instance, all three words would be selected as keywords, while in the second instance only the one word would be selected as a keyword.","Returning to , additional features that may be extracted from the highlighted region are the distance between the beginning point of the region and each keyword, as well as the distance between each keyword and the ending point of the region. These distances can be measured in a variety of different manners, such as characters, words, pixel counts, inches (e.g., on the document when printed), etc. Given these distances from each keyword to beginning and ending points, the distances between keywords can be readily generated and used during re-anchoring, as discussed in more detail below.","Various other features may also be extracted for the highlighted region, such as punctuation marks within the region (e.g., whether the beginning or ending points are located at particular punctuation marks, such as commas, periods, or quotes), sentence boundaries within the region (e.g., whether the beginning point is the beginning of a sentence, or whether the ending point is the ending of a sentence), proper nouns within the region, the grammatical structure of the region (e.g., subject\/object position information, types of clauses within the region, etc.), an implementation-dependent document structure (e.g., an HTML, PDF, or RTF parse tree of the region), \u201cfingerprinting\u201d of the document (e.g., generate hashes of the entire document in short segments, then attach annotations to this \u201chash topography\u201d of the document), the semantic \u201cmeaning\u201d of the highlighted region (e.g., using Natural Language Processing techniques to analyze and store information about the \u201cmeaning\u201d of what was selected in the region, and so forth.","Once annotation marking engine  has captured the various features for the beginning point, ending point, and region in-between these points, the captured features are output as an annotation anchor . The annotation anchor thus describes various features or aspects of the portion of content  to which the annotation corresponds. Given the information in the annotation anchor , the anchor  can be easily stored separately from the underlying content. Alternatively, if desired, the anchor  could be stored with the underlying content  or with the annotation content.","The following data structures illustrate one exemplary way in which captured data for annotation anchors can be stored. It is to be appreciated that these are exemplary only, and that alternative structures may also be used.",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"typedef struct_sRAnnPosInfo {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sRPointInfo front; \/\/beginning point"]},{"entry":[{},"sRPointInfo back; \/\/ending point"]},{"entry":[{},"KEYWORDLIST keywords; \/\/list of_sRKeywordInfo structures"]},{"entry":[{},"int length; \/\/length of the annotation region"]},{"entry":[{},"_bstr_t bkmark; \/\/alternate bookmark for faster re-anchoring"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/if underlying content did not change"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long offset; \/\/offset from the beginning of document to beginning"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/of annotation region"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} sRAnnPosInfo;"},{"entry":"typedef struct_sRPointInfo{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"_bstr_t leftContent; \/\/the 15 characters before the point"]},{"entry":[{},"_bstr_t rightContent; \/\/the 15 characters after the point"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} sRPointInfo;"},{"entry":"typedef struct_sRKeywordInfo{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"_bstr_t keyword; \/\/the keyword"]},{"entry":[{},"int distToStart; \/\/distance from start of keyword to start of annotation"]},{"entry":[{},"int distToEnd; \/\/distance from start of keyword to end of annotation"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} sRKeywordInfo;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 4","FIG. 4","FIG. 1"],"b":["160","102"]},"Initially, features corresponding to the beginning point of the annotation are captured (act ), and features corresponding to the ending point of the annotation are captured (act ). Features corresponding to the region between the beginning point and ending point are also captured (act ). These captured features are then output as the annotation anchor for the annotation (act ).","Returning to , content  can also be input to a content editor . Content editor  represents any device or module capable of altering content . For example, content editor  may be a word processing application. The content  may be altered by editor  prior to, subsequent to, or concurrently with the marking of annotations performed by engine . The altered or modified content  is output by editor  and made available to annotation re-anchoring engine . Additionally, the annotation anchors  from annotation marking engine  are also made available to annotation re-anchoring engine . Re-anchoring engine  uses annotation anchors , as well as modified content , to re-anchor the annotations to modified content , outputting re-anchored annotations . Although discussed herein primarily with reference to re-anchoring annotations to modified content, it should be noted that annotations can be re-anchored to unmodified content as well (or re-anchored to content that has been stored in a different format).","An example of the altering of the underlying content as well as the re-anchoring of annotations to the altered content is illustrated in . The display  illustrates a sentence that is a modified version of the sentence illustrated in display . The original annotation is anchored to the highlighted portion  in display . However, since the sentence has been altered, the exact highlighted portion  (the phrase \u201chardwired into your brain\u201d) does not exist on display . Thus, annotation re-anchoring engine  of  re-anchors the annotation to the highlighted portion . Thus, even though the wording of the underlying content has been changed, the annotation is still anchored to the portion of the content that reflects (or closely reflects) the same idea as was originally annotated given the content in display .","Annotation re-anchoring engine  includes a candidate region determination module , a score comparator module , a user interface (UI) module , and a preferences module . For each annotation to content , candidate region determination module  attempts to generate a score (based on the annotation anchor for that annotation) for one or more regions of modified content  to which the annotation may potentially correspond. The score for a candidate region reflects how well the candidate region matches the region in the original content to which the annotation corresponds. Score comparator module  analyzes the various scores generated by candidate region determination module  and attempts to identify one of those candidate regions, based on the scores, to anchor the annotation to. Depending on the various scores, situations may arise where the user is prompted for input regarding where a particular annotation should be anchored. In these situations, UI module  allows the user to enter such input. Additionally, the behavior of one or more of modules , , and  may be user-configurable, in which case the user-configured options are stored as preferences . The behavior of annotation re-anchoring engine  is described in additional detail with reference to the following figures.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 5","FIG. 5","FIG. 1"],"b":"104"},"Initially, an annotation anchor is received (act ). The keywords from the annotation anchor are identified (act ), and one of the keywords is selected (act ). Any one of the keywords can be selected in act  (e.g., the first one from a list stored in the annotation anchor, one selected at random, etc.). A candidate annotation region and score corresponding to the selected keyword are then generated based on the location of the keyword (act ). If the selected keyword appears multiple times within the modified content, then a candidate annotation region and score is generated in act  for each of these multiple occurrences of the keyword. This generation in act  is performed based on the relationship of the keyword to any other keywords in the annotation anchor as well as the beginning and ending point information in the annotation anchor. An exemplary process for implementing act  is discussed in more detail below with reference to -","A check is then made as to whether the generated score exceeds a threshold value (act ). If the score does exceed the threshold value then the candidate region is determined to be the region that the annotation is to be anchored to, and the annotation is attached to that region (act ). Attaching the annotation to the region refers to replacing the previous indication of the portion of the content that the annotation previously corresponded to with an indication of the new region. Thus, when the modified content is subsequently displayed, the new region is highlighted for the annotation. The specific manner in which the annotation is attached to the region will vary by implementation, and will typically use the same format as was used to indicate the initial region to engine . The threshold value used in act  can vary, but should be designed to be high enough that determination of the correct region can be confidently made without analysis of any additional candidate regions. For example, the threshold value may be 98 on a scale from 0 to 100.","If the score does not exceed the threshold value in act , then a check is made as to whether there are any additional keywords that have not yet been selected (act ). If there are any such additional keywords than the process returns to act  to select one of the remaining keywords. However, if there are no additional keywords, then the process proceeds to identify the largest score of those generated in act  (act ). A check is then made as to whether the largest score exceeds another threshold value (act ), referred to as the \u201cguess threshold\u201d. The guess threshold value is lower than the threshold value in act , but should be designed such that there is a high level of confidence in the determination that the candidate region is the correct region if the candidate region's score is above the guess threshold, and such that there is a low level of confidence in the determination that the candidate region is the correct region if the candidate region's score is below the guess threshold. For example, the threshold value in act  may be 70 or 80 on a scale from 0 to 100.","If the identified score exceeds the threshold value in act , then the candidate region corresponding to the identified score is determined to be the region that the annotation is to be anchored to, and the annotation is attached to that region (act ). Additionally, the information in the annotation anchor is re-captured based on the new region the annotation is attached to (act ). This re-calculation comprises an annotation marking engine (e.g., engine  of ) re-capturing the various beginning point, ending point, and region features based on the new region that the annotation corresponds to. The history of the annotation anchoring may also be saved with the annotation anchor or alternatively elsewhere, allowing subsequent reference back to the preceding one or more annotation anchors if desired. Although not illustrated in , the annotation anchor may also be re-captured after attaching the anchor to the region in act .","Returning to act , if the identified score does not exceed the threshold value, then a check is made as to whether the identified score is less than a lower bound (act ), referred to as the \u201corphaning threshold\u201d. This lower bound should be designed to be less than the threshold value in act , and low enough that there is little confidence in the determination that the candidate region is the correct region. For example, the lower bound in act  may be 30 or 40 on a scale from 0 to 100. If the identified score is below the lower bound, then the annotation is orphaned (act ). Orphaning the annotation means that the annotation is not attached to any particular region of the content (all orphaned annotations may be displayed, for example, at the end of the content). However, if the identified score is greater than the lower bound, then the user is queried regarding placement of the annotation (act ). In this situation, the candidate region's score is greater than the orphaning threshold but less than the guess threshold (there is sufficient information regarding the candidate region to position the annotation in the document, but not enough confidence to be sure it belongs there). For example, UI module  of  may display to the user an indication that the annotation is orphaned and also a \u201cguess\u201d button that the user can press to cause annotation to be anchored to the highest-scoring candidate region. Alternatively, UI module  may display to the user an identification of the annotation and the candidate region, and allow the user to input whether the region is the correct region to which the annotation should be attached. The user may thus identify which region is the correct region for the annotation, or alternatively indicate that the annotation should be orphaned.","The different threshold values discussed in acts  and , as well as the lower bound discussed in act , may be user-configurable parameters (e.g., stored as preferences  of ). When these values are user-configurable parameters, UI module  presents an interface to the user allowing the user to enter inputs as to what one or more of these different values should be. The input by the user may be specific values (e.g., the user may enter \u201c80\u201d to indicate that a particular threshold amount should have a value of 80), or alternatively the inputs may be implicit. For example, UI  may present to the user an interface querying the user as to whether the anchoring of a particular annotation was correct. The results of one or more of such queries may then be used by engine  to learn more appropriate threshold or lower bound values. One specific example is if engine  automatically anchors multiple annotations because they have a score exceeding the threshold value (e.g., 80) in act , but the user indicates that many of those annotations are anchored incorrectly, engine  may increase the threshold value in act  to (e.g., to 84) in an attempt to decrease the number of annotations that are incorrectly anchored.","Alternatively, acts  and  may optionally be bypassed in process . Acts  and  operate as a shortcut to avoid processing numerous keywords and regions of a document if a candidate region is found that is almost certainly the right one (e.g., due to its very high score). Thus, acts  and  may be removed from process  (although, under certain situations, this removal may result in increased processing time to re-anchor an annotation).","Various other modifications may also be made to the process of . The process of  is a robust process that can correctly identify the correct region to which an annotation should be anchored even though the content of that region has been changed. While the process of  also accurately identifies the correct region to which an annotation should be anchored if the content of that region has not changed, other methods may be able to anchor annotations to unchanged content more quickly. Thus, in an alternative embodiment, the annotation anchoring described herein is modified to take advantage of the faster performance of other algorithms to identify unchanged regions to which annotations are to be anchored. In one implementation, a \u201cgetBookmark\u201d method used by the Microsoft Internet Explorer 5.5\u00ae web browser is used to identify unchanged regions to which annotations are to be anchored. Additional information regarding the \u201cgetBookmark\u201d method is available from Microsoft Corporation of Redmond, Wash.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIGS. 6","FIGS. 6","FIG. 1"],"i":["a","c ","a","c "],"b":["6","228","228","6","104"]},"Initially, given the region information from the annotation anchor, multiple keywords in the modified content are identified (act ). These keywords may be identified each time process  is performed, or alternatively only once per annotation anchor.","The score for the selected keyword is initialized to zero (act ) and a check is made as to whether there are any additional keywords in the original annotation region after the selected keyword (act ). The distance information stored in the annotation anchor (e.g., distances between beginning point and keywords and\/or keywords and ending point) allows engine  to determine the order of keywords in the annotation region. Thus, the next keyword in the original annotation region (if any) can be readily identified. If there is at least one additional keyword after the selected keyword, a search is made through the identified keywords in the modified content for the first occurrence of the keyword after the selected keyword (act ). A check is then made as to whether including the first occurrence of the next keyword in the candidate region would keep the length of the candidate region less than twice the length of the original region (act ). If so, then 100 points are added to the score (act ), the candidate region is extended to include that keyword, and processing returns to act . However, if including the first occurrence of the next keyword in the candidate region would not keep the length of the candidate region less than twice the length of the original region, then processing returns to act  without adding any value to the score and without extending the candidate region to include that keyword.","The process continues to check whether there are any additional keywords in the original annotation region after the selected keyword, and adds points to the score for those keywords, until all of the additional keywords have been analyzed (acts -). In other words, if the anchor information includes a list of n keywords, process  looks at all n\u22121 other keywords for each of the keywords identified in act . This accounts for the possibility that the keywords get reordered in the modified content. For instance, suppose keywords A, B, and C are identified in the anchor. The process looks for all occurrences of A in the document (act ). For each occurrence, the process looks for occurrences of B and C that follow it in the content. If the process fails to find a candidate region with a high enough score, the process looks for all occurrences of keyword B in the document. For each occurrence, the process looks for occurrences of A and C that follow it in the content, and so on.","After all of the additional keywords (if any) have been analyzed, the process looks for the first beginning point (e.g., point  of ) preceding the selected keyword, based on the interior of the beginning point (act ). The interior of the beginning point refers to the area between the beginning point and the selected keyword. The search in act  begins at the selected keyword and works its way towards the beginning of the content, analyzing each possible point along the way. The features from the annotation anchor are compared to each possible point and a determination made as to whether a match exists. In one implementation, a \u201cmatch\u201d exists when the features from the annotation anchor are the same as (identical to) the features at the point being analyzed. For example, the 15 characters preceding the point being analyzed are the same as the 15 characters preceding the beginning point (and stored as a feature in the annotation anchor). Alternatively, a \u201cmatch\u201d may exist when there is only a partial match (e.g., a partial substring match). Any of a variety of conventional processes may be used to determine a partial substring match, such as AGREP (additional information regarding AGREP is available from the University of Arizona, Department of Computer Science, Tucson, Ariz.).","Additionally, it should be noted that, analogous to the discussion above regarding extracting features for a \u201cpoint\u201d, the features that distinguish a \u201cpoint\u201d need not be literal character strings. Rather, such features could be a \u201cfingerprint\u201d; a weighted collection of keywords, proper nouns, and punctuation; a character offset; etc.","Processing then proceeds based on whether a beginning point is located in act  (act ). If a beginning point is located, then a check is made as to whether the distance from the located beginning point to the selected keyword exceeds the distance from the original beginning point to the selected keyword (as indicated in the annotation anchor) by greater than a threshold amount (e.g., greater than twice the original distance) (act ). If the distance is not exceeded by greater than the threshold amount, then 50 points are added to the score (act ), the candidate region is extended to include the located beginning point, and processing proceeds to look for the first ending point succeeding the selected keyword based on the interior of the selected keyword (act ). If the distance is exceeded by greater than the threshold amount, then processing proceeds to act  without adding any points to the score and without extending the candidate region to include the located beginning point.","At act , the first ending point (e.g., point  of ) is searched for analogous to the search for the first beginning point in act , except that the search proceeds from the selected keyword towards the end of the document. The interior of the ending point refers to the area between the ending point and the selected keyword. Analogous to the discussion above, a match may exist when the features at the point being analyzed are the same as or within a threshold amount of the features in the annotation anchor.","Processing then proceeds based on whether an ending point is located in act  (act ). If an ending point is located, then a check is made as to whether the distance from the selected keyword to the located ending point exceeds the distance from the selected keyword to the original ending point (as indicated in the annotation anchor) by greater than a threshold amount (e.g., greater than twice the original distance) (act ). If the distance is not exceeded by greater than the threshold amount, then 50 points are added to the score (act ), the candidate region is extended to include the located ending point, and processing proceeds to act . If the distance is exceeded by greater than the threshold amount, then processing proceeds to act  without adding any points to the score and without extending the candidate region to include the located ending point.","At act , a check is made as to whether the part of the modified content preceding the located beginning point (e.g., a set of characters, such as 15, that immediately precede the located beginning point) matches the part of the original content preceding the original beginning point (as indicated in the annotation anchor). Analogous to the discussion above, a match may exist when the features at the point being analyzed are the same as or within a threshold amount of the features in the annotation anchor. If the part of the modified content preceding the located beginning point matches the part of the original content preceding the original beginning point, then 10 points are added to the score (act ). If the part of the modified content preceding the located beginning point does not match the part of the original content preceding the original beginning point, or if there is no located beginning point, then no points are added to the score.","Processing then proceeds with a check being made as to whether the part of the modified content succeeding the located ending point (e.g., a set of characters, such as 15, that immediately succeed the located ending point) matches the part of the original content succeeding the original ending point (as indicated in the annotation anchor) (act ). Analogous to the discussion above, a match may exist when the features at the point being analyzed are the same as or within a threshold amount of the features in the annotation anchor. If the part of the modified content succeeding the located ending point matches the part of the original content succeeding the original ending point, then 10 points are added to the score (act ). If the part of the modified content succeeding the located ending point does not match the part of the original content succeeding the original ending point, or if there is no located ending point, then no points are added to the score.","Processing then proceeds to check whether the located beginning point is positioned in the modified content within a threshold distance of the original beginning point (act ). This threshold distance (e.g., 25% of the length of the document) is the difference in the offset of the original beginning point from a particular point (e.g., the beginning of the document), and the offset of the located beginning point from the particular point. If the located beginning point is positioned in the modified content within a threshold distance of the original beginning point, then 20 points are added to the score (act ) and processing proceeds to act . However, if the located beginning point is not positioned in the modified content within a threshold distance of the original beginning point, then processing proceeds to act  without adding any points to the score. In one implementation, a number of points between zero and 20 are assigned based on how far the point has moved (its position in the original content compared to its position in the modified content), using a sliding scale scoring process as discussed in more detail below.","The addition of points in act  is performed to distinguish between an \u201cacceptable\u201d choice and a \u201creally good\u201d choice. For example, suppose that an annotation is attached to the word \u201cthe\u201d in a document. The word \u201cthe\u201d is repeated several times throughout the document, so several candidate regions are identified, all of which are more or less equally likely to be the correct candidate region. By storing the distance of the original beginning point from the beginning of the original document, this helps the process identify the correct occurrence of \u201cthe\u201d and discount the other occurrences from being correct.","At act , a check is made as to whether the length of the annotation region (from located beginning point to located ending point) has changed by greater than a threshold amount (e.g., increased by more than twice the original length or decreased by more than one-half the original length). If the length has not changed by greater than the threshold amount, then 50 points are added to the score (act ); otherwise, no points are added to the score. If no beginning point is located (in act ) and\/or no ending point is located (in act ), then no points are added to the score. If no beginning point is located then a default beginning point is determined to be the beginning of the first keyword identified and included in the candidate region. Similarly, if no end point is located, then a default ending point is determined to be the end of the last keyword identified and included in the candidate region.","Processing then proceeds to act , where the score is normalized by the maximum possible score for the keyword (which will vary based on the number of keywords in the annotation region). In one implementation, the score is normalized to a scale of 0 to 100. The maximum possible score (MaxScore) for a candidate region is determined as follows:\n\nMaxScore=(keywordWeight\u00d7(no. of keywords\u22121))+(2\u00d7endPointWeight)+(2\u00d7contextWeight)+offsetWeight+lengthWeight\n\nwhere keywordWeight is the number of points added for locating a keyword that keeps the range within the desired length (100 points in acts  and ), no. of keywords is the number of keywords indicated in the anchor as being in the region, endPointWeight is the number of points added for locating each of the beginning point and the ending point within the desired distance (50 points each in acts  and ), contextweight is the number of points added for the context of the located beginning point (the area preceding the beginning point) and the ending point (the area succeeding the ending point) matching the original context (10 points each in acts  and ), offsetWeight is the number of points added for the located beginning point being positioned as desired (20 points in act ), and length Weight is the number of points added for the length of the annotation region not changing more than the desired amount (50 points in act ).\n","In the discussion above regarding -, reference is made to particular point values (e.g., in acts , , , , , , and ). It is to be appreciated that these specific point values are exemplary only, and that different point values could be used.","Also in the discussion above regarding -, various checks are made and either a full number of points are added to the score or zero points are added to the score depending on the outcome of the check. Alternatively, rather than having either all or zero points awarded based on the outcome of a check, a sliding scale may be implemented that assigns different points ranging from zero up to all points based on how well the checked value compares to the original value. For example, in checks where distances are involved (e.g., the length of the annotation region, or offset of the beginning point from a particular point in the content), the actual score (Score) may be determined as follows:\n\nScore=weight\u00d7((maxDiff\u2212diffAmt)\u00f7maxDiff)\n\nwhere weight is the maximum number of points that may be assigned, maxDiff is the maximum possible difference, and diffamt is the amount of difference between the two distances. The value diffAmt is raised to power 1.2 so that the score goes down by more as the amount of the difference gets larger. In one implementation, if the value of diffAmtis greater than the value of maxDiff, then the value of Score is set to zero.\n","Various other modifications may also be made to the process of -. In one implementation, the surrounding context of an original beginning point and\/or ending point can be used to assist in locating a beginning point and\/or ending point in the modified content. For example, rather than relying solely on the interior of the beginning point in determining the location of a beginning point (in act ), the exterior of the beginning point (the area immediately preceding the beginning point) may be used to compare against the area immediately preceding the original beginning point. If the comparison results in a match, then the beginning point may be located even if the interior of the beginning point is not a match. An analogous process may be used for the ending point, except that the exterior of the ending point refers to the area immediately succeeding the ending point. Note, however, that beginning and ending points located based on the surrounding context may be given a lower weight than a beginning and ending points located based on the interior.","Another modification that may be made is to expand anchors to a particular default point if the beginning point or ending point cannot be located. The particular point can vary based on the type of annotation made (e.g., implicit or explicit), and may be, for example, the beginning or ending of a sentence, the beginning or ending of a paragraph, the beginning or ending of a section, etc. By way of example, if an annotation is anchored to a portion of a sentence in the original content, but the ending point in the modified content cannot be located, then the end of the sentence that includes the last keyword (the last keyword that still keeps the candidate region within the desired length) may be used as the located ending point (although the number of points added in act  may be reduced to reflect the manner in which the ending point was located). By way of another example, if an annotation is anchored to a portion of a sentence in the original content, but the beginning point in the modified content cannot be located, then the beginning of the sentence that includes the selected keyword may be used as the located beginning point (although the number of points added in act  may be reduced to reflect the manner in which the beginning point was located).","Another modification that may be made is to expand what words are used as keywords. For example, proper names may be used as keywords, or capitalized words (other than those at the beginning of a sentence) may be used as keywords, or words in quotation marks may be used as keywords. Punctuation may also be used as a keyword. Certain punctuation marks may be pre-determined or user-selected as being keywords (e.g., exclamation points, question marks, quotation marks, etc.), or alternatively histograms of punctuation frequency may be generated analogous to those of word frequency discussed above. Additionally, the \u201ckeywords\u201d may be limited to only letters, or may include both letters and numbers, and optionally include other characters (for example, the ampersand, section mark, etc.).","As discussed above with reference to , the user may be queried for input as to whether the proposed region for anchoring an annotation is correct. The proposed region may be identified to the user in any of a variety of manners, such as displaying to the user the actual content in the region, or highlighting the region in the modified content. This interface may allow the user to simply indicate \u201cyes\u201d or \u201cno\u201d, or alternatively have the user manually select the region of the modified content to which the annotation should be anchored. Alternatively, the user may be allowed to cycle through multiple different proposed regions and select which of those regions is the correct region to which the annotation should be anchored.","Another modification that may be made is to expand on the semantics of the region, such as using a thesaurus to expand a particular keyword. For example, if the next keyword after the selected keyword is not found in act , or would be outside the desired range in act , then additional acts may be performed to lookup synonyms for the keyword in a thesaurus. These synonyms are then searched for and a determination made as to whether they are within the desired range (analogous to acts  and ). If a synonym is within the desired range, then an appropriate number of points can be added to the score (analogous to act ). The number of points may optionally be less than the number that would have been added if the original keyword were found rather than a synonym. Analogous to synonyms, antonyms may also be searched for (e.g., the word \u201cyes\u201d has been replaced by the word \u201cno\u201d, or the word \u201cbeginning\u201d has been replaced by the word \u201cending\u201d), although the number of points added for finding an antonym would optionally be less than the number added for finding a synonym.","Another modification may be made to attempt to identify possible split regions. A split region refers to the region the annotation is originally anchored to being split into two or more parts and additional content inserted between the parts. This can result in low scores for the different parts of the annotation because the remaining parts do not satisfy many of the distance tests that are performed (e.g., length of the entire region, distance from a keyword to the beginning point or ending point, etc.). In this situation, the various data and scores me can be analyzed to attempt to determine such a split. This analysis to identify a split region may always be performed, or alternatively only sometimes (e.g., if the annotation would otherwise be orphaned). In performing the analysis, annotation re-anchoring engine  looks for \u201cpieces\u201d of the annotation region, such as the beginning point followed by one or more keywords, and one or more other keywords followed by the ending point. If such pieces are located, engine  treats the entire split region (including the additional content inserted between the two pieces) as the annotation region.","Alternatively, each of the individual pieces may be treated as an individual annotation region (thus splitting the original annotation into two annotations). Intermediate points can be generated for split regions in much the same way that beginning and ending points are generated, except that the intermediate points are generated within the interior of the selected region around \u201csignificant\u201d intermediate features, such as periods and commas (which are likely to serve as cleaving points where a whole sentence or phrase may be separated from the preceding or succeeding sentence or phrase). These intermediate points are generated when the beginning and ending point features are captured (e.g., by annotation marking engine  of ), but can be left out of most processing by annotation re-anchoring engine  unless splitting is suspected. As intermediate points are found, they can serve as ending\/beginning points for the new regions resulting from the split.","In addition, the discussion above refers to generating scores for different candidate regions with the highest score being indicative of the closest match to the original region the annotation was anchored to (and thus the best score). Alternatively, different scoring methods may be used so that the lowest score is the best score and indicative of the closest match (e.g., rather than adding points in acts , , , , , , and , points can be subtracted).","Various modifications can also be made to improve the efficiency of the processes described above. For example, as discussed with reference to act  of , the histogram need only be generated once per document. By way of another example, the indexing of keywords in the modified content (act  of ) need only be performed once for the content (and not repeated for each keyword in an annotation anchor). By way of another example, once a particular keyword is located in the modified content for re-anchoring one annotation, it need not be re-located when re-anchoring additional annotations.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 7","FIG. 1"],"b":["330","190","330","332","332","334","332","336","338","340","342","330","336","190","332","338","190","340","190","190","332","342","190","330"]},"Additional information (not shown) may also be optionally included in interface . For example, the score of the region currently being displayed in window  may also be displayed, the range of scores for the candidate regions may be displayed, an indication of important aspects that could not be located for the candidate region may be displayed (e.g., an indication that a beginning point or an ending point could not be found, or that a particular keyword could not be found), an indication of which keywords were found within the candidate region, and so forth. Interface  is intended to be exemplary only. The components of interface  can be changed to be any of a wide variety of conventional user interface components. For example, rather than buttons -, one or more pull-down menus may be included that illustrate user-selectable inputs, one or more check boxes and an \u201cok\u201d button may be used for the inputs, and so forth.","Additionally, UI module  may present an interface to the user that lets the user adjust the region of the modified content to which the annotation is re-anchored. For example, the re-anchoring process may identify a region of the modified content which the user believes is too long or too short at the beginning and\/or ending. UI module  can present an interface that lets the user re-highlight the portion of the modified content to which he or she desires to have the annotation anchored. This can be done, for example, in window  of , or alternatively a separate window or dialog box. The user may be allowed to manually re-highlight the desired region, or alternatively may be allowed to input relocation commands to UI module  (e.g., enter a number into a data entry field and then click a button to \u201cextend ending\u201d by the entered number of characters or words, \u201cshorten beginning\u201d by the entered number of characters or words, etc.). Any such changes are then stored so that the annotation is attached to this re-highlighted portion.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIGS. 8-12","FIG. 1","FIG. 8"],"b":["190","350","352","354","356","358","360","354","356","358","360","354","356","358"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 9","FIG. 8"],"b":["350","368","352","368","354","370","356","358","356","368","352"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 10","FIG. 9"],"b":["350","368","370","356","358","356","358"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 11","FIG. 9"],"b":["350","368","368","374","370","376","368","376","370","376"]},{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 12","FIG. 11","FIG. 11"],"b":["350","368","368","378","378","376","100","368"]},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 13","b":["400","400","400","400"]},"Computer environment  includes a general-purpose computing device in the form of a computer . Computer  can be, for example, a device implementing annotation marking engine , annotation re-anchoring module , or content editor  of . The components of computer  can include, but are not limited to, one or more processors or processing units , a system memory , and a system bus  that couples various system components including the processor  to the system memory .","The system bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, such architectures can include an Industry Standard Architecture (ISA) bus, a Micro Channel Architecture (MCA) bus, an Enhanced ISA (EISA) bus, a Video Electronics Standards Association (VESA) local bus, and a Peripheral Component Interconnects (PCI) bus also known as a Mezzanine bus.","Computer  typically includes a variety of computer readable media. Such media can be any available media that is accessible by computer  and includes both volatile and non-volatile media, removable and non-removable media.","The system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and\/or non-volatile memory, such as read only memory (ROM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently operated on by the processing unit .","Computer  may also include other removable\/non-removable, volatile\/non-volatile computer storage media. By way of example,  illustrates a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown), a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disc drive  for reading from and\/or writing to a removable, non-volatile optical disc  such as a CD-ROM, DVD-ROM, or other optical media. The hard disk drive , magnetic disk drive , and optical disc drive  are each connected to the system bus  by one or more data media interfaces . Alternatively, the hard disk drive , magnetic disk drive , and optical disc drive  can be connected to the system bus  by one or more interfaces (not shown).","The various drives and their associated computer-readable media provide non-volatile storage of computer readable instructions, data structures, program modules, and other data for computer . Although the example illustrates a hard disk , a removable magnetic disk , and a removable optical disc , it is to be appreciated that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes or other magnetic storage devices, flash memory cards, CD-ROM, digital versatile discs (DVD) or other optical storage, random access memories (RAM), read only memories (ROM), electrically erasable programmable read-only memory (EEPROM), and the like, can also be utilized to implement the exemplary computing system and environment.","Any number of program modules can be stored on the hard disk , magnetic disk , optical disc , ROM , and\/or RAM , including by way of example, an operating system , one or more application programs , other program modules , and program data . Each of such operating system , one or more application programs , other program modules , and program data  (or some combination thereof) may implement all or part of the resident components that support the distributed file system.","A user can enter commands and information into computer  via input devices such as a keyboard  and a pointing device  (e.g., a \u201cmouse\u201d). Other input devices  (not shown specifically) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, and\/or the like. These and other input devices are connected to the processing unit  via input\/output interfaces  that are coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","A monitor  or other type of display device can also be connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , other output peripheral devices can include components such as speakers (not shown) and a printer  which can be connected to computer  via the input\/output interfaces .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computing device . By way of example, the remote computing device  can be a personal computer, portable computer, a server, a router, a network computer, a peer device or other common network node, and the like. The remote computing device  is illustrated as a portable computer that can include many or all of the elements and features described herein relative to computer .","Logical connections between computer  and the remote computer  are depicted as a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When implemented in a LAN networking environment, the computer  is connected to a local network  via a network interface or adapter . When implemented in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the wide network . The modem , which can be internal or external to computer , can be connected to the system bus  via the input\/output interfaces  or other appropriate mechanisms. It is to be appreciated that the illustrated network connections are exemplary and that other means of establishing communication link(s) between the computers  and  can be employed.","In a networked environment, such as that illustrated with computing environment , program modules depicted relative to the computer , or portions thereof, may be stored in a remote memory storage device. By way of example, remote application programs  reside on a memory device of remote computer . For purposes of illustration, application programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computing device , and are executed by the data processor(s) of the computer.","Computer  typically includes at least some form of computer readable media. Computer readable media can be any available media that can be accessed by computer . By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile discs (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other media which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The invention has been described herein in part in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.","For purposes of illustration, programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor(s) of the computer.","Alternatively, the invention may be implemented in hardware or a combination of hardware, software, and\/or firmware. For example, one or more application specific integrated circuits (ASICs) could be designed or programmed to carry out the invention.","It should be noted that the annotation anchoring described herein captures features of the underlying content to which the annotation corresponds, and uses these captured features for re-anchoring the annotation to the content after it has been modified. The anchor information is independent of the underlying content\u2014no changes or additions to the underlying content need be made in order to generate the annotation anchor (e.g., no tags or markers need be inserted into the underlying content to indicate where in the underlying content the annotation is to be anchored).","It should further be noted that the annotation anchoring described herein is not tied to any particular content format. For example, various different formats exist for storing content, such as the Microsoft Word word processing document format, the HTML format, the Tagged Image File Format (TIFF), RTF, PDF, etc. The annotation anchors are generated based on captured features from the original language-level content, and, depending on the features extracted, need involve no format-specific structural analysis of the document, so even if the content were to be modified and changed to a different format, the annotation could still be re-anchored to the new format.","The anchoring and re-anchoring described herein is discussed primarily with reference to text content. However, it is to be appreciated that the anchoring and re-anchoring can be used with a wide variety of types of content. With different types of content, different characteristics of the content may be used analogously to the keywords discussed above. These different key parts of the content will vary based on the content type (e.g., keywords for text content, shot boundaries for video content, etc.).","By way of example, the underlying content  of  could be video content with each frame of video content being treated as analogous to characters in text content. The beginning point of a region of video content may be identified by capturing the frame number of the first frame in the region, by capturing color histograms calculated from the first five frames preceding and succeeding the beginning point, etc. Similarly, the ending point of a region of video content may be identified by capturing the frame number of the last frame in the region, by capturing color histograms calculated from the first five frames preceding and succeeding the ending point, etc. For the region between the beginning and ending points, various features may be captured such as the number of frames between the two points, drastic changes in video may be identified using conventional shot boundary detection techniques and these shot boundaries used analogously to text keywords, etc. An example of such a shot boundary detection technique is discussed in Yong Rui, Thomas S. Huang, and Sharad Mehrotra, --, ACM Multimedia Systems Journal, Special Issue Multimedia Systems on Video Libraries, Vol.7, No.5, September 1999, pp 359-368.","By way of another example, the underlying content  of  could be a single image with each pixel in the image being treated as analogous to characters in text content. For image content, rather than a set of sequential bits being the region, a 2-dimensional shape (e.g., a rectangle, circle, triangle, etc.) may be used to define the annotation region. Points on the 2-dimensional shape can be treated analogously to the beginning and ending points (e.g., the top left corner of the rectangle may be the beginning point and the lower right corner of the rectangle may be the ending point), and actual pixel values, hashes of pixel values, pixel offsets (e.g., from a particular point, such as an origin), etc. may be calculated. Various features can be captured for the region, such as a color histogram, number of pixels in the region, recognizable\/trackable objects in the region, motion flow, edge features, wavelet signatures, or various other standard image processing features. These features can then be used to re-anchor the annotation to the correct portion of the image (e.g., a particular individual's face in the image) despite changes in resolution of the image, cropping of the image, etc.","By way of yet another example, the underlying content  of  could be audio content. Audio content in digital form can be separated into multiple frames or samples (or groups of frames and samples), and various features captured therefrom to be used to anchor annotations to the audio content. In the case of analog audio content, the analog audio can be digitized into digital form in a conventional manner (which generates multiple samples). The beginning point of a region of audio content may be identified by capturing the frame or sample number of the first frame or sample in the region, by capturing the values of a number of frames or samples preceding and succeeding the beginning point (e.g., 50 ms of audio data preceding and succeeding the beginning point), by extracting any of various features commonly used in conventional speech or audio processing programs, such as Fast Fourier Transform (FFT) to generate frequency-domain features from the audio segment, or Mel Frequency Coefficients (MFCC), etc. Similarly, the ending point of a region of audio content may be identified by capturing the frame or sample number of the last frame or sample in the region, by capturing the values of a number of frames or samples preceding and succeeding the ending point (e.g., 50 ms of audio data preceding and succeeding the ending point), by extracting any of various features commonly used in conventional speech or audio processing programs, etc. For the region between the beginning and ending points, various features may be captured such as the number of frames or samples between the two points, drastic changes in audio characteristics (e.g., changes in volume) may be identified using conventional techniques and used analogously to text keywords, a signature corresponding to silence\/pause intervals in the region may be generated, etc.","Additionally, the anchoring and re-anchoring described herein is discussed primarily with respect to explicit annotation region identification by a user (for example, the user highlighting or underling a particular series of words in text content). However, the anchoring and re-anchoring is also applicable to implicit region identification. For example, a user may make a mark in a margin next to a paragraph and enter an annotation associated with that mark. For implicit region identification, various features can be captured to represent the beginning point, ending point, and region between the points to which the annotation is to be anchored. Examples of such features include the closest section heading preceding or succeeding the mark, the number(s) of the paragraph(s) the mark is closest to, the page number of the mark, hash values of characters near the mark, and so forth. For example, the closest preceding section heading and page number may be features used for the beginning point, the closest succeeding section heading and paragraph number may be features used for the ending point, and a hash value (one per paragraph) calculated by hashing each of the paragraph(s) closest to the mark may be used analogously to the keywords discussed above.","In addition, an explicit region may be automatically generated based on the implicit proximity of the annotation to the content. For example, if the implicitly positioned annotation is \u201cnear\u201d the third paragraph, choose the third paragraph as the region to which the annotation is anchored, and generate robust features from the third paragraph (as if the user had selected the third paragraph as the region to which the annotation corresponds).","Although the description above uses language that is specific to structural features and\/or methodological acts, it is to be understood that the invention defined in the appended claims is not limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the invention."],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 6","i":["a","b","c "],"b":["6","6"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 7","b":["8","9","10","11","12"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
