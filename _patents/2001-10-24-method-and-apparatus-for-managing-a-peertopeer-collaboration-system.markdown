---
title: Method and apparatus for managing a peer-to-peer collaboration system
abstract: Users and devices in a peer-to-peer collaboration system can join a management domain in which members are administered as a group by a centralized management server operated by an enterprise. In response to a administrator request to join the management domain, the user downloads an injectible identity file containing a definition of the managed user/device into the user system. The user then joins the managed domain by associating the injected identity with their actual identity. Once a user or device is part of a management domain, that user or device receives license rights and policy restrictions that are associated with the domain. In return, the management server interacts with the individual peer-to-peer collaboration systems to enable the enterprise to monitor the usage of, and control the behavior of, that specific identity within the peer-to-peer collaboration system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07546359&OS=07546359&RS=07546359
owner: Groove Networks, Inc.
number: 07546359
owner_city: Beverly
owner_country: US
publication_date: 20011024
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This invention relates to peer-to-peer collaboration systems and, in particular to methods and apparatus for gathering usage statistics for managing such systems.","New collaboration models have been developed which operate in a \u201cpeer-to-peer\u201d fashion without the intervention of a central authority. One of these latter models is built upon direct connections between users in a shared private \u201cspace\u201d. In accordance with this model, users can be invited into, enter and leave a shared space during an ongoing collaboration session between other users. Each user has an application program called an \u201cactivity\u201d, which is operable in his or her personal computer system, communication appliance or other network-capable device which generates a shared \u201cspace\u201d in that user's computer. The activity responds to user interactions within the shared space by generating data change requests, called \u201cdeltas.\u201d The activity also has a data-change engine component that maintains a local data copy and performs the changes to the data requested by the deltas. The deltas are distributed from one user to another over a network, such as the Internet, by a dynamics manager component. When the deltas are received by another user activity in the shared space, the local data copy maintained by that activity is also updated.","Subprograms within the activity program called \u201ctools\u201d perform various specific tasks. For example, an activity program might present various computer games. Within the overall game activity, tools might be available for a chess game and a tic-tac-toe game. Tools are defined by a template that is a document written in Extended Markup Language or XML. The XML template has various sections or tagged blocks that define various attributes of the tool that it defines.","An application constructed in accordance with this model consists of a collection of software components and resources, all of which are targeted for execution on a particular device. As used herein the term \u201ccomponents\u201d will be used to refer to both the software code and the resources that are required for an application. This type of collaboration system is described in detail in U.S. patent application Ser. No. 09\/357,007 entitled METHOD AND APPARATUS FOR ACTIVITY-BASED COLLABORATION BY A COMPUTER SYSTEM EQUIPPED WITH A COMMUNICATIONS MANAGER, filed Jul. 19, 1999 by Raymond E. Ozzie, Kenneth G. Moore, Robert H. Myhill and Brian M. Lambert; U.S. patent application Ser. No. 09\/356,930 entitled METHOD AND APPARATUS FOR ACTIVITY-BASED COLLABORATION BY A COMPUTER SYSTEM EQUIPPED WITH A DYNAMICS MANAGER, filed Jul. 19, 1999 by Raymond E. Ozzie and Jack E. Ozzie; U.S. patent application Ser. No. 09\/356,148 entitled METHOD AND APPARATUS FOR PRIORITIZING DATA CHANGE REQUESTS AND MAINTAINING DATA CONSISTENCY IN A DISTRIBUTED COMPUTER SYSTEM EQUIPPED FOR ACTIVITY-BASED COLLABORATION, filed Jul. 19, 1999 by Raymond E. Ozzie and Jack E. Ozzie and U.S. patent application Ser. No. 09\/588,195 entitled METHOD AND APPARATUS FOR EFFICIENT MANAGEMENT OF XML DOCUMENTS, filed Jun. 6, 2000 by Raymond E. Ozzie, Kenneth G. Moore, Ransom L. Richardson and Edward J. Fischer.","The aforementioned collaboration system has several specific advantages over centralized systems. These advantages include reduced centralized management resources, reduced server storage resources, and optimized computing resources. For example, in many systems, teams of co-workers share information in a shared space. In a system that can have many such co-worker teams, any number of which could be actively online at any given time, due to the resources consumed, administrators would have to police who could and could not create spaces. Similarly, the administrators would have to backup the shared spaces. Further, since most of the time no single member of a team assumes the responsibility of declaring the collaboration to be \u201cover,\u201d administrators would have to prod workers to delete their shared spaces.","However, in a peer-to-peer collaborative environment, each member of a coworker team makes use of his or her own local computing resources, without any worst-case capacity planning necessary. There is no need to have bandwidth, processing and storage enough to support the entire universe of users, only enough to support his or her own usage. In addition, when an individual user finds that stored assets no longer merit storage on a local machine, he or she can delete them without having to ask permission of the rest of the team. This eliminates the administrative burden of managing access to services, backing up resources that may be obsolete, and tracking down abusers of the system.","Further, peer-to-peer collaboration systems can also reduce storage resource requirements. For example, a common network inefficiency arises when a single e-mail is sent with a file attachment to multiple recipients and some recipients reply to other recipients with the file still attached. Not only does this operation unnecessarily tax the network, but most client\/server messaging systems will store a replica of the message and its attachments on both the client and the server. Peer-to-peer file transfer can minimize network traffic by sending the file only to those recipients who need to obtain a copy thereby eliminating redundant storage.","Peer-to-peer collaboration systems also make direct use of local computing resources in business-to-business and business-to-consumer settings. For example, a person-to-person customer service application can move content directly to the personal desktops of customer support personnel as well as to the desktop of the customer, instead of to a corporate Web server, thereby effectively distributing the computing and network resources accordingly. Likewise, a cross-company team conducting business-to-business planning will connect directly with each other instead of meeting \u201cat\u201d a centralized Web site.","Even though peer-to-peer collaboration systems have some distinct advantages, in many cases, it is difficult to deploy, manage and monitor these systems, particularly in large organizations. Since central administration is not necessary to run these systems and, indeed, many systems affirmatively insure the privacy of the participants, it may be difficult for administrators to monitor usage of such systems in order to improve the services. Nevertheless, managers have a legitimate and necessary responsibility to track usage of enterprise computing resources, at least in the aggregate, to allow managers to determine application utility and to intelligently anticipate capacity planning requirements.","Further, since there is no central location with which all users must interact, there is also no central authority to enforce licensing restrictions or payment terms that may be imposed by some software developers on the transfer, or use, of software components that they developed. In addition, software components that incorporate other software components may require that licenses be obtained from several vendors, thereby making the licensing process complicated.","Thus, there is a need for monitoring system usage without violating the privacy of the individual users.","In addition, there is a need for a method and apparatus that can automatically enforce licensing restrictions without requiring that a user continuously collaborate with a central location.","In accordance with the principles of the invention, users and devices can voluntarily join a management domain in which members are administered as a group by a centralized management server operated by an enterprise. Once a user or device is part of a management domain, that user or device receives all license rights and policy restrictions defined by the administrator as associated with the domain. In return, the management server interacts with the individual peer-to-peer collaboration systems to enable the enterprise to monitor the aggregate usage of such systems. The management server allows the enterprise to measure and monitor the overall usage of collaborative software and services, as well as detail on the usage of specific tools and capabilities. The management server does not access data within the shared spaces, but still allows administrators to understand how the collaborative software is being used in the enterprise.","In accordance with one embodiment, users or devices join a management domain by a request to administrative personnel (or, more likely, in response to a directive from administrative personnel) to become managed users or devices. The user or device then receives information from the management server containing a definition of the managed user\/device that they apply to their system. In the case of a user, this information is in the form of a file containing an injectible identity. In the case of a device, the information is in the form of device information. The injectible identity or device information allows the managed user\/device to obtain license rights and policy restrictions and also allows the management server to track system usage. The user or device joins the managed domain by associating their actual identity or device information with the identity or device information defined on the management server.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","106","122"]},"The management system  creates management domains, which are collections of managed users and managed devices, that are defined and administered as a group, on the management server . In one embodiment of a collaborative system, each user has one or more \u201cidentities.\u201d An identity is the name by which other collaborative users recognize the user. For example, it might be a name that is displayed in shared spaces to which the user belongs, or is displayed in contact lists that other user see when they send instant messages. Each identity may have encryption keys associated with it that are used to encode messages that are sent and received by the identity.","In addition, each user in the collaborative system has an account that is necessary in order to use the collaborative software. An account is a file stored on the end-users computer  that maintains information such as one or more identities, and their secret encryption keys, the end-user computer systems on which the collaborative software is run, references to the shared spaces in which the user is a member and information about the people with which the user communicates and their identities.","In another embodiment, a user can create multiple identities for the same account. For example, the user might have one identity when using the collaborative software for business activities and another identity when using the software to communicate with friends and family. A managed user is a special \u201cidentity\u201d within a user account that is a member of, and administered through, a management domain. Similarly, a managed device is a machine, such as end-user computer  running collaborative client software , which machine is a member of, and administered through, a management domain.","In accordance with the principles of the invention, the management system uses injectible identities in order to permit a user to join a managed domain. An injectible identity is a file containing a definition of a managed user, and a definition of how the collaborative client software  should communicate with the management server. In one embodiment this file may be XML-based. A sample XML injectible identity file is as follows:",{"@attributes":{"id":"p-0025","num":"0024"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<g:fragment xmlns:g=\u2033urn:groove.net\u2033>"},{"entry":"<g:ManagedObject Version=\u20330,0,0,0\u2033>"},{"entry":"<g:Header DeviceSpecific=\u20330\u2033 IntendedIdentityURL=\u2033\u2033"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Description=\u2033\u2033"]},{"entry":[{},"ReplacementPolicy=\u2033$Never\u2033"]},{"entry":[{},"IssuedTime=\u20331.00367485856E+012\u2033"]},{"entry":[{},"GUID=\u20335m6bstra6s33svfm7ztmc39im4gca7i8ge3uqpa\u2033"]},{"entry":[{},"Name=\u2033grooveIdentity:\/\/\/5m6bstra6s33svfm7ztmc39im4gca7i8ge3uqpa\u2033"]},{"entry":[{},"DisplayName=\u2033Bill Tierney\u2033>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<g:Issuer DisplayName=\u2033Groove Networks Inc.\u2033 Name=\u2033urn:groove.net: \u2033\/>"]},{"entry":[{},"<g:ManagementDomain ServerURL=\u2033http:csm.groove.net\/managedservices\u2033"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DisplayName=\u2033Tierney&apos;s Domain\u2033"]},{"entry":[{},"Name=\u20339h8ep3jp3grddut7mc25c7a4wqkviyw2uci33ra\u2033"]},{"entry":[{},"Certificate=\u201cLm5IdApUSVRMRTpDb25zdWx0aW5nlEV\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/g:Header>"},{"entry":"<g:Body"},{"entry":"ComponentResourceURL=\u2033http:\/\/components.groove.net\/Groove\/Components\/Root.os"},{"entry":"d?Package=net.groove.Groove.SystemComponents.GrooveAccountMgr_DLL&amp;Ver"},{"entry":"sion=0&amp;Factory=IdentityTemplate\u2033>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<g:IdentityTemplate>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<g:ContactTemplate>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<g:vCard Data=\u2033QkVHSU46VkNBUkQKVkVSU0IPTjoyL"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"jEKRk46QmlsbCBUaWVybmV5Ck46VGIIcm5leTtCaWxsCk"]},{"entry":[{},"VNQUIMO0IOVEVSTkVUO1BSRUY6YnRpZXJuZXIAZ3Jvb"]},{"entry":[{},"3ZILm5IdApUSVRMRTpDb25zdWx0aW5nlEVuZ2luZWVyCk"]},{"entry":[{},"9SRzpHcm9vdmUgTmV0d29ya3MsIEIuYwpBRFI7UE9TVE"]},{"entry":[{},"FMO1dPUks6OzsxMDAgQ3VtbWIuZ3MgQ2VudGVyIFN1aX"]},{"entry":[{},"RIIDUzNVE7QmV2ZXJseTtNQTswMTkxNTtVU0EKVEVMO"]},{"entry":[{},"1dPUks7Vk9JQ0U6KDk3OCkgNzlwLTIxMTgKVEVMO1dPU"]},{"entry":[{},"ks7RkFYOihudWxsKQpURUw7UEFHRVI6KG51bGwpCkVO"]},{"entry":[{},"RDpWQ0FSRAo=\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/g:ContactTemplate>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/g:IdentityTemplate>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<\/g:Body>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<g:Signatures>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<g:Signature Fingerprint=\u20335eae-3d04:e016-3bdf:ef63-5a54:0d1c-"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"5f72:efdf-57c2\u2033"]},{"entry":[{},"Value=\u2033iqval5RfBqOuTceCadLccOudApz\/5\/s6ZAVJ02CDOd"]},{"entry":[{},"CbqOJScxkDdBSyb8qEccymVXKajFDE29RKhlaH0f8vnf7q1"]},{"entry":[{},"Xg3UJnubdR5RpiF8IINvPI2OOt2kbyd8Sfz9865L7I9\/pUGI+1"]},{"entry":[{},"9v2zGfZv\/CTahGcbGpiKrMmPcLOVISHDBc45PAjJP7I3e6hh"]},{"entry":[{},"qMrAjPx1tPYQn\/zrtH80cQCKOn9o7DT7rmvce\/XYnngDeEb"]},{"entry":[{},"9vHnMCmVlflptXhyddwtFr\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/g:Signatures>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/g:ManagedObject>"},{"entry":"<\/g:fragment>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The steps in the process by which a managed \u201centity\u201d that is either a managed user or managed device joins a managed domain by associating an injectible identity with an actual identity or device on a machine running the collaborative client software is illustrated in . This process begins in step  and proceeds to step  where a system administrator uses management software in a management terminal  to define one or more managed users as indicated schematically by arrow . Terminal  may have a web browser interface which is connectable, via the Internet , to the management server . A managed user is defined by supplying information for each user. This information could include user identifying information such as the company name, the full name, first and last names, title and email address. This information is stored in database  and used to create a mechanism by which the user can join the managed domain. This mechanism can be an injectible identity that can be a file containing an XML document which, in turn, contains the definition of the user. Alternatively, the mechanism can be a username\/password pair. Either the identity file or the name\/password pair may be used by an end-user to effectively \u201cjoin\u201d the management domain. Once joined, the client software identity can be centrally managed.","Alternatively, a system administrator, via the terminal  can create a device file, such as a Windows REG file, that can be applied to the end-user computer system  running the collaborative client software  that \u201cjoins\u201d that device to the management domain. A sample Windows REG file is as follows:",{"@attributes":{"id":"p-0028","num":"0027"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"REGEDIT4"]},{"entry":[{},"[HKEY_LOCAL_MACHINE\\SOFTWARE\\Groove Networks,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Inc.\\Groove\\ManagementDomain]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201cName\u201d=\u201cGroove Networks\u201d"]},{"entry":[{},"\u201cGUID\u201d=\u201c9h8ep3jp3grddut7mc25c7a4wqkviyw2uci33ra\u201d"]},{"entry":[{},"\u201cServerURL\u201d=\u201chttp:\/\/www.groove.net\/ManagementServer\u201d"]},{"entry":[{},"\u201cCertificate\u201d=hex:01,23,45,67,89,bc,de,f0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In step , the injectible identity and\/or name\/password pair (for accounts) or the registry information (for devices) is delivered to the end user. This delivery generally occurs when a download manager in the client software  downloads the identity or device information. In the case of an account, the administrator may choose to distribute this information automatically from the management server  via an email message to the e-mail system in the end-user computer  as indicated schematically by arrow . Alternatively, the system administrator may distribute the injectible identity, name\/password pair or the registry information by some other means, such as floppy disks or CDs.","Next, in step , in the case of a managed account, the end user either injects the injectible identity file into the collaborative client software  by launching an attachment to the e-mail message sent from the server , as indicated schematically by arrow , or joins the management domain using the supplied username\/password as input to a special add program in the client software . For managed devices, the end user applies the device file to the computer system . For example, in the case that a Windows operating system is in use in the end-user computer system , the device file can be a windows REG file that is applied to the system registry. These actions inform the client software  that the user's account and\/or device will now be managed through a management domain on the management server .","Generally, if the user has a pre-existing account, that is the account into which the identity will be injected. An identity that is injected will become a member of the managed domain, will be subject to central administration and will receive licenses. If the user has more than one account, the injection process will prompt the user for the account into which to inject the identity. The identity is specific to a particular user and will become the default identity. Consequently, if the user attempts to inject the same identity into an additional account, the additional account will not become a member of the managed domain and will not receive licenses. In addition, an error message will be displayed notifying the user that this identity has already been injected into another account. In all cases, the identity that is created as a result of the identity injection process is the identity that will be subject to central administration and will received applicable licenses and policies.","The purpose of joining a managed domain is to \u201csynchronize\u201d the behavior of the client software  with configuration settings as defined by a system administrator. In order to perform this synchronization, selected properties and settings are transmitted between the client software  and the server management server  in the form of \u201cmanaged objects\u201d as schematically illustrated by arrow . These objects may contain device policies, identity policies, licenses, etc. In this context, a license is an object that enables a certain area of functionality with the client software , but does not deal with legal rights. Consequently, if a license exists, the associated functionality will be activated, regardless of how the license was obtained.","In all cases, the managed objects are sent between the server  and the client software  by means of a conventional transport system. The transport infrastructure between the client and the server treats these object as \u201copaque\u201d and does not interact with the contents. License control and policy control software in the both the management server and the client software performs the functions of enabling and restricting functionality in the client software.","The transfer of information between the server  and the client software  would typically occur periodically, for example, hourly, and involves steps -. In step , the client software , on behalf of a managed account or device, creates an inventory list of all managed objects from the current management domain that the client software  currently has in its possession, and sends the list to the server .","In step , when the server  receives the list, it creates another inventory list of the managed objects that the server determines the client should possess, and compares the two lists. The process then proceeds, via off-page connectors  and , to step  where a determination is made whether the client list matches the server list. If the lists match, the process ends in step .","Alternatively, if the lists do not match as determined in step , in step , any objects in the server list that are not in the client list cause the server  to deliver those objects to (and install them on) the client computer system  as part of the transaction. If the objects on the client list are not the current version as indicated by the server list, they can also be updated as part of the transaction. Conversely, in step , any objects in the client list that are not in the server list cause the server  to \u201crevoke\u201d those objects from the client computer system . In this manner, the client software and the server software are \u201csynchronized.\u201d During this process, as set forth in step , the server  may also determine that the entire management relationship with the end-user has been, or should be, terminated. If this is the case, in step , the management server  will revoke all licenses and policies that the client software  has in its possession, which licenses and policies originated from the management domain. The server will also disable the identity in the client software  that was being managed by the management domain. The process then ends in step .","Managed domains provide license management services that allow enterprises to monitor and manage the use of the collaborative software and third party licensed products. The license management service enables administrators to assure they are in compliance with license agreements and to remotely add or remove user licenses as required.","Managed domains also provide customer service management (CSM) services that enable enterprises to monitor the usage of collaborative software within their organization and outside their organization in managed domains of suppliers and partners. Using CSM services, enterprises can measure the overall usage of the collaborative software and services, as well as detail statistics and reports on specific tool usage without violating the confidentiality of the spaces. There is still much data concerning usage of the collaborative software that can be collected while fully respecting the legitimate and necessary confidentiality of the content and identity of the members of the shared spaces themselves. This information includes the number of shared spaces created, how often the shared spaces are created, how long do the shared spaces last, how many members are included and the sets of functionality used in each shared space, the roles in individuals in the shared spaces, etc.","A system constructed in accordance with the principles of the invention also uses a centralized monitoring service that tracks collaborative software usage in the aggregate, and to generate relatively fine-grained statistics, allowing system managers to determine application utility and to intelligently anticipate capacity planning requirements. In addition, errors and problems can be reported to the management server. In some cases, these errors can be analyzed and then the management server can appropriately respond by sending upgrade notifications to the client software. The client software can then download and install an upgrade to fix the problem. A block schematic diagram of such a system is shown in .","The Customer Service Management (CSM) management system  comprises a CSM interface  that runs in the end-user computer system and interacts with the collaborative client software . The CSM interface  has a statistics collection application programming interface (API) and a CSM event API . All statistics and events are associated with a specific account. As schematically illustrated by arrow , the statistical information is stored in a statistics store  which is located in the associated account store  in the end-user computer system. Events are stored in a local event store  in the end-user computer system as schematically illustrated by arrow . The information in both the statistics store  and the event store  may be encrypted for privacy. Periodically, statistics are moved from the statistics store  to the event store  as illustrated by arrow .","The event portion of the system generates several event types. These include statistical package events, error events and device\/network configuration changes. Statistical package events are generated when a predetermined time duration has elapsed or when a predetermined number of statistics have been recorded. Error events are generated as described below. Device\/network configuration events are generated when a device\/network configuration changes. Such changes can include changes in the type and number of processors, processor speed, memory size, sampling bandwidth and operating system version. All events pass through the CSM interface  and through the CSM event API  and are stored in the event store. Once the events are in the event store the remainder of the system handles the events opaquely.","Each event type has attributes that are stored along with the event. These attributes include a flag indicating whether the event should be uploaded to the management server  and a predefined time duration that the event can remain in the event store in case it cannot be uploaded for some reason. At the end of the predefined time interval, the event is destroyed whether it has been uploaded or not. Also included is encryption information.","Periodically, the CSM interface iterates through the events in the event store  and sends events flagged for upload to the management server , via a network, such as the Internet  as indicated schematically by arrow . In one embodiment, a simple object access protocol (SOAP) is used to forward the events from the event store  to the management server . The SOAP protocol is essentially a remote procedure call over the network using XML documents. Both the client software  and the management server software  have SOAP libraries so that methods in the management server can be invoked by the client software .","For example, assuming a SOAP response is designated as X and a SOAP request is designated as R then the client software  could forward events to the management server  by using the following commands:\n\n","These commands create an XML document having the following format, Which is a standard SOAP message:",{"@attributes":{"id":"p-0046","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<SOAP-ENV:Envelope SOAP-"]},{"entry":[{},"ENV:encodingStyle=\u201chttp:\/\/schemas.xmlsoap.org\/soap\/encoding\/\u201d"]},{"entry":[{},"xmlns:SOAP-"]},{"entry":[{},"ENC=\u201chttp:\/\/schemas.xmlsoap.org\/soap\/encoding\/\u201d xmlns:SOAP-"]},{"entry":[{},"ENV=\u201chttp:\/\/schemas.xmlsoap.org\/soap\/envelope\/\u201d"]},{"entry":[{},"xmlns:xsd=\u201chttp:\/\/www.w3.org\/1999\/XMLSchema\u201d"]},{"entry":[{},"xmlns:xsi=\u201chttp:\/\/www.w3.org\/1999\/XMLSchema-instance\u201d>"]},{"entry":[{},"\u2003<SOAP-ENV:Body>"]},{"entry":[{},"\u2003\u2003<ns1:ReportEvent xmlns:ns1=\u201chttp:\/\/www.groove.net\/soap\u201d>"]},{"entry":[{},"\u2003\u2003\u2003<EventName xsi:type=\u201cxsd:string\u201d>EventData<\/EventName>"]},{"entry":[{},"\u2003\u2003<\/ns1:ReportEvent>"]},{"entry":[{},"\u2003<\/SOAP-ENV:Body>"]},{"entry":[{},"<\/SOAP-ENV:Envelope>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"This document is sent to the management server over the Internet via a suitable protocol such as HTTP. In the present case, the event strings are encrypted to preserve privacy.","Errors that occur in the client software  can also be reported. For example, the collaborative client can detect and record errors as they occur. Information about these errors can be stored in the local event store , and periodically transmitted to the management server as described previously.","It is also possible to track errors in the client software  over a large population of users. For example, as part of the software build process for the client software , certain \u201cdebug\u201d symbols are generated to assist in debugging the code. These debug symbols can be captured and converted to a predetermined format for each DLL library and program component and persistently stored on the management server for every version of the DLL Library or program components that has been released. Then, when an error occurs in the client software , an automatic routine \u201cwalks\u201d the program call stack and obtains register and other information. This information is then stored in the event store  and can later be transmitted to the management server . When this information arrives on the management server it is processed against the previously stored \u201cdebug\u201d symbols, and detailed source file and line number information can be produced showing precisely where the error occurred in the client software . It is possible to generate a report that summarizes this information across all users defined on the management server to determine the severity or frequency of particular errors, which could be used to prioritize efforts to resolve them. After the problem is corrected, the management server can broadcast the location of a new component to the client software  that fixes, or removes, the error.","Statistical reports can also be generated, by transmitting the contents of the statistical store  to the management server using the same SOAP mechanism as is used to transmit events. Once the statistical information is received it can be placed in a table and used to generate reports. Reports detailing the collaborative software usage in an organization might include total hours of use of client software usage by time period, e.g. weekly, usage of specific tools, number of shared spaces created and deleted and size of shared spaces (number of members). Statistical reporting can be both at an aggregate level and at a granular level, including the ability to track a specific account or device in an organization.","A software implementation of the above-described embodiment may comprise a series of computer instructions either fixed on a CRSM (Computer Readable Storage Medium), for example, a diskette, a CD-ROM, a ROM memory, or a fixed disk, or transmittable to a computer system via a CRTM (Computer Readable Transmission Medium), for example via a modem or other interface device over a medium. The CRTM can either be a tangible medium, including but not limited to optical or analog communications lines, or may be implemented with wireless techniques, including but not limited to microwave, infrared or other transmission techniques. The CRTM may also be the Internet. The series of computer instructions embodies all or part of the functionality previously described herein with respect to the invention. Those skilled in the art will appreciate that such computer instructions can be written in a number of programming languages for use with many computer architectures or operating systems. Further, such instructions may be stored using any memory technology, present or future, including, but not limited to, semiconductor, magnetic, optical or other memory devices, or transmitted using any communications technology, present or future, including but not limited to optical, infrared, microwave, or other transmission technologies. It is contemplated that such a computer program product may be distributed as a removable media with accompanying printed or electronic documentation, e.g., shrink wrapped software, pre-loaded with a computer system, e.g., on system ROM or fixed disk, or distributed from a server or electronic bulletin board over a network, e.g., the Internet or World Wide Web.","Although an exemplary embodiment of the invention has been disclosed, it will be apparent to those skilled in the art that various changes and modifications can be made which will achieve some of the advantages of the invention without departing from the spirit and scope of the invention. For example, it will be obvious to those reasonably skilled in the art that, in other implementations, different arrangements can be used for the scope and arrangement of the federated beans. Other aspects, such as the specific process flow, as well as other modifications to the inventive concept are intended to be covered by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The above and further advantages of the invention may be better understood by referring to the following description in conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
