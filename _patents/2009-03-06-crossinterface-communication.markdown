---
title: Cross-interface communication
abstract: Cross-interface communication is described, including generating data associated with a synthetic environment, the synthetic environment comprising one or more communication protocols, converting the data using one of the one or more communication protocols to generate converted data, wherein the converted data is interpreted using another of the one or more communication protocols, and transmitting the data over a communication path between two or more endpoints using one or more communication interfaces, wherein the data, after being interpreted by the another of the one or more communication protocols, is used to present information associated with the synthetic environment on at least one of the two or more endpoints.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08694585&OS=08694585&RS=08694585
owner: Trion Worlds, Inc.
number: 08694585
owner_city: Redwood City
owner_country: US
publication_date: 20090306
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCES TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application is related to co-pending U.S. patent application Ser. No. 12\/259,902, filed Oct. 28, 2008 and entitled \u201cPersistent Synthetic Environment Message Notification,\u201d U.S. patent application Ser. No. 12\/399,877, filed Mar. 6, 2009 and entitled \u201cSynthetic Environment Character Data Sharing,\u201d and U.S. patent application Ser. No. 12\/399,902, filed Mar. 6, 2009 entitled \u201cSynthetic Environment Character Data Sharing,\u201d all of which are herein incorporated by reference for all purposes.","The present invention relates to generally to software, computer program architecture, and data network communications. More specifically, techniques for cross-interface communication are described.","Gaming applications, game platforms, and games (generally, \u201cgaming\u201d) include massively multiplayer online games (\u201cMMOG,\u201d \u201cMMO\u201d), massively multiplayer online role playing games (\u201cMMORPG\u201d), console games, desktop or personal computer games, and others. MMOGs, MMOS, and MMORPGs are games that allow numerous players to interact with and within a virtual world. Using the Internet and other types of data networks, users (e.g., persons using computing devices and resources to engage in MMOG, MMO, MMORPG, or other types of games) can also communicate with each other within a game environment. However, conventional techniques for communication within game environments are limited and problematic.","Conventional virtual worlds or game environments and application or communication interfaces (\u201cinterfaces\u201d) are limited in both capability and performance. For example, some conventional interface solutions are generally limited to a single server configured to implement a game environment. Conventional solutions using a single server and, in some conventional solutions, a backup server typically restrict the types of processes and functions that are performed by users within a game environment, such as communication. Some conventional solutions use multiple servers. However, each server in a multiple server implementation is typically used to instantiate a specific region of a world or a given set of functions, thus creating a single-server limitation for communication within a multiple server-implemented game environment. Other problems with conventional solutions include limiting player communication to simple in-game message exchanges such as chat or instant messaging, typically using proprietary systems that limit game appeal, user adoption, and commercial potential for revenue generation.","In conventional solutions, a user can communicate with another user playing within the same game environment because user accounts are typically assigned to the same server. However, users are typically unable to communicate with other users located in different regions of a game environment until a user enters the same game environment, which is enabled by the same server. Further, conventional solutions do not allow users to communicate with other users outside of a game environment (i.e., users who are not logged into or interacting within a virtual environment) due to conventional application game architecture, restrictive conventional network topologies for game implementations, inability to process large volumes of real-time or near real-time communication data, lack of interfaces across different applications, platforms, and game environments, and the development and use of proprietary messaging applications, formats, and protocols associated with specific games, game titles, and game platforms.","Other conventional solutions are limited in the ability to convert, interpret or otherwise handle data in alternative data formats or protocols other than those specifically created for the game environment (i.e., native to the game environment or system). For example, a conventional game may have a native messaging system that allows users to \u201cchat\u201d or engage in instant or short messaging between each other. However, conventional native messaging system solutions are unable to integrate or otherwise work with other messaging systems. Conventionally, multi-server game environments do not permit communication entirely between user accounts hosted by different servers, particularly if one shard is used to implement a given region and another shard is used to implement a different region and the users are not interacting within the same region of a game environment.","Thus, what is needed is a solution for game communication without the limitations of conventional techniques.","Various embodiments or examples may be implemented in numerous ways, including as a system, a process, an apparatus, a user interface, or a series of program instructions on a computer readable medium such as a computer readable storage medium or a computer network where the program instructions are sent over optical, electronic, or wireless communication links. In general, operations of disclosed processes may be performed in an arbitrary order, unless otherwise provided in the claims.","A detailed description of one or more examples is provided below along with accompanying figures. The detailed description is provided in connection with such examples, but is not limited to any particular example. The scope is limited only by the claims and numerous alternatives, modifications, and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided for the purpose of example and the described techniques may be practiced according to the claims without some or all of these specific details. For clarity, technical material that is known in the technical fields related to the examples has not been described in detail to avoid unnecessarily obscuring the description.","In some examples, the described techniques may be implemented as a computer program or application (\u201capplication\u201d) or as a plug-in, module, or sub-component of another application. The described techniques may be implemented as software, hardware, firmware, circuitry, or a combination thereof. If implemented as software, the described techniques may be implemented using various types of programming, development, scripting, or formatting languages, frameworks, syntax, applications, protocols, objects, or techniques, including C, Objective C, C++, C#, Adobe\u00ae Integrated Runtime\u2122 (Adobe\u00ae) AIR\u2122), ActionScript\u2122, Flex\u2122, Lingo\u2122, Java\u2122, Javascript\u2122, Ajax, Perl, COBOL, Fortran, ADA, XML, MXML, HTML, DHTML, XHTML, HTTP, XMPP, and others. Design, publishing, and other types of applications such as Dreamweaver\u00ae, Shockwave\u00ae, Flash\u00ae, and Fireworks\u00ae may also be used to implement the described techniques. The described techniques may be varied and are not limited to the examples or descriptions provided.","Techniques for cross-interface communication are described, including receiving messages associated with activities or events within a persistent virtual world, game environment, or synthetic environment (\u201csynthetic environment\u201d), determining a protocol or format associated with the message and identifying one or more recipients of the message. In some examples, the one or more recipients may be identified based on evaluating a sending user's account for a friends list, guild list, distribution list, or other user-provided indication of recipients, destination accounts, or receiving users of a message. Automatically or manually-generated messages may be received, interpreted, configured, transformed, and sent in various formats, without limitation, to enable users (e.g., one or more users organized and interacting with a virtual environment as a single individual character or as a group of characters (i.e., users) in organizational units such as a group of users, community of users, a guild, party, team, unit, fire team, squad, platoon, company, battalion, regiment, regimental combat team, brigade, brigade combat team, division, army, and the like) to communicate in real-time or near real-time while logged into or out of a synthetic environment. For example, a user \u201clogged into\u201d (i.e., interacting with) a synthetic environment may send messages to other users interacting within the synthetic environment or other, different synthetic environments. Using the described techniques, users may also send messages to other users who are \u201clogged out,\u201d altogether not interacting with a synthetic environment, interacting with a different synthetic environment or game, or interacting with the same or different game implemented on the same or different shard. Regardless, the above-described examples may be implemented using various types of application programming or communication interfaces to transform messages into a desired instant messaging format for delivery to a user regardless of whether a recipient (i.e., another user) is interacting with a synthetic environment. Alternatively, the disclosed techniques may be used by different users of different or multiple synthetic environments to communicate with each other. In other examples, the described techniques may be varied and are not limited to those described.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["120","122","124","126","128","130","132","136","138","140","144","146","150","150","128","146","128","146","124","120","122","128","146","124"]},"Here, any of clients - and server  may access network  using interface . In some examples, interface  may be associated with a common, shared, or otherwise connected (\u201cconnected\u201d) application that allows users to view, read, and access other users' generated data. The number, type, configuration, or other variation of servers (e.g., server ) may be implemented using more or different types of servers and is not limited to the example shown and described here. For example, another server may be used to implement a synthetic environment that is different than that implemented by server . Further, a synthetic environment may also be implemented by one or more of client , gaming console , wireless clients -, portable gaming device , networked clients -, and client . In other examples, network application  and the above-described elements may be implemented differently and are not limited to the descriptions provided.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2A","b":["202","204","206","208","210","212","214","216","218","220","218","218"]},"Here, communications module  is configured to provide an interface for sending and receiving data from application  and to route data and signals to one or more of logic module , account\/profile management system , account data module , network management module , communications interface and protocol determination module , graphics module , and repository  by generating and transmitting control signals and data over bus . In some examples, logic module  may be configured to implement control functions over some or all of modules - and repository . Further account\/profile management system  may be configured to enable access to or from a user account associated with a synthetic environment. In some examples, account data module  may be configured to provide access, control, management, or other functions associated with data in a given account (e.g., personal inventory, avatar status, life, game, synthetic environment, or other types of data). Still further, network management module  and graphics module  may be configured to route data and to render various types of displays on an electronic, computer, or other type of display, respectively. As described below, communications module , in association with some, none, or all of logic module , account\/profile management system , account data module , network management module , communications interface and protocol determination module , graphics module , and repository , may be used to implement the described techniques.","In some examples, communications module  provides data input from and output to an operating system, display, network or other application configured to implement application . In some examples, data input to communications module  may be a parameter associated with a synthetic environment (e.g., a persistent virtual world, game environment, or the like may be implemented using any type of computing system architecture configured to implement an artificial environment in which users (e.g., players) may interact using characters, avatars, or other virtual, multimedia-implemented constructs). In other examples, data input to or information output from communications module , logic module , account\/profile management system , account data module , network management module , and graphics module  may be received or sent using communications interface and protocol determination module .","In some examples, data associated with a synthetic environment may be generated by account\/profile management system , account data module  and graphics module . The data may be configured for transmission using network management module  and communications interface and protocol determination module . Communications module  and communications interface and protocol determination module  may be configured to receive, interpret, handle, or otherwise manage input received from the internet of other network. In other examples, application  and the above-described elements may be implemented differently and are not limited to the descriptions provided.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2B","FIG. 2A"],"b":["222","204","206","208","210","212","214","216","218","220","224","204","206","208","210","212","214","216","218","220","224","224","224","224","224","224","224"]},"In some examples, once an environment associated with an endpoint has been determined by environmental determination module , data may be transmitted to one or more of modules - and repository . As an example, when an environment associated with a sending endpoint identified to receive a message from a receiving endpoint, data may be sent to communications interface and protocol determination module to generate a message from the sending endpoint to the receiving endpoint. For example, if a user logged into and interacting with a synthetic environment sends a message to another user who is not logged into the synthetic environment, but who is using her mobile data communication device (e.g., wireless clients -, portable gaming device , or others), environmental determination module  may signal (i.e., send data to) communications interface and protocol determination module  instructing the generation of a message for a given data communication protocol for the receiving user's device. Various types of data communication protocols may be used for constructing messages by one or more elements of application  (e.g., wireless application protocol (WAP), transmission control protocol (TCP\/IP), binary runtime environment for wireless (BREW), and others without limitation). In other examples, application  and the above-described elements may be varied and are not limited to the descriptions shown and provided.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3A","b":["302","304","306","308","310","312","314","302"]},"Here, communications interface and protocol determination module  may be implemented as software, hardware, circuitry, or a combination thereof and is configured to manage data transmission over a data communication link or path (\u201cdata communication path\u201d) between recipients (e.g., sending or source user account, end devices, destination accounts (i.e., user accounts identified on a user's friends list, guild list, or other grouping or collection of addresses, indicators, user names, or other account identifiers), or other receiving accounts of messages sent by from an account) by identifying data communication protocols, formats, or other attributes of a message. Messages may, in some examples, be sent between various types of users or sets of users (e.g., a group of users, community of users, a guild, party, team, unit, fire team, squad, platoon, company, battalion, regiment, regimental combat team, brigade, brigade combat team, division, army, and the like). In some examples, communications interface and protocol determination module  receives data input from and provides data output to an operating system, display, network or other application configured to implement communications interface and protocol determination module . Communications interface and protocol determination module  may be configured to receive, interpret, handle, or otherwise manage input received from the internet or other network. The data may be configured for transmission using some, none, or all of, input format module , interpretation module , conversion engine , and protocol format module .","In some examples, input format module  may be configured to receive a message including input data . Input data  may, in some examples, include data retrieved from one or more sources of data or information associated with a synthetic environment. As an example, input data  may be retrieved from one or multiple sources (e.g., repository  ()) in real-time or substantially real-time. When received, input data  is evaluated by input format module  to determine the data communication protocol and format that was used to format input data  by a source (e.g., sending user account). After determining the data communication protocol and format used to format input data , interpretation module  interprets the message and included input data  to identify, for example, component parts or elements of a message in order to allow conversion engine  to convert the message into indicated formats for destination accounts or recipients (\u201cdestination accounts\u201d). When a message has been converted, protocol format module  formats an outgoing message to the formats and protocols as identified by a user's friends list, guild list, preferences, filters, or other parameters. For example, a user may wish to email her friends whenever her account's character engages in combat within the synthetic environment. Her friends may be identified by user names or other identifies that are coupled to a profile including email addresses. When a message is converted, recipients may be identified by reviewing her friends list to determine which of her friends are to receive email notifications that she is engaged in combat. As another example, communications interface and protocol determination module  may be implemented to enable users to engage in real-time or substantially real-time chat, instant messaging or similar communication. An instant or chat message sent using a first protocol, processed as input data , and sent as output data  configured as an instant or chat message in the same, similar, or different format and protocol. For example, an instant message sent using extensible messaging and presence protocol (XMPP) may be processed as described above and sent to recipients using open system for communication in realtime (OSCAR) protocol, or other types of instant messaging or chat-based communication interfaces, protocols, or formats, without limitation. In other examples, communication interface and protocol determination module  and the above-described elements may be implemented differently and are not limited to the descriptions provided.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3B","b":["1","320","2","322","1","320","1","320","2","322"]},"Here, communications interface and protocol determination module  may be configured to convert protocol  () to protocol  (). In some examples, communications interface and protocol determination module  may be configured to allow protocol  () to interpret protocol  (). In other examples, communications interface and protocol determination module  may be configured differently to implement cross-interface communication and is not limited to the examples provided.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4A","b":["402","404","406","408","410","420","422","424","426","420","422","424","426","404","420","422","424","426","402"]},"Here, communication interface  is presented as a multi-user chat application. In other examples, communication interface  may be presented as another communication application (e.g. electronic mail, instant messenger, mobile text messenger, peer-to-peer chat, or others). In other examples, communication interface  may be another communication application and is not limited to the descriptions provided. As shown here, communication interface  is shown as a geometric text box. In some examples, communication interface  may be presented as a dynamic news ticker. In other examples, the configuration of the appearance of communication interface  may be varied and is not limited to the description provided.","In some examples, communication interface  is associated with synthetic environment . In some examples, communication interface  may be associated with other network communication systems (e.g. mobile communication device, distributed data network, or others). In other examples, communication interface  may be associated with other communication systems and is not limited to the description provided.","As shown here, synthetic environment  is a persistent virtual world populated by virtual users -. Communication interface  provides users - with a data communication link with each other, and others. User  may be user . User  may be user . As shown in communication interface , users - may be associated with another location within synthetic environment . In other examples, users - may be associated with another location outside synthetic environment . Still further, users - may be associated with another communication system (e.g., mobile communication device, distributed data network) as described above. In other examples, users associated with communication interface  may be associated with other communication systems, either within or outside a synthetic environment, and are not limited to the descriptions provided.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4B","b":["430","432","434","434","432","434"]},"Here, communication interface  is presented as a multi-user chat application. In other examples, communication interface  may be presented as another communication application (e.g. electronic mail, instant messenger, mobile text messenger, peer-to-peer chat, or others). In other examples, communication interface  may be another communication application and is not limited to the descriptions provided. As shown here, communication interface  is shown as a geometric text box. In other examples, the configuration of the appearance of communication interface  may be varied and is not limited to the description provided.","Here, communication interface  is associated with a mobile communication device. In some examples, communication interface  may be associated with other network communication systems (e.g. distributed data network, or others). In other examples, communication interface  may be associated with other communication systems and is not limited to the description provided.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4C","FIG. 4A"],"b":["402","404","406","408","410","420","422","424","426","402","402","440","426","426","402","402","402"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5A","FIG. 5B"],"b":["502","504","218","2"]},"Referring back to , a message, once configured, may be transformed according to the data communication protocol used by the receiving destination (). As an example, the receiving destination may include both SMTP (\u201csimple mail transmission protocol\u201d) and TCP\/IP (\u201ctransmission control protocol\/Internet protocol\u201d)-based forms of electronic mail (\u201cemail\u201d), a message may be transformed to both formats for transmission to the recipient. As another example, a destination may be a mobile web browser on a cell phone, smart phone, personal digital assistant (PDA), or the like configured to handle wireless application protocol (\u201cWAP\u201d) transmitted data. A message may be formatted (e.g., using wireless mark up language (WML)) for transmission, interpretation and handling for a WAP browser. In some examples, after transformation, the message may be sent to one or more destinations. In other examples, multiple destinations may be identified to receive the message. The above-described techniques may be implemented to process a message to multiple recipients using different data communication protocols, without limit. The above-described process may be varied in function, operation, processes, and performed in any arbitrary order and is not limited to the examples shown and described.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 5B","b":["510","512"]},"Once identified, a determination is made as to the type of data communication protocol being used by the one or more intended recipients (e.g., destinations) (). Based on the determined data communication protocols, a message may be formatted according to one or more protocols determined for transmitting data to a recipient using various techniques. In some examples, messages may be formatted by modifying the data encapsulation scheme (i.e., method), algorithm, or structure associated with message data packets, segments, frames, or the like (). Further, messages may also be modified by adding, deleting, or modifying data included in, for example, headers, footers, trailers, error correction checksum numbers, payload data, and others. In other examples, the above-described techniques may be varied based on the type of protocol and are not limited to any specific protocol. Using the techniques described above, messages may be sent by a user to multiple recipients who may be logged into an account associated with a synthetic environment, or who are outside of the synthetic environment, but able to receive messages using, for example, email, instant messages, web tickers, news feeds, RSS (e.g., really simple syndication), Atom, or other types of content syndication fees. The above-described process may be varied in function, processes and performed in any arbitrary order and is not limited to the examples shown and described.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 5C","FIG. 5B"],"b":["520","522","524","524","526","528"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 6","b":["602","606","606"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 7","b":["700","700","702","704","706","708","710","712","714","716","718"]},"According to some examples, computer system  performs specific operations by processor  executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory  from another computer readable medium, such as static storage device  or disk drive . In some examples, hard-wired circuitry may be used in place of or in combination with software instructions for implementation.","The term \u201ccomputer readable medium\u201d refers to any tangible medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media and volatile media. Non-volatile media includes, for example, optical or magnetic disks, such as disk drive . Volatile media includes dynamic memory, such as system memory .","Common forms of computer readable media includes, for example, floppy disk, flexible disk, hard disk, magnetic tape, any other magnetic medium, CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, RAM, PROM, EPROM, FLASH-EPROM, any other memory chip or cartridge, or any other medium from which a computer can read.","Instructions may further be transmitted or received using a transmission medium. The term \u201ctransmission medium\u201d may include any tangible or intangible medium that is capable of storing, encoding or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible medium to facilitate communication of such instructions. Transmission media includes coaxial cables, copper wire, and fiber optics, including wires that comprise bus  for transmitting a computer data signal.","In some examples, execution of the sequences of instructions may be performed by a single computer system . According to some examples, two or more computer systems  coupled by communication link  (e.g., LAN, PSTN, or wireless network) may perform the sequence of instructions in coordination with one another. Computer system  may transmit and receive messages, data, and instructions, including program, i.e., application code, through communication link  and communication interface . Received program code may be executed by processor  as it is received, and\/or stored in disk drive , or other non-volatile storage for later execution.","Although the foregoing examples have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed examples are illustrative and not restrictive."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
