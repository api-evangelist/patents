---
title: Automatic baud rate detection of null modem unimodem client connection
abstract: A baud rate detection system and method automatically detects the baud rate at which a client computing device is communicating with a host computer over a serial connection. The host computer is coupled to the client computing device via a serial connection, which employs a Unimodem null serial protocol. The baud rate detection system includes a baud rate selector to select among multiple baud rates that the client computing device might use to transmit a predefined message (e.g., a text string “C”, “L”, “I”, “E”, “N”, “T”). The system also includes a message detector to listen at the currently selected baud rate for the predefined message. If the message detector receives the message, the current baud rate is the correct rate and is used for continuing communications with the client computing device. On the other hand, if the message detector fails to detect the message after a predetermined time period or detects characters not included in the predefined message, the baud rate selector chooses a new baud rate and the message detector begins listening at the new baud rate. This process continues until the baud rate detection system finds the appropriate baud rate for communicating with the client computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07000020&OS=07000020&RS=07000020
owner: Microsoft Corporation
number: 07000020
owner_city: Redmond
owner_country: US
publication_date: 20031117
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation of U.S. application Ser. No. 09\/507,480, filed Feb. 17, 2000 now U.S. Pat. No. 6,675,215 and entitled \u201cAutomatic Baud Rate Detection of Null Modem Unimodem Client Connection\u201d, incorporated by reference herein for all that it discloses and teaches.","This invention relates to computer operating systems, and particularly, to computer methods for detecting baud rates for communicating with client devices over a serial null modem connection that uses a Unimodem null serial protocol.","Handheld computing devices have grown rapidly in popularity in recent years. These devices enable users to port many of the tools and features of their desktop computers on excursions away from home or the office. While these devices offer tremendous advantages for portability, most mobile users still rely on desktop computers when working at home or the office.","As a result of operating multiple computers, users often enter different information into different computers depending upon their situation and location. For instance, a user may enter tasks or other data into a work computer, appointments and contact information into a portable computer while on the road, and calendar events into a home computer when at home. Yet, when the user wants to see their schedule, the user wants to view the most up-to-date schedule, regardless of where the information was entered or where the user accesses it.","To avoid making the user enter the same data multiple times into different computers, most handheld computers are configured to swap information with desktop computers. Programs executing on one or both computers synchronize the exchange of schedules, appointments, and other data contents so that any unique information currently residing on one of the computers is shared with the other to bring both computers up to-date.","Typically, handheld computers connect to a host desktop computer via a serial connection. One common serial connection is known as a \u201cnull modem connection\u201d, which uses a Unimodem null serial protocol to exchange data. According to this protocol, the handheld computer initiates communication by sending a message called \u201cCLIENT\u201d. The host computer replies with a message \u201cS\u201d, \u201cE\u201d, \u201cR\u201d, \u201cV\u201d, \u201cE\u201d, \u201cR\u201d, \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d. If both sides understand the transmission, a synchronization session is begun to synchronize the contents of the two computers.","One problem surrounding this serial protocol is that the message exchange is baud rate dependent. That is, both the handheld computer and the host computer must be operating at the same baud rate for each to understand the other's message. However, there are many different baud rates at which the two computers may communicate. For example, handheld computers that run the Windows CE operating system from Microsoft Corporation can support four different baud rates: 19.2K, 38K, 56K, and 115K. If the handheld computer is operating at one baud rate (e.g., 19.2K) and the host computer is operating at another baud rate (e.g., 56K), the two computers will not be able to communicate with one another. Unfortunately, connection failures due to serial baud rate mismatches tend to be common.","When a baud rate mismatch occurs, the user typically tries to adjust the baud rate of one of the computers. It tends to be harder to change the baud rate on the host computer, so the user generally ends up manually reconfiguring the handheld computer to a different baud rate.","Another problem is that an increasing number of users own more than one handheld computer. In some cases, the handheld computers may be set to different baud rates, whereas the host computer can be set to only one of these baud rates at a given time. As a result, the user is forced to adjust baud rates more often to accommodate the multiple portable devices.","Thus, there is a need for an improved system and method for connecting handheld computers to host computers over a null modem unimodem client connection.","This invention concerns a baud rate detection system and method for automatically detecting the baud rate at which a client computing device is communicating with a host computer over a serial connection.","In one implementation, the host computer is coupled to the client computing device via a serial connection, which employs a Unimodem null serial protocol to exchange data. The baud rate detection system includes a baud rate selector to select among multiple baud rates that the client computing device might use to transmit a predefined message (e.g., a text string \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d). The system also includes a message detector to listen at the currently selected baud rate for the predefined message.","During operation, after the client connects to the host computer, the baud rate selector chooses a first baud rate from among the multiple possible baud rates. The message detector listens at this baud rate for the message. If the message detector receives the message, the current baud rate is the correct rate and is used for continuing communications with the client computing device. On the other hand, if the message detector fails to detect the message after a predetermined time period or detects characters not included in the predefined message, the baud rate selector chooses a new baud rate and the message detector begins listening at the new baud rate. This process continues until the baud rate detection system finds the appropriate baud rate for communicating with the client computing device.","The automatic baud rate detection is advantageous because it effectively eliminates connection failures caused by baud rate mismatches. This obviates the need for a user to manually reconfigure either the host or client computing device when baud rate mismatches occur.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["20","22","24","26","22","24","26","22","24"]},"The host computer  has a memory , a processor , a display , one or more input devices  (e.g., keyboard, mouse, USB connections, etc.), and multiple communication (COMM) ports . The memory  generally includes both volatile memory (e.g., RAM) and non-volatile memory (e.g., Flash, ROM, hard disk, etc.).","An operating system  resides in memory  and executes on the processor . The host computer  preferably runs a Windows-brand operating system from Microsoft Corporation, such as Win32-based products (e.g., Windows 95, Windows 98, etc.), although other operating systems may be used. One or more application programs  are loaded into memory  and run on the operating system . Examples of applications  include email programs, scheduling programs, word processing programs, Internet browser programs, and so on. The operating system  has a set of drivers  to manage COMM ports , as well as peripheral devices connected through the COMM ports and\/or various hardware components.","The operating system  has a synchronization module  to facilitate serial communication between the host computer  and the client computing device  and to synchronize the contents on each machine. The applications  call the synchronization module  via an API (application programming interface). For instance, a scheduling program on the host computer  calls the synchronization module  to facilitate the exchange of appointments and tasks between the two computers to bring both computers up to date. As an exemplary implementation, the synchronization module  is implemented as part of the Windows CE Services module in the Windows CE operating system.","The synchronization module  is configured to facilitate serial communication using the Unimodem null serial protocol. According to this protocol, the client computing device  initiates a communication session by sending over a message consisting of the text string \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d, and the host computer  replies with a message \u201c\u201cS\u201d, \u201cE\u201d, \u201cR\u201d, \u201cV\u201d, \u201cE\u201d, \u201cR\u201d, \u201cC\u201d, \u201cL\u201d, \u201c\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d\u201d. As part of the configuration, the synchronization module  implements a baud rate detection system  that automatically detects a baud rate at which the client computing device  is transmitting data. The baud rate detection system  automatically cycles through a set of possible baud rates and at each rate, listens to detect the message text string \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d from the client computing device .","The baud rate detection system  includes a rate selector , a message detector , and a rate cache . The rate selector  selects among multiple baud rates at which the client computing device may transmit the message over the serial connection. The baud rates may be stored, for example, in a table .","Once a baud rate is selected, the message detector  listens to the serial channel at the selected baud rate. If no message is received within a predetermined time period, or only error characters are received (i.e., characters not in the message \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d), the rate selector  selects a next baud rate from the table  and the message detector  listens to the serial channel at this next baud rate. Eventually, the rate selector  picks a baud rate that enables the message detector  to successfully receive the text string \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d. Once this occurs, the rate selector  sets the baud rate at the current rate for future communication with the client. The rate selector also caches the baud rate in cache  for use in subsequent client connects under the assumption that it is likely that the host computer will communicate again with the same client computing device at the same baud rate. This process is described below in more detail with reference to .","With continuing reference to , the client computing device  is illustrated as having a processor , a display , one or more input devices  (e.g., keypad, touchpad, microphone, etc.), a serial port , and a memory . The memory  represents both volatile and non-volatile memory, and is used to store programs  and an operating system . As an exemplary implementation, the operating system is the Windows CE operating system from Microsoft Corporation. The Windows CE operating system supports four different baud rates: 19.2K, 38K, 56K, and 115K.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["24","60","22"]},"At step , the baud rate detection system  waits for the client computing device to connect. This connection may be a physical connection, in which the client computing device is attached to a serial cable or placed in a cradle. The connection may alternatively be non-physical, such as an IR (infrared) connection or an RF (radio frequency) connection.","Once a connection is made, the rate selector  determines whether there is a baud rate currently cached in rate cache  (step ). If there is (i.e., the \u201cyes\u201d branch from step ), the rate selector loads the cached baud rate as the current baud rate (step ). If not (i.e., the \u201cno\u201d branch from step ), the rate selector  sets the current baud rate to a default rate identified in the baud rate table  (step ).","At step , the baud rate detection system  checks if the client computing device  is still connected. If not, it returns to the wait state at step . Assuming that client is still connected (i.e., the \u201cyes\u201d branch from step ), the message detector  begins listening at the current baud rate for the \u201cC-L-I-E-N-T\u201d text string to be transmitted from the client computing device (step ).","At this point, there are three possibilities: (1) the host receives the correct message; (2) the host receives error characters that are not in the text string \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d; or (3) the host receives no characters within a prescribed timeout period. Decision steps , , and  address these three possibilities. At step , the message detector  determines whether it receives the \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d text string. If it does (i.e., the \u201cyes\u201d branch), the host computer  is using the same baud rate as the client computing device  and hence no further adjustment to the baud rate is needed. The rate selector  caches the current baud rate into the rate cache  for future use during the next connection and the process is completed. At this point, the host computer  responds to the client computing device with a response message \u201c\u201cS\u201d, \u201cE\u201d, \u201cR\u201d, \u201cV\u201d, \u201cE\u201d, \u201cR\u201d, \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d\u201d, which is transmitted at the current baud rate.","Suppose, however, that the message detector  begins detecting error characters instead of the text string \u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d (i.e., the \u201cno\u201d branch from step  and the \u201cyes\u201d branch from step ). Such error characters may occur through aliasing or other artifacts as a result of transmitting at one baud rate and detecting at a different baud rate. In this case, the message detector  knows immediately that it is using the wrong baud rate and rate selector  can select the next baud rate in the baud rate table  without waiting for the timeout period to elapse. The process then continues at step .","Next, suppose that the message detector  detects neither the text string (\u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d) nor error characters (i.e., the \u201cno\u201d branch from step  and the \u201cno\u201d branch from step ). In this case, the host computer may or may not be operating at a compatible baud rate. One possible explanation is that the client computing device has not yet sent over the message. Another possible explanation is that the host is indeed operating at an incompatible baud rate. To rule out the former explanation, the message detector  listens for a predetermined timeout period, such as 20 seconds. If the message detector  fails to detect the text string or error characters within this timeout period (i.e., the \u201cyes\u201d branch from step ), the rate selector  selects the next baud rate in the baud rate table  and the process continues at step .","To provide an example of this process, suppose that the client computing device  is set to a baud rate of 19.2K. In addition, suppose that the baud rate table  lists four baud rates in the following order: (1) 56K, (2) 19.2K, (3) 115K, and (4) 38K. The rate selector initially selects the default rate of 56K. The message detector  listens at 56K, but fails to detect the text string (\u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d) being transmitted at 19.2K. Accordingly, either upon receiving error characters or upon expiration of the timeout period, the rate selector  automatically selects the next baud rate of 19.2K. Since this is now the baud rate used by the client computing device , the message detector  will detect the text string (\u201cC\u201d, \u201cL\u201d, \u201cI\u201d, \u201cE\u201d, \u201cN\u201d, \u201cT\u201d). The rate selector  caches the 19.2K rate in cache  and the process is completed.","The system and process described above is advantageous because it enables automatic detection of the client baud rate. As a result, connection failures caused by baud rate mismatches are effectively eliminated. This obviates the need for a user to manually reconfigure either the host or client computing device when baud rate mismatches occur.","Although the description above uses language that is specific to structural features and\/or methodological acts, it is to be understood that the invention defined in the appended claims is not limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
