---
title: Universal ordering for manufacturing custom products
abstract: A computer-implemented method for multi-vendor printing including maintaining a data store that includes information about service level agreements with partner systems, wherein a partner system enables customers to order a plurality of customized print products, and wherein a service level agreement designates maximum delays for manufacturing customer print orders, and characteristics of print vendors, receiving a customer print order from one of the partner systems, the print order specifying a customized print product, determining a latest ship date for the customized print product, selecting one of the print vendors to manufacture the customized print product, and receiving updates from the selected print vendor and relaying the received updates to the partner system that issued the customer print order.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09111310&OS=09111310&RS=09111310
owner: REICHLING PRESS, INC.
number: 09111310
owner_city: Tukwila
owner_country: US
publication_date: 20141113
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY CLAIM","BACKGROUND OF THE INVENTION","SUMMARY OF THE DESCRIPTION","DETAILED DESCRIPTION"],"p":["This application is a continuation of U.S. patent application Ser. No. 14\/132,545, entitled UNIVERSAL ORDERING FOR MANUFACTURING CUSTOMIZED PRINT PRODUCTS, filed on Dec. 18, 2013 by inventors Samuel J. Comstock et al., which is a continuation-in-part of U.S. patent application Ser. No. 13\/648,090, entitled MULTIPRODUCT PRINTING WORKFLOW SYSTEM WITH DYNAMIC SCHEDULING, filed on Oct. 9, 2012 by inventors Mark Gustafson and Sam Comstock, which is a continuation of U.S. patent application Ser. No. 12\/011,169, entitled MULTIPRODUCT PRINTING WORKFLOW SYSTEM WITH DYNAMIC SCHEDULING, filed on Jan. 23, 2008 by inventors Mark Gustafson and Sam Comstock.","Popular web sites now enable customers to create and order a variety of personalized print products, including inter alia calendars, greetings cards, notepads, and photo books. Customers insert their own text and photos within templates provided on the web sites and in retail stores, and fulfillers print the resulting photo products. Such web sites include www.snapfish.com operated by Hewlett-Packard Company of Palo Alto, Calif., www.shutterfly.com operated by Shutterfly, Inc. of Redwood City, Calif. and www.blurb.com operated by Blurb, Inc. of San Francisco, Calif. Such retailers include Walmart and Walgreens.","There are an increasingly large number of types of personalized print products, including books, calendars, note pads, and T-shirts. As such, multiproduct printing systems that receives orders for a variety of personal printing products must be able to print and manage a large number of types of print jobs. One strategy to enable a multiproduct printing system to print all the types of print products required is to direct orders to multiple printing facilities. For example, one printing facility may specialize in printing books and another may specialize in printing on T-shirts.","Competitive pressures also require a multiproduct printing system to be able to print and ship products very quickly. For example, it is typical for a printing system to print and ship an order in a day or two. This may be challenging when a recipient of the product is at a considerable distance, for example in another country, where express shipping may be prohibitively expensive or not available. One strategy for accommodating delivery to recipients in different geographic regions is to direct the print job to a facility closer to the customer or to a hub that can deliver quickly.","There is thus a need for a method and system to efficiently manage and route orders of personalized print products among multiple printing facilities, in order to guarantee fast delivery.","The present invention concerns a system and method for receiving orders for customized print products from a number of partners and managing the manufacturing or fulfillment of the orders by a plurality of print vendors. The invention receives orders for custom print products and routes the orders to print vendors based on criteria and provides updates or tracking messages to the partners at various stages of the manufacturing process.","In accordance with an embodiment of the present invention, customer orders are transmitted to a printing system via partners, such as web sites and retail stores. The printing system has an agreement with each partner, referred to as a service level agreement (SLA), which stipulates the terms and conditions of the service provided by the printing system to the partner. Terms of the SLA include legal terms such as indemnifications, and pricing terms. In addition, the SLA includes a maximum time delay from the time a customer order is entered into the printing system until the order is finished and ready for shipping.","In accordance with an embodiment of the present invention, the end-to-end printing workflow is represented as a plurality of processing states through which a print order advances as it moves through the printing system.","It will thus be appreciated by those skilled in the art that the present invention provides for comprehensive and optimized management and monitoring of an end-to-end printing workflow for complex business environments with large numbers of diverse small run print orders. The present invention also provides for control of work priorities at various stages of the workflow in order to meet contractual deadlines for finishing orders.","There is thus provided in accordance with an embodiment of the present invention a computer-implemented method for mufti-vendor printing including maintaining, by a server computer, a data store including (1) information about service level agreements with a plurality of partner systems, wherein a partner system enables customers to order a plurality of customized print products, and wherein a service level agreement designates maximum delays for manufacturing customer print orders, and (2) characteristics of a plurality of print vendors, each print vendor capable of printing at least one of the customized print products, receiving, by the server computer, a customer print order from one of the plurality of partner systems, the print order specifying a customized print product, determining, by the server computer, a latest ship date for the customized print product that specifies the latest date to ship the customized print product to the customer to meet the maximum delay requirements of the applicable service level agreement, selecting, by the server computer, one of the print vendors to manufacture the customized print product, receiving, by the server computer, updates from the selected print vendor each update indicating a processing state of the customized print product order, and relaying, by the server computer, the received updates to the partner system that issued the customer print order.","The present invention concerns a printing system that accepts orders from business partners and manages a print workflow to enable the printing system to meet service level agreements (SLAs). The printing system is operated by a printing system provider. Print orders flow into the system from one or more partners, where a partner is a company or organization that operates a system, referred to as a \u201cpartner system,\u201d that receives print orders from retail customers. The partner system can be inter alia a web-based system or a retail store. For each partner there is a service level agreement (\u201cSLA\u201d) between the printing system provider and the partner that defines inter alia the products that the printing system can accept and print, and the maximum delay to be incurred in printing each product. The present invention relates to the ability of the printing system to meet the SLA-defined maximum delay requirements.","For purposes of clarity, a print order, or simply an \u201corder,\u201d includes one or more copies of one or more print products. An order is equivalent to a shopping cart in an ecommerce system. The order can have multiple line items where each line item designates a unique product to be printed. In addition, an order may include one ore more embellishments. An embellishment is an item, such as a coupon, that may not be explicitly ordered by a retail customer but which is added to one or more of the packages shipped to the recipient of the order. Embellishments may include inter alia a coupon, a free sample, or promotional literature.","A maximum allowed delay incurred in printing a product, referred to as \u201cMax_Delay,\u201d is defined as an upper limit on the amount of time spent from the moment that a print order for a printed product is accepted into the print system until the moment the printed product is picked up by a shipping service. The Max_Delay includes the time to perform various prepress steps, then to raster image process (\u201cRIP\u201d) and print the document, and then to finish the document. The finishing process includes binding, packaging and printing a packing slip and a mailing label.","A line item, also known as a stock keeping unit (SKU) or a part, refers to a single product. Example line items include photo books, notepads, and greeting cards. A line item has attributes including inter alia a quantity and a number of pages. A line item with quantity greater than one, i.e., multiple copies of the same product, can be shipped to multiple recipients. For example, if four copies of a calendar are printed, three may be shipped to one recipient and one to a different recipient. A line item is composed of one or more \u201cmaterial parts.\u201d For example, a photo book consists of a cover, a spine and book pages, referred to as \u201cbook block\u201d. Each of the components (e.g. cover, spine, book block) of a line item or product is referred to as a \u201cmaterial part.\u201d Some material parts are printed items, e.g. greetings cards and calendars; other material parts are non-printed items such as a velum separator page or a red cover.","Reference is now made to  which is a depiction of a greeting card with four surfaces, in accordance with an embodiment of the subject invention. Generally, each product to be printed consists of one or more \u201csurfaces\u201d where a surface is defined as a printed side of a page. For example, a page in a photo book has two surfaces, front and back, while a greeting card has four surfaces. Thus the greeting card illustrated in  has four surfaces; namely, front, inside top, inside bottom, and back.","In one embodiment, one digital image, referred to as a \u201ccomposite image\u201d or \u201ccomposite,\u201d is stored by the partner for each surface. The composite image exactly represents the surface to be printed. The use of composite images between the partner and the printing system allows the printing system to provide WYSIWG (what you see is what you get) printing. In other words, the document that the customer sees on their display appears identical to the printed product that they receive in the mail. In order to achieve WYSIWG printing, the composite is typically an image that covers the entire surface and that is reproduced as precisely as possible by the subject invention.","Reference is now made to , a simplified block diagram of a printing system , in accordance with an embodiment of the subject invention. Retail customers  place orders with partner system . An order may be placed inter alia using a web interface or may be made in a retail store. An order may include multiple products, or \u201cline items,\u201d and multiple copies of each line item. Line items are printed items such as calendars, notepads, and books that typically include content supplied by a retail customer. For example, a calendar may include one photo for each month of the year provided by the retail customer; and a notepad may include the name of the retail customer. An example of a web user interface for creating a calendar is illustrated in . An order may also include \u201cvariable data\u201d, i.e. data that varies for each copy of a product. For example, variable data can include addressees in the case of custom printed cards with printed addresses. Another example is recipient information that is encoded in a barcode that is printed on each copy of a printed product such as a coupon.","An order is typically stored in a computer file. An order can be represented inter alia as a text file, as a coded binary file, as an HTML formatted file, or as an XML formatted file. In one embodiment, an order is represented by a single XML file with a schema defined by the print system. This schema is referred to as the \u201cnative XML format\u201d of the print service. In one embodiment, a single XML file can contain multiple orders.","In one embodiment, partner system  represents orders using a proprietary file format. In this case, printing system  transforms the proprietary format into its native XML format.","Reference is now made to , an exemplary web user interface used by a retail customer to create a calendar, in accordance with an embodiment of the subject invention.  is displayed after a customer selects calendar as the product type he\/she wishes to create. The customer selects the month he\/she wishes to create . The customer can change the default page layout . The customer can add text and\/or photos to individual dates . The customer selects photos from a gallery of photos that is displayed at the bottom of the screen . The exemplary user interface depicted in  shows two surfaces that would be visible for the month of August 2007: on the left of the screen is a single, large, user-supplied photo; and the right side of the screen shows a graphical layout for the month of August, which includes two small user-supplied photos and several textual comments.","Reference is now made to , a schematic description of a simplified order of a photo book, in accordance with an embodiment of the subject invention. An order  includes CustomerAddress information , BillTo information , ShipTo information , one or more CartItems  and optionally or more Embellishments . It is noted that a CartItem is also referred to as a line item. Order  includes a single 8\u00d710 inch photo book, referred to as PhotoBook8by10 . Photo book  includes a PhotoBookCover , a PhotoBookBookBlock , and a NonPrintableMaterial . Typically, NonPrintableMaterial  is a velum separator page between the cover and the first page of book block. PhotoBookCover  includes a single PhotoBookPage , which may contain one or more photo  elements. PhotoBookBookBlock  includes one or more PhotoBookPage  elements. Each PhotoBookPage  includes one or more photo  elements.","In one embodiment, the format of each printed element, such as cover page and book block pages, is defined by a template that is commonly agreed to between the partner and the printing system provider. Thus, in  the photo book cover template is specified by a TemplateName attribute within PhotoBookPage . Similarly, the template of each book block page is specified by the TemplateName attribute within PhotoBookPage . Use of said commonly agreed to templates ensures that each line item can be processed by the printing system. Also, when using said commonly agreed to templates only information not defined by the template need be included in the order. For example, a calendar page template might define the position of textual, graphical and user-supplied photos for a cover and for each month of the year. Since this formatting information is defined in the template and stored by the printing system it doesn't have to be included in the order.","In one embodiment, PhotoBookPage  contains multiple photos, indicated by Photo #1 , and Photo #N . The number of photos and size and location of each photo are specified by the template referred to by the TemplateName attribute within PhotoBookPage . Each photo can be inter alia supplied by the customer, selected by the customer from a list of photos presented by the partner, or supplied by the partner with no input from the customer.","In one embodiment, each surface is provided by the partner as a composite image that includes all required information to print one surface. In this embodiment, each PhotoBookPage  element includes a single photo  element whose filename attribute references a single composite image.","The XML code for a simplified, exemplary, order for a photo book that follows the schema depicted in  is provided in LISTING 1 at the end of this specification. The order includes a single line item, an 8by10 photo book. The 8by10 photo book includes a cover, 2 book block pages and a velum separator page. Due to the use of templates, formatting information is not required in the XML order.","Referring back to , in one embodiment, partner system  receives an order from retail customer  and transforms it into the native XML of printing system  before providing it via the Internet  to printing system . In another embodiment, partner system  provides the order to printing system  in the proprietary format of partner system , and printing system  transcodes the order into its native XML.","A prepress server  receives orders from partner system . There are two primary scenarios for receiving orders, \u201cpush\u201d and \u201cpull.\u201d In the \u201cpush\u201d case, former partner system  actively sends orders to prepress server . In the \u201cpull\u201d case, partner system  stores orders, e.g. on a file transfer protocol (ftp) site, and prepress server  periodically retrieves the orders using ftp.","In both cases the order may be in the preferred format of the printing system, or may be in a proprietary format that requires translation by the printing system. Prepress server  \u201cserializes\u201d each order. When an order is serialized, each line item in the order is decomposed into one or more material parts. Each printed material part is assigned a unique serial number. For example, in a photo book the cover and the book block would be assigned two different serial numbers. Each serialized item can be individually managed and tracked. Further, line items with quantity greater than one are individually serialized. Non-printed material parts are not assigned serial numbers since they are not customized; only a part number is necessary to uniquely denote a non-printed material part. Each serialized material part is processed in a series of steps, first by prepress server , then by a RIP and print system  and finally by a finishing system .","It is pointed out that in some cases a processing step is performed on an order, in some cases on a single material part and in some cases on multiple material parts. For purposes of clarity, the term \u201cwork item\u201d is used to refer to a data structure that defines the atomic or most granular level of processing performed at a particular processing step in the printing workflow, regardless of whether it is performed on an order or on one or more material parts.","Each work item has a state associated therewith. TABLE 1 lists one embodiment of the states that a work item can be in. Specifically, Table 1 represents an embodiment of a workflow that is specific to bound books. Alternate workflows can be incorporated to accommodate production of different customized goods. For example, cards and calendars follow a slightly different set of steps than bound books while workflows for non-paper substrates like t-shirts and mugs have even more distinguished workflows. Upon completion of certain processing steps, the state associated with the work item is changed to a new state. This is referred to as updating the work item's state. A work item's state determines what processing step will next be performed on it.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Processing States"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Where",{}]},{"entry":["ID ","State Name ","Occurs","Short Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1 ","Hold","Prepress","The work item is on hold for a non system "]},{"entry":[{},{},{},"failure, such as missing images or corrupt "]},{"entry":[{},{},{},"images, also duplicate orders from the "]},{"entry":[{},{},{},"partners will be parked in hold for manual "]},{"entry":[{},{},{},"release."]},{"entry":["2 ","Error","Prepress","The work item has failed to process "]},{"entry":[{},{},{},"because of a system failure - the printing "]},{"entry":[{},{},{},"system will automatically re-process the "]},{"entry":[{},{},{},"work item"]},{"entry":["3 ","Pending-","Prepress","Order has been received from a partner "]},{"entry":[{},"Order-Import",{},"and is available for processing and "]},{"entry":[{},{},{},"import into data storage."]},{"entry":["4","Pre-Order","Prepress","An error occurred while processing an "]},{"entry":[{},"Import-Error",{},"order. The order cannot be imported into "]},{"entry":[{},{},{},"data storage."]},{"entry":["5","Pre-Batch","Prepress","The order has been successfully accepted "]},{"entry":[{},{},{},"into the system"]},{"entry":["6 ","Reprint","Prepress","A temporary place for work items that "]},{"entry":[{},{},{},"were mishandled and need reprinting"]},{"entry":["7","Downloaded","Prepress","All composite images within the order "]},{"entry":[{},{},{},"have been downloaded or moved to data "]},{"entry":[{},{},{},"storage"]},{"entry":["8","Imaged","Prepress","All composite images within the order "]},{"entry":[{},{},{},"have been verified."]},{"entry":["9","Processed","Prepress","The order has been serialized into work "]},{"entry":[{},{},{},"items or serial items and is ready for "]},{"entry":[{},{},{},"lotting."]},{"entry":["10","Lotted","Prepress","The serial item has been grouped into a "]},{"entry":[{},{},{},"lot. The lot is ready for raster image "]},{"entry":[{},{},{},"processing."]},{"entry":["11","Imported","RIP &","The lot has been accepted by the rater "]},{"entry":[{},{},"Print","image processor (RIP)."]},{"entry":["12","Ready-to-","RIP &","The lot has been rasterized and is ready "]},{"entry":[{},"Print","Print","for press"]},{"entry":["13","Moved-to-","RIP &","The lot has been moved to a press for "]},{"entry":[{},"Press","Print","printing"]},{"entry":["14","Imported-to-","RIP &","The printing press has accepted the lot "]},{"entry":[{},"Press","Print","for printing"]},{"entry":["15","Printed","RIP &","The lot has been printed"]},{"entry":[{},{},"Print",{}]},{"entry":["16","Bindery","Finishing ","The serial item is in the bindery"]},{"entry":["17","Bound","Finishing","The serial item is bound and ready for "]},{"entry":[{},{},{},"sorting and fulfillment"]},{"entry":["18","Ready-to- ","Finishing ","The serial item is sorted and ready to be "]},{"entry":[{},"Ship",{},"packaged"]},{"entry":["19","Packaged","Finishing","The serial item has been placed into a "]},{"entry":[{},{},{},"package for shipping"]},{"entry":["20","Shipped","Finishing ","The serial item has been shipped"]},{"entry":["21","Voided","Finishing ","The serial item has been voided"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"A management server  performs tasks that are common to multiple processing steps including work schedule management performed by a work scheduler , communication of status to partner , performed by a status updater , and data storage and management performed by a data storage . It will be appreciated by those skilled in the art that management server  may be a separate computer system, or it may be configured as hardware or software running inside of prepress server , print server  (described with reference to ), or finishing server  (described with reference to ). It will be further appreciated that management server  may be several computer systems, each configured to run one or more processes. For example, one management server  may run work scheduler  and status updater , while another management server runs data storage .","Data storage  includes a relational database management system (RDBMS) and physical storage. In a preferred embodiment, physical storage is networked and stores elements such as image assets, imposed rendering of orders and lots, and intermediate results from RIP devices. Network attached storage (NAS), which is data storage that can be connected directly to a computer network to provide centralized data access and storage for other network devices, may be used by RDBMS and non-RDBMS and may also be used to store the abovementioned elements. For example, NAS would enable prepress server , a print server , or a finishing server  to directly store and share data.","Work scheduler  runs periodically as a background process on management server . For each state listed in TABLE 1, work scheduler  maintains a prioritized queue of all work items awaiting processing for each state. The prioritized queue for each state is stored in data storage . When a work item changes state, work scheduler  moves the work item to the appropriate prioritized queue. For example, a work item that is being printed is in the prioritized queue for the \u201cImported-to-Press\u201d state (with reference to TABLE 1). When the work item prints successfully, print server  changes the state of said work item to \u201cPrinted.\u201d When work scheduler  determines that said work item has changed state it moves the work item into the prioritized queue for the \u201cPrinted\u201d state. It then recalculates the priorities for all work items in the prioritized queue for the \u201cPrinted\u201d state.","In one embodiment, processing steps that correspond to the states Pre-batch, Imaged, Processed, operate at the order level. In one embodiment, the prioritized queue for each of these states lists the orders in first-in-first-out sequence.","Orders whose state is \u201cProcessed\u201d state have been serialized into serial items, or material parts, each having a unique serial number. At this point, each work item in the prioritized queue for the \u201cProcessed\u201d state corresponds to a material part. Each work item includes inter alia the attributes listed in TABLE 2 below:",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Work Item Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attribute Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Order_ID","The order that this work item pertains to."]},{"entry":["Material_Part_ID","Material part identifier"]},{"entry":["Tote_ID","Identifier for the physical container that printed "]},{"entry":[{},"material parts are to be placed into"]},{"entry":["Late_Priority","BOOLEAN (TRUE, FALSE). The current "]},{"entry":[{},"estimate of whether the order to which the "]},{"entry":[{},"material part belongs will exceed SLA delay "]},{"entry":[{},"if any further delay is incurred in processing "]},{"entry":[{},"this material part. Described in greater detail "]},{"entry":[{},"relative to FIG. 6."]},{"entry":["Shop_Priority","Date. The current estimate of the date at which"]},{"entry":[{},"the order to which the material part belongs, "]},{"entry":[{},"will complete processing. Described in greater "]},{"entry":[{},"detail relative to FIG. 6."]},{"entry":["Destination","Shipping destination of the part to which this "]},{"entry":[{},"material part belongs."]},{"entry":["Single_Part","BOOLEAN (TRUE, FALSE). Does this part "]},{"entry":[{},"comprise multiple material parts"]},{"entry":["Destination_Part_Quantity","Quantity of parts being shipped to same "]},{"entry":[{},"destination."]},{"entry":["Order_Priority","Date. Priority of the order, computed when the "]},{"entry":[{},"order is first accepted by the system."]},{"entry":["N-up Priority","Check the waste percentage and determine if "]},{"entry":[{},"this print lot is able to be created. If it fails the "]},{"entry":[{},"test the print lot will not be created and all parts "]},{"entry":[{},"will be put back into the pool. (Applies to "]},{"entry":[{},"variable length parts only.)"]},{"entry":["State","State of the work item: completed, pending, "]},{"entry":[{},"error."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"It is to be noted that not all of the work item attributes are necessary or available at each processing step. For example, the Tote_ID attribute isn't assigned until a work item reaches the \u201cLotted\u201d state.","Work scheduler  sorts the queue of work items using the attributes listed in TABLE 2 as sort keys to produce a prioritized queue. The order of the sort keys and the sorting algorithm itself may vary at each processing step.","Periodically, work scheduler  recalculates the late priority and shop priority attributes of each work item. It then sorts the prioritized queue to both maximize efficiency and minimize the risk that the time to process any of the orders dependent on work items in the prioritized queue will exceed the SLA-defined Max_Delay period. The order of work items allows the processing module associated with each state to simply select the first work item in the prioritized queue and begin processing. Methods employed by work scheduler  to prioritize work items are further described with reference to .","Using a network data transfer protocol, prepress server  receives an order and any composite files included in the order from partner system  and then performs a series of processing steps to prepare the orders for printing. The output from prepress server  is one print-ready file and one or more job control files, which are stored in data storage . Prepress server , said print-ready file, and said job control files are described in greater detail relative to  and .","Status updater  runs as a background process on management server . When status updater  detects that a work item has changed status, it updates the status of the corresponding order. In one embodiment, status information for an order is defined as the lowest status of each of the material parts that comprise the order where lowest status is defined by the Table 1 ID value. In one embodiment, status updater  notifies partner system  of status changes in the form of an email acknowledgement message. In one embodiment, when status updater  detects that a n order has changed status, it stores status information in an acknowledgement file on data storage . Then, partner system  can download the acknowledgement file at its convenience. In one embodiment, the acknowledgement file is in XML format. In another embodiment, status information for each order is provided using a SOAP web service. In this embodiment, partner system  requests information for a specific order using a SOAP request message and status updater  provides the current status of the order by sending a SOAP response message. The SOAP protocol is maintained by the World Wide Web Consortium (W3C) and the specification can be found at http:\/\/www.w3.org\/TR\/soap\/.","When a work item reaches a state of \u201cLotted\u201d (TABLE 1) it is assigned to RIP and print system . The output from RIP and print system  is one or more printed material parts that serve as input to finishing system . RIP and print system  is described in greater detail with reference to .","Printed material parts are then processed by a finishing system . Most steps performed by finishing system  are performed by human operators, e.g. lamination of printed substrates, banding or kitting of parts. Finishing system  first binds printed parts into complete printed products. Finishing system  then prints a packing slip, packages the printed products with the packaging slip and affixes a mailing label onto the package. At this point, finishing system  assigns the final state of \u201cShipped\u201d to the work item. When all work items that comprise an order have shipped the order is deemed to be complete. Finishing system  is described in greater detail with reference to .","Reference is now made to , which is a simplified flowchart of an overall method for a printing system, in accordance with an embodiment of the present invention. At Step  printing system  enters into a service level agreement (SLA) with a partner system . Each SLA defines inter alia a maximum service delay, termed \u201cMax_Delay\u201d, for each print product that can be accepted by printing system . At Step  once the SLA between the partner system and printing system is effective, printing system  commences to receive customer print orders from partner system . At Step  printing system  imports an order into its native XML and stores it in data storage .","The work performed by printing system  to process a print order is divided into a plurality of tasks which are referred to as work items. When the processing of a work item completes, a new state is associated with it. At Step  work scheduler  maintains a prioritized queue of work items for each state. Work scheduler  is depicted independently from the other steps in  because is executes on a scheduled basis independent of the other steps. Work scheduler  updates the prioritized queue for each state by calculating the priority of each work item within each prioritized queue. It then orders each prioritized queue using an algorithm that takes into account the updated priorities.","At Step  prepress server  downloads from partner system  one composite image for each image referenced in a print order. At Step  prepress server  serializes an order into a plurality of work items, also referred to as serial items, where each work item has a unique serial number. At Step  one or more work items are lotted to create a print job. At Step  prepress server  creates one or more print-ready files and one or more job control files that will control the printing process and print the print job. At Step  RIP and print system  raster image processes a print job and the resulting raster image file(s) is stored in data storage . At Step  RIP and print system  prints a print job. RIP and print system  is further described with reference to .","At Step , finishing system  assigns each work items, which references a single material part, to a tote and a shop floor operator places the material part inside the designated tote. When a tote is full shop floor operator moves the tote near to a designated material bin unit. At Step  shop floor operator material sorts the material parts from a tote into designated material bins. Material sorting is further described with reference to . At Step  the material parts are bound. At Step  finishing system  assigns the bound material parts to totes and a shop floor operator moves the totes near to a shipping bin unit. At Step  the bound material parts, also referred to as serial items, are ship sorted into designated shipping bins. At Step  the bound serial items are withdrawn from the shipping bins, packaged and moved to the shipping area. Finishing system  is further described with reference to .","Reference is now made to , which is a flow diagram describing the processing steps performed by work scheduler  () to calculate the priorities of work items, in accordance with an embodiment of the subject invention. Work scheduler  executes periodically on management server . Work scheduler  maintains and periodically updates the order of a prioritized queue of work items for each state. Once an order reaches the \u201clotted\u201d state, it has been serialized into material parts and the prioritized queue consists of an ordered list of material parts and attributes associated with each material part.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 6"},"At Step  the Shop_Priority is calculated for all work items in the prioritized queue. The calculation of Shop_Priority is described relative to . At Step  the Late_Priority attribute is calculated for all work items in the prioritized queue. The calculation of Late_Priority is described relative to .","At Step  the prioritized queue is sorted on the attribute Late_Priority such that all material parts whose Late_Priority attribute is set to TRUE are moved to the top of the queue. Material parts whose Late_Priority attribute is set to TRUE must be processed immediately in order to avoid having their corresponding print product exceed the contractual delay requirement defined in a SLA for the print product, referred to as Max_Delay. Note that if the time spent within printing system  exceeds Max_Delay for any product in an order then the entire order is deemed to exceed the Max_Delay requirement.","At Step  the prioritized queue is sorted on the Material_Part_ID. At Step  the prioritized queue is sorted on the Tote_ID attribute. Totes are described relative to . At Step  the prioritized queue is sorted on the Destination attribute. Destination is described relative to . At Step  the prioritized queue is sorted on the Order_Priority attribute. Order_Priority is described relative to .","Reference is now made to , which is a flow diagram describing the processing steps performed by a work scheduler to compute the SLA-based priority attribute for a work item, in accordance with an embodiment of the subject invention.  describes one algorithm for calculating Shop_Priority, which is a date\/time that represents the best estimate of the time when a work item will complete all processing and be picked up by a shipper. This algorithm uses the Order_Priority attribute. Order_Priority defines the latest time that a product can be completed and not exceed the Max_Delay requirement. Order_Priority is defined as:\n\nOrder_Priority=Order_Accepted_Time+Max_Delay,\n\nwhere Order_Accepted_Time is the time when the order was accepted into the system, i.e. when the order status was changed to \u201cimaged\u201d by prepress server . For purposes of clarity, Order_Priority is a date that represents the priority or urgency of a work item relative to other work items in a prioritized queue. The earlier the date, the faster the corresponding work item needs to be processed.\n","Referring to , at Step , using the Material_Part_ID and the current status of the work item as indices, work scheduler  looks up the Expected_Delay from a list of expected delays named Expected_Delay_List . In one embodiment, Expected_Delay_List  has a format as illustrated below in TABLE 3.",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Expected_Delay_List (in minutes)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Line Item"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"001-123","002-432","003-456","004-789"]},{"entry":["Current State","(Photo Book)","(Sticker)","(Notecard)","(Calendar)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Imaged","420","340","310","410"]},{"entry":["Processed","402","322","192","392"]},{"entry":["Lotted","370","307","277","360"]},{"entry":["Imported","328","301","271","315"]},{"entry":["Ready_To_Print","315","285","255","301"]},{"entry":["Moved_To_Press","245","265","235","235"]},{"entry":["Press_Imported","210","213","215","201"]},{"entry":["Printed","130","124","132","122"]},{"entry":["Bindery","110","112","104","99"]},{"entry":["Bound","102","100","82","87"]},{"entry":["Ready_To_Ship","73","65","53","62"]},{"entry":["Packaged","42","34","40","34"]},{"entry":["Shipped","\u2014","\u2014","\u2014","\u2014"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"In one embodiment, an Expected_Delay value from the Expected_Delay_List is the empirically determined average number of minutes for a work item to complete processing, i.e. move from a given state to the final state (State=Shipped). For example, using TABLE 3, a photo book whose state is \u201cLotted\u201d will require 370 minutes on average to reach the \u201cShipped\u201d state, i.e. to complete processing.","At Step , work scheduler  consults Modifier_TABLE  to determine if there are any \u201cmodifiers\u201d that must be taken into account when determining job priority. Modifiers are values that are subtracted or added to the priority in order to respectively increase or decrease priority. Modifiers can be inter alia per customer, per partner, per part, or per order. For example, for a two week period all orders coming from a specific partner can be increased in priority by 1 hour. As another example, if an order had been delayed for a particular customer, then future orders for that customer can be accorded higher priority for a period of time using modifiers.","At Step  Priority_Now is calculated by adding together the current time, the Expected_Delay determined at Step  and any modifiers determined at Step . In one embodiment, times are represented as the number of minutes since a reference time, which is taken to be Jan. 1, 1900. In another embodiment, times are represented as days and fractions of days since a reference time.","At Step , the work item's Shop_Priority attribute is set to the smaller of Order_Priority and Priority_Now.","Reference is now made to , which is a flow diagram describing the processing steps performed by a work scheduler to calculate the Late_Priority attribute for a work item, in accordance with an embodiment of the subject invention. At Step  a determination is made as to whether Shop_Priority is greater than or equal to Order_Priority. If this is the case, then the order corresponding to the work item is in danger of being late; accordingly, at Step  the Late_Priority attribute is set to TRUE. If Shop_Priority is less than Order_Priority then there is some slack time and at Step  Late_Priority is set to FALSE.","As an example of the way that priorities come into play, the book block and cover of a photo book each comprise different work items, are assigned different serial numbers, and are processed separately by the prepress system and the RIP and print system. Typically, book block and covers will be printed in different print runs on different printers. While both the book block and cover of a photo book will each have the same Order_Priority, work scheduler  will calculate different Shop_Priorities for each work item at each state to reflect the different delays that each component will experience. This step-by-step approach to scheduling guarantees that the entire order is printed on time, per the Max_Delay requirement.","Reference is now made to , which is a simplified block diagram of a prepress system, in accordance with an embodiment of the subject invention. Relative to , this block diagram introduces additional detail concerning prepress server .","An order puller  downloads orders from partner system  (), using an appropriate file transfer method. File transfer methods performed by order puller  include File Transfer Protocol (FTP), Hypertext Transfer Protocol (HTTP), and Simple Object Access Protocol (SOAP).","An order importer  transforms the order into the native XML format of the printing system and stores it in data storage  (). The XML attributes of the order are stored in a relational database within data storage  according to a pre-defined schema; this provides efficient access to the order data during subsequent processing steps. Order importer  also \u201cserializes\u201d the order into material parts that are separately processed. For example, the serialization of a line item consisting of five copies of a single calendar will result in the creation of five work items or serial items, one for each calendar, each with a unique serial number. Serialization enables the printing system to efficiently manage reprints. Thus if one copy of a calendar is damaged, then only that copy need be reprinted.","In one embodiment, partner system  provides orders in a proprietary file format; in this case, order importer  transforms the non-standard format into the native XML format of the printing service.","In one embodiment, partner system  provides orders in a XML format that uses a proprietary schema; in this case, order importer  uses XSLT to transform the XML into the native XML format of the printing system. XSLT is a language for transforming XML documents conforming to a first schema into XML documents conforming to a second schema. The XSLT standard is defined and maintained by the worldwide web committee (W3C\u2014see http:\/\/www.w3.org\/TR\/xslt).","An image puller  downloads one composite image for each surface referenced in a line item, and stores the composites in storage system . For example, if the line item consists of a greetings card, then prepress server  downloads four composite image files corresponding to the four surfaces shown in . In one embodiment, a composite image can be in inter alia JPEG, PDF, EPS, BMP or TIFF format. In one embodiment, image puller  retrieves composites using standard file transfer methods including FTP, and HTTP. Although a line item may call for a quantity greater than one to be printed, the composite images associated with the line item are only downloaded once.","A pre-flighter  \u201cvalidates\u201d or tests each composite image. Pre-flighter  analyzes each image to ensure that the image is formatted correctly and contains meaningful information. In the printing industry, such validation is commonly referred to as \u201cpre-flight.\u201d A variety of tests can be performed to ensure that the image data is meaningful. In one embodiment, thumbnails are generated and an operator views the thumbnails to ensure that they are visually meaningful. It is also possible to perform automated tests; for example, correlation tests can identify if the images contain noise or meaningful data. Automated tests may further include computation of a checksum \u201chash\u201d against the digital contents of files to ensure integrity. Additionally, if multiple composite images are included in a single file, pre-flighter  extracts each composite image to a separate file. Additionally, if the composite image is in the PDF file format then the PDF file will be checked to determine if there are mistakes in the PDF file that would cause the composite image to be rejected or printed incorrectly. Examples of mistakes that can be identified include inter alia wrong document size, missing fonts, incorrect image resolution, use of layers, and PDF\/X print compliancy.","An order serializer  takes an order as input and serializes the order into one or more new work items each of which consists of a single material part. Printed material parts are rasterized and printed by RIP and print system . Printed and non-printed material parts are then bound together and packaged by finishing system  to form one or more completed, ready-to-ship, products.","A print-ready maker  creates one print-ready file for each surface and one or more job control files for the print job. A print ready file describes the formatting and content of a document in a manner suitable for printing. The print-ready file can be in any standard or non-standard page document description format including inter alia PostScript, PDF, Microsoft Word, HTML, and rich text format (RTF). In one embodiment, the print ready file uses the portable data format (PDF). PDF is defined and maintained by Adobe Systems, Inc. More information about PDF can be found at http:\/\/www.adobe.com\/products\/acrobat\/adobepdf.html.","Each print-ready file references one or more composite images, which remain in data storage . Reference to a composite image is made using comments that are embedded in the print-ready files. The comments follow the open prepress interface (OPI) specification. OPI is defined and maintained by Adobe Systems, Inc. More information about OPI can be found at partners.adobe.com\/public\/developer\/en\/ps\/5660_OPI20.pdf. The comments specify all information necessary for RIP and print system  to substitute the composite image data into the print-ready file during the printing process.","A job control file specifies how PDF files are to be combined and provides information about crop marks, score marks and barcode. The job control file provides information that is specific to the printing workflow but which is not contained in the print-ready file. For example, a job control file specifies inter alia where to place crop marks, and whether to print a bar code and if so where to place it. In one embodiment, the job control file uses job definition format (JDF) standard. JDF is defined and maintained by CIP4. More information about JDF can be found at http:\/\/www.cip4.org\/.","A lotter  combines print jobs together, a process commonly referred to as \u201clotting.\u201d Lotting offers two main advantages: (1) it improves efficiency by increasing the number of material parts printed per print job and thus decreasing the amount of time spent transitioning from one print job to the next, and (2) it minimizes paper wastage for variable length products such as photo books. The lotting process intelligently selects parts that can be combined together into a lot and produces a job control file that provides the necessary information for combining the parts to the printer. In one embodiment, lotting always combines parts of the same type; for example, notepads are only lotted with notepads, calendars are only lotted with calendars. In one embodiment, parts of different types can be combined; for example, notepads and calendars can be printed together as part of a single print run.","Lotting takes into account two cases: (1) the case of fixed length material parts, and (2) the case of variable length material parts. In the case of fixed length material parts, e.g. calendars and notecards, a preset number of material parts are lotted together. For example, in one embodiment, a lot size of 10 calendars is used where possible. Thus if 10 copies of the same calendar have been ordered they can be lotted together to form one print run. Alternatively, if two orders, one for 8 calendars and one for 2 calendars, are waiting in the prioritized queue then they can be lotted together. In the case of variable length material parts, e.g. photo books, lotting attempts to minimize the percentage of wasted paper in a print run. One method for lotting is described below with reference to . It will be appreciated by those skilled in the art that in order to perform efficient lotting, prepress server  must take into account print run efficiency, variable length material parts such as photo book book block, wastage requirements that are established for each material part, and Max_Delay requirements defined per partner for each line item.","Lotter  takes into account the imposition requirement for the type of material part that is being lotted. Imposition is the process of intelligently arranging surfaces on a sheet of paper. Imposition is desirable because printing presses typically print multiple pages on a single large sheet of paper to make the most efficient use of the paper and to shorten the time required for printing. Imposition ensures that after the sheets of paper are printed, folded and trimmed, the resulting pages will be in the proper order. For example, in one embodiment greeting cards are printed \u201c4-up.\u201d This means that four greeting card surfaces are printed on a single sheet of paper by the printer.","A print-ready generator  takes as input all the print-ready files (one per surface) for a lot and the job control files for the lot, and produces as output a single print-ready file and one or more job control files. If the raster image processor (RIP) that will subsequently be used to process this print job is capable of interpreting and processing embedded OPI commands then print-ready generator  continues to embed OPI comments. However, not all RIPs are capable of processing embedded OPI comments; if that is the case, then print-ready generator  incorporates the composite images stored in data storage  into the print-ready file. Raster image processing is discussed in greater detail with reference to .","TABLE 4, below, summarizes the processing required for one lot of ten calendars",{"@attributes":{"id":"p-0101","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example of processing required for one lot of ten calendars"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Process","Print-ready file processing","Job control file processing"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Print-ready","Creates 1 print-ready file per","Creates 1 job control file per"]},{"entry":["maker","calendar surface. There are","calendar; thus creates 10 job"]},{"entry":[{},"12 double sided pages (one","control files."]},{"entry":[{},"for each month) + 1 double ",{}]},{"entry":[{},"sided cover page in a calendar. ",{}]},{"entry":[{},"Hence, 13 double sided ",{}]},{"entry":[{},"pages \u00d7 2 files per page = 26 ",{}]},{"entry":[{},"print-ready files per calendar.",{}]},{"entry":["Lotter","Lots 10 calendars together.","Combines 2 calendars per "]},{"entry":[{},"Creates 26 \u00d7 10 = 260 print-","page to take into account 2 UP"]},{"entry":[{},"ready files per lot.","imposition; thus creates 5 new"]},{"entry":[{},{},"job control files."]},{"entry":["Print-ready","Creates a single print ","Combines the 5 job control files"]},{"entry":["generator","ready file ","into a single job control file for"]},{"entry":[{},"(from the 260).","the entire print job."]},{"entry":[{},{},"Also, creates two additional job"]},{"entry":[{},{},"control files: (1) describes the"]},{"entry":[{},{},"imposition of two calendars "]},{"entry":[{},{},"onto a single page, and (2) "]},{"entry":[{},{},"provides additional details such"]},{"entry":[{},{},"as what color management "]},{"entry":[{},{},"profile to use and whether the"]},{"entry":[{},{},"print run is simplex or duplex."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Reference is now made to , which is a flow diagram illustrating the initial processing steps performed by a prepress server, in accordance with an embodiment of the subject invention. At Step , order puller  downloads an order from partner system  (). The order is initially assigned a state of \u201cPending-Order-Import\u201d which signifies that the order has been downloaded but has not yet been processed. At Step , order importer  performs two tasks: (1) it transforms the order into the native XML format of the printing system and stores it in data storage ; and (2) it stores the XML attributes of the order in a relational database within data storage  according to a pre-defined schema.","At Step  a determination is made as to whether the order was successfully imported. If no errors are detected, then the order is determined to have been successfully imported and at Step  the order state is set to \u201cPre-batch.\u201d The Pre-batch state signifies that the order has been successfully imported and stored.","If at Step  an error was detected, then at Step  the state of the order is set to \u201cPre-Order-Import-Error\u201d which signifies that the order will not be processed any further. Partner system  can resubmit the order at its option.","At Step , the order enters the prioritized queue for the \u201cPre-batch\u201d state. At Step  image puller  selects the first work item in the prioritized queue to process. The Image puller  downloads one or more composite images for each surface in each line item in the order and stores them in storage system . At Step  a determination is made as to whether the prepress server has successfully downloaded all composites for each line item in the order. If so, then processing continues to Step  where the state is set to \u201cDownloaded.\u201d If at Step  it is determined that one or more composite images was not successfully downloaded then processing continues at Step .","At Step , a determination is made as to whether the error is due to a system error. System errors include inter alia power failure, disc failure, processor failure, and disc full. Generally, system errors result from hardware or software failures in printing system  (). Generally, system errors are quickly detected and corrected by operations staff. Non-system errors generally result from corrupted, incorrect or missing image data. If at Step  a system error is detected then at Step  the state is set to Reprint and the order is then returned to the prioritized queue at Step  and subsequently, another attempt will be made to process the order. If at Step  a non-system error is detected then the order cannot be successfully processed and control moves to Step  where, as previously described, the order is voided.","Reference is now made to , which is a flow diagram illustrating the final processing steps performed by a prepress server, in accordance with an embodiment of the subject invention. At Step  the order now enters the prioritized queue for the \u201cDownloaded\u201d state. At Step  pre-flighter  validates all composite images for one line item. Additionally, if multiple composite images are included in a single file, pre-flighter  extracts each image to a separate file.","At Step , if all the downloaded composite images in the order are determined to be valid, then at Step  the state is set to \u201cImaged.\u201d Once the order has been imaged, all parts of the order including its XML specification and image content have been verified and stored in data storage . In one embodiment, the \u201ccontractual clock\u201d starts relative to the Max_Delay requirement. In another embodiment, receipt of the order may trigger the \u201ccontractual clock.\u201d In yet other embodiments, the \u201ccontractual clock\u201d is configurable and may be configured for each partner system  as stipulated in an applicable SLA. If, at Step , it is determined that any of the composite image are not valid then processing continues at Step .","At Step , the order enters the prioritized queue for the \u201cImaged\u201d state. At Step  order serializer  selects the first work item in the prioritized queue to process. Order serializer  serializes the order into one or more new serial items each of which consists of a single material part. In may be appreciated by one skilled in the art that serialization of printable parts facilitates high granularity of traceability through the manufacturing process and also facilitates partial shipment of finished goods where earlier delivery of partial orders is preferable to completing and shipping the order in its entirety.","At Step  a determination is made as to whether the order was successfully serialized. If it is determined that the order was not successfully serialized then processing continues at Step .","At Step , for each material part in the order, print-ready maker  takes the composite image(s) that corresponds to the material part as input and produces a print-ready file and a job control files as output. The print-ready file and the job control file(s) are used subsequently by the RIP and printing service.","At Step  the state of the order is set to \u201cProcessed.\u201d For purposes of clarity is should be noted that at the \u201cProcessed\u201d state each work item references one serial item or material part. Then, at Step  the order enters the prioritized queue for the \u201cProcessed\u201d state. At Step , lotter  attempts to lot the material part with other material parts waiting in the prioritized queue in order to efficiently use printer resources as previously described. Finally, print-ready generator  takes as input the print-ready files (one per surface) and the job control file and produces as output a single print-ready file and one ore more job control files.","If, at Step , the print-ready file and the job control files are determined to have been created successfully, then, at Step  the prepress server  sets the state to \u201cLotted.\u201d If an error occurs during creation of either the print ready file or the job control file, then control is transferred to Step .","Now reference is made to , which is a flow diagram that illustrates the processing steps performed by lotter  to select material parts for a print lot, in accordance with an embodiment of the subject invention. The exemplary method described in  attempts to lot together one or more material parts to create one print lot. At Step , lotter  selects the first work item from the prioritized queue for the \u201cProcessed\u201d state. At Step , lotter  determines if the work item to be processed is a fixed length material part. It should be noted that a fixed length material part has a fixed number of pages such as a greeting card or calendar. If the material part is fixed length, then at Step  lotter  searches the prioritized queue in priority order and attempts to select up to Preferred_Lot_Quantity \u22121 additional material parts of the same type where Preferred_Lot_Quantity is the preferred number of material parts of this type to be included in a single lot. Lotter  will attempt to select up to Preferred_Lot_Quantity of the same material parts but will accept less. As an example, if Preferred_Lot_Quantity is ten (10) in the case of calendars and lotter  has selected a first calendar to lot, then it attempts to include 9 additional calendars in the lot. If only 5 additional calendars are included as work items to be processed in the prioritized queue for the \u201cprocessed\u201d state then those five calendars together with the first will be lotted together for further processing and then printing. In other words, in the case of lotting fixed length material parts lotter  simply lots whatever material parts are currently available in the prioritized queue and doesn't wait for additional material parts to arrive.","If at Step  it is determined that the material part to be processed is not fixed length, i.e. it is variable length, then at Step  lotter  searches the prioritized queue in priority order and attempts to select up to N_UP\u22121 additional material parts of the same type such that taken together the N_UP\u22121 material parts enable the print lot to meet a Waste Threshold requirement. The term \u201cN_UP\u201d refers to the number of pages that are imposed on a single sheet during printing. For example, the book block of a photo book is a variable length material part that is printed 2 Up. In this case N_UP\u22121 is one (1); thus at Step  lotter  searches the prioritized queue for another photo book book block material part which if selected would enable the two photo book book block material parts to meet said Waste Threshold requirement. A \u201cWaste Threshold\u201d requirement is a pre-established value and is defined as the percentage of pages wasted due to inefficient lotting. Table 5, below, presents an example of how the Waste_Threshold requirement is applied to variable length products. In the example, there are five photo book book block material parts awaiting lotting. The algorithm first selects the #1 position material part and then attempts to find a second material part that would enable the two material parts to meet meets the Waste_Threshold requirement. If the Waste_Threshold requirement is set to 10%, meaning that the target is to waste less than 10 percent of the pages, then material part in the eighth position would be selected to fill the lot as 21 sheets of paper will be required to print the two photo book book block material parts and each of the sheets of paper except for the last include two surfaces. The last sheet will include only one surface. Thus the page wastage is only 0.5*1\/21=2.4%. However, if the Waste_Threshold requirement is set to 15% then the material part in the fifth position, that is 16 pages long would be selected, because of the 20 paper sheets required for printing  would have a single surface and the paper wastage would be 0.5*5\/20=12.5%.",{"@attributes":{"id":"p-0116","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Of Variable Length Lotting"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Position in","Number of "]},{"entry":[{},"Prioritized","Book Block "]},{"entry":[{},"Queue","Pages"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","20"]},{"entry":[{},"3","10"]},{"entry":[{},"5","15"]},{"entry":[{},"8","21"]},{"entry":[{},"12","8"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"At Step  a determination is made as to whether N_UP\u22121 material parts were selected for lotting that meet the Waste_Threshold. If so then lotting has been successful and processing continues at Step . If not, then at Step  a determination is made as to whether the first work item's Late_Priority attribute is set to True. If Late_Priority is set to TRUE then no further delay can be tolerated and processing continues at Step . At Step  any additional material parts of similar type are included in the lot up to a total lot size of N_UP even if the additional subparts will cause the lot to exceed the Waste_Threshold. After completing the lot processing continues at Step .","If at Step  the Late_Priority attribute for the work item is not TRUE, i.e. it is FALSE, then the lot has not been completed and processing proceeds at Step . At Step  the next work item in the prioritized queue is selected and processing returns to Step . If the last work item in the prioritized queue is reached then processing begins again with the first item. At Step  the state of the work item is set to \u201cLotted.\u201d","Now reference is made to  which is a simplified block diagram of a RIP and print system , in accordance with an embodiment of the subject invention. Two printer clusters are illustrated, a printer cluster #1  and a printer cluster #2 . Each printer cluster includes a print server , a raster image processor (RIP) , a printer console  and a printer . In a RIP and printing system there is typically one such cluster for each type of printer and there are typically a plurality of different types of printers. Further a printer cluster may include a plurality of printers  of the same type. Vendors of commercial quality printers include HP, XEROX, and Kodak. Typically, a commercial quality printer requires a RIP  designed specifically for said commercial quality printer. It will be appreciated by those skilled in the art that print server  may be a separate computer system, a card running inside a server computer, or it may be configured as software or hardware inside of prepress server , management server , or a finishing server  (). Similarly, it will be appreciated by those skilled in the art that RIP  may be a separate computer system, a card running inside a server computer, may be internal to a printer or digital press, or it may be configured as software or hardware inside of prepress server , management server , or a finishing server .","Print server  periodically reviews the prioritized queue of work items for the \u201cLotted\u201d state provided by work scheduler  (). Print server  selects the highest priority work item that needs to be raster image processed (commonly referred to as being \u201cripped\u201d or \u201crasterized\u201d) and transfers the print-ready file and job control file for the work item to RIP . Print server  then changes the work item state to \u201cImported.\u201d","RIP #1  receives a print-ready file and a job control file as input. If the print-ready file embeds OPI comments to reference high resolution composite images, then RIP  replaces the OPI comments with the composite images stored in data storage  () during raster image processing. When RIP  completes raster image processing the print job, print server  updates the work item state to \u201cReady-to-print.\u201d RIP  stores the rasterized print data in data storage .","Print server  displays the prioritized queue for the \u201cReady-to-Print\u201d state produced by work scheduler  on printer console . The prioritized queue includes work items whose state may be: Lotted, Imported, Ready-to-Print, Imported-to-Press, or Printed.","A human printer operator  uses printer console  to perform a plurality of functions including selecting and initiating the next work item (commonly referred to as a \u201cprint job\u201d while it is being processed by RIP and print system ) on printer . Prior to starting the next work item, printer operator  may have to inter alia load additional paper, load a new type of paper, or add ink. Once printer operator  selects and initiates a work item, print server  moves the rasterized print data from data storage  to printer . Print server  then updates the work item state to \u201cImported to Press.\u201d Once the print job successfully prints, print server  updates the job status to \u201cPrinted.\u201d","In one embodiment, printer operator  can select a print job to be printed by an external printer . For purposes of clarity, the term external printer refers to a printing press or printing service that operates at a physically remote location. The printing press or printing service may be managed by the same organization that manages printing service  or it may be managed by a distinct organization or entity. The operator selects a work item whose status is Ready-to-Print and selects an external printer to perform the printing. The rasterized data file(s) for the work item is transferred either across a network or are written onto removable storage media and then transferred to external printer . Removable storage media includes inter alia USB drive, DVD-RW, DVD-ROM, CD-RW, CD-ROM and external hard drive. The work item is printed off-site by external printer  and the printed materials are then transported back to printing system . When a work item is printed by an external printer  the printed work item itself is scan-verified using a hand-held scanner, also referred to as a bar scanner,  to signal that the work item has completed and to change the job status to \u201cPrinted.\u201d Scan-verification is described with reference to ) The print job can be scan-verified by the external printer, in which case a message is generated and sent electronically to print server  or it can be scan-verified by a shop floor operator  after the print job is received. Shop floor operator  is described with reference to . Once the print job successfully and has been scanned, print server  updates the job status to \u201cPrinted.\u201d","Reference is now made to , which is an illustrative a printer console screen or user interface, in accordance with an embodiment of the subject invention. A printer console screen  enables printer operator  to interactively control the flow of print jobs to one or more printers . There is a unique printer console  for each type of printer. Typically, thus one printer console  may control the flow of print jobs to several printers  of the same type. On the left side of printer console screen , an \u201cawaiting print\u201d window  displays each work item which has \u201cReady-to-Print\u201d status and is thus ready to be printed. The work items, or print jobs as they are commonly referred to, are lotted material parts that have been rasterized by RIP  and which are stored on data storage . Awaiting print window  displays a part number for each type of material part awaiting printing and the number of waiting print jobs for each said type of material part. It should be noted that the label \u201cPart\u201d that appears in awaiting print window  is an abbreviation for the previously defined term \u201cmaterial part\u201d. When a Part is expanded, as shown in , the material part serial number, shop priority date and size are listed for each work item in the list.","A \u201chot folder\u201d window , entitled \u201ciGen-1\u201d, displays each print job that has moved by printer operator  from awaiting print window  to hot folder window . Print jobs in hot folder window  will be printed on the currently selected printer. In this example, the currently selected printer is iGen-1 as indicated by an enabled printer button . In this example, printer console screen  controls four printers of the same type: iGen-1, iGen-2, iGen-3, and iGen-4. Printer operator  can drag or more print jobs from awaiting print window  into hot folder window  to initiate printing of print jobs. Alternatively, printer operator  can select one or more print jobs listed in awaiting print window  and then click an \u201cAdd Selected to Hot Folder\u201d button  to initiate printing of print jobs. Printer operator  can select print jobs listed in hot folder window  and click on \u201cRemove Selected from Hot Folder\u201d button  to remove print jobs from the hot folder window  and place them back in the awaiting print window .","Reference is now made to , which is a simplified block diagram of a finishing system , in accordance with an embodiment of the subject invention. Finishing system  takes printed parts from the RIP and print system  () and binds them into completed products, packages them and ships them to recipients to fulfill orders received from partner system  (). Two types of human staff or workers are employed in finishing system . A shop floor manager  utilizes a management console  to manage the flow of tasks and a shop floor operator  performs sorting, binding, and packaging tasks. A finishing server  exchanges status information with management server  and interacts with shop floor manager  via a management console , and with shop floor operator  via a shop floor console  and via hand-held scanner . Hand-held scanner  can be wirelessly connected to finishing server , or it can be connected by a hard-wired communications line.","Finishing server  three processing modules. A bin manager  manages the sorting of printed parts into and out of material bin  by shop floor operator . A console manager  manages the flow of messages to and from shop floor console , hand held scanner  and management console . A shipping manager  generates a packing slip and a mailing label for each package.","It will be appreciated by those skilled in the art that finishing server  may be a separate computer system; or alternatively finishing server software modules, bin manager , console manager  and shipping manager may be configured to run inside of management server , prepress server  or print server . It will be further appreciated that finishing server  may be several computer systems, each configured to run one or more processes or handle a certain number of jobs. For example, one finishing server  may run bin manager  and shipping manager , while another finishing server  runs console manager .","Once material parts have been printed by RIP and printing system  (), they are transported by shop floor operator  using a tote  near to a material bin unit  on the shop floor. For purposes of simplicity, the term \u201ctote\u201d refers to a container of known size used to transport physical items such as material parts, bound products, and packaged products from one location within finishing system  physical premise to another. Typically, one or more totes are placed onto a cart which has wheels and which can be conveniently pushed across finishing system  physical premise. For purposes of clarity, the finishing system  physical premise is referred to as the \u201cshop floor.\u201d","A material bin unit  is a temporary storage unit that is constructed from inter alia wood, metal or plastic that is divided into a plurality of material bins , each having a designated height, width and depth. In addition, each material bin  displays a unique bin number, both in numeric format and in bar code format so that it can be conveniently scanned using hand-held scanner . In one embodiment material bins  are of different sizes, e.g. 1 inch, two inches, and three inches wide.","Shop floor operator  performs material sorting, which is also known as collating. Before starting to sort materials into material bins , shop floor operator  signs in to finishing server . To sign in, shop floor operator  uses either hand-held scanner  or shop floor console  to provide his operator id, and to identify his location on the shop floor. After signing in, shop floor operator  may perform material sorting.","Now reference is made to , a simplified flow diagram that illustrates the steps performed in material sorting, in accordance with an embodiment of the subject invention. At Step  shop floor operator  selects a material part from tote  and scans it using hand-held scanner . Hand-held scanner  scans the bar code printed on the material part and transmits this information to console manager . At Step  a determination is made as to whether a co-material part has already been scanned. A \u201cco-material part\u201d refers to one of the material parts that makes up a serial item. For a serial item to be complete and ready for binding, all of its co-material parts must be placed by shop floor operator  into the same material bin . For example, if a photo book cover is in a material bin , there is a corresponding book block co-material part because a photo book cover and its corresponding book block are required for the complete photo book serial item to be bound. If a co-material part has already been scanned, then, at Step , bin manager  obtains the bin number that the first co-material part was placed into by shop floor operator .","If no co-material part has yet been received, then, at Step , a new material bin  is assigned by bin manager . Bin manager  takes into account the size requirement of the serial item material parts when assigning a material bin. In one embodiment, there are a plurality of bin sizes, e.g. 1 inch, 2 inches, and 3 inches; and bin manager  takes into account the sizes of all available bins in selecting the bin size that will afford the tightest fit. It will be appreciated by one skilled in the art that achieving the tightest fit minimizes the amount of bin space required and maximizes the amount of work that can be simultaneously printed, binned, and assembled. For variable size material parts, such as the book block of a photo book, bin manager  computes the size of the part by taking into account the page count. In one embodiment, if there are multiple bins of the correct size available, bin manager  selects a bin where the adjacent bins are not currently storing parts in order to reduce the possibility of accidental mistakes by shop floor operator  such as placing a material part into the wrong material bin .","At Step , bin manager  provides console manager  the number of the material bin assigned to the serial item and console manager  displays said material bin number on hand-held scanner . At Step , shop floor operator  places the part into the material bin  that corresponds to said material bin number.","At Step , shop floor operator  uses hand-held scanner  to scan-verify the bar code for said material bin  to indicate that the material part was successfully placed into the correct material bin . The action of scanning a bin's barcode into which the operator just placed, or withdrew an item is referred to as \u201cscan-verifying.\u201d At Step , after receiving the scanned bin number via console manager , bin manager  determines whether material sorting of the serial item is complete, i.e. whether all of its component material parts have been placed into material bin . If material sorting is determined to be complete then, at Step , bin manager  updates the job status to \u201cBindery.\u201d At this point, the serial item has been successfully sorted and is ready to be processed in a bindery . If not all co-material parts have been placed into material bin , then additional parts will have to arrive and be material sorted in order to complete material sorting of the serial item and send it to bindery .","In one embodiment, after shop floor operator  places the last co-material part into material bin  hand-held scanner  beeps to indicate that all co-material parts have been placed into material bin .","Referring back to , once a serial item has been material sorted then the serial item can enter bindery . Bindery  is a location, including staff and equipment, on the shop floor where binding is performed. The term \u201cbinding\u201d, refers to actions that are performed on material parts of a serial item to create a finished product. Said actions include inter alia gluing, stapling, folding, cutting and sewing. For example, if the material parts consist of a cover and book block, then these will have to be glued, stapled or otherwise attached in the bindery. Note that some serial items, including greeting cards and calendars, have only one material part. In such cases, bindery actions such as folding may still be necessary. In some cases, for example with certain types of greeting cards, no bindery actions at all are required. In such cases material sorting is not required and the tote carrying the printed material part will bypass the bindery and be moved to the area on the shop floor where the material part will be ship sorted into a shipping bin .","In bindery , shop floor operator clicks a \u201cFind Next\u201d button on hand-held scanner  and bin manager  retrieves the first work item from the appropriate prioritized queue. Hand-held scanner  displays the number of the material bin  that holds the material parts to bind. Shop floor operator takes the material parts out of the indicated material bin  and scan-verifies each material part by scanning the bar code that has been printed and is visible on the material part. After the last material part has been scan verified, bin manager  releases the material bin for subsequent use. Hand-held scanner  then indicates any non-printed material parts, e.g. a velum separator sheet or a non-printed book cover, to be bound together with the printed material parts. Shop floor operator retrieves any such non-printed material parts which are typically stored within bindery . Shop floor operator  then performs the appropriate binding task on the material parts. Next, shop floor operator  scans the bound serial item and places it into tote . At this point, bin manager  updates the job status to \u201cBound.\u201d When said tote  is full, shop floor operator  moves said tote  near to a shipping bin unit  so that the bound serial items can be \u201cship sorted.\u201d","A shipping bin unit  is a temporary storage unit that is constructed from inter alia wood, metal or plastic that is divided into a plurality of shipping bins , each having a designated height, width and depth. In addition, each shipping bin  displays a unique bin number, both in numeric format and in bar code format so that it can be conveniently scanned using hand-held scanner . In one embodiment shipping bins  are of different sizes, e.g. 1 inch, two inches, and three inches wide.","Shop floor operator  performs ship sorting which is the process of taking individual bound serial items out of tote  and placing them in designated shipping bins . Before starting to ship sort, shop floor operator  signs in to finishing server . To sign in, shop floor operator  uses either hand-held scanner  or shop floor console  to provide his operator id, and to identify his location on the shop floor. After signing in, shop floor operator  may perform ship sorting.","The process of ship sorting is analogous to the process of material sorting. However, in the case of ship sorting, bound serial items are taken from tote  and placed into designated shipping bins  by shop floor operator . A shipping bin holds all serial items that will be packaged together. Ship sorting employs a similar algorithm to that used for material sorting, described with reference to , with three exceptions: (1) rather than placing co-material parts into material bins , shop floor operator  places bound serial items into shipping bins ; (2) rather than wait for all co-material parts for the bin to be considered full, the algorithm waits for all serial items that will later be packaged together; and (3) rather than updating the job status to \u201cBound\u201d, bin manager  updates the job status to \u201cReady-To-Ship.\u201d As with material sorting, shop floor operator  withdraws a serial item and scans it. Then, bin manager  uses console manager  to display the shipping bin number into which to place the line item. Next, shop floor operator  places the serial item into the shipping bin  that corresponds to said shipping bin number and scan-verifies the shipping bin. When assigning a shipping bin , bin manager  takes into account the size of all serial items that must fit into the shipping bin.","Once all serial items that will be included in a package have been ship sorted into shipping bins , they are ready to be packaged at a packaging station . Packaging station  is a physical location on the shop floor where packaging is performed.","At packaging station  shop floor operator  clicks a \u201cFind Next\u201d button on shop floor console  and bin manager  retrieves the first work item from the appropriate prioritized queue and displays the number of the shipping bin  that contains the serial items to package. Shop floor operator  takes the serial items out of the indicated shipping bin . Shop floor operator  then scan-verifies said shipping bin  to indicate that the serial items have been taken out and that said shipping bin  is now empty and can be reused. Then bin manager  changes the status of the work item to \u201cPackaged\u201d and (1) selects the appropriate box from a plurality of different types and sizes of boxes, taking into account the size and weight requirements for each serial item to be included in the box, and (2) prints a packaging slip. If the package is to be picked up by a shipping service then a shipping label including postage is also printed. If the package is to be set aside for pickup by a \u201clab\u201d then a lab label is printed. A lab is a photo lab service or other company for whom packages are batched and shipped together.","Shop floor operator  then uses shop floor console  to determine if any embellishments need to be added to the package. Shop floor operator  retrieves any such needed embellishments which are typically stored near to packaging station .","Shop floor operator  completes the packaging task by (1) pulling the appropriate box as indicated by the packaging screen displayed by shop floor console , (2) placing the serial items, the packaging slip, and packaging material in the box, (3) sealing the box and (4) affixing the shipping label or lab label to the box. Shop floor operator  then places the package into tote  which will be moved to a designated pick up area on the shop floor. At this point, bin manager  updates the work item status to \u201cShipped.\u201d","If an error occurs during packaging an error label is printed and the order remains in the \u201cPackaged\u201d state. In this case, the package and the error label are set aside for shop floor manager . Once shop floor manager  resolves the error he scans the package again to obtain a shipping label, then affixes the label and places the package into the designated tote . Bin manager  then updates the work item status to \u201cShipped.\u201d","In one embodiment, if the package is intended for a lab then a lab label is affixed and the package is placed in a designated tote, referred to as a \u201clab bin.\u201d Periodically, shop floor operator  uses shop floor console  to scan-verify packages from the lab bin and place the packages into a box. When the box is full shop floor operator  uses shop floor console  to indicate to bin manager  that the package is full. Shipping manger  then prints a packing slip and a shipping label. Shop floor operator  places the packing label inside the box, seals the box, and places the shipping label on the box. Shop floor operator  then moves the box to a designated location on the shop floor. Bin manager  then updates status for each of the work items that were placed in the box to \u201cShipped.\u201d","Now reference is made to . which is an illustrative screen capture from a shop floor console, in accordance with an embodiment of the subject invention. In this example, shop floor operator  selects the operation \u201cScan to Reprint\u201d and the user interface screen depicted in  appears. Next, shop floor operator  scans the barcode that appears on a serial item to be reprinted. The serial item number appears in a barcode field . Shop floor operator  may use a checkbox  to indicate whether the entire lot, a single serial item or an entire lot with scan verification should be assigned to reprint. Shop floor operator  can check a box  and enter a reason code that indicates the reason why the serial item is to be reprinted. Window  displays a list of previous serial items that were scanned to reprint.",{"@attributes":{"id":"p-0150","num":"0149"},"figref":"FIGS. 2","b":["5","11","13","14","16","18"]},"Universal Ordering Service for Manufacturing Customized Print Products",{"@attributes":{"id":"p-0151","num":"0150"},"figref":["FIG. 16","FIGS. 1-15"],"b":["1610","210","215","1620","1630","1620","1610","1620","1630"]},"As used herein, the term print vendor, or vendor, refers to a production facility that receives an order for a custom print job, manufactures, or prints, the order and ships the order or requests shipping of the order to a customer. More than one print vendor may be operated by the same company or organization. As used herein, the term principal production facility  refers to a special case of a print vendor , which is described with reference to . However, unless otherwise specified herein, from the perspective of UOS , principal production facility  is identical to print vendor . Generally, the types of facilities employed and the method of operation of print vendor  is not known except for the processing details disclosed herein.","In this regard, UOS  works like a railway switchyard. UOS enables any number of partner systems  to submit orders on behalf of customers for the manufacture of customized print products. UOS  uses routing rules  to determine optimal routing of orders to print vendors . The business rules that drive the routing can be static\u2014for example, a routing rule based on a product SKU may require that a particular product or SKU be manufactured only by a specific print vendor. Alternatively, another routing rule may require that manufacturing and delivery costs be minimized by producing the goods at a facility in close proximity to the order destination. Routing rules  may also be dynamic. For example, production capacity at a several print vendors  may be overly taxed, putting contractual obligations for delivery at risk. In such cases routing rules  may require that orders be routed for a period of time to a specific fulfillment facility to meet a delivery schedule obligation, despite resulting in a less optimal cost margin.",{"@attributes":{"id":"p-0154","num":"0153"},"figref":"FIG. 17","b":["1610","1610","215","215"]},"Partner system  uses a partner API  to submit orders as well as to receive a stream of update messages from an acknowledgement (ACK) service . Upon receipt of an order, UOS  stores the order in a data store  as order data .","In one embodiment, partner API  is implemented using a REST architecture in which clients send request messages to servers, servers process the requests and return responses. REST is defined by the W3C technical Architecture Group (TAG) and uses https as a transport mechanism for messages. As used herein, partner API includes the definition of the request and response messages defined between partner system  and UOS  as well as the supporting functions performed by UOS  to process the commands defined in the API.","In addition to enabling partner system  to submit orders, partner API  provides additional order processing functions including: cancel order, change delivery method, get order info and get orders. Each of these API calls made by partner system  results in a code being returned by UOS . For example, return codes for the order submission function include: Order Created Successfully, Bad Request, Not Authorized, and Internal Error.","ACK messages provided by UOS  via partner API  include: order validated, order routed, order accepted, order packaged, reject order, cancel order, report error, and shipping notification. These are used to inform partner system  of states of an order. In addition, the Get Order Info API call enables partner system  to obtain information from UOS  about an already submitted order. In one embodiment, the message returned by UOS  contains the most recent order status, and if the order has shipped the relevant tracking numbers and ship dates for order shipments. In one embodiment, a Get SKU Info API call enables partner system  to obtain analogous information for one or more individual SKUs that are part of a previously placed order.","Partner system  submits orders to UOS  via partner API . The order is processed by a series of services, referred to as an order pipeline .","The first service performed by order pipeline  on a newly received order is a validation service , which analyzes the received order to identify potential errors in destination address and compatibility between the indicated shipping method and the destination address. For example, incomplete addresses are identified. Or if shipping is to a post office box but the desired shipper won't deliver to a post office box then an error is generated. Validation service  may validate, or identify, other types of errors in an order. For example, it can validate image formats, sizes and contents supplied for use in products. In one embodiment, if an error is detected during validation then an error message is generated and returned to partner system . Generally, error messages, or \u201cACKS\u201d include information about the error. An error may be a recoverable error that partner system  can remedy, for example by fixing a postal code or a state abbreviation. In other embodiments, UOS  attempts to correct the error, for example by requesting updated information from partner system . Once an order is validated a status of \u201cValidated\u201d is assigned to the order. This can generate a message to partner system  via ACK service .","Validation service  generates a new order that corresponds to the received order. Additional details such as the price, SLA date, shipping service and print vendor to which the order will be routed are determined by the various order pipeline  services at successive steps and are added to the corresponding order. Finally, the corresponding order is routed to a print vendor  for fulfillment processing.","A pricing service  determines the price of an order. In one embodiment, after pricing has been performed price information is added to order data  which can be (1) provided to partner system , (2) used to generate an invoice, or for other purposes. If a price can't be generated an error status is assigned to the order and an error message is sent to partner system  via ACK service .","Pricing service  calculates the price of an order or SKU based on an existing contract with the particular partner system  that issued the order, the shipping method requested, the SKU(s) included in the order, customizations such as the number of pages, and potentially other information supplied as part of the order. Pricing service  relies on pricing rules and pricing data  included in data store . An order may be re-priced by pricing service  at any time. For example, if a pricing change is made, or special holiday pricing is announced it is possible to re-price orders that have been placed and which have already been priced by pricing service  to enable partner system  and their customers to take advantage of the new prices.","An SLA service  computes an SLA date for each order based on contracts, or service level agreements (SLAs) between the operator of UOS  and the submitting partner system . Analogous to the previously defined Max_Delay parameter that is computed by management server  within principal production facility , an SLA date is the latest date and time at which an order can be completed and available for shipment under the service level agreement (SLA) that applies to the order. In the case that UOS  is distributing parts of an order and not just entire orders then SLA service  determines a SLA date for each SKU in the order.","To compute an SLA date, SLA service  accesses contract data extracted from SLAs and stored as SLA data  in data store . The computed SLA date for an order is included with the order prior to its being sent to a print vendor .","A carrier service  determines the optimal carrier, also referred to shipping service, to use in order to meet SLA constraints, i.e. delivery date constraints and cost constraints. Carrier service  maps shipping codes specified in an order from partner system  into shipping codes used by UOS . UOS  uses a standard set of shipping codes for communications with print vendors . A ship code specifies both carrier and method of shipment. For example, FDX_GND is the ship code for FEDEX Ground shipping. Partner system  may use a different code, but carrier service  translates it to FDX_GN for use in messages exchanged with print vendor .","Sometimes, when dealing with orders, the exact method of shipment is not specified. In these cases, carrier service  will send the print vendor a \u201cBest Way\u201d shipping code with the order. A best way code indicates that the print vendor can choose its own preferred ship method for the shipment so long as the method meets the parameters of the best way request. The print vendor is expected to return the code for the actual ship method used in all shipping acknowledgements.","For example, UOS  receives an order from partner system  specifying FedEx Ground as the ship type. Partner system  has specified its own code \u201cFG\u201d as the ship code. Carrier service  translates this code as the UOS code \u201cFDX_GND\u201d. UOS  then routes the order to Acme Printing, one of print vendors , specifying the ship code as \u201cFDX_GND\u201d. Acme printing produces the order and ships it FedEx Ground. Acme returns the code \u201cFDX_GND\u201d in their ship ack. UOS  forwards the ack back to partner system , translating the UOS ship code back to the partner system  ship code of \u201cFG\u201d.","A routing service  routes, or assigns, each order to a print vendor . Once an order is routed a status of \u201cRouted\u201d is assigned to the order. This can generate a status message to partner system  via ACK service . In certain embodiments routing service  routes individual SKUs that comprise an order rather than an entire order. Generally, the approach taken to routing SKUs is similar to that described herein for routing orders.","For each order, routing service  determines which of print vendors  are capable of producing, or manufacturing, the order. This determination relies on vendor data  stored in data store  that specifies characteristics of print vendors, including which SKUs each print vendor  is capable of manufacturing. Other characteristics that may be included in vendor data  include geographic location and capacity.","In the case that there are multiple print vendors  capable of manufacturing the SKUs in an order, routing service  may rely on several factors to route an order, including (1) cost, (2) geography, and (3) print vendor capacity. With respect to cost and geography. routing service  determines, based on the geographic locations of the intended recipient of the order and of each of the multiple print vendors  which print vendor can (1) manufacture the part for the lowest cost, including cost of shipping, and (2) meet the SLA date constraint. In other embodiments, routing service  performs a real-time auction by submitting requests for quotes to vendor systems and determines routing based on the best terms proposed in the responses from the vendors. In such auction embodiments, the proposal, offer and acceptance are automated between routing service  and print vendors .","With respect to capacity, routing service  may take into account the capacity of each print vendor  as well as the orders and SKUs that have been recently assigned to each print vendor  in making a routing decision. In yet another embodiment, routing service  is capable of receiving o requesting status updates from one more print vendors  in real-time as to their current availability to receive and process orders. In this embodiment, routing service  then makes a dynamic routing decision based at least in part on the real-time capacity of print vendors .","Generally, routing rules are embodied as declarative business rules or as dynamic rules that optimize for one or more criteria based on information that is updated either in real-time or at least from time-to-time. An example of a declarative rule is: \u201call cards destined for UK route to the Eindhoven production facility.\u201d In addition, to capacity, as described above, other criteria that dynamic rules can optimize for include: cost margin, delivery time and quality. An example of a dynamic routing rule that when evaluated by routing service  selects a print vendor based on the criteria of cost margin and delivery time is:\n\n","In the preceding example of dynamic routing the cost margin obtained by selecting a specific print vendor is based on cost data that is updated from-time-to-time and ship time is an estimate of the actual time to manufacture and ship a particular product or SKU that is updated based on analyzing the stream of ACKs from the various print vendors.","Further, if a print vendor  rejects an order then routing service  is capable of rerouting the order to a different print vendor .","For each order, an ACK service  receives a stream of status messages from print vendors  as well as from the various services in order pipeline  regarding the status of the order and relays those messages to the appropriate partner system .","A vendor API  enables UOS  to submit orders and issue other commands to a print vendor  and to receive status updates, in the form of messages with predefined status codes. Analogous to partner API , in one embodiment vendor API  is implemented as a REST protocol using https as a transport mechanism. Every API call returns an HTTP response code that indicates the result. XML is used to encode API calls (requests) and response messages.","Commands that may be issued by UOS  using vendor API  include submit order, cancel order, change delivery method (for a previously submitted order), get order info and get orders.","Vendor API  enables print vendors to send status messages, also referred to as acknowledgements (ACKS), that indicate that an order has reached a specific state of order processing. Each state is associated with a specific event. One embodiment of the series of events that may occur while an order is being processed by a print vendor and which are associated with status messages (ACKs) is given below in Table 6.",{"@attributes":{"id":"p-0180","num":"0182"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Acknowledgements From Print Vendors"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Status or ",{}]},{"entry":["Event","Short Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Order","When an order has been received and any associated media"]},{"entry":["Accepted","files for the order have been downloaded and verified, an"]},{"entry":[{},"acknowledgement will be sent to UOS 1610 that the order has"]},{"entry":[{},"been accepted."]},{"entry":["Order","If the Vendor cannot process an order, a reject"]},{"entry":["Rejected","acknowledgement is sent to notify UOS 1610 to send the order"]},{"entry":[{},"to another print location."]},{"entry":["Order","If UOS 1610 cancels an order, the vendor uses this ACK to"]},{"entry":["Canceled","send a cancel acknowledgement to inform UOS 1610 that the"]},{"entry":[{},"cancel has been completed."]},{"entry":["Order","When an order has been successfully processed and packaged,"]},{"entry":["Packaged","an order packaged acknowledgement will be sent to UOS 1610."]},{"entry":["Order","When an order has been successfully processed, aggregated"]},{"entry":["Shipped","and shipped, a shipping acknowledgement will be sent to UOS"]},{"entry":[{},"1610. If the order is large and must be split into separate"]},{"entry":[{},"shipments, a separate shipping ACK is sent for each shipment."]},{"entry":["Error","During processing of an order, errors may arise. If the vendor"]},{"entry":[{},"cannot resolve these errors themselves, these errors are"]},{"entry":[{},"reported to UOS 1610 using an Error acknowledgement."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"In certain embodiments, UOS  is implemented as a single server computer or as a plurality of server computers operating cooperatively, each performing some of UOS  functions. Devices that may operate as a server computer include, but are not limited to, personal computers, desktop computers, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, servers, network appliances, and the like.","In certain embodiments, UOS  is implemented as one or more server computers, where a server computer includes a computer processor (CPU), network interface card for communicating across a network and\/or a wireless network, and nonvolatile data storage for storing program code and data.","In another embodiment, UOS  functions are implemented as a software layer that runs inside of principal production facility . For example, UOS  functions may be added to prepress server  or management server .","In yet other embodiments, UOS  functions may be delivered by cloud service facilities as a service over a network, such as the Internet, rather than by a specific server or cluster of servers.","Generally, the term server computer is used generically to refer to the cases when UOS  is implemented by a single server computer, multiple server computers, principal production facility , or by a cloud service.","Data store  may be implemented by virtually any mechanism usable for storing and managing data, including but not limited to a file, a folder, a document, a web page or an application, such as a database, digital media including digital images and digital video clips, and the like. Data store  may further include a plurality of different data stores or databases. For example, data store  may be implemented as separate SQL databases for routing rules , order data , pricing data , SLA data , and vendor data . Further, data store  may also include network storage or cloud storage in which the physical storage media is accessed across a network.",{"@attributes":{"id":"p-0187","num":"0189"},"figref":"FIG. 18","b":["1610","1620"]},"At step  a partner system  submits an order to UOS , on behalf of a customer, for a custom print product. At step  validation service  validates the order. This step may include performing any completeness and consistency checks on the order and on images and other media elements to be used in manufacturing the custom print product. This step also includes generating a new, corresponding, order that includes information determined as part of the processing performed by order pipeline . Once the order is validated and a corresponding order is generated validation service  generates a status code of Validated for the order and, at step  ACK service  uses partner API  to inform partner system  of the updated status.","Generally, messages that correspond to the various status codes associated with order processing flow from UOS  and from print vendor  via UOS  to partner system . At step  partner system  uses partner API  to obtain or receive the status messages which may be batched or may be obtained individually.","At step  pricing service  prices the order. At step  SLA service  determines the SLA date for the order. At step , carrier service  selects a carrier, or shipping service, to ship the order once it is manufactured. At step  routing service  selects a print vendor  to fulfill or manufacture the product(s) in the order. Also, at step , routing service  uses vendor API  to submit the order to the selected print vendor .","At step  selected print vendor  processes the order. At designated processing steps selected print vendor  uses vendor API  to send status updates. Upon successful completion of the processing, selected print vendor  notifies the selected carrier that the print product(s) included in the order are available. Subsequently the carrier picks up and delivers the custom manufactured product(s) to the customer. Once the carrier picks up the customer print product(s) selected print vendor  uses vendor API  to send a status message to UOS  that the order has shipped. UOS  in turn relays the message to partner system  thus completing the order.","It may be appreciated by one skilled in the art that the methods, processes, and architecture implemented by UOS  may be applied to any type of custom manufacturing and is not limited only the custom manufacturing of print products. For example, the method may be applied to other manufactured goods such as vehicles, music CDs or other items that contain a custom selection of music, other media including video and film, home furnishings, and items of clothing.",{"@attributes":{"id":"p-0193","num":"0195"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"LISTING 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201dencoding=\u201cISO-8859-1\u201d?>"},{"entry":"<Order xmlns=\u201chttp:\/\/www.ipads.com\/xml\/iPads_Order\u201d"},{"entry":"xmlns:xsi=\u201chttp:\/\/www.w3.org\/2001\/XMLSchema-instance\u201d"},{"entry":"CustomerID=\u201cPartner_Brand\u201d EnvelopeID=\u201c33809\u201dOrderID=\u201c33809\u201d"},{"entry":"orderDate=\u201c2007-02-12\u201d"},{"entry":"xsi:schemaLocation=\u201chttp:\/\/www.ipads.com\/xml\/iPads_Order"},{"entry":"iPads_Order.xsd\u201d>"},{"entry":"\u2003<Address AddressID=\u201c1\u201d>"},{"entry":"\u2003\u2003<firstname>Mark<\/firstname>"},{"entry":"\u2003\u2003<lastname>Gustafson<\/lastname>"},{"entry":"\u2003\u2003<address1>100 EastLake Ave N<\/address1>"},{"entry":"\u2003\u2003<address2><\/address2>"},{"entry":"\u2003\u2003<address3><\/address3>"},{"entry":"\u2003\u2003<city>Seattle<\/city>"},{"entry":"\u2003\u2003<state>WA<\/state>"},{"entry":"\u2003\u2003<postalcode>98101<\/postalcode>"},{"entry":"\u2003\u2003<country>US<\/country>"},{"entry":"\u2003\u2003<phone><\/phone>"},{"entry":"\u2003\u2003<email>mark@rpiprint.com<\/email>"},{"entry":"\u2003<\/Address>"},{"entry":"\u2003<Contact ContactID=\u201c1\u201d AddressID=\u201c1\u201d \/>"},{"entry":"\u2003<BillTo BillingID=\u201c1\u201dAddressID=\u201c1\u201d> <Invoice \/> <\/BillTo>"},{"entry":"\u2003<ShipTo AddressID=\u201c1\u201d>"},{"entry":"\u2003\u2003<ShipMethod>GROUND<\/ShipMethod>"},{"entry":"\u2003\u2003<PackingSlip include=\u201ctrue\u201d \/>"},{"entry":"\u2003<\/ShipTo>"},{"entry":"\u2003<CartItem ContactID=\u201c1\u201ddescription=\u201cscenes\u201dquantity=\u201c7\u201d>"},{"entry":"\u2003\u2003<PhotoBook_8by10wrap>"},{"entry":"\u2003\u2003\u2003<PhotoBookAttributes\/>"},{"entry":"\u2003\u2003\u2003\u2003<PhotoBookCover>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<PhotoBookCoverAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<JobName Value=\u201cCoverPortrait\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<JobStock"},{"entry":"Value=\u201cBlack_Small_Wrap_Cover_Port_PartnerBrand\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/PhotoBookCoverAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<PhotoBookPage PartOrder=\u201c1\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<PhotoBookPageAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<TemplateName Value=\u201cStandardWrapPortraitCover\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/PhotoBookPageAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Photo>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<PhotoAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Filename Value=\u201ccover_P24786_0002.pdfy\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<ImageType Value=\u201cpdf\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<ElementName Value=\u201cPhoto1\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<CropStyle Value=\u201cStretchFit\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/PhotoAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Photo>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/PhotoBookPage>"},{"entry":"\u2003\u2003\u2003\u2003<\/PhotoBookCover>"},{"entry":"\u2003\u2003\u2003\u2003<PhotoBookBookBlock>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<PhotoBookBookBlockAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<JobName Value=\u201cDuplexPortrait\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/PhotoBookBookBlockAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<PhotoBookPage PartOrder=\u201c1\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<PhotoBookPageAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<TemplateName Value=\u201cStandardPortrait\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/PhotoBookPageAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Photo>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<PhotoAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Filename Value=\u201cpage_P24786_0001.pdf\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<ImageType Value=\u201cpdf\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<ElementName Value=\u201cPhoto1\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<CropStyle Value=\u201cStretchFit\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/PhotoAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Photo>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/PhotoBookPage>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<PhotoBookPage PartOrder=\u201c2\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<PhotoBookPageAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<TemplateName Value=\u201cStandardPortrait\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/PhotoBookPageAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<Photo>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<PhotoAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Filename Value=\u201cpage_P24786_0002.pdf\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<ImageType Value=\u201cpdf\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<ElementName Value=\u201cPhoto1\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<CropStyle Value=\u201cStretchFit\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<\/PhotoAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/Photo>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/PhotoBookPage>"},{"entry":"\u2003\u2003\u2003\u2003<\/PhotoBookBookBlock>"},{"entry":"\u2003\u2003\u2003\u2003<NonPrintableMaterial>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<NonPrintableMaterialAttributes>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Description Value=\u201cVelumSeparator012\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<Quantity Value=\u201c1\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/NonPrintableMaterialAttributes>"},{"entry":"\u2003\u2003\u2003\u2003<\/NonPrintableMaterial>"},{"entry":"\u2003\u2003\u2003<\/PhotoBook_8by10wrap>"},{"entry":"\u2003\u2003<\/CartItem>"},{"entry":"<\/Order>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The subject invention will be more fully understood and appreciated from the following detailed description, taken in conjunction with the drawings in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
