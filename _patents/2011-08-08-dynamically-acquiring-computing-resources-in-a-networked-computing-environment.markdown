---
title: Dynamically acquiring computing resources in a networked computing environment
abstract: The present invention provides an approach for dynamically acquiring computing resources in a networked computing environment (e.g., a cloud computing environment) based on infrastructure/computing resource needs. In a typical embodiment, a set of computing resources (needed to process a set of workloads) external to a first portion of a networked computing environment is identified. Once identified, electronic negotiations with at least one provider of the set of computing resources may be held for utilizing the provider's set of computing resources to process the set of workloads. In general, the negotiations are based on at least one resource registration (setting forth terms for utilizing the set of computing resources such as usage rates, usage limitations, etc.) associated with the at least one provider stored in at least one computer data structure. Responsive to successful completion of the negotiations, the set of computing resources will be associated with the first portion.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09158590&OS=09158590&RS=09158590
owner: International Business Machines Corporation
number: 09158590
owner_city: Armonk
owner_country: US
publication_date: 20110808
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Illustrative Example"],"p":["In general, the present invention relates to computing resource optimization. Specifically, the present invention relates to the dynamic acquisition of computing resources in a networked computing environment (e.g., a cloud computing environment).","The networked computing environment (e.g., cloud computing environment) is an enhancement to the predecessor grid environment, whereby multiple grids and other computation resources may be further enhanced by one or more additional abstraction layers (e.g., a cloud layer), thus making disparate devices appear to an end-consumer as a single pool of seamless resources. These resources may include such things as physical or logical computing engines, servers and devices, device memory, storage devices, among others.","Presently, many networked computing services (e.g., cloud computing services) are provided through infrastructure provisioning (e.g., within a relatively static hardware pool) whereby operating systems and computer software applications can be deployed and reconfigured. In a typical cloud computing environment, application images can be installed and overwritten, Internet Protocol (IP) addresses can be modified, and real and virtual processors are allocated to meet changing resource requirements. However, challenges can exist in that cloud computing environments are typically static entities whose infrastructures are fully managed. As such, optimization of the cloud computing environments typically occur through static acquisition and installation of new hardware and\/or other resources. Such an approach may be inefficient and\/or not economically viable.","Embodiments of the present invention provide an approach for dynamically acquiring computing resources in a networked computing environment (e.g., a cloud computing environment) based on infrastructure\/computing resource needs. In a typical embodiment, a set of computing resources (needed to process a set of workloads) external to a first portion of a networked computing environment is identified. Once identified, electronic negotiations with at least one provider of the set of computing resources may be held for utilizing the provider's set of computing resources to process the set of workloads. In general, the negotiations are based on at least one resource registration (setting forth terms for utilizing the set of computing resources such as usage rates, usage limitations, etc.) associated with the at least one provider stored in at least one computer data structure. Responsive to successful completion of the negotiations, the set of computing resources will be associated with the first portion. Such association can occur through various methods such as utilizing computing resources in public cloud environments, expanding the first portion to include the set of computing resources, etc.","A first aspect of the present invention provides a computer-implemented method for dynamically acquiring computing resources in a networked computing environment, comprising: identifying a set of computing resources external to a first portion of the networked computing environment, the set of computing resources being needed to process a set of workloads associated with the first portion; negotiating with at least one provider of the set of computing resources for utilizing the at least one provider's set of computing resources to process the set of workloads, the negotiating being based on at least one resource registration associated with the at least one provider stored in at least one computer data structure; and responsive to the negotiating being successful, associating the set of computing resources with the first portion of the networked computing environment.","A second aspect of the present invention provides a system for dynamically acquiring computing resources in a networked computing environment, comprising: a memory medium comprising instructions; a bus coupled to the memory medium; and a processor coupled to the bus that when executing the instructions causes the system to: identify a set of computing resources external to a first portion of the networked computing environment, the set of computing resources being needed to process a set of workloads associated with the first portion; negotiate with at least one provider of the set of computing resources for utilizing the at least one provider's set of computing resources to process the set of workloads, the negotiation being based on at least one resource registration associated with the at least one provider stored in at least one computer data structure; and responsive to the negotiation being successful, associating the set of computing resources with the first portion of the networked computing environment.","A third aspect of the present invention provides a computer program product for dynamically acquiring computing resources in a networked computing environment, the computer program product comprising a computer readable storage media, and program instructions stored on the computer readable storage media, to: identify a set of computing resources external to a first portion of the networked computing environment, the set of computing resources being needed to process a set of workloads associated with the first portion; negotiate with at least one provider of the set of computing resources for utilizing the at least one provider's set of computing resources to process the set of workloads, the negotiation being based on at least one resource registration associated with the at least one provider stored in at least one computer data structure; and responsive to the negotiation being successful, associating the set of computing resources with the first portion of the networked computing environment.","A fourth aspect of the present invention provides a method for deploying a system for dynamically acquiring computing resources in a networked computing environment, comprising: providing a computer infrastructure being operable to: identify a set of computing resources external to a first portion of the networked computing environment, the set of computing resources being needed to process a set of workloads associated with the first portion; negotiate with at least one provider of the set of computing resources for utilizing the at least one provider's set of computing resources to process the set of workloads, the negotiation being based on at least one resource registration associated with the at least one provider stored in at least one computer data structure; and responsive to the negotiation being successful, associating the set of computing resources with the first portion of the networked computing environment.","The drawings are not necessarily to scale. The drawings are merely schematic representations, not intended to portray specific parameters of the invention. The drawings are intended to depict only typical embodiments of the invention, and therefore should not be considered as limiting the scope of the invention. In the drawings, like numbering represents like elements.","Illustrative embodiments will now be described more fully herein with reference to the accompanying drawings, in which exemplary embodiments are shown. This disclosure may, however, be embodied in many different forms and should not be construed as limited to the exemplary embodiments set forth herein. Rather, these exemplary embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of this disclosure to those skilled in the art. In the description, details of well-known features and techniques may be omitted to avoid unnecessarily obscuring the presented embodiments.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of this disclosure. As used herein, the singular forms \u201ca\u201d, \u201can\u201d, and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. Furthermore, the use of the terms \u201ca\u201d, \u201can\u201d, etc., do not denote a limitation of quantity, but rather denote the presence of at least one of the referenced items. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising\u201d, or \u201cincludes\u201d and\/or \u201cincluding\u201d, when used in this specification, specify the presence of stated features, regions, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, regions, integers, steps, operations, elements, components, and\/or groups thereof.","Embodiments of the present invention provide an approach for dynamically acquiring computing resources in a networked computing environment (e.g., a cloud computing environment) based on infrastructure\/computing resource needs. In a typical embodiment, a set of computing resources (needed to process a set of workloads) external to a first portion of a networked computing environment is identified. Once identified, electronic negotiations with at least one provider of the set of computing resources may be held for utilizing the provider's set of computing resources to process the set of workloads. In general, the negotiations are based on at least one resource registration (setting forth terms for utilizing the set of computing resources such as usage rates, usage limitations, etc.) associated with the at least one provider stored in at least one computer data structure. Responsive to successful completion of the negotiations, the set of computing resources will be associated with the first portion. Such association can occur through various methods such as utilizing computing resources in public cloud environments, expanding the first portion to include the set of computing resources, etc.","It is understood in advance that although this disclosure includes a detailed description of cloud computing, implementation of the teachings recited herein are not limited to a cloud computing environment. Rather, embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.","Cloud computing is a model of service delivery for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g. networks, network bandwidth, servers, processing, memory, storage, applications, virtual machines, and services) that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics, at least three service models, and at least four deployment models.","Characteristics are as follows:","On-demand self-service: a cloud consumer can unilaterally provision computing capabilities, such as server time and network storage, as needed, automatically without requiring human interaction with the service's provider.","Broad network access: capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms (e.g., mobile phones, laptops, and PDAs).","Resource pooling: the provider's computing resources are pooled to serve multiple consumers using a multi-tenant model, with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction (e.g., country, state, or datacenter).","Rapid elasticity: capabilities can be rapidly and elastically provisioned, in some cases automatically, to quickly scale out and rapidly released to quickly scale in. To the consumer, the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.","Measured service: cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active consumer accounts). Resource usage can be monitored, controlled, and reported providing transparency for both the provider and consumer of the utilized service.","Service Models are as follows:","Software as a Service (SaaS): the capability provided to the consumer is to use the provider's applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser (e.g., web-based email). The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited consumer-specific application configuration settings.","Platform as a Service (PaaS): the capability provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks, servers, operating systems, or storage, but has control over the deployed applications and possibly application-hosting environment configurations.","Infrastructure as a Service (IaaS): the capability provided to the consumer is to provision processing, storage, networks, and other fundamental computing resources where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, deployed applications, and possibly limited control of select networking components (e.g., host firewalls).","Deployment Models are as follows:","Private cloud: the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on-premises or off-premises.","Community cloud: the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns (e.g., mission, security requirements, policy, and compliance considerations). It may be managed by the organizations or a third party and may exist on-premises or off-premises.","Public cloud: the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.","Hybrid cloud: the cloud infrastructure is a composition of two or more clouds (private, community, or public) that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability (e.g., cloud bursting for load-balancing between clouds).","A cloud computing environment is service oriented with a focus on statelessness, low coupling, modularity, and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.","Referring now to , a schematic of an example of a cloud computing node is shown. Cloud computing node  is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless, cloud computing node  is capable of being implemented and\/or performing any of the functionality set forth hereinabove.","In cloud computing node , there is a computer system\/server , which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that may be suitable for use with computer system\/server  include, but are not limited to, personal computer systems, server computer systems, thin clients, thick clients, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputer systems, mainframe computer systems, and distributed cloud computing environments that include any of the above systems or devices, and the like.","Computer system\/server  may be described in the general context of computer system-executable instructions, such as program modules, being executed by a computer system. Generally, program modules may include routines, programs, objects, components, logic, data structures, and so on that perform particular tasks or implement particular abstract data types. Computer system\/server  may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment, program modules may be located in both local and remote computer system storage media including memory storage devices.","As shown in , computer system\/server  in cloud computing node  is shown in the form of a general-purpose computing device. The components of computer system\/server  may include, but are not limited to, one or more processors or processing units , a system memory , and a bus  that couples various system components including system memory  to processor .","Bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus.","Computer system\/server  typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system\/server , and it includes both volatile and non-volatile media, removable and non-removable media.","System memory  can include computer system readable media in the form of volatile memory, such as random access memory (RAM)  and\/or cache memory . Computer system\/server  may further include other removable\/non-removable, volatile\/non-volatile computer system storage media. By way of example only, storage system  can be provided for reading from and writing to a non-removable, non-volatile magnetic media (not shown and typically called a \u201chard drive\u201d). Although not shown, a magnetic disk drive for reading from and writing to a removable, non-volatile magnetic disk (e.g., a \u201cfloppy disk\u201d), and an optical disk drive for reading from or writing to a removable, non-volatile optical disk such as a CD-ROM, DVD-ROM, or other optical media can be provided. In such instances, each can be connected to bus  by one or more data media interfaces. As will be further depicted and described below, memory  may include at least one program product having a set (e.g., at least one) of program modules that are configured to carry out the functions of embodiments of the invention.","The embodiments of the invention may be implemented as a computer readable signal medium, which may include a propagated data signal with computer readable program code embodied therein (e.g., in baseband or as part of a carrier wave). Such a propagated signal may take any of a variety of forms including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium including, but not limited to, wireless, wired, optical fiber cable, radio-frequency (RF), etc., or any suitable combination of the foregoing.","Program\/utility , having a set (at least one) of program modules , may be stored in memory  by way of example, and not limitation, as well as an operating system, one or more application programs, other program modules, and program data. Each of the operating system, one or more application programs, other program modules, and program data or some combination thereof, may include an implementation of a networking environment. Program modules  generally carry out the functions and\/or methodologies of embodiments of the invention as described herein.","Computer system\/server  may also communicate with one or more external devices  such as a keyboard, a pointing device, a display , etc.; one or more devices that enable a consumer to interact with computer system\/server ; and\/or any devices (e.g., network card, modem, etc.) that enable computer system\/server  to communicate with one or more other computing devices. Such communication can occur via I\/O interfaces . Still yet, computer system\/server  can communicate with one or more networks such as a local area network (LAN), a general wide area network (WAN), and\/or a public network (e.g., the Internet) via network adapter . As depicted, network adapter  communicates with the other components of computer system\/server  via bus . It should be understood that although not shown, other hardware and\/or software components could be used in conjunction with computer system\/server . Examples include, but are not limited to: microcode, device drivers, redundant processing units, external disk drive arrays, RAID systems, tape drives, and data archival storage systems, etc.","Referring now to , illustrative cloud computing environment  is depicted. As shown, cloud computing environment  comprises one or more cloud computing nodes  with which local computing devices used by cloud consumers, such as, for example, personal digital assistant (PDA) or cellular telephone A, desktop computer B, laptop computer C, and\/or automobile computer system N may communicate. Nodes  may communicate with one another. They may be grouped (not shown) physically or virtually, in one or more networks, such as private, community, public, or hybrid clouds as described hereinabove, or a combination thereof. This allows cloud computing environment  to offer infrastructure, platforms, and\/or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A-N shown in  are intended to be illustrative only and that computing nodes  and cloud computing environment  can communicate with any type of computerized device over any type of network and\/or network addressable connection (e.g., using a web browser).","Referring now to , a set of functional abstraction layers provided by cloud computing environment  () is shown. It should be understood in advance that the components, layers, and functions shown in  are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted, the following layers and corresponding functions are provided:","Hardware and software layer  includes hardware and software components. Examples of hardware components include mainframes. In one example, IBM\u00ae zSeries\u00ae systems and RISC (Reduced Instruction Set Computer) architecture based servers. In one example, IBM pSeries\u00ae systems, IBM xSeries\u00ae systems, IBM BladeCenter\u00ae systems, storage devices, networks, and networking components. Examples of software components include network application server software. In one example, IBM WebSphere\u00ae application server software and database software. In one example, IBM DB2\u00ae database software. (IBM, zSeries, pSeries, xSeries, BladeCenter, WebSphere, and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide.)","Virtualization layer  provides an abstraction layer from which the following examples of virtual entities may be provided: virtual servers; virtual storage; virtual networks, including virtual private networks; virtual applications and operating systems; and virtual clients.","In one example, management layer  may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and pricing provide cost tracking as resources are utilized within the cloud computing environment, and billing or invoicing for consumption of these resources. In one example, these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks, as well as protection for data and other resources. Consumer portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement (SLA) planning and fulfillment provides pre-arrangement for, and procurement of, cloud computing resources for which a future requirement is anticipated in accordance with an SLA. Further shown in management layer is dynamic computing resource acquisition function, which represents the functionality that is provided under the embodiments of the present invention.","Workloads layer  provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include: mapping and navigation; software development and lifecycle management; virtual classroom education delivery; data analytics processing; transaction processing; and consumer data storage and backup. As mentioned above, all of the foregoing examples described with respect to  are illustrative only, and the invention is not limited to these examples.","It is understood that all functions of the present invention as described herein typically may be performed by the dynamic computing resource acquisition functionality of management layer , which can be tangibly embodied as modules of program code  of program\/utility  (). However, this need not be the case. Rather, the functionality recited herein could be carried out\/implemented and\/or enabled by any of the layers - shown in .","It is reiterated that although this disclosure includes a detailed description on cloud computing, implementation of the teachings recited herein are not limited to a cloud computing environment. Rather, the embodiments of the present invention are intended to be implemented with any type of networked computing environment now known or later developed.","As indicated above, embodiments of the present invention provide an approach for dynamic acquisition of computing resources for workload processing among portions and\/or regions of a networked computing environment (e.g., between cloud environments).","Referring now to , A system diagram according to an aspect of the present invention is shown. As depicted, a dynamic computing resource acquisition engine (engine ) is shown. In general, engine  can be implemented as program  on computer system  of  and can implement the functions recited herein as depicted in management layer  of . In general, engine  comprises a rules engine that processes a set (at least one) of rules  and utilizes a set of computing resource registrations  (stored on a set of computer data structures ) to determine if and how to acquire a set of computing resources B from one portion\/cloud environment B of networked computing environment  to supplement a set of computing resources A in another portion\/cloud environment A of networked computing environment  to process\/handle a set of workloads  associated with portion A. It is understood that although portions A-B are shown within a single cloud environment , this need not be the case. Rather, portions A-B could be distributed among two or more cloud environments.","Along these lines, engine  will perform multiple functions. Specifically, among other functions, engine  will: determine a needed capacity for processing the set of workloads ; determine an available capacity of computing resources A in first portion A; identify a set of computing resources B external to a first portion A of networked computing environment  in response to the needed capacity exceeding the available capacity; (e.g., electronically) negotiate with at least one provider  of the set of computing resources B to utilize the set computing resources B to process the set of workloads ; and\/or responsive to the negotiation, associate the set of computing resources of provider(s)  with the first portion and\/or workload(s) . As will be further discussed below, the negotiation with provider(s)  is typically held electronically and can be based on at least one resource registration  associated with provider(s)  stored in at least one computer data structure .","As will be further discussed below, the needed capacity can be identified based upon historical data for previous workloads similar to the set of workloads (e.g., stored in the at least one computer data structure ). Moreover, resource registration(s)  can be provided in multiple ways. For example, engine  can enable functionality (e.g., user interfaces, etc.) for provider(s)  to provide resource registrations  and store the same in computer storage device(s) . Alternatively, resource registrations  can be received in storage device(s)  via a separate (e.g., third party) registration application  that can work in conjunction with engine . Regardless, resource registration(s)  typically set forth a set of terms for utilizing the set of computing resources such as pricing\/costs of usage, limitations on usage, etc.","In any event, set of rules  typically enables the functionality set forth herein. Some of this functionality is discussed in additional detail below.","A. Computing Resource Discovery\/Identification","Hardware Selection Method: As indicated above, engine  will utilize set of rules  to identify set of computing resources B external to portion A. Such identification serves the purpose of supplementing set of computing resources A associated with portion A to process set of workloads  (e.g., where the available capacity of set of computing resources A is exceeded by the capacity needed to fully process of workloads ). Regardless, this method identifies the hardware and software needed (referred to herein as computing resources and\/or infrastructure) to process\/handle workloads (e.g., computing environment expansions and\/or workload relocations). Likewise, some workloads may be driven by underlying hardware or middleware needs, further refining those systems which could be included in the cloud expansion. This method determines which computing resource types are required of possible workloads candidates. Additionally, this method may select optimal hardware configurations based on historical run-time analysis. For example, engine  may discern that an allocated instance runs for shorter periods of time if a disk subsystem meets a minimum Input\/Output Operations per Second (IOPS) threshold. Another analysis may indicate that a system with a specific CPU speed results in shorter allocation time. Yet further analysis may discover that disk speed or CPU speed do not impact allocation time spans, and therefore, any hardware may be acceptable. Engine  will apply set of rules  and perform analyses such as these and configure the corresponding environment appropriately.","B. Negotiation of Computing Resource Acquisition","Cloud Offering Method: Through this method, various static cloud owners\/providers  may offer their IaaS as expansion\/association targets for cloud environments in need of such infrastructure. In one embodiment, providers  of static clouds register their cloud with engine . During this registration process, providers  can set a price for usage, hours of availability, types of workload restrictions, origin or workload restrictions, hardware types and hardware profiles (CPU speed, disk I\/O, etc). Such prices and conditions may be set and reset at varying times, either through outreach from the static cloud (computing resources) provider , or in response to queries from the dynamic cloud provider. Additionally, during registration, the computing resources provider makes known methods that may be invoked to allocate or de-allocate an instance on their cloud. In some embodiments, these methods may be transmitted in Extensible Markup Language (XML) and describe a set of remote methods to invoke for allocation and de-allocation.","In one embodiment, allocation and de-allocation methods may be invoked using standard Hypertext Transfer Protocol (HTTP) calls by the embodiments of present invention. In other embodiments, a standard Application Programming Interface (API) would be made available to create such allocation and de-allocation calls. Yet other systems may include run-time code for the embodiments of present invention invention to execute allocation and de-allocation. This run-time code may be composed of scripts or other executable functions. In yet another embodiment, the dynamic cloud provider could provide adapters that connect to the static cloud providers using documented APIs.","Along similar lines, embodiments of the present invention enable a cloud or meta-cloud provider to dynamically consume the static computing resources of other clouds. This relationship enables a meta-cloud provider to provide automatic price advantages to their customers while further reducing computing resources investment for the meta-cloud provider. The dynamic cloud acquisition further enables the embodiments of present invention to enhance customer satisfaction by allocating the most optimal computing resources for the customer even as the dynamic cloud requirements change.","C. Computing Resources Acquisition (e.g., Environment Expansion)","Cloud Acquisition Method: In this method, the embodiments of present invention consume computing resources on public clouds environments (e.g., commercial e-commerce providers who offer such services), without requiring registration. These cloud providers are manually entered into the proposed system along with catalog entries describing the supported operating systems, hardware, storage and performance metrics. Additionally, allocation and de-allocation methods are stored within the system. These methods provide embodiments of present invention with the necessary steps to allocate and de-allocate cloud computing resources as well as the steps necessary to migrate workload to these cloud environments. These methods may be a set of HTTP calls or a set of scripts to allocate and de-allocate instances.","Cloud Auditing Method: This method audits the various sub-clouds environments (i.e., computing resources components in use by the dynamic cloud provider) to determine whether the sub-clouds are meeting their obligations. For example, embodiments of the present invention may deploy a test instance on a sub-cloud to verify the sub-cloud is meeting specifications such as disk IOPS, CPU speed, etc. If the sub-cloud is not meeting the registered specifications, remediation tasks may occur such as removing the sub-cloud from potential expansion targets, or alerting the computing resources provider that they are not meeting their Service Level Agreements (SLAs).","Cloud Selection Method: This method selects which of the various cloud providers 's computing resources B may be used for a particular need. As noted above, each cloud provider either submits an SLA for their cloud service or the cloud auditing method is used to determine a uniform measure across all cloud providers. Based on application characteristics, price, location, and other factors, a particular cloud is selected for use. The application characteristics may include CPU requirements, disk performance, etc. These characteristics may be specified by the application owners on submission, or automatically determined based upon historical data and\/or owner profiles. Cloud providers that cannot meet these performance requirements are excluded from selection. Once the list of clouds is narrowed based on performance, the cloud destination is selected based on price, and potentially, location. The following example illustrates how the concepts contained in this disclosure might be used.","Assume that an Illustrative dynamic cloud provider, \u201cNebulous cloud\u201d has no physical hardware but has written adapters to connect to cloud environment \u201cA\u201d, private cloud environment \u201cB\u201d, and public cloud \u201cC\u201d. Nebulous cloud has to evacuate virtual machines (VMs) in a particular data center because of a potential outage due to a hurricane. Nebulous cloud determines which applications need to stay in close proximity to each other, for instance keeping a customer's DB2\u00ae and WebSphere\u00ae VM's in the same location (DB2\u00ae, WebSphere\u00ae and related terms are trademarks of IBM Corporation in the United States and\/or other countries). In such a case, Nebulous cloud moves these VM's to public cloud \u201cC\u201d while migrating other applications to private cloud \u201cA\u201d Nebulous Cloud then backfills the empty VM's. A design workload could then run and send data from verification runs to a backup point (e.g., every \u201cn\u201d minutes) so that significant work is not lost should power fail.","Referring now to , a method flow diagram according to an embodiment of the present invention is shown. In step S, a needed capacity for processing a set of workloads is determined. In step S, an available capacity of computing resources in a first portion of a networked computing environment is determined. In step S, it is determined whether the needed capacity exceeds the available capacity. If not, the set of workloads is processed in the first portion in step S. If, however, the needed capacity exceeds the available capacity, a set of computing resources external to the first portion of the networked computing environment is identified in step S. In step S, electronic negotiations are conducted with at least one provider of the set of computing resources for the utilization the set of computing resources to process the set of workloads. As indicated above, the negotiation is based on at least one resource registration associated with the at least one provider stored in at least one computer data structure. Along these lines, in step S, it is determined whether the negotiation is successful. If not, electronic negotiations can be reattempted in step S (e.g., with the same computing resource provider and\/or a new computing resource provider). In any event, responsive to the negotiation being successful, the set of computing resources is associated with the first portion and or the set of workloads in step S, and the workload is processed using such set of resources.","While shown and described herein as a dynamic computing resource acquisition solution, it is understood that the invention further provides various alternative embodiments. For example, in one embodiment, the invention provides a computer-readable\/useable medium that includes computer program code to enable a computer infrastructure to provide dynamic computing resource acquisition functionality as discussed herein. To this extent, the computer-readable\/useable medium includes program code that implements each of the various processes of the invention. It is understood that the terms computer-readable medium or computer-useable medium comprise one or more of any type of physical embodiment of the program code. In particular, the computer-readable\/useable medium can comprise program code embodied on one or more portable storage articles of manufacture (e.g., a compact disc, a magnetic disk, a tape, etc.), on one or more data storage portions of a computing device, such as memory  () and\/or storage system  () (e.g., a fixed disk, a read-only memory, a random access memory, a cache memory, etc.).","In another embodiment, the invention provides a method that performs the process of the invention on a subscription, advertising, and\/or fee basis. That is, a service provider, such as a Solution Integrator, could offer to provide dynamic computing resource acquisition functionality. In this case, the service provider can create, maintain, support, etc., a computer infrastructure, such as computer system  () that performs the processes of the invention for one or more consumers. In return, the service provider can receive payment from the consumer(s) under a subscription and\/or fee agreement and\/or the service provider can receive payment from the sale of advertising content to one or more third parties.","In still another embodiment, the invention provides a computer-implemented method for dynamic computing resource acquisition. In this case, a computer infrastructure, such as computer system  (), can be provided and one or more systems for performing the processes of the invention can be obtained (e.g., created, purchased, used, modified, etc.) and deployed to the computer infrastructure. To this extent, the deployment of a system can comprise one or more of: (1) installing program code on a computing device, such as computer system  (), from a computer-readable medium; (2) adding one or more computing devices to the computer infrastructure; and (3) incorporating and\/or modifying one or more existing systems of the computer infrastructure to enable the computer infrastructure to perform the processes of the invention.","As used herein, it is understood that the terms \u201cprogram code\u201d and \u201ccomputer program code\u201d are synonymous and mean any expression, in any language, code, or notation, of a set of instructions intended to cause a computing device having an information processing capability to perform a particular function either directly or after either or both of the following: (a) conversion to another language, code, or notation; and\/or (b) reproduction in a different material form. To this extent, program code can be embodied as one or more of: an application\/software program, component software\/a library of functions, an operating system, a basic device system\/driver for a particular computing device, and the like.","A data processing system suitable for storing and\/or executing program code can be provided hereunder and can include at least one processor communicatively coupled, directly or indirectly, to memory elements through a system bus. The memory elements can include, but are not limited to, local memory employed during actual execution of the program code, bulk storage, and cache memories that provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Input\/output and\/or other external devices (including, but not limited to, keyboards, displays, pointing devices, etc.) can be coupled to the system either directly or through intervening device controllers.","Network adapters also may be coupled to the system to enable the data processing system to become coupled to other data processing systems, remote printers, storage devices, and\/or the like, through any combination of intervening private or public networks. Illustrative network adapters include, but are not limited to, modems, cable modems, and Ethernet cards.","The foregoing description of various aspects of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and, obviously, many modifications and variations are possible. Such modifications and variations that may be apparent to a person skilled in the art are intended to be included within the scope of the invention as defined by the accompanying claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other features of this invention will be more readily understood from the following detailed description of the various aspects of the invention taken in conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
