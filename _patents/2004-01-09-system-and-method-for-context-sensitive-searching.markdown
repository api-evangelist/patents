---
title: System and method for context sensitive searching
abstract: A method and system which allow the addition of context into a search involves the use of state monitors in the computing environment. The state monitors record information such as the installed hardware, software, user preferences, and operating modes. The state information is used to modify information gathered via a user search to make the search results more relevant to the user in the context of his computing environment. The monitors, along with logical operators and variables, assess the current state of the machine and modify the displayed search results by excluding irrelevant information, biasing up information relevant to the computing environment and biasing down other information less relevant to the computing environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07716158&OS=07716158&RS=07716158
owner: Microsoft Corporation
number: 07716158
owner_city: Redmond
owner_country: US
publication_date: 20040109
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","Exemplary Embodiments of the Invention"],"p":["This invention relates in general to the field of information technology. More particularly, this invention relates to a computing environment context to facilitate searches for information.","Search engines are now commonplace in many software applications. Search engines may be used for searching for text strings in applications such as word processors, help information in software applications as varied as spreadsheets and operating systems, and references and other documents. The accuracy of any one search may be judged by whether the top few returned documents are the documents actually sought by the user using the search engine. Thus, the returned list must have relevance to the search terms used in the search.","Search results that are irrelevant to the user are undesirable because the user may find herself wasting time sorting through documents that do not have applicability to either her or her computing environment. Ranking mechanisms are typically employed to rank the returned data from a search so that the most relevant documents are listed first. However, the ranking system may not perform well unless the ranking has some correlation to the context of the request for information. Some returned information is so irrelevant to the context of the user in her computing environment that it should be completely eliminated from the returned search list. Other returned search data may have increased relevance because the user may be searching for a way to better utilize the computing environment in which she is operating. Thus, an understanding of the computing environment may provide an insight into the context of a users search.","It is desirable for a search engine to have a capability to include context information concerning the computing environment in which the search is conducted. Thus, there is a need for a system and method to include context into search results so as to provide a computer user results which may be more relevant to his needs. The present invention addresses the aforementioned needs and solves them with additional advantages as expressed herein.","A method and system are discussed which allow the addition of context into search results. In one embodiment, a search of help topics may be modified by the use of state monitors in the computing environment. The state monitors record such information as the installed hardware in a computing environment, the installed software, user preferences, and operating modes. This state information may be used as context from which to modify or perform searches for information which may be related to the user operating within his computing environment. The monitors, along with logical operators and variables assess the current state of the machine for the benefit of the search being conducted.","In one embodiment, information resulting from a search of help topics may be modified after the search is completed. The modifications to the initial search results include the capability to filter out, include, bias up in ranking or bias down in ranking items of the results. The modifications made are based on the state of hardware and software elements of the user computing environment and may make the content more relevant to the user operating within his computing environment.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","110","110","112","114","120","130","150","140"]},"All of the peripheral devices represent some level of connectivity to functions and capability that affect the state of the computing device . The functionality of the computing device  is enhanced with the peripheral connectivity. If a user seeks help via a search of the help topics of any of his software applications or operating system, he may well be searching for information concerning his particular computing environment configuration. In other words, the state of his computing environment may produce a context from which to derive the most relevant help topic information to the users situation.","The present invention monitors the state of the computing environment and uses the individual states of the various components of the environment, including hardware, software, firmware, user preferences, software operating modes, and any other detectable state to provide a context to searches for information. The basic premise of the invention is that knowledge of the state of the computing environment can assist any search utility operating within such a system to find information, such as documents, that will be more relevant to the user in the computing environment.","The current invention uses a collection of monitors to provide context information. Each monitor tracks information about a particular state including whether it is currently true or false. States may be very simple like having a printer attached or complex like having an HP 770 printer attached that has low toner and is the current user's default printer. In one embodiment, the only states that are monitored are ones that have been explicitly requested by some application.","Examples of states which may be useful in determining the context of a search include hardware, software, and user preferences and controls. Hardware states may include the type, model, and make of hardware attached to the user computing device. Internet connection state, the local network and the presence of a shared printer, multiple displays, and the type of network are also examples of states in a computing environment. Examples of software states may be the version of operating system used or the application being run and the mode of the application such as editing a document or creating an equation for calculation in a spreadsheet. Examples of user related states include user preferences and conditions such as whether the user is a system administrator, whether the user has selected specific styles or modes in the generation or viewing of documents. Additional states representative of the computing environment may be monitored as new content is downloaded or new applications are installed.","One type of monitor may be an installed hardware monitor. The monitor may be used to indicate a state of specific hardware installed in the local computing environment. Based on the hardware monitors, results, such as the presentation of data resulting from help searches, may be modified. The modification may be of the form of an exclusion of search result data from presentation to the user. The modification may also involve the use of logical Boolean functions such as AND, OR and NOT in relation to data and the state of other monitors.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 2"],"b":["210","212","214","220","214"]},"In another example, if a search for instructions on how to copy a file was issued, the hardware monitor  for the CDRW device may provide state information relevant to the Result B outcome . If the search is informed that the computing environment includes a CDRW, then the Result B outcome of the search on copying files using a CDRW device may be biased up or ranked higher in the list of returned help topics. Here, the fact that there is a state monitor that indicates the presence of a CDRW device acts to modify the search outcome for the Result B by biasing up the CDRW related information under the assumption that the user will want to use the current computing environment to perform the task of coping files.","Monitors can be used in a logical manner as well to sense the combined condition of multiple states within a computing environment to enhance searches. Given a search for information concerning the printing of a file to a printer, the search may use the state monitors for both the CDRW  as well as the HP printer  under a logical AND  function. Normally, the search may only provide information concerning printing a file to a printer. However, the file to be printed may be resident on the CDRW in the user's environment. Hardware monitor  and  together may indicate that not only information concerning generic file printing may be appropriate, but also information that specifically relates to printing a file from a CDRW to an HP 720 printer may also be relevant to the user. Thus, the information concerning the CDRW as well as the HP printer may be included in the search outcome of Result C .","Additionally, logical functions may be used to rank information provided by a search. For example, given a search for information concerning printing a file from a CDRW, then the state monitors  and  could contribute to the help results provided to the user. The information found in the search of the help topics may normally include printing from a CDRW to many different types of printers. However the logical AND  combination of the states monitors  and  suggest that because the computing environment actually contains a CDRW and an HP printer, then the specific help topic search results for printing a file from a CDRW to a HP 720 printer may be biased up or ranked high in the help results passed to the user. This may add relevance to the outcome of Result E  search results for the system user.","Another example of the use of a logical function is the use of the NOT  function. Given a search on how to connect a tape backup drive device to a user computer system, information on how to connect a CDRW device may be less relevant in this user environment because a CDRW device is already connected. Also, the request was specifically concerning a tape back up unit. Thus, information concerning the connection of a CDRW device may be biased down or ranked low on the delivered results to the user. This can occur because of the state knowledge of the monitor  as well as the logical NOT function  with regard to the search Result D .","In some instances, help topic information may be excluded completely from the results presented to the user. Given that a search concerned setting options in a world wide web browser, a state monitor  detecting the presence of a functional modem on the system could exclude some information returned by the search. This excluded information may be reflected in Result F . For example, if some information returned by the help topic search for \u201cweb browser option settings\u201d was an instruction on how to connect a modem in order to connect to the Internet, then that specific information may be excluded from the Result F  presented to the user because the user environment is such that a viable connection already exists via an installed modem. This information is gleaned from state monitor  and is used to filter out or exclude information presented to the user on the basis that it is not relevant to the user's query on browser options.","Thus the  examples indicate how monitors may be used to modify the search information delivered to a user by applying the context of the computing environment to the search results. It is important to note that the state monitor information may be used either before or after a search is performed. In one embodiment, the search itself may be modified by applying the context provided by the state monitors to the search terms. Using this method, the search is performed after the context is added to the search terms. In another embodiment, the search is conducted first and the context is added in such a way as to modify the results of the search. In this manner the search terms that the user enters are used in the search and the context is added to modify the returned list. This latter case is the example of .","Using the principles of context as manifested by the use of monitors, there are multiple ways that context may be used to improve the user experience. One is to remove irrelevant results by filtering results of a search. Another is to maximize search (and browse) result relevance to the user. Another is to show appropriate help content by hiding\/showing information. Another may be to make help wizards situationally appropriate. Another potential way to use context is to dynamically load\/unload speech grammars for the most likely tasks to improve the precision of speech recognition. Context as used in searches may be particularly useful for typed queries since the words themselves are frequently ambiguous.","In order to use context to improve the user experience, an author may create an association between a particular state condition and a specific search or help topic. The association describes how the state condition affects the target search or help topic. The following paragraphs describe the different associations and the effects they achieve.","Filtering help and results may done by with an exclude association. This association establishes that when a particular state is false, the corresponding information should not be surfaced.  depicts an embodiment of the invention were the exclude function is manifested. A help topic display  contains a help topic window . In this example, a hardware monitor may detect that a CD drive is not installed in the computing environment. Thus the state is false that a CD drive is installed. As a result of the exclude function, the help topic of \u201cCopy all items to audio CD\u201d or \u201cCopy all items to CD\u201d is excluded from the help topic listing  and only the more generic \u201cCopy this file\u201d  help topic is displayed.","If a CD drive is installed on the computing environment, help topic display \u2032 may contain a help topic window \u2032. In this instance, the hardware monitor detects that a CD drive is installed in the user's computing environment. Thus the state is true that a CD drive is installed. As a result, the help topics of \u201cCopy all items to audio CD\u201d or \u201cCopy all items to CD\u201d \u2032 is not excluded and may be displayed in the help topic listing \u2032. Naturally, as is the nature of all software conditions, the sense of the state being either true or false for an activity to occur may be chosen by the implementer.","One manner to implement this behavior is to author the appropriate annotations and have the annotations for the monitor installed on the user's machine. An XML fragment for this particular exclude behavior may appear as follows:",{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002\u2002<nameSpace name=\u201cSystem.Storage.Task\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<type name=\u201cTask\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<instance topic=\u201cCopy_to_audio_CD.1009799\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<excludedBy>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002<state>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002<not>"]},{"entry":[{},"\u2002\u2002<InstalledHardware xmlns=\u2019Microsoft.Shell.Monitors\u2019>"]},{"entry":[{},"\u2002\u2002\u2002<string\/>"]},{"entry":[{},"\u2002\u2002\u2002<DeviceType>CD-R\/W<\/DeviceType>"]},{"entry":[{},"\u2002\u2002<\/InstalledHardware>"]},{"entry":[{},"\u2002<\/not>"]},{"entry":[{},"<\/state>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/excludedBy>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<\/instance>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002<instance topic=\u201cCopy_to_CD.13789\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<excludedBy>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002<state>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002<not>"]},{"entry":[{},"\u2002\u2002<InstalledHardware xmlns=\u2019Microsoft.Shell.Monitors\u2019>"]},{"entry":[{},"\u2002\u2002\u2002<string\/>"]},{"entry":[{},"\u2002\u2002\u2002<DeviceType>CD-R\/W<\/DeviceType>"]},{"entry":[{},"\u2002\u2002<\/InstalledHardware>"]},{"entry":[{},"\u2002<\/not>"]},{"entry":[{},"<\/state>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<\/excludedBy>"]},{"entry":[{},"\u2002\u2002\u2002<\/instance>"]},{"entry":[{},"\u2002\u2002\u2002...Other instances"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/type>"]},{"entry":[{},"\u2002\u2002<\/namespace>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Sometimes filtering can be misleading or confusing and it may be a better design choice to use context to affect the ranking of results. This can be done by correlating state using a bias-up or bias-down association. For example, if there is no digital camera currently connected in the users computing environment, then results having to do with a camera are less likely to be relevant to the user and should be lower in the ranking than they would be otherwise. Lower ranked search results, or help topics, may be listed lower on the list of returned documents provided to the user to affect the relevance imparted to that topic from the monitor which detects the presence of digital cameras.","In one embodiment, the invention uses a singleton object to cache each unique piece of state and to use runtime delegates to propagate state changes. A new monitor can be defined by implementing an interface or, more typically, by deriving a monitor from the set of base classes described below. In addition, other classes may be generated which may provide services such as mapping from XML to a corresponding primitive monitor instance. This class service may involve dynamically loading the monitor's assembly. Another service may restrict initial monitor evaluation time and minimum allowed polling time. Also, class services may be erected which may declaratively compose together multiple monitors using logical AND, OR, and NOT functions as well as variables.","There are a number of base classes that are provided with respect to the authoring of monitors for the invention. The base classes are as follows:","Base Monitor\u2014Provides singletons and dependency tracking.","No Polling Monitor\u2014Prevents polling for event\/push monitors.","Windows Event Monitor\u2014Listens for specific windows events.","Hardware Monitor\u2014Listens for device change events.","Registry Monitor\u2014Listens for Registry key changed events.","Setting\u2014Application push monitors for simple settings","IntSetting","DoubleSetting","StringSetting","A monitor is always evaluated when it is initially created. After that there are at least four ways that a monitor can get re-evaluated. First, an external event may trigger the monitor to re-evaluate the selected state. The monitor may be constructed to register for the external event. For example, any instance of Hardware Monitor is automatically re-evaluated when windows raises WM_DEVICECHANGE or WV_DEVMODECHANGE events.","A second way a monitor can re-evaluate its state is based on a time based event occurrence. Monitors can be setup to poll on a particular interval. A third method of updating a monitor is that an application explicitly changes state values in a monitor. For example any instance of IntSetting re-evaluates whenever the associated integer value is changed. A fourth way a monitor may be re-evaluated is that a value of a dependent monitor changes. Whenever a monitor changes its truth value or associated values, any monitors that depend on that monitor are also re-evaluated.","Defining a primitive monitor under the invention involves defining one or more constructors to create class instances. Another definition may involve a public static monitor method that has the same signature as the constructors. The base class may call constructors and insure that each unique combination of monitor parameters corresponds to a single object. Another definition involves using a protected_evaluate method which evaluates the state. The method is protected because the base class has a public_evaluate method that takes care of thread safety. Calling the SetIsTrue method at the end of the evaluation will check to see if the truth value has changed and if so, propagate the change to any more complex monitors using delegates.","The example below is a monitor definition to track whether the current user is a system administrator.",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003public class IsUserAdmin : BaseMonitor"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003public static IsUserAdminMonitor Monitor( )"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003return FindMonitor(typeof(IsUserAdminMonitor))"]},{"entry":[{},"as IsUserAdminMonitor;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public IsUserAdminMonitor( ) : base( )"]},{"entry":[{},"\u2003\u2003{ }"]},{"entry":[{},"\u2003\u2003protected override bool_Evaluate( )"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003WindowsPrincipal winPrin ="]},{"entry":[{},"new WindowsPrincipal(WindowsIdentity.GetCurrent( ));"]},{"entry":[{},"return"]},{"entry":[{},"SetIsTrue(winPrin.IsInRole(WindowsBuiltInRole.Administrator));"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"A primitive monitor may be started via a service class. The service class provides a way to map from an XML description of the state condition to the corresponding singleton for that piece of state. For example, code to start monitoring IsUserAdmin from above would look like:",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003Service service = new Service( );"]},{"entry":[{},"\u2003\u2003service.Monitor("]},{"entry":[{},"\u201c<IsUserAdmin xmlns=\u2018Microsoft.Shell.Monitors\u2019\/>\u201d);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The above code would return the IsUserAdmin singleton. In the XML syntax, the monitor class becomes the element name and the XML namespaces are used to provide information about namespaces and assemblies in a runtime system. The example above assumes that the assembly containing Microsoft.Shell.Monitors.IsUserAdmin is already loaded. The service is also capable of automatically loading an assembly if the namespace includes a fully qualified name such as:","Microsoft.Shell.Monitors, MSExplorer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","It maybe useful to generate a single monitor class which is capable of creating many different singletons. For example, we have a class InstalledHardwareMonitor that permits testing for any combination of manufacturer, device type, display name and device identifier. There are four different Monitor overloads which go from supplying just the manufacturer up to specifying all four. The XML to check to see if there is a 3Com\u2122 network adapter installed would look like:",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<InstalledHardware>"]},{"entry":[{},"\u2003\u2003<string>3Com<\/string>"]},{"entry":[{},"\u2003\u2003<string>Network adapters<\/string>"]},{"entry":[{},"<\/InstalledHardware>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Some state changes may only be detected by occasionally polling the information. Polling may be setup either when a monitor is defined or through the XML description of a state. For example, to poll IsUserAdmin every ten minutes, the following XML code may be used:","<IsUserAdmin xmlns=\u2018Microsoft.Shell.Monitors\u2019 polling\u20180:10:0\u2019\/>","Monitors can be composed using logical operators such as AND, OR, and NOT tags in XML. Just like other monitors logical monitors are singletons for each normalized combination of operands. Below are some example combinations.",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ True if they are not an admin"},{"entry":"<not>\u2009<IsUserAdmin xmlns=\u2019Microsoft.Shell.Monitors\u2019\/>\u2009<\/not>"},{"entry":"\/\/ True if they are an admin and the default browser is Internet Explorer"},{"entry":"<and xmlns=\u2019Microsoft.Shell.Monitors\u2019>"},{"entry":"\u2002<IsUserAdmin\/>"},{"entry":"\u2002<DefaultBrowser>"},{"entry":"\u2002\u2002\u2002\u2002<AllowedBrowserTypes>InternetExplorer<\/AllowedBrowsetTypes>"},{"entry":"\u2002<\/DefaultBrowser>"},{"entry":"<\/and>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Logical expressions are useful for dealing with state conditions as Booleans, but some states contain additional runtime information such as variables and tests. For example, we could create a state condition to track if the current window has .jpg files selected by the following XML.",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<and>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<CurrentWindow>"]},{"entry":[{},"\u2002\u2002<variable name=\u2019window\u2019 path=\u2019Window\u2019\/>"]},{"entry":[{},"<\/CurrentWindow>"]},{"entry":[{},"<SelectedFiles>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<binding type=\u2019SelectedFile\u2019>"]},{"entry":[{},"\u2002\u2002\u2002<variable name=\u2019window\u2019 path=\u2019Window\u2019\/>"]},{"entry":[{},"\u2002\u2002\u2002<variable name=\u2019extension\u2019 path=\u2019FileExtension\u2019\/>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/binding>"]},{"entry":[{},"<\/SelectedFiles>"]},{"entry":[{},"<eq var=\u2019extension\u2019 string=\u2019jpg\u2019\/>"]},{"entry":[{},"<\/and>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In one aspect of the invention, whenever two variables have the same name, they must evaluate to the same value. The first variable statement accesses the value from a class CurrentWindow.Window. The SelectedFiles monitor has a collection of SelectedFile objects each of which has a Window and FileExtension property. The <binding> clause may extract the variable pairs from each SelectedFile found in the collection. Finally the matching values for extension are checked against the constant. The whole clause is only true if there is a set of variable bindings that match all of the conditions. The <and> clause itself will contain all of the matching bindings which can be accessed programmatically or tested in other Boolean clauses.","The monitoring service also allows creating re-useable state conditions. For example, using the previous example and determining a parameterized rule by defining a name and signature for the rule such as:",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MyApp.SelectedExtension (string MatchExtension)"]},{"entry":[{},"The body may then be defined like as:"]},{"entry":[{},"<and>"]},{"entry":[{},"\u2002\u2002<CurrentWindow>"]},{"entry":[{},"\u2002\u2002\u2002<variable name=\u2019window\u2019 path=\u2019Window\u2019\/>"]},{"entry":[{},"<\/CurrentWindow>"]},{"entry":[{},"<SelectedFiles>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002<binding type=\u2019SelectedFile\u2019>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<variable name=\u2019window\u2019 path=\u2019Window\u2019\/>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<variable name=\u2019extension\u2019 path=\u2019FileExtension\u2019\/>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002<\/binding>"]},{"entry":[{},"<\/SelectedFiles>"]},{"entry":[{},"<eq var=\u2019extension\u2019 string=\u2019MatchExtension\u2019\/>"]},{"entry":[{},"<\/and>"]},{"entry":[{},"Invoking this rule using XML may appear as:"]},{"entry":[{},"<SelectedExtension xmlns=\u2019MyApp\u2019>"]},{"entry":[{},"\u2002\u2002<string>jpg<\/string>"]},{"entry":[{},"<\/SelectedExtension>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 4","b":["400","405","410","415","405","420","425","400"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 4","b":["400","430","405","435","440","445","450"]},"Exemplary Computing Device",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 5","FIG. 1"]},"Although not required, the invention can be implemented via an operating system, for use by a developer of services for a device or object, and\/or included within application software that operates according to the invention. Software may be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer configurations. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, appliances, lights, environmental control elements, minicomputers, mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network\/bus or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices, and client nodes may in turn behave as server nodes.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 5","b":["500","500","500","500"]},"With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer system . Components of computer system  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer system  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer system  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, Random Access Memory (RAM), Read Only Memory (ROM), Electrically Erasable Programmable Read Only Memory (EEPROM), flash memory or other memory technology, Compact Disk Read Only Memory (CDROM), compact disc-rewritable (CDRW), digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer system . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer system , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer system  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD ROM, CDRW, DVD, or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer system . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer system  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory (not shown). In addition to monitor , computer systems may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer system  may operate in a networked or distributed environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer system , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks\/buses. Such networking environments are commonplace in homes, offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer system  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer system  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer system , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web-enabled interface for applications and computing devices, making computing activities increasingly Web browser or network-oriented.","For example, MICROSOFT\u00ae's .NET\u2122 platform, available from Microsoft Corporation, includes servers, building-block services, such as Web-based data storage, and downloadable device software. While exemplary embodiments herein are described in connection with software residing on a computing device, one or more portions of the invention may also be implemented via an operating system, application programming interface (API) or a \u201cmiddle man\u201d object between any of a coprocessor, a display device and a requesting object, such that operation according to the invention may be performed by, supported in or accessed via all of .NET\u2122's languages and services, and in other distributed computing frameworks as well.","As mentioned above, while exemplary embodiments of the invention have been described in connection with various computing devices and network architectures, the underlying concepts may be applied to any computing device or system in which it is desirable to implement context in conducting searches. Thus, the methods and systems of the present invention may be applied to a variety of applications and devices. While exemplary programming languages, names and examples are chosen herein as representative of various choices, these languages, names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code that achieves the same, similar or equivalent systems and methods achieved by the invention.","The various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers, the computing device will generally include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may utilize the signal processing services of the present invention, e.g., through the use of a data processing API or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via any other form of transmission, wherein, when the program code is received and loaded into and executed by a machine, such as an EPROM, a gate array, a programmable logic device (PLD), a client computer, a video recorder or the like, or a receiving machine having the signal processing capabilities as described in exemplary embodiments above becomes an apparatus for practicing the invention. When implemented on a general-purpose processor, the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the discussed invention. Additionally, any storage techniques used in connection with the invention may invariably be a combination of hardware and software.","While the present invention has been described in connection with the preferred embodiments of the various figures, it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. Furthermore, it should be emphasized that a variety of computer platforms, including handheld device operating systems and other application specific operating systems are contemplated, especially as the number of wireless networked devices continues to proliferate. Therefore, the invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of preferred embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
