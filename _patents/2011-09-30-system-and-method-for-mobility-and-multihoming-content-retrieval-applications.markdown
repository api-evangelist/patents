---
title: System and method for mobility and multi-homing content retrieval applications
abstract: A controller function residing underneath a client application in a TCP/IP stack or session layer monitors state and status information associated with session-based application layer functions (e.g., content retrieval) and uses this information to migrate one or more sessions from a first client interface to a second client interface (e.g., 3G, 4G, LTE, 802.11x, WiMAX) and to a different application function serving entity (e.g., a different content server, cache server, service provider).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09215283&OS=09215283&RS=09215283
owner: Alcatel Lucent
number: 09215283
owner_city: Boulogne-Billancourt
owner_country: FR
publication_date: 20110930
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["The invention relates generally to multi-homed or mobile hosts and, more specifically but not exclusively, to providing seamless session migration of content retrieval as such hosts transition between communication networks.","A mobile or multi-homed host may have to change its Layer 3 network access point (i.e., IP address) while running a content retrieval session, e.g. while the client is retrieving data from a remote server. Such an interface change may be desirable because the \u201cnew\u201d interface has higher link quality or encounters lower network congestion than the \u201cold\u201d interface. The interface may also have to change when the user moves from the coverage area of one network to that of another.","For the client's new interface, a different server may be better suited to deliver the data than the server sending the data to the host's old interface. This may be due to the closer proximity of the new server to the client's new interface. It is also possible that the network connecting to one of the interfaces holds an application layer proxy but the network supporting the other interface does not hold such a proxy, or it holds a different proxy. While such proxy information may be pre-configured on the mobile\/multi-homed host, the remote address used for content retrieval has to change when the interface changes.","For at least these reasons, it is desirable to provide capabilities to change the server delivering the content together with the interface used by the client for content retrieval.","Content retrieval applications typically use stream-oriented transport protocols such as TCP, SCTP or MPTCP, which connect the client to the content server and ensure reliable and in-order delivery of the content. When TCP is used as the underlying transport protocol, the transport connection cannot be migrated to a different interface without disrupting the superseding client-server session. When SCTP is used, the client can migrate the traffic flow from the old to the new interface. However, it is not possible to change the server at the same time, since the SCTP control block on the old server holds connection-specific information which is not shared with the new server. The same problem arises if MPTCP is used for the connection. Further, SCTP and MPTCP are not generally supported on the Internet.","There are several mobility\/multi-homing protocols that accommodate the functionality of session endpoint migration on layer 3 and are therefore transparent to transport and application layers. Examples are Mobile IP protocol family, SHIM6 and LTE. Some of these solutions require additional network nodes such as home agents or specialized gateways (MIPv4, MIPv6, DSMIP, PMIP, LTE). Unfortunately, none of these solutions permits the content server to be changed during ongoing data retrieval.","There are proposals referred to as content-centric networks (e.g. Jacobson et al., \u201cNetworking Named Content\u201d, CoNEXT '09, Proceedings of the Fifth International Conference on Emerging Networking Experiments and Technologies), which permit mobility\/multi-homing and content-source migration during a content-retrieval session. These proposals, however, are not compliant with the present IP-layer and transport-layer protocols. For the same reason, they are further not compliant with the existing network infrastructure or Internet.","Application-layer solutions exist wherein attachment-point changes and server changes are built into the client application itself. Such applications can stop the data transfer midway, terminate the corresponding transport connection, re-establish a new transport connection and request the remaining data from the same or from a new server. While these solutions may be tailored to the specific application layer protocol as well as the data type of the content, they need to be implemented by every client application separately. This is very cumbersome and, inherently, does not support existing or legacy applications.","Unfortunately, while several content retrieval techniques exist to change the server delivering the content and\/or the interface used by the client for content retrieval, none of these techniques is capable of supporting existing client applications while maintaining compliance with existing and evolving transport protocols.","Various deficiencies in the prior art are addressed by embodiments enabling substantially continuous content retrieval by a multi-homed or mobile host to change its interface as well as the content server used by a client session during content retrieval without disrupting the content retrieval session on the client","In various embodiments, a controller function is implemented which resides underneath the client application in the TCP\/IP stack or on session layer. The controller function monitors various commands used by the application layer protocol to maintain state and status information associated with application layer functions (e.g., content retrieval), such that the application layer functions may be migrated to a different client interface (e.g., 3G, 4G, LTE, 802.11x, WiMAX) and or different application function serving entity (e.g., a different content server, cache server, service provider).","In one embodiment, an apparatus for migrating a content retrieval session associated with a content retrieval application at a host from a first server via a first interface to a second server via a second interface comprises a processor configured to establish a transport connection to the second server using the second interface; transmit a content request message to the second server via the second interface, the content request message including an identifier associated with content to be retrieved and an indication of content portions received by the content retrieval application; analyze a content bearing data stream received via the second interface to identify further content portions received by the content retrieval application; and forward, toward the content retrieval application, identified content portions not received by the content retrieval application.","In another embodiment, a method for migrating a content retrieval session associated with a content retrieval application at a host from a first server via a first interface to a second server via a second interface comprises establishing a transport connection to the second server using the second interface; transmitting a content request message to the second server via the second interface, the content request message including an identifier associated with content to be retrieved and an indication of content portions received by the content retrieval application; analyzing a content bearing data stream received via the second interface to identify further content portions received by the content retrieval application; and forwarding, toward the content retrieval application, identified content portions not received by the content retrieval application.","In various embodiments, a controller function residing underneath a client application in a TCP\/IP stack or session layer monitors state and status information associated with session-based application layer functions (e.g., content retrieval) and uses this information to migrate one or more sessions from a first client interface to a second client interface (e.g., 3G, 4G, LTE, 802.11x, WiMAX) and to a different application function serving entity (e.g., a different content server, cache server, service provider).","To facilitate understanding, identical reference numerals have been used, where possible, to designate identical elements that are common to the figures.","A generalized capability enabling multi-homed or mobile hosts to change the server delivering content, along with the interface used by the client, in a manner transparent to a content retrieval application is depicted and described herein, although it is noted that various other related and\/or unrelated capabilities also may be disclosed.","Various embodiments support existing client applications within multi-homed or mobile hosts to change the server delivering content together with the interface used by the client for content retrieval while maintaining compliance with existing and evolving transport protocols.","Various embodiments are applicable to mobile and\/or multi-homed hosts which use applications for content retrieval from servers residing on a network. Examples for such content retrieval sessions include downloads from webservers such as conducted during web browsing sessions, web-based video streaming sessions, HTTP-based file transfer sessions and other non-stateful content retrieval sessions. The embodiments allow a host to transparently change the network interface as well as the content-delivering server while keeping data delivery to the client application ongoing, i.e. without disrupting or restarting the application.","The embodiments provide a safe and idempotent method invocation used by the client application that supports an offset feature, and which instructs the remote server to start content delivery with a specified offset with respect to, illustratively, the beginning of the content.","In one embodiment, content retrieval is based on the Hypertext Transfer Protocol (HTTP) protocol, and the client uses the GET method to invocate the content retrieval session. The HTTP protocol supports such an offset feature. For HTTP, the RANGE command may be used which has to be inserted into the HTTP request header together with the amount of octets of content that have already been received.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","120","140"]},"According to various embodiments discussed herein, the host  is capable of transitioning a session for retrieving content from a server associated with a first network to a session for retrieving the content from a server associated with a second network without restarting the content distribution or otherwise disturbing a host content retrieval application.","The host  comprises, illustratively, a first interface - for interfacing with a first network -, a second interface - for interfacing with a second network -, a controller , a client  and an interface manager .","The client  is depicted as including a content retrieval application (CRA), which application is used to provide all necessary interactions and signaling to establish sessions with remote entities such as content servers, request the delivery of desired content from the content servers, receive the delivered content and propagate the received content toward presentation circuitry (not shown) and\/or storage devices (not shown) associated with the host .","The controller  is logically situated between the client  and interfaces . In various embodiments, the controller  monitors some or all of the control signals and\/or data traffic propagated between the client  and interfaces . The controller  is responsive to the interface manager  to adapt the use of the interfaces  by the client . In general, the operation of the controller  is not visible to the client . In various embodiments, the interface manager  causes the controller  to cause control signals and\/or data traffic to flow only via the first interface -, only via the second interface - or via some combination of the first and second interfaces .","The interface manager  causes the controller  to select which of the interfaces  will be used to support control signals and\/or data traffic between the client  and interfaces . The interface manager  is depicted as communicating with the controller  via an interface control (IC) signal path.","In some embodiments, the IC signal path is unidirectional in that the interface manager expresses which of the available interfaces  should be selected by the controller  for use by the client .","In some embodiments, the IC signal path is bidirectional in that the interface manager  and controller  communicate with each other to transmit information useful in understanding client requirements, interface requirements, condition of the interfaces , condition of the communication networks  and so on. Similarly, the interface manager  may communicate conditional trigger conditions which, when sensed by the controller  as having occurred, result in the controller  selecting a new interface  or performing some other function.","In various embodiments, the conditions associated with the selection of a particular interface  are communicated to the interface manager  via the controller . In various embodiments, such conditions are provided by a network management system (NMS), a service provider or some other entity operatively connected to the host via one or more of the interfaces . For example, congestion information associated with each of the networks  may be communicated to the controller  and\/or interface manager  via respective interfaces .","Other conditions include preferences associated with network providers, hotspot identification information identifying \u201cfree\u201d hot spots associated with a particular mobile network provider and so on. For example, in the case of a host  capable of accessing both 3G and 802.11 by respective interfaces , some hotspots may be free or less costly to use, depending upon service level agreements, inter-provider agreements and the like.","Thus, in various embodiments, the control signal propagated to the controller  by the interface manager  may be associated with one or more of a congestion level indicator received via the first interface, a congestion level indicator received via the second interface, a determination that a preferred service provider is associated with the second interface, a determination that a preferred server is associated with the second interface, a determined that a reduced cost is associated with the second interface, a determination that a performance increase is associated with the second interface, a determination that a preferred network is associated with the second interface, and so on.","In various embodiments, interface selection conditions may be used by one or both of the controller  and interface manager  to make a determination as to which of the interfaces  will be used by the client , such as for retrieving content within the context of a content retrieval session initiated and\/or managed by the content retrieval application CRA.","It will be appreciated that while two interfaces  are depicted herein, three or more interfaces  may also be utilized within the context of the various embodiments. Each of the interfaces  enables communication with the corresponding network .","Each of the networks  comprises one or more access networks, core networks and so on sufficient to enable communications between the host  and a content source . Each of the networks  is depicted as being associated with a respective domain name server (DNS) , though additional domain name servers may be used within the context of anyone network .","Each of the content sources  is depicted as comprising an interface  for communicating with a respective network , and a content server  generally adapted to establishing sessions with, interacting with, to providing content to the client . The content server  may comprise any type of content server or content distribution system capable of session-based content distribution and or streaming.","In one embodiment, the host comprises a smart phone or other mobile device configured to communicate with wireless mobile networks via the first interface - and wireless \u201chotspots\u201d by the second interface -. Specifically, in this embodiment, the first interlace - may be configured to include the hardware and software components necessary to communicate with a first communications network - (illustratively a 3G, 4G, LTE or other wireless mobile\/access network), while the second interface - may be configured to include the hardware and software components necessary to communicate with a second communications network - (illustratively a wireless \u201chotspot\u201d type of network, such as a 802.11x, WiMAX, wireless gigabit or other similar or fixed wireless network).","While omitted for clarity, it will be appreciated that the various functions associated with the host , networks , domain name servers  and content sources  generally comprise computer-based functions implemented in hardware, software or a combination of hardware and software within the context of the host . Thus, the host  includes general computing elements such as one or more processors, memory elements, input-output circuits and the like, which elements are omitted in  to enhance clarity. An embodiment of a computing device providing such elements is described in more detail below with respect to .","The various embodiments discussed herein permit a mobile\/multi-homed host to change its interface as well as the content server used by a client session during content retrieval without disrupting the content retrieval session on the client.","In various embodiments, the controller  comprises a software function implemented within a software layer underneath the software layer supporting the client. Specifically, the controller function resides underneath the client application in the TCP\/IP stack or on session layer. The controller function monitors at least some of the traffic through its respective layer and is capable of recognizing or understanding at least some of the commands used by the application layer protocol.","Generally speaking, the controller  performs four primary tasks: (1) monitoring traffic between the client  and interface  to derive therefrom the identification of requested content, and the amount of requested content received by the client; (2) identifying a server on a newly selected interface including the requested content; (3) initiating a transfer connection to the identified server; and (4) redirecting to the client that portion of the content not yet received by the client.","Specifically, when the client host's interface is to be changed, the controller determines the most appropriate server to be used for this content on the new interface. The server providing content via the old interface is denoted as the \u201cold\u201d server, while the server selected to provide content via the new interface is denoted as the \u201cnew\u201d server. It is noted that the new server and old server may be identical to each other, depending upon the configuration of the content provider equipment.","The controller function initiates a transport connection to the new server and sends a copy of, illustratively, the original content retrieval request to the new server.","The controller function also sends to the new server a command provided by, illustratively, the application layer protocol, which command instructs the new server to start content delivery according to a specified offset, which offset is based upon the amount of data already received via the prior interface.","The controller then redirects the data delivered by the new server to the client application and terminates the connection to the old server.","These steps are generally transparent to the client application, thereby facilitating a seamless transition of a retrieved content stream from a first network interface to a second network interface.","For the offset, any representation may be used that (1) sufficiently characterizes the amount of content received, (2) is compliant with the application layer protocol and, therefore, understood by the server, and (3) may be derived by monitoring received content stream(s).","The offset may comprise a number which refers to the amount of octets of content received. It may comprise a list of identifiers to data objects received, where the objects are provided via a standardized format (e.g., XML, html, etc.). The offset may refer to other metrics, such as a time interval associated with a received video stream or portions thereof, a frame count, a program clock reference (PCR) and the like.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIGS. 2-3","FIG. 1","FIGS. 2-3","FIG. 1"],"b":["110","110"]},"With respect to , a session layer implementation is provided using a library function such that the functions of the controller  are implemented within a library of functions called or accessed via the client . Further, kernel space includes a first TCP\/IP stack - associated with the first interface -, and a second TCP\/IP stack - called or accessed by the controller .","Advantageously, this implementation provides a mechanism by which existing applications on existing multi-homed or mobile hosts may be upgraded to support the functionality of the various embodiments described herein by upgrading the library function to include the functionality of the controller  and interface manager . Unfortunately, for those applications that bypass library functions by directly accessing kernel space functions, it may not be possible to implement some of the controller functions associated with the various embodiments.","With respect to , a transport layer implementation is provided by including the controller  and interface manager  within kernel space, and further integrating the controller  with the TCP\/IP stacks . Advantageously, this implementation provides a mechanism by which existing applications on existing multi-homed or mobile hosts were even applications that do not use the libraries, application programming interfaces (APIs) and so on associated with the library function will still be able to operate according to the various embodiments described herein since kernel space functions cannot be bypassed by applications as easily as user space functions such as library functions.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 4","FIG. 4","FIG. 1"],"b":["400","401","402","411"]},"At step , the client  sends a domain name server (DNS) request to the DNS - associated with the first network - via the first interface - (also denoted herein as IF) to retrieve therefrom the IP address for the first content server -. During this step, the controller  intercepts the DNS request and caches the uniform resource identifier (URI) associated with the DNS request. It will be appreciated by those skilled in the art that this process is not necessary within the context of an HTTP environment.","At step , the DNS server - propagates a DNS response back to the client . During this step, the controller  intercepts the response from the DNS server - and caches the returned IP addresses together with the URI of the request. It will be appreciated by those skilled in the art that this process is not necessary within the context of an HTTP environment.","At step , the client  initiates a transport session via the first interface - using the IP address of the first content server -, and sends a content retrieval request. The controller  intercepts the setup request, identifies the URI of the content based on the remote IP address of the connection (not necessary for HTTP), caches the content request message sent by the client and starts monitoring this transport connection.","At step , the first content server - sends a response packet to the client  which contains a response header and, potentially, a first portion of the content data. The controller intercepts this packet and responsively starts tracking the content data forwarded to the client.","At step , the first content server - continues sending a stream of packets to the client containing additional portions of the requested content data. The controller intercepts these packets and continues tracking the content portions forwarded to the client.","At step , the interface manager  sends a trigger to the controller , illustratively, the IC signal path. The trigger indicates that the controller should switch from the first interface - to the second phase -. In response to the trigger, the controller  sends a copy of the cached DNS request (or other indicator of the URI associated with the initial content request) to the second network - via the second interface -. Alternatively, the controller  creates its own DNS request containing the URI it retrieved from the client's earlier content request message. Other modifications are also contemplated by the inventors.","At step , the second DNS server - responds to the DNS request received at step  by providing a set of IP addresses for servers within the second network - that are able to provide the desired content. The controller, in one embodiment,  selects an IP address from this set, which is depicted in  as referring to the second content server -.","At step , the controller  terminates the transport connection between the first interface - and the first content server - via, for example, a TCP RST. Further, the controller  determines the aggregate amount of content the client has received via the original transport connection.","At step , the controller  establishes a new transport connection via the second interface - using the IP address associated with the second content server -. Additionally, the controller  sends via this new transport connection a copy of the content retrieval request as well as an offset into the content retrieval request, which offset accounts for the amount of content that has already been retrieved via the old transport connection via the first interface -.","At step , the second content server - sends a response packet to the controller  which includes a response header and, possibly, a first portion of the content data starting at the offset. The controller  removes the response header and forwards any received post-offset data portions to the client . The controller  also continues tracking the content data forwarded to the client. It is noted that since the client is unaware of the operation of the controller  and, in particular, the content request made by the controller , the corresponding response header is not expected by the client at this time and is therefore stripped away by the controller .","At step , the second content server - continues sending a stream of packets to the client  containing additional portions of the requested content data. The controller  intercepts these packets and continues tracking the content portions forwarded to the client.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 5","FIG. 5"]},"Referring to step  and box , the controller monitors outgoing method invocations pertaining to the application layer protocol it supports. For implementations of the controller on the transport layer using TCP or MPTCP, the controller analyzes the first outgoing data packet after the SYN\/ACK handshake initiated by the client. For SCTP, the first outgoing data packet after the INIT handshake has to be analyzed. For session layer implementations, the first data packet after the CONNECT( ) call has to be analyzed.","Referring to step  and box  the controller identifies the URI or URL that corresponds to the outgoing method invocation. This URI or URL is cached together with the IP address of the server used for content retrieval. In one embodiment, this is achieved by the controller monitoring DNS request\/response handshakes initiated by the host and by caching the URI\/URL of the DNS request together with the IP addresses contained in the DNS response. Based on these cached data and the destination address of the outgoing method invocation, the corresponding URI\/URL of the method invocation may be found. In the case of HTTP being used as application-layer protocol, the URI\/URL may be derived from the HTTP header contained in the GET call. In the case of an HTTP proxy being configured for an interface, the proxy may represent the content server.","Referring to step  and box , the controller may optionally stop monitoring if mobility\/multi-homing support is not needed for the application client or not allowed for some reason. Specifically, when a content retrieval session has been identified via the above steps, the controller may further determine if this application-layer session requires support for mobility\/multi-homing. This determination may involve external criteria, such as a number and type of interfaces supported by the host as well as other criteria. Within the context of the following controller functions, it is assumed that the content retrieval session requires such mobility\/multi-homing support.","Referring to step  and box , the controller caches session-connection identifiers or transport-connection identifiers. These identifiers are used by the controller to deliver content data portions that are destined for the client application and arrive on future connections that were initiated by the controller. In the case of the controller function residing on the session layer, such an identifier can consist of the socket descriptor and process id used by the application. In the case of the controller function residing on the transport layer, such an identifier may be a pointer to the corresponding protocol control block in the kernel.","Referring to step  and box , the controller caches the information contained in the method-invocation call sent by the client application to the content retrieval server. If HTTP is the application-layer protocol, this information refers to the HTTP request header of the HTTP GET call.","Referring to step  and box , the controller monitors and analyzes all data sent by the content server in response to the client's method invocation. The controller determines the amount of content that has been received. In this process, the controller may have to discount signaling information provided by the application layer protocol, such as HTTP response headers.","In one embodiment, the content is specified in units of octets or bits. In another embodiment, the content is represented by a list of object identifiers. In another embodiment, the content is specified in terms of a number of axis units or frames received, such as for a video stream and\/or audio stream. In another embodiment, the content is specified in terms of the time interval it would take to play the received fraction of a video stream (such as calculated using the code timestamps (DTS), presentation timestamps (PTS), program clock references (PCR) and the like).","Referring to step , the controller waits for a control signal from the interface manager to indicate that the interface used for content retrieval is to be changed. Until such time as a control signal is received, the controller continues to monitor and analyze the content portions received from the first content server - via the first interface -.","Referring to step  and box , after receiving the interface change addictive control signal the controller identifies an appropriate server for content delivery on the new interface. For that purpose the controller may initiate a DNS request on the new interface containing the URI mapped to the initial method invocation by the client application. If the DNS response does not contain the IP address of the old content server, it may be advisable to use a new content server. If HTTP is used as application layer protocol and an HTTP proxy was used on the old interface, it may be advisable to use a new content server for the new interface. If the new interface is configured with an HTTP proxy, the HTTP proxy itself may take the function of the content server to the client. In the following, we refer to \u201cold server\u201d and \u201cnew server\u201d with respect to the respective old and new interfaces. The old and the new server may be identical, different and\/or refer to proxy servers.","Referring to step  and box , the controller terminates the old transport connection to the old server. In case the host can only support one interface at a time, this step is performed before the step of identifying an appropriate server for content delivery on the new interface. If the controller is implemented on transport layer and TCP is used as transport protocol, the controller can send an RST command to terminate the connection. For this purpose, the controller needs to know the transport connection identifier. If the controller is implemented on session layer, it can close the connection via a CLOSE( ) call. For this purpose, the controller needs to know the socket descriptor and eventually the process identifier.","Referring to step , the controller establishes a new transport connection via the new interface with the new server. In embodiments where the controller function resides on transport layer, it may advantageously use the same protocol control block. However, it has to undergo the connection-setup signaling handshake with the new server via the new interface. This guarantees that further content data delivered by the new content server may be forwarded to the same client application. In embodiments where the controller resides on the session layer, content data portions received from the new content server are forwarded to the same socket descriptor on the same application layer process.","Referred to step  and box , the controller sends the cached method invocation to the new server on the new transport connection. The controller inserts an instruction containing the offset which allows the content server to omit delivery of the amount of content data that have already been received. This instruction is specific to the application layer protocol. For HTTP, the RANGE command may be used which has to be inserted into the HTTP request header together with the amount of octets of content that have already been received.","Referring to step , the controller forwards all content received on the new connection to the client application. For this purpose, it uses the session-connection or transport-connection identifiers it cached for this content retrieval session. On the new connection, the counting of passing content data portions continues so that further connection migration events may be performed. In various embodiments, the operations at step  are similar to those discussed above with respect to step  and box .",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 6"},"As depicted in , computer  includes a processor element  (e.g., a central processing unit (CPU) and\/or other suitable processor(s)), a memory  (e.g., random access memory (RAM), read only memory (ROM), and the like), a cooperating module\/process , and various input\/output devices  (e.g., a user input device (such as a keyboard, a keypad, a mouse, and the like), a user output device (such as a display, a speaker, and the like), an input port, an output port, a receiver, a transmitter, and storage devices (e.g., a tape drive, a floppy drive, a hard disk drive, a compact disk drive, and the like)).","It will be appreciated that the functions depicted and described herein may be implemented in software and\/or hardware, e.g., using a general purpose computer, one or more application specific integrated circuits (ASIC), and\/or any other hardware equivalents. In one embodiment, the cooperating process  may be loaded into memory  and executed by processor  to implement the functions as discussed herein. Thus, cooperating process  (including associated data structures) may be stored on a computer readable storage medium, e.g., RAM memory, magnetic or optical drive or diskette, and the like.","It will be appreciated that computer  depicted in  provides a general architecture and functionality suitable for implementing functional elements described herein and\/or portions of functional elements described herein. For example, the computer  provides a general architecture and functionality suitable for implementing one or more of the host , content servers , domain name servers  and\/or portions thereof and the like.","It is contemplated that some of the steps discussed herein as software methods may be implemented within hardware, for example, as circuitry that cooperates with the processor to perform various method steps. Portions of the functions\/elements described herein may be implemented as a computer program product wherein computer instructions, when processed by a computer, adapt the operation of the computer such that the methods and\/or techniques described herein are invoked or otherwise provided. Instructions for invoking the inventive methods may be stored in fixed or removable media, transmitted via a data stream in a broadcast or other signal bearing medium, and\/or stored within a memory within a computing device operating according to the instructions.","The various embodiments provide significant benefits. Specifically, systems, apparatus and methodologies based upon the various embodiments may be directly integrated into the feature set of so-called smart phones. Such integration may occur within the native hardware\/software feature set or mobile phone platform provided by phone manufacturers (e.g., Apple, Motorola, HTC, Samsung, Research In Motion, LG, Nokia and the like) or operating system vendors (e.g., Apple, Google, Microsoft and the like). Integrated features according to the various embodiments provide an efficient mechanism to perform the various functions described herein and offer product differentiation to the various hardware and software vendors.","The various embodiments discussed herein are easily adapted by mobile phone or mobile OS vendors since (1) multi-homing has become a ubiquitous feature on smart phones, (2) there are many heterogeneous network scenarios (Wi-Fi overlaying 3G\/4G) where networks are operated by different service providers, (3) no specialized network-side equipment is needed and (4) no upgrade on the server is needed. The invention therefore adds value to the phone or mobile OS without depending on any third party investment.","Advantageously, the various embodiments permit mobility or interface migration across networks and access providers for, illustratively, HTTP-based content retrieval applications. These applications represent the majority of mobile internet traffic.","Various embodiments provide these features in a manner transparent to applications, such that legacy applications and the like can then affect therefrom. Various embodiments also provide these features in a manner transparent to access providers, such that there is no need for any specialized network-side equipment such as mobility anchors and the like.","Further, remote content servers do not require any protocol upgrade as long as the application layer protocol contains an offset description in the content request message. This condition is met for HTTP and similar protocols.","Further, the content server can also be changed during mobility\/interface-migration, which allows using the optimum server for each network selected. This feature also allows operation in presence of proxies that exist in some networks, e.g. enterprise networks. Hence, in various embodiments, support is provided for session migrations between an enterprise network and a mobile network operator's network.","Although various embodiments which incorporate the teachings of the present invention have been shown and described in detail herein, those skilled in the art can readily devise many other varied embodiments that still incorporate these teachings."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The teachings herein may be readily understood by considering the following detailed description in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIGS. 2-3","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
