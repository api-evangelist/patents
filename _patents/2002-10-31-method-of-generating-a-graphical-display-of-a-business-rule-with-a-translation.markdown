---
title: Method of generating a graphical display of a business rule with a translation
abstract: Methods, systems and carrier media for viewing business rules are disclosed. Components of the business rules may be stored as entries in one or more database tables. A rule editor may access business rule components and assemble the components to form a graphical display of a business rule. The graphical display may allow the user to view, edit and/or create business rules. In some embodiments, one or more human language translations of one or more business rule components may be provided. A human language translation may be substituted for a business rule component in the graphical display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07689442&OS=07689442&RS=07689442
owner: Computer Science Corporation
number: 07689442
owner_city: El Segundo
owner_country: US
publication_date: 20021031
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF SEVERAL EMBODIMENTS"],"p":["1. Field of the Invention","The present invention generally relates to modifying software. More particularly, the present invention relates to a system and method for viewing, editing and\/or creating business rules using a graphical user interface.","2. Description of the Related Art","Insurance companies have been processing and settling claims associated with bodily injury for a long time. The task of evaluating, analyzing or estimating the amount of damage associated with one or more types of bodily injuries, especially trauma-induced bodily injuries, can be very complex. Complexity in the evaluation process often arises out of the fact that concurrent expertise in legal, medical and insurance fields is often required to arrive at a particular decision involving a bodily injury claim.","Several factors can affect the estimated amount of the claim associated with a bodily injury. Every accident is different and every injury is unique. Arriving at a customized evaluation of a bodily injury claim, which is unique for a specific accident, injury, etc. is desirable. Applying across-the-board standards may tend to result in an inequitable solution for one or more parties involved. External environmental factors, such as the experience level of a claims adjuster, record of accomplishment of the legal professionals, post-injury quality of life for the injured party, etc., all may affect the valuation of a claim.","During the past several years, many insurance companies have been using computer-based and knowledge-based claim-processing systems to process, evaluate, analyze and estimate thousands of claims in what is believed to be a fair and consistent manner. A knowledge-based claim-processing system may include an expert system which utilizes and builds a knowledge base to assist the user in decision making. Such a system may allow the insurance companies to define new business rules and\/or use previously defined rules, in real-time. The business rules are generally written by industry experts to evaluate legal, medical, insurance conditions before arriving at a valuation of a claim.","Often business rules of knowledge-based system may encode the formulas used in evaluating insurance claims in the insurance claim processing software's source code. Thus, for example, the calculation of trauma severity values may be hard-coded into the insurance claim processing software. When there is a new business requirement or a trauma severity calculation needs to be changed, it may be necessary to change the source code. Changing the source code in a large program may be very time consuming. Additionally, care should be used to ensure that a modification is made at each location where it is needed. For example, a particular parameter that needs to be changed may appear at multiple locations throughout the source code. In some cases, the need to change the source code may result in delaying the incorporation of the updated and\/or new formulas until the next software system release date. At times, a change may be needed to meet special or unique requirement of a particular user. Such a change may require that the standard formulas be modified or customized for a specific application. For example, different zones or geographic areas in the United States may have different monetary values associated with trauma severity for the same type of injury.","In comparison, some systems have been developed that use databases of rule components. Such systems may typically require that a system administrator find a particular business rule component within a database table to make changes. While viewing a database entry, it may not be apparent what affect a change to the database entry may have. For example, a database entry may be referenced by a number of business rules. If only one business rule has been identified as needing to be changed, the system administrator may have difficulty determining how to best implement the change. If the administrator changes the database entry, other business rules may be unintentionally affected. Alternately, if the administrator creates a new database entry, the database may become unnecessarily large. Another concern may be that if a mistake is made in changing a database entry, it may not be apparent in the future how or why the entry was changed, or who made the change.","Embodiments disclosed herein provide systems and methods for creating, viewing and\/or modifying business rules used by an insurance claim processing system.","A rule editor may provide a user with a graphical display of at least a portion of a business rule. The graphical display may include a representation of at least a portion of business rule source code or script. The display may include multiple windows or screens corresponding to various levels of user access privileges and\/or various business rule components. In an embodiment, a system for viewing, editing and\/or creating insurance claim processing business rules may also include a compiler. The compiler may transform business rule source code generated by a rule editor into business rule object code.","In an embodiment, a method of generating a graphical display of an insurance claim processing business rule may include providing a plurality of business rule components. For example, the business rule components may be provided as entries in one or more database tables. The method may include accessing a first business rule component. The first business rule component may include business rule structure information. A plurality of second business rule components may also be accessed. The second business rule components may include at least one program instruction. The plurality of second business rule components may be combined according to the business rule structure information to form a graphical display of at least a portion of at least one business rule. For example, combining business rule components may include joining two or more entries from two or more database tables.","In another embodiment, a method of generating a graphical display of an insurance claim processing business rule may include accessing at least one business rule template. At least one business rule template accessed may include at least one reference to at least one program instruction. Additionally, at least one business rule template accessed may include business rule structure information regarding at least one business rule. The method may further include accessing at least one program instruction. The accessed program instruction or instructions may include at least one program instruction referenced by an accessed business rule template. At least one accessed program instruction may be displayed to a user according to the business rule structure information of at least one accessed business rule template.","In certain embodiments, a method of generating a graphical display of an insurance claim processing business rule may also include accessing one or more additional business rule components (e.g., a business rule variable, a business rule parameter and\/or a value of a business rule variable). The additional business rule component(s) may be combined with the previously accessed business rule components in the graphical display of a business rule. One or more business rule component accessed may be referenced by one or more previously accessed business rule components. For example, a first business rule component accessed may include references to one or more second business rule components. In another example, business rule structural information may be accessed (e.g., in a business rule template). The business rule structural information may include a number of references to business rule components and an arrangement of the business rule components to form a business rule.","A rule editor may also determine a user's access privileges in certain embodiments. In such embodiments, the rule editor may inhibit display of a business rule or a business rule component based on the user's access privileges.","In an embodiment, a rule editor may allow a user to modify an insurance claim processing business rule. A method of modifying an insurance claim processing business rule using a rule editor may include providing a memory including a plurality of business rule components. A graphical display of at least a portion of at least one business rule may be generated by combining a plurality of business rule components. The rule editor may be configured to receive input from a user. For example, the input received may include at least one modification to at least one business rule. The rule editor may modify at least one business rule component in the memory based on the user input. For example, the rule editor may generate one or more SQL commands that modify one or more business rule components.","In an embodiment, a method of modifying a business rule may include providing a plurality of database entries. Two or more of the database entries may be combinable to form source code for at least one business rule. Two or more database entries may be combined to form a display of at least a portion of at least one business rule. Input may be received from a user modifying the display of at least one business rule. At least one SQL command may be generated. At least one SQL command may modify at least one database entry.","In certain embodiments, the method may include determining at least one modification to at least one business rule component based on the received input. In an embodiment, after receiving input from the user, the method may store a log file entry in memory. The log file entry may include information regarding at least one modification received.","In certain embodiments, the method may include determining if the user is authorized to make the modification. For example, the method may include determining access privileges of the user. In such cases, the method may further inhibit display of at least one business rule or business rule component based on the user's access privileges.","In an embodiment, a method of modifying an insurance claim adjustment business rule may provide an audit trail. For example, the method may include providing a plurality of business rule components. A graphical display of at least a portion of at least one business rule may be generated by combining a plurality of business rule components. Input may be received from a user. The input may include at least one modification to at least one business rule component. The method may store at least one log file in memory. At least one log file stored may include a record of at least one modification to at least one business rule component.","In another embodiment, a method of providing an audit trail in a rule editor may include providing a plurality of database entries. Two or more of the database entries may be combinable to form source code for at least one business rule. Two or more database entries may be combined to form a display of at least a portion of at least one business rule. Input may be received from a user. The input may modify the display of at least one business rule. At least one log file entry may be generated and stored in memory.","In various embodiments, a log file entry may include, but is not limited to an identification of the user that input at least one modification, an identification of a time that at least one modification was input and\/or an identification of a user that approved at least one modification. In an embodiment where the method includes determining the user's access privileges, the method may make the modification(s) input by the user to one or more business rule components stored in memory if the user has appropriate access privileges. Alternately, if the user does not have appropriate access privileges, the modification(s) may not be processed (e.g., made to a business rule component stored in memory).","In an embodiment, a rule editor may allow a user to create a new business rule. For example, a method of generating a business rule for an insurance claim processing system may include providing a graphical display to a user. The graphical display may be configured to combine a plurality of business rule components into a business rule display. Input may be received from the user specifying business rule structure information and at least one program instruction. The input received from the user may include selecting at least one business rule component from a display. The input received from the user may include entering at least one new business rule component. The business rule structure information and at least one program instruction may be stored in memory as business rule components. The business rule structure information and at least one program instruction may be combined in the rule editor to form at least a portion of at least one business rule. In an embodiment, the method may also include receiving input from the user specifying one or more business rule variables and\/or one or more business rule parameters. The specified business rule variables and\/or business rule parameters may be stored in memory as business rule components. Additionally, the specified business rule variables and\/or business rule parameters may be combined with the business rule structure information and at least one program instruction in the rule editor to form the business rule.","In another embodiment, a method of generating a business rule for an insurance claim processing system may include providing a plurality of program instructions and a plurality of business rule variables. At least one program instruction may be selected in a graphical display. At least one business rule variable may also be selected in a graphical display. At least one selected program instruction and at least one selected business rule variable may be arranged in the graphical display to form a business rule. The business rule may be stored in a memory. In such an embodiment, the rule editor may determine business rule structure information based on the arrangement of the at least one program instruction and\/or at least one business rule variable.","In an embodiment, a rule editor may provide a human language translation of at least one business rule component in a display of a business rule. A human language translation may include one or more words in a human language that substantially describe the meaning or effect of a business rule component. A human language translation may be context specific. In an example, a method of generating such a graphical display may include providing a plurality of business rule components. At least one human language translation of at least one business rule component may be provided. Additionally, business rule structure information may be provided. The business rule structure information may specify an arrangement of two or more business rule components to form at least one business rule. A graphical display of at least a portion of at least one business rule may be generated. At least one business rule component used to form the business rule in the graphical display may be represented by at least one corresponding human language translation.","In another example, a method of generating a graphical display may include providing a plurality of database entries. The plurality of database entries may include a plurality of business rule components. At least one database entry may include at least one reference to at least one other database entry. Additionally, at least one human language translation of at least business rule component may be provided. Two or more referenced business rule components may be accessed. At least one human language translation of at least one accessed business rule component may also be accessed. A graphical display of at least a portion of at least one business rule may be generated. The graphical display may include at least one human language translation of at least one business rule component.","In yet another example, a method of generating a graphical display may include providing a plurality of business rule parameters and at least one program instruction. At least one program instruction may reference at least one business rule parameter. At least one human language translation of at least one business rule parameter may be provided. At least one of the human language translations may include a meaning of at least one business rule parameter in the context of at least one program instruction. A graphical display including at least one program instruction may be generated. At least one program instruction in the display may include at least one human language translation of at least one referenced business rule parameter.","In some embodiments, two or more human language translations may be provided in a display. In such embodiments, two or more of the translations may be in different languages.","In certain embodiments, two or more business rules may share one or more business rule components. In such embodiments, a rule editor may identify linkages between two or more business rules and\/or two or more business rule components. For example, a method of providing a graphical display of a business rule may include providing a plurality of business rule components. Two or more of the business rule components may be combinable to form a plurality of business rules. A graphical display of at least a portion of at least one business rule may be provided to a user. Input may be received from the user selecting a business rule component in the graphical display. The method may include determining one or more other business rule components or business rules that reference the selected business rule component. A list may be displayed to the user. The list may include business rule components or business rules that reference the selected business rule component.","In another example, a method may include providing a plurality of business rule templates and a plurality of business rule components. Two or more of the business rule components may be combinable to form at least one business rule. A graphical display of at least a portion of at least one business rule may be generated according to a first business rule template. Input may be received from a user selecting at least one business rule component in the graphical display. The method may include determining at least one second business rule template that references at least one selected business rule component. A graphical display may be generated. The graphical display may include an identification of at least one second business rule template.","Additional embodiments may include a computer memory medium or computer system configured to implement methods as described above. Additional embodiments may include implementing methods as described above on two or more computers connected by a network. For example, the network may include the Internet.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.","In , an embodiment of an insurance claims processing system  may include a computer system . The term \u201ccomputer system\u201d as used herein generally includes the hardware and software components that in combination may execute one or more computer programs. The term is used broadly to encompass any device or series of interconnected devices having at least one processor which executes instructions from at least one memory medium. The computer programs may be implemented in software, hardware, or a combination of software and hardware. A computer system's hardware generally includes a processor, memory media, and Input\/Output (I\/O) devices. As used herein, the term \u201cprocessor\u201d generally describes the logic circuitry that responds to and processes the basic instructions that operate a computer system. The term \u201cmemory\u201d is used synonymously with \u201cmemory medium\u201d herein. The term \u201cmemory medium\u201d is intended to include an installation medium, e.g., a CD-ROM, or floppy disks, a volatile computer system memory such as DRAM, SRAM, EDO RAM, Rambus RAM, etc., or a non-volatile memory such as optical storage or a magnetic medium, e.g., a hard drive. The memory medium may comprise other types of memory as well, or combinations thereof. In addition, the memory medium may be located in a first computer in which the programs are executed, or may be located in a second different computer which connects to the first computer over a network. In the latter instance, the second computer provides the program instructions to the first computer for execution. Also, the computer system may take various forms, including a personal computer system, mainframe computer system, workstation, network appliance, Internet appliance, personal digital assistant (PDA), television system or other device.","The memory medium preferably stores a software program or programs for processing insurance claims as described herein. The software program(s) may be implemented in any of various ways, including procedure-based techniques, component-based techniques, and\/or object-oriented techniques, among others. For example, the software programs may be implemented using a rule-based development tool such as PLATINUM Aion\u2122 available from Computer Associates International, Inc. In one embodiment, PLATINUM Aion\u2122 may combine business rule and object-oriented technologies to create and maintain complex, knowledge-intensive applications. Software developed with PLATINUM Aion\u2122 may employ an Aion\u2122 programming language for automation of processes which may use hundreds or thousands of business rules from a knowledge base. An Aion\u2122 inference engine may automatically determine which rules to execute, when, and in what order. In various other embodiments, the software program may be implemented using other technologies, languages, or methodologies, as desired. A central processing unit (CPU) executing code and data from the memory medium includes a means for creating and executing the software program or programs according to the methods, flowcharts, and\/or block diagrams described below.","A computer system's software generally includes at least one operating system, a specialized software program that manages and provides services to other software programs on the computer system. Software may also include one or more programs to perform various tasks on the computer system and various forms of data to be used by the operating system or other programs on the computer system. The data may include but are not limited to databases, text files, and graphics files. A computer system's software generally is stored in non-volatile memory or on an installation medium. A program may be copied into a volatile memory when running on the computer system. Data may be read into volatile memory as the data is required by a program.","A server may be defined as a computer program that, when executed, provides services to other computer programs executing in the same or other computer systems. The computer system on which a server program is executing may also be referred to as a server, though it may contain a number of server and client programs. In the client\/server model, a server is a program that awaits and fulfills requests from client programs in the same or other computer systems.","The insurance claims processing system  may further include a display screen  connected to the computer system  and an insurance database  residing on an internal or external storage. The database may also be referred to as a repository. As used herein, a \u201cdatabase\u201d may include a collection of information from which a computer program may select a desired piece of data. As used herein, an \u201cinsurance database\u201d is used as a synonym for a \u201cdatabase\u201d when included in or coupled to an insurance claims processing system . System  includes memory  configured to store computer programs for execution on system , and a CPU (not shown) configured to execute instructions of computer programs residing on system . Claims processing program , also referred to as application program software , may be stored in memory . As used herein, an \u201cinsurance claims processing program\u201d  may include a software program which is configured to conduct transactions regarding insurance claims, such as by estimating the value of the insurance claims, for example.","The insurance claims processing system  may be used by an Insurance Company for various embodiments of a system and method for processing insurance claims using a Table of Contents (TOC). As used herein, an \u201cInsurance Company\u201d (IC) includes a business organization that provides insurance products and\/or services to customers. More particularly, the insurance products may pertain to providing insurance coverage for accidents and the trauma-induced bodily injuries that may result due to the accident. Examples of trauma-induced bodily injuries may include, but are not limited to: loss of limb(s); bone fractures; head, neck and\/or spinal injury, etc.","In one embodiment, on receiving a trauma-induced bodily injury, a customer may file an insurance claim with his\/her insurance organization to cover medical and other accident-related expenses. An IC may utilize a computer-based insurance claim processing system to process insurance claims. In one embodiment, the processing may include estimating a value associated with the filed insurance claim.","As used herein, an \u201cIC business transaction\u201d may be defined as a service of an IC. Examples of business transactions include, but are not limited to: insurance transactions such as filing of claims, payment of claims, application for insurance coverage, and customized benefits, etc. Business transactions may also include services related to customers, insurance providers, employers, insurance agents, investigators, etc.","As used herein, an \u201cIC insurance claim processing system\u201d includes a series of instructions executed by a computer system for processing an IC's business transactions. A claim processing system may include one or more processing tasks. A processing task may include a sequence of one or more processing steps or an ordered list or a structured list of one or more processing steps, associated with the business transaction to be processed by the claim processing system. In one embodiment, the sequence of steps may be fixed. In another embodiment the sequence of steps may be established dynamically, in real-time. In one embodiment, the sequence of one or more steps may include an initial step, a final step, one or more intermediary steps, etc. In one embodiment, an IC user may select steps to process an insurance claim in a sequential manner. In another embodiment, the IC user may select steps to process an insurance claim in a random or arbitrary manner. Examples of processing steps may include, but are not limited to: receiving an input from a user of the IC insurance claim processing system, reading a value from a database, updating a field in a database, displaying the results of a business transaction on a computer screen, etc.","In one embodiment, the insurance claim processing system utilizes object-oriented technology to process insurance claims. In another embodiment, processing of insurance claims may utilize traditional programming languages and databases to achieve the same result. Insurance objects may be defined to represent or model real-world business features of insurance products and services. Examples of insurance objects may include, but are not limited to, objects representing the following: an insurance claim; an accident report; a settlement; an estimated claim; IC service facilities, customers, and employees; business processes such as a new insurance application and calculation of a premium; interfaces to external insurance organizations; work tasks such as calculations, decisions, and assignments; temporal objects such as calendars, schedulers, and timers; and elemental data necessary to accomplish work tasks such as medical costs, risk factors, etc.","An insurance object may be represented on the computer screen by a graphical icon or by a display listing the properties of the insurance object in graphic and alphanumeric format. An insurance claim object may be configured to gather and evaluate data for processing a filed insurance claim and to automatically make decisions about the insurance claim. The one or more processing steps associated with the processing of an insurance claim may also be configured as one or more processing step objects. In one embodiment, a display screen may be associated with a processing step. The display screen may also be represented as an object. Each display screen object may include a property to point to a previous display and another property to point to a next display screen. Each property, e.g. the next display pointer on a display screen object, may be changed dynamically by using methods associated with the display screen object. One display screen object may serve as the starting point for processing insurance claims. In one embodiment, the starting point for processing insurance claims may include acquiring an insurance claim identification number from an IC system user.","In one embodiment, during the processing of an insurance claim, a business rule and\/or an IC system user input may determine that the insurance claim processing needs the execution of additional steps or tasks to continue the processing of the claim. The IC system user may provide inputs to the insurance claims processing program  at any display screen associated with a step included in the Table of Contents (see  for a discussion of the generation of the Table of Contents according to one embodiment). The insurance claim processing software may dynamically modify the number of steps and\/or the sequence of their execution to complete the claim processing transaction. An IC system user working at a client system may then iterate through the claim processing steps and arrive at an estimated value for the insurance claim.","In one embodiment, upon startup, the program  may provide a graphical user interface to display claims processing related information on display screen . It may collect user inputs, entered by using user input devices , and associated with insurance claims. It may process the user inputs, access an insurance database , use the contents of the insurance database  to estimate the insurance claim, and store it in memory  and\/or insurance database . The program  may display a value of the estimated insurance claim on display screen . A user may view the display of the estimated insurance claim on display screen , and may interactively make modifications, additions, and deletions to the estimated insurance claim.","System  may also include one or more user input devices , such as a keyboard, for entering data and commands into the insurance claim program . It may also include one or more cursor control devices  such as a mouse for using a cursor to modify an insurance claim viewed on display screen . In response to the updating of the estimated insurance claim, the insurance claim program  may store the updated insurance claim in the insurance database .",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 1","FIG. 1"],"i":["b ","a "],"b":["62","62","10","62","40","70","70","70"]},"One or more client systems  may also be connected to network . Client systems  may reside at one or more claim processing units within the insurance company. In a wide area network, client systems  may be geographically dispersed. Client systems  may be used to access insurance claim processing system servers  and insurance database . An insurance claim-processing employee may use a client system  to access the insurance claim processing system and execute insurance transactions. An employee may also use a client system  to enter insurance claim inputs into the insurance claim processing system. One or more printers  may also be connected to network  for printing documents associated with insurance claim transactions.","In , an embodiment of an insurance claims processing system  may include a computer system . In one embodiment, the insurance claims processing system may provide context-sensitive help for the processing steps. In one embodiment, the context-sensitive help for a step may be automatically invoked and displayed on display screen  when entering the step. In one embodiment, the user may interactively invoke context-sensitive help for the step by selecting one or more interface items on the display screen  with a cursor control device  such as a mouse. In one embodiment, the user may interactively invoke context-sensitive help for the step by using an input device . For example, the user may select one or more keys or a combination of keys on a keyboard to activate context-sensitive help. The context-sensitive help for each processing step may be unique, although content may appear in the context-sensitive help for two or more processing steps.","In one embodiment, information for the context sensitive help may be accessed from help database . Help database  may include one or more documents including information that may be useful to a user in performing the various processing steps associated with insurance claims processing. Help database  may also include one or more tables that provide access to the information in the documents. Each table may include a plurality of records or entries that may be used to locate help information about processing steps and\/or the elements in processing steps in the one or more documents in the help database .","In one embodiment, a search interface may be provided in the insurance claims processing system. A user may enter in the search interface one or more terms to be searched for in help database  for the insurance claims processing system. The user may then initiate the search for the one or more terms. The insurance claims processing system may then search the help database  for entries including at least one of the one or more terms. The insurance claims processing system may locate one or more entries in the help database  that include at least one of the one or more terms. The insurance claims processing system may then display information on display screen  from the located help database  entries.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 2","b":["400","402","404","406","408","402","404","406","404","406","408"]},"Index tables , header tables , and text tables  may each include one or more records or entries. The entries in index tables  may each include a field comprising one or more terms or codes that may be used as keys for locating entries in header tables  and\/or text tables . The entries in index tables  may each also include information for locating an entry in one of the one or more header tables  or text tables . In one embodiment, an identification number may be used to identify each entry in the one or more header tables  and text tables . The identification number may be referred to herein as an object ID. In one embodiment, each entry in the index tables  may include an object ID that identifies, and that may be used to locate, one entry in one of the header tables  or text tables . In one embodiment, index tables  may include two or more entries that include the same object ID. In other words, two or more index table  entries may indicate, or point to, the same entry in a header table  or text table . Each entry in index tables  may be referred to as an occurrence of the term or code included in the index table  entry in the help database .","In one embodiment, each entry in the header tables  and text tables  may include a unique object ID that may be used to locate the entry. In one embodiment, each entry in the header tables  may include a field containing a header or a portion of a header from one of the one or more documents . Alternatively, each entry in the header tables  may include information that may be used to locate a header or a portion of a header in one of the one or more documents . In one embodiment, each entry in the text tables  may include a field containing a text section or a portion of a text section from one of the one or more documents . Alternatively, each entry in the text tables  may include information that may be used to locate a text section or a portion of a text section in one of the one or more documents .","An example of locating headers and text in documents  using index tables , header tables  and text tables  follows. Index table may include index entries  and . Index entry  may include a term or code included in a header of one of the documents . Index entry  may include an object ID that may be used to locate header entry  in one of the header tables . Header entry  may include a portion or all of header  from one of the one or more documents . Alternatively, header entry  may include information that may be used to locate header  in one of the one or more documents . If index entry  includes a term, then the term may appear one or more times in header  and\/or in the portion of header  included in header entry . If index entry  includes a code, then the code may indicate that the index table entry  refers to a particular header or portion of a header in its entirety (i.e., this is not an occurrence of a term). In one embodiment, codes may be used to identify headers or sections of text in documents . In one embodiment, codes may be included as \u201chidden\u201d text in one or more sections of documents , and may be used in constructing header tables  and text tables .","Index entry  may include a term or code included in a text section of one of the documents . Index entry  may include an object ID that may be used to locate text entry  in one of the text tables . Text entry  may include a portion or all of text section  from one of the one or more documents . Alternatively, text entry  may include information that may be used to locate text  in one of the one or more documents . If index entry  includes a term, then the term may appear one or more times in text section  and\/or in the portion of text section  included in text entry . If index entry  includes a code, then the code may indicate that the index table entry  refers to a particular text section or portion of a text section (i.e., this is not an occurrence of a term).","Embodiments of index tables , header tables  and text tables  are further described in , , and , respectively.",{"@attributes":{"id":"p-0119","num":"0118"},"figref":"FIG. 3","b":["408","404","408","400"]},"An entry may include an object identifier (object ID)  for the entry. In one embodiment, the object ID  for the entry may be unique in the help database . In one embodiment, the object ID  may include information that may be used to identify the document that includes the header, and the location in the document of the header. For example, the object ID  of the first entry in the header table  of  may indicate that the entry is for the header of the first chapter of a first document included in the help database , the object ID  of the second entry may indicate that the entry is for the header of the first section of the first chapter of the first document, and so on.","An entry may also include the object identifier of a parent entry (parent ID ) for the entry. For example, the parent ID  of the entries for the headers of several sections in the first chapter of a document may be the object ID  of the entry for the header of the chapter.","An entry in the header table  may also include information on the location in the document of the header. For example, byte count  may represent the byte (character) location in the document of the start of the header. For example, the header of the first entry in the header table  illustrated in  may start at the first byte of the document; the header of the second entry may start at the 26byte of the document, etc.","In one embodiment, an entry in the header table  may also include the alphanumeric text of the header from the document in name field . When the entry is located during context sensitive help or a search, the header text in name  may be read from the header table and displayed on the display screen for the user to view. In another embodiment, the entry may not store the actual text for the header, but may instead include information for locating the text for the header in the document. In this embodiment, when the entry is located, the actual text of the header may be read from the document itself and displayed for the user.","The order of the columns and rows in the header table  as illustrated in  is exemplary and is not intended to be limiting.",{"@attributes":{"id":"p-0125","num":"0124"},"figref":["FIG. 4","FIG. 3"],"b":["408","406","408","400","404"]},"An entry may include an object identifier  (object ID), for the entry. In one embodiment, the object ID  for the entry may be unique in the help database . In one embodiment, the object ID  may include information that may be used to identify the document including the text section and the location in the document of the text section. Object ID  may also include information to distinguish a text table  entry from a header table  entry. For example, a non-zero last digit in the object ID  may indicate that the entry is a text table  entry and not a header table  entry. The entry may also include the object identifier of a parent entry (parent ID ) for the entry. The parent ID  may point to an entry in the text table  as the parent of the entry. The entry may also include a text field  that may include some or all of the text from a section of one of the one or more documents  in the help database . When the entry is located during context sensitive help or a search, the text in text field  may be read from the text table and displayed on the display screen for the user to view. Alternatively, the entry may not store the actual text, but may instead include information for locating the text in the document. In this case, when the entry is located, the actual text may be read from the document itself and displayed for the user.","The order of the columns and rows in the text table illustrated in  is exemplary and is not intended to be limiting.",{"@attributes":{"id":"p-0128","num":"0127"},"figref":"FIG. 5","b":["402","400","402","408","400","400"]},"An entry in the index table  may include an object ID . The object ID  may indicate a unique entry in a help information table in the help database. In one embodiment, the help database may include one or more header tables  as illustrated in  and one or more text tables  as illustrated in .","An entry in the index table may also include a term field . In one embodiment, term field  may include one or more terms located in the one or more documents  in the help database . In one embodiment, term field  may include a code representing a step or page in the insurance claims processing system or an element in a step in the insurance claims processing system. The codes may be used in invoking context-sensitive help in the insurance claims processing system. One embodiment may include one or more entries with one or more terms in term field  and one or more entries with codes in term field .","An entry in the index table  may also include a Soundex field . Soundex is a commonly used algorithm for encoding words so that similar sounding words encode the same. In one embodiment, the first letter of a word to be converted to a Soundex equivalent may be copied unchanged, and then subsequent letters may be encoded as follows:\n\n","Other characters may be ignored and repeated characters may be encoded as though they were a single character. Encoding may stop when the resulting string is four characters long, adding trailing \u201c0\u201ds if it is shorter. As an example, \u201cSMITH\u201d or \u201cSMYTHE\u201d may both be encoded as \u201cS530\u201d. The Soundex equivalent may be used for locating entries in index table when a user mistypes or misspells a word when initiating a search. In one embodiment, codes for steps and step elements are not given a Soundex equivalent, as a Soundex equivalent of a code is not generally useful.","Columns , , and  may be used during calculation of the relevance of an entry. For each entry in the index table , column  may indicate the position of the term or code in the text section or header in which this occurrence of the term or code appears. Column  may indicate the total count of words in the text section or header. For example, in the first entry of the index table  as illustrated in , the position column  indicates that the term \u201cSystem\u201d appears as the fifth word of the 54 words (from the total words column ) in the text section indicated by the object ID column . Examining the second entry, the term \u201cSystem\u201d appears again as the ninth word of the same text section.","In one embodiment, the word count column  may be used with entries for headers in calculating the relevance value . Different information and methods may be used for calculating the relevance of occurrences of terms and codes appearing in headers than the information and methods used to calculate the relevance for terms and codes appearing in text sections. In calculating the relevance for headers, the percent of the total word count indicated in column  may be used as part of the calculation. The word count  indicates how many words make up the one or more words (or words represented by a code) as represented in column . For example, in the header entry in the seventh row of the index table as illustrated in , the term \u201cAnatomy\u201d is in the third position (as indicated by column ) of three words (as indicated by column ) and includes one word. Thus, when calculating the relevance, \u201cAnatomy\u201d is approximately 33% of the header.","The last column of the index table  illustrated in  may hold a calculated relevance  for the occurrence. The relevance may be calculated in advance for all occurrences. Alternatively, the relevance for occurrences may not be calculated in advance and stored in the index table , but instead may be calculated dynamically as needed. In one embodiment, columns , , and  may not be stored in the index table . Instead, the information may be used to calculate the relevance and then discarded. One embodiment of the index table  may include only an object ID , a term , and a relevance value . Another embodiment of an index table  may only include an object ID  and a term , and the relevance may be calculated dynamically.","In one embodiment, occurrences in headers may be considered of higher relevance than occurrences in text sections. Therefore, different methods may be applied to calculate the relevance of occurrences in headers than are applied to calculate the relevance of occurrences in text sections. In one embodiment, relevance values may be scaled to be between 0.0 and 1.0, with 1.0 being the highest relevance. In one embodiment, the relevance may be calculated so that a relevance value of 0.0 does not occur. Note that any scale may be used for the relevance calculation, as it may be the ordering of the relevance values that is useful, and not necessarily the scale on which the relevance values are calculated.","In one embodiment, a maximum relevance value may be provided for occurrences in text sections. This maximum value may be applied as a weight or scaling factor during the relevance calculation. In one embodiment, the maximum relevance value for occurrences in text sections may also serve as the minimum value for occurrences in headers. In this embodiment, header occurrences may always have at least as high a relevance value as the highest relevance text occurrences. In another embodiment, header occurrences may always have a higher relevance value than the highest relevance text occurrences.","The following is an example of using the tables in ,  and  for context-sensitive help in an insurance claims processing system. A user of the insurance claims processing system may begin processing of an insurance claim. The system may enter the first step in the processing of the claim. The first step may be displayed in a \u201cpage\u201d on the display screen for the user. Information about the first step and the display page for the first step may be stored in the computer executing the insurance claims processing system. In this information, a code for the step, which may also be viewed as a code for the page, may be stored. When the step is entered, the code may be read from the information, and the context-sensitive help system may search the index table  for one or more entries with a code in term field  matching the code for the step. Upon locating the one or more entries in the index table , the context-sensitive help system may locate one or more entries in the header tables  and\/or text tables  in the help database  corresponding to the object IDs  in the entries in the index table . The header and text from the located one or more entries in the header tables  and\/or text tables  may then be displayed as help information items on the display screen for the user. There may be one help information item displayed for each located entry in the index table . In one embodiment, the help information items may be displayed in an order of relevance using the relevance values  for the located entries in the index table .","Elements within a step may also be given a code, and the code may be included in one or more entries in the index table . When a step in insurance claims processing is entered, one or more codes for one or elements of the step may also be read from stored information about the step. Occurrences of help information for the one or more codes may be searched for, ranked by relevance, and displayed similarly to, and along with, the code for the step as described above.","The order of the columns and rows in the index table  illustrated in  is exemplary and is not intended to be limiting.",{"@attributes":{"id":"p-0141","num":"0146"},"figref":"FIG. 6","i":"a ","b":["400","430","404","406","404","408","400","406","408","400","404","406","406","404"]},"In step , one or more index tables  may be generated. In one embodiment, a plurality of terms may be searched for in the header text of the entries in the one or more header tables  and in the text section of the entries in the one or more text tables . Each located occurrence of each term may be recorded as an entry in an index table . In one embodiment, one or more codes may be associated with headers and\/or text sections in the one or more documents, and the one or more codes may be searched for in the header tables  and text tables . Each located occurrence of each code may be recorded as an entry in an index table . In one embodiment, a code may be used to identify a particular section of text or header in the one or more documents . For example, a code may be used to identify a section of text that may be displayed as the context sensitive help for a step in the insurance claims processing step. In one embodiment, an entry may be added to the index table for each occurrence of a term or code located in the name field  of an entry in a header table  or in the text field  of an entry in a text table . In step , the object ID of the header table  entry or text table  entry where each occurrence was located may be inserted in the object ID field  of the index table  entry for the occurrence.","In step , one or more other fields may be added to the entries in the index table . In one embodiment, a Soundex equivalent  may be added to entries that include a term in the term field . In one embodiment, a Soundex equivalent  may not be added for entries with a code in the term field . In one embodiment, for each entry in the index table , the position of the term or code in the text section or header in which this occurrence of the term or code appears may be entered in a position field . In one embodiment, the total count of words in the text section or header may be entered in a total words field . In one embodiment, for each header table  entry in the index table , a word count  may be entered that indicates the number of words in the term  for this occurrence. In one embodiment, for occurrences in text tables , a word count of zero may be entered.","In step , the relevance value  for each occurrence may be calculated and entered in index table . In one embodiment, the relevance value  for each occurrence may be calculated up front, when the help database tables are generated. In another embodiment, the relevance value  for an occurrence may be calculated dynamically when the occurrence is located for display in the insurance claims processing system. In this embodiment, the index table  may not include a relevance value  for each occurrence.",{"@attributes":{"id":"p-0145","num":"0150"},"figref":["FIGS. 6","FIG. 6","FIG. 6"],"i":["b ","h ","a ","b"],"b":["6","438","152","152","450","452","152","152","152"]},{"@attributes":{"id":"p-0146","num":"0151"},"figref":["FIG. 6","FIG. 6"],"i":["c ","b "],"b":["450","152","460","146","148","0","1","462","460","460","10","1","460","462"]},"In step , the results of step , or the results of step  in embodiments in which step  is not performed, may be divided by the total words  for the text section to produce a ratio R that may represent the relevance value  for the text occurrence. In embodiments where steps  and  are not performed, in step , the word number of the term in the text section may be divided by the total words  to produce the ratio R. In one embodiment, the ratio R may be in the range (0<R<=1.0). In one embodiment, occurrences in headers may be considered more relevant than occurrences in text sections. In this embodiment, in step , R may be multiplied by a first scaling factor S to lower the relevance values of text section occurrences in relation to occurrences in headers. For example, a scaling factor S of 0.33 may be applied to R. Thus, in on embodiment, after step , R may be in the range (0<R<=S).","In one embodiment, in step , the output of step , or the output of step  in embodiments where step  is not performed, may be rounded to a number of significant digits. Various rounding methods may be used including rounding up, rounding down, and rounding to the nearest value. For example, if two significant digits are desired, the results may be rounded to produce results in the range (0.01-1.00) inclusive. In step , the results are output as the relevance value  for the occurrence in the text section. In one embodiment, the output relevance value  may be written to the index table .","The following is an example of applying one embodiment of a mechanism for calculating the relevance value for a text occurrence and is not intended to be limiting in any way. The first row of the index table  as illustrated in  shows that the term \u201cSystem\u201d appears as the fifth of 54 words in a text section. A first scaling factor S of 0.33 is to be applied and the results rounded to two significant digits. Applying the steps of :",{"@attributes":{"id":"p-0150","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Step 460:","54 \u2212 5 = 49"]},{"entry":[{},"Step 462:","49 + 1 = 50"]},{"entry":[{},"Step 464:","50\/54 = @ 0.925925"]},{"entry":[{},"Step 466:","0.925925 * 0.33 = 0.30555525"]},{"entry":[{},"Step 467:","Round (0.30555525) = 0.31"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0151","num":"0156"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"i":["d ","b ","c"],"b":["452","152","470","472","474","476","477","476","474","476","467","478","152","152","142"]},{"@attributes":{"id":"p-0152","num":"0157"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"i":["e ","d","c","e"],"b":["470","460","464","480","146","148","482","480","484","482","480","482","148","2","152","2","2"]},{"@attributes":{"id":"p-0153","num":"0158"},"figref":["FIG. 6","FIG. 6"],"i":["f ","d"],"b":["472","486","150","142","148"]},{"@attributes":{"id":"p-0154","num":"0159"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"i":["g ","d ","e ","f "],"b":["474","2","490","492","2","2","2","2","494"]},"In one embodiment, occurrences in headers may be considered more relevant than occurrences in text sections. expands on step  of and illustrates one embodiment of a mechanism for adjusting the header relevance value in relation to the relevance values of occurrences in text sections. In step , the header relevance value results of step  may be multiplied by (1\u2212S), where S is the first scaling factor as described in step  of . For example, if S=0.33, then the combined relevance value may be multiplied by (1\u22120.33)=0.67. In one embodiment, the scaled header relevance value may then be adjusted by adding the first scaling factor S to the header relevance value, so that the minimum header relevance value is higher than the maximum text section relevance value. For example, if S=0.33, then the maximum text section relevance value may be 0.33. By applying step , the minimum header relevance value may be 0.34. In one embodiment, after performing steps  and , a header relevance value R may be within the range ((S+1)<=R<=1.0).","The following is an example of applying one embodiment of a mechanism for calculating the relevance value for a header occurrence and is not intended to be limiting in any way. The eighth row of the index table  as illustrated in  shows that the term \u201cAnatomy\u201d appears as the second of five words in a header. A first scaling factor S=0.33 and a second scaling factor S=0.3 are to be used, and the results rounded to two significant digits. Applying the steps of -:",{"@attributes":{"id":"p-0157","num":"0162"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Step 470 (FIG. 6e):",{}]},{"entry":[{},"Step 480:","5 \u2212 2 = 3"]},{"entry":[{},"Step 482:","3 + 1 = 4"]},{"entry":[{},"Step 484:","4\/5 = 0.8"]},{"entry":[{},"Step 472 (FIG. 6f):"]},{"entry":[{},"Step 486:","1\/5 = 0.2"]},{"entry":[{},"Step 474 (FIG. 6g):"]},{"entry":[{},"Step 490:","0.8 * 0.3 = 0.24"]},{"entry":[{},"Step 492:","0.2 * (1.0 \u2212 0.3) = 0.14"]},{"entry":[{},"Step 494:","0.24 + 0.14 = 0.38"]},{"entry":[{},"Step 476:"]},{"entry":[{},"Step 496:","0.38 * (1.0 \u2212 0.33) = 0.2546"]},{"entry":[{},"Step 498:","0.2546 + 0.33 = 0.5846"]},{"entry":[{},"Step 477:"]},{"entry":[{},"Round (0.5846) = 0.58"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0158","num":"0163"},"figref":["FIGS. 7","FIG. 7","FIGS. 7","FIG. 7"],"i":["a ","c ","a ","b ","c ","a. "],"b":["7","7"]},"In , a user may initiate processing of an insurance claim in the insurance claims processing system in step . The insurance claims processing may begin at a first processing step, and may continue through a number of processing steps until the insurance claim has been processed. A next processing step may be determined by the user input at a current processing step. Each processing step may be displayed to the user in one or more pages on a computer display screen.","In step , the claims processing system may enter a processing step and display a page for the processing step. In step , the context-sensitive help for the page may be invoked. Context-sensitive help for each processing step may be unique, although content may appear in the context-sensitive help for two or more processing steps. Context-sensitive help may also be unique for each of the one or more pages within a processing step. In step , the page for the processing step may be displayed along with the context-sensitive help for the page. In one embodiment, the context-sensitive help for the page may instead replace the display of the page for the processing step. In one embodiment, the displayed page may occupy substantially the entire display screen on the display device. In another embodiment that supports windows, the page may be displayed in a window on the display screen. In one embodiment, the page may be divided into two or more panes, the context-sensitive help may be displayed in one or more panes on the page, and the processing step contents may appear in one or more panes on the page.",{"@attributes":{"id":"p-0161","num":"0166"},"figref":["FIG. 7","FIG. 7","FIG. 7"],"i":["b ","a ","a"],"b":["304","304","308"]},"The page may include one or more elements that have associated codes. The codes for the one or more elements on the page may also be read. In one embodiment, the elements on the page may be system-supplied \u201canswers\u201d to questions posed to the user during the claims processing. In one embodiment, the answers may be classifications for injuries, anatomical regions, etc. used during injury claims processing. In another embodiment, instead of reading codes for the elements, the text of the elements may be read.","In step , the insurance claims processing system may search one or more index tables as illustrated in  for entries including the page ID that may be used to locate help entries for the page in one or more help tables as illustrated in . The index table may also be searched for entries for the elements of the page. In one  embodiment, a code for an element is used to search the one or more index tables for entries. In another embodiment, the text of the elements is used to search the one or more index tables for entries.","In step , one or more entries may be located in the one or more index tables. In one embodiment, there will be at least one entry located for the page ID in the one or more index tables. In one embodiment, if elements of the page have an associated code, there will be at least one entry located for each code in the one or more index tables. In one embodiment, each entry in the one or more index tables may indicate an occurrence in the one or more documents included in the help database for the insurance claims processing system of the page ID, code, or term included in the index table entry.","In step , entries may be located in one or more help tables using information from the entries located in the one or more index tables for the page ID and any elements of the page. The help tables may be substantially similar to the tables illustrated in . In one embodiment, each entry in an index table includes an object ID. The one or more help tables may be searched for occurrences of the object ID in each located entry. In one embodiment, the object ID may include information used to determine which help table the object ID is found in. For example, the last two digits of the object ID may indicate if the object ID is an entry for a header table similar to the one illustrated in  or for a text table similar to the one illustrated in . In one embodiment, there may be one entry in the help tables for each object ID. In one embodiment, a particular object ID may be included in one or more entries in an index table.",{"@attributes":{"id":"p-0166","num":"0171"},"figref":["FIG. 7","FIG. 7","FIG. 7","FIG. 7"],"i":["c ","a ","a","c"],"b":["306","306","320"]},"In step , information from the located help table entries may be displayed. In one embodiment, the entries may be displayed in the order of relevance as determined in step . The help table entries may include portions of text from one or more documents related to insurance claims processing. Some help table entries may include section headers from the one or more documents. Some help table entries may include text from the bodies of sections of the one or more documents. Some help entries may include glossary information from the one or more documents. Other entries may include text from other portions of the one or more documents. In one embodiment, the relevance value may also be displayed.","In step , information describing the location of the displayed portions of text in the one or more documents may be displayed. This information may allow the user to look up (electronically or manually) located occurrences in the one or more documents. The location information may include, but is not limited to: document title, chapter title, and\/or number, chapter or section header, section number and\/or title, page number, number of occurrences in the section, etc.","In one embodiment, the page display may be split into sections, or panes. In one embodiment, the information from the located help table entries may be displayed in a first pane; the information describing the location in the one or more documents of displayed portions of text may be displayed in a second pane; and the step information may be displayed in a third pane. In one embodiment, separate windows may be used to display the information from the located help table entries, the locations in the one or more documents, and the step information.",{"@attributes":{"id":"p-0170","num":"0175"},"figref":"FIG. 8","b":["200","202","203","202","230","230","230","232"]},{"@attributes":{"id":"p-0171","num":"0176"},"figref":["FIG. 9","FIGS. 7"],"i":["a","c. "],"b":"7"},"A user may first initiate processing of an insurance claim in the insurance claims processing system. The insurance claims processing may begin at a first processing step, and may continue through a number of processing steps until the insurance claim has been processed. A next processing step may be determined by the user input at a current processing step. Each processing step may be displayed to the user in one or more pages on a computer display screen. The claims processing system may enter a processing step and display a page for the processing step.","A search interface may be presented to the user on the display screen. In one embodiment, the search interface may be displayed in response to user action. For example, the user may activate a button or menu item to cause the system to display the search interface. The search interface may be presented in any of various forms. For example, a text entry box may be displayed that accepts one or more terms or phrases to be searched for, and a button may be displayed that initiates a search when activated by the user. The text entry box may also accept special characters, for example, quotation marks around a group of terms that are to be searched for as a phrase. The text entry box may also accept logical operators; for example, an AND operator may be entered between two terms to indicate that help table entries are to be searched for that include both terms.","In step , the user may enter in the search interface one or more terms to be searched for in the help database for the insurance claims processing system. The user may then initiate the search for the one or more terms. In step , the insurance claims processing system may search the one or more index tables for entries including at least one of the one or more terms.","In step , one or more entries may be found in the one or more index tables that include at least one of the one or more terms. In step , the located entries in the index table may be used to locate help entries in the one or more help tables that include at least one of the one or more terms. In one embodiment, each entry in an index table includes an object ID. The one or more help tables may be searched for occurrences of the object ID from each of the located entries.","In step , the located help table entries may be ranked by relevance. In one embodiment, the entries in the index table may include a relevance value. The located help table entries may be ranked from highest relevance to lowest relevance. Entries with the same relevance may be ranked by any of several methods, including, but not limited to: alphabetic ranking and order of appearance in the index table.","In one embodiment, more than one term may be searched for, and located entries may be first ranked on the number of search terms the entries include. Entries that include more search terms may be ranked higher than entries with fewer search terms. For example, if the user enters three terms to be searched for, entries that include all three of the search terms may be ranked first, then entries that include two of the search terms, and finally entries that include just one of the search terms. The entries within the ranking categories may then be ranked by relevance within the category. Thus, entries with lower relevance, but more search terms, may appear higher in the overall ranking than entries with higher relevance, but fewer search terms.","In one embodiment, if there is more than one term being searched for, occurrences including more than one of the search terms may be listed once, rather than listing the occurrence for each search term included in the occurrence. A relevance value of occurrences including more than one search term may be calculated from the relevance value of each of the terms included in the occurrence. For example, if a search is initiated for the terms \u201cAnatomy\u201d and \u201cBody,\u201d and the index table  illustrated in  is searched, the term \u201cAnatomy\u201d will be located in the third entry in the table, and the term \u201cBody\u201d in the fourth entry. The third and fourth entries have the same object ID , indicating that these occurrences are from the same text section. In one embodiment, only one occurrence may be displayed on the display screen for the text section entry in text table  indicated by the object ID  of entries two and three in index table . In one embodiment, the relevance value for an occurrence including more than one term may be calculated using the following method:\n\nRelevance Value=Sum of Occurrence Relevance Values\/Number of Occurrences\n\nApplying this method to the relevance values  of the third and fourth entries in index table :\n\n(0.28+0.25)\/2=0.265\n\nIn one embodiment, the calculated relevance value for the occurrence including the two search terms (0.265) may then be rounded to 0.27. In one embodiment, the calculated relevance value may then be used in ranking the occurrence including two terms against other occurrences including two terms.\n","In step , information from the located help table entries may be displayed. In one embodiment, the entries may be displayed in the order of relevance as determined in step . The help table entries may include portions of text from one or more documents related to insurance claims processing that include one or more of the one or more search terms. Some help table entries may include section headers from the one or more documents. Some help table entries may include text from the bodies of sections of the one or more documents. Some help entries may include glossary information from the one or more documents. Other entries may include text from other portions of the one or more documents. In one embodiment, the relevance value may also be displayed.","In step , information describing the location of the displayed portions of text in the one or more documents may be displayed. This information may allow the user to look up (electronically or manually) located occurrences in the one or more documents. The location information may include, but is not limited to: document title, chapter title, and\/or number, chapter or section header, section number and\/or title, page number, number of occurrences in the section, etc.","In one embodiment, the page display may be split into sections, or panes. In one embodiment, the information from the located help table entries may be displayed in a first pane; the information describing the location in the one or more documents of displayed portions of text may be displayed in a second pane; and the step information may be displayed in a third pane. In one embodiment, separate windows may be used to display the information from the located help table entries, the locations in the one or more documents, and the step information.",{"@attributes":{"id":"p-0182","num":"0187"},"figref":["FIGS. 10 and 10","FIG. 10"],"i":"a ","b":["200","200","202","208"]},"In pane , occurrences of the search terms (located entries in the one or more help tables) may be displayed. Column  of pane  may display a location where the term is found. In one embodiment, a portion or all of a text section or a portion or all of a header from a document may be displayed in column . Column  may display a portion or all of a chapter or section title of the document where the occurrence is located. Column  may list the search term(s) that appear in the occurrence. In this example, only one term  was entered. If multiple search terms are entered, then all search terms that appear in a listed occurrence may be listed in column . Column  may display the number of search terms found in the occurrence. Column  may display the relevance value for the entries. In this example, all displayed entries have the same relevance value (1). Other embodiments may include more or fewer columns displaying the same or other information about the occurrences. In one embodiment, not all located entries may be displayed in pane . An interface item or items may be provided to the user to display other located entries. Interface items may be items displayed graphically on the screen (for example, icons) and selectable using input\/output devices such as a mouse, joystick, or arrow keys on a keyboard. Interface items may also be keyboard selections such as function keys or key combinations. For example, a button may be provided that allows the user to scroll down the list of located entries in pane .","In pane , information about the location of the occurrences in pane  may be displayed. Column  may display chapter numbers and\/or chapter headers from the one or more documents in the help database that include one or more of the located occurrences displayed in pane . In one embodiment, there may be one entry in pane  for each entry in pane . Alternatively, there may be one entry in pane  for each chapter that includes at least one of the occurrences displayed in pane . An interface item or items may be provided to allow the user to display entries not currently displayed in pane .",{"@attributes":{"id":"p-0185","num":"0190"},"figref":["FIG. 11","FIG. 10","FIG. 10","FIG. 10","FIG. 11","FIG. 10"],"b":["200","204","206","202","202","202","220","202"]},"An interface item or items may be provided to the user for hiding or showing one or more panes displaying portions of the search results or context-sensitive help. Interface items may be items displayed graphically on the screen (for example, icons) selectable using input\/output devices such as a mouse, joystick, or arrow keys on a keyboard. Interface items may also be keyboard selections such as function keys or key combinations. For example, a function key or key combination may be provided to toggle between hiding and showing pane .","The example illustrated in  is of a display with search results. In one embodiment, the hiding and showing of panes as described above may be applied to displays with panes displaying context-sensitive help for a step.","The ability to hide portions of search results or context-sensitive help may be useful in insurance claims processing systems with displays that have a limited amount of display space. For example, displays on some terminals may be limited to 24 lines of text. If the search results are displayed in two panes each using eight lines, hiding one of the panes may double the display space for the step elements from eight to sixteen lines.",{"@attributes":{"id":"p-0189","num":"0194"},"figref":"FIG. 1","i":"d ","b":["70","80","55","90","55","70","80"]},"The network A may be a local area network or wide area network, and may include communications links including, but not limited to: Ethernet, token ring, Internet, satellite, wireless, telephone, cable, DSL, and other suitable pathways. As used herein, \u201cthe Internet\u201d includes one or more substantially global networks which are generally accessible by the public (i.e., they are not proprietary or not largely characterized by controlled access). Various sources of data on the Internet may be accessed through protocols such as HTTP (HyperText Transport Protocol), HTTPS (Secure HyperText Transport Protocol), FTP (File Transfer Protocol), Telnet, NNTP (Network News Transport Protocol), SMTP (Simple Mail Transfer Protocol), and other suitable protocols. Transmission of data over the Internet is typically achieved through the use of TCP\/IP (Transmission Control Protocol\/Internet Protocol) packets.",{"@attributes":{"id":"p-0191","num":"0196"},"figref":["FIG. 2","FIG. 2"],"i":["a","b","a","a","b","b"],"b":["70","20","30","80","20","30"]},"The insurance claims processing server A may further include a display device A connected to the computer system A and an insurance database A residing on an internal or external storage. Computer system A may include memory A configured to store computer programs for execution on the computer system A and a central processing unit (or CPU, not shown) configured to execute instructions of computer programs residing on the computer system A. Insurance claims processing server software A may be stored in the memory A.","The insurance claims processing client A may further include a display device A connected to the computer system A. Computer system A includes memory A configured to store computer programs for execution on the computer system A and a central processing unit (or CPU, not shown) configured to execute instructions of computer programs residing on the computer system A. Insurance claims processing client software A, such as web browser software, may be stored in the memory A.","The insurance claims processing server A may be connected to network A. The insurance claims processing server software A and insurance database A may be distributed among the one or more servers A to provide a distributed processing system for insurance claim transactions. In other words, an insurance claim processing transaction being processed by the insurance claim processing system may be routed to any server based upon the workload distribution among servers A at the time of the transaction. Insurance claim processing system servers A may be located on a local area network or may be geographically dispersed in a wide area network.","One or more clients A may also be connected to network A. Clients A may reside at one or more claim processing units within the insurance company. In a wide area network, clients A may be geographically dispersed. Clients A may be used to access one or more insurance claim processing system servers A and associated insurance databases A. An insurance claim processing employee may use a client A to access the insurance claim processing system and execute insurance transactions. An employee may also use a client A to enter insurance claim inputs into the insurance claim processing system. As shown in , one or more printers A may also be connected to network A for printing documents associated with insurance claim transactions.","Systems A and A may also include one or more users input devices A and A, such as a keyboard, for entering data and commands into the insurance claim program A. It may also include one or more cursor control devices A and A such as a mouse for using a cursor to modify an insurance claim viewed on display screen A and\/or A. In response to the updating of the estimated insurance claim, the insurance claim server software A may store the updated insurance claim in the insurance database A.","The insurance claims processing server A and client A may be used by an Insurance Company for various embodiments of a system and method for processing insurance claims.",{"@attributes":{"id":"p-0198","num":"0203"},"figref":"FIG. 3","i":"a","b":["60","60","61","61","61"]},"In one embodiment, the rules engine A is capable of processing rules associated with assessing bodily injury damages claims. A rules engine A, in one embodiment, comprises an expert computer system which utilizes and builds a knowledge base developed in the form of business rules to assist the user in decision-making. It allows insurance companies to capture the knowledge base of their experts by defining business rules. Once created, the expertise may be used in processing many transactions, including assessing bodily injury damages claims. The business rules enable claim-processing professionals to be assisted by industry experts to evaluate legal, medical, insurance conditions before arriving at a valuation of an insurance claim.","In various embodiments, the rules engine A may be implemented and executed on various computing platforms such as personal computers and mainframes. The rules engine A may comprise a rules engine executable file on these platforms. In various embodiments, the rules engine may be accessed through various user interfaces, such as a graphical user interface for a rules engine A which is executable on a Microsoft\u2122 Windows\u2122-based server A. In one embodiment, the rules engine A may be developed using a commercial rule-based development tool such as PLATINUM Aion\u2122, which is available from Computer Associates International, Inc. In one embodiment, the rules may be customized to meet the requirements of a particular insurance company.","Business rules, often referred to simply as rules, may include executable computer program instructions. The rules include computer commands or logical instructions to achieve a certain function. For example, rules may guide an assessment or estimate of bodily injury general damages. In one embodiment, a rule may include a premise followed by one or more resulting actions. For example, in one embodiment, a business rule may state \u201cIf patient requires hospitalization after emergency care treatment then the trauma severity level should be classified as major.\u201d In this case, the premise is \u201cpatient requires hospitalization after emergency care treatment.\u201d The resulting action is \u201ctrauma severity level should be classified as major.\u201d In one embodiment, the insurance claim processing server A may include several thousand business rules. The rules may be executed or fired, under the control of the insurance claim processing software, based on certain events, user inputs, etc. Only pertinent rules, i.e., a subset of all the available rules, are typically selected and executed for processing a specific bodily injury damages claim. On execution of the plurality of rules which are applicable to a specific bodily injury claim consultation session, the insurance claim processing server software A may generate a consultation report which summarizes an assessment and\/or estimate of the bodily injuries claim.","The rules may be stored in and retrieved from an insurance database A. The type of information stored and\/or retrieved may include, but not be limited to, business objects, tables, rules, software source code, executable software, etc. In one embodiment, the database may include a relational database. In another embodiment, the database  may include an object-oriented database.","In one embodiment, the insurance claims processing server software A may include adapter software A which may provide access to the rules engine for one or more other computer-based applications or subsystems, such as an internet information server A. In one embodiment, the adapter software A provides an application programming interface (API) to the rules engine A. The adapter software A is discussed in greater detail with reference to .","In one embodiment, the insurance claims processing server software A may include a web server such as an internet information server (IIS) A. As used herein, a \u201cweb server\u201d includes a system for supplying clients with access to web pages, such as by sending the pages to clients via an appropriate protocol. In one embodiment, a web server may also be operable to generate the web pages dynamically. As used herein, a \u201cweb page\u201d includes a block of information which is configured to be displayed by a web browser A. As used herein, a \u201cweb browser\u201d or \u201cbrowser software\u201d includes software which is configured to receive and display web pages. Examples of web browsers include Internet Explorer\u2122 available from Microsoft\u2122 Corporation and Netscape Navigator\u2122 available from Netscape Communications Corporation. Typically, a web page is configured to be displayed in a single window in a web browser, wherein the window may be scrolled to view off-screen elements of the web page. Web pages may include various combinations of text, graphics, audio content, video content, and other multimedia content. A web page is often encoded in a language such as HTML (HyperText Markup Language). Web pages may be viewed in a browser on the same computer system on which the server A or web pages reside. Web pages may also be transmitted to a client computer system over a network A, such as via the HyperText Transport Protocol (HTTP) . Where the network A includes the Internet, the web pages may be transmitted via standard protocols such as TCP\/IP.","In one embodiment, the internet information server (IIS) A may include a commercial product such as Microsoft\u2122 Internet Information Server available from Microsoft\u2122 Corporation. In one embodiment, the server A may include an active server pages (ASP) controller A which is operable to generate web pages dynamically. In other words, the web pages delivered by the internet information server A may be built in real time by the ASP controller A upon a request for a page by a browser A. Active server pages may include dynamic web pages which are created, for example, by blending HTML and server-side scripting. Active server pages may be dynamically constructed to include insurance claim assessment questions and other user interface elements by starting from a template.","The web server A may be configured to generate a plurality of web pages comprising the insurance claim assessment questions. The web browser A may then be configured to display the plurality of web pages comprising the insurance claim assessment questions. The web browser A may then be configured to receive insurance claim assessment data entered by a user in response to the insurance claim assessment questions during an insurance claim consultation session and send the insurance claim assessment data to the web server A. In one embodiment, the web server A is further configured to receive the insurance claim assessment data from the web browser A and send the insurance claim assessment data to the rules engine A. The rules engine A may be further configured to generate and send the estimate of the value of the insurance claim to the web browser A through the web server A. The web browser A may be further configured to display the estimate of the value of the insurance claim received from the rules engine A through the web server A.","In one embodiment, the web server A and web browser A may be located on separate computer systems which are communicatively coupled through a network A. In another embodiment, the web server A and web browser A may be located and executed on a single computer system.","HTTP is considered to be a stateless internet access protocol. In other words, each request from a web browser A to a web server A is essentially a request-response interaction. Therefore, when a web browser A requests a web page, for example, the web server A may complete the interaction between the two by sending the page to the browser A. However, a consultation session conducted by a user through a web browser A which communicates with the rules engine A may include many successive interactions through the web server A. It would tend to be inefficient to start a rules engine executable file for each of the many interactions that may take place during a single consultation session.","Therefore, IIS sessions may be used to maintain resources and state for each of a plurality of users. A is an illustration of an insurance claims processing server software architecture for multiple clients A, A, A according to one embodiment. The first time a user connects to a suitable web site provided by the server A, a rules engine may be executed or started for that particular user and then \u201cheld\u201d in an IIS session for that user. A illustrates an example including three browsers A, A, A which correspond to and communicate with respective rules engines A, A, A. Each IIS session may include an individual ASP controller A, A, A. Each rules engine A, A, A may therefore be linked to its corresponding ASP controller A, A, A through individual adapter software A, A, A.",{"@attributes":{"id":"p-0210","num":"0215"},"figref":"FIG. 4A","b":["62","61","61"]},"As used herein, a component is a software object which includes definitions of method of communication for that software object. Typically, components are implemented according to a component architecture specification such as the Component Object Model (COM) or Distributed Component Object Model (DCOM) promulgated by Microsoft\u2122. The component architecture specification for COM enables applications and components which follow the specification to pass data, commands, and other information back and forth. A COM interface may be said to \u201cwrap\u201d an object, server, or other piece of software if that COM interface defines methods of interaction or communication with that object, server, or piece of software.","In one embodiment, the adapter software A may include one or more COM components A and a dynamic link library (DLL) A. As used herein, a DLL may include a library of executable functions or data that can be used by an application such as a Microsoft\u2122 Windows\u2122-based application. Typically, a DLL provides one or more particular functions, and a program may access those functions by creating either a static or dynamic link to the DLL. A static link remains constant during program execution, while a dynamic link is created by the program as needed. In one embodiment, the DLL A may provide a lower-level interface to the functions and methods of the rules engine A. For example, the DLL A may take advantage of published protocols for accessing a rules engine implemented with a commercial system such as PLATINUM Aion\u2122. In one embodiment, the DLL A may be provided by the supplier of the commercial system for developing a rules engine.","The COM component(s) A may then provide a higher-level interface to the DLL A, which in turn may provide an interface to the rules engine A. In other words, the \u201cbusiness intelligence\u201d may be confined to the rules engine A and DLL A, and the COM component(s) A may expose an interface which permits other pieces of software to convert data, requests, and other parameters to function calls provided by the DLL A. In one embodiment, the COM component(s) A may include methods including, but not limited to, the following: setListParameter, setSingleParameter, getNextMessage, lastErrorMessage, sendMessage, terminateSession, transactMessage, getListParameter, getSingleParameter, startServerSession, and startRefsysSession. Appropriate parameters may be defined for each method.",{"@attributes":{"id":"p-0214","num":"0219"},"figref":["FIG. 5A","FIG. 4","FIG. 9A"],"b":["65","64","69","61","61","67","64","63"],"i":["b","b"]},"In one embodiment, the ASP controller A may include at least two COM components: one which handles interactions between a web browser  and the rules engine executable file, and another which handles interactions between the web browser A and a reference system or help system executable file. The reference system executable file may provide the user with detailed assistance in conducting an insurance claim consultation session.","In one embodiment, the COM component(s) for accessing the reference system may include methods including, but not limited to, the following: addedRefsysID, initializeContentsGraphs, startSessionIfNecessary, MemberOftrueHierarchylds, lastSearchText, lastSelectedChapterObjectId, terminateSession, getFirstMessage, pageHasError, getListParameter, chapterWasSelected, writeRefsysContents, writeContextContents, writeSearchResults, writeHelpTextAsHTML, contextHelpWasSelected, isSessionStarted, searchHitWasSelected, mergeLostBoys, searchWasSelected, and iisSessionId. Appropriate parameters may be defined for each method.","In one embodiment, the COM component(s) for accessing the rules engine A may include methods including, but not limited to, the following: terminateSession, startSessionIfNecessary, writePredisplayHtml, handleExitProcessing, getFirstMessage, pageToShow, errorMessage, pageHasError, pageWasPosted, doPageTransaction, getSingleParameter, getListParameter, getListParameterNoTrim, debugIt, formatAdsDate, hasSaveButton, hasBackButton, hasNextButton, hasContentsButton, hasCommentsButton, hasUnknownButton, hasReportButton, claimKeyFormat, statusMessage, iisSessionId, and isSessionStarted. Appropriate parameters may be defined for each method.",{"@attributes":{"id":"p-0218","num":"0223"},"figref":["FIG. 6A","FIG. 6A"],"b":["100","50","110","112","114","116"],"i":"b"},"The browser page A may include an active server page or other HTML-encoded page supplied by the web server A. The page A may include one or more specialized navigation commands. In one embodiment, these specialized navigation commands may be displayed as buttons or other GUI elements. In one embodiment, the specialized navigation commands may include, for example, \u201csave\u201d A to save the status of a consultation session, \u201chelp\u201d A to access a reference system for insurance claim processing, \u201cexit\u201d A to safely exit the insurance claim consultation session, \u201cback\u201d A to safely move to a previous page of the insurance claim consultation session, and \u201creset\u201d A to reset the proper state of the browser page A. The reset command is further described with reference to .","Insurance claim assessment data and\/or insurance claim assessment questions A may also be displayed in the browser page A. For example, for a given step in the insurance claim consultation session, one or more questions may be asked regarding bodily injuries and\/or treatments thereof. A set of acceptable answers (i.e., insurance claim assessment data) may be supplied to the user, such as with a menu or series of check boxes. The user may then select from the possible answers and enter the insurance claim assessment data. The set of acceptable answers may be dynamically generated by the rules engine based upon answers to previous questions.",{"@attributes":{"id":"p-0221","num":"0226"},"figref":["FIG. 7A","FIG. 7A","FIG. 3"],"b":"200","i":"a"},"In step A, the rules engine may be wrapped with a component interface in accordance with a component architecture specification. Component interfaces are discussed in greater detail with reference to . The component interface may include one or more definitions of methods of communication or other access to the rules engine, such as by a web server. The component architecture specification may include a Component Object Model (COM) specification.","In step A, a web server may be provided, wherein the web server is configured to generate a plurality of web pages which are viewable by a web browser. The methods of communication in the component interfaces may be operable to transmit the insurance claim assessment data from the web server to the rules engine and operable to transmit the insurance claim assessment questions from the rules engine to the web server.",{"@attributes":{"id":"p-0224","num":"0229"},"figref":"FIG. 8A","b":"250"},"In step A, client software such as a web browser may be provided to a user such as an insurance company. In one embodiment, the client software may include commercial, off-the-shelf web browser software which may already be in use by an insurance company and its employees who seek to access to the insurance claim processing server. The client software may be operable to receive the insurance claim assessment data entered by the user and send the insurance claim assessment data across a network to the insurance claim processing server. The insurance claim processing server may be operable to send the estimate of the value of the insurance claim to the client software across the network. In one embodiment, the network may include the Internet.","In step A, the user may be charged for access to the insurance claim processing server through client software according to a pricing model. Various pricing models may be used with various embodiments of the hosting system and method. The pricing model may include a fee for each of a plurality of insurance claim consultation sessions conducted by the user. The pricing model may include a fee for each fixed period of access time of access by the user to the insurance claim processing server through the client software. For example, the fixed period of access time may include an hourly multiple, a weekly multiple, a monthly multiple, a yearly multiple, or a multiple of minutes. The pricing model may include a fee which varies directly with an amount of time spent accessing the insurance claim consultation session through the client software.","The user may include an insurance organization having a particular size, and the pricing model varies according to the size of the user. The size of the user may include a function of a quantity of employees of the user, a function of revenue of the user over a period of time, and\/or a function of a quantity of consultation sessions conducted by the user over a period of time. The pricing model may include a pricing discount given to the user after a particular quantity of insurance claim consultation sessions conducted by the user in a particular period of time. The insurance claim consultation session may include one or more insurance claim consultation transactions, and the pricing model may include a fee for each of a plurality of insurance claim consultation transactions conducted by the user during one or more insurance claim consultation sessions.","The method may further include charging additional users for access to the insurance claim processing server through client software according to a same or different pricing model.",{"@attributes":{"id":"p-0229","num":"0234"},"figref":"FIG. 9A","b":"302"},"In one embodiment, in step A, one of the specialized navigation commands, such as a forward command, may be selected to advance to a second page of insurance claim assessment data. In another embodiment, the user may advance to the second page by hitting \u201creturn\u201d or otherwise instructing the insurance claim processing server to provide a next page in a consultation session. In step A, the second page of insurance claim assessment data, including the specialized navigation commands, may be displayed in the browser.","In step A, after the second page of insurance claim assessment data is displayed, one of the standard navigation commands, such as the \u201cback\u201d command or button available in a toolbar or menu in a web browser, may be selected to move back to the first page of insurance claim assessment data. The first page of insurance claim assessment data may then be redisplayed.","In step A, the user may attempt to perform an insurance claim assessment task on the redisplayed first page of insurance claim assessment data. For example, the user may attempt to save a status of an insurance claim consultation by pressing a \u201csave\u201d button in the specialized buttons. The insurance claim consultation may include an interactive determination of an estimate of a value of an insurance claim through the entry of insurance claim assessment data in response to insurance claim assessment questions. The insurance claim assessment task may include selecting one of the other specialized navigation buttons provided as the user interface by insurance claim processing server. The insurance claim assessment task may also include entering new or modifying existing insurance claim assessment data. Insurance claim assessment data may include information relevant to an estimate of a value of an insurance claim, such as bodily injuries and treatments thereof. The insurance claim assessment data may include bodily injury claim assessment data, and the insurance claim assessment task may include a bodily injury claim assessment task.","In one embodiment, the state of the \u201cconversation\u201d between the browser and the insurance claim processing server may be preserved by a COM component A, as discussed with reference to . In step A, therefore, a navigation error may be generated as a result of the attempting to perform an insurance claim assessment task on the first page, when the second page is the \u201ccorrect\u201d page in the conversation. In one embodiment, a navigation error message may be generated and displayed to the user as a result of the generating the navigation error. The navigation error message may include an instruction to select a reset command, wherein the reset command is one of the specialized navigation commands.","In step A, the user may select the reset command after viewing the navigation error message. In one embodiment, the insurance claim processing server may automatically perform a reset function without user intervention as a result of the navigation error.","In step A, the second page (i.e., the \u201ccorrect\u201d page) of insurance claim assessment data may then be redisplayed. The user may then perform a second insurance claim assessment task on the redisplayed second page of insurance claim assessment data.",{"@attributes":{"id":"p-0236","num":"0241"},"figref":"FIG. 2B","b":["100","10","80"]},"In one embodiment, the configuration of each of the display screens involves defining the properties of the display screen object such as previous display screen pointer, next display screen pointer, source for data displayed, etc. Additionally, each display screen configuration may require specifying one or more user input fields, defining business rules associated with the processing of data for the display screen, etc. The configuration of the display screen object may include invocation of methods such as Load_Screen, Display_Screen, Validate_Screen, Save_Screen, Process_Screen, etc. In one embodiment, a registry is maintained for all display screen objects. FIGS. B and Ba show a few examples of the properties and methods associated with a display screen object according to two different embodiments.","In one embodiment, the table of contents (TOC) is a display screen, window, or subset of a screen which shows a roadmap, including one or more applicable steps, for processing an insurance claim. FIGS. B and Ba depict alternate embodiments of a TOC display screen. The table of contents may include one or more steps required to process insurance claims. Each step has an associated display screen. The table of contents display screen and each step display screen may be configured as an object. The number of steps included in the table of contents may be dynamically and automatically modified in real-time based on business rules, user inputs, etc. The display screen object for the table of contents includes one or more display screen objects, representing intermediary steps, selected from all display screen objects. Each display screen object may include a property, such as Display_In_TOC, which enables the display screen object and corresponding step to be included in the TOC.","In step B, the user of the insurance claims processing system  may initiate the insurance claim processing by specifying a claim number. The claim number may then be received by the insurance claim processing system . In step B, a determination may be made as to whether the specified claim number exists in the insurance claims processing system , such as in the insurance database . If it is determined that the specified claim number is a new claim number, then program control is passed on to step B. If a matching record is found in the insurance database  for the specified claim number, then program control is passed on to step B.","In step B, the IC user may set up the claim definition data for a new claim. The setting up of the claim definition data may include providing user inputs through one or more display screens, as defined in the registry for the claim definition data display screen object. Examples of claim definition data provided by the IC user may include, but are not limited to, claimant demographic data such as name, age, address, phone number, etc., injury code information such as neck, spine, arm, etc., and treatment code information such as emergency care, hospital, outpatient, physical therapy, etc. As the IC user steps through one or more display screens to enter claim definition data, the insurance claim processing software  may dynamically modify the properties of the display screen objects by using appropriate methods. For example, as an IC user enters and injury code for a neck injury, all relevant and associated display screens will be automatically displayed by using the registry for the display screen object and specific properties such as next display screen and previous display screen of the display screen object. On completing the entry of the relevant inputs associated with the definition of the claim, the IC user may submit a request to display the table of contents screen.","If the claim number is found in step B, the insurance claim processing software will generate a request to display the table of contents screen in step B. When the IC user has entered the claim definition data for a new claim number in step B, a request may be made to display the table of contents screen in step B. In step B, in response to a request to display the table of contents (TOC) display screen, the insurance claim processing software executes a function or method to generate the TOC display screen. In one embodiment, executing the function to generate the table of contents may include invoking a Create_TOC_Entry method for the TOC display screen object.  describes in further detail a flowchart for a function or method to generate the table of contents. In step B, the newly generated TOC display is sent to the display screen  for display to the IC user.",{"@attributes":{"id":"p-0242","num":"0247"},"figref":"FIG. 3B","b":"152"},"In step B, the insurance claim processing software  verifies that each display screen object has been validated, such as by checking that a Valid_Screen method has been invoked successfully. In one embodiment, the Function Re_Evaluate_All is called prior to displaying the TOC and it validates all pages. This validation process may choose to remove screens from the process because they are no longer appropriate.","In step B, a determination is made as to whether the previous screen pointer for the current display screen object is present or is not present. If no previous screen pointer is present, then that display screen object is included in the TOC display screen.","In step B, if a previous screen pointer is present and if the source of data property field indicates that the data was entered by a user, then the display screen object is included in the TOC display screen.","In step B, the list of display screen objects included with the TOC is returned to the calling function. In one embodiment, the screens are then displayed based on individual logic in their Create_TOC_Entry function. In many cases, this is default behavior. But, in some cases, such as \u201cConditional Pages,\u201d their Create_TOC_Entry logic may choose not to show them because their conditions are not met.",{"@attributes":{"id":"p-0247","num":"0252"},"figref":"FIG. 4B","b":["500","50","10"]},"In one embodiment, for example, the first step may include the user entering a claim identification number as discussed with reference to . In another embodiment, entering the claim identification number may already have taken place, and the \u201cfirst step\u201d may actually include a step such as the entry of an injury code or treatment code during the consultation session.","In step B, one or more of the steps in the processing of the insurance claim may be proceeded through to arrive at an intermediary step. For example, the user may enter injury and\/or treatment data in response to questions presented in one or more steps. In step B, the intermediary step may then be displayed. As used herein, the intermediary step is any step between the first and final steps in the plurality of steps of processing the insurance claim. Proceeding through one or more of the steps in the processing of the insurance claim may include entering information relevant to the estimate of the value of the insurance claim in the one or more of the steps. In step B, the entered information may be stored in a memory.","In step B, a table of contents may be displayed upon the entry of an appropriate command by the user. For example, the user may select a GUI element such as a button or hit a designated keyboard key to display the table of contents. The table of contents may be generated according to the method discussed with reference to . The table of contents may include an ordered list of the steps associated with the processing of the insurance claim, and the ordered list of steps may include the first step, the intermediary step, and any steps in between the first step and the intermediary step. Therefore, the table of contents may essentially show a \u201croadmap\u201d of the business process for processing insurance claims. The ordered list of steps may be dynamically modifiable in response to the entry of information in a step. In other words, steps may be added to or deleted from said dynamically modifiable ordered list of steps in response to the entry of information. In various embodiments, the table of contents may be shown as a display screen, window, or other subset of a screen.","In step B, the user may be permitted to select one of the steps from the ordered list of steps associated with the processing of the insurance claim in the table of contents. In step B, the selected step may then be displayed in response to the user selecting the selected step in the table of contents. In step B, in one embodiment, the entered information in the selected step may be modified and stored after selecting the step in the table of contents.","After displaying the selected step, the intermediary step may be redisplayed upon entry of an appropriate command by the user. In one embodiment, in other words, the user may go back to the previously displayed step, either through the table of contents or through entry of a suitable \u201cback\u201d command. The processing of the insurance claim may be continued after redisplaying the intermediary step by permitting the user to enter additional information relevant to the estimate of the value of the insurance claim.","The ordered list of steps in the table of contents may include a final step. In one embodiment, the final step may be selected at any time from the table of contents. The final step may include a consultation report concerning an estimate of the value of the insurance claim. The consultation report may include information related to the estimate of the value of the insurance claim, wherein the estimate may be calculated based on information entered in the first step and in any steps in between the first step and the intermediary step.","In one embodiment, all or substantially all of the steps associated with using the table of contents may be executed within a single session of an application program executing on a computer system. Therefore, the user of the system need not exit the system and restart from the beginning in order to go back to a previously encountered step.","FIGS. B and Ba depict screen shots which illustrate an example of a table of contents display screen according to two embodiments.","FIGS. B and Ba illustrate exemplary properties and methods associated with a display screen object according to two embodiments.",{"@attributes":{"id":"p-0257","num":"0262"},"figref":"FIG. 2C","b":["100","10","80","10","60","40","40"]},"In step C, one or more insurance codes which are relevant to the value of the insurance claim may be specified in an insurance claims processing program executable on a computer system. Each insurance code may be considered a contributing factor to the estimated value of the insurance claim. These insurance codes may be entered by a user during a consultation session in which a claimant reports his or her injuries and\/or treatments for a particular insurance claim. In specifying the one or more insurance codes, a claim number for the insurance claim may be specified, and the one or more insurance codes may be associated with the claim number. The insurance codes may include one or more injury codes, wherein each injury code specifies a bodily injury incurred by the claimant. The insurance codes may include one or more treatment codes, wherein each treatment code specifies a treatment for at least one of the bodily injuries incurred by the claimant.","A consultation report typically includes an estimated value or range of estimated values for each bodily injury claim. In determining the range of fair estimate value, the insurance claims processing system typically uses contributing factor values, along with regional factors such as cost of living, etc. to arrive at a monetary estimate. Contributing factor values due to bodily injury, in one embodiment, are generally directly proportional to the level of trauma experienced during and after the bodily injury. The insurance claims processing system may be operable to calculate a numeric value for an insurance code wherein, for example, the claimant is in a coma and is on life support system because of a bodily injury. Treatment received for the bodily injury, such as hospitalization, surgery, physical therapy, etc. may contribute to decrease the trauma and hence may result in a decrease of the estimated value. In one embodiment, the contributing factors associated with the treatment code may therefore have a negative value.","In step C, one or more contributing factor values may be determined. Each of the contributing factor values corresponds to one of the insurance codes, and each of the contributing factor values measures an estimated impact of the corresponding insurance code on the value of the insurance claim. The insurance claim may include a bodily injury claim, and the contributing factor values may be relevant to an estimate of a bodily injury general damages value of the bodily injury claim. Each of the one or more contributing factor values may include a numeric value. In one embodiment, determining the one or more contributing factor values may include calculating the one or more contributing factor values as a function of one or more business rules. In other words, a rules engine or other expert system may be configured to calculate dynamically the amount that each insurance code adds to or subtracts from the estimate of the value of the insurance claim. This amount contributed by one insurance code may be dependent on the amounts contributed by other specified insurance codes. In one embodiment, the expert system may be developed using the PLATINUM Aion\u2122 rule-based development environment available from Computer Associates International, Inc. In one embodiment, this determination of the contributing factor values may take place after substantially all of the insurance codes have been entered and when a consultation report is desired to be displayed.","In step C, each of the one or more insurance codes and the corresponding contributing factor values may be stored in a table. An example of such a table is illustrated in .  shows a table with a column for the insurance codes (e.g., injury codes and treatment codes) C and a column for contributing factor values . The values shown are for purposes of example only and are not intended to be limiting. The table may include one or more rows, wherein each row of the table includes one of the insurance codes and the corresponding contributing factor value. In one embodiment, the table may be implemented as a table in a relational database. In one embodiment, the table may be implemented in accordance with object-oriented techniques of software design.","In step C, the table may be sorted by the contributing factor values to generate a sorted table of contributing factor values C and corresponding insurance codes C. The table may be sorted by contributing factor value C in ascending or descending order. A set of contributing factors (i.e., insurance codes) from the sorted table which meet one or more selection criteria may be identified and reported. The set of contributing factors may be included in a consultation report which may be printed and\/or displayed on a display device. The selection criteria may include a selection of the largest positive of the one or more contributing factor values up to a certain quantity, such as five. Therefore, identifying and reporting the set of contributing factors from the sorted table may include identifying and reporting a sorted set of the largest contributing factor values up to the certain quantity. In one embodiment, each contributing factor value in the sorted set of the largest positive contributing factor values adds to the estimate of the value of the insurance claim. The selection criteria may include the largest negative of the one or more contributing factor values up to a certain quantity, such as five. Therefore, identifying and reporting the set of contributing factors from the sorted table may include identifying and reporting a sorted set of the largest negative contributing factor values up to the certain quantity. Each contributing factor value in the sorted set of the largest negative contributing factor values subtracts from the estimate of the value of the insurance claim.",{"@attributes":{"id":"p-0263","num":"0268"},"figref":"FIG. 2D","b":["100","20"]},"Business rules, often referred to simply as rules, may include executable computer program instructions. The business rules may invoke, operate or execute formulas to calculate trauma severity values associated with personal bodily injury claims. In one embodiment, the formulas include computer commands or logical instructions to achieve a certain mathematical function, e.g., assess trauma severity value for a spinal injury. Each formula, in one embodiment, may include a function operating on one or more inputs to compute one or more outputs. In another embodiment, the formulas may include a plurality of functions operating on one or more inputs to compute one or more outputs. In one embodiment, the function may be mathematical such as add, subtract, divide, etc. In another embodiment, the function may be based on custom algorithms, for example an algorithm to calculate phantom pain associated with bodily injuries. In one embodiment, the insurance claim processing system may include several formula types, wherein each formula may be specified by a unique function. The formulas may be invoked, operated, executed or fired, under the control of the business rules. Only the pertinent formulas, e.g., a subset of all the available formulas, are typically be selected and executed for processing a specific bodily injury damages claim.","In step D, the user or the administrator of the insurance claim processing system  provides a database , which is external to the rules engine, and is capable of storing and\/or retrieving information associated with insurance claim processing. As used herein, the term \u201cexternal\u201d means that the database is separate from the rules engine. The type of information stored and\/or retrieved may include, but not be limited to, business objects, tables, formulas, software source code, executable software, etc. In one embodiment, the database may be relational. In another embodiment, the database  may be an object-oriented database.","In one embodiment, the database  may include a plurality of tables, which may be accessed by a translator program, also referred to as an application program, to transform, create, generate, or instantiate the data stored in the tables into formulas. In one embodiment, the database may include a plurality of knowledge bases often storing knowledge data in the form of tables. Knowledge-bases may include, but not be limited to, data, tables, program instructions, business rules, objects, etc. The data stored in the knowledge bases may also be in the form of objects. In another embodiment, the translator program may transform data stored in tables into static instances of an object class. In one embodiment, for example, the formula data table shown by way of example in  includes data structured in a tabular format, i.e., a table with several rows and columns. In one embodiment, the Formulas class of objects may include static instances wherein each static instance is a direct representation of a row of data in the formula data table. Thus, the formula data table may include all the relevant information necessary to transform each row of the formula data table into a static instance of the Formula object class.","In one embodiment, the entire set of business formulas may be grouped or classified into a plurality of formula types. Each formula may have a common construction style, e.g., a function operating on one or more inputs to compute one or more outputs. In one embodiment, there may be several hundred pre-defined formula types. New formula types to meet user requirement may also be created and added to the existing formula type list or table. Data included in the example formulas data table shown in  may typically include information necessary to create a static instance of the Formula object class. The formula data may include a plurality of entries in a table in a database, and the formula data may include a formula identifier D, a sequence number D, a section description, a page identifier, a prompt identifier, an answer identifier, a mathematical function or operation D, a numeric value D, and other suitable elements.","In step D, the translator program initiates the transformation of data stored in the formula data table to formulas i.e. the creation of static instances of the Formula object class, by reading the formula data. In one embodiment, methods such as KBOpen and ControlLoad may be used to open and load the formulas data table. Every knowledge base table has a corresponding object class name in the insurance claim-processing program . For example, the formula data knowledge base table may have a corresponding formula object class. The contents of each row are read one row at a time.","In step D, data entry in each column of the formulas data table is used to transform, or create an instance of the formula class object in the formulas knowledge base. The ControlLoad function determines which set of instances of the Formula class must first be deleted using DeleteInstances (\u2018Formulas\u2019) and recreated via Class(Formulas).Load function.","Once created, the instance of the formulas class in the formulas knowledge-base may be invoked, operated, or executed by the business rules by using the calculate method with FormulaID and the sequence number as the parameters. In one embodiment, the calculate method gathers all of the static instances with a specified FormulaID along with a sequence number. The calculate method then interprets the operations and controls how the formula is executed. The resulting output value is used to calculate the trauma severity value.","Although not explicitly shown, Steps D and D may be repeated, in one embodiment, to read all rows of the formulas data table and transform the data to as many instances of the formulas class. On invocation or execution of the static instance, the insurance claim processing software  may compute a trauma severity value applicable to a specific bodily injury claim consultation transaction, and print a consultation report, which summarizes an assessment or estimate of the bodily injury general damages claim.","In one embodiment, the task of updating, modifying, or revising the formulas may be simplified. To update a formula, the user or the administrator of the insurance claim processing system  may update the data entries stored in the formulas data table. By executing steps D and D, the instances of the formulas class may be automatically updated to reflect the changes.","In another embodiment, the task of customizing of formulas to meet specific user requirements may also be simplified. The customizing of formula data in response to business requirements results in customized formulas. To add a new formula type, the user or the administrator of the insurance claim processing system  may add a new instance of the formulas class and update the database . By executing steps D and D, the formulas may be automatically customized to reflect the new changes.",{"@attributes":{"id":"p-0274","num":"0279"},"figref":"FIG. 3D"},{"@attributes":{"id":"p-0275","num":"0280"},"figref":["FIG. 2E","FIG. 1"],"b":["100","20","10","60"],"i":"a. "},"In step E, the user or the administrator of the insurance claim processing system  provides a database , which is external to the rules engine, and is capable of storing and\/or retrieving information associated with insurance claim processing. The type of information stored and\/or retrieved may include, but not be limited to, business objects, tables, rules, software source code, executable software, etc. In one embodiment, the database may be relational. In another embodiment, the database  may be an object-oriented database.","In one embodiment, the database  may include a plurality of tables, often referred to as knowledge-bases, which may be accessed by a translator program or other application program to transform, create or generate the data stored in the tables into rules. In another embodiment, the application program may transform data stored in tables into static instances of an object class. In one embodiment, for example, the rules data table as shown by way of example in E includes data structured in a tabular format, i.e., a table with several rows and columns. The rules data table includes all the relevant information necessary to transform each row of the rules data table into an equivalent business rule.","The entire set of business rules may be grouped or classified into a plurality of rule styles. Each rule style may have a common construction style, i.e., the syntax for the rule premise and the resulting rule action may be common. In one embodiment, there may be several hundred pre-defined rules styles. New rule styles to meet user requirement may also be created and added to the existing rule style list or table. Data included in the rules data table shown in E may typically include information necessary to construct the rule premise and the resulting one or more rule actions. In one embodiment, the rules data table shown in E may include, but not be limited to, columns such as an injury code E, an adjustment type, an adjustment amount E, a rule style E, a rule name E, etc.","Other types of tables stored in the database , in one embodiment, may include a LineText table as shown by way of example in E and a Template table as shown by way of example in E. The LineText table may store lines or other elements of text which may be used to generate the rules. The Template table may include information which may be used by the application program to read each row of data from the rules data table and transform, create or generate the rules data into a rule. In one embodiment, every rule style may have an entry in the Template table. The location to store the transformed rule, the name of the rules data table, the name of the rule style, an identifier for the line text, etc. may also be included in the Template table, in one embodiment.","In step E of , the application program initiates the transformation of data stored in the rules data table to rules by reading the rules data. In one embodiment, the KBOpen and the ControlLoad methods may be used to open and load the rules data knowledge base table. In one embodiment, every knowledge base table has a corresponding object class name in the insurance claim-processing program . The contents of each row are read one at a time.","In step E, data entries in each column of the rules data table are used to transform, create, or construct the rules. Entries for columns like rules style and rules name in the rules data table may be used as a key to find a matching record in the Template table. Other data stored in the columns of the rules data may be used to build the rule premise and\/or the resulting one or more rules action.","The specific syntax used to construct the rule is specified in the Template for a given rule style E and a rule name E. For example, in one embodiment, rule style RS000 and rule name RN000 may specify:\n\nIFMATCH Col#1 WITH Col#2=Col#3 THEN Col#4=Col#5\n\nwhere Col#1 through Col#5 entries may be read from data stored in columns 1 through 5 of the rules data table shown in E and where rule style=RS000 and rule name=RN000. The text string corresponding to the above transformed rule may be stored in the Line_Text E field of the LineText table shown in E using Line_TextID E as a location reference obtained from the Template table shown in E.\n","Although not explicitly shown, Steps E and E may be repeated, in one embodiment, to read all rows of the rules data knowledge base table and transform the data to a plurality of rules. On execution of the plurality of rules, applicable to a specific bodily injury claim consultation transaction, the insurance claim processing software  may print a consultation report, which summarizes an assessment for the bodily injuries claim.","In one embodiment, the task of updating, modifying or revising of rules may be simplified. To update a business rule, the user or the administrator of the insurance claim processing system  may update the data entries stored in the rules data table. By executing steps E and E, the rules may be automatically updated to reflect the changes.","In another embodiment, the task of customizing of rules to meet specific user requirements may also be simplified. To add a new business rule or structurally modify an existing rule, the user or the administrator of the insurance claim processing system  may add a new entry to the rule style and rule name table and update the database . By executing steps E and E, the rules may be automatically customized to reflect the new changes.",{"@attributes":{"id":"p-0286","num":"0291"},"figref":["FIGS. 3","FIGS. 3"],"i":["a","b","c","a","b","c"],"b":["3","3","3","3"]},"In , an embodiment of the transformation of rules data to rules may include a knowledge table E. In one embodiment, the knowledge table may be a rules data table as shown in E. In one embodiment, the knowledge table E includes data necessary to transform, build, create, define, or generate rules based on a specified rule structure. The transformation method E (as discussed in greater detail with reference to ) orchestrates the combining of the data from the knowledge table E and the rule syntax specified in the Template table E. The transformation method E may save the rule as text in an associated knowledge base or insurance database.",{"@attributes":{"id":"p-0288","num":"0293"},"figref":"FIG. 2F","b":["100","10","80"]},"In one embodiment, a message may be defined by a message code and a corresponding message text and both the message code as well as the message text stored in a message table. In another embodiment, as shown in , the message code may further include a message section F and a message code identifier F. The combination of a specific message section and a specific message code identifier uniquely specifies or selects the message text F from the message table.","The initial configuration may include specifying or selecting a country and\/or a language for the installation. In one embodiment, the selection of a language and\/or a country may automatically select a corresponding message text stored in a database. In another embodiment, the user may modify the message text during the installation process.","In step F, the application program software executing in the insurance claims processing system  may initiate a request to display a message. This may be in response to the execution of code in another portion of the application program software, in response to a previous user input and\/or in response to the execution of a business rule.","In step F, the request to retrieve message text is processed further. In one embodiment, the request may be further processed by another portion of the application program software by invoking the GetMessageText method of the Message object, and including values for MsgSectionIn and MsgCodeIn arguments associated with the GetMessageText method. In another embodiment, the processing of the request may include executing software of a subroutine function to retrieve a corresponding message text for a given message code passed along by the requesting program as an input. The message text may be retrieved from a database, in one embodiment or from an object repository in another embodiment.","In step F, the message text corresponding to a specified message code is received from step F. In step F, the requested message text is sent to the requesting program for display.",{"@attributes":{"id":"p-0294","num":"0299"},"figref":["FIG. 3F","FIG. 4F"],"b":"200"},"In step F, a messages table in a database may be searched for a matching entry which matches the requested message code. The table may store a plurality of entries including the matching entry, wherein each entry in the table may include a message code and a corresponding message text. The database may be implemented, for example, as a relational database or an object-oriented database.","In step F, the matching entry may be retrieved from the table in response to said searching the table for the matching entry which matches the requested message code, wherein the matching entry comprises a matching message text.","In step F, the matching message text corresponding to the requested message code may be displayed by the insurance claims processing program on a display device coupled to a computer system. The message text may be configured to assist a user in processing an insurance claim using the insurance claims processing program.","In various embodiments, the message text of each entry in the table may be specified during an installation of the insurance claims processing program on a computer system and\/or during an installation of the table on a computer system. The message text of each entry in the table in the database may be updated by re-installing the table on the computer system without re-installing the insurance claims processing program on the computer system. The message text of one or more entries in the table may be customized for a particular insurance organization during an installation of the insurance claims processing program on a computer system. Additionally, the message text of one or more entries in the table may be localized for use in a particular geographical location.","In one embodiment, the insurance claim may include a bodily injury claim, and processing the insurance claim may include processing the bodily injury claim to estimate a bodily injury general damages value. The requested message text may include information relevant to an estimate of a value of the insurance claim. The requested message code may include an injury code which identifies a specific bodily injury, and the requested message text may include a name of the specific bodily injury. The requested message code may include a treatment code which identifies a specific injury treatment, and the requested message text may include a name of the specific injury treatment.",{"@attributes":{"id":"p-0300","num":"0305"},"figref":"FIG. 4F","b":["300","310","320"]},"Additional Improvements","In an embodiment, executable program code used to form at least portions of an insurance claim processing system may be generated from a plurality of business rule components. As used herein, a \u201cbusiness rule component\u201d may refer to a portion of a business rule. In general, business rule components may include templates, program instructions, variables and\/or parameters. The business rule components may be stored in one or more database tables (such as are described with reference to E, E, E, and F). For example, program code defining one or more business rules used in the system may be formed from at least two business rule components. Each business rule component may be an entry in a database table. In such an embodiment, two or more entries in at least one database table may be combined to form source code for the one or more business rules. The source code may be compiled to form executable code. As used herein, \u201ccompiling\u201d refers to transforming from source code (e.g., program instructions, data, etc. provided by a programmer) into computer-executable code. In other embodiments, the source code may include one or more executable script program instructions. As used herein, a \u201cscript\u201d refers to a computer-executable program code that does not require a compiling step to be executable on a computer system.","In an embodiment, one or more database tables used to form business rules may include at least one table having entries that correspond to business rule templates. As used herein, a \u201cbusiness rule template\u201d may refer to a business rule component that includes business rule structure information. As used herein, \u201cbusiness rule structure information\u201d may refer to data specifying a general outline or arrangement of one or more business rules. Business rule structure information may include references to one or more other business rule components. For example, business rule structure information may refer one or more program instructions, one or more business rule variables, and\/or one or more business rule parameters. In embodiments described herein, one or more business rule components may be contained in one or more database tables. As used herein, a first business rule component may be said to \u201crefer\u201d to a second business rule component if either the first business rule component or the second business rule component may be used to determine (e.g., access, identify, find the value of, etc.) the other business rule component. Additionally, a first business rule component may be said to \u201crefer\u201d to a second business rule component if either the first business rule component or the second business rule component is associated with data (e.g., a database key) that may be used to determine (e.g., access, identify, find the value of, etc.) the other business rule component.","In an embodiment, one or more database tables used to form business rules may include at least one table having entries that correspond to business rule program instructions (as described with reference to E). As used herein, a \u201cprogram instruction\u201d may refer to a computer-executable command. As used herein, one or more program instructions may be combined to form a \u201cprogram code.\u201d A business rule program instruction may include references to one or more other database table entries. For example, a business rule program instruction may refer to one or more other program instructions, one or more business rule variables, and\/or one or more business rule parameters.","In an embodiment, one or more database tables used to form business rules may include at least one table having entries that correspond to business rule variables. As used herein, a \u201cbusiness rule variable\u201d may refer to a business rule component that represents a variable in the business rule program code. A business rule variable may include references to one or more other business rule components. For example, a business rule variable may refer to one or more other business rule variables and\/or one or more business rule parameters.","In an embodiment, one or more database tables used to form business rules may include at least one table having entries that correspond to business rule parameters. As used herein, a \u201cbusiness rule parameter\u201d may refer to a business rule component that represents a fixed value in the business rule source code. The value represented by a business rule parameter may be specific to a given business rule, business rule variable, business rule program instruction and\/or business rule template. For example, two or more business rules may be formed using the same business rule template, the same program instructions, the same business rule variables, and one or more different business rule parameters.","In an embodiment, business components may be combined in a transformation method, as described with reference to . In another embodiment, two or more business rule components may be combined in a rule editor, generally referenced by numeral  in . As used herein, a \u201crule editor\u201d may refer to a computer-executable program that combines business rule components to form a graphical display of at least a portion of at least one business rule. For example, in the embodiment depicted in , rule editor  may combine business rules stored in one or more template tables , one or more line text tables , one or more knowledge tables  and\/or one or more text tables  to form a display of at least a portion of at least one business rule. In such an embodiment, template table  may include one or more business rule templates. Line text table  may include one or more program instructions. Knowledge table  may include one or more values for one or more business rule parameters. Text table  may include one or more human language translations of one or more other business rule components. An advantage of such embodiments may be that viewing source code may be simplified as compared to embodiments where a user views individual component entries in one or more database tables.  depicts an embodiment of a method of generating a graphical display of at least a portion of at least one business rule in a rule editor. In certain embodiments, rule editor  may combine the business rule components and a transformation method  may compile the source code. Alternately, a transformation method may be incorporated into rule editor .","In step  of , at least one first business rule component may be accessed. At least one first business rule accessed may include business rule structure information. For example, at least one first business rule accessed may include a business rule template. At step , a plurality of second business rule components may be accessed. For example, the second business rule components may include program instructions, business rule variables and\/or business rule parameters. In certain embodiments, the first and\/or second business rule components may be stored as entries in one or more database tables. At step , a number of the second business rule components accessed may be arranged in the graphical display as directed by the structure information. For example, if the structure information includes an equation listing several variables in a given order, the variables may be displayed in the rule editor as directed by the equation. In another example, the plurality of second business rule components may include two or more program instructions. Step  may include arranging the program instructions as specified in the business rule structure information, as described with reference to E, E and E. In certain embodiments, a method of generating a graphical display of at least a portion of at least one business rule in a rule editor may also include determining access privileges of the user, as depicted in step . Based on the user's access privileges some information may be inhibited from being displayed.","A graphical display of a rule editor may include multiple views of at least a portion of at least one business rule. In an embodiment, a plurality of views may be displayed as tabs in a display window. For example, an exemplary embodiment of a graphical display of a rule editor is depicted in  and generally referenced by numeral . Each tab of rule editor display  may correspond to a business rule component and\/or a level of access privileges. In such embodiments, only users having appropriate access privileges may view and\/or modify information in certain tabs. For example, the rule editor may be configured to allow users to view information on all of the tabs. However, only users having special access privileges may be permitted to modify the information. Alternately, a user's access privileges may also be used to inhibit display of certain information or tabs. In another example, users having a first level of access privileges may modify business rule parameters in the rule editor, but may not change other data. In such cases, users having a second level of access privileges may be allowed to modify business rule variables, templates and\/or program instructions, but may not be allowed to modify values of business rule parameters. Users having a third level of access privileges may be allowed to modify any business rule component. In each of the example cases, modifications to database tables based on user modifications in the graphical display may be made immediately or stored in memory until approved.","In an embodiment, a user may access a display of a business rule template by selecting Template tab . In such an embodiment, the user may specify a template to be displayed by selecting a template from template selection field . The user may specify a particular business rule to display by selecting the business rule in business rule field . The specified business rule may be displayed in rule display . Rule display  may include a display of a plurality of program instructions (e.g., \u201cprogram instruction 1\u201d, \u201cprogram instruction 2\u201d, etc.). The program instructions may be arranged sequentially in the order of execution of the instructions, as is common to computer program code. A program instruction may refer to one or more business rule variables and\/or one or more business rule parameters. For example, program instruction 1 (referenced by numeral ) is depicted as being a function of \u201cvariable 1\u201d and \u201cparameter 1\u201d. Likewise, program instruction 3 () is depicted a being a function of \u201cparameter 2\u201d. In addition, program instruction 4 () is depicted as being a function of \u201cvariable 2\u201d and \u201cparameter 3\u201d. In various embodiments, rule display  under template tab  may include data specific to the selected business rule. For example, a value of a business rule parameter may be specific to an individual business rule. The value of the parameter may be displayed in rule display . In some embodiments, a template may be used to form a number of different business rules. In such embodiments, rule display  may not include data particular to an individual business rule. Rather, rule display  may include information pertaining to all business rules formed using the template. For example, an identifying descriptor may be displayed for \u201cparameter 1\u201d and\/or \u201cvariable 1\u201d rather than a particular value. In an embodiment, information specific to a selected business rule may be displayed by selecting the appropriate tab. For example, if the user selects variables tab , variables specific to the selected business rule may be filled into the program instructions, as depicted in . If the user selects parameters tab , parameters specific to the selected business rule may also be filled in to the program instructions, as depicted in .","In addition to allowing the user to view business rule source code, rule editor  may allow the user to modify business rule components. In certain embodiments, modifications made in the rule editor may modify one or more database table entries. For example, in  program instruction  refers to a \u201cvariable 1\u201d. The user may modify program instruction  in the rule editor to refer to a \u201cvariable 2\u201d. In such embodiments, a database table entry corresponding to program instruction  may be changed to include a reference to the variable 2. In other embodiments, changes made by the user may be stored in a memory without being made to a database table. An advantage of such embodiments may be that the changes stored in memory may be verified and\/or approved by another user before changes are made to a database table. In certain embodiments, a rule editor may determine a user's access privileges before or during display of a business rule. The user's access privileges may be used to determine portions of the business rule that the user may change. In addition, the user's access privileges may be used to determine whether changes made by the user are made in one or more database tables or stored in memory for verification by another user. An advantage of such embodiments may be that business rules may be modified by users without substantial programming experience without fear of contaminating the one or more business rule database tables, since experienced programmers may be used to verify entries and\/or changes.",{"@attributes":{"id":"p-0311","num":"0316"},"figref":"FIG. 17","b":["1705","1710","1715","1720","1725"]},"In an embodiment, a rule editor display may allow a user to interact with one or more database tables directly using SQL commands. For example, by selecting SQL tab , the user may be presented with an SQL command entry field , as depicted in . SQL command entry field  may allow the user to execute a full range of SQL commands supported by the database management system in which the database tables are implemented. Alternately, SQL command entry field  may allow the user to execute only a restricted set of SQL commands. In some embodiments, SQL commands that may be executed from SQL command field  may be restricted based on the access privileges of the user.","In certain embodiments, a method of modifying a business rule in a rule editor may include determining what changes a user has input. For example, the user may make changes to a business rule in a graphical display of at least a portion of the business rule. The rule editor may compare the content of the graphical display to components of the business rule stored in memory to determine what changes the user has made. For example, the rule editor may determine what changes the user has input if one or more trigger events occur. Trigger events may include making a new selection (e.g. selecting a new business rule component, business rule, tab, etc.). Trigger events may also include closing the rule editor, activating a \u201csave changes\u201d feature or another keystroke or mouse movement. Trigger events may also include passing of a determined period of time (e.g., 5 minutes).","In an embodiment, a rule editor may provide a user with a listing of business rule components contained in one or more database tables. In such embodiments, the user may select two or more of the business rule components and combine the two or more components in the graphical display to form a new business rule. Alternately, the user may create one or more new business rule components in the graphical display. For example, the user may enter one or more new lines of program instruction. In another example, a new business rule template may be created by specifying an order of program instructions, business rule variables and\/or business rule parameters in a business rule. The one or more new business rule components may be saved in one or more database tables. The one or more new business rule components may be combined with one another and\/or with previously existing business rule components to form a new business rule.",{"@attributes":{"id":"p-0315","num":"0320"},"figref":"FIG. 19","b":["1905","1910","1920"]},"In some embodiments, a rule component may be used by more than one business rule. For example, a business rule template may define the structure of a business rule. The business rule template may be used with different combinations of business rule program instructions, business rule variables and\/or business rule parameters to form different business rules. In another example, a business rule program instruction may be used with different combinations of business rule templates, business rule variables and\/or business rule parameters to form different business rules. In such embodiments, a rule editor may display a listing of business rules and\/or business rule components that may be affected by changes to one or more selected business rule components.",{"@attributes":{"id":"p-0317","num":"0322"},"figref":"FIG. 21","b":["2105","2110","2115","2120","2125"]},{"@attributes":{"id":"p-0318","num":"0323"},"figref":"FIG. 22","b":["2205","2210","2215","2220","2225","2230"]},"Referring back to , an embodiment of a display screen including a list of business rule components related to a selected business rule component is depicted. In , \u201ctemplate 1\u201d has been selected in template selection field . Additionally, \u201crule 1\u201d has been specified in rule selection field . Thus, the business rule displayed in rule display  is business rule #1. Within rule display field , program instruction 2 () has been selected as indicated by the dotted line surrounding program instruction 2. Thus, program instruction 2 is shown to be the selected business rule component in selected component field . Linkages field  displays a list of all of the business rule templates that use or refer to program instruction 2.","In an embodiment, the relationships between various business rule components may also be viewed in a database table view. For example,  depicts an embodiment of a Tables tab  view. Tables tab  may include table selection field . Table selection field  may allow a user to specify a database table to be viewed in display field . Additionally, tables tab  may include a selection criteria field . Selection criteria field  may allow the user to specify one or more criteria which may be used to constrain the table display. For example, selection criteria field  may be used to specify one or more search criteria. In such a case, only those database records including specified search criteria may be displayed in display field . In another example, selection criteria field  may be used to specify a sort order in which to display the database table. During use, display field  may display at least a portion of the contents of a database table. An advantage of displaying database table contents to a user may be that viewing the database table information without modification by the rule editor may allow for increased flexibility in troubleshooting.","In certain embodiments, a rule editor may save at least one log file of changes made. In various embodiments, a log file may include but is not limited to a listing or description of at least one change made; an identification of a user that made the change; if appropriate, an identification of a user that verified or approved the change; and a time and\/or date stamp.",{"@attributes":{"id":"p-0322","num":"0327"},"figref":"FIG. 23","b":["2305","2310","2315","2320"]},"An exemplary embodiment of a rule editor window that includes information related to changes made to one or more business rules is depicted in . A user may specify a business rule template and\/or a business rule using selection fields  and , as previously described. The user may select audit tab  to view log file entries related to changes made to the selected business rule template or business rule. For example, a log file entry  may include a description of a modification made . The description may include a user input description of the modification or a computer generated description of the modification. For example, the description may include a copy of one or more business rule components before the modification and a corresponding copy of the one or more business rules including the modification. Log file entry  may also include a time and\/or date stamp  indicating when the modification was input, stored in memory and\/or approved. Log file entry  may also include an identification of the user that input the modification  and\/or a user that approved the modification . Log file entry  may also include a description of the reason a change was made . Additionally, log file entry  may include an identification of one or more business rule components changed and\/or one or more database tables changed.","In certain embodiments, one or more database tables may include at least one human language translation of at least one business rule component. As used herein, a \u201chuman language translation\u201d may refer to an approximate interpretation, explanation, and\/or paraphrasing into a human language of the purpose, meaning and\/or effect of a business rule component. For example, the human language may be English. For example, the translation may be a simplified description of the effect of the business rule component. In such embodiments, a rule editor may be configured to access at least one human language translation of a business rule component. The rule editor may access and display at least one human language translation in response to a request by the user. In some embodiments, the rule editor may be configured to display at least a portion of a business rule with one or more human language translations substituted into the business rule in place of one or more corresponding business rule components. For example,  depicts a display screen with text tab  selected. If a user selects text tab  one or more business rule components may be replaced by one or more corresponding human language translations. Thus, lines , , , , and  may be related to lines , , , , and  of . For example, line  may be the same as line  except that program instruction 1 and parameter 1 have been replaced in the display with human language translations. Similarly, program instruction 2 of line , program instruction 3 and parameter 2 of line , program instruction 4 and parameter 3 of line , and program instruction 5 of line  have been replaced by human language translations in lines , , , and , respectively. In other embodiments, human language translations may be substituted for different business rule components. For example, only program instructions may be translated. In another example, only business rule parameters may be translated. An advantage of providing at least one human language translation of a business rule component may be that a user may be better able to understand a business rule or business rule component based on a human language translation than based on one or more lines of source code. For example, such embodiments may be advantageous if users that create, modify and\/or approve business rules are not experienced programmers. In an embodiment, a plurality of human language translations of one or more business rule components may be provided. An advantage of providing multiple languages may be that two or more users that prefer different languages may view, create, modify and\/or approve business rules.",{"@attributes":{"id":"p-0325","num":"0330"},"figref":"FIG. 26","b":["2605","2610","2615","2620"]},"Various embodiments further include receiving or storing instructions and\/or data implemented in accordance with the description herein upon a carrier medium. Suitable carrier media include memory media or storage media such as magnetic or optical media, e.g., disk or CD-ROM, as well as transmission media or signals such as electrical, electromagnetic, or digital signals, conveyed via a communication medium such as networks and\/or a wireless link.","Although the system and method of the present invention have been described in connection with several embodiments, the invention is not intended to be limited to the specific forms set forth herein, but on the contrary, it is intended to cover such alternatives, modifications, and equivalents as can be reasonably included within the spirit and scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Other objects and advantages of the invention will become apparent upon reading the following detailed description and upon reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","i":"b "},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1","i":"c "},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 6","i":"a "},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIGS. 6","i":["b ","h "],"b":"6"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIGS. 7","i":["a","c "],"b":"7"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 10","i":"a "},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 1","i":"d "},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2","i":"a"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 2","i":"b"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 3","i":"a"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 3","i":"b"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 3B","FIG. 2B"],"b":"150"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 5B"},"FIG. Ba illustrates a screen shot of a table of contents display screen according to a second embodiment;",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 6B"},"FIG. Ba illustrates exemplary properties and methods associated with a display screen object according to a second embodiment",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 3D"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 2E"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 3","i":"a"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 3","i":"b"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 3","i":"c"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 4E"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 2F"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 3F"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 4F"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 26"}]},"DETDESC":[{},{}]}
