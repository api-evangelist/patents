---
title: Exploring attached and unattached content databases
abstract: Various technologies and techniques are disclosed for searching for and extracting data from databases of content management applications. User input is received to connect to a database or database snapshot of an application, and a connection is established. When the database is not part of a current live instance of the application, an emulation is performed such that the database is treated like it is attached to the current live instance of the application. The user is able to browse and/or search for content, including documents, in the database or database snapshot without having to explore individual site collection structure and user interfaces of individual sites. A site collection user interface (UI), a site selector UI, and/or a list selector UI, for example, provide data entry fields for entering search requirements. Unattached databases can be managed using commands, such as using an object model or command line.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08788460&OS=08788460&RS=08788460
owner: Microsoft Corporation
number: 08788460
owner_city: Redmond
owner_country: US
publication_date: 20100712
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","COPYRIGHT NOTICE AND PERMISSION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation-in-part of, and claims priority to, U.S. patent application Ser. No. 12\/137,556, filed on Jun. 12, 2008, by Inventors Sawaya, et al., and entitled, \u201cTECHNIQUES FOR EXTRACTING DATA FROM CONTENT DATABASES.\u201d The entirety of the aforementioned application is incorporated herein by reference.","A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document: Copyright.COPYRGT.2010, Microsoft Corp.","Web-based content management applications such as MICROSOFT\u00ae SharePoint typically include files that are located on a Web server along with data that is stored in a database. For example, one or more Web pages that are used to access the data in the database are stored on a Web server. In order to make the content accessible to end users, an attachment process is typically utilized to set up the live instance of the content management application. In other words, a site administrator makes the Web pages and database \u201clive\u201d to end users so that the data can be accessed and updated.","One of the current issues that arise with content management applications has to do with properly backing up the data contained therein. Due to the fact that content management applications have data stored in more places than just a physical database, a separate information technology organization or team is typically responsible for maintaining and backing up content management applications than is responsible for backing up other databases in the company. This division of responsibility can often pose a problem in corporations since the database backups become disconnected from the maintenance operations being performed by the team responsible for content management applications.","When backups are performed for content management applications, the entire database is typically backed up, along with the directories on the file server that contains the other data for the application. Because entire databases are being backed up, it can be very difficult to go back to a past database backup and extract a specific unit of logical data as it once existed on a company's content management application (such as SharePoint or as similar technology). Users are not able to extract specific data from a database that is not attached to a \u201clive\u201d instance of the content management application. Also, it is not generally possible to know which database backup contains the logical data that a user may be looking for due to multiple backups, security\/access issues, and the standard user interface may not contain one centralized location for exploring content to be recovered and navigating to the location that needs to be backed up or exported. It is typically a time-intensive process for an administrator to drill down to find the content. The administrator often has to access every site to find the URL and then run code to extract the information. In accessing every site, the confidentiality and privacy of site content can be compromised.","Various technologies and techniques are disclosed for searching for and extracting data from databases of content management applications. Input is received from a user to connect to a database of a content management application. A connection is established to the database. When the database or database snapshot is not part of a current live instance of the content management application, an emulation is performed so that the database is treated like it is actually attached to the current live instance of the content management application. The user is able to browse and\/or search the database to find specific data, such as through a site collection user interface (UI), a site selector UI, and\/or a list selector UI, for example. In further embodiments, other or additional types of UIs or selector UIs are used. In an alternative embodiment, for example, a specific document UI or selector UI is used. In other alternative embodiments, the types of UIs or selector UIs are combined into a single UI or selector UI, such as a single UI or selector UI allowing browsing and\/or searching of the database to explore site collections, sites, lists, and\/or documents within the same UI or selector UI. In another alternative embodiment, the single UI or selector UI allows browsing and\/or searching to explore a subcombination, such as, for example, two or three (but not all), of the categories of site collections, sites, lists, and documents. The specific names and types of UIs or selector UIs described herein are offered by way of example. Other types of UIs or selector UIs are contemplated in embodiments herein without departing from the spirit and scope of the present disclosure. The selector UIs provide data entry fields, according to embodiments, for entering search requirements. In an embodiment, the user is presented search results meeting the search requirements. The user can walk through these search results or further narrow the search. Embodiments thus provide for browsing and\/or searching for specific content in a content database which may or may not be attached to the current live instance of the content management application, without having to explore individual site collection structure and user interfaces of individual sites, e.g., Web sites. The user is instead provided with an index view to find desired content. The user is thus provided with the ability to explore site collections, sites, lists, and\/or documents from attached and\/or unattached content databases. In one implementation, the user can export selected data and\/or back up selected data from the database of the content management application.","In an embodiment, stored procedures on the back-end database servers enable such browsing, searching, and exporting of data from attached and unattached content databases. Examples of such stored procedures include: proc_GetSiteCollectionBestMatch; proc_GetSiteCollectionSubset; proc_GetWebSubset; proc_GetWebBestMatch; proc_GetListSubset; and proc_GetListBestMatch.","In one implementation, unattached databases of a content management application can be managed using one or more commands. Input is received from a user to specify connection options for connecting to an unattached database of a content management application. The connection is established with the unattached database so that the database is treated like it is attached to a live instance of the content management application. The user can use one or more commands to manipulate the unattached database. In one implementation, the commands can be source code that utilizes an object model of the content management application to manipulate the database. In another implementation, the commands can be performed from a command line.","In another implementation, orphaned databases, orphaned sites, or orphaned site collections, for example, can be detected and deleted from the content management application. A selection is received from a user to connect to a database of a content management application. When the database is part of a current live instance of a content management application, any orphaned sites or orphaned site collections, for example, that are in the database but that are not in an index used to access the content management application are identified. One or more portions of any orphaned sites or orphaned site collections, for example, that were identified are deleted.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter.","The technologies and techniques herein may be described in the general context as an application for managing databases of content management applications, but the technologies and techniques also serve other purposes in addition to these. In one implementation, one or more of the techniques described herein can be implemented as features within an online content management application such as MICROSOFT\u00ae SharePoint, or from any other type of program or service that manages content management applications. In another implementation, one or more of the techniques described herein are implemented as features with other applications that deal with accessing data in and\/or extracting data from databases of content management applications.","As noted in the Background section, when backups are performed for content management applications, the entire database is typically backed up, along with the directories on the file server that contains the other data for the application. It can be very difficult to go back to a past database backup and extract a specific unit of logical data as it once existed on a company's content management application. The term \u201ccontent management application\u201d as used herein is meant to include an application that allows users to store various content in a structured or unstructured format. Examples of a content management application can include an application that provides functionality to allow administrators and\/or end users to manage content, or an internet site that uses a database as a back end.","Furthermore, with existing content management applications, users may face difficulty in extracting specific data, especially when the desired data is contained in a database that is not attached to a \u201clive\u201d instance of the content management application. The term \u201clive instance\u201d as used herein is meant to include a running instance of a content management application and the one or more databases that store the data for that application that are attached to that content management system. Also, current systems do not provide the user with ways to determine which database backup of a content management application contains the logical data that a user may be looking for.","With current systems, the administrator typically has to detach the current live instance of the content management application, restore the entire database backup (which could be very large), and then reattach that database backup to the live instance of the content management application. This reattach process can be very burdensome on content management deployments due to the downtime and manpower involved, and can present a large amount of administrative overhead to reattach an old database back to the live instance of the content management application. Furthermore, in order to extract a specific unit of logical data from that database (once attached to the live instance), the user would typically have to write code or run a command line command to export the data, which requires advanced knowledge.","Another option that is sometimes used with current systems is to restore the database of a content management application from a backup to a test server in order to retrieve the desired data. This solution requires the purchase of additional server hardware in order to run a second content management application, plus also requires any extra software licenses. There is also extra maintenance and overhead associated with this option, so it is not usually the most desirable either.","In one implementation, techniques are described for enabling data contained in database backups, database snapshots, and\/or databases of content management applications to be browsed, searched, backed up, and\/or exported. Databases can be browsed that are unattached from the current live instance of the content management application. The term \u201cunattached database\u201d as used herein is meant to include a database that contains data for a content management application that is not currently activated on a live instance of the content management application. Once a connection is established to the unattached database (database, backup, or snapshot), the data contained in that database can then be accessed from a user interface and\/or programmatically, such as from a software development application or command line.","Turning now to , the stages for implementing one or more implementations of the data extraction tool are described in further detail. In some implementations, the processes of  are at least partially implemented in the operating logic of computing device  (of ).","An example logical environment or system  for allowing an administrator, for example, to browse and search the contents of a content database and export data from that content database, even where the content database is not attached to the front-end Web or application server(s), is shown in  in accordance with embodiments. A client or browser computer , such as used by an administrator , for example, is connected to front-end server  by network . In an embodiment, front-end Web or application server  is a MICROSOFT SHAREPOINT server. As shown in , a single front-end server  exists in embodiments, while other embodiments provide for multiple front-end servers or front-end server farms, as shown by ellipses  and front-end server . The front-end servers , , and  shown in  have attached content databases as shown. In other embodiments, the databases are physically separate (not shown) from the servers. The front-end server(s) is connected by network  to back-end database server . Back-end database server  is a SQL server according to an embodiment. While a single back-end database server  exists in one embodiment, multiple back-end database servers or a back-end database server farm exists in other embodiments, as shown by ellipsis  and back-end database server . According to an embodiment, back-end database servers , , and  have attached databases, while other embodiments provide for a physically separate database(s), such as content database .","Logical environment  is not limited to any particular implementation and instead embodies any computing environment upon which the functionality of the environment described herein may be practiced. Further, networks  and , although shown as individual single networks may be any types of networks conventionally understood by those of ordinary skill in the art. In accordance with an example embodiment, the network may be the global network (e.g., the Internet or World Wide Web, i.e., \u201cWeb\u201d for short). It may also be a local area network, e.g., intranet, or a wide area network. In accordance with embodiments, communications over networks  and  occur according to one or more standard packet-based formats, e.g., H.323, IP, Ethernet, and\/or ATM.","Further, any type of environment or system can be used in accordance with embodiments of the present disclosure.  is offered as an example only for purposes of understanding the teachings of the embodiments. For example,  shows servers , , , , , and . However, as noted above, embodiments also cover any type of server, separate servers, server farm, or other content management application server. Further yet,  shows client computer . However, any type of small computer device can be used without departing from the spirit and scope of the embodiments disclosed herein. Indeed, environment or system  represents a valid way of practicing embodiments disclosed herein but is in no way intended to limit the scope of the present disclosure. Further, the example network environment  may be considered in terms of the specific components described, e.g., front-end server, client computer, back-end database server, etc., or, alternatively, may be considered in terms of the analogous modules corresponding to such units.","Although only one client computer  is shown, for example, another embodiment provides for multiple small computer devices to communicate with front-end server . In an embodiment, each small computer device communicates with the network , or, in other embodiments, multiple and separate networks communicate with the small computer devices. In yet another embodiment, each small computer device communicates with a separate network.","While  provides an example logical environment or system  for browsing and searching the contents of a content database, e.g., an unattached database, and exporting data from that content database,  is a high level process flow diagram  for one implementation illustrating the stages involved in extracting data from databases of content management applications. The user specifies a database or a database snapshot to connect to, which can be an unattached database that is external to the current live instance of the content management application (stage ). A connection is established to the database and a validation process is performed (stage ). During the validation process, security checks are performed to ensure that this user has authority to access the database. Database validation is also performed to ensure that the database is a valid version or database schema of the particular content management application. If validation is not successful (decision point ), then the process ends (stage ). If validation is successful (decision point ), and if the database being accessed is part of the live instance of the content management application (decision point ), then an optional orphan detection process  is performed to allow orphaned data to be deleted (stage ). Orphaned sites, for example, are sites that have an inaccessible URL namespace. This could be caused by a conflict existing in the URL namespace or database corruption. The orphan detection process is described in further detail in  with orphaned \u201csites\u201d used as an example.","If validation is successful (decision point ), and the database being accessed is external to the current live instance of the content management application (decision point ), then the database is emulated as if it was connected to the current live instance of the content management application (stage ). The terms \u201cemulated\u201d, \u201cemulation\u201d, and \u201cperforming an emulation\u201d as used herein are meant to include treating an unattached database as though it is attached to a live instance of a content management application on a temporary basis so that normal read or other operations that the user could perform on the live instance will work with the unattached database as well. The user is able to browse and search for specific data in the database (stage ). The user can export data (stage ) and\/or the user can perform a site collection backup of the data (stage ), to name a few non-limiting examples. Each of these stages will now be described in further detail in the figures that follow.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2","b":["200","202","204","206","208","210"]},"If the database or site collection backup option is chosen (decision point ), then the user is prompted to specify the backup file name and location (stage ). The backup is performed to the specified location and the result of the backup is optionally displayed or otherwise made available to the user (stage ). If the export option is chosen (decision point ), then the user is prompted to specify the export file name and location plus other export options (stage ). The export is performed to the specified location and the result of the export is optionally displayed or otherwise made available to the user (stage ). Simulated screens of  will now be used to illustrate this process in further detail.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3","FIG. 4"],"b":["240","242","244","246","248","248","250","252","256","254"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 4","FIG. 3","FIG. 3"],"b":["260","262","264","262","266"]},"Once the data itself has been selected, the operation to perform on that data can be chosen. In this example, the user is provided with an option to perform a site collection backup  or an export . If export  is chosen, then the user will need to specify the file name  and location to export the selected data to. Other options can also be specified, such as whether or not to overwrite existing files , whether or not to include full security , which versions  to include, and miscellaneous export settings, such as whether to halt on a warning , whether to halt on an error , whether or not to use a log file , and\/or what CAB size  to use for each file, to name some non-limiting examples. To return to the previous screen and change to a different database, the user can select the previous option . Once the user has finished filling out the database export options, then the OK option  can be selected to perform the export. The cancel option  can be selected to cancel the export. If the user wishes to perform a site collection backup  instead of an export , then a screen similar to  can be displayed, which is discussed next.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 3"],"b":["300","302","304","306","304","308","310","312"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"b":["350","352","354","356"]},"Turning now to , a process flow diagram  for one implementation is shown that illustrates the stages involved in managing orphaned sites, for example, in an unattached database of a content management application. A selection is received from the user to connect to an unattached content database (stage ). If the selected database is part of a current live instance of the content management application (decision point ), then any orphaned sites, for example, that are in the database but that are not in the index used to access the database are identified (stage ). Any orphaned sites, for example, that were identified can be deleted upon receiving user confirmation that it is OK to proceed with the delete operation, or the orphaned sites can be deleted automatically (stage ).",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 8","b":["450","452","454","456"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 9","b":["480","482","484","486"]},"While  above shows that a user may browser and search for specific data at stage , , B, and C depict the operational steps for searching for a specific site collection, site, and\/or list, as disclosed in accordance with embodiments of the present disclosure. Process  is initiated at START operation  and proceeds to query  for determining whether a user, such as administrator  from a central administration user interface (UI), desires to explore and\/or search a content database, in which such database may be an attached or unattached content database. If the user does not desire to explore and\/or search a content database, process  proceeds NO to END operation , and process  terminates. If the user desires to explore and\/or search a content database, such as an unattached database, for example, process  proceeds YES to specify database to connect to operation , in which the user specifies a database name and, in embodiments, security credentials. Next, the user receives a default site collection , such as the site collection  shown in  above. The user then selects to \u201cChange Site Collection\u201d  by clicking on the down-arrow key at  in  and revealing a list of choices, including \u201cChange Site Collection.\u201d The user is presented with a site collection selector, or site collection selector UI, such as is depicted in , for example, discussed below. According to an embodiment, a subset of site collections is displayed . In other embodiments, a full set of site collections, if space permits, is displayed. The site collection selector UI allows the subset of site collections to be displayed based on ascending or descending order, allows a search to be conducted, and allows the user to advance to the \u201cNext\u201d and \u201cPrevious\u201d pages, as well as control the number of items to be displayed or returned at any one time, according to embodiments. In alternative embodiments, the selector UI does not allow the user to control the number of items to be displayed or returned. Instead, in such alternative embodiments, the underlying stored procedure allows the caller to specify the number of items to be returned or displayed at any one time. Query  thus allows the user to determine whether to select a displayed site collection, advance to the \u201cNext\u201d page, or search for a particular site collection to narrow down the list of displayed site collections, for example. If the user desires to advance to the \u201cNext\u201d page, process  proceeds \u201cNext\u201d to receive subset of site collections , in which additional site collections are displayed to the user. If the user desires to select a displayed site collection, process  proceeds \u201cSelect\u201d to receive information about the selected site collection . Such information is displayed in the selector UI, according to embodiments, and includes, for example, the selected site collection's URL, Title, Description, Primary Administrator, E-mail Address, Database Name, and\/or any other relevant information about the selected site collection. From there, the user can either extract the necessary information and perform an operation or move on to further drill down to sites and lists underneath the selected site collection, according to embodiments.","Returning to , if the user desires to search for a particular site collection, process  proceeds \u201cSearch\u201d to enter search information , in which the user enters search criteria or requirements. As shown in , the search for a site collection allows the user to enter a \u201cURL\u201d of the desired site collection, according to an embodiment. After the search is conducted, the user receives a list of site collection(s) meeting the search requirements . The site collection selector thus allows the user to browse or search for a particular site collection, for example, through an index view of the site collections.","Process  next continues through off-page connector A  to site selector appears  (from  to ), in which the ability to select a particular site, such as shown at  in , is enabled through the appearance on the page of the site option. The user, thus having previously selected a site collection, is thus given the ability to select a site within the context of the site collection. The user next selects to \u201cChange Site\u201d , and process  proceeds to receive a subset (e.g., n (of m)) of sites at site selector control, or site selector control UI . The subset of sites is thus displayed at the site selector control, such as shown in  discussed below, based on ascending or descending order. The site selector control allows the user to search within the context of the site collection, advance to the \u201cNext\u201d and\/or \u201cPrevious\u201d pages, as well as control the number of items to be displayed or returned at any one time. In alternative embodiments, the selector UI does not allow the user to control the number of items to be displayed or returned. Instead, in such alternative embodiments, the underlying stored procedure allows the caller to specify the number of items to be returned or displayed at any one time. Query operation  then allows the user to select a site from the subset of sites, search, or proceed to the next subset of sites. If the user desires to advance to the \u201cNext\u201d page, process  proceeds \u201cNext\u201d to receive subset of sites , in which additional sites are displayed to the user (unless the first subset included all sites according to some embodiments). If the user chooses to select a particular site, process  proceeds \u201cSelect\u201d to receive information about the selected site . Such information includes, according to embodiments, the site's URL, Title, Description, and\/or any other relevant information about the site. From there, the user can either extract the necessary information and perform an operation, or move on to further drill down to lists and document libraries within the selected site, according to embodiments.","Returning to , if the user desires to search for a particular site, process  proceeds \u201cSearch\u201d to enter search information , in which the user enters search criteria or requirements. As shown in , the search for a site allows the user to enter a \u201cURL\u201d of the desired site, according to an embodiment. After the search is conducted, the user receives a list of site(s) meeting the search requirements . The site selector thus allows the user to browse or search for particular sites, for example, through an index view of the sites.","Process  next continues through off-page connector B  to list option appears  (from  to ), in which the ability to select a particular list, such as shown at  in , is enabled through the appearance on the page of the list selector . The user, thus having previously selected a site collection and a site, is thus given the ability to select a list or document library within the context of the site using a selector in the central administration UI, according to embodiments. In further embodiments (not shown), the user is given the ability to select a particular document within the context of the list and\/or document library, for example. In such embodiments, a document selector in the central administration UI is used, for example.","Returning to , the user next selects to \u201cChange List\u201d , and process  proceeds to receive a subset (e.g., n (of m)) of lists or document libraries at list selector, or list selector UI . The subset of lists or document libraries is thus displayed at the list selector control, such as shown in  discussed below, based on ascending or descending order. The list selector control allows the user to search within the context of the site, advance to the \u201cNext\u201d and\/or \u201cPrevious\u201d pages, as well as control the number of items to be displayed or returned at any one time. In alternative embodiments, the selector UI does not allow the user to control the number of items to be displayed or returned. Instead, in such alternative embodiments, the underlying stored procedure allows the caller to specify the number of items to be returned or displayed at any one time. Query operation  then allows the user to select a list or document library from the subset of lists or document libraries, search, or proceed to the next subset of lists or document libraries (unless the first subset included all lists or document libraries according to some embodiments). The user desires to advance to the \u201cNext\u201d page, process  proceeds \u201cNext\u201d to receive subset of lists or document libraries , in which additional lists or document libraries are displayed to the user. If the user chooses to select a particular list, process  proceeds \u201cSelect\u201d to receive information about the selection . Such information includes, according to embodiments, the URL, Title, List Type, Number of Items, Last Modified indication, and\/or any other relevant information about the list or document library. From there, the user can extract the necessary information and perform an operation, according to embodiments.","Returning to , if the user desires to search for a particular list, process  proceeds \u201cSearch\u201d to enter search information , in which the user enters search criteria or requirements. As shown in , the search for a list allows the user to enter a \u201cTitle\u201d of the desired list or document library, according to an embodiment. After the search is conducted, the user receives a list of list(s) or document library(ies) meeting the search requirements . The list collection selector thus allows the user to browse or search for a particular list or document library, for example, through an index view of the lists or document libraries. Process  then terminates at END operation .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIGS. 10A","b":["10","10"]},"While , B, and C depict the operational steps for searching for a specific site collection, site, and\/or list or document library,  illustrates an example site collection selector UI . While site collection selector UI  is shown as a webpage dialog  in accordance with an embodiment, other types of pages and UIs may be used in accordance with other embodiments. Site collection selector UI  thus allows for exploring and searching for a site collection(s) . As discussed above, this selection may occur when performing administrative operations on attached or unattached content databases. Site collection selector UI allows a URL of the site collection search at  and data entry field . For example, site collection selector UI shows an example search for the site collection URL entered at data entry field  as \u201chttp:\/\/company1.com\/dept\/hr.\u201d Upon clicking on the button \u201cOK\u201d  to start the search, search results are displayed at , , , and  according to an embodiment. While multiple search results meeting the search requirements are indicated by ellipses , other embodiments provide for a single search result to be displayed. In embodiments, the user may also limit the number of results displayed per page, in which \u201cNext\u201d and \u201cPrevious\u201d buttons allow a user to toggle between subsets of displayed results (not shown). Upon selecting a particular URL search result, the user can view the URL , Title , Description , Primary Administrator , E-mail Address , Database Name , and any other relevant information  about the site collection. While examples of such information categories are shown in , such as \u201cTitle\u2014HR Site Collection,\u201d etc., this sample information is offered by way of example only. Site collection selector UI  thus presents an index view of search results to the user which enables a user to find and retrieve an item without opening each site collection, etc., thus promoting enhanced security and confidentiality, for example. At any time, a user may \u201cCancel\u201d the site collection selector control UI page and return to the previous page by clicking on the \u201cCancel\u201d button . The components, controls, and other features depicted in  are offered by way of example only. Additional or fewer components, controls, and\/or other features may be used in accordance with other embodiments of the present disclosure. Further, combinations of components, controls, and other features may be used in accordance with other embodiments as well.","While  depicts an example site collection selector,  illustrates an example site selector UI , which allows a user, having previously selected a site collection, to select a site within the context of that site collection in accordance with embodiments. As discussed above, this selection may occur when performing administrative operations on attached or unattached content databases. While site selector UI  is shown as a webpage dialog  in accordance with an embodiment, other types of pages and UIs may be used in accordance with other embodiments. Site selector UI  thus allows for exploring and searching for a site(s) . Site selector UI allows a URL of the site search at  and data entry field . For example, site selector UI shows an example search for the site URL entered at data entry field  as \u201chttp:\/\/company1.com\/dept\/hr\/payroll.\u201d Upon clicking on the button \u201cOK\u201d  to start the search, search results are displayed at , , , and  according to an embodiment. While multiple search results meeting the search requirements are indicated by ellipses , other embodiments provide for a single search result to be displayed. In embodiments, the user may also limit the number of results displayed per page, in which \u201cNext\u201d and \u201cPrevious\u201d buttons allow a user to toggle between subsets of displayed results (not shown). Upon selecting a particular URL search result, the user can view the URL , Title , Description , and any other relevant information  about the site. While examples of such information categories are shown in , such as \u201cTitle\u2014HR Payroll Site,\u201d etc., this sample information is offered by way of example only. Site selector UI  thus presents an index view of search results to the user which enables a user to find and retrieve an item without opening each site, etc., and thus provides enhanced security and confidentiality, for example. At any time, a user may \u201cCancel\u201d the site selector control UI page and return to the previous page by clicking on the \u201cCancel\u201d button . The components, controls, and other features depicted in  are offered by way of example only. Additional or fewer components, controls, and\/or other features may be used in accordance with other embodiments of the present disclosure. Further, combinations of components, controls, and other features may be used in accordance with other embodiments as well.","While  depicts an example site selector,  illustrates an example list selector UI , which allows a user, having previously selected a site collection and a site, to select a list or document library within the context of that site, in accordance with embodiments. As discussed above, this selection may occur when performing administrative operations on attached or unattached content databases. While list selector UI  is shown as a webpage dialog  in accordance with an embodiment, other types of pages and UIs may be used in accordance with other embodiments. List selector UI  thus allows for exploring and searching for a list(s) or document library(ies) . List selector UI allows a Title of the list or document library search at  and data entry field . For example, list selector UI shows an example search for the list Title entered at data entry field  as \u201cOvertime List.\u201d Upon clicking on the button \u201cOK\u201d  to start the search, search results are displayed at , , , , and  according to an embodiment. While multiple search results meeting the search requirements are indicated by ellipses , other embodiments provide for a single search result to be displayed. In embodiments, the user may also limit the number of results displayed per page, in which \u201cNext\u201d and \u201cPrevious\u201d buttons allow a user to toggle between subsets of displayed results (not shown). Upon selecting a particular title or URL search result, the user can view the URL , Title , List Type , Number of Items , Last Modified indication , and any other relevant information  about the list (or document library). While examples of such information categories are shown in , such as \u201cTitle\u2014HR Payroll OvertimeList,\u201d etc., this sample information is offered by way of example only. List selector UI  thus presents an index view of search results to the user which enables a user to find and retrieve an item without opening each list (or document library), and thus promotes enhanced security and confidentiality, for example. At any time, a user may \u201cCancel\u201d the selector control UI page and return to the previous page by clicking on the \u201cCancel\u201d button . The components, controls, and other features depicted in  are offered by way of example only. Additional or fewer components, controls, and\/or other features may be used in accordance with other embodiments of the present disclosure. Further, combinations of components, controls, and other features may be used in accordance with other embodiments as well.","Turning to , environment  illustrates a front-end server  and back-end database server  connected by network , according to an embodiment of the present disclosure. Database, or storage means  are also depicted in  as connected to back-end database server . These storage means and functional modules are offered by way of example only. Numerous types of modules, components, or storage means can be used in accordance with embodiments. To enable exploring and searching of attached and unattached content databases, requests are made  through an application programming interface (API)  on the front-end server  to the back-end database server , which provides or returns responses, outputs, and\/or executed operations , for example. In an embodiment, API  on the front-end server  interfaces with the API  on the back-end database server  to enable such exploring and searching of attached and unattached content databases. For example, the following APIs are used according to embodiments using MICROSOFT SHAREPOINT:",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public API:"]},{"entry":[{},"\u2003\u2003\u2003Namespace: Microsoft.SharePoint.Administration"]},{"entry":[{},"\u2003\u2003\u2003Class: SPContentDatabase"]},{"entry":[{},"Method1: public static SPContentDatabase"]},{"entry":[{},"CreateUnattachedContentDatabase(SqlConnectionStringBuilder"]},{"entry":[{},"connection)"]},{"entry":[{},"Method2: public static SPContentDatabase"]},{"entry":[{},"CreateUnattachedContentDatabase("]},{"entry":[{},"\u2003\u2003\u2003String databaseInstanceServer,"]},{"entry":[{},"\u2003\u2003\u2003String databaseName,"]},{"entry":[{},"\u2003\u2003\u2003String username,"]},{"entry":[{},"\u2003\u2003\u2003String password)."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"For example, to accomplish such browsing and searching, stored procedures on the back-end database server , or database server, are invoked . In accordance with the Windows SharePoint Services Content Database Administrative Communications Version 2 Protocol Specification (\u201cthe MS-WSSCADM2 protocol\u201d), such stored procedures include, for example:\n\n","The MS-WSSCADM2 protocol provides communication sequences used by front-end servers (e.g., Web servers and application servers) for performing administrative operations on a back-end database server with related content databases. For example, with regard to the above-listed stored procedures, the MS-WSSCADM2 protocol specifies the following information.","The stored procedure \u201cproc_GetSiteCollectionBestMatch,\u201d according to embodiments, is as follows:","proc_GetSiteCollectionBestMatch",{"@attributes":{"id":"p-0069","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":"The proc_GetSiteCollectionBestMatch stored procedure is called to get the site collection identifier and offset of the first site collection whose path starting with the value in @PathSearch when paths of all site collections' are sorted alphabetically in ascending order."}},"The T-SQL syntax for the stored procedure is as follows.",{"@attributes":{"id":"p-0071","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PROCEDURE proc_GetSitecollectionBestMatch ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003@PathSearch","nvarchar(128),"]},{"entry":[{},"\u2003@BestMatchSiteId","uniqueidentifier OUTPUT,"]},{"entry":[{},"\u2003@BestMatchOffset","int OUTPUT"]},{"entry":[{},");"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":"@PathSearch: The path of the site collection to search. The path of a site collection is composed of the host header of the site collection and the store-relative form url of the root site in the site collection. The value, in embodiments, is as indicated in the following table (Table 1):"}},{"@attributes":{"id":"p-0072","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Path Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["host header + \u2018\/\u2019 + store-relative","When host header is not NULL and the"]},{"entry":["form url","store-relative form URL is not empty"]},{"entry":["host header","When host header is not NULL and the"]},{"entry":[{},"store-relative form URL is empty"]},{"entry":["\u2018\/\u2019 + store-relative form url","When host header is NULL"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0005","list-style":"none"},"li":["@BestMatchSiteId: The identifier of the first site collection whose path starts with the value of @PathSearch when paths of all site collections are sorted in ascending order.","@BestMatchOffset: The zero-based offset of the first site collection whose path starts with the value of @PathSearch when paths of all site collections are sorted in ascending order.","Return Code Values: This stored procedure returns 0 upon completion in embodiments.","Result Sets: In embodiments, no result sets are returned."]}},"The stored procedure \u201cproc_GetSiteCollectionSubset,\u201d according to embodiments, is as follows:\n\n",{"@attributes":{"id":"p-0074","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PROCEDURE proc_GetSiteCollectionSubset ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2002@PageSize","int,"]},{"entry":[{},"\u2003\u2002@StartRow","int,"]},{"entry":[{},"\u2003\u2002@SortDirection","\u2002nvarchar(4)"]},{"entry":[{},");"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":["@PageSize: The size of returned subset. @PageSize is greater than 0 in embodiments.","@StartRow: The row number which starts to get the subset site collections. @StartRow is greater or equal than 0 in embodiments.","@SortDirection: The string which specifies whether the sort direction is in descending order or ascending order. @SortDirection is either \u201cDESC\u201d or \u201cASC\u201d in embodiments.","Return Code Values: This stored procedure returns 0 upon completion in embodiments.","Result Sets: Returns Get Site Collection Subset Result Set in embodiments.\n\nThe Get Site Collection Subset Result Set is as follows, according to embodiments:\n\nGet Site Collection Subset Result Set\n","The Get Site Collection Subset result set returns the site collection identifiers and the paths of the site collections that are specified by @StartRow, @PageSize and @SortDirection. The Get Site Collection Subset result set, in embodiments, contains no rows if there is no site collections or no site collections match the condition that the row numbers are greater or equal than @StartRow and less than @StartRow+@PageSize when sorted all the site collections by names with the direction set in @SortDirection.\n\nThe T_SQL syntax for the result set is as follows:\n"]}},{"@attributes":{"id":"p-0075","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Id","uniqueidentifier","NOT NULL,"]},{"entry":[{},"Path","nvarchar(385)","NOT NULL,"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":["Id: The site collection identifier","Path: The path of the site collection. The path is composed of the host header of the site collection and the store-relative form url of the root site. The value, in embodiments, is indicated in the following table (Table 2):"]}},{"@attributes":{"id":"p-0076","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Path Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["host header + \u2018\/\u2019 + store-relative","When host header is not NULL and the"]},{"entry":["form url","store-relative form url is not empty"]},{"entry":["host header","When host header is not NULL and the"]},{"entry":[{},"store-relative form url is empty"]},{"entry":["\u2018\/\u2019 + store-relative form url","When host header is NULL"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The stored procedure \u201cproc_GetWebSubset,\u201d according to embodiments, is as follows:","proc_GetWebSubset","The proc_GetWebSubset stored procedure is called to get a subset of sites including site identifiers, store-relative url and path of the sites. The returned sites have row numbers greater than or equal to @StartRow and less than @StartRow+@PageSize when the names of all sites are sorted alphabetically in the direction specified by the @SortDirection parameter.\n\nThe T-SQL syntax for the stored procedure is as follows.\n",{"@attributes":{"id":"p-0079","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PROCEDURE proc_GetWebSubset ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2002@SiteId","\u2009uniqueidentifier,"]},{"entry":[{},"\u2003\u2002@PageSize","\u2009int,"]},{"entry":[{},"\u2003\u2002@StartRow","\u2009int,"]},{"entry":[{},"\u2003\u2002@SortDirection","nvarchar(4)"]},{"entry":[{},");"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":["@SiteId: The site collection identifier of the site collection that contains the sites.","@PageSize: The total number of returned rows. @PageSize is greater than 0 in embodiments.","@StartRow: The row number which starts to get the subset lists. @StartRow is greater than or equal to 0 in embodiments.","@SortDirection: The string which specifies whether the sort direction is descending order or ascending order. @SortDirection is either \u201cDESC\u201d or \u201cASC\u201d in embodiments.","Return Code Values: This stored procedure returns 0 upon completion in embodiments.\n\nResult Sets:\n","This procedure returns Get Web Subset Result Set in embodiments.","The Get Web Subset Result Set is as follows, according to embodiments:\n\nGet Web Subset Result Set\n","The Get Web Subset result set returns the site identifier, store-relative url and path of the sites that are specified by @StartRow, @PageSize and @SortDirection. The Get Web Subset result set, in embodiments, contains no rows if there is no sites in the site collection or no sites match the condition that the row numbers are greater than or equal to @StartRow and less than @StartRow+@PageSize when names of all lists in the site are sorted in the direction set in @SortDirection.","The T_SQL syntax for the result set is as follows:"]}},{"@attributes":{"id":"p-0080","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Id","uniqueidentifier","NOT NULL,"]},{"entry":[{},"FullUrl","nvarchar(256)","NOT NULL,"]},{"entry":[{},"Path","nvarchar(385)","NOT NULL,"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":["Id: The site identifier of the site.","FullUrl: The store-relative url of the site.","Path: The path of the site. The path is composed of the host header of the site collection and the store-relative url of the site. The value, according to embodiments, is as indicated in the following table (Table 3):"]}},{"@attributes":{"id":"p-0081","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Path Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["host header + \u2018\/\u2019 + store-relative","When host header is not NULL and the"]},{"entry":["form url","store-relative form url is not empty"]},{"entry":["host header","When host header is not NULL and the"]},{"entry":[{},"store-relative form url is empty"]},{"entry":["\u2018\/\u2019 + store-relative form url","When host header is NULL"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The stored procedure \u201cproc_GetWebBestMatch,\u201d according to embodiments, is as follows:\n\n",{"@attributes":{"id":"p-0083","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PROCEDURE proc_GetWebBestMatch ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2002@SiteId","uniqueidentifier,"]},{"entry":[{},"\u2003\u2002@PathSearch","nvarchar(128),"]},{"entry":[{},"\u2003\u2002@BestMatchWebId","\u2002uniqueidentifier OUTPUT,"]},{"entry":[{},"\u2003\u2002@BestMatchOffset","\u2002int OUTPUT,"]},{"entry":[{},"\u2003\u2002@RequestGuid","\u2009uniqueidentifier = null OUTPUT"]},{"entry":[{},");"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0012","list-style":"none"},"li":["@SiteId: The site collection identifier of the site collection which contains the sites being searched.","@PathSearch: The store-relative url of the site to search.","@BestMatchWebId: The site identifier of the first site whose store-relative url starts with the value of @PathSearch when store-relative url of all sites in the site collection are sorted in ascending order.","@BestMatchOffset: The zero-based offset of the first site whose store-relative url starts with the value of @PathSearch when store-relative url of all sites in the site collection are sorted alphabetically in ascending order.","@RequestGuid: The optional request identifier for the current request.","Return Code Values: This stored procedure returns 0 upon completion in embodiments.","Result Sets: Does not return any result sets in embodiments."]}},"The stored procedure \u201cproc_GetListSubset,\u201d according to embodiments, is as follows:","proc_GetListSubset","The proc_GetListSubset stored procedure is called to get a subset of the lists whose row numbers are greater or equal than @StartRow and less than @StartRow+@PageSize when all the lists in the site are sorted alphabetically in the direction set in @SortDirection.\n\nThe T-SQL syntax for the stored procedure is as follows.\n",{"@attributes":{"id":"p-0086","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PROCEDURE proc_GetListSubset ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2002@WebId","uniqueidentifier,"]},{"entry":[{},"\u2003\u2002@PageSize","\u2009int,"]},{"entry":[{},"\u2003\u2002@StartRow","int,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2002@SortDirection \u2002nvarchar(4)"]},{"entry":[{},");"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":["@WebId: The site identifier of the site.","@PageSize: The size of returned subset. @PageSize is greater than 0 in embodiments.","@StartRow: The row number which starts to return the subset lists. @StartRow is greater or equal than 0 in embodiments.","@SortDirection: The string which specifies whether the sort direction is in descending or ascending order. @SortDirection is either \u201cDESC\u201d or \u201cASC\u201d in embodiments.","Return Code Values: This stored procedure returns 0 upon completion in embodiments.","Result Sets: This procedure returns the List Subset Result Set in embodiments.\n\nA Get List Subset Result Set, according to embodiments, is as follows:\n\nGet List Subset Result Set\n","The Get List Subset result set returns the list identifier and the name of the lists that are in the subset specified by @StartRow, @PageSize and @SortDirection. The Get List Subset result set, in embodiments, contains no rows if there are no lists in the site or no lists match the condition that the row numbers are greater or equal than @StartRow and less than @StartRow+@PageSize when sorted all lists by names with the direction set in @SortDirection.\n\nThe T-SQL syntax for the result set is as follows:\n"]}},{"@attributes":{"id":"p-0087","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tp","Id uniqueidentifier","NOT NULL,"]},{"entry":[{},"tp","Title nvarchar(255)","NOT NULL,"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":["tp_Id: The list identifier of the list.","tp_Title: The name of the list."]}},"The stored procedure \u201cproc_GetListBestMatch,\u201d according to embodiments, is as follows:","proc_GetListBestMatch",{"@attributes":{"id":"p-0089","num":"0000"},"ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":"The proc_GetListBestMatch stored procedure is called to get the list identifier and offset of the first list starting with the value in @PathSearch when names of all lists in the site are sorted alphabetically in ascending order.\n\nThe T-SQL syntax for the stored procedure is as follows.\n"}},{"@attributes":{"id":"p-0090","num":"0139"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PROCEDURE proc_GetListBestMatch ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2002@WebId","uniqueidentifier,"]},{"entry":[{},"\u2003\u2002@PathSearch","nvarchar(128),"]},{"entry":[{},"\u2003\u2002@BestMatchListId","uniqueidentifier OUTPUT,"]},{"entry":[{},"\u2003\u2002@BestMatchOffset","int OUTPUT,"]},{"entry":[{},"\u2003\u2002@RequestGuid","uniqueidentifier = null OUTPUT"]},{"entry":[{},");"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":["@WebId: The site identifier of the site that contains lists.","@PathSearch: The name of the list to search.","@BestMatchListId: The list identifier of the first list whose name starts with the value of @PathSearch when the names of all lists in the site are sorted alphabetically in ascending order.","@BestMatchOffset: The zero-based offset of the first list whose name starts with the value of @PathSearch when the names of all lists in the site are sorted alphabetically in ascending order.","@RequestGuid: The optional request identifier for the current request.","Return Code Values: This stored procedure returns 0 upon completion in embodiments.","Result Sets: Does not return any result sets in embodiments."]}},"The stored procedures described above thus enable the browsing and searching of attached and unattached content databases. As noted, these procedures are stored on the back-end database server(s), according to embodiments. For example, returning to  discussed above, if a protocol client desires to obtain the site identifier and offset of a first matched site, front-end server , such as a front-end Web server, calls  the stored procedure \u201cproc_GetWebBestMatch\u201d , according to an embodiment. Back-end database server  returns the site identifier and zero-based offset of the first found site through the output parameters @BestMatchWebID and @BestMatchOffSet, respectively, . In another example embodiment, if a protocol client desires to obtain a subset of lists for a specific site, the stored procedure \u201cproc_GetListSubset\u201d  is called  multiple times to obtain the next set or other set of lists. The value @StartRow is used to specify the row number to start with. The value for @PageSize is used to specify the size of the returned subset. For example, front-end server  calls  the stored procedure \u201cproc_GetListSubset\u201d , and the back-end database server  returns the Get List Subset Result Set . Front-end server  calls  the stored procedure \u201cproc_GetListSubset\u201d with a different value for @StartRow, and back-end server  returns the Get List Subset Result Set .","Finally,  illustrates an exemplary computing system  upon which embodiments disclosed herein may be implemented. A computer system , such as front-end server , , or , for example, which has at least one processor  is depicted in accordance with embodiments disclosed herein. The system  has a memory  comprising, for example, system memory, volatile memory, and non-volatile memory. In its most basic configuration, computing system  is illustrated in  by dashed line . Additionally, system  may also include additional storage (removable and\/or non-removable) including, but not limited to, magnetic or optical disks or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage .","The term computer readable media as used herein may include computer storage media. Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory , removable storage , and non-removable storage  are all computer storage media examples (i.e., memory storage.) Computer storage media may include, but is not limited to, RAM, ROM, electrically erasable read-only memory (EEPROM), flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store information and which can be accessed by computing device . Any such computer storage media may be part of device . The illustration in  is intended in no way to limit the scope of the present disclosure.","The term computer readable media as used herein may also include communication media. Communication media may be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared, and other wireless media.","System  may also contain communications connection(s)  that allow the device to communicate with other devices. Additionally, to input content into the fields of a User Interface (UI) on client or browser computer , for example, as provided by a corresponding UI module (not shown) on client computer , for example, in accordance with an embodiment of the present disclosure, system  may have input device(s)  such as a keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s)  such as a display, speakers, printer, etc. may also be included. All of these devices are well known in the art and need not be discussed at length here. The aforementioned devices are examples and others may be used.","Having described embodiments of the present disclosure with reference to the figures above, it should be appreciated that numerous modifications may be made to the embodiments that will readily suggest themselves to those skilled in the art and which are encompassed within the scope and spirit of the present disclosure and as defined in the appended claims. Indeed, while embodiments have been described for purposes of this disclosure, various changes and modifications may be made which are well within the scope of the present disclosure.","Similarly, although this disclosure has used language specific to structural features, methodological acts, and computer-readable media containing such acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific structure, acts, features, or media described herein. Rather, the specific structures, features, acts, and\/or media described above are disclosed as example forms of implementing the claims. Aspects of embodiments allow for multiple client computers, multiple front-end servers, multiple back-end database servers, multiple databases, and multiple networks, etc. Or, in other embodiments, a single client computer with a single front-end server, single back-end database server, single database and single network are used. One skilled in the art will recognize other embodiments or improvements that are within the scope and spirit of the present disclosure. Therefore, the specific structure, acts, or media are disclosed as example embodiments of implementing the present disclosure. The disclosure is defined by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
