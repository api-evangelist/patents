---
title: Flat or extended architecture using an integrated application and operating system component for computing systems and environments
abstract: In an integrated approach, an integrated application and operating system (IAOS) component integrates at least one computer application program with at least one operating system (OS) function. The IAOS component is an upper level system relative to a lower level system. The lower level system includes an OS operable to perform a reduced set of OS functions. The OS may be optimized for the IAOS component. For example, the OS may be optimized for Web-based and/or Browser-based applications of the IAOS component. In a flat approach, at least one component is an adjacent component in an upper level system, thereby allowing extension of the upper level system to accommodate various needs. An adjacent component can include at least one OS component and/or function not provided by the OS, serve as an interface to another layer and/or the OS, or provide Real-Time Operating System.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08924987&OS=08924987&RS=08924987
owner: Samsung Electronics Co., Ltd.
number: 08924987
owner_city: Suwon-si
owner_country: KR
publication_date: 20090914
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-RELATION TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims priority to provisional patent application Ser. No. 61\/117,082, entitled \u201cEXTENDED AND\/OR ADJUSTABLE COMPUTING SYSTEMS USING ABSTRACT AND\/OR CONCEALED COMPUTING SERVICE PROVIDERS,\u201d filed Nov. 21, 2008, provisional patent application Ser. No. 61\/222,654, entitled \u201cEXTENDING THE CAPABILITY OF COMPUTING DEVICES BY USING ABSTRACT AND DYNAMICALLY SCALABLE EXTERNAL RESOURCES,\u201d filed Jul. 2, 2009, provisional patent application Ser. No. 61\/222,855, entitled \u201cSECURING ELASTIC APPLICATIONS ON MOBILE DEVICES FOR CLOUD COMPUTING,\u201d filed Jul. 2, 2009, and provisional patent application Ser. No. 61\/233,089, entitled \u201cFLAT OR EXTENDED ARCHITECTURE USING AN INTEGRATED APPLICATION AND OPERATING SYSTEM COMPONENT FOR COMPUTING SYSTEMS AND ENVIRONMENTS,\u201d filed Aug. 11, 2009, which are all hereby incorporated herein by reference in their entirety and for all purposes.","Conceptually, a computing system (e.g., a computing device, a personal computer, a laptop, a Smartphone, a mobile phone) can accept information (content or data) and manipulate it to obtain or determine a result based on a sequence of instructions (or a computer program) that effectively describes how to process the information. Typically, the information is stored in a computer readable medium in a binary form. More complex computing systems can store content including the computer program itself. A computer program may be invariable and\/or built into, for example, a computer (or computing) device as logic circuitry provided on microprocessors or computer chips. Today, general purpose computers can have both kinds of programming. A computing system can also have a support system which, among other things, manages various resources (e.g., memory, peripheral devices) and services (e.g., basic functions such as opening files) and allows the resources to be shared among multiple programs. One such support system is generally known as an Operating System (OS), which provides programmers with an interface used to access these resources and services.","An Operating System (OS) can be an infrastructure software component of a computing system. As such, an OS can effectively manage and coordinate activities of a computing system, and facilitate sharing of the limited resources of the computer. An OS can act as a host for various computing application programs (or application programs) that are executed by the computing system. As a host, the OS, among other things, can handle the details of the lower level operations pertaining to the hardware. This effectively relieves application programs from having to manage details and makes it easier to develop application programs. Generally, computing devices, including handheld computers, desktop computers, supercomputers, video game consoles, use an operating system of some type. Functions provided by an OS can include: resource management (e.g., management and coordination of activities and the sharing of limited resources), scheduling (e.g., schedule resource accesses between hosted applications), abstraction (e.g., providing abstract device access via device drivers), and Inter-process Communication (IPC). In a traditional OS, (e.g., Windows Operating Systems, Linux Operating Systems) and OS \u201ckernel\u201d or (kernel) and system services can provides these functions to higher level applications programs. The application programs can access OS functions via system calls to the OS kernel and Application Programming Interfaces (API's) to system services.","Today, numerous types of computing devices are available. These computing devices widely range with respect to size, cost, amount of storage and processing power. The computing devices that are available today include: expensive and powerful servers, relatively cheaper Personal Computers (PC's) and laptops, and yet less expensive microprocessors (or computer chips) provided in storage devices, automobiles, and household electronic appliances.","In recent years, computing systems have become more portable and mobile. As a result, various mobile and handheld devices have been made available. By way of example, wireless phones, media players, Personal Digital Assistants (PDA's) are widely used today. Generally, a mobile or a handheld device (also known as handheld computer or simply handheld) can be a pocket-sized computing device, typically utilizing a small visual display screen for user output and a miniaturized keyboard for user input. In the case of a Personal Digital Assistant (PDA), the input and output can be combined into a touch-screen interface.","In particular, mobile communication devices (e.g., mobile phones) have become extremely popular. Some mobile communication devices (e.g., Smartphones) offer computing environments that are similar to that provided by a Personal Computer (PC). As such, a Smartphone can effectively provide a complete operating system as a standardized interface and platform for application developers. Given the popularity of mobile communication devices, telecommunication is discussed in greater detail below.","Generally, telecommunication refers to assisted transmission of signals over a distance for the purpose of communication. Conventional telephones have been in use for many years. Public switched telephone network (PSTN) is the network of the world's public circuit-switched telephone networks, in much the same way that the Internet is the network of the world's public IP-based packet-switched networks. Originally a network of fixed-line analog telephone systems, the PSTN is now almost entirely digital, and now includes mobile as well as fixed telephones. The PSTN is largely governed by technical standards created by the ITU-T, and uses E.163\/E.164 addresses (known more commonly as telephone numbers) for addressing.","More recently, wireless networks have been developed. While the term wireless network may technically be used to refer to any type of network that is wireless, the term is often commonly used to refer to a telecommunications network whose interconnections between nodes is implemented without the use of wires, such as a computer network (which is a type of communications network). Wireless telecommunication networks can, for example, be implemented with some type of remote information transmission system that uses electromagnetic waves, such as radio waves, for the carrier and this implementation usually takes place at the physical level or \u201clayer\u201d of the network (e.g., the Physical Layer of the OSI Model). One type of wireless network is a WLAN or Wireless Local Area Network. Similar to other wireless devices, it uses radio waves instead of wires to transmit data back and forth between computers on the same network. Wi-Fi is a commonly used wireless network in computer systems allowing connection to the internet or other machines that have Wi-Fi functionalities. Wi-Fi networks broadcast radio waves that can be picked up by Wi-Fi receivers that are attached to different computers or mobile phones. A fixed wireless network is a type of wireless data network that can be used to connect two or more buildings together in order to extend or share the network bandwidth without physically wiring the buildings together.","Today, several mobile networks are in use. One example is the Global System for Mobile Communications (GSM) which is divided into three major systems which are the switching system, the base station system, and the operation and support system. A cell phone can connect to the base system station which then connects to the operation and support station; it can then connect to the switching station where the call is transferred to where it needs to go (Global System for Mobile Communication (GSM)). This is used for cellular phones as a common standard for a majority of cellular providers. Personal Communications Service (PCS) is a radio band that can be used by mobile phones in North America. Sprint happened to be the first service to set up a PCS. Digital Advanced Mobile Phone Service (D-AMPS) is an upgraded version of AMPS but it may be phased out as the newer GSM networks are replacing the older system.","Yet another example is the General Packet Radio Service (GPRS) which is a Mobile Data Service available to users of Global System for Mobile Communications (GSM) and IS-136 mobile phones. GPRS data transfer is typically charged per kilobyte of transferred data, while data communication via traditional circuit switching is billed per minute of connection time, independent of whether the user has actually transferred data or has been in an idle state. GPRS can be used for services such as Wireless Application Protocol (WAP) access, Short Message Service (SMS), Multimedia Messaging Service (MMS), and for Internet communication services such as email and World Wide Web access. 2G cellular systems combined with GPRS is often described as \u201c2.5G\u201d, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused Time Division Multiple Access (TDMA) channels in, for example, the GSM system. Originally there was some thought to extend GPRS to cover other standards, but instead those networks are being converted to use the GSM standard, so that GSM is the only kind of network where GPRS is in use. GPRS is integrated into GSM Release 97 and newer releases. It was originally standardized by European Telecommunications Standards Institute (ETSI), but is now standardized by the 3rd Generation Partnership Project (3GPP). W-CDMA (Wideband Code Division Multiple Access) is a type of 3G cellular network. W-CDMA is the higher speed transmission protocol used in the Japanese FOMA system and in the UMTS system, a third generation follow-on to the 2G GSM networks deployed worldwide. More technically, W-CDMA is a wideband spread-spectrum mobile air interface that utilizes the direct sequence Code Division Multiple Access signaling method (or CDMA) to achieve higher speeds and support more users compared to the implementation of time division multiplexing used by 2G GSM networks. It should be noted that SMS can be supported by GSM and MMS can be supported by 2.5G\/3G networks.","Generally, a mobile phone or cell phone can be a long-range, portable electronic device used for mobile communication. In addition to the standard voice function of a telephone, current mobile phones can support many additional services such as SMS for text messaging, email, packet switching for access to the Internet, and MMS for sending and receiving photos and video. Most current mobile phones connect to a cellular network of base stations (cell sites), which is in turn, interconnected to the public switched telephone network (PSTN) (one exception being satellite phones).","The Short Message Service (SMS), often called text messaging, is a means of sending short messages to and from mobile phones. SMS was originally defined as part of the GSM series of standards in 1985 as a means of sending messages of up to 160 characters, to and from Global System for Mobile communications (GSM) mobile handsets. Since then, support for the service has expanded to include alternative mobile standards such as ANSI CDMA networks and Digital AMPS, satellite and landline networks. Most SMS messages are mobile-to-mobile text messages, though the standard supports other types of broadcast messaging as well. The term SMS is frequently used in a non-technical sense to refer to the text messages themselves, particularly in non-English-speaking European countries where the GSM system is well-established.","Multimedia Messaging Service (MMS) is a relatively more modern standard for telephony messaging systems that allows sending messages that include multimedia objects (images, audio, video, rich text) and not just text as in Short Message Service (SMS). It can be deployed in cellular networks along with other messaging systems like SMS, Mobile Instant Messaging and Mobile E-mail. Its main standardization effort is done by 3GPP, 3GPP2, and Open Mobile Alliance (OMA).","Another more recent trend is the ever increasing accessibility of the Internet and the services that can be provided via the Internet. Today, the Internet can be accessed virtually anywhere by using various computing devices. For example, mobile phones, smart phones, datacards, handheld game consoles, cellular routers, and numerous other devices can allow users to connect to the Internet from anywhere in a cellular network. Within the limitations imposed by the small screen and other limited facilities of a pocket-sized or handheld device, the services of the Internet, including email and web browsing, may be available. Typically, users manage information with web browsers, but other software can allow them to interface with computer networks that are connected to or by the Internet. These other programs include, for example, electronic mail, online chat, file transfer and file sharing. Today's Internet can be viewed as a vast global network of interconnected computers, enabling users to share information along multiple channels. Typically, a computer that connects to the Internet can access information from a vast array of available servers and other computers by moving information from them to the computer's local memory. The Internet is a very useful and important resource as readily evidenced by its ever increasing popularity and widening usage and applications.","The popularity of computing systems is evidenced by their ever increasing use in everyday life. Accordingly, techniques that can improve computing systems would be very useful.","Broadly speaking, the invention relates to computing systems and computing environments. More particularly, the invention pertains to an architectural model for computing environments and computing systems. It will be appreciated that the architectural model can use integrated and\/or flat (or extended) approaches that are especially suitable for designing software architectural layers.","In accordance with one aspect of the invention, an \u201cintegrated application and OS\u201d component can effectively integrate at least one computer application program with one or more OS functions, in an integrated approach. The integrated application and OS component can be provided in or as an upper level system (or layer) in relation to a lower level system (or layer). The lower level system can include an OS operable to perform a reduced set of operating system functions not including one or more functions that can be performed by the integrated application and OS component of the upper layer. It will be appreciated that the OS can be a reduced, limited and\/or lightweight OS (e.g., a micro kernel).","In accordance with another aspect of the invention, the OS may be specialized and\/or optimized for the components of the upper level system including the integrated application and OS component. By way of example, the OS may be specialized and\/or optimized for Web-based and\/or Browser-based applications of the integrated application and OS component.","In accordance with yet another aspect of the invention, one or more components can be provided as adjacent components in an upper level of an architectural model in a flat (or extended) approach, thereby allowing effective extension of the upper level to accommodate various needs including, for example, the need for new hardware, or customization for a particular situation. It will be appreciated that an adjacent component can, for example, include one or more operating system components not provided by the OS (e.g., Device Drivers) and\/or one or more functions that are not provided by the operating system (e.g., application management, security and\/or isolation of applications). As another example, an adjacent component can effectively serve as an interface to another adjacent layer and\/or the OS. As yet another example, an adjacent layer may also provide a Run Time Environment (RTE), or Virtual Computing Environment (VCE), or a Real-Time Operating System (RTOS) as multitasking OS for real-time applications.","It will be appreciated that integrated and\/or flat (or extended) approaches of the invention can provide flexible and scalable environments, allowing development of applications for a relatively simple OS, thereby reducing the costs associated with application development and porting between different Operating Systems. It will also be appreciated that a flat (or extended) architectural model (or approach) is especially suited for Web-based applications, and in particular, Browser-based applications. As such, a Browser application can be integrated with one or more OS functions and provided in an upper level supported by a reduced OS optimized for browsing and Browser-based applications.","In accordance with one embodiment of the invention, a computing system can include a lower level system and an upper level system. The lower level system can include an operating system operable to perform a reduced set of operating system functions not including one or more first operating system functions that can be performed by an integrated system in the upper level system. The upper level system can include an integrated system integrating at least one computer application program with at least one User Interface (UI). The integrated system can be operable to perform first operating system functions that the OS is not operable to perform.","In accordance with another embodiment of the invention, a second system can be effectively provided as an adjacent system with respect to an integrated system. The second system includes one or more operating system components and\/or one or more functions that are not provided by the OS. By way of example, the second system can include one or more Device Drivers, that can be accessed by a browser-based integrated system via an Abstract Hardware Interface (AHI) system provided as another adjacent system (a third system). In addition, yet another adjacent layer can provide a Real-Time Operating System (RTOS) for supporting one or more real-time computer application programs.","The invention can be implemented in numerous ways, including, for example, a method, an apparatus, a computer readable (and\/or storable) medium, and a computing system (e.g., a computing device). A computer readable medium can, for example, include at least executable computer program code stored in a tangible form. Several embodiments of the invention are discussed below.","Other aspects and advantages of the invention will become apparent from the following detailed description, taken in conjunction with the accompanying drawings, illustrating by way of example the principles of the invention.","As noted in the background section, computing environments and systems are very useful. Generally, a computing system can utilize an Operating System (OS). Conventionally, a rich or full OS with a full set of OS functions can be provided to support computer application programs (or applications). In a traditional top-down architectural model, the OS is in a lower software layer (or OS layer) supporting applications in an upper (or higher) software layer (Application Layer). The upper (or Application) and lower (or OS) software layers are well defined with respect to the functions they provide so that the applications in the application layer do not provide OS functions but can rely on a rich or full OS in the application layer to provide various OS functions including: resource management (e.g., management and coordination of activities and the sharing of limited resources), scheduling (e.g., schedule resource accesses between hosted applications), abstraction (e.g., providing abstract device access via device drivers), and Inter-Process Communication (IPC). Conventionally, an OS \u201ckernel\u201d (or kernel) and\/or system services can provide these functions to higher level applications programs. The application programs can access OS functions via system calls to the OS kernel and Application Programming Interfaces (API's) to system services. In addition, various operating system components (e.g., device drivers) are typically integrated with an OS and\/or provided in an operating system layer that can be effectively isolated from the applications. Examples of generally well know Operating Systems include, Windows Operating Systems and Linux Operating Systems.","It will be appreciated that providing a rich or full OS may not be desirable or feasible for some computing systems, especially those operating with limited resources (e.g., limited processing power and\/or limited memory). Also, development of application programs for various operating systems and porting them from one OS to another OS can be costly and problematic. Moreover, a rich or full OS of a conventional computing system may not be an ideal solution for providing Web-based applications and especially browser-based applications. More generally, a traditional top-down architectural model may not be well suited for future development of application programs and computing devices, especially for development of web-based application for mobile and Consumer Electronic (CE).","The invention pertains to an architectural model for computing environments and computing systems. It will be appreciated that the architectural model can use integrated and\/or flat (or extended) approaches that are especially suitable for designing software architectural layers.","In accordance with one aspect of the invention, an \u201cintegrated application and OS\u201d component can effectively integrate at least one computer application program with one or more OS functions, in an integrated approach. The integrated application and OS component can be provided in or as an upper level system (or layer) in relation to a lower level system (or layer). The lower level system can include an OS operable to perform a reduced set of operating system functions not including one or more functions that can be performed by the integrated application and OS component of the upper layer. It will be appreciated that the OS can be a reduced, limited and\/or lightweight OS (e.g., a micro kernel).","In accordance with another aspect of the invention, the OS may be specialized and\/or optimized for the components of the upper level system including the integrated application and OS component. By way of example, the OS may be specialized and\/or optimized for Web-based and\/or Browser-based applications of the integrated application and OS component.","In accordance with yet another aspect of the invention, one or more components can be provided as adjacent components in an upper level of an architectural model in a flat (or extended) approach, thereby allowing effective extension of the upper level to accommodate various needs including, for example, the need for new hardware, or customization for a particular situation. It will be appreciated that an adjacent component can, for example, include one or more operating system components not provided by the OS (e.g., Device Drivers) and\/or one or more functions that are not provided by the operating system (e.g., application management, security and\/or isolation of applications). As another example, an adjacent component can effectively serve as an interface to another adjacent layer and\/or the OS. As yet another example, an adjacent layer may also provide a Run Time Environment (RTE), or Virtual Computing Environment (VCE), or a Real-Time Operating System (RTOS) as multitasking OS for real-time applications.","It will be appreciated that integrated and\/or flat (or extended) approaches of the invention can provide flexible and scalable environments, allowing development of applications for a relatively simple OS, thereby reducing the costs associated with application development and porting between different Operating Systems. It will also be appreciated that a flat (or extended) architectural model (or approach) is especially suited for Web-based applications, and in particular, Browser-based applications. As such, a Browser application can be integrated with one or more OS functions and provided in an upper level supported by a reduced OS optimized for browsing and Browser-based applications.","In accordance with one embodiment of the invention, a computing system can include a lower level system and an upper level system. The lower level system can include an operating system operable to perform a reduced set of operating system functions not including one or more first operating system functions that can be performed by an integrated system in the upper level system. The upper level system can include an integrated system integrating at least one computer application program with at least one User Interface (UI). The integrated system can be operable to perform first operating system functions that the OS is not operable to perform.","In accordance with another embodiment of the invention, a second system can be effectively provided as an adjacent system with respect to an integrated system. The second system includes one or more operating system components and\/or one or more functions that are not provided by the OS. By way of example, the second system can include one or more Device Drivers, that can be accessed by a browser-based integrated system via an Abstract Hardware Interface (AHI) system provided as another adjacent system (a third system). In addition, yet another adjacent layer can provide a Real-Time Operating System (RTOS) for supporting one or more other real-time computer application programs that may not be supported by the OS or may not be part of the Integrated system.","Embodiments of these aspects of the invention are discussed below with reference to . However, those skilled in the art will readily appreciate that the detailed description given herein with respect to these figures is for explanatory purposes as the invention extends beyond these limited embodiments.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 1","b":["100","100","102","102","102","102","102","102","102","102","102"]},"To further elaborate, an integrated (or flat) architectural model  will be described in context of an exemplary software architecture model. Firstly, it should be noted that in an integrated approach of the architecture model , components and\/or functions conventionally provided by the lower layer A can be effectively moved to the upper layer B. Secondly, in a flat (or extended) approach, the components and\/or functions (e.g., operating system functions, device drives conventionally incorporated in the operating system) can be provided as two or more adjacent layers. Generally, the second software layer B can include as many adjacent layers as may be needed and\/or desired. It should also be noted that the second software layer B can be effectively supported by the first software layer  which can be effectively built over a Hardware (or Hardware Layer) . It will be appreciated that the first software layer  can effectively replace a conventional Operating System (OS) layer. As such, the computing environment  can, for example, be provided as a computing system and\/or by a computing system (e.g., computing device).","Referring to , as a software layer, the first layer A can include an Operating System (OS) . More particularly, the OS  can be provided as a Reduced Operating System (ROS) . Those skilled in the art will appreciate that a ROS  can, for example, be provided as a limited and\/or lightweight OS (e.g., a micro kernel). In other words, the ROS  can lack some of the operating system capabilities or operating system functions conventionally provided by a traditional OS (e.g., conventional Linux, Unix, or Windows Operating Systems). In this respect, the ROS  may be considered to be a reduced, or a limited version of a \u201cfull\u201d or \u201crich\u201d conventional OS. Furthermore, it will be appreciated that the ROS A may be specialized and\/or optimized for the second layer B. As such, ROS A can, for example, be provided as a limited, lightweight and\/or specialized micro kernel provided specifically for supporting a second software layer B.","As shown in , as a software layer, the second layer B can include an integrated system B. Generally, the integrated system B can integrate functionalities that are traditionally assigned to the lower layer A (e.g., operating system functions) with those that are traditionally assigned to the upper layer B (e.g., Application Program functions, User Interface functions). By way of example, the integrated system B can be provided as an Integrated Operating, Application, and User Interface (IOAUI) component (or system) B. Unlike a conventional computer Application Program Layer (or Application layer), an IOAUI component B can effectively integrate an Application Program  with one or more operating system functions (or capabilities)  conventionally provided by an Operating System. In addition, IOAUI component B can effectively integrate a User Interface (UI)  with an Application Program  and operating system capabilities . The UI  can be operable to allow a user to access the Application Program  and effectively use the computing services made available by the computing environment . Referring to , IOAUI component B can be provided as an integrated package of a UI , one or more Application Programs , and one or more Operating System (OS) functions  (OS, . . . , OS, where n is greater or equal to one). It should be noted that the IOAUI component B can be provided as a User Interface (or interface-based) Application Program that combines or integrates an Application Program with a User Interface. By way of example, the IOAUI component B can include a Web browser computer application program (or a Web browser as generally known in the art) and one or more OS functions or capabilities .","The Operating System (OS) functions  can, for example, include one or more of the following: application management, high-level application management, application isolation and\/or security management, process management, high-level process management, scheduling operations, high-level scheduling operations, interrupt handling, and high-level interrupt handling. As such, as a reduced or limited operating system, a ROS  may be operable to provide only a limited set of operating system functions. By way of example, the ROS  may be operable only to perform memory management and Inter-Process Communication (IPC). As another example, a ROS  may be operable only to perform memory management, Inter-Process Communication (IPC), scheduling and interrupt handling. An additional OS functions needed can be provided in the upper level B as may be needed by the integrated system B, or as one or more adjacent system B and B.","As shown in , a component B can be provided as an adjacent layer (or component) to the integrated layer B. For example, an adjacent software layer B can provide OS functions or components conventionally provided by an OS. In other words, an adjacent software layer B can provide OS capabilities and\/or components that are not provided by a ROS . These operating system functions (or capabilities) and\/or components may or may not be provided by the integrated layer B. By way of example, an adjacent software layer B can provide Device Drivers (DDs) for various hardware devices of a hardware layer , as will be known to those skilled in the art. Conventionally, these Device Drivers (DDs) are provided as a part of the OS (e.g., as a part of a Kernel). However, it will be appreciated that Device Drivers (DDs) can be effectively removed from the OS and provided as one or more adjacent software layers B in connection with an integrated software layer B.","Additionally, one or more other adjacent software layers B can be provided in the second software layer B. By way of example, an adjacent software layer B may be provided to allow accessing and\/or interfacing with another adjacent software layer in the upper layer B (e.g., a Hardware Abstract Layer (HAL) for accessing an adjacent Device Driver layer). As another example, an adjacent software layer B may provide a Real-Time Operating System (RTOS) to support real-time applications.","It will be appreciated that the architectural model , among other things, allows providing a relatively simple OS, thereby reducing or eliminating the cost associated with having to port applications from one conventional OS to another conventional OS. This approach allows development of Application Programs without having to change the OS, thereby enhancing application program development and maintenance.","It will also be appreciated that the architectural model  is especially suited for Web-based computing environments and Web-based applications. To further elaborate,  depicts a Web-based computing environment and\/or system  in accordance with one embodiment of the invention. Referring to , a flat software architectural layer  is depicted with a lower software layer A and an upper software layer B. The lower software layer A can provide a Reduced Operating System (ROS)  specialized and\/or optimized for Web-based application. As such, those skilled in the art will appreciate that the ROS  can, for example, be provided as a browser-optimized micro-kernel (\u03b2) for a browser-based integrated layer B. As shown in , the browser-based integrated layer B can include a Browser User Interface Application (BUIA)  (e.g., a conventional web browser application), one or more web-based applications  (e.g., a general web-based application, a browser-based phone application), and Web-based operating (or operational) support component (or system) . Generally, the Web-based operating component  can provide OS functionalities pertaining to web-based applications conventionally provided by an OS. By way of example, the Web-based operating support component  can provide high-level management functions for managing web-based applications . In addition, the Web-based operating support component  may be operable to perform other operating systems functions including the OS functions noted above with respect to the integrated system B depicted in , including: application isolation, security management, process management, scheduling operations, and interrupt handling.","As will be appreciated by those skilled in the art, the browser-based integrated layer B can be effectively supported by a Run Time Environment (RTE), or a Virtual Computing Environment (VCE) . By way of example, a Virtual Machine (VM)  can effectively support execution of one or more web-based applications .","Referring to , an Abstract Hardware (or Device) Interface (AHI) component (or system) B, and a Hardware (or Device) Interface (HI) B are provided as adjacent layers in the upper level B. The Hardware Interface (HI) B represents one or more hardware interfaces that are conventionally integrated in an OS and\/or effectively provided by an OS (e.g., one or more device drivers conventionally provided in a kernel). It will be appreciated that the AHI component B can serve as an interface to the browser-based integrated layer B. In other words, the browser-based integrated layer B can use the AHI component B as an interface for accessing the HI B. As such, the AHI component B can, for example, be provided as, or similar to, a Hardware Abstraction Layer (HAL) that may include graphics, Input\/Output (I\/O), and\/or a file system. As generally known in the art, a conventional Hardware Abstraction Layer (HAL) can serve as an abstraction layer, implemented in software, between physical hardware of a computer and the software that runs on that computer. HAL can function to hide differences in hardware from most of the operating system kernel, so that most of the kernel-mode code does not need to be changed to run on systems with different hardware.","It should be noted that the ROS  can be operable to provide only basic conventional operating system capabilities, such as, Inter-Process Communication (IPC) and memory management (e.g., memory allocation). However, the ROS  can be operable to provide specialized or specific functions for Web-based environments. By way of example, an ROS  can be specialized and\/or optimized for multi-tasking to allow a browser UI application  to load multiple Webpages. As another example, an ROS  can provide security functions operable to isolate and\/or protect Web-based applications  from each other.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["300","300","300","302","302","302","302","304","304","306","302","307","308","310","306","312","312","312","312","312","306","314","314","314","314","314"]},"Referring to , Hardware Abstraction Layer (HAL)  and Device Driver (DD) Layer  are provided as adjacent layers in the upper layer in the flat (or extended) software architecture . It should be noted that the browser-based integrated layer  is operable to use (or interface with) the HAL  to access one or more hardware device drivers of the Device Driver (DD) Layer  (e.g., an Audio\/Video hardware component, or a Networking component). In addition, a RTOS A is provided in another adjacent software layer  of the upper software layer B. The (RTOS) A can be operable to support real-time components B (e.g., real time network access)","Those skilled in the art will appreciate that flat (or extended) software architecture  allows effective splitting and\/or partitioning of OS functions needed for execution of browser-based applications between the lower and upper software layers A and B. The OS function can be provided by one or more components of the Browser-based integrated application , the Browser-optimized micro-kernel (\u03b2) , or more or other adjacent components (e.g., component ), layer or sub-layers.","Those skilled in the art will also appreciate that the architecture  allows providing rich browser functions, servicing Rich Internet Applications (RIA's), as well as, providing interfaces for application development of RIA and phone related applications. More particularly, a uniform interface for Browser-based applications can be provided to interact with a Browser-optimized micro-kernel (\u03b2) , abstracting hardware and network resources, thereby simplifying development of Browser-based applications. Unlike conventional environments, in a flat software architecture , the web applications need not be limited to accessing platform resources (e.g., limited to accessing a dedicated directory of a local files system, or accessing Web sites based on the same-origin principle). A uniform interface for browser-based applications, also allows effectively extending the life cycle of the applications and widgets.","It should also be noted that a Browser-based integrated layer (e.g, Browser-based integrated layer ) need not be provided for a particular hardware. In other words, the Browser-based integrated layer  may initially be provided as a general purpose Browser-based component. However, a flat (or extended) software architecture  can be scalable and flexible to allow supporting specific or new hardware and\/or applications as may be needed by allowing adjacent components (or layers) to be added. By way of example, when new hardware is to be provided, the device driver(s) for the new hardware can be provided as an adjacent layer , thereby seamlessly supporting new hardware (e.g., device drivers can be loaded into a dedicated device driver layer, or domain Virtual Machine). This flexibility and scalability provides \u201cplug-and-play\u201d capabilities. In addition, new Web-based applications and services can be developed to fully leverage a Browser-based integrated layer  using simple and uniform interfaces provided to access various hardware resources and network connections that are available today, as well as those that may be developed in the future.","A Browser-based integrated layer  provided for a relatively simple, limited, or reduced OS (or micro OS)  can reduce the complexity of software development, especially for Consumer Electronic (CE) devices that tend to operate with limited resources (e.g., processing power, memory). As such, there is no need to provide a rich (or full) OS with redundant functionality, especially for Browser-based applications.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 4","b":["400","400"]},"Referring to , the browser-based integrated layer  can provide similar components as the browser-based integrated component  depicted in . However, the browser-based integrated layer  can also include additional phone applications  developed for a Browser-optimized micro-kernel (\u03b2) (not shown). Moreover, the browser-based integrated layer  can provide a process management component  and a browser-based Inter-Process Communication (IPC) component . The process management component  can perform process management operations for various Web-based, browser-based and\/or phone-based applications of the browser-based integrated layer . Such process management operations are conventionally performed by an OS. Similarly, the Browser-based Inter-Process Communication (IPC) component  can perform Inter-Process Communication (IPC) between processes of various for various Web-based, browser-based and\/or phone-based applications of the browser-based integrated layer .","It should be noted that a Browser-based integrated layer  may also include an Elastic Computing System (ECS)  operable to effectively use the external computing resources (e.g., processing power A, memory B) of an abstract and\/or concealed computing component which can, for example, be an Abstract and Dynamically Scalable Computing Resource (ADSCR), as will be known to those skilled in the art. An ADSCR can, for example, be a \u201cCloud\u201d computing resource. The ECS  can include a plurality of components and can be operable to effectively extend the internal computing resources of a computing device by utilizing the computing resources of the abstract and\/or concealed computing component. The ECS  can, for example, be provided in accordance with the techniques described in the U.S. patent application Ser. No. 12\/559,394 (SISAP072), entitled: \u201cEXTENDING THE CAPABILITY OF COMPUTING DEVICES BY USING DYNAMICALLY SCALABLE EXTERNAL RESOURCES,\u201d which is hereby incorporated by reference herein in its entirety and for all purposes.","The various aspects, features, embodiments or implementations of the invention described above can be used alone or in various combinations. The many features and advantages of the present invention are apparent from the written description and, thus, it is intended by the appended claims to cover all such features and advantages of the invention. Further, since numerous modifications and changes will readily occur to those skilled in the art, the invention should not be limited to the exact construction and operation as illustrated and described. Hence, all suitable modifications and equivalents may be resorted to as falling within the scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be readily understood by the following detailed description in conjunction with the accompanying drawings, wherein like reference numerals designate like structural elements, and in which:",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
