---
title: Virtual machine allocation in a computing on-demand system
abstract: A method and system may receive a request to provision a virtual machine based on configuration information. Potential resources for hosting the virtual machine may be identified and scored. The scored potential resources may be ranked and an optimal resource for hosting the requested virtual machine may be selected based on the ranking. The requested virtual machine may be provisioned on the selected optimal resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08850442&OS=08850442&RS=08850442
owner: Verizon Patent and Licensing Inc.
number: 08850442
owner_city: Basking Ridge
owner_country: US
publication_date: 20111027
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND INFORMATION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["The term \u201cvirtualization\u201d encompasses creating and running a simulated computer environment (e.g., a virtual machine) on a hardware or software platform. The simulated computer environment may, in turn, include a software system (e.g., operating system) that hosts one or more applications. Such virtual machines may be configured to simulate physical computers with various capabilities and capacities, such as computing power and architecture, memory, etc.","The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.","A system may provision both virtual resources and physical resources. When a user wishes to obtain computing resources, such as a virtual machine, a server, an application, a web server, etc., the user may connect to an integrated provisioning system via a web portal. Once connected via a web interface, the user, such as a customer service representative or a customer may input parameters that describe the desired resource. Based on the parameters and information relating to existing resources allocated in the system, the integrated resource provisioning system retrieves information regarding available resources, previously allocated resources, and various system limitations. Based on this information, the provisioning system identifies viable physical host candidates on which to place the requested resource and scores\/ranks the candidates. An optimal physical candidate is selected for provisioning and the requested resource is provisioned on the optimal candidate.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","100","100","100"]},"As shown, network  may include a presentation network , resource management network , workflow network , virtual system network , inventory management network , and physical resource network . For simplicity and ease of understanding, network  of  does not show other network or network components, such as bridges, routers, switches, wireless devices, etc. Depending on the implementation, network  may include additional, fewer, or different networks and\/or network components.","Presentation network  may include devices that interact with users and system administrators. As further shown in , presentation network  may include an administrator portal device - and a user portal device -. Administrator portal device - may interact with and relay information between a system administrator device, shown as item , and resource management network . Through the interaction, system administrator device  may perform system\/network administration tasks (e.g., managing user accounts, performing an action that a user is not authorized to perform, etc.).","User portal device - may interact with and relay information between a user device, illustrated as item , and resource management network . User device  may access provisioning services that are available via user portal device -. For example, user device  may request resource management network  to create a virtual machine, provision a physical server, configure a load balancer or firewall, etc.","Resource management network  may provide provisioning services. In providing the provisioning services, resource management network  may track pools of resources that are available to user device , reserve a portion of the resources based on a request from user device , and allocate the reserved resources to user device . In addition, resource management network  may deallocate the resources (e.g., return the portion to the pool) when user device  indicates that the user does not need the resources.","In addition, resource management network  may provide support for administrative tasks (e.g., administer user, perform resource allocation tasks that a user is not authorized to perform, etc.) and\/or configuration tasks.","As further shown in , resource management network  may include a job database device -, resource manager database -, and resource management device -. Job database device - may receive a job description (e.g., a list of tasks) from resource management device - and store it in an active job queue until the job is performed. Resource manager database - may store and\/or retrieve configuration\/usage data pertaining to a particular user and\/or other bookkeeping information. In addition, resource manager database - may maintain information regarding resources or services available and\/or otherwise allocated in network . For example, resource manager database - may include information relating to available server clusters, such as numbers of CPUs, RAM, datastore limits, etc.","Resource management device - may receive a request for services from administrator\/user device \/ via portal devices - and -, and render the requested services. In addition, as described below, upon receiving a request for a particular resource, such as a request for Virtual Machine (VM) allocation, resource management device - may identify available resources (e.g., server clusters) corresponding to the request, rank the available resources based on a score calculated for each resource, and initiate fulfillment of the request to the highest ranking resource. In performing these tasks, resource management device - may execute functions that are listed in . For example, resource management device - may identify available underlying resources (e.g., server clusters) that match or otherwise accommodate the requested resource (e.g., a VM), rank the matching underlying resources based on suitability for the requesting entity and a number of additional factors, and provision or create the requested resource based on the highest ranking matching resource.","In provisioning the requested resource, resource management device - may create a description of a job based on the received user request relayed by user portal device -; user configuration; and the identified highest matching underlying resource. Resource management device - may handoff the job description to job database device -, to be placed in the active job queue. In some implementations, resource management device - may provision multiple servers, allocate Internet Protocol (IP) addresses to the servers, provision a storage space shared by the servers, create a virtual machine or server, create a cluster from the servers, configure devices or components of network , such as a load balancer or firewall.","In providing the services, resource management device - may manage resource objects that correspond to physical or virtual resources in networks -. Thus, for example, when user device  requests information relating to a physical server via user portal device -, resource management device - may provide user device  with information from the resource object representing the physical server. Resource management device - may receive data for instantiating the resource objects from one or more databases in networks - (e.g., a database in network ).","Workflow network  may perform jobs whose descriptions are in the active job queue at job database device -. Once the job is performed, workflow network  may instruct job database device - to dequeue the job description (e.g., provisioning a server, creating a cluster, etc.). As further shown in , workflow network  may include a workflow engine device -, a virtual machine management (VMM) control device -, a network management device -, and a resource lifecycle management device -.","Workflow engine device - may perform subtasks of a job as defined by a job description in the active job queue at job database device -. In one implementation, workflow engine device - may poll the active job queue to detect the job description. Workflow engine device - may request job database device - to remove the job description from the queue when the subtasks are completed.","In driving\/performing each of the subtasks of a job, workflow engine device - may employ VMM control device -, network management device -, and\/or resource lifecycle management device -. Each of the subtasks in the job description may entail allocation, deallocation, controlling, and\/or monitoring of virtual resources, physical resources, and\/or network resources. For example, assume that user device  requests resource management device - to allocate a virtual machine. In response, resource management device - may create a job description that includes subtasks for creating a virtual machine, and place the job description at job database device -.","When workflow engine device - is about to perform the subtasks associated with creating the virtual machine, work flow engine device - may dispatch one or more requests for performing virtual machine-related functions to VMM control device - (e.g., a request to create the virtual machine, clone a virtual machine, etc.). VMM control device -, upon receiving requests from workflow engine device -, may control and\/or monitor one or more virtual machines by interacting with hypervisors. The term \u201chypervisor,\u201d as used herein, may refer to any application or system that monitors, creates, runs, removes, and\/or controls a virtual machine (e.g., controls a lifecycle of a virtual machine) on a physical device. For example, when VMM control device - receives a request to create a virtual machine from workflow engine device -, VMM control device - may issue a command to a hypervisor. The hypervisor may create the virtual machine on the host device.","Network management device - may perform network configuration functions on behalf of workflow engine device -. The functions may include configuring network infrastructure components.  shows a number of different types of network objects that network management device - may manage, such as, for example, a virtual load balancer -, a virtual LAN -, and a virtual firewall -.","Resource lifecycle management device - may perform subtasks for provisioning a physical hardware device for the user. For example, resource lifecycle management device - may install an operating system on a server, install an application, etc. As shown in , resource lifecycle management device - may act on physical server devices - through - as well as virtual machines -, as described below.","Virtual system network  may include devices and\/or components for hosting and implementing virtual machine-related and network component-related resources that may be provisioned for the user. As shown, these resources may include a hypervisor cluster -, virtual machines -, logical volume -, virtual load balancer -, virtual LAN -, and virtual firewall -.","Hypervisor cluster (sometimes referred to as \u201ccluster\u201d or \u201cserver cluster\u201d) - may include a logical group of hypervisors and a hypervisor manager (not shown). By clustering or grouping a number of hypervisors (and their corresponding physical devices), failover protection and high availability may be provided to end users. When hypervisor cluster - receives a command or a request from VMM control device - (e.g., to create a virtual machine), the hypervisor manager may issue a command\/request to a hypervisor. The hypervisor may then create the virtual machine on a host device on which the hypervisor is installed. Depending on the implementation, the hypervisor may be hosted on a hardware device without an operating system, or alternatively, may be hosted as a software component running on top of an operating system. Additionally, each host device may include particular capabilities that the hypervisor may allocate to virtual machines created thereon, such as memory, numbers of CPU cores, storage bandwidth, etc.","Virtual machines - may include a software emulation of a computer system (e.g., a server, a personal computer, etc.). Each virtual machine - may be instantiated, removed, and managed by a hypervisor. Once created, user device  may utilize virtual machine - as if it were a physical device.","Logical volume - may include storage on a network (e.g., network attached storage (NAS), a disk in a storage area network (SAN), etc.). Logical volume - may be allocated as a resource by workflow engine device -. Once allocated, logical volume - may be mounted on a mount point on a virtual machine and used as storage (e.g., a file system, swap space, etc.). Virtual load balancer - may include an emulation of a load balancer, and may be instantiated or removed upon demand from user device . Virtual LAN - may be created upon demand from user device . User device  may configure and place selected virtual and physical resources on specific virtual LAN -. Virtual firewall - may include an emulation of a physical firewall, and may be instantiated or deleted and configured upon demand from user device . Once provisioned, virtual firewall - may be attached to virtual LAN - to protect the virtual and\/or physical resources against undesired network traffic.","Inventory management network  may track inventory of network resources and provide inventory information to resource management network . As further shown in , inventory management network  may include an IP address management device -, a data warehouse device -, and an inventory management device -.","IP address management device - may provision an IP address from a pool of IP addresses. In one implementation, in provisioning an IP address, IP address management device - may take into account network address translation schemes to identify which VLAN the IP address belongs to, such that an IP address conflict does not arise within the VLAN. When IP address management device - de-provisions an IP address, IP address management device - may return the IP address to the pool of IP addresses. In addition, IP address management device - may maintain a listing or a table of available IP addresses (e.g., in the pool of IP addresses).","Data warehouse device - may include a database or an inventory of resources that are available for provisioning, resources that have been provisioned for the user, and configuration management information. When a resource is newly added to a resource pool, is provisioned, or is de-provisioned, data warehouse device - may update\/record the information (e.g., inventory information) about the resource into the database. In addition, data warehouse device - may write and insert data associated with a configuration (e.g., a version of an operating system that is installed on a provisioned physical server, an IP address, etc.) into the database when resource configuration changes.","Inventory management device - may obtain inventory and configuration related information by monitoring physical devices, and passing the information to data warehouse device -.","Physical resource network  may include physical resources. These physical resources may be provisioned\/de-provisioned upon a request from resource lifecycle management device -. When physical resources in physical resource network  are provisioned\/de-provisioned, resource lifecycle management device - or inventory management device - may update data warehouse device - with information about the provisioning and configuration information.","As further shown in , physical resource network  may include physical resources - through - (individually referred to as physical resource -and collectively as physical resources ), a logical volume -, and a storage device -. Physical resource -may include a physical device or a component that may be provisioned via resource lifecycle management device -. Logical volume - may include similar components as logical volume -, and may operate similarly. Unlike logical volume - that is mounted on a virtual machine, however, logical volume - may be mounted on physical resource -. Storage device - may include storage from which logical volumes (e.g., logical volume - or -) may be allocated. Examples of storage device - may include a SAN disk and NAS devices.","In , although each of networks  through  are shown as including a number of devices, in an actual implementation, networks  through  may include additional, fewer, or different devices than those shown in . In addition, depending on the implementation, functionalities of each of the devices within networks - may be aggregated over fewer devices or distributed over additional devices. For example, in one implementation, functionalities of devices - through - in physical resource network  may be provided by a single server device.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 2","FIG. 2"],"b":["200","200","104","1","104","3","106","1","106","4","110","1","110","3","112","1","112","3","112","5","200","200","202","204","206","208","210","212","214"]},"Processor  may include one or more processors, microprocessors, application specific integrated circuits (ASICs), field programmable gate arrays (FPGAs), or other processing logic that may interpret and execute instructions. Memory  may include static memory, such as read only memory (ROM), and\/or dynamic memory, such as random access memory (RAM) or onboard cache, for storing data and machine-readable instructions. Storage unit  may include a magnetic and\/or optical storage\/recording medium. In some embodiments, storage unit  may be mounted under a directory tree or may be mapped to a drive. In some implementations, storage unit  may be part of another network device (e.g., storage device -) or a network (e.g., storage area network (SAN)). Depending on the context, the term \u201cmedium,\u201d \u201cmemory,\u201d \u201cstorage,\u201d \u201cstorage device,\u201d \u201cstorage medium,\u201d and\/or \u201cstorage unit\u201d may be used interchangeably. For example, a \u201ccomputer-readable storage device\u201d or \u201ccomputer readable storage medium\u201d may refer to both a memory and\/or a storage device.","Input component  may permit a user to input information to network device . Input component  may include, for example, a keyboard, a keypad, a mouse, a pen, a microphone, a touch screen, voice recognition and\/or biometric mechanisms, etc. Output component  may include a mechanism that outputs information to the user. Output component  may include, for example, a display, a printer, a speaker, etc. In some implementations, because network device  may operate as a server device, network device  may include a minimal number of input components  and output components  (e.g., a keyboard and\/or a console), to minimize cost and to increase robustness.","Communication interface  may enable network device  or the components of network device  to communicate with other devices and\/or systems via a network, and may include one or more network interface cards (e.g., an Ethernet interface) for communicating with other devices. In one implementation, communication interface , for example, may be attached to a server blade that hosts processor . Bus  may provide an interface through which components of network device  can communicate with one another.","In , network device  is illustrated as including components - for simplicity and ease of understanding. In an actual implementation, network device  may include additional, fewer, or different components. For example, assuming that network device  is a virtual machine, components - may include virtual components. In another example, network device  may include one or more power supplies, fans, motherboards, video cards, etc. In yet another example, the components of network device  may be distributed over a network or multiple devices within a network, such as network .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 3"],"b":["200","200","302","304","306","308","200"]},"Operating system  may manage hardware and software resources of network device . Operating system  may manage, for example, its file system, device drivers, communication resources (e.g., transmission control protocol (TCP)\/IP stack), event notifications, etc.","Application  may include a software program and\/or scripts for rendering services. For example, in resource management device -, application  may take the form of one or more programs for provisioning resources. Other examples of application  include a file transfer protocol (FTP) server, an email server, a telnet server, servlets, Java\u2122 virtual machine (JVM), web containers, firewall, components to support Authorization, Authentication and Accounting (AAA), and other applications that either interact with client applications or operate in stand-alone mode. In addition, application  may include a specialized server program, application server, web page, etc.","Web server  may include a software application for exchanging web page related information with one or more browsers and\/or client applications. Database  may include records and files and may act as an information repository for network device . For example, in resource manager database -, database  may store and retrieve configuration\/usage data pertaining to a particular user. In another example, database  in job database device - may implement persistent queues for storing job descriptions. In such implementations, the queue may be robust and, therefore, recoverable upon device failure.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 4","FIG. 4"],"b":["120","130","102","1","102","2","104","3","104","2","110","2","106","1","106","2","106","3","100","120","130","104","3","404","404","100","100","102","2","104","3"]},"As further shown in , administrator\/user device \/ may host different types of client applications, such as a browser -, custom client application -, and\/or terminal - (e.g., xterm). Browser - may include a web browser (e.g., Chrome, Firefox, Internet Explorer, etc.). Custom client application - may include a software component specifically designed for interacting with VMM control device - and\/or hypervisor cluster -, e.g., via an application programming interface (API) or other interface methodology (e.g., client\/server, etc.). Terminal - may include a command line based client terminal (e.g., a command line interface (CLI) for remotely accessing different services, such as telnet services, FTP services, etc.","Users may initiate provisioning of a particular VM -, based on information provided in an initial resource request, such as CPU speed, number of cores, required memory, operating system (OS), etc. Prior to executing (or attempting to execute) the provisioning requests (e.g., via workflow engine -), network management device - may determine optimal placement of the requested VM on a particular hypervisor cluster - selected from a number of possible hypervisor clusters. That is, network management device - may identify a particular cluster to use for creation of a VM to meet the customer's requirements and, as described below, to support potential upgrades or additional customer requests at a time subsequent to the initial provisioning of the VM.","More specifically, based on the received VM provisioning request, resource management device - may initiate requests for and receipt of status and other inventory information relating to the requested VM resource. For example, resource management device - may extract resources information from data warehouse device - resource management database -, etc. In other embodiment, requests for information may be relayed via tasks or operations performed by workflow engine - at the request of resource management device -.","In , administrator\/user device \/ may facilitate the optimal provisioning of a VM via a request received via browser -. Through different devices (e.g., user portal device -, etc.), a user's VM request may initially reach resource management device -. Resource management device - may, prior to carrying out any provisioning functions, identify optimal placement of the requested VM on a particular hypervisor cluster -. As described below, this identification may be based on a number of factors, such as CPU core count, memory (e.g., RAM memory), current cluster allocation, datastore capabilities, cluster failover and high availability (HA) requirements, cluster load requirements. As described above, each hypervisors clusters - may correspond to a number of different physical host devices . Accordingly, several factors described herein may relate to capabilities corresponding to the host devices on which each hypervisor cluster - is installed. Once an optimal cluster is identified, the requested VM may be provisioned by queuing VM provisioning tasks relating to the identified cluster in workflow engine -.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 5","FIG. 5"],"b":["500","500"]},"As shown, the web page may include a side pane  and a main pane . Side pane  may include a list or \u201cpalette\u201d of available server types, and a listing of jobs that are pending for execution (e.g., by workflow engine -). Main pane  may include menu bar , short cut buttons , and \u201cAdded\u201d resources section , \u201cModified\u201d resources section , and \u201cDeprovisioned\u201d resources section . Menu bar  may provide links to other web pages, such as \u201cHome,\u201d \u201cReporting,\u201d or \u201cSupport\u201d page. Short cut buttons  includes buttons for executing commands \u201cturndown\u201d or additional information.","\u201cAdded\u201d resources section  may include a listing of resources requested for provisioning by the user, such as a particular VM. As shown, \u201cAdded\u201d resources section  in  includes a request to add a VM running Windows server 2008 64-Bit, with 4 CPU cores, 4 GB of RAM, and a 300 GB hard disk drive (HDD). For each resource listed, selections are provided to include the resource in a build and delete or discarding the resource from the build list. \u201cModified\u201d resources section  may include a listing of resources requested for change and \u201cDeprovisioned\u201d resources section  may include a listing of resources selected for deprovisioning.","The web page may include options relating to submission of the resource provisioning request. For example, the web page may include a \u201cClose\u201d option , a \u201cClear Queue\u201d option , and a \u201cBuild\u201d option . User selection of \u201cClose\u201d option  keeps resources in the build page, but closes it for later modification or submission (e.g., building). User selection of \u201cClear Queue\u201d option  removes any requested resource changes in the web page. As described above, when the requested resource includes a VM, such as a virtual server, user selection of \u201cBuild\u201d option  initiates selection of an optimal cluster on which to place the VM, and provisioning of the requested VM on the identified optimal cluster.","In other implementations, not shown, the request to build or provision a VM may be received by resource management device - via an API executing or called by a client application, such as custom client application - in . In such a configuration, information regarding the requested VM may be received via portal device -\/- as CLI instructions, etc.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 6","b":["600","605","102","2","500","130","520","500","102","2","102","2","520","402","2","402","3"]},"In response to the VM provisioning request, resource management device - may retrieve information relating to the maximum RAM and CPUs supported by the requested VM OS type (block ). For example, resource management device - may retrieve an OS capabilities table from a resource management database - and\/or data warehouse device - and, from this information, may extract the maximum RAM and CPU information for the OS type selected in the VM build request.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 7","b":["700","700","702","1","702","702","702","702","704","706","708","710","712","700","104","3","710","712"],"i":"n "},"Referring back to , resource management device - may identify candidate clusters from a number of available clusters (block ). For example, resource management device - may identify candidate clusters based on the information provided in the VM build request and the maximum CPUs and RAM information retrieved in block . Based on the identified candidate listing, viable clusters may be identified based on datastores associated with the candidate clusters (block ). This may further filter or winnow down the listing of candidate clusters to those having viable datastores associated therewith. In addition, resource management device - may filter candidate clusters based on other information, such as hard drive space, etc.","Resource management device - may score the candidate clusters and may rank the candidate clusters based on their scores (block ). Based on the ranking, an optimal cluster for placement of the VM may be identified (block ). For example, resource management device - may select the highest ranking candidate cluster as the optimal cluster. Next, provisioning of the VM on the optimal cluster may be initiated (block ). For example, resource management device - may add or queue one or more jobs relating to the VM provisioning to jobs database device - for execution by workflow engine - in the manner described above. The queued jobs may be dequeued by workflow engine - in the manner described above (block ) and executed to provision the requested resource(s) (block ).","By providing a system for identifying, filtering, scoring, and ranking candidate clusters, prior to provisioning a VM, an optimal allocation of resources may be selected thereby providing the most efficient upgrade potential for the user while preventing resources from being allocated to lower-capacity VMs.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 8","FIG. 6","FIG. 8"],"b":["615","610"]},"Initially, resource management device - may select a first\/next available cluster for candidacy determination (block ). For example, resource management device - may retrieve a listing of available clusters and may select a first cluster from the list. Next, resource management device - may determine whether the number of CPU cores requested is less than or equal to the maximum number of CPU cores available on the cluster (block ). For example, resource management device - may extract the number of CPUs requested from the VM build request and may extract\/retrieve the maximum number of CPU cores on the cluster from one or more of 1) a VM cluster limits table relating to VM configuration limitations for the hypervisor and hypervisor cluster, as well as any further performance or load-balancing based limitations, 2) a physical capabilities table that includes information relating to host server capabilities for the cluster, and 3) an allocated cluster table relating to cluster capacity previously allocated. The VM cluster limits table, the physical capabilities table, and the allocated cluster table may be stored or retrieved based on information maintained in data warehouse device - or other devices in network  and may include information relating to the capabilities, capacities, allocations associated with the various clusters - in network .",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 9A","b":["900","900","902","1","902","902","902","108","2","100","902","904","906","908","910","912","914","916","918","920"],"i":"x "},"More specifically, the value in max RAM overallocation field  corresponds to a cluster configuration setting relating to an amount of RAM over a physical amount of RAM available on the cluster that may be allocated to users. In the present example, this overallocation limit is 125%, meaning that if a cluster includes physical RAM of 64 GB, 80 GB (or 125% of 64) may be allocated to particular VMs.","The value in max vCPUs per host core field  indicates a maximum number of virtual CPUs supported on a particular core of each host server device in the cluster. The value of this field is irrespective of the total vCPUs supported per host server device. In contrast to field , the value of max vCPUs per host field  corresponds to the maximum number of vCPUs supported on each host server in the cluster. The value of max VMs per host field  indicates a maximum number of VMs supported on each host server in the cluster.","A cluster's datastores refer to the storage devices that deliver storage space for VMs across multiple physical hosts. Each host server in a particular cluster may access multiple datastores. A VMDK is stored in the datastores and stores the contents of a VMs hard disk drive. VMDKs are accessed by VMs in a manner similar to a physical computer accessing a hard disk drive. Referring to table , the value of max VMDK per datastore field  indicates the maximum number of VMDKs per datastore for each particular cluster. The value of max datastore fill percentage field  indicates the maximum percentage of the cluster's datastores capacity that may be allocated to VMs.","The value of max vCPUs per VM field  indicates that maximum number of virtual CPUs supported on each VM on cluster and the value of the max RAM per VM field  indicates that maximum amount of the cluster's RAM that may be allocated to each VM on the cluster.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 9B","b":["930","930","932","1","932","932","932","932","108","2","932","934","936","938","940","942","944","946"],"i":"y "},"More specifically, the value in server name field  indicates a name (or other identifier) of a particular server and the value in cluster name field  indicates an identifier of the cluster of servers to which the particular server (identified in field ) belongs. The values in CPUs field  and cores field  indicate the number of physical CPUs and cores, respectively, that are included in the particular server. The value in CPU type field  indicates the type\/manufacturer of the server's CPUs. For example, as shown in , an exemplary CPU type may include a dual-core Intel Xeon\u00ae 3333 MHz processor. The value in CPU speed field  indicates the processor speed of each CPU in the particular server and the value in RAM field  indicates the amount of RAM available on the server.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 9C","b":["950","950","951","1","951","932","951","951","108","2","951","108","2","952","954","956","958","960"],"i":"z "},"The value in cluster name field  indicates a name or other identifier associated with a particular cluster of host servers. The value in allocated RAM field  indicates an amount of RAM previously allocated to VMs hosted or running on the cluster. The value in allocated vCPU field  indicates the number of previously allocated vCPUs on the cluster, the value in allocated VMs field  indicates the number of previously allocated VMs on the cluster, and the value in allocated VMDK field  indicates the number of previously allocated VM disk files associated with the VMs running on the cluster.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 9D","b":["970","970","972","1","972","972","972","972","972","974","976","978","974","976","978"],"i":"j "},"As described below, the information provided in the tables depicted in exemplary tables , , , and  may be retrieved and\/or extracted by resource management device - and may be used to identify and rank candidate clusters for hosting a requested VM and for determining an optimal cluster for placement of the VM.","Returning to , in relation to block , resource management device - may determine the maximum cores available on the cluster based on various information extracted from tables , , and\/or . For example, this determination may be based on the lesser of: 1) the maximum number of CPU cores per host server identified based on the values in fields  and  in table physical device capabilities table , 2) the maximum vCPUs supported per VM identified retrieved from field  of VM cluster limits table , and 3) the number of non-allocated cores on the cluster. In one embodiment, the number of non-allocated cores on the cluster may be determined based on the following expression:\n\nNon-Allocated Cores=(Hosts*Cores*MaxVirtualCpuPerCore)\u2212AllocatedVcpu,\n\nin which the number of allocated vCPUs (retrieved from field  in allocated cluster table ) is subtracted from the product of the number of host servers in the cluster (from fields \/ in physical device capabilities table ), the number of cores on each host (from field  in physical device capabilities table ), and the maximum number supported vCPUs on each core (from field  in VM cluster limits table ).\n","If it is determined that the number of CPU cores requested is not less than or equal to the maximum number of CPU cores available on the cluster (block \u2014NO), resource management device - may proceed to block , in which it is determined whether any additional clusters need analyzed for candidacy. If more clusters remain to be analyzed (block \u2014NO), the process returns to block  for a next available cluster.","However, if it is determined that the number of CPU cores requested is less than or equal to the maximum number of CPU cores available on the cluster (block \u2014YES), e.g., that the cluster potentially has CPU capacity for the VM, resource management device - may determine whether the amount of RAM in the VM build request is less than or equal to the maximum amount of RAM on the cluster (block ).","In one implementation, the maximum amount of RAM on the cluster may be determined as the lesser of 1) the lowest amount of RAM on any host server in the cluster retrieved from field  in physical device capabilities table for each server entry  in the cluster (e.g., 32 GB for Cluster  in table ), 2) the maximum supported RAM per VM from field  in VM cluster limits table  (e.g., 64 GB for Cluster  in table ), and 3) remaining RAM on the cluster retrieved. In one embodiment, the number of non-allocated cores on the cluster may be determined based on the following expression:\n\nRemainingGB=(Hosts*GB\/host*MaxRamOverallocation)\u2212total Ram allocated,\n\nin which the amount of previously allocated RAM for the cluster (retrieved from field  in allocated cluster table ) is subtracted from the product of the number of host servers in the cluster (from fields \/ in physical device capabilities table ), the amount of RAM per each host in the cluster (from field  in physical device capabilities table ), and the maximum percentage of RAM overallocation supported (from field  in VM cluster limits table ).\n","Using an example from tables , , and , and assuming the Cluster  includes 8 host servers, each having 32 GB of RAM, it can be determined that the remaining (allocatable) RAM on Cluster may be calculated as [8 (host servers)*32 (RAM per host server)*1.25 (RAM overallocation limit for Cluster)]\u2212292 (allocated RAM)=320\u2212292=28 GB. This indicates that Cluster has 28 GB of RAM that may be allocated to new VMs.","If it is determined that the amount of RAM in the VM build request is not less than or equal to the maximum amount of RAM on the cluster (block \u2014NO), resource management device - may again proceed to block , the processing of which is described above. However, if it is determined that the amount of RAM in the VM build request is less than or equal to the maximum amount of RAM on the cluster (block \u2014YES), e.g., that the cluster potentially has available RAM capacity for the VM, resource management device - may determine whether the minimum amount of RAM on the cluster is greater than zero (block ).","For example, resource management device - may determine whether the remaining RAM on the cluster is greater than zero. A determination of the remaining RAM on the cluster may be made in the same manner as that described above in relation to block . That is, for Cluster, it may be determined that the amount of available RAM for allocation is 28 GB.","If it is determined that the minimum amount of RAM on the cluster is not greater than zero (block \u2014NO), resource management device - may again proceed to block , the processing of which is described above. However, if it is determined that the minimum amount of RAM on the cluster is greater than zero (block \u2014YES), e.g., that the cluster has any available RAM capacity, resource management device - may determine whether the remaining amount of RAM on the cluster is greater than or equal to the requested amount of RAM, given the overallocation limits on the cluster (block ). That is, for Cluster, it may be determined whether the amount of available RAM for allocation (28 GB) is greater than the requested amount of RAM. If not (block \u2014NO), processing again proceeds to block . Otherwise (block \u2014YES), it may determined whether the number of remaining VMs that may be allocated on the cluster is greater than zero (block ).","For example, resource management device - may determine the number of remaining VMs on a cluster based on the following expression:\n\nVmsRemaining=Hosts*MaxVmsPerHost\u2212VmsAllocated.\n\nin which the previously allocated VMs for the cluster (retrieved from field  in allocated cluster table ) is subtracted from the product of the number of host servers in the cluster (from fields \/ in physical device capabilities table ) and the maximum number of supported VMs per host server (from field  in VM cluster limits table ). Again using the example of Cluster in tables , , and , and assuming the Cluster  includes 8 host servers, it can be determined that the remaining (allocatable) VMs on Cluster may be calculated as [8 (host servers)*170 (Max VMs per host server)\u221294 (allocation VMs)]=1360\u221294=1266 VMs. This indicates that Cluster may support the 1266 additional VMs.\n","If it is determined that the number of remaining VMs that may be allocated on the cluster is not greater than zero (block \u2014NO), resource management device - may again proceed to block , the processing of which is described above. However, if it is determined that the number of remaining VMs that may be allocated on the cluster is greater than zero (block \u2014YES), e.g., that at least one new VMs may be allocated to the cluster, resource management device - may determine whether the memory overhead for the requested OS (RAM_OHEAD) is less than or equal to the available overhead memory (AVAIL_OHEAD) on the server (block ). For example, resource management device - may retrieve an amount of required overhead RAM from field  in RAM overhead table  based on the number of CPUs and the amount of RAM received in the build request. This amount of required overhead RAM may be compared to the amount of overhead RAM memory available on the cluster.","If it is determined that the required overhead RAM is greater than the available overhead memory (block \u2014NO), resource management device - may again proceed to block , the processing of which is described above. However, if it is determined that the required overhead RAM is less than the available overhead memory (block \u2014YES), e.g., that the cluster has enough available overhead memory to startup the requested VM, resource management device - may proceed to block  and may add the current cluster to the listing of candidate clusters. Resource management device - may again proceed to block , the processing of which is described above.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 10","FIG. 6","FIG. 10","FIG. 8"],"b":["620","615"]},"Initially, resource management device - may select a first\/next candidate cluster (block ). For example, resource management device - may retrieve the listing of candidate clusters from block  and may select a first cluster from the list. Next, resource management device - may determine whether the number of VMDKs per datastore on the cluster, including the requested VM, is less than the maximum number of supported VMDKs per datastore for the cluster (block ). For example, resource management device - may retrieve information regarding VMDKs and datatstores associated with the cluster from resource management database -. In other implementations, this information may be obtained from VMM control device - to ensure that accurate and up-to-date information regarding the clusters are obtained.","If the number of VMDKs per datastore on the cluster, including the requested VM, is not less than the maximum number of supported VMDKs per datastore for the cluster (block \u2014NO), the process continues to block , where the cluster is removed from the list of candidate clusters. Resource management device - may then proceed to block , where it is determined whether any additional clusters need analyzed for datastore viability. If more clusters remain to be analyzed (block \u2014NO), the process returns to block  for a next available candidate cluster. However, if no additional clusters need analyzed, the listing of remaining candidate clusters is returned in block .","If the number of VMDKs per datastore on the cluster, including the requested VM, is less than the maximum number of supported VMDKs per datastore for the cluster (block \u2014YES), it may be determined whether the calculated datastore usage percentage for the datastores based on the requested VM is less than or equal to the maximum support datastore usage percentage (block ). If not (block \u2014NO), the process continues to block , as described above.","However, if the calculated datastore usage percentage for the datastores based on the requested VM is less than or equal to the maximum support datastore usage percentage (block \u2014YES), resource management device - may determine whether there is sufficient space on the datastores for the cluster to install a VMDK for the requested VM (block ). For example, it may be determined whether available CPU capacity equals at least 256 MHz. If not (block \u2014NO), the process continues to block , as described above.","However, if there is sufficient space on the datastores for the cluster to install a VMDK for the requested VM (block \u2014YES), the process may proceed to block , described above. The processing of  filters the listing of candidate clusters based on viable datastores, such that only candidate clusters in which 1) the resulting VDMK per datastore is less than the maximum supported VMDK per datastore, 2) the resulting datastore usage percentage is less than a maximum supported datastore usage, and 3) sufficient VMDK space on the datastore is available are passed for optimization ranking.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 11","FIG. 6","FIG. 11","FIG. 8"],"b":["625","620"]},"Initially, resource management device - may select a first\/next candidate cluster (block ). For example, resource management device - may retrieve the listing of remaining candidate clusters from block  and may select a first cluster from the list. Next, resource management device - may calculate a score for the cluster (block ). In some implementations, this score may include scores for each of a number of cluster-based metrics, such as 1) the remaining number of VMs that may be created on the cluster, 2) the number of CPU cores remaining on the cluster, 3) the minimum number of cores per host for the cluster, 4) the maximum number of cores on per host in the cluster, and 5) the percentage of RAM on the cluster that is filled.","Next, the maximum number of cores supported on a host server in the cluster is determined (block ). In one implementation, this may be determined based on the initial cluster scoring determined in block . It is then determined whether the maximum number of cores per host supported on the cluster is greater than or equal to the maximum number of cores supported by the requested operating system (block ). For example, the maximum number of cores supported by the requested OS may be retrieved from field  in OS capabilities table  and compared to the maximum number of cores per host supported on the cluster. This calculation assists resource management device - in determining whether a particular cluster is over-qualified for a particular VM. For example, if a build request designates a Windows 2003 server supporting a maximum of 4 GB of RAM, this calculation will determine whether a particular server cluster (e.g., supporting up to 8 GB of RAM per host) is unnecessary.","If the maximum number of cores per host supported on the cluster is greater than the maximum number of cores supported by the requested operating system (block \u2014YES), the cluster is removed from the candidate cluster list (block ). In other embodiments, clusters having a max number of cores greater than the max cores supported by the requested operating system are maintained on the list but placed at the end of the list, as less attractive candidates (e.g., following ranking of more suitable clusters in block , described below). In this manner, if no other candidates remain following analysis, the requested VM may be placed on a cluster having a maximum number of cores greater than the max cores supported by the requested operating system. Resource management device - may then proceed to block , where it is determined whether any additional clusters need analyzed.","If the maximum number of cores per host supported on the cluster is not greater than the maximum number of cores supported by the requested operating system (block \u2014NO), the process continues to block . If more clusters remain to be analyzed (block \u2014NO), the process returns to block  for a next available candidate cluster. However, if no additional clusters need analyzed (block \u2014YES), it may be determined whether the listing of remaining candidate clusters is non-empty, e.g., whether any clusters are available for provisioning the requested VM (block ).","If no clusters remain in the candidate list (block \u2014NO), an error or notification may be generated indicated that no clusters are available for provisioning the requested VM. If one or more clusters remain in the candidate list (block \u2014YES) the clusters may be ranked (block ). For example, in one implementation, clusters may be ranked based on the RAM fill percentage, such that a candidate cluster having a lower RAM fill percentage is ranked higher than a candidate cluster having a higher RAM fill percentage. In one implementation, if candidate clusters have a same RAM fill percentage, they may be secondarily ranked based on a remaining number of VMs that may be created on the cluster. In this manner, an optimal cluster for hosting the requested VM may be identified. The ranked cluster listing may be returned in block  and processing may proceed to block  described above in relation to .","The above specification describes how a system may identify and select an optimal cluster for placement of a requested VM. When a user wishes to create a VM, the user may connect to an integrated provisioning system via a web portal and submit requirements for the VM, such as its operating system, RAM memory, number of virtual CPUs, and its hard disk drive space. Based on the requested parameters and information relating to existing resources allocated in the system, the integrated resource provisioning system retrieves information regarding available resources, previously allocated resources, and various system limitations. Based on this information, the provisioning system identifies viable candidates and scores\/ranks the candidates. An optimal candidate is selected for provisioning and the requested VM is provisioned on the optimal candidate. When no viable candidates are available, the provisioning system generates an error or notification information the user of the unavailability.","The foregoing description of exemplary implementations provides illustration and description, but is not intended to be exhaustive or to limit the embodiments described herein to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the embodiments.","Further, while series of acts have been described with respect to , , , and , the order of the acts may be varied in other implementations. Moreover, non-dependent acts may be implemented in parallel.","It will also be apparent that various features described above may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement the various features is not limiting. Thus, the operation and behavior of the features of the invention were described without reference to the specific software code\u2014it being understood that one would be able to design software and control hardware to implement the various features based on the description herein.","Further, certain features described above may be implemented as \u201clogic\u201d that performs one or more functions. This logic may include hardware, such as one or more processors, microprocessors, application specific integrated circuits, or field programmable gate arrays, or a combination of hardware and software.","In the preceding specification, various preferred embodiments have been described with reference to the accompanying drawings. It will, however, be evident that various modifications and changes may be made thereto, and additional embodiments may be implemented, without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.","No element, act, or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article \u201ca\u201d is intended to include one or more items. Further, the phrase \u201cbased on\u201d is intended to mean \u201cbased, at least in part, on\u201d unless explicitly stated otherwise."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0004","num":"0003"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 9A-9D"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
