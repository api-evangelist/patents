---
title: Service search system, method, and program
abstract: The invention provides a support system for searching for a function, including: a first storage for storing a history of at least one output parameter of each of a plurality of functions; an input section for receiving an input of an output parameter expected as an output of a function for a search; a calculating section for calculating first indexes respectively indicating proximity of the output parameter as inputted to each of those stored in the first storage, and summing the calculated first indexes for each function; and an output section for selecting, from among the plurality of functions, a function having a sum of the first indexes larger than a predetermined value, and outputting the selected function.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08121995&OS=08121995&RS=08121995
owner: International Business Machines Corporation
number: 08121995
owner_city: Armonk
owner_country: US
publication_date: 20090115
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to a system, a method, and a program for searching for a service. In particular, the present invention relates to a system, a method, and a program for searching for a service based on the processing history.","Conventionally, components usable as part of software have been publicly accessible on communication networks such as the Internet, so that other software can call the components for execution. An example of such components is a web service. If software development is performed by combining such web services, the trouble and the cost involved in development\/maintenance of software can be alleviated.","Techniques such as WSDL (Web Services Description Language), UDDI (Universal Description, Discovery and Integration), and Semantic Web are used to describe the specification of a web service. These techniques enable a creator or an administrator of a web service to accurately define the input\/output interface of the web service or the like, and convey it to a user. The user, in turn, uses these specifications to automatically generate a subprogram for shaping the parameter format, such as Stab or Skelton.","For a search technique concerning text content, reference should be made to the following patent documents Nos. 1-2.","[Patent Document 1]\n\n","[Patent Document 2]\n\n","Representative specifications describable by the above mentioned technology such as WSDL are interface portions such as a data type, a transport, and a set of address of input\/output parameters. A creator or an administrator of a web service can also write a summary of the web service by a natural language, as a comment or a description.","In many cases, the function of a web service can not be known before actual execution of the web service, even though the specification of the interface portion is known. For example, even though the input and the output are both known to be double precision floating point numbers, the function used in converting the input to the output is only known after the execution. Furthermore, comments written by a natural language are not necessarily accurate description, which makes it difficult to grasp the accurate operation of the web service from the comment.","Therefore conventional usage of web services have involved troublesome work that require human hand to actually execute numerous web services to find out an adequate web service based on the execution results. In view of this, it is an aspect of the innovations herein to provide a system, a method, and a program capable of solving the above-stated issues.","To solve the above-mentioned issues, a support system is provided for searching for a function, including: a first storage for storing a history of at least one output parameter of each of a plurality of functions; an input section for receiving an input of an output parameter expected as an output of a function for a search; a calculating section for calculating first indexes respectively indicating proximity of the output parameter as inputted to each of those stored in the first storage, and summing the calculated first indexes for each function; and an output section for selecting, from among the plurality of functions, a function having a sum of the first indexes larger than a predetermined value, and outputting the selected function. In addition, a method and a program to function a computer as the mentioned system are provided.","Additionally, a program product stored on a medium is provided, which causes a computer to function as a function search supporting system, where the computer includes a first storage that stores, in association with each of a plurality of functions, a history of at least one output parameter outputted from the function, the program causing the computer to function as: an input module for inputting thereto an output parameter expected as an output from a function for the search; a calculating section for calculating first indexes respectively indicating proximity of the inputted output parameter to each of those stored in the first storage, and summing calculated first indexes for each function; and an output section for selecting, from among the plurality of functions, a function having a sum of first indexes larger than a predetermined value, and outputting the selected function.","These and other features, aspects and advantages of this invention of the present invention will become better understood with reference to the following drawings, description, and claims.","The following detailed description is of the best currently contemplated modes of carrying out the invention. The description is not to be taken in a limiting sense, but is made merely for the purpose of illustrating the general principles of the invention, since the scope of the invention is best defined by the appended claims.",{"@attributes":{"id":"p-0028","num":"0029"},"figref":"FIG. 1","b":["10","10","100","20","100","102","104","100","106","104"]},"The search system  may retrieve, from a communication network , a web service having a desired function based on a user input. An example of the communication network  may be a global communications network known as the Internet, which is available to general public. A service database (DB) , an execution history DB , and an evaluation history DB , which may be stored in the storage , may be accessed in the course of processing a search.  through  illustrate detailed examples that will be discussed below.","The service DB  may contain information pertaining to all known web services that are of interest. One example of a data structure that may be used by the service DB  is shown in , according to an embodiment of the invention. For each of all the known web services to be searched, the service DB  may store identification information (ID) and a location of the web service. For example, if the web service is to be found on the Internet, then the location of the web service may be a URL (Uniform Resource Locator) for accessing the web service. According to , an ID of a web service, \u201cservice1\u201d, may be stored in association with a URL http:\/\/ . . . \/service1, and an ID of another web service, \u201cservice 2\u201d, may be stored in association with another URL http:\/\/ . . . \/service2.","Once the URL of a web service is obtained, various other types of information regarding the web service may be accessible. For example, the search system  may access the URL of the web service to obtain additional information that defines the web service interface, such as corresponding WSDL files and UDDI repositories. The search system  may also transmit a set of input parameters to the URL of the web service, in order to execute the web service.","Note that the search in the present embodiment may be directed to web services having strictly defined types of input\/output data, such as WSDL. However, the search according to the present invention may also comprise the actions of searching web applications that do not have strict types of input\/output data that may be accessed by the HTTP GET request, e.g. REST (Representational State Transfer). The search system  according to the present embodiment may search such web applications whose input types are not strict, by estimating the types in an existing method.","Note that a search target may not be limited to a web service. The search target may more generically considered to be any function, as long as the search target responsively returns a set of output parameters for a set of input parameters. For example, the search system  may search for a subroutine having a predetermined function, from a library program in which object files of programs are archived. However, a web service, freely accessible by the general public on the communication network , may be preferable for the present embodiment, because of its readiness in collecting its execution history or the like. Thus, the term \u201cweb service\u201d may be taken to mean any generic function, without departing from or limiting the scope of the invention.",{"@attributes":{"id":"p-0034","num":"0035"},"figref":["FIG. 2B","FIG. 2B"],"b":["24","24"]},"Moreover,  shows a history in which a set of output parameters consisting of the values of \u201c23,22\u201d are returned in response to input of a set of three input parameters \u201c23,36,15\u201d to the \u201cservice0101\u201d. In this way, a web service may have two or more input parameters, and two or more output parameters. In such a case, the execution history DB  may store a number of dimensions of vectors corresponding to the number of parameters as input parameters and output parameters, respectively, as shown in .","For each set of output parameters and input parameters, the execution history DB  may store a time at which the set of output parameters is returned in response to the set of input parameters. For example, the time at which the web service \u201cservice1\u201d is executed is Dec. 1, 2007. Note that the time may include a time of a day, in addition to a date. Likewise, the time at which the service0101 is executed is Dec. 1, 2007. By recording the time in this manner, it becomes possible to accurately search web services whose outputs change chronologically. This is detailed later.",{"@attributes":{"id":"p-0037","num":"0038"},"figref":"FIG. 2C","b":["26","26","26","26"]},"For example, the first record in  indicates that \u201cservice1\u201d has been retrieved as a result of inputting of the input parameter \u201c120.0\u201d and the output parameter \u201c10500\u201d from a user in the past. The evaluation result of \u201ccorrect\u201d indicates that the retrieved \u201cservice1\u201d was a web service the user wishes to search for . . . . The second record in  indicates that \u201cservice1\u201d has been retrieved as a result of inputting of the input parameter \u201c110.0\u201d and the output parameter \u201c0.9\u201d from a user in the past. The evaluation result of \u201cincorrect\u201d corresponding to these parameters indicates that the retrieved \u201cservice1\u201d was not a web service that is searched for.","In this way, the evaluation history DB  may store each web service retrieval history that has been performed with use of parameters in the past, in association with an evaluation history indicating whether the search result was correct or incorrect. Here, the evaluation history may be a history of parameters received by the search system  itself by means of the functionality of an evaluation input section  detailed later. Alternatively, the evaluation history DB  may store the history of evaluation received by other various systems.","Note that  may show various types of data in a table format for explaining basic concepts; however the format is not limited to a table. For example, the various types of data may be described in extended markup language (XML). In this example, a service ID may be recorded with a tag that indicates that it is a service ID, a set of input parameters may be recorded with a tag that indicates that it is a set of input parameters, and a set of output parameter is recorded with a tag that indicates that it is a set of output parameters.",{"@attributes":{"id":"p-0041","num":"0042"},"figref":"FIG. 3","b":["106","106","200","210","220","230","240","200","200","200"]},"The parameter input section  may receive as input a set of one or more input parameters to be provided to the web service being sought and a set of one or more output parameters expected to be outputted from the web service in response to the set of input parameters. Some web services may have a plurality of sets of input parameters and\/or a plurality of sets of output parameters.","When the data types and the parameter sets have been received, the calculating section  may then retrieve a web service having a data type that matches the inputted data type(s). For example, when the function in the services DB  is a web service, the calculating section  may access URLs of known web services stored in the service DB  to obtain the WSDL files corresponding to the web services. Then the calculating section  may determine, for each obtained WSDL file, whether the inputted data type(s) match the data type of the input parameter(s) and the data type of the output parameter(s) in the WSDL file . . . . The data type may indicate accuracy or a type of a numerical value, such as a double precision floating point number (double type). The data type may also indicate a kind of data such as an integer (integer type), a decimal number (float type), or a string (string type). The data type may further indicate the number of numerical values to be inputted or outputted (e.g. two integer numbers). The string type may be further grouped, for example, into an encode format for indicating whether it is a data format for an address, a data format for a name, etc.","A web service whose data types match may be subjected to further index value calculation processing. More specifically, for each web service whose data types match, the calculating section  may first select an execution history associated with the web service from the execution history DB . Then the calculating section  may calculate first index values indicating proximity of the inputted set of input parameter(s) and output parameter(s) to each of the sets of input parameters and sets of output parameters stored in the execution history DB . Alternatively, the calculating section  may calculate first index values indicating proximity of an inputted set of output parameters to each of the output parameters stored in the execution history DB . The calculating section  may then sum calculated first index values for each function.","As it is used here, the term \u201cproximity\u201d may be a measure of the difference in length between two vectors when the parameters contained in the set of input parameter(s) and the set of output parameter(s) are represented as vectors, and\/or how small the difference in angles of the vector is. For example, consider a case where a set of input parameters P and an output parameter Q stored in the execution history DB  are represented as a vector R=(P,Q), and an inputted set of an input parameter X and an output parameter Y are represented as a vector A=(X, Y). In this case, the first index value may be 1\/|R\u2212A|. Note that |W| may represent a distance of a vector W, and so |R\u2212A|=\u221a{square root over ((P\u2212X)+(Q\u2212Y))}{square root over ((P\u2212X)+(Q\u2212Y))}","Then for each web service whose data type(s) match(es), the calculating section  may select an evaluation history associated with the web service from the evaluation history DB . Then the calculating section  may calculate second index values respectively indicating proximity to the inputted set of input parameter(s) and output parameter(s) to each of the sets of input parameter(s) and output parameter(s) stored in the evaluation history DB . Then the calculating section  may sum these calculated second index values for each function.","For each set of input parameter(s) and output parameter(s) stored in the evaluation history DB , when the set of parameters is associated with an evaluation result of \u201ccorrect\u201d, the calculating section  may add an index value indicating the proximity of the value to the sum of the second index values. However, when the set of parameters in the evaluation history DB  is associated with an evaluation result of \u201cincorrect\u201d, the calculating section  may subtract an index value indicating the proximity of the value from the sum of the second index values.","The calculating section  may sum the first index values and the second index values calculated in the above manner for each function. It may be desirable that the calculating section  performs the summation by adding a higher weight to the first index values instead of the second index values. It may be preferable to perform the summation by adding a weight of 1 to the first index values and by adding to the second index values a reliability level that depends upon the evaluation result to the second index values, where the reliability level is a number in the range of 0 to 1 inclusive.","The output section  may then select a web service having a sum of first index values and second index values calculated in this manner that is larger than a predetermined value, and may output the selected web service as a search result. For example, the output section  may display web services having a sum of first index values and second index values that is larger than a predetermined value, with the web services being ordered according to the value of the sum. The display may be performed by placing web services having larger sums higher in the screen, and web services having smaller sums lower in the screen. Alternatively, the output section  may select a predetermined number of web services in the order from the web service having the largest sum and display only the selected number of web services, without displaying the unselected web services.","In the display, the name of a web service and the URL indicating the position of the web service may be displayed. Optionally, the contents of the WSDL or the contents of the UDDI corresponding to the web service may be presented in the display.","The evaluation input section  may receive an input of an evaluation result of a user that indicates, for each function outputted from the output section , whether the function is what the user is searching for. The evaluation input section  may store, in the evaluation history DB , the received evaluation result in association with the set of input parameters and the set of output parameters inputted by the data type input section , so that the evaluation result can be reflected in the subsequent retrievals. This arrangement may be expected to improve the search accuracy.",{"@attributes":{"id":"p-0052","num":"0053"},"figref":"FIG. 4","b":["106","300","210","200"]},"On receiving these inputs, the calculating section  may retrieve all web services having data types matching the data types input by the user, according to the step labeled as S. For example, the calculating section  may search the web services stored in the service DB  to obtain the URLs of the web services, so that the WSDL files for each web service can be obtained; the calculating section  may then compare the inputted data type(s) with the data type(s) defined in the WSDL file to determine if the web service meets the search criteria. Each web service having data types that match the input data types may be subjected to further index value calculation processing.","Note that when there is no web service whose data type matches (NO branch from the step labeled S), then the search system  may terminate processing, because of difficulty of web service search. Otherwise, for each web service whose data type matches the input data type(s), the calculating section  may retrieve a corresponding execution history from the execution history DB  and an evaluation result from the evaluation history DB , according to the step labeled S.","When there is no execution history retrieved (NO branch from step labeled S), the calculating section  may provide the inputted set of input parameters to each web service whose data type matches, thereby executing the web service and causing it to output an output parameter, according to the step labeled S. The set of input parameters and output parameters obtained in this way may be stored as an execution history entry for the web service in the execution history DB .","Then the calculating section  may calculate each first index value indicating proximity of the inputted set of input parameters and output parameters, to each set of input parameters and output parameters stored in the execution history DB  (S). Then the calculating section  may sum these calculated first index values for each function. For each web service whose data type matches, the calculating section  may select an evaluation history associated with the web service from the evaluation history DB .","The calculating section  may calculate each second index value indicating proximity of each set of input parameters and output parameters stored in the evaluation history DB , to the inputted set of input parameters and output parameters. Then the calculating section  may sum these calculated second index values for each function. In the summing operation, a variety of weights may optionally be added to the index value. In addition, for efficient calculation, a portion that does not contribute much to the sum of the index values can be excluded from the calculation of the sum.","One example of the above calculation may be shown graphically in , which depicts a conceptual diagram showing parameters search processing performed by the search system  according to an embodiment of the invention. Here, the set of input parameters and output parameters provided by the user may be represented as a vector x. This vector x may correspond to an assumed parameter  in .","Then the calculating section  may retrieve all execution history values in the execution history DB  and evaluation history values in the evaluation history DB , where the distance of each such value from the vector x is less than or equal to a constant value d. Each of the retrieved histories is referred to as vector c. According to , an execution history , an execution history , and an execution history  may be as execution histories, while an execution history  may not retrieved. In addition, an evaluation history  and an evaluation history  may be retrieved as evaluation histories, while not retrieving an evaluation history , an evaluation history , and an evaluation history .","The collection of vectors c retrieved in this way may be referred to as C. The collection C may calculated as follows:\n\n\n","A function that simply decreases according to the distance between the vector c and the vector x",{"@attributes":{"id":"p-0062","num":"0063"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":["(",")"],"mrow":{"mi":["e","g"],"mo":[".","."],"mfrac":{"mn":"1","mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["c","x"],"mo":"-"}}}}}}},"br":{},"b":["220","24","26"]},"The range of the function \u0192(c, j) may be defined as follows:","0: when the history c associated with the service j is not included in any of the execution history DB  and the evaluation history DB ;","1: when the history c associated with the service j is included in the execution history DB ;","a: when the history c associated with the service j is included in the evaluation history DB  and the corresponding evaluation history is \u201ccorrect\u201d; and","\u2212b: when the history c associated with the service j is included in the evaluation history DB , and the corresponding evaluation history is \u201cincorrect\u201d.","Note that a and b may be a constant in a range of 0 to 1, inclusive. Note also that the constants a and b may indicate the reliability level of the evaluation result, i.e. to what extent the evaluation by a user is correct. For example, the constants a and b may be obtained by the following equations based on the result of testing sample data in advance:\n\n=(the number of times that a user evaluated a correct search result as \u201ccorrect\u201d)\/(the number of times that the user evaluated a correct search result as \u201ccorrect\u201d+the number of times that the user evaluated a correct search result as \u201cincorrect\u201d).\n\n=(the number of times that a user evaluated an incorrect search result as \u201cincorrect\u201d)\/(the number of times that the user evaluated an incorrect search result as \u201cincorrect\u201d+the number of times that the user evaluated an incorrect search result as \u201ccorrect\u201d)\n","Then the calculating section  may calculate the sum h(j|x) between first index values and second index values regarding the service j with respect to the vector x indicating an inputted set of parameters, as in the following expression:",{"@attributes":{"id":"p-0070","num":"0071"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["j","x"],"mo":"|"}}},{"munder":{"mo":"\u2211","mrow":{"mi":["c","C"],"mo":"\u2208"}},"mo":"\u2062","mfrac":{"mrow":[{"mrow":[{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["c","j"],"mo":","}}},{"mi":"g","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["c","x"],"mo":"|"}}}],"mo":"\u2062"},{"mi":"count","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["j","C"],"mo":"|"}}}]}}],"mo":"="}}}},"As a result, in the example of , the index value indicating proximity between the assumed parameter  and each of the execution history , the execution history , and the execution history  may be added to the sum, after added a higher weight than for other index values, while the index value indicating proximity between the evaluation history  and the assumed parameter  may be added to the sum, after added a lower weight than for other index values. On the other hand, the index value indicating proximity between the evaluation history  and the assumed parameter  may be subtracted from the sum.","Note that  deals with a case where there is one input parameter and one output parameter. When the number of input parameters is m and the number of output parameters is n, an evaluation value may be calculated based on a distance between vectors in the space of m+n dimensions. However for example when calculating an evaluation value after converting an input parameter of a single dimension into two dimensions, an index value may be calculated in a higher dimension than the m+n dimensions, even when the number of input parameters is m and the number of output parameters is n. This may occur for example when an input parameter indicating an address is used for calculating an index value, after converted into input parameters representing latitude and longitude respectively.","In addition, the following calculation may be performed in the example of  and . Assume that an inputted input parameter is 100 (double type), and an inputted output parameter is 11000 (double type). These parameters may be inputted for retrieving a service enabling the conversion of 100 U.S. dollars into 11000 yen and output 11000 yen.","In response to these inputs, the calculating section  may calculate a square root of 1\/((100\u2212100)+(11000\u221210483.6932)), as a first index value, in association with the service1 whose data type matches that which is stored in the execution history DB . The calculation result is 0.002.","Likewise, the calculating section  may calculate a square root of 1\/((100\u2212100)+(11000\u22120.8708)) in association with the service2 whose data type matches that is stored in the execution history DB . The calculation result is 0.00009.","The evaluation history of the service1 may be stored in the evaluation history DB . Regarding this, the calculating section  may calculate a square root of 1\/((120\u2212100)+(11000\u221210500)), as a second index value. The calculation result is 0.002. This may correspond to the evaluation result of \u201ccorrect\u201d, and so this may be added to the sum of index values.","In addition, the calculating section  may calculate a square root of 1\/((110\u2212100)+(11000\u22120.9)), as a second index value. The calculation result is 0.00009. This may correspond to the evaluation result of \u201cincorrect\u201d, and so must be subtracted from the sum of index values. For example, this evaluation result may indicate that even though input has been performed to search for a service for converting Japanese Yen into U.S. dollar, i.e. not a service for converting U.S. dollar into Japanese Yen, its search result was not the desired service (\u201cincorrect\u201d).","According to the above result, for the service1, the sum of index values is calculated as 0.002+0.002\u22120.00009, which is about 0.00399. In this way, even though the history may correspond to an \u201cincorrect\u201d evaluation result, if it is associated with a set of parameters far from the inputted parameters, the numerical value subtracted from the sum of index values is small. In addition, the sum of index values for service2 will be 0.00009. As a result, the service1 having a larger sum of index values will be selected as a priority.","When at least one of the input parameters and the output parameters is non-numerical data i.e. data of a string type, it may be desirable for the calculating section  to calculate an index value after converting the non-numerical data into a numerical value. For example, the calculating section  may convert a string indicating an address into two-dimensional numerical data indicating the latitude and the longitude of the address. In order to perform such processing, a database including a string indicating an address associated with its latitude and longitude may be used. In addition, the calculating section  may convert data indicating the base sequence of DNA into data indicating Edit distance. In addition, the calculating section  may normalize the numerical value indicating each parameter using mean\/deviation assuming a normal distribution.","When operation of a web service changes chronologically, e.g. when the exchange rate between dollars and yen changes in a service for converting U.S. dollar into Japanese yen, it may be desirable to record as an event the time the rate changed as either an execution history or as an evaluation history. For example, the calculating section  may sum an index value based on a set of output parameters associated with a later time after assigning thereto a higher weight than to the index value based on the set of output parameters associated with an earlier time. Accordingly, it is possible to perform accurate search even in such a web service.","Returning to the explanation of , the output section  may select a web service having a sum of first index values and second index values calculated in this way, which is larger than a predetermined value, and may output the selected web service as a search result, according to the step labeled S. For example, the output section  may display web services having a sum of first index values and second index values that is larger than a predetermined value, in the order from web services having larger sums. The display may be performed by placing web services having larger sums higher in the screen, and web services having smaller sums lower in the screen.","An exemplary display may be seen in , which shows one example of a display in an output section  according to an embodiment of the invention. The output section  may display an input field for the data type input section  and the parameter input section  to receive an input.  shows exemplary input fields for respectively receiving, as search conditions, a data type of an input parameter , a value of the input parameter , a data type of an output parameter , and a value of the output parameter . The data in these input fields may be inputted to the data type input section  and to the parameter input section .","When the button of \u201cincrement the input condition\u201d or \u201cincrement the output condition\u201d is pushed, these input fields may display an incremented number. Furthermore, the output section  may display a text field for text input for web service search. The text inputted to the text field may be used for searching a comment field or a description field recorded in the WSDL file of a web service or the like. The calculating section  may subject only web services to which such text search has been performed, to processing for calculating an index value. In this way, a user may be able to accurately retrieve a web service having a desirable function, by combining conditions from various perspectives.","When the search button is pushed, various types of processing may be initiated, such as the data type input section , the parameter input section , the calculating section , and the output section . The output section  may display the search result lower than these input fields. A plurality of web services having a sum of first index values and second index values that is larger than a predetermined value may be displayed as the search result. Note that the service1 for converting U.S. dollars into Japanese yen my be displayed higher in position than the service2 for converting Japanese yen into U.S. dollars, for example, meaning higher priority for the service1 over the service 2.","For example, the output section  may display the URL and the name of a web service first. The output section  may also display a set of parameters that is closest to a set of parameters inputted through the parameter input section , from the execution histories associated with the web service, and may display the selected set of parameters. The output section  may also display an input field for an evaluation result indicating whether the thus retrieved service is the service searched for by a user. The evaluation result inputted to this input field is inputted to the evaluation input section .","According to the embodiments described so far with reference to , it may be possible to retrieve a web service that a user searches for from among numerous web services whose function is unknown. The web service search may be performed by combining various perspectives such as a data type, a text search, an execution history, and an evaluation history, which may improve the search accuracy. The search result may be accumulated as an evaluation history, which contributes to improvement in accuracy in subsequent searches. According to these characteristics, a service having a predetermined function may be adequately retrieved from among various web services widely publicly accessible on the Internet and the like, and is effectively made use of.","Note that during execution of a program for calling a web service, the web service may be retrieved by so-called \u201con the fly\u201d as necessary, and be executed immediately after the retrieval. A search system  that exemplifies such processing is shown in  and  as a modification example.  shows a functional configuration of a search system  according to a modification example of the present embodiment. The search system  according to the present modification example may include a program execution section  in addition to the search system  of . The search system  according to the present modification example may not be equipped with an evaluation input section .","The program execution section  may execute an initial program inputted by a user. Execution of this program may sometimes require the execution of a web service. Concretely, this program has described therein a set of input parameters and output parameters and a set of data types thereof to be inputted for retrieving the web service when execution of the web service becomes necessary.","When execution of a web service becomes necessary, the program execution section  may receive a set of input parameters and output parameters and their data types necessary for the retrieval, and provide them to the data type input section  and the parameter input section . That is, the data type input section  receives input of the data types of the input parameters and the output parameters, from the program under execution, and the parameter input section  receives input of the input parameters and the output parameters from the program under execution.","The processing of the calculating section  has been explained previously, with reference to . However note that the output section  may select a single web service that has the largest index value of all the calculated index values. The program execution section  may execute the selected web service, thereby returning the execution result to the initial program in execution.",{"@attributes":{"id":"p-0091","num":"0092"},"figref":"FIG. 8","b":["106","250","800","200","810","210"]},"On receiving these inputs, the calculating section  first retrieves web services whose data type matches the input data type, according to the block labeled S. For example, the calculating section  may access URLs of web services stored in the service DB , to obtain the WSDL files corresponding to the web services. Then the calculating section  may determine, for each obtained WSDL file, whether the inputted data type(s) match the data type of the input parameter(s) and the data type of the output parameter(s) defined in the WSDL file. The web service whose data types match may be subjected to further index value calculation processing.","Note that when there is no web service whose data type matches (according to the NO branch from decision block S), then the program executing section  may subject the program to abnormal ending, according to the block labeled S, because of difficulty in continuing the program execution. Otherwise, the calculating section  may retrieve, for each web service whose data type matches, an execution history associated with the web service from the execution history DB , and may retrieve an evaluation result associated with the web service from the evaluation history DB , according to the block labeled S.","When there is no history retrieved (i.e. if the result of decision block S is NO), the calculating section  may actually input the inputted input parameters to each web service whose data type matches for execution, thereby causing the web service to output an output parameter, according to the block labeled S. The set of input parameters and output parameters obtained in this way may be stored in the execution history DB .","Then the calculating section  may calculate each first index value indicating proximity of the inputted set of input parameters and output parameters, to each set of input parameters and output parameters stored in the execution history DB , according to the block labeled S. Then the calculating section  may sum the calculated first index values for each function. For each web service whose data type matches, the calculating section  may select an evaluation history associated with the web service from the evaluation history DB .","The calculating section  may calculate each second index value indicating proximity of each set of input parameters and output parameters stored in the evaluation history DB , to the inputted set of input parameters and output parameters. The calculating section  may then sum the calculated second index values for each function. In the summing operation, it is possible to add a variety of weight to the index value as already described above. In addition, for efficient calculation, a portion that does not contribute much to the sum of the index values may be excluded in the calculation of the sum.","The output section  may select a single web service that has the largest index value of all the calculated index values, according to the block labeled S. The program executing section  may return processing to block S, and may execute the selected web service. As described so far, the present modification example may enable the initial program to execute a multitude of web services automatically by sequential retrieval, even without designing subroutines in advance.","Next,  and  show examples of WSDL data , tModel data A of UDDI, and a search query B.  shows one example of the WSDL data  described using WSDL (getcurrency.wsdl) that corresponds to a service that is searched for in the present embodiment. The WSDL data  is stored, by being associated with a web service, in a server apparatus providing the web service, for example. This server apparatus may be connected to a communication network  according to the present embodiment.","As in the drawing, the WSDL data  has described therein various types of information assigned with tags, according to a notation method based on XML. For example, the WSDL data  defines a data type of input parameter denoted as \u201cdata type description A\u201d. The WSDL data  defines a data type of an output parameter as denoted as \u201cdata type description B\u201d. According to the definitions, the calculating section  according to the present embodiment may retrieve a web service whose data type matches the inputted data type adequately, as an index value calculation target.",{"@attributes":{"id":"p-0100","num":"0101"},"figref":"FIG. 10","b":["12","12","12"]},"The tModel data A may include a description portion indicating the contents and the kind of the service for example \u201ccomment description \u201d. This description portion may be a keyword search target explained above with reference to . The tModel data A may include text data representing the contents and the kind of the service as a key name (e.g. shown as \u201ckey name \u201d). This text data may also be a keyword search target.","The tModel data A may define a data type of an input parameter (e.g. denoted as \u201cdata type description \u201d). The search query B may define a data type of a set of input parameters being a search target (e.g. denoted as \u201ckey name \u201d). Based on such definitions, the calculating section  according to the present embodiment may be able to adequately retrieve a web service whose data type matches the inputted data type as an index value calculation target.",{"@attributes":{"id":"p-0103","num":"0104"},"figref":"FIG. 11","b":["100","100","1000","1020","1075","1030","1040","1060","1082","1084","1010","1050","1070","1084"]},"The host controller  may be connected to the RAM  and may also be connected to the CPU  and the graphic controller  accessing the RAM  at a high transfer rate. The CPU  may operate to control each section based on programs stored in the ROM  and the RAM . The graphic controller  may obtain image data generated by the CPU  or the like on a frame buffer disposed inside the RAM  and may display the image data in a display apparatus . Alternatively, the graphic controller  may internally include the frame buffer storing the image data generated by the CPU  or the like.","The input\/output controller  may connect the hard disk drive  serving as a relatively high speed input\/output apparatus, the communication interface , the hard disk drive , and the CD-ROM drive  to the host controller . The communication interface  may communicate with an external apparatus via a network. The hard disk drive  may be provided for realizing the storage  for example, and may store the programs and data used by the information processing apparatus . The CD-ROM drive  may read the programs and data from a CD-ROM  and provide the read information to the RAM  and to the hard disk drive .","Furthermore, the input\/output controller  may be connected to the ROM , and may also be connected to the flexible disk drive  with the input\/output chip  serving as a relatively low speed input\/output apparatus. The ROM  may store a boot program performed by the CPU  when the information processing apparatus  starts up, a program relying on the hardware of the information processing apparatus , and the like. The flexible disk drive  may read programs or data from a flexible disk  and supply the read programs or data to the hard disk drive  or the RAM  via the input\/output chip . The input\/output chip  may connect the flexible disk  to a variety of input\/output apparatuses via, for example, a parallel port, a serial port, a keyboard port, a mouse port, or the like.","A program executed by the information processing apparatus  may be provided by a user in a state where it is stored in a storage medium, such as the flexible disk , the CD-ROM , or an IC card. The program may be read from the storage medium via the input\/output chip  and\/or the input\/output controller , and may be installed in the information processing apparatus  to be executed. Since the operation which the information processing apparatus  or the like performs according to the program may be the same as the operation performed by the information processing apparatus  already described in relation to , and so the explanation thereof is omitted here.","The programs shown above may be stored in an external storage medium. In addition to the flexible disk  and the CD-ROM , an optical recording medium such as a DVD or PD, a magnetooptical medium such as an MD, a tape medium, a semiconductor memory such as an IC card, or the like can be used as the recording medium. Furthermore, a storage such as a hard disk or a RAM disposed in a server system connected to a dedicated communication network or the Internet may be used as the storage medium and the programs may be provided to the information processing apparatus  via the network.","As described so far, embodiments of the present invention are able to conduct a search to retrieve a web service having a function that a user wishes to obtain and to output the web service more efficiently than before. For the search, an execution history of a service and a parameter input history used in retrieving the service may be used in addition to data types and keywords. By combining them, the information processing apparatus  according to the present invention may be able to accurately retrieve a web service having the functionality that a user wishes to obtain.","Upon receipt of an outputted search result, the information processing apparatus  may receive an input of an evaluation result showing whether the retrieved service is a service that the user is searching for. The evaluation result may be reflected in the database as a search result of the service. Accordingly, the search accuracy can be further enhanced by further utilizing the evaluation result in the subsequent searches.","Although some aspects of the present invention have been described by way of the exemplary embodiments, the technical scope of the present invention is not limited to the scope of the above description. It should be understood that those skilled in the art might make many changes and substitutions without departing from the spirit and the scope of the present invention which is defined only by the appended claims. For example, for web service searches, only the execution history may be used without using the evaluation history, or only the evaluation history may be used without using the execution history.","It would be recognized by those skilled in the art, that the invention described herein can take the form of an entirely hardware embodiment, an entirely software embodiment, or an embodiment containing both hardware and software elements. In an exemplary embodiment, the invention may be implemented in software, which includes but is not limited to firmware, resident software, microcode, etc.","In this case, the invention can take the form of a computer program product accessible from a computer-usable or computer-readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a computer-usable or computer readable medium can be any apparatus that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0014","num":"0015"},"figref":"FIG. 1","b":"10"},{"@attributes":{"id":"p-0015","num":"0016"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0016","num":"0017"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0017","num":"0018"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0018","num":"0019"},"figref":"FIG. 3","b":"106"},{"@attributes":{"id":"p-0019","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0027"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
