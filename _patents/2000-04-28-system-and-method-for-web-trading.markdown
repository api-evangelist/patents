---
title: System and method for web trading
abstract: The present invention relates to a web trading system and method for performing financial transactions securely over a public data network, such as the Internet, using a web browser as the user interface. The financial transactions are offered, for example, by a financial institution to its customers at the institution's web site. They include transactions such as foreign currency exchange, currency and money market trades, and warrant trades. The web trading system and method provide secure communication protocol between the Internet user interface and a virtual private network (VPN) of a financial institution to enable implementation of trading applications by the financial institution's application servers across the VPN. Security for the financial transactions is provided by the web trading systems and software downloaded to the customer's personal computer (PC) and includes encryption, authentication, authorization, message and transaction integrity capabilities, registration authority, handshake protocol, and firewalls.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07716109&OS=07716109&RS=07716109
owner: Citibank, N.A.
number: 07716109
owner_city: New York
owner_country: US
publication_date: 20000428
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/131,555 titled \u201cSYSTEM AND METHOD FOR WEB TRADING\u201d, filed Apr. 29, 1999.","The present invention relates to automated financial transactions, and in particular to a system and method for performing automated financial transactions securely over the Internet using a web browser for the user interface.","Financial institutions, such as banks, have a number of trading applications, such as applications for trading foreign exchange products. Typically, such trading applications are deployed over private networks, as opposed to the Internet using a web browser for the user interface. For example, the user interface that is the current implementation for products, such as foreign currency exchange products, is deployed through a private network, such as a virtual private network (VPN), as distinguished from the Internet.","Financial institution customers, however, want to have services, such as foreign currency exchange products, delivered through the Internet or web and to have the services available without having to access the financial institution's private network. The customers want to be able to view and actually interact with the application or service through a web browser over the Internet. At the same time, the customers want assurance that the financial transactions which they perform over the Internet are secure.","It is a feature and aspect of the present invention to provide a system and method for performing financial transactions with a financial institution, such as a bank, over the Internet.","It is another feature and aspect of the present invention to provide a system and method for performing financial transactions securely over the Internet.","It is an additional feature and aspect of the present invention to provide a system and method for performing financial transactions securely over the Internet, using a web browser for the user interface.","It is a further feature and aspect of the present invention to provide a system and method for performing financial transactions, such as foreign currency exchange, currency and money market trades, and warrant trades, securely over the Internet.","To achieve the stated and other features, aspects and objects, an embodiment of the present invention provides a method and system for performing financial transactions, such as foreign currency exchange, currency and money market trades, and warrant trades, which enables a financial institution, such as a bank, to deploy the services or trading applications, through the Internet. An application of the system includes a user interface portion which is written in a language that makes it suitable for deployment in a web browser and to work through the web. The system of the present invention also bridges the Internet user interface to back end server processes of the financial institution. In other words, the system for an embodiment of the present invention sits in the middle and brokers the communication protocol from Internet enabled protocols in the protocols formerly used, for example, on implementation of trading applications of the financial institution through a private network such as a virtual private network (VPN).","Referring now to an embodiment of the invention, the system and method for securely performing financial transactions, such as foreign currency exchanges, currency and money market trades, and warrant trades, over a public data network (PDN), such as the Internet, makes use of encryption of data in transmission over networks. The financial transactions are offered, for example, by a financial institution to its customers at the institution's web site.","According to an embodiment of the present invention, the web trading system and method provide secure communication protocol between the Internet user interface at the customer's site and a virtual private network (VPN) of a financial institution to enable implementation of financial applications by the financial institution's application servers across the VPN. The customers referred to herein range from individuals to large entities such as corporations, fund managers and banks. The financial applications referred to herein include but not limited to: applications for electronic foreign-exchange trading, such as those described in U.S. Pat. No. 5,787,402, which is hereby incorporated by reference; applications for electronically matching and confirming currency and money market trades, providing settlement instructions, and\/or performing allocations and splits, such as those described in U.S. Pat. No. 6,029,146, which is hereby incorporated by reference; and applications for allowing customers to remotely and electronically buy and sell warrants from sellers.","Security for the financial transactions over the Internet is provided by the web trading system and software downloaded to the customer's site or terminal, such as the customer's personal computer (PC). Confidential customer data and password and other security tokens and keys are protected using security capabilities, and hosts are also secured. Security capabilities include, for example, Secure Sockets Layer (SSL) and public key encryption technology, such as Entrust\u2122. Hence, security for the financial transactions comprises various layers of protection including encryption, authentication, authorization, message and transaction integrity capabilities, registration authority, handshake protocol, and firewalls.","According to an embodiment of the present invention, as shown in , the financial institution has a private web site or public web site, such as \u201cwww.crossmar.com\u201d. At S, a customer at a terminal, such as a client computer or PC, uses HyperText Transport Protocol (HTTP) to access the web site and navigates, for example, through a hierarchy of pages that takes the customer to the financial institution's secured financial application capability, such as foreign currency exchange capability, via a hyperlink. In order to access the financial application capability, the customer clicks on an appropriate selection at S, at which point the customer is hyperlinked to a secured Uniformed Resource Locator (URL) for connection to a secured web server containing the desired financial application at S and prompted to enter a user name and password for authentication. Alternatively, as shown in , the secured financial application has its own secured URL which the customer can access via HyperText Transport Protocol Secure (HTTPS) at S for direct connection to the secured web server. The customer is then required to enter a user name and password for authentication and access to the financial application on the secured web server.","When the customer comes to the financial institution's web site or URL to access a financial application for the first time, i.e., the customer is a first-time user, the institution's server system initially authenticates the customer through a secure registration process. According to an embodiment of the present invention, the registration process includes the downloading of security software from the system to the customer's PC, such as digital signature and session encryption capabilities, certain Java class and dynamic link library (DLL) files, and keys for authentication and digital signature, that remain resident on the customer's PC. When the customer clicks on the hyperlink on subsequent visits to the web site, the preloaded security software on the customer's PC automatically undertakes most of the security functionality of the system, such as encryption of the session between the customer and the financial institution's application servers, and only changes that have occurred since the last visit are provided. The software downloaded to the customer's PC also provides the user interface.","Each subsequent time the customer comes to the web site to run the application, all runtime components will have been downloaded and are executing, and the system downloads, for example, a Java applet to the customer's PC, which prompts the customer for a user name and password. In response to the prompt, the customer enters the customer's user name and password. When the customer enters the information, it is encrypted by the system and sent back to a web server and back into the financial institution's application server environment, where it is used to authenticate the customer and to establish an encrypted session.","Upon a successful registration, the customer can access the financial institution's web site and start performing financial transactions. According to an embodiment of the present invention, when the customer is authenticated and the encrypted session is established, the customer is presented, for example, with a series of screens and a menu that give the customer choices for doing various things related to performing a financial transaction, such as trading foreign currency. For example, by inputting information in response to prompts on the customer's PC screen, the financial institution's currency exchange trading system identifies the nature of the transaction which the customer wants, automatically generates an offer in response to the customer's request, based on parameters, such as market price, the size and nature of the transaction, and the size and nature of the customer, and displays an offer to the customer on the customer's PC screen. The trading system gives the customer the option to accept or reject the offer or ask for an updated offer, and if the customer delays too long, the trading system automatically withdraws and updates the offer. If the customer accepts an offer, the trading system automatically executes the trade and displays a notification on the customer's PC screen.","Referring now to , which represents an overview of a secured system  and method thereof for securely performing financial transactions over the Internet, according to an embodiment of the present invention. The security  includes the following capabilities: two-factor authentication capability; operational capability with a web server, such as an Internet Information Server (IIS); integration with Distributed Computing Environment (DCE) security; firewall friendly (capability to communicate through firewalls); non-repudiation capability; encryption of confidential and restricted data transmitted over a non-secured network such that only authenticated users having access to the data; single entry of DCE user name and password for both software download and application execution; secure user authentication and software distribution through HTTPS connection with at least 128-bit encryption; integrated security architecture; and software distribution facility having automatic detection capabilities to determine what components are not installed and what components are obsolete and to perform minimal incremental setup.","To provide secure communication and financial transactions between the customer's browser  and the financial institution's system, the financial institution downloads or provides component-based applications for web clients\/customers to use on their local machines. There are two kinds of components\u2014security and communications common components, which include client components for secured communication, and application specific components. Each different financial application has one application specific component. Thus, if a user\/customer wants to use a financial application made available by the financial institution, all the security and communications common components and the specific application's component must be installed on the customer's local computer. If the customer subsequently wants to use another available financial application, only the new application's specific component needs to be installed on the customer's local computer.","Hence, as shown in , the customer's browser  on the customer's local machine, such as a client PC, is provided with a number of component-based applications, including an application specific applet , Object Request Broker (ORB) software , and encryption software  with at least 128-bit encryption capability such as a SSL scheme or a PKI scheme like Entrust\u2122 PKI. On the server side, the financial institution's system includes a financial transactions Local Area Network (LAN), which comprises a DCE cell , a gatekeeper having a port , an osagent , and a web server or IIS . Although the web server  is depicted outside the DCE cell  in  for ease of illustration, it actually resides in the DCE cell  to allow it to use DCE user name and password and authenticate clients for software download. The web server  contains a signed applet which is used to manage the download of application components specific to particular financial applications. This web server  also contains web client components in secure directories, which cannot be directly accessed by web clients\/customers of the financial institution. These web client components are the aforementioned client components for secured communication that together constitute an object router client module in the client PC. This client module is discussed in more detail later.","With regard to the DCE cell , it further comprises an object router server module (ORSM) , such as the NetWeaver\u2122 product made by NetNumina Solutions\u2122, accessible by a PKI services port , an access management tool (AMT)  such as the Gradient Netcrusader\u2122, DCE application servers  for storing the various financial applications offered by the financial institution, and a relational database management system  such as the Sybase\u2122 system, which includes a SQL server, application programming interfaces (APIs) for programmers to develop code to access the data and stored procedures in the database, and administrative tools and utilities. It should be noted that the osagent , mentioned earlier, is part of the Object Request Broker (ORB) software within the ORSM . It provides object location and failure detection services; i.e., it helps client software find the IP address and port number of a server object.","In operation, the client computer having browser  accesses the financial institution's system via the Internet  and the institution's VPN . The VPN  is secured from the Internet by a firewall  such as the Cisco PIX\u2122 firewall. Communication between the Internet and the VPN  is handled by a data router  such as a Cisco Router\u2122. Communication between the VPN  and the financial institution's system is also handled by another data router  such as a Cisco Router\u2122. The financial institution's system is further secured from the VPN  by a smartwall firewall  such as the V-One Smartwall\u2122 product. The security features such as the PKI or SSL features are accessible through this firewall  to provide communication from the object router server module  as well as client communication tunneled through the gatekeeper and HTTPS.","It should be noted that the gatekeeper located at gatekeeper port  may be replicated to accommodate a large number of users or customers. The gatekeeper may be replicated, for example, on multiple machines or on the same machine. The gatekeeper will be started on a static port. For each instance\/replication of the gatekeeper, a new port will be assigned. This port will be opened in the firewall  for traffic with a destination of the machine where the gatekeeper is running.","Referring now to , which shows an overview flow diagram for securely connecting a customer's client machine to the financial institution's system to provide the customer with access to financial applications over a public data network, according to an embodiment of the present invention. As mentioned earlier, when it is determined at S that the customer accesses for the first time the financial institution's web site or URL having the desired financial applications, the customer is initially authenticated through a secure registration process at S. Referring now to , which shows a detailed flow diagram of the secure registration process, according to an embodiment of the present invention. This process is implemented by the financial institution through a Certificate Authority (CA) and includes providing new customer with a key exchange certificate at S so that communication during registration is secure. One possible way to delivering the key exchange certificate to the customer is via a postal service. At S, the registration process further requires the new customer to execute an application with the CA to obtain a digital certificate and associated public, private and digital signature keys for end-user authentication purposes and for providing secure financial transactions over the Internet. The CA may be a third party CA or the financial institution itself working in the institution's environment to handle a number of functions, including: issuing digital certificates, revoking the digital certificates and maintaining the Certificate Revocation List (CRL).","During the registration process, the financial institution also verifies that the actual end-user executing the above registration procedure is the customer at S. This verification can be done through a number of ways known to those skilled in the art. If the verification is unsuccessful, as queried at S, the financial institution can revoke the issued key-exchange certificate and terminate the relationship with such end-user at S and S. However, if the verification is successful at S, the financial institution establishes a relationship with the customer and provides user name and password to the customer, with the CA issuing the necessary digital certificates and associated public, private and digital signature keys to both the customer and the financial institution for mutual authentication at S.","Referring back now to . Upon a successful registration process, the financial institution downloads security software and web client components to the client PC of the customer at S. Additionally, the financial institution further downloads application specific applets to the client or customer's computer at S.  provides a more detailed view of the client computer and browser  of , with like elements labeled with like numbers. As seen in , the client PC of the customer includes downloaded JAR- or CAB-extension files of the application specific applet , the Java Interceptor  to perform session encryption and digital signature, and the Java ORB . These files collectively constitute an object router client module (ORCM)  corresponding to the ORSM  residing on the financial institution's server side. The type of files for the ORCM  depends on the type of clients. For instance, for Visual Basic\u2122 and Internet Explorer\u2122 clients, the ORCM  will be packaged as one or more CAB files; for Netscape clients, one or more JAR files.","The client PC further includes the encryption-software . According to one embodiment of the present invention, the encryption software used is a PKI software, such as the Entrust\u2122 PKI, with a client digital certificate previously installed in the client PC of the customer upon the successful registration process. As shown in FIG. B, the Entrust PKI includes Entrust Java Runtime , with associated digital signature key  and session encryption key , as a requirement for the ORCM  to run. According to another embodiment of the present invention, the encryption software  uses the SSL scheme developed by Netscape\u2122.","Referring now to , , and . As mentioned earlier, when a customer first requests a financial application from the financial institution's system, the customer initially makes an HTTPS connection to a HyperText Markup Language (HTML) page on the internal web server  that contains a signed applet, which is an application specific applet. This applet comprises a single sign-on component of the ORSM  as well as download manager client software. Upon this initial request by the customer, the signed applet specific to a desired financial application is HTTP downloaded at S from the web server , via its web server port  and connection  through the VPN  and the Internet, to the client PC. The signed applet now resides in the client PC as the application specific Java applet . The download of the Java applet  is not authenticated or encrypted. There is no need for encryption because there is no authentication. Nevertheless, data integrity is provided because the components are digitally signed. The single sign-on component and the download manager are in a single file that is cached by the client web browser  of the customer's PC. If a new release of this file is needed, the web browser  updates the cache, as described in further detail later.","The financial institution's system is now ready to login the customer at either S or S. The Java virtual machine starts up. The HTML page of the downloaded application specific Java applet  lists the required files, which are specified as Java Properties, for running the desired financial application. These files include the aforementioned web client components constituting the ORCM , the application specific components, and the security software. The location of the client cache of the client machine is additionally specified by a Java Property, wherein the cache is designated as a directory relative to the client's Java virtual machine directory. The Java applet  checks this cache location to determine if any of the required files are missing or outdated. If any files are needed from the server of the financial institution, they will be downloaded upon the successful login by the customer. Once the cache is up to date, the browser is redirected to a local HTML file which is also stored and updated as part of the cache. This HTML file then loads the required application files directly from the client cache. The single sign on module used in both the download process and the application execution ensures that the user cannot load the local HTML, hence avoid the check for updated files. This is done by setting a flag during the download process indicating the local files are up to date. Upon stating the application, the single sign-on component checks and makes sure this flag is set.","If a SSL encryption scheme is employed at S of , the SSL login process is shown in , according to one embodiment of the present invention. The ORCM  initiates the SSL environment with at least 128-bit encryption as established by Netscape\u2122 to communicate with the ORSM  through HTTPS. The ORCM , through its downloaded Java applet , then prompts the customer to login with a DCE user name and password at S. The ORCM  prompts a user to enter the DCE user name and password when either the ORCM  is initiated by a customer's login to request a financial application, as is the case here, or when there is a request to download one or more required files from the financial institution's system, as mentioned above. The DCE user name and password is established during the security registration process at S in . According to an embodiment of the present invention, if an expired password is detected, the user is forced to change the password. Additionally, upon a successful login, the ORCM  provides commands to display date and time of the last successful login, as well as the number of unsuccessful login attempts since the last successful login. Additional requirements for the password may also be implemented. For instance, a password may not be changed more than once in a specified time period, user accounts will be disabled after a specified number of consecutively failed login attempts, and there is a limit set for the number and type of characters allowed for a password. Upon the successful login at S, the ORCM , through its applet , performs handshaking with the ORSM  at S, using the gatekeeper port  as a communications proxy, to establish a session encryption key . Non-repudiation is not available with the SSL encryption scheme. The non-repudiation security feature ensures that the customer cannot deny participation in the transaction, for only the customer as the sender possesses the private key used to digitally sign the data that was sent to the financial institution's system.","If a PKI encryption scheme such as Entrust\u2122 is employed at login at S of , The PKI login is shown in detail in . At S, the ORCM , through its applet , initializes the PKI environment by calling out to Java classes for the PKI Client Java run time . At S, the client digital certificate (not shown) containing a digital signature key  is then loaded. The client certificate on the client computer can be encrypted with a password, as shown at S. If so, the customer will be prompted for this password at S. Additionally, any client requests that require non-repudiation will be digitally signed at this juncture at S, as further explained below. With the PKI encryption scheme, the application specific Java applet  can communicate with the ORSM  via the gatekeeper port  and connection  using the Internet Inter-ORB Protocol (IIOP) secured with a PKI Session module, such as Entrust\u2122\/Session, directly or tunneled through HTTPS. The HTTPS tunneling is used when the aforementioned firewalls between the client and the server employ network address translation and port filtering. There is a configuration parameter that is set at deployment time in the applet's HTML file to turn HTTP tunneling on\/off, with the off condition allowing the aforementioned IIOP communication between the Java applet  and the ORSM .","Referring now to , which depicts a flow diagram of the non-repudiation process at S of . Once data of the IIOP request associated with a desired financial application is marshaled for transfer, the client's Java interceptor  is implemented to trap the request before the data is sent over the wire at S. The client interceptor , such as Visigenic\u2122 Java interceptor technology, makes use of a PKI File module, such as Entrust\u2122\/File technology, to digitally sign the request S. Once signed, the data is shipped across over the wire by the Java ORB  using IIOP secured with a PKI Session module at S, as mentioned above. When the request reaches the ORSM , a subsequent server interceptor is implemented to trap the request before the data is unmarshaled at S. The request is logged in the SQL developments tool system  on the physically secured host, along with a timestamp. At S, The request is then unsigned by making a call against the PKI file module and allowed to continue processing as normal. The response to the non-repudiation requirement at S of  is digitally signed by the ORSM  and logged in the SQL developments tool system  on the physically secured host at S, along with a timestamp.","Using either direct IIOP connection or tunneled-through HTTPS protocols, the client computer of the customer connects through the routers  and , the VPN , the firewall  and the smartwall  to the gatekeeper port . The gatekeeper port  then proxies the secured request intact to the appropriate ORSM  after removing the HTTP wrapper for connection to the appropriate financial application in the DCE application servers  that corresponds to the application specific Java applet .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 9","FIG. 2","FIGS. 2"],"b":["5","9","129","120","121","126","127","128"]},"Upon receiving a request from the client computer of the customer for the first time, as determined at S's of , mutual two-factor authentication takes place between the ORCM  of the client browser  and the ORSM . It should be noted that there is no authentication between the client browser  and the gatekeeper at port . Thus, the client application request is passed along intact from the client browser , through the gatekeeper port , and on to the object router server components. Consequently, there are several IIOP calls that are executed at this juncture between the client browser  and the ORSM  to perform this authentication process. These take place \u201cunder the covers\u201d; in other words, no application-level code is required for them.","If a PKI encryption scheme such as the Entrust\u2122 PKI is employed for authentication at S,  provides a detailed flow diagram of the PKI authentication process between the ORCM  and ORSM , according to an embodiment of the present invention. Referring to , both the ORSM  and the ORCM  (through its client Java applet ) contact the PKI services such as the Entrust Services to authenticate each other's digital certificates to ensure that they come from a valid CA, and are not on the CRL of the CA. Specifically, for server authentication at S the ORCM  verifies the server's digital certificate of the financial institution retrieved from the ORSM  is from a trusted CA. At S, the ORCM  verifies the Distinguished Name (DN) contained in the certificate is a trusted object router module. At S, the ORCM  also checks the CRL to ensure that this digital certificate has not been revoked. These two tasks are accomplished by communicating directly with the PKI servers at the financial institution through the PKI services port . For client authentication at S, server-side interceptor  is used to trap the IIOP request, decrypt the transmission, and extract the PKI credentials characterizing the client digital certificate. At S, the ORSM  then verifies that the digital certificate retrieved from the client computer, via the IIOP request, is from a trusted CA. At S, the ORSM  also checks against a current CRL of the CA to make sure the digital certificate has not been compromised or revoked. Again, these two tasks are accomplished by communicating directly with the PKI servers within the financial institution. Furthermore, certain requests require a process for non-repudiation. It is at this juncture during these requests that the ORSM  makes appropriate calls against the PKI File module to validate the client's digital signature and, via the DCE Remote Procedure Call (RPC), store the digitally signed information in a physically secured database.","If the SSL encryption scheme is employed at S of ,  provides a detailed flow diagram of the SSL authentication process between ORCM  and ORSM . Referring to , only the ORCM  will validate the server digital certificate of the financial institution using a local public key deployed with the application. Specifically at S, the ORCM  verifies the digital certificate retrieved from the ORSM  is from a trusted CA. The list of trusted CAs is provided to the client computer as part of the HTTPS download from the web server  of the financial institution. The ORCM  also verifies the DN contained in the certificate is a trusted object router module. No checking is done to see if the certificate has been revoked.","There is also an authentication process between the ORSM  and the DCE application servers , as indicated by S and S in . If the PKI encryption scheme is employed for this authentication process, the ORSM  uses DCE authentication to verify the DCE application servers  with which it is communicating. To perform this verification, the ORSM  uses the client's DCE user credentials to authenticate against the DCE servers . The server's Java interceptor  is used to establish DCE user credentials for the proper client principal in the following manner. the Java interceptor  provides the AMT  with the PKI DN, which denotes the user name and other identifying attributes of the customer, extracted from the client request during the aforementioned authentication process. The AMT  then maps the DN into DCE user credentials and returns this to the Java interceptor  of the ORSM  to complete authentication. The ORSM  also caches the security information returned by the AMT  in random access memory (RAM) for use during later requests. Next, the DCE application servers  authenticate the web client\/customer, using the DCE user credentials passed on by the ORSM , as further described in detail later.","If the SSL encryption scheme is employed, the ORSM  also uses DCE authentication to verify the application servers  with which it is communicating. To perform this verification, the ORSM  also utilizes the client's DCE user credentials to authenticate against the DCE servers . The DCE user credentials are established by the ORSM  from the DCE user name and password provided by the ORCM  during the handshake mentioned earlier. Next, The DCE application servers  authenticate the web client\/customer using the DCE user credentials passed on by the ORSM , as further described in detail next. This security information will be cached based on session ID in RAM for use during later requests.","Upon establishing the DCE user credentials with either the PKI or SSL encryption scheme, the ORSM  translates the IIOP request at connection  into a secure DCE request utilizing such DCE credentials and subsequently performing datatype mapping between the IIOP and DCE protocols. Specifically, the DN contained in the client digital certificate is mapped to a DCE principal. At S, If no mapping exists the client\/customer will not be granted access to the DCE application servers  and the stored financial applications. Access to the DCE application servers  and RPCs is managed in the DCE security server (not shown) of the AMT  using Access Control List (ACL) management. Access control to application servers  by clients (either end-users or other RPC servers) is granulated to the level of RPC servers and individual RPCs within the servers. Each application has a built-in authorization mechanism that uses the USERID, extracted by the application RPC server from the DCE credentials of the user\/customer, to identify entitlements. Entitlement setting is restricted to authorized application administrators.","The ORSM  then propagates the secured request along to the DCE application servers . Intranet communication between the ORSM  and the DCE application servers  is also encrypted. However, this Intranet encryption may be of a lower-bit type than that used in the encryption for IIOP communication over the Internet between the client browser  and the ORSM , as the security risk is less in the Intranet environment.","Upon subsequent requests by the client computer for a financial application from the DCE application servers , all runtime components would have been downloaded off the financial institution's system and are executing. Additionally, when a web page or Java class file associated with the desired financial application is requested, the browser will check the cache first. If the document is found in the cache, the browser will (either once per session or every time) validate this document is up to date. To check to see if the document is up to date, the browser will request the document from the web server , and if the document has not been updated, the browser will use the file in the cache. The application request itself will trigger the client-side Java interceptor  to encrypt the data using a PKI session such as Entrust\/Session and, if required, digitally sign the request with Entrust\/File before sending it off. As mentioned earlier, the application specific applet  can communicate with the ORSM  using IIOP and Entrust\/Session directly or tunneled through HTTPS to connect through the front-line firewall  and the VPN  to the gatekeeper port . Next, the gatekeeper port  talks IIOP and Entrust\/Session to the ORSM , which then accepts the IIOP request and the PKI security information. Since this request is coming from a previously authenticated user, the ORSM  simply validates the authentication context, decrypts and validates the integrity of the message utilizing Entrust\/Session Application Program Interfaces (APIs) and passes the request along using cached DCE credentials. If the request requires non-repudiation, the ORSM  additionally validates the digital signature using Entrust\/File and store the appropriate information. Next, the ORSM  performs data type mapping from IIOP to DCE elements and propagates a secured request along to the DCE application servers . The customer now has access to a secure environment over the Internet to perform the desired financial transaction from the financial institution's server.","Although the invention has been described with reference to these preferred embodiments, other embodiments can achieve the same results. Variations and modifications of the present invention will be apparent to one skilled in the art, and the above disclosure is intended to cover all such modifications and equivalents."],"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2","b":"100"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 5","FIG. 2"],"b":"110"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 7","FIG. 3"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 8","FIG. 6"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 9","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10","b":["111","129"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11","b":["111","129"]}]},"DETDESC":[{},{}]}
