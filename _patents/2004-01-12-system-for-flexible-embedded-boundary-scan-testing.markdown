---
title: System for flexible embedded Boundary Scan testing
abstract: A flexible Boundary Scan test system is disclosed. The system includes an interpreter module operable to execute a program element selected from a plurality of program elements that include at least one instruction type having an interface to identify and execute selected functions wherein each of the selected functions has associated therewith at least one data information item. In one aspect of the invention, selected ones of the functions are composed of a plurality of functions. In another aspect of the invention, the instruction includes parameters and adornments for determining the selected function execution.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07149943&OS=07149943&RS=07149943
owner: Lucent Technologies Inc.
number: 07149943
owner_city: Murray Hill
owner_country: US
publication_date: 20040112
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF INVENTION","BACKGROUND OF THE RELATED ART","SUMMARY OF INVENTION","DETAILED DESCRIPTION"],"p":["The present invention is related to electronic printed circuit board and system assembly testing and more specifically to provide a flexible method for implementing tests for embedded Boundary Scan testing.","As integrated circuit packaging technology has decreased in size, the ability to determine functionality and continuity of electronic assemblies has become increasingly more difficult. Integrated circuit boundary scan features are well known in the art and is typically used in Personal-Computer (PC) based tests and in Automatic Test Equipment (ATE) testing used in manufacturing. An example of Boundary-Scan testing is disclosed in U.S. Pat. No. 6,594,802, entitled \u201cMethod and Apparatus for Providing Optimized Access to Circuits for Debug, Programming and Test, issued Jul. 15, 2003 to Ricchetti, et al.","An advantage of Boundary Scan testing is that it is structural in nature and is amenable to explicit coverage metrics. Boundary Scan features for testing have also been expanded to both the board and the system level. In the embedded environment, board-level tests are typically functional tests that target specific board operations, while system level testing allows for functional testing of particular hardware modules and\/or their interaction. An example of board and system level Boundary Scan testing is disclosed in USPPA No. U.S. 2003\/0009715 A1, entitled \u201cMethod and Apparatus for Optimized Parallel Testing and Access of Electronic Circuits,\u201d filed on Apr. 9, 2002, by Ricchetti, et al.","Current methods of embedded Boundary Scan testing may use microprocessor-based or specialized co-processor-based programs to take advantage of programmable technology. However, current methods are limited in that the tests are specific to the connectivity of the existing board level integrated circuit configuration. Thus, when a new board configuration is used, the microprocessor-based Boundary Scan programs must be altered to accommodate the new configuration. As has been found, altering such programs is a time- and labor-intensive process as the new functions must be tested to insure they work properly and existing functions must be re-tested to establish that their operation was not altered by the new changes. USPPA No. 2003\/0106004, entitled \u201cMethod and Apparatus for Embedded Built-In Self-Test (BIST) of Electronic Circuits and Systems,\u201d filed May 10, 2002, by Ricchetti, et al., discloses a method for downloading externally based test programs and data into embedded systems to avoid duplication of effort in developing test programs that may be used both from an external computer or an internal controller. However, this method is limited as once a start address is determined the testing continues until the end of the scan vectors for the selected scan block vector suite is reached. Hence, the order of the tests is fixed by the data downloaded into the memory and the memory must be reloaded to provide for a different order or the addition of new tests.","Furthermore, the prior art only provides for rudimentary conditional flow control in the order of jumps and if-then conditionals. Thus the embedded BIST approach does not lend itself well to reliability testing, such as Environmental Stress Test (EST), where a sequence of operations must be performed repetitively for a specific period of time or when an error condition is detected. The prior art is also limited in scope in what test functions can be performed as, typically, there is a single static vector test format available to perform Boundary Scan operations. Furthermore, the prior art fails to provide adequate support for product testing over the entire product life cycle as part of a Built-In test strategy. Further still, as new industry standards and features are introduced to solve specific test problems, support for these new features must be available in the embedded test system. One such feature is the ability to support dynamic vector creation and analysis to reduce the time it takes to program logic devices, which is not available in the art.","Thus, there is a need in the industry for a method that allows for a more flexible means for providing Boundary Scan test and programming support to accommodate new standards, configurations and flexibility in the order of test execution without incurring time-intensive re-programming and re-testing of the BIST software.","A flexible Boundary Scan test system is disclosed. The system includes an interpreter module operable to execute a program element selected from a plurality of program elements that include at least one instruction type having an interface to identify and execute selected functions wherein each of the selected functions is associated with at least one data information item. In one aspect of the invention, selected ones of the functions are composed of a plurality of second functions. In another aspect of the invention, the instruction includes parameters and adornments for determining the selected function execution.","It is to be understood that these drawings are solely for purposes of illustrating the concepts of the invention and are not intended as a definition of the limits of the invention. The embodiments shown in figures herein and described in the accompanying detailed description are to be used as illustrative embodiments and should not be construed as the only manner of practicing the invention. Also, the same reference numerals, possibly supplemented with reference characters where appropriate, have been used to identify similar elements.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","110","150","160","110","120","130","132","134","125","150","152","154","156","158","155","120","124","120","122","122","126","122","122","120","125","130","125","2003"]},"For a plurality of boards, IEEE 1149.1 standard typically requires a wired serial communications link between a TDO signal port of a proceeding unit under test (UUT) and a TDI signal port on a subsequent UUT. Gateway modules , on boards  and , are used as a common communication access module that bridges the IEEE 1149.1 signals on the backplane to one circuit board at a time. In another aspect, some gateway modules allow for broadcast of information to all boards simultaneously. Gateways  are in communication via a Boundary Scan test bus, .","Central processing units (CPUs)  and test bus controllers  on boards  and  are used to control signals and execute programs that may be used to test communications between individual integrated circuits, e.g.,  and , or among other integrated circuits, e.g.,  and , or between boards, e.g., integrated circuits  and . Although boards  and  are depicted containing CPUs, it would be recognized by those skilled in the art that only a single board is required to include a CPU that may be used to perform system level tests. CPU  typically contains executable program code and test data, e.g., test patterns, used to test particular integrated circuits and the connections therebetween.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["200","210","220","230","230","240","250","220","260","260"]},"Test Repository Archive (TRA) Services  represents data files and corresponding access functions associated with specific sets of tests to be applied to the UUT. Test repository archive  data may be stored in a local ROM\/Flash memory or downloaded from a host computer or server and linked with the Run-time services . In one aspect, TRA  is a binary data block of compressed file images. The contents of a TRA  include TFCL program files, persistent Test Step Objects, Boundary Scan Vector (i.e., test pattern) files, Diagnostic Lookup tables and other files necessary to perform a complete test suite on the UUT.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 2","FIG. 2"],"b":["300","310","360","340","345","350","360","310","320","330","360","270","310","210","330","360","270","210","330","340","320","360","360","340","210","340","210","345","360"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4","b":["400","410","410","410","420","430","440","450","460","440","410","450","420","410","410","430","450","460","410"]},"Conditional Statement  is representative of common statement behavior that relies on known conditions to execute. Statements such as LOOP , REPEAT , WHILE , Compound statements (IF or IF\/THEN\/ELSE)  are conditional statements known in the art. More specifically, LOOP statement  allows a block of code to be executed in a loop until an event, either internal or external, is applied or a desired number of iterations or loops are achieved. REPEAT  represents a statement that is applied to a block of code and conditionally repeats the block after the first execution of the code. WHILE statement  is responsible for testing if the condition is true prior to executing any of the contained statements. If the condition is true, the object places its contained statements at the head of the Agenda object  for execution. Compound statement  is composed of IF and IF\/THEN\/ELSE statements. IF defines a condition to be tested when that line of code is reached. If the condition evaluates to a \u201ctrue\u201d, the block of code defined by the \u201cthen\u201d clause is executed. If the condition evaluates to a \u201cfalse\u201d, the block of code defined by the \u201celse\u201d clause is executed, but only if an \u201celse\u201d block is specified.","APPLY statement  provides for many different behavioral options to the execution of this statement. APPLY  is responsible for identifying a Test Step , i.e., function, to be applied and ensures the appropriate Test Step handler is in place, dynamically, to support the action desired.","APPLY statement  is used to access the test step extension to the TFCL language. The APPLY statement further provides instruction to the designated test step that is the intent of the desired execution. For example,\n\n",{"@attributes":{"id":"p-0033","num":"0034"},"figref":"FIG. 5","b":["500","468","520","530","540","545"]},"If, however, the answer at block  is in the affirmative, then the newly created TestStep object is added to the cache reserve. Processing proceeds to block  where the requested TestStep object is obtained from the cache reserve. At block  the requested TestStep is then executed.","Examples of APPLY statement  are represented as:\n\n",{"@attributes":{"id":"p-0036","num":"0051"},"figref":["FIG. 6","FIG. 5"],"b":["600","530","610","270","140","620","625","630"]},{"@attributes":{"id":"p-0037","num":"0052"},"figref":"FIG. 7","b":["700","710","720","730","740"]},"The use of polymorphism provides the ability to separate the points of software change when a new feature is added or removed from the entire software system to a single point that is changed transparently to the entire software. Thus, adding a new TestStep type to the software only requires adding a new specialized TestStep object to the software. All links to this new feature are automatic through the use of the APPLY statement. The only change required to the existing software is found in the TestStepFactory that needs to create a new instance of the new feature. Furthermore, the use of polymorphism provides a faster execution of the executable code as performing specific conditional tests for each object type and selecting the appropriate specialized function is removed.","In environments that fully support static object initialization at run-time, it is possible to automatically register the new specialized TestSteps with the TestStepFactory so no creation code is required to be changed.",{"@attributes":{"id":"p-0040","num":"0055"},"figref":"FIG. 8","b":["800","800","810","820","840","860","830","850","870"]},{"@attributes":{"id":"p-0041","num":"0056"},"figref":["FIG. 9","FIG. 2","FIG. 10"],"b":["900","910","920","930","940","950","960","970","910","920","930","270","930","940","950","950","970","940","980"]},{"@attributes":{"id":"p-0042","num":"0057"},"figref":"FIG. 10","b":["1000","1010","1020","1","1020","1000","1030"]},{"@attributes":{"id":"p-0043","num":"0058"},"figref":["FIG. 11","FIG. 10","FIG. 11","FIG. 10","FIG. 11","FIG. 10"],"i":["a ","b ","c "],"b":["1020","1","1020","1105","1110","1115","1110","1020","1","1020","1120","1125","1020","1","1020","1130","1135","1030","1140","1030","1145","1030","1150","1030","1155"]},{"@attributes":{"id":"p-0044","num":"0059"},"figref":"FIG. 12","b":["1200","1210","1220","1","1220","1230","1240","1210","1","1210","1230","1240"]},"An example (entitled BPTEST.TFB) of backplane\/cable testing of multiple circuit boards having a multi-drop test bus may be performed using the following TFCL Boundary Scan Test program element:",{"@attributes":{"id":"p-0046","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ENTITY sys1"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FLOW sys1 IS"]},{"entry":[{},"APPLY ASP FROM 0 TO 0; \/\/ comment - Reset all ASPs"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"(i.e., Gateways)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"APPLY ASP FROM 10 TO 10 ALWAYS DIAGNOSE VECTOR;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/\/ sel. board 1"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF FAIL THEN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cfailed to connect to Board 1\u201d);"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"APPLY Brd1SVF FROM 1 TO 10 DIAGNOSE;\/\/ initialize board 1"]},{"entry":[{},"IF FAIL THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cBoard 1 failed to scan initialization vectors.\u201d);"]},{"entry":[{},"APPLY ASP FROM 0 TO 0; \/\/ Reset all ASPs"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"APPLY ASP FROM 20 TO 20 DIAGNOSE VECTOR; \/\/ select"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"board 2"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF FAIL THEN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cfailed to connect to Board 2\u201d);"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"APPLY Brd2SVF FROM 1 TO 15 DIAGNOSE; \/\/ Initialize using"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"data from lines \/\/1\u201315"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF FAIL THEN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cBoard 2 failed to scan initialization vectors.\u201d);"]},{"entry":[{},"APPLY ASP FROM 0 TO 0; \/\/ Reset all ASPs"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"APPLY ASP FROM 10 TO 10; \/\/ select board 1"]},{"entry":[{},"IF FAIL THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cfailed to connect to Board 1\u201d);"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"APPLY Brd1SVF FROM 11 TO 11; \/\/ HiZ Outs"]},{"entry":[{},"APPLY ASP FROM 20 TO 20; \/\/ Select Board 2"]},{"entry":[{},"IF FAIL THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cfailed to connect to Board 2\u201d);"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"APPLY Brd2SVF FROM 16 TO 16; \/\/HiZ Outs. Use data from"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"line 16\u201416"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"APPLY ASP FROM 10 TO 10; \/\/ select board 1"]},{"entry":[{},"IF FAIL THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cfailed to connect to Board 1\u201d);"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"APPLY Brd1SVF FROM 12 TO 12; \/\/ apply Pattern 1"]},{"entry":[{},"APPLY ASP FROM 20 TO 20; \/\/ Select Board 2"]},{"entry":[{},"IF FAIL THEN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cfailed to connect to Board 2\u201d);"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"\/\/ Observe Pattern 1"]},{"entry":[{},"APPLY Brd2SVF FROM 17 TO 17 DIAGNOSE LINE PIN NET;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ Use data \/\/ from line 17\u201417 and on failure report line, pin and net"},{"entry":"failure observed."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF FAIL THEN"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRINT (\u201cVector 17 failed on Board 2\u201d);"]},{"entry":[{},"STOP;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF;"]},{"entry":[{},"END FLOW;"]},{"entry":[{},"END ENTITY;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"With regard to the exemplary backplane\/cable process shown, the following information may be stored in the Test Repository Archive . The example shows the ASCII version of TFCL for a simple test. This ASCII program may be tokenized into a binary TFCL file in the format  shown in . The name of the file in the example may be BPTEST.TFB in the repository. This file would reside in its own Archived Data Block in the TRA . Supporting information for this file would be the TestStep object files and the associated data files containing information items for each test. For example, information regarding the ASP TestStep object may be implemented as a built-in TestStep type and the TestStep persistent file images required for this example are the images for the Brd1SVF and Brd2SVF objects. The persistent TestStep object images for the BSVF TestStep objects may be stored as files BRD1SVF.TS and BRD2SVF.TS respectively. The contents of the files may be as follows:",{"@attributes":{"id":"p-0048","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ BRD1SVF.TS"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NAME = BRD1SVF"]},{"entry":[{},"TYPE = BSVF"]},{"entry":[{},"FILE = BRD1VEC"]},{"entry":[{},"CATGY = BPTEST"]},{"entry":[{},"RESP = BRD1VEC"]},{"entry":[{},"COMPRESSED = NO"]},{"entry":[{},"DLUT = BRD1VEC"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ BRD2SVF.TS"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NAME = BRD2SVF"]},{"entry":[{},"TYPE = BSVF"]},{"entry":[{},"FILE = BRD2VEC"]},{"entry":[{},"CATGY = BPTEST"]},{"entry":[{},"RESP = BRD2VEC"]},{"entry":[{},"COMPRESSED = NO"]},{"entry":[{},"DLUT = BRD2VEC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The TestStep files reference the BRD1VEC.BSV and BRD2VEC.BSV binary SVF files and associated vector data files for the test step by the FILE property respectively. The format for the vector files follows that shown in . There are also references to the BRD1VEC.DTB and BRD2VEC.DTB diagnostic lookup table support files by the DLUT property respectively. The format for the DLUT is an ASCII tabular file containing the global cell number in the first column, the Device Cell identifier for the second column, the Device Pin identifier for the third column, and the Net identifier for the last column.","Furthermore, in the example provided, each call of the APPLY statements referencing identifier Brd1SVF and Brd2SVF may use, as in this illustrated case, the FROM x TO y optional parameters that instruct the TestStep object to apply the designated portions of the functionality to the UUT. The x represents the starting line number in the SVF to apply and the y represents the last line of the SVF to apply to the WUT during that point of execution. As one would skilled in the art would recognized, a line number may refer to a specific SVF function. Thus, there may be initialization code and test vectors in the same SVF file for a board. The APPLY statement defines the way in which the vectors are to be applied through its parameters and adornments.",{"@attributes":{"id":"p-0051","num":"0066"},"figref":["FIG. 13","FIGS. 8\u201312"]},"While there has been shown, described, and pointed out fundamental novel features of the present invention as applied to preferred embodiments thereof, it will be understood that various omissions and substitutions and changes in the apparatus described, in the form and details of the devices disclosed, and in their operation, may be made by those skilled in the art without departing from the spirit of the present invention. It is expressly intended that all combinations of those elements that perform substantially the same function in substantially the same way to achieve the same results are within the scope of the invention. Substitutions of elements from one described embodiment to another are also fully intended and contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIGS. 11","FIG. 10"],"i":["a","c "],"b":"11"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 13","FIGS. 8\u201312"]}]},"DETDESC":[{},{}]}
