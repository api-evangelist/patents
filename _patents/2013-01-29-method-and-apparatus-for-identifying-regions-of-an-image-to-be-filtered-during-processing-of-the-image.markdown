---
title: Method and apparatus for identifying regions of an image to be filtered during processing of the image
abstract: Embodiments of the present disclosure include methods, apparatuses, and systems for identifying regions to be filtered during processing of an image. A map generator is configured to receive pixels of an image and to determine a map for the image. The map indicates a number of islands within blocks of pixels of the image, where individual ones of the islands include either a single dark pixel, or two or more contiguous dark pixels, bordered by light pixels and/or one or more edges of the blocks of pixels. An index generator sets, based at least on the number of islands within the individual ones of the blocks of pixels that correspond to regions of the scanned image, filter indices for the regions of the scanned image. An image filter component, based on the filter indices, filters the regions of the scanned image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08989493&OS=08989493&RS=08989493
owner: Marvell International Ltd.
number: 08989493
owner_city: Hamilton
owner_country: BM
publication_date: 20130129
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. Provisional Patent Application No. 61\/595,538, filed on Feb. 6, 2012, incorporated herein by reference.","Embodiments of the present disclosure relate to the field of image processing, and in particular to selective filtering of different regions of an image.","The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent that it is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.","Scanned images can be smoothed or sharpened using an image filter in order to improve image quality. Scanned half-tone images\u2014images that simulate continuous tone imagery by using dots of varying size, tone, shape, and spacing\u2014are improved by smoothing. But scanned text documents and continuous tone (contone) images\u2014images with contiguous dots that cause the appearance of a continuous tone\u2014can be improved by sharpening. Image smoothing reduces differences between adjacent dots, essentially filtering out high frequency components in the image, in order to generate a smoother image. Image sharpening amplifies high-frequency components in the image in order to increase the detail of the image. A conventional scanner application allows the user to control image processing settings\u2014sharpening or smoothing\u2014based on the type of image being scanned.","But some images have multiple region types, such as regions that are half-tone, regions that are contone, and regions that are text. And using a single filter setting on such documents results in filter mismatch on some regions, a loss of data, and reduced image quality. This is especially true of images that are scanned, printed, and then scanned again.","Embodiments of the present disclosure include a system comprising a map generator configured to receive pixels of an image and to determine a map for the image. The map indicates a number of islands within blocks of pixels of the image, where individual ones of the islands include either a single dark pixel, or two or more contiguous dark pixels, that are bordered by light pixels and\/or one or more edges of the blocks of pixels. The system includes an index generator configured to, based at least on the number of islands within the individual ones of the blocks of pixels that correspond to regions of the scanned image, set filter indices for the regions of the scanned image. An image filter component, based on the filter indices, filters the regions of the scanned image.","Embodiments of the present disclosure include a method in which raw image data, including pixels of an image, are received. A map of the image is generated, in which the map is based on a number of islands within subsets of pixels, and wherein ones of the islands include either a single dark pixel or two or more contiguous dark pixels bordered entirely by one or more of light pixels or edges of the subsets of pixels. Based at least on the number of islands within the individual ones of the subsets of pixels as indicated by the map, filter indices are set for individual ones of the subsets of pixels. Filtering regions of the image based on the filter indices are set for the subsets of the pixels that correspond to the regions.","As noted above, sharpening or smoothing scanned images that have different regions\u2014such as contone regions, half-tone regions, and text regions\u2014often results in reduced image quality for one or more of the regions. Embodiments of the present disclosure include devices, systems, and techniques for identifying region types within a scanned image and selectively applying filtering on those regions. Blocks of pixels within the image are categorized based on the number of pixel islands\u2014sets of contiguous dark spots within the image\u2014within the blocks to create an island map of the scanned image. A half-tone region of the scanned image is likely to have relatively many islands, because dark spots will be scattered throughout a half-tone region with light spots in between. A contone or text region will likely have relatively fewer islands, because dark spots in the contone or text region are more likely to be contiguous. Thus, a characterization of the number of islands in a region of an image provides a metric that can be used to distinguish half-tone regions of an image from contone and text regions of the image. De-noising and removal of small isolated regions from the island map are performed. The island map is then converted to a filter matrix, with identified half-tone regions having a smoothing filter index, and contone and text regions having a sharpening filter index. Border areas between different regions are given a filter index gradient that results in gradually transitioning from sharpening to smoothing in order to improve the overall image quality of the border areas.","These techniques are described below with respect to the figures.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","102","100","104","104","104"]},"The image filter engine  may include one or more integrated circuit components, such as an application-specific integrated circuit (ASIC), field-programmable gate array (FPGA), state machines, or other integrated circuit logic components. The imaging system  may also include one or more processor(s) , which execute software instructions to perform various functions of the imaging system , such as controlling the image capture component(s) , transmitting captured images to external devices, receiving user controls of the imaging system , and so forth. The software instructions may be included as one or more software modules, programs, operating system components, software libraries, application programming interfaces (APIs), system firmware, and so forth. The software instructions are stored on computer-readable storage memory . Storage memory  includes one or more of Read-Only Memory (ROM), Random Access Memory (RAM) (such as dynamic RAM, static RAM, magnetoresistive RAM, and so forth), one or more hard disks or other magnetic storage, FLASH memory, or other non-transitory storage memory. One or more components of the software components stored on the storage memory  are executed by the one or more processor(s) .","Various embodiments of the image filter engine  include an island map generator , an index generator , and a filter component . As noted above, the storage memory  may include various software components, such as an island map generator , an index generator , and a filter component . In one example, the storage memory  includes island map generator  and the index generator , while the image filter engine includes the filter component . In other examples, some aspects of various functions of the imaging system  may be performed both in hardware (image filter engine ) and in software (executing on the one or more processor(s) ). For example, filter component  may perform image filtering under control of the filter component . Other examples may be used without departing from the scope of the present disclosure. Embodiments of the present disclosure are not limited to any arrangement or arrangements of hardware and software components to perform the various methods of the present disclosure.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIGS. 3A-E"],"b":["200","202","204","206","110","116","200","200","110","116","200","200"]},"To determine the number of islands in a pixel block, the island map generator  or  establishes which of the pixels within each block of pixels of the image  are light pixels and which are dark pixels. A block of pixels includes M\u00d7N pixels, where M and N are integers. In the example shown in , the blocks of pixels are 12\u00d712 matrices, although other size blocks of pixels may be used without departing from the scope of embodiments.","To set or establish the pixels within a block of pixels to be light and dark pixels, the island map generator  or  calculates a mean of the pixel values within a particular block of pixels. The island map generator  or  then establishes a threshold value based on the mean pixel value for the particular block of pixels, such as by adding the mean value to a bias value to arrive at the threshold. Pixels within a particular pixel block that have values that are greater than the threshold value are set to \u201cdark\u201d pixels, and pixels that have values that are less than the threshold value are set to \u201clight\u201d pixels. The pixel blocks , , and  are shown in  after the island map generator  or  has set their pixels to either light or dark. Thus, the pixel blocks , , and  illustrated in  do not show the pixels of the image  in their original state, but instead show the pixel blocks after the individual pixels therein have been set to either light or dark pixels.","The island map generator  or  calculates the numbers of pixel islands within the individual pixel blocks. Islands within an individual pixel block include single dark pixels bordered only by light pixels (or the edge of the pixel block) or one or more contiguous dark pixels bordered only by light pixels (or the edge of the pixel block). A connected-dot algorithm is used to count the number of islands of pixels within the pixel blocks. The following Matlab code implements an example connected-dot algorithm, although other software code may be used without departing from the scope of the present disclosure.",{"@attributes":{"id":"p-0027","num":"0026"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"7pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"%z is a dim x dim block from step b",{}]},{"entry":[{},"%dim is set to be 12",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"vector = zeros(dim,1); ","%Buffer vector containing current colors",{}]},{"entry":[{},"count = 0;","%current number of connected areas",{}]},{"entry":[{},"nextToken = 1; ","% Next color to use to paint a newly encountered zone",{}]},{"entry":[{},"for row = 1: dim",{},{}]},{"entry":[{},"\u2003current = 0;",{},{}]},{"entry":[{},"\u2003for col = 1: dim ","%scan current row for dots",{}]},{"entry":[{},"\u2003\u2003if x(row,col) == 0",{},{}]},{"entry":[{},"\u2003\u2003\u2003%Not a dot",{},{}]},{"entry":[{},"\u2003\u2003\u2003current = 0; ","%Mark last scanned pixel is not a dot",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003else",{}]},{"entry":[{},"\u2003\u2003\u2003%Here is a dot",{}]},{"entry":[{},"\u2003\u2003\u2003if current ~= 0 && vector(col) ~= 0 && current ~= vector(col)",{}]},{"entry":[{},"%A new dot is found, but it can be painted with two colors, one",{}]},{"entry":[{},"%from the one to its top (vector(col)), one from the one to its",{}]},{"entry":[{},"%left (current). This indicates that two groups can be merged,",{}]},{"entry":[{},"%which also means there are one less connected areas.",{}]},{"entry":[{},"if min([vector(col), current]) ~= current",{}]},{"entry":[{},"%The one from its top has a smaller color, use it",{}]},{"entry":[{},"current = vector(col);",{}]},{"entry":[{},"%Modify the group to its left on the same row to the smaller color",{}]},{"entry":[{},"for k = col-1:-1:1",{}]},{"entry":[{},"\u2003if z(row,k) < 1",{}]},{"entry":[{},"\u2003\u2003break;",{}]},{"entry":[{},"\u2003end",{}]},{"entry":[{},"\u2003vector(k) = current;",{}]},{"entry":[{},"end",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003else",{}]},{"entry":[{},"%Modify the color for the elements in previous line to its right",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"t = vector(col); ","% Save the current value for comparison",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for k = col:dim",{}]},{"entry":[{},"%If this is from the same group (color)",{}]},{"entry":[{},"if vector(k) == t",{}]},{"entry":[{},"\u2003vector(k) = current;",{}]},{"entry":[{},"end",{}]},{"entry":[{},"end",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003end",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003count = count \u2212 1;",{}]},{"entry":[{},"\u2003\u2003\u2003else",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003%Found a new one adjacent to zero or one painted dot",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003current = max([current, vector(col)]);",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003if current == 0",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003%Not adjacent to a painted dot, pick a new color",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003current = nextToken;",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003nextToken = nextToken +1;",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003count = count + 1;",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003end",{}]},{"entry":[{},"\u2003\u2003\u2003end",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003end ","%End of a pixel",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003vector(col) = current;",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003end ","%End of a row",{}]},{"entry":[{},"end ","%End all"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Referring again to , the pixel block  includes a single island. Pixel block  comes from the contone region  of the image . Because pixels in a contone region of an image create the appearance of a continuous tone, each individual pixel of the pixel block  will tend to vary little from the pixel next to it. The contone region  includes a gradual transition from a dark upper left portion to a light lower right portion. Thus, any given block of pixels within contone region , such as pixel block , has roughly half of its pixels being greater than the mean of the pixels within that pixel block and roughly half of its pixels being less than the mean of the pixels within that pixel block. Thus, a threshold value that is the same as or nearly the same as the mean pixel value for that pixel block results in approximately half of the pixels being set to \u201cdark\u201d pixels by the island map generator  or  and roughly half of the pixels being set to \u201clight\u201d pixels. Thus, in the example shown in , the pixel block  includes a single island . The pixels (denoted by the squares in the pixel block ) have a single group of dark pixels (those pixels that have values that are greater than the mean of the pixels of pixel block  plus a bias value), bordered only by (i) light pixels (those pixels that have values that are less than the mean of the pixels of pixel block  plus a bias value) and (ii) the edge of the pixel block.","In contrast, pixel block  includes 12 islands, counting diagonally adjacent dark pixels as contiguous dark pixels, such as with the two pixels of island . Pixel block  comes from the half-tone region  of the image . Because a half-tone region tends to include relatively dark pixels spaced apart by relatively light pixels, pixel blocks from half-tone regions will tend to have more islands than pixel blocks from contone regions.","Pixel block  includes two islands, island  and . Pixel block  comes from text region  of the image . Text regions are composed of text features (such as letters, numbers, punctuation, and so forth), and text features are usually composed of large numbers of contiguous dark pixels surrounded by, and enclosing, light pixels. Pixel blocks in text regions therefore tend to have, like a contone pixel block, relatively fewer islands than pixel blocks from half-tone regions.","The island map generator  or  therefore determines the number of islands in each pixel block of the image  and compares the number of islands to a threshold value (such as, for example a number between 4 and 7, and in particular 5 islands for a 12\u00d712 pixel block). Those pixel blocks that exceed the threshold are more likely than other blocks to be from half-tone regions of the image , and thus are given a first designation (for example a binary \u201c1\u201d) in an island map and those pixel blocks that have less than the threshold number of islands are more likely than other blocks to be from either contone or text regions of the image , and are thus given a second designation (for example a binary \u201c0\u201d).",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIGS. 3A-E","FIGS. 3A-E","FIGS. 3A-E","FIG. 2"],"b":["110","116","110","116","300","310","320","322","200"]},"Island map  of  includes multiple regions, such as regions , , , and . Some of the regions, such as the region , may be noise that results from a scanning process. Other regions, such as the region , are too small to be meaningful from an image filtering standpoint. Thus, the island map generator  or  performs de-noising and small isolated region removal on the island map .","Island map  of  shows the island map after de-noising is performed. The island map generator  or  implements de-noising by averaging the pixel blocks of the island map  over a group of pixel blocks, such as a 3\u00d73 group of pixel blocks. The groups of pixel blocks with a mean or summation value greater than or equal to a threshold (for example, a summation greater than or equal to six) are kept. The summation is the total number of islands found in the nine blocks of a 3\u00d73 group of pixel blocks. In some embodiments, a mean value is used, wherein the mean equals the summation for the group of pixel blocks divided by the number of blocks in the group. In embodiments where the block count is fixed, summation is used which is a suitable substitute for a mean value in those cases, assuming that the threshold is adjusted to account for the use of a summation rather than an average (e.g., a summation threshold will generally be larger than a threshold used if average values are calculated). A summation will also be an integer, which may be desirable. In other embodiments, other spatial filters such as a Gaussian smoothing operator may also be used to de-noise the island map.","The de-noising of the island map may result in some but not all small regions of the image being removed from the island map. For example, region  is removed from the island map . And a portion of the triangle-shaped area  of region  is removed based on the de-noising. Because de-noising is not perfect, some noise may remain present, such as the remaining portion of the triangle-shaped area of region .","Even with de-noising, some regions within the island map, such as region , are still present in the island map but are too small to be meaningful from a filtering perspective. Also, a small region located inside a larger area with a different type may be the result of incorrect identification from an island generation process, and it is desirable to eliminate such regions. Thus, the island map generator  or  performs a small isolated region removal process that results in such areas being removed or merged with their surrounding larger areas.","One way to perform the small isolated region removal is to identify regions that fit within a pixel block area of a predetermined size, such as for example 30\u00d730 pixel blocks or other size. In embodiments, the size is decided primarily based on the resolution of the original image and further adjusted based on testing results obtained from a set of target images. Any such areas that include a region of a first subset of pixel blocks that are (i) of a first type (either a \u201c1\u201d or a \u201c0\u201d as characterized by the island map generator  or ), and that are (ii) completely bounded by a second subset of pixel blocks that are of a different type (a \u201c1\u201d if the first subset is a \u201c0\u201d or a \u201c0\u201d if the first subset is a \u201c1\u201d) within the area are removed. This is represented in  by the areas , , and . The small isolated regions within these areas include a first subset of pixel blocks that are completely bounded by a second subset of pixel blocks of the opposite type, and the island map generator  or  removes these small isolated regions, and merges these portions of the island map with their larger surrounding areas. Examples of small isolated region removal are described in more detail below in the description of .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3D","b":["320","320","302","304"]},"The index generator  or  creates a filter index for the image based on the island map, with half-tone regions of the island map provided smoothing filter indices and contone\/text regions of the island map provided sharpening filter indices. But an abrupt transition from smoothing in one region of an image (such as in region ) to sharpening in an adjacent region of the region (such as in region ) often results in unattractive border effects between the regions with different processing. The island map generator  or  identifies border areas between the regions, and sets a filter gradient across the border area that smoothly transitions from sharpening to smoothing.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3E","FIG. 6"],"b":["322","324","112","118","304","302"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4","FIG. 4"],"b":["110","116","400","402","402","402","400","110","116","402","402","402","112","118","402","402"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 5"],"b":["500","502","502","500","110","116","502","502","502","112","118","502"]},"Although the examples illustrated in  are of half-tone regions surrounded by contone or text regions, small isolated region removal operates in the same or similar fashion where contone or text regions are surrounded by half-tone regions.","As noted above, border areas between regions of different types in the island map are identified in order to smooth the transition between smoothing and sharpening adjacent regions within the image. The result is improved image quality at the transition areas. The index generator  or  identifies a \u201c0\u201d pixel block (e.g., a contone or text pixel block, as characterized based on the number of islands within the pixel blocks) that is within a certain distance to a \u201c1\u201d pixel block (e.g., a half-tone pixel block, as characterized based on the number of islands within the pixel blocks). One technique to do this is illustrated with respect to .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 6","FIG. 6"],"b":["6","112","118","600","602","604","606","600","602","604","606","600","602","604","606"]},"In one example, the maximum of the counts of the \u201c0\u201d pixel blocks in the square boxes , , , and  is used to determine a filter index number. In this example, because each of the square boxes , , , and  include at least \u201c1\u201d pixel block (the X pixel block) and at least one \u201c0\u201d pixel block (at least one of A, B, C, D, E, F, G, and H pixel blocks), the maximum count will be between one \u201c0\u201d pixel block and fifteen \u201c0\u201d pixel blocks. Thus, in this example, the filter index will be a number between zero (0) and sixteen (16), with a  filter index number in an output matrix indicating maximum sharpening, and a  filter index number in an output matrix indicating maximum smoothing. Pixel blocks in the border area will have a filter index between 0 and 16 (i.e., 1-15), and the closer a border area pixel block is to a \u201c0\u201d pixel block in the island map, the closer to 0 its index number will be, and the closer a border area pixel block is to a \u201c1\u201d pixel block in the island map, the closer to 16 its index number will be. Thus, the index generator  or  will create a gradient of filter indices across a border area to smooth out the transition from smoothing to sharpening in order to improve image quality in the border area.","Although the above example described with respect to  includes looking for a \u201c1\u201d pixel block that is within a certain range of at least one \u201c0\u201d pixel block, other embodiments could instead start out by looking for \u201c0\u201d pixel blocks that are within a certain range of a \u201c1\u201d pixel block. Also, some embodiments may use a different algorithm besides a summation to determine the filter indices for pixel blocks in the border areas of the island map.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 7","b":["700","702","704","110","116"]},"At , an index generator, such as the index generator  or , sets filter indices for subsets of pixels based on the island map. In an example, the filter indices include a sharpening filter index for contone and text regions of the image and a smoothing filter index for the half-tone regions of the image. In an example, the filter indices include a filter index gradient across a border region between two regions of the image that are of different types, such as between a half-tone region and a contone or text region. In an example, the filter indices are output in the form of a filter matrix.","At , a filter component, such as the filter component  or , filters the image based on the filter indices, such as based on a filter matrix. The filter component applies sharpening filtering to regions of the image that are identified as contone or text regions, as indicated in the filter matrix, and smoothing filtering to regions of the image that are identified as half-tone regions, as indicated in the filter matrix.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 8","b":["800","802","110","116"]},"At , the island map generator determines those pixels within the subsets of pixels that are dark pixels, and those pixels that are light pixels. In embodiments, for a particular subset of pixels, this is accomplished based on a comparison of values of the pixels in the subsets of pixels to corresponding thresholds. The corresponding thresholds are determined at least in part based on mean values of the pixels in the subsets of pixels. In a particular example, the threshold is a mean value of the subset of pixels added to a bias value.","At , the island map generator counts a number of islands in each subset of pixels. An island is a single dark pixel, or a contiguous group of dark pixels, that are completely bounded or surrounded by (i) light pixels and\/or (ii) the edge of the subset of pixels.","At , the island map generator categorizes the individual ones of the subsets of pixels based on whether the individual ones of the subsets of pixels include at least a threshold number of islands (such as 5, 6, or 7 islands, or other number of islands), and wherein the setting the filter indices for the individual ones of the subsets of pixels is based at least on the categorizing of the individual ones of the subsets of pixels. Pixel blocks that have less than a threshold number of pixels are more likely than other pixel blocks to be part of a contone or text region of the island map, and is categorized as being part of a region of the island map whose corresponding image region is to be sharpened. A pixel block that meets or exceeds a threshold number of pixels is more likely than other regions of the island map to be a half-tone region of the island map, and is categorized as being part of a region of the island map whose corresponding region of the island is to be smoothed. A binary \u201c0\u201d may be set for the regions that have fewer than the threshold number of islands and a binary \u201c1\u201d may be set for the regions that meet or exceed the threshold number of islands. Other indications besides binary \u201c0\u201d and \u201c1\u201d are used in other embodiments.","At , the island map is de-noised, such as by averaging the pixel blocks of the island map over a 3\u00d73 group of pixel blocks, or other group size. The pixel blocks with a summation greater than or equal to a threshold (for example 6) are kept.","At , the island map generator removes small isolated regions from the map, such as by identifying a portion of the island map that includes a first group of the subsets of pixels that (i) includes only subsets of pixels that are of the same type, and (ii) is completely bounded by a second group of the subsets of pixels that are of an opposite type, wherein the portion of the island map contains a predetermined number of pixels. Small isolated regions are merged with their larger surrounding regions, and thus set to the same categorization as their larger surrounding regions.","At , the index generator sets a filter matrix for regions of the island map to either a smoothing filter index or a sharpening filter index. Thus, regions of the island map categorized as a binary \u201c1\u201d (where binary \u201c1\u201d indicates pixel subsets or blocks that have at least a threshold number of islands, and are thus relatively likely to be half-tone regions), including those areas of the island map that are set to \u201c1\u201d based on de-noising and small isolated region removal, are given a smoothing filter index. And regions of the island map categorized to a binary \u201c0\u201d (where binary \u201c0\u201d indicates pixel subsets or blocks that have fewer than a threshold number of island, and are thus relatively likely to be contone or text regions), including those areas of island map that are set to \u201c0\u201d based on de-noising and small isolated region removal, are given a sharpening filter index.","At , the index generator identifies a boundary between regions of the image. This is based, for example, on whether a pixel block in the island map is within a certain distance of a pixel block of a different categorization or type.","At , the index generator sets a filter gradient across the boundary area to smoothly transition from sharpening to smoothing. For example, the filter index for a particular pixel block in the boundary area is set to an intermediate filter index (such as between 1-15) that is between a smoothing index (such as 16) and a sharpening index (such as 0), based on the number of the types of each kind of pixel blocks that are near to the particular pixel block.","Various operations are described as multiple discrete operations in turn, in a manner that is most helpful in understanding the claimed subject matter. However, the order of description should not be construed as to imply that these operations are necessarily order dependent. In particular, these operations may not be performed in the order of presentation. Operations described may be performed in a different order than the described embodiment. Various additional operations may be performed and\/or described operations may be omitted in additional embodiments. Operations of processes  and  can be suitably combined and may comport with techniques and\/or configurations described in connection with various embodiments.","For the purposes of the present disclosure, the phrase \u201cA\/B\u201d means A or B. For the purposes of the present disclosure, the phrase \u201cA and\/or B\u201d means \u201c(A), (B), or (A and B).\u201d For the purposes of the present disclosure, the phrase \u201cat least one of A, B, and C\u201d means \u201c(A), (B), (C), (A and B), (A and C), (B and C), or (A, B and C).\u201d For the purposes of the present disclosure, the phrase \u201c(A)B\u201d means \u201c(B) or (AB)\u201d that is, A is an optional element.","The description uses the phrases \u201cin an embodiment,\u201d \u201cin embodiments,\u201d or similar language, which may each refer to one or more of the same or different embodiments. Furthermore, the terms \u201ccomprising,\u201d \u201cincluding,\u201d \u201chaving,\u201d and the like, as used with respect to embodiments of the present disclosure, are synonymous.","Although certain embodiments have been illustrated and described herein, a wide variety of alternate and\/or equivalent embodiments or implementations calculated to achieve the same purposes may be substituted for the embodiments illustrated and described without departing from the scope of the present disclosure. This disclosure is intended to cover any adaptations or variations of the embodiments discussed herein. Therefore, it is manifestly intended that embodiments described herein be limited only by the claims and the equivalents thereof."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments of the present disclosure will be readily understood by the following detailed description in conjunction with the accompanying drawings. To facilitate this description, like reference numerals designate like structural elements. Embodiments herein are illustrated by way of example and not by way of limitation in the figures of the accompanying drawings.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 3A-E"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
