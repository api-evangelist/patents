---
title: Extracting product purchase information from electronic messages
abstract: Improved systems and methods for extracting product purchase information from electronic messages transmitted between physical network nodes to convey product purchase information to designated recipients. These examples provide a product purchase information extraction service that is able to extract product purchase information from electronic messages with high precision across a wide variety of electronic message formats and thereby solve the practical problems that have arisen as a result of the proliferation of different electronic message formats used by individual merchants and across different merchants and different languages. In this regard, these examples are able to automatically learn the structures and semantics of different message formats, which accelerates the ability to support new message sources, new markets, and different languages.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09563904&OS=09563904&RS=09563904
owner: Slice Technologies, Inc.
number: 09563904
owner_city: San Mateo
owner_country: US
publication_date: 20141021
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION","1. Definition of Terms","2. Extracting Product Purchase Information from Electronic Messages","3. Exemplary Computer Apparatus","4. Conclusion"],"p":["People purchase products from many different merchants using a variety of different payment options. The transactions for these purchases typically are confirmed by physical in-store receipts or by electronic messages addressed to the purchasers' messaging accounts (e.g., a purchaser's electronic mail account). The large number and diversity of confirmation types makes it difficult for people to track their purchases and obtain a comprehensive understanding of their purchase histories.","In addition, the large diversity of merchants from which people purchase products makes it difficult for merchants to obtain sufficient purchase history data to develop accurate customer profiles. Even assuming that a person uses a common identifier (e.g., a loyalty card or credit card) for all his or her purchases, these purchases typically are tracked only by the merchant that issued the identifier to the customer. This lack of information about the customer limits a merchant's ability to effectively target its promotions in ways that will encourage them to purchase the merchant's product offerings.","The large diversity of merchants also leads to a large diversity in confirmation formats, making it difficult and expensive to extract product purchase information from purchase confirmations.","In the following description, like reference numbers are used to identify like elements. Furthermore, the drawings are intended to illustrate major features of exemplary embodiments in a diagrammatic manner. The drawings are not intended to depict every feature of actual embodiments nor relative dimensions of the depicted elements, and are not drawn to scale.","A \u201cproduct\u201d is any tangible or intangible good or service that is available for purchase or use.","\u201cProduct purchase information\u201d is information related to the purchase of a product. Product purchase information includes, for example, purchase confirmations (e.g., receipts), product order information (e.g., merchant name, order number, order date, product description, product name, product quantity, product price, sales tax, shipping cost, and order total), and product shipping information (e.g., billing address, shipping company, shipping address, estimated shipping date, estimated delivery date, and tracking number).","An \u201celectronic message\u201d is a persistent text based information record sent from a sender to a recipient between physical network nodes and stored in non-transitory computer-readable memory. An electronic message may be structured message (e.g., a hypertext markup language (HTML) message that includes structured tag elements) or unstructured (e.g., a plain text message).","A \u201ccomputer\u201d is any machine, device, or apparatus that processes data according to computer-readable instructions that are stored on a computer-readable medium either temporarily or permanently. A \u201ccomputer operating system\u201d is a software component of a computer system that manages and coordinates the performance of tasks and the sharing of computing and hardware resources. A \u201csoftware application\u201d (also referred to as software, an application, computer software, a computer application, a program, and a computer program) is a set of instructions that a computer can interpret and execute to perform one or more specific tasks. A \u201cdata file\u201d is a block of information that durably stores data for use by a software application.","The term \u201ccomputer-readable medium\u201d (also referred to as \u201cmemory\u201d) refers to any tangible, non-transitory device capable storing information (e.g., instructions and data) that is readable by a machine (e.g., a computer). Storage devices suitable for tangibly embodying such information include, but are not limited to, all forms of physical, non-transitory computer-readable memory, including, for example, semiconductor memory devices, such as random access memory (RAM), EPROM, EEPROM, and Flash memory devices, magnetic disks such as internal hard disks and removable hard disks, magneto-optical disks, DVD-ROM\/RAM, and CD-ROM\/RAM.","A \u201cnetwork node\u201d (also referred to simply as a \u201cnode\u201d) is a physical junction or connection point in a communications network. Examples of network nodes include, but are not limited to, a terminal, a computer, and a network switch. A \u201cserver node\u201d is a network node that responds to requests for information or service. A \u201cclient node\u201d is a network node that requests information or service from a server node.","As used herein, the term \u201cincludes\u201d means includes but not limited to, the term \u201cincluding\u201d means including but not limited to. The term \u201cbased on\u201d means based at least in part on.","A. Introduction","The examples that are described herein provide improved systems and methods for extracting product purchase information from electronic messages transmitted between physical network nodes to convey product purchase information to designated recipients by solving practical problems that have arisen as a result of the proliferation of different electronic message formats used by individual merchants and across different merchants and different languages. These examples provide a product purchase information extraction service that is able to extract product purchase information from electronic messages with high precision across a wide variety of electronic message formats. In this regard, these examples are able to automatically learn the structures and semantics of different message formats, which accelerates the ability to support new message sources, new markets, and different languages.","By these improved systems and methods, product purchase information can be extracted from a wide variety of electronic message types and aggregated to provide individuals with enhanced tools for visualizing and organizing their purchase histories and to provide merchants and other organizations improved cross-merchant purchase graph information across different consumer demographics to enable targeted and less intrusive advertising and other marketing strategies. These improved systems and methods can be deployed to monitor consumer purchases over time to obtain updated purchase history information that can be aggregated for an individual consumer or across many consumers to provide actionable information that directs consumer behavior and organizational marketing strategies. For example, these improved systems and methods can organize disparate product purchase information extracted from individual electronic messages into actionable data that can be used by a consumer to organize her prior purchases and enhance her understanding of her purchasing behavior and can be used by merchants and other organizations to improve the accuracy and return-on-investment of their marketing campaigns.","In specific examples, these systems and methods include improved special purpose computer apparatus programmed to build a structure learning parser that automatically learns the structure of an electronic message and accurately parses product purchase information from the electronic message. These systems and methods also include improved special purpose computer apparatus programmed to function as a structure learning parser that automatically learns the structure of an electronic message and accurately parses product purchase information from the electronic message.","B. Exemplary Operating Environment",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1","b":["10","11","12","14","16","18","20","12"]},"The network  may include any of a local area network (LAN), a metropolitan area network (MAN), and a wide area network (WAN) (e.g., the internet). The network  typically includes a number of different computing platforms and transport facilities that support the transmission of a wide variety of different media types (e.g., text, voice, audio, and video) between network nodes  and the product provider . Each of the product purchase information provider , the product merchants , the product delivery providers , the message providers , and the product purchase information consumers  typically connects to the network  via a network node (e.g., a client computer or a server computer) that includes a tangible computer-readable memory, a processor, and input\/output (I\/O) hardware (which may include a display).","One or more of the product merchants  typically allow consumers and businesses to directly purchase products over the network  using a network enabled software application, such as a web browser. One or more of the of the product merchants  also may allow consumers and businesses to purchase products in a physical retail establishment. In either case, after a product purchase transaction has been completed, a product merchant may send a product purchase confirmation electronic message to a messaging address associated with the purchaser. The product purchase confirmation message may include, for example, product order information such as merchant name, order number, order date, product description, product name, product quantity, product price, sales tax, shipping cost, and order total. The product merchant also may arrange to have the product delivered by one of the product delivery providers . Depending on the type of product that was purchased, the product delivery provider  may deliver the product to the purchaser physically or electronically. In either case, the product delivery provider  or the product merchant  may send a delivery notification electronic message to the messaging address associated with the purchaser. The delivery notification electronic message may include, for example, product shipping information such as product order information, billing address, shipping company, shipping address, estimated shipping date, estimated delivery date, and tracking number.","In general, the purchaser's messaging address may be any type of network address to which electronic messages may be sent. Examples of such messaging addresses include electronic mail (e-mail) addresses, text messaging addresses (e.g., a sender identifier, such as a telephone number or a user identifier for a texting service), a user identifier for a social networking service, and a facsimile telephone number. The product purchase related electronic messages typically are routed to the purchaser through respective ones of the message providers  associated with the purchaser's messaging address. The message providers  typically store the purchasers' electronic messages in respective message folder data structures in a database.","The product purchase information provider  extracts product purchase information from the electronic messages of product purchasers. In some examples, the product purchase information provider  obtains authorization from the product purchasers to access their respective message folders that are managed by the message providers . In other examples, product purchasers allow the product purchase information provider  to access their electronic messages that are stored on their local communication devices (e.g., personal computer or mobile phone).","Referring to , after obtaining authorization to access the electronic messages  of a purchaser, the product purchase information provider  processes the electronic messages  through a number of stages before producing processed data  that is provided to the product purchase information consumers . These stages include a message discovery stage , a field extraction stage , and a data processing stage .","In the message discovery stage , the product purchase information provider  identifies the ones of the electronic messages  that relate to product purchases. In some examples, rule-based filters and machine learning classifiers are used to identify product purchase related electronic messages.","In the field extraction stage , the product purchase information provider  extracts product purchase information from the identified ones of the electronic messages . Examples of such product purchase information include merchant name, order number, order date, product description, product name, product quantity, product price, sales tax, shipping cost, order total, billing address, shipping company, shipping address, estimated shipping date, estimated delivery date, and tracking number.","In the data processing stage , the product purchase information provider  processes the extracted product purchase information for according to the different types of product purchase information consumers. For example, for individual users, the extracted product purchase information is processed, for example, to display information about the users' purchases, including information for tracking in-transit orders, information for accessing purchase details, and aggregate purchase summary information. For advertisers, the extracted product purchase information is processed, for example, to assist in targeting advertising to consumers based on their purchase histories. For market analysts, the extracted product purchase information is processed to provide, for example, anonymous item-level purchase detail across retailers, categories, and devices.","C. Extracting Product Purchase Information","I. Introduction","In the examples explained in detail below, the product purchase information provider  includes a structure learning parser that extracts product purchase information from an electronic message using a grammar based parsing approach to identify structural elements and data fields in the electronic message and a machine learning approach to classify the data fields. The structural elements correspond to static, optional, and iterating elements that commonly appear in a particular type of product purchase related electronic message, whereas the data fields contain the variable information at least some of which corresponds to the product purchase information that is extracted.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 3A","FIG. 3B"],"b":["32","32","36","36","38","40","42","46","48","50","52","54","56","58","60","62","34","50","52","56","58","62","12"]},"II. Building a Structure Learning Parser",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 4","FIG. 4"]},"In accordance with the method of , the computer apparatus groups electronic messages into respective clusters based on similarities between the electronic messages, the electronic messages having been transmitted between physical network nodes to convey product purchase information to designated recipients (, block ). For each cluster, the computer apparatus extracts a respective grammar defining an arrangement of structural elements of the electronic messages in the cluster (, block ). Based on training data that includes fields of electronic messages comprising product purchase information that are labeled with product purchase relevant labels in a predetermined field labeling taxonomy, the computer apparatus builds a classifier that classifies fields of a selected electronic message that includes product purchase information with respective ones of the product purchase relevant labels based on respective associations between tokens extracted from the selected electronic message and the structural elements of a respective one of the grammars matched to the selected electronic message (, block ). The computer apparatus typically stores the grammars and the classifier in non-transitory computer-readable memory in one or more data structures permitting computer-based parsing of product purchase information from electronic messages.","In some examples, a structure learner parser builder includes a product purchase information grammar extractor that performs the grouping and extracting operations of blocks - of , and a product purchase information token classifier trainer that performs the classifier building operation of block  of . In some examples, the structure learner parser builder is a software application that programs a computer to perform the grouping and extracting operations of blocks - implements the product purchase information grammar extractor, where a different respective software module includes a respective set of computer-readable instructions for performing the grouping and extracting operations. In some examples, the product purchase information token classifier trainer is a machine learning training software application that programs a computer to perform the classifier building operation of block .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 5","FIG. 4"]},"In this example, the computer apparatus retrieves from a data store (e.g., a database) electronic messages  that have been transmitted between physical network nodes to convey product purchase information to designated recipients.  shows an example  of one of the electronic messages .","The computer apparatus pre-processes the electronic messages  (, block ). In this process, the computer apparatus tokenizes the text-based contents of the electronic messages by extracting contiguous strings of symbols (e.g., symbols representing alphanumeric characters) separated by white spaces. The contiguous symbol strings typically correspond to words and numbers. The computer apparatus then replaces tokens that match patterns for integers and real numbers (typically prices) in the electronic messages  with wildcard tokens.  shows an example of a pre-processed version  of the electronic message  in which integers have been replaced with the wildcard token \u201cINT\u201d and real numbers have been replaced with the wildcard token \u201cFLOAT\u201d. The replacement of the variable integer and real number elements of each electronic message with wildcard tokens improves the detection of iterating elements of the electronic messages.","For each of the pre-processed messages  (, block ), the computer apparatus attempts to determine a merchant that is associated with the electronic message (, block ). For some types of electronic messages, the computer apparatus attempts to determine the merchant from header information that includes supplemental information about the electronic message. For example, an electronic mail (e-mail) message includes header information that indicates the sender, the recipient, and the subject of the electronic mail message, and a text message typically includes a Sender ID that indicates the sender of the message. In some cases, the computer apparatus may be able to determine the merchant from the sender or subject contained in the header information. In some cases, the computer apparatus may attempt to determine the merchant from the content of the electronic message.","The computer apparatus clusters the electronic messages by merchant (, block ). In this process, the computer apparatus sorts the electronic messages into groups by message sender, where each message sender is associated with a respective one of the groups of electronic messages. For each group of merchant-specific electronic messages, the computer apparatus clusters the electronic messages within the group into one or more clusters based on similarities between the electronic messages. The result is a respective set ,  of clusters (cluster 1,1 . . . cluster 1,n, . . . , cluster k,1 . . . cluster k,m) for each merchant, where each cluster consists of electronic messages that are similar to one another.","In some examples, for each merchant-specific set of electronic messages, the computer apparatus applies to the electronic messages a clustering process (e.g., a Density-Based Spatial Clustering of Applications with Noise (DBSCAN) process, a k-means clustering process, or a hierarchical clustering process) that clusters electronic messages based on measures of content similarity between pairs of the electronic messages. In an example of this process, electronic messages are processed serially. A new cluster is created for the first electronic message. Each successive electronic message to be clustered is compared to each of the electronic messages in each existing cluster and is added to the cluster containing an electronic message having a similarity with the electronic message being clustered that exceeds a similarity threshold; if the electronic message being clustered has a similarity that exceeds the similarity threshold with the electronic messages of multiple clusters, the multiple clusters are merged into a single cluster. If the similarities between the electronic message being clustered and the previously clustered electronic messages do not exceed the similarity threshold, a new cluster is created for the electronic message being clustered.","In some examples, measures of content similarity compare similarity and diversity of the contents of pairs of electronic messages. In some of these examples, the similarity measure corresponds to the Jaccard similarity coefficient, which measures similarity between two electronic messages based on the size of the intersection divided by the size of the union of features of the electronic messages. In some of these examples, the computer apparatus extracts lines of content (i.e., whole lines, as opposed to individual words in the lines) from each electronic message as the features that are compared, and measures similarities between electronic messages using line-based comparisons of the extracted content. This line-based feature matching approach improves the accuracy of the clustering process by narrowing the range of matches between electronic messages.","After the electronic messages have been grouped into the merchant-specific sets ,  of electronic message clusters, the computer apparatus determines a respective grammar for each electronic message cluster (, block ).","In some examples, for each cluster, the computer apparatus builds a respective generalized suffix tree representation of contents of the electronic messages in the cluster, and ascertains the arrangement of structural elements of the electronic messages in the cluster based on the respective generalized suffix tree representation. The suffix tree representation contains all the suffixes (which are one or more word sequences that are referred to as \u201cphrases\u201d) as their keys and positions in the text as their values. The suffix tree representation maintains the order of suffixes in a hierarchical tree structure of nodes that are linearly interconnected from root to leaf node and, for each, suffix, identifies the electronic messages in which the suffix appears and the number of times it appears in each electronic message. In some examples, the suffix tree representation of the electronic messages in a given cluster is built by applying Ukkonen's algorithm for constructing suffix trees (E. Ukkonen, \u201cOn-Line Construction of Suffix Trees,\u201d Algorithmica, September 1995, Volume 14, Issue 3, pp. 249-260 (1995)) to a single string formed by concatenating the tokenized contents of all the electronic messages in the given cluster.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 6C","FIG. 6B"],"b":["112","84","118","126","114","116"]},"The computer apparatus traverses the generalized suffix tree to identify structural elements of the electronic messages in a given cluster. In some examples, the computer identifies substrings that correspond to static elements, optional elements, and iterating elements in the electronic messages of the given cluster. In general, substrings that appear in all the electronic messages in the given cluster are considered static elements, substrings that appear in a majority (e.g., 90%) of the electronic messages in the given cluster are considered optional elements, and substrings that appear in all the electronic messages in the given cluster and sometimes repeat within individual ones of the electronic messages are considered iterating elements. Substrings that appear in less than a majority (e.g., below 10%) of the electronic messages of a given cluster are considered electronic message specific elements that are extracted as data fields.","The computer apparatus typically applies a series of processes to the tree to detect structural elements of the electronic messages in a given cluster. These processes operate on branches and the special characters that terminate the branches to represent respective ones of the electronic messages in the given cluster.","In one exemplary process for identifying static elements, the computer apparatus traverses each branch from the root element until it splits into subbranches. If the subbranches all end with electronic message terminal characters with one terminal character for each subbranch, then the branch is common across all the electronic messages of the cluster and the computer apparatus labels the token sequence corresponding to the branch as a static element.","The process of identifying iterating elements is similar to the process of identifying static elements. In one example, the computer apparatus locates each branch in the generalized suffix tree that splits into the sub-branches and inspects the terminal character of the branch. Unlike the static detection process where the computer apparatus locates branches that split into the set of terminals matching the set of electronic messages in the cluster, the process of identifying iterating elements involves locating each branch that splits into terminal characters that match all the electronic messages in the given cluster and match at least one of the electronic messages in the given cluster more than once. In some examples, the computer apparatus applies rules to branches, such as minimum token sequence length and a minimum threshold variance of the repeating token sequence across the electronic messages in the given cluster. The minimum token sequence length rule filters out common words (e.g., \u201cthe\u201d and \u201cand\u201d) and product names that appear frequently in electronic messages. The minimum threshold variance criterion distinguishes iterating sections from static elements that appear infrequently in the electronic messages of the given cluster. For example, an electronic message that contains a product confirmation for a book have the title \u201cThanks for your purchase\u201d in an iterating section might be incorrectly identified if the same phrase is used elsewhere in the text of the electronic message, but because the token sequence \u201cThanks for your purchase\u201d appears very infrequently in this section of the electronic messages of the cluster, its variance value in this section would be very low and therefore would not be misidentified as an iterating section of the electronic messages in which it appeared.","The structural elements that are identified by traversing the generalized suffix tree for a given cluster are incorporated into a data structure (referred to herein as a \u201cgrammar\u201d) that preserves the sequence of the static, optional, and iterating elements in the generalized suffix tree. In some examples, each grammar recursively defines allowable arrangements of the tokens corresponding to the structural elements. The computer apparatus typically stores the cluster grammars in one or more data structures in non-transitory computer-readable memory.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 6D","FIG. 6C"],"b":["130","132","134","136","138","140","142","144"]},"Referring back to , in addition to determining a respective grammar for each cluster in each of the merchant-specific sets ,  of clusters, the computer apparatus trains one or more classifiers to label the data fields that are determined for each cluster of electronic messages.","In some examples, the computer apparatus selects a training set  of electronic messages. In the illustrated example, the training set  is selected from the collection of pre-processed messages ; in other examples the training set  is selected from another collection of electronic messages that include product purchase information. In some examples, the electronic messages in the training set  are selected without regard to the merchant associated with the electronic messages. As a result, a single training set can be used to train the one or more data field labeling classifiers across a wide variety of different merchants, which increases the scalability of the training process as compared with a training process in which a respective set of classifiers is trained for each merchant.","The computer apparatus or human operator (e.g., a machine learning engineer) identifies features in the training set  of electronic messages that will be used to train the one or more classifiers - (, block ). In this process, the data fields that are to be labeled by the one or more classifiers are identified in the training electronic messages and used to create the features that will be used to train the one or more classifiers to associate the correct label with the target data fields.","In the illustrated example, three classifiers are built: a price classifier , an identifier classifier , and an item description classifier.","The price classifier  is a machine learning classifier that is trained to label ones of the extracted field tokens with respective price labels in a predetermined price classification taxonomy. In some examples, the price classifier  is trained to label price token variants with the following order-level price labels: shipping; tax; total; sub-total; and discount.","In some examples, the computer apparatus identifies candidate price field tokens in the training set  of electronic messages (e.g., for U.S. dollar based prices, the computer apparatus looks for a \u201c$\u201d symbol followed by a decimal number consisting of an integer part and a two-digit fractional part separated by the decimal separator \u201c.\u201d). For each candidate price, the computer apparatus determines features from the words used in the static token sequence that precedes the candidate price field token. In some examples, the computer apparatus breaks the static token sequence preceding a particular candidate price into two-word phrases (including special character words demarcating the beginning and end of the sequence, such as <start> and <end>) that are used as the features for training the price classifier to label that particular price with the assigned label from the price taxonomy. For example, if the static token sequence preceding an identified price field tokens that is assigned the \u201ctotal\u201d price label consists of \u201cYou paid the total:\u201d, the computer apparatus would convert the static token sequence into the following features: \u201c<start> you\u201d; \u201cyou paid\u201d; \u201cpaid the\u201d; \u201cthe total:\u201d; \u201ctotal: <end>\u201d. During the training process, the price classifier automatically learns the weights to assign to the features based on the training data. In some examples, the price classifier  is trained according to a na\u00efve Bayes training process.","The identifier classifier  is a machine learning classifier that is trained to label respective ones of the extracted field tokens with an identifier label in a predetermined identifier classification taxonomy. In some examples, the identifier classifier  is trained to label identifier variants into the following identifier labels: order number; tracking number; and SKU (Stock Keeping Unit).","In some examples, the computer apparatus identifies candidate identifier field tokens (e.g., non-decimal numeric and alphanumeric strings) in the training set  of electronic messages. For each candidate identifier, the computer apparatus trains the identifier classifier  to classify the candidate identifier based on features that include (i) a token extracted from the selected electronic message that corresponds to a static structural element of the respective grammar that immediately precedes the identifier field token in the selected electronic message, and (ii) characteristics of the identifier field token. In some examples, the computer apparatus breaks the static token sequence preceding a particular candidate identifier into two-word phrases (including special character words demarcating the beginning and end of the sequence, such as <start> and <end>) that are used as the features for training the identifier classifier to label that particular price with the assigned label from the identifier taxonomy. In addition, the computer apparatus uses characteristics of the candidate identifier field token, including the symbol length of the candidate identifier, the percentage of numeric symbols (also referred to as digits) in the candidate identifier, the location of the candidate identifier in the electronic message (e.g., in the subject field in the header of the electronic message, at the top of the body of the electronic message, or at the bottom of the body of the electronic message). During the training process, the identifier classifier  automatically learns the weights to assign to the features based on the training data. In some examples, the identifier classifier is  trained according to a logistic regression training process.","The item description classifier  is a machine learning classifier that is trained to label respective ones of the extracted field tokens as an item description. In some examples, the computer apparatus identifies candidate item description field tokens (e.g., word phrase symbol strings) in the training set  of electronic messages. For each candidate item description, the computer apparatus trains the classifier to classify the candidate identifier based on features that include, for example: the percentage of phrases that the candidate item description has in common with a known Aitem description (e.g., an item description in a database of products descriptions, such as a list of products previously purchased by the recipient of the electronic message or a product catalogue associated with the merchant associated with the electronic message); the percentage of phrases that the candidate item description has in common with a compilation of phrases that are known to not be part of product descriptions (e.g., identifier related phrases, such as \u201cOrder No.\u201d, and order-level price related phrases, such as \u201cTotal Price\u201d, are examples of phrases that typically are included in the compilation as not corresponding to item descriptions); and the percentage of capitalized symbols in the candidate item description field tokens. During the training process, the item description classifier  automatically learns the weights to assign to the features based on the training data. In some examples, the item description classifier  is trained according to a logistic regression training process.","In some examples, in addition to building the price classifier , the identifier classifier , and the item description classifier , the computer apparatus also applies heuristics to classify candidate item-level quantity field tokens and candidate item-level price field tokens. An example of an item-level quantity classification heuristic is the magnitude of the numeric field token in an iterating section of an electronic message. An example of an item-level price classification heuristic is a phrase of one or more words (e.g., \u201citem price\u201d) that appears in a static token sequence that precedes a candidate price field token in an iterating section of an electronic message.","III. Parsing Electronic Messages with a Structure Learning Parser",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 7","FIG. 7"]},"In accordance with the method of , the computer apparatus matches a selected electronic message to one of multiple clusters of electronic messages transmitted between physical network nodes to convey product purchase information to designated recipients, each cluster being associated with a respective grammar defining an arrangement of structural elements of electronic messages in the cluster (, block ). The computer apparatus segments the selected electronic message into tokens that include product purchase information (, block ). The computer apparatus parses the tokens in accordance with the grammar associated with the cluster matched to the selected electronic message, where the parsing process includes identifying ones of the tokens that correspond to respective ones of the structural elements defined in the grammar and extracting unidentified ones of the tokens as field tokens (, block ). The computer apparatus determines classification features of the selected electronic message (, block ). The computer apparatus classifies respective ones of the extracted field tokens with respective product purchase relevant labels based on respective ones of the determined features (, block ). In non-transitory computer-readable memory, the computer apparatus typically stores associations between the product purchase relevant labels and the product purchase information corresponding to the respective ones of the extracted field tokens in one or more data structures (e.g., a database) permitting computer-based generation of actionable purchase history information.","In some examples, the structure learner parser includes a product purchase information token parser that performs the matching, segmenting, and parsing operations of blocks - of , and a product purchase information token classifier that performs the determining and classifying operations of blocks - of . In some examples, a software application that programs a computer to perform the matching, segmenting, and parsing operations of blocks - implements the product purchase information token parser, where a different respective software module includes a respective set of computer-readable instructions for performing the matching, segmenting, and parsing operations. In some examples, a machine learning software application that programs a computer to perform the determining and classifying operations of blocks - implements the product purchase information token classifier.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 8","FIG. 7"]},"In this example, the computer apparatus retrieves from a data store (e.g., a database) electronic messages  that have been transmitted between physical network nodes to convey product purchase information to designated recipients.  shows an example  of one of the electronic messages .","The computer apparatus pre-processes the electronic messages  (, block ). In this process, the computer apparatus tokenizes the text-based contents of the electronic messages by extracting contiguous strings of symbols (e.g., symbols representing alphanumeric characters) separated by white spaces. The contiguous symbol strings typically correspond to words and numbers. The computer apparatus then replaces tokens that match patterns for integers and real numbers (typically prices) in the electronic messages  with wildcard tokens.  shows an example of a pre-processed version  of the electronic message  in which integers have been replaced with the wildcard token \u201cINT\u201d and real numbers have been replaced with the wildcard token \u201cFLOAT\u201d. The replacement of the variable integer and real number elements of each electronic message with wildcard tokens improves the detection of iterating elements of the electronic messages.","For each of the pre-processed messages  (, block ), the computer apparatus attempts to determine a merchant that is associated with the electronic message (, block ). For some types of electronic messages, the computer apparatus attempts to determine the merchant from header information that includes supplemental information about the electronic message. For example, an electronic mail (e-mail) message includes header information that indicates the sender, the recipient, and the subject of the electronic mail message, and a text message typically includes a Sender ID that indicates the sender of the message. In some cases, the computer apparatus may be able to determine the merchant from the sender or subject contained in the header information. In some cases, the computer apparatus may attempt to determine the merchant from the content of the electronic message.","Based on the determined merchant that is identified as being associated with a respective one of the electronic messages, the computer apparatus attempts to match the electronic message to one of multiple clusters of electronic messages  that is associated with the determined merchant. In some examples, the set  of clusters corresponds to one of the merchant-specific sets ,  of electronic message clusters into which the electronic messages  were grouped in the structure learning parser building process described above in connection with .","After determining the set  of clusters of electronic messages that is associated with the merchant associated with the electronic message, the computer apparatus matches the electronic message to a respective one of the clusters in the set  of clusters (, block ). In some examples, the computer apparatus associating each of the clusters in the determined set  with a respective similarity score that indicates a degree of similarity between contents of the selected electronic message and contents of the electronic messages of the cluster. The computer apparatus then matches the electronic message to the cluster  in the set  that is associated with a highest one of the similarity scores.","In some examples, each similarity score compares similarity and diversity of the contents of the electronic message and contents of a respective one of the electronic messages of the associated cluster. In some examples, measures of content similarity compare similarity and diversity of the contents of pairs of electronic messages. In some of these examples, the similarity measure corresponds to the Jaccard similarity coefficient, which measures similarity between two electronic messages based on the size of the intersection divided by the size of the union of features of the electronic messages. In some of these examples, the computer apparatus extracts lines of content (i.e., whole lines, as opposed to individual words in the lines) from each electronic message as the features that are compared, and measures similarities between electronic messages using line-based comparisons of the extracted content. This line-based feature matching approach improves the accuracy of the clustering process by narrowing the range of matches between electronic messages.","As explained above, each cluster in the matched merchant-specific set  of clusters is associated with a respective grammar that defines an arrangement of structural elements of electronic messages in the cluster. Based on this association, the computer apparatus determines the grammar  that is associated with the cluster  that is matched to the electronic message.  shows an example of the grammar  that is matched to the electronic message. In the illustrated example, the grammar  corresponds to the grammar  shown in . As explained above, the grammar preserves the arrangement (e.g., order) of the static elements , , , the optional elements, the iterating elements , and the data fields , , . In some examples, the grammar recursively defines allowable arrangements of the tokens corresponding to the structural elements.","After determining the grammar  that is associated with the cluster  that is matched to the electronic message, the computer apparatus parses the electronic message according to the determined grammar  (, block ). In this process, the computer apparatus matches the sequence of structural elements in the grammar to the tokens identified in the pre-processed version of the electronic message. The result is an ordered arrangement of tokens  matched to respective ones of the structural elements of the grammar and a set of unidentified ones of the tokens that are extracted as data fields.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":["FIG. 9D","FIG. 3","FIG. 9B","FIG. 9C"],"b":["180","34","36","52","58","182","184","186","163","176"]},{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 9E","FIG. 9A","FIG. 9B","FIG. 9D"],"b":["182","161","184","222","163","180"]},"Referring back to , in addition to parsing tokens in the electronic message according to the grammar (, block ), the computer apparatus also determines a respective set of additional features from each electronic message (, block ). The determined features correspond to the features that are extracted during the training process described above.","After the tokens have been parsed and the additional features have been extracted from the pre-processed version of the electronic message (, blocks , ), the computer apparatus applies respective sets of the parsed tokens and extracted features to the order-level price classifier , the identifier classifier , the item description classifier , and the item-level classification heuristics  described above. In the illustrated examples, the price classifier  labels the extracted candidate price data field tokens with respective ones the following order-level price labels: shipping; tax; total; sub-total; and discount. In the illustrated examples, the identifier classifier  labels respective ones of the extracted candidate price data field tokens with respective ones of the following identifier labels: order number; tracking number; and SKU. In the illustrated examples, the item description classifier labels respective ones of the extracted data field tokens as item descriptions. In the illustrated examples, the computer apparatus applies the item-level classification heuristics to label respective ones of the extracted data field tokens item-level quantity and price labels.","After classification, the computer apparatus outputs an extracted set of price data, identifier data, item description data, and item-level quantity and price data for each electronic message. The computer apparatus typically stores this product purchase information in non-transitory computer-readable memory. For example, the product purchase information may be stored in one or more data structures that include associations between the product purchase relevant labels and the product purchase information of the respective ones of the extracted product purchase data field tokens.","D. Extracted Product Purchase Information Applications","The extracted product purchase information may be used in a wide variety of useful and tangible real-world applications. For example, for individual users, the extracted product purchase information is processed, for example, to display information about the users' purchases, including information for tracking in-transit orders, information for accessing purchase details, and aggregate purchase summary information. For advertisers, the extracted product purchase information is processed, for example, to assist in targeting advertising to consumers based on their purchase histories. For market analysts, the extracted product purchase information is processed to provide, for example, anonymous item-level purchase detail across retailers, categories, and devices.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 10","b":"230"},"Other exemplary applications of the extracted product purchase information are described in, for example, U.S. Patent Publication No. 20130024924 and U.S. Patent Publication No. 20130024525.","Computer apparatus are specifically programmed to provide improved processing systems for performing the functionality of the methods described herein. In some examples, the process of building a structure learning parser and the process of parsing electronic messages with a structure learning parser are performed by separate and distinct computer apparatus. In other examples, the same computer apparatus performs these processes.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 10","b":["320","320","322","324","326","322","320","322","324","324","320","326","320","328","326"]},"A user may interact (e.g., input commands or data) with the computer system  using one or more input devices  (e.g. one or more keyboards, computer mice, microphones, cameras, joysticks, physical motion sensors, and touch pads). Information may be presented through a graphical user interface (GUI) that is presented to the user on a display monitor , which is controlled by a display controller . The computer system  also may include other input\/output hardware (e.g., peripheral output devices, such as speakers and a printer). The computer system  connects to other network nodes through a network adapter  (also referred to as a \u201cnetwork interface card\u201d or NIC).","A number of program modules may be stored in the system memory , including application programming interfaces  (APIs), an operating system (OS)  (e.g., the Windows\u00ae operating system available from Microsoft Corporation of Redmond, Wash. U.S.A.), software applications  including one or more software applications programming the computer system  to perform one or more of the process of building a structure learning parser and the process of parsing electronic messages with a structure learning parser, drivers  (e.g., a GUI driver), network transport protocols , and data  (e.g., input data, output data, program data, a registry, and configuration settings).","In some embodiments, the one or more server network nodes of the product providers , , and the recommendation provider  are implemented by respective general-purpose computer systems of the same type as the client network node , except that each server network node typically includes one or more server software applications.","In other embodiments, one or more of the product purchase information provider , the product merchants , the product delivery providers , the message providers , and the product purchase information consumers  shown in  are implemented by server network nodes that correspond to the computer apparatus .","The embodiments described herein provide improved systems, methods, and computer-readable media for extracting product purchase information from electronic messages.","Other embodiments are within the scope of the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 6B","FIG. 6A"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 6C","FIG. 6B"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 6D","FIG. 6C"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9B","FIG. 9A"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 9C","FIG. 9B"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 9D","FIG. 9B","FIG. 9C"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 9E","FIG. 9A","FIG. 9D"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
