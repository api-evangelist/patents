---
title: System and method for selecting data providers
abstract: A preferred data provider is selected from a plurality of data providers by receiving a request for data from a client together with client identification data, identifying a plurality of data providers capable of providing data to the client, providing the client identification data to the data providers and instructing the data providers to perform tests in order to establish a measure of the elapsed time for a signal to be sent to and received from the client, and a measure indicative of their remaining capacity for data transfer, and to make these measures available to the system. One or more preferred data providers may then be selected on the basis of the elapsed time signals and the remaining capacity signals from the data providers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07616582&OS=07616582&RS=07616582
owner: British Telecommunications public limited company
number: 07616582
owner_city: London
owner_country: GB
publication_date: 20040730
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["This application is the US national phase of international application PCT\/GB2004\/003331 filed 30 Jul. 2004 which designated the U.S. and claims benefit of GB 0319251.5, dated 15 Aug. 2003, the entire content of which is hereby incorporated by reference.","1. Technical Field","The present invention relates to the identification, prior to or during the transfer of data, of suitable communications channels for transferring data. Embodiments of the present invention may be applicable in situations where a user wishes to receive data such as video data by way of Video Streaming for example, or prior to or during the downloading of multimedia content over any of a variety of means such as xDSL, Wireless LAN, mobile etc.","2. Related Art","Of the many uses of networks such as the internet, one category of use that has been gaining significantly in popularity recently has been the use of networks for the exchange of data such as video or audio data or other media content. Increasingly, types of multimedia content (e.g. Video, Audio) are available in large quantities on the Internet. This Multimedia content can be streamed over a variety of IP Networks, either broadband or narrowband. More generally, data distribution may be achieved by way of data streaming or more general forms of downloading. Such distribution may be carried out in a peer-to-peer context, or from commercial multimedia-providing servers, and may be carried out using a variety of means such as xDSL, Wireless LAN, cable, mobile (GPRS or 3G) etc. It should be noted that xDSL covers many different variations of DSL (\u201cDigital Subscriber Line\u201d), such as ADSL (\u201cAsymmetric\u201d), HDSL (\u201cHigh bit-rate\u201d), and RADSL (\u201cRate-Adaptive\u201d). Digital Subscriber Line technology is a well-known technology for bringing high-bandwidth information to homes and small businesses over ordinary telephone lines.","Unfortunately, receiving data from the Internet can sometimes be problematic, due to factors such as Packet Loss, Packet Delay, Jitter, a Server being down, and other factors, which severely affect time-critical applications such as Video Streaming. Often, a user tries to connect to a Server and finds either that this Server is down or severely busy, thus refusing video content. If the user does manage to connect to a server and the video content is finally being streamed, the quality may be very bad due to factors such as packet delay, referred to above. All these factors severely affect an end-user's experience, particularly with regard to receiving streamed audio or video data over the Internet, and have thus delayed the take-up of these kinds of applications.","For an individual user who wishes to download large files or other items, or perhaps to receive streamed data relating to a particular file or files, there may be a large number of different data providers, such as commercial servers or peers, who may be able to provide the required data. On account of the variety of means by which the user may be connected to the network, the variety of types of data providers from which data may be sourced, and other factors, the individual user may encounter the problem of not knowing which data provider, from a \u201cpool\u201d of available data providers such as Video Servers, will be capable of serving video content or other such data over a reliable connection. Low reliability may be caused by packet loss, jitter, packet delay, and other factors, all of which lower the chances of achieving good quality downloading or data streaming.","In order to give an idea of how important it is to solve that problem, some \u201cwell-known\u201d applications are mentioned below:\n\n","With reference to video servers, to which the present invention is of particular applicability, the usual approach to this problem has been to pick a default video server without any prior knowledge of which Server will provide the most reliable connection, which is dependent on where the end-user is located on the network, however some techniques already exist for choosing a server which is likely to be faster or better in some way.","Summaries of some related papers are given below:\n\n","The popularity of peer-to-peer multimedia file sharing applications such as Gnutella and Napster has created a flurry of recent research activity into peer-to-peer architectures. This paper includes a detailed measurement study of the two popular peer-to-peer file sharing systems, namely Napster and Gnutella, and in particular seeks to characterise the population of end-user hosts that participate in these two systems. This characterisation includes the bottleneck bandwidths between these hosts and the Internet at large, IP-level latencies to send packets to these hosts, how often hosts connect and disconnect from the system, how many files hosts share and download, the degree of co-operation between the hosts, and several correlations between these characteristics.\n\n","This paper attempts to explain how the furnishing of video services on a peer-to-peer (P2P) network can not only offer viable alternatives to the mostly proprietary architectures used today for the delivery of video services, but it can also be done in a reliable and scalable manner. Building upon the approach of ad-hoc P2P networks of resources, a new architecture that can support the storage and retrieval of movies and\/or video clips is proposed. The proposed configuration exploits the availability of high-performance links to networks, the usage of exclusive and partial indexing in peers, making nodes \u201caware\u201d of the content in their own vicinity, replication of objects and caching of popular items, as well as full connectivity among servers whenever feasible. The architecture claims to use efficient indexing mechanisms for the retrieval of the multimedia objects, guarantees continuous operation in light of server failures and allows for the transparent population of new servers as well as the evolution of the furnished services and\/or network resources with minimal disruption to the users. One key provision to realise such a P2P infrastructure is that the core peers (or servers) are expected to be linked via a low-latency and high-bandwidth network that is capable of effectively handling and delivering voluminous multimedia data. It is also anticipated that end-users should have sufficient connections to object servers.\n\n","Whatever definitions have been put upon it, peer-to-peer is said to be an effective rallying cry for a new way of doing things. Streaming media delivery is particularly susceptible to a peer-to-peer architectural approach. Peer-to-peer systems have been shown to reduce the bandwidth cost and increase the scalability of on-demand and streaming content on the Internet. Similar techniques can be used to create a \u201cvirtual multicast\u201d, an application-layer implementation of the efficient sub-net broadcast features of network-layer multicasting.\n\n","In this paper, a peer-to-peer media streaming system is studied with the following characteristics: (1) its streaming capacity grows dynamically; (2) peers do not exhibit server-like behaviour; (3) peers are heterogeneous in their bandwidth contribution; and (4) each streaming session may involve multiple supplying peers. Based on these characteristics, two problems are investigated: (1) how to assign media data to multiple supplying peers in one streaming session and (2) how to quickly amplify the system's total streaming capacity. The solution proposed to the first problem is an optimal media data assignment algorithm OTS, which results in minimum buffering delay in the consequent streaming session. The solution to the second problem is a distributed differentiated admission control protocol DAC. By differentiating between requesting peers with different outbound bandwidth, DACis said to achieve fast system capacity amplification; benefits all requesting peers in admission rate, waiting time, and buffering delay; and creates an incentive for peers to offer their truly available out-bound bandwidth.","Referring now to background patent literature, a system for server-side optimisation of data delivery is disclosed in U.S. Pat. No. 6,112,239 (Kenner et al). Similar systems are disclosed in U.S. Pat. No. 6,502,125 and US 2003\/0145007 (both also Kenner et al). In these systems, users are provided with software which must be executed from their own machines in order to perform the optimisation. Similarly, in U.S. Pat. No. 6,477,522 (Young), a system for optimising the downloading of files from the internet is disclosed in which an applet intercepts the request for the file and determines the best server to provide the file. Again, it is necessary for software to be installed in, and executed from, the user's machine.","With reference to the field of digital electronic game-playing between users connected via the internet, U.S. Pat. No. 6,304,902 (Black et al) discloses a method for ensuring that the quality of data communications links between several game-playing users and any necessary server or servers is adequate for such game-playing. Game-playing generally involves two-way exchange of information between multiple players and a common server, which may be selected from a plurality of possible servers. One server acts as a matchmaker, and selects a few servers from the plurality of possible servers, and from these selects one as the server for the requested game. It will be noted that on account of the nature of such game-playing systems, the aim is to allow several users to connect to the same server concurrently, so a server is chosen in such a way as to facilitate its use by several users who may attempt to connect to it concurrently or one shortly after another.","Contrary to the above, present exemplary embodiments aim to identify the \u201cfastest\u201d, \u201cnearest\u201d or otherwise most appropriate server for an individual user, or the fastest, best or most reliable connection, in order that a connection may then be established by that individual user to a server that is not only appropriate for the multimedia content download or other such data exchange required by that user, but that is least likely to be slowed down or overloaded due to it also providing data to a large number of other users. According to preferred embodiments, this identification process may be carried out without the user needing to install or execute specific software on his or her own machine.","According to the present exemplary embodiment there is provided a system for selecting a preferred data provider from a plurality of data providers, the system comprising:\n\n","According to the present exemplary embodiment, there is also provided a method for selecting a preferred data provider from a plurality of data providers, the method comprising the steps of:\n\n","By using systems and methods according to presently described embodiments, it is possible to solve the problems outlined above by running a small testing process which may be completely invisible to the end-user and which does not require the installation or execution of any specific software on the user's machine, when the user wishes to try to access video content or other data, thus determining from a number of available Video Servers or other data providers the most reliable, fastest, least congested or otherwise most appropriate one for the particular user. In this way, the user may receive the best possible data download or data stream by connecting to the most \u201creliable\u201d one, thus enhancing the user's experience in relation to multimedia and other such applications.","According to preferred embodiments, the system may be arranged to receive requests for specific items, such as specific video files, from the user. It may then carry out a search in order to identify data providers capable of providing the specific items requested, possibly of a group of data providers who may be pre-selected, or who may be subscribers to the system, or possibly of the whole internet or other such network. Following such a search, the system may perform the selection process in order to make a selection just from these potential data providers. Alternatively the user need not be asked to specify a particular item in order for a \u201cpreferred\u201d data provider to be selected. In such cases, however, the user may find him- or herself limited to a \u201ccatalogue\u201d of items that the preferred data provider, once selected, can provide, which may or may not include a specific item that the user wishes to request.","In systems according to preferred embodiments, the means for instructing said data providers is a means remote from the client, such as a centralised server. The term \u201cremote\u201d need not imply that the instructing means and the client are geographically distant, but merely that the respective functions of the client and the instructing means are not performed by a common processing means on a client machine. It will be clear that irrespective of the respective physical locations of the client and the server, something other than the client performs the \u201cinstructing\u201d, thus there is no need for software to be downloaded to a client machine.","Systems according to embodiments may be arranged to select a preferred data provider only from data providers having a remaining capacity above a predetermined threshold, effectively disqualifying any data providers whose remaining capacity is below that predetermined threshold. Alternatively, the final selection may be made in order to obtain the best balance between the respective factors represented by the two types of signals (i.e. elapsed time and remaining capacity) without the decision being constrained by specific thresholds.","According to preferred embodiments, the signal indicative of remaining capacity that data providers may be instructed to provide may be a signal indicative of their remaining bandwidth.","In systems according to preferred embodiments, in order to provide the information relating to the identity of the preferred data provider, the system may arranged to provide the information on a web site, which may be updated whenever the selection process has been carried out and a new \u201cpreferred\u201d data provider established. The information may be provided in the form of the Uniform Resource Locator (URL) of the preferred data provider. The information may be provided in other ways, however, such as the sending OT an e-mail or other such message containing the necessary information to the user.","Systems according to embodiments may select more than one \u201cpreferred\u201d data provider. In this case, they may provide information relating to a plurality of preferred data providers to user, possibly int he form of a list indicating a ranking, based on the order in which they performed in the respective tests (i.e. best, second-best etc.) or alternatively, any that performed above predetermined quality thresholds may be identified to the user.","Reference will be made to the following technologies in the description of preferred embodiments: RMI, JAVA, Servlets, HTML. Information about these technologies is publicly available, but a brief summary is given here for the purposes of avoiding the possibility of ambiguity in relation to the terminology, and the abbreviations and acronyms associated therewith.","RMI (\u201cRemote Method Invocation\u201d) is a new Application Programming Interface (API) offered in Java Development Kit (JDK) 1.1 that allows for messaging between different Java Virtual Machines (JVMs), even if they are separated by a network.","\u201cJAVA\u201d is a programming language expressly designed for use in the distributed environment of the Internet. It can be used to create complete applications that may run on a single computer or be distributed among servers and clients in a network. It can also be used to build a small application module or \u201capplet\u201d for use as part of a Web page. Applets make it possible for a Web page user to interact with the page.","A \u201cServlet\u201d can be defined as a small program that runs on a server. The term usually refers to a Java applet that runs within a Web Server environment. This is analogous to a Java applet that runs within a Web Browser environment.","HTML (\u201cHypertext Markup Language\u201d) is the set of symbols or codes inserted in a file intended for display on a World Wide Web browser page. The \u201cMarkup\u201d tells the Web browser how to display a web page's words and images for the user.","A network including a system according to an embodiment of the present invention is shown in . This figure demonstrates the interactions between components of the network which may occur in the process of determining a preferred, or the \u201cbest\u201d, Video Server. Part of this is typical architecture used for video streaming (Client, Web Server, Video Server) but it also includes the JAVA RMI running, which allows the testing to be done in order to determine which \u201cVideo Server\u201d is the most suitable for Video Streaming for a specific end-user. The process will be described in detail below. The steps in the figure indicate the preferred order of events. The components of the system can be summarised as follows:","The Client: The \u201cClient\u201d  generally refers to the \u201cend-user's\u201d personal computer (PC), running a web browser and \u201cVideo Player\u201d or a similar plug-in or application. It will be noted that the client could however be a device such as a 3G (\u201cThird-Generation\u201d) mobile phone, using WAP (Wireless Application Protocol) or similar web browsing protocols to interact with the internet, for example.","The Centralised Server: The \u201cCentralised Server\u201d 20 generally refers to a computer terminal such as a PC, comprising a Web Server  running web server software. The Centralised Server  may thus provide or present information to the user in the form of a web page, from which the user may make a choice of video clips, for example, the web page containing links to video streaming server sites. The Centralised Server may run \u201cServlet\u201d (JAVA) software  or \u201cASP\u201d (Microsoft) software, responsible for creating dynamic web pages and communicating with RMI servers, and finally, running JAVA RMI client, in order to communicate with \u201cRMI servers\u201d installed in any of a plurality of \u201cVideo Streaming Servers\u201d.","The Centralised Server  may thus initially present a dynamic web-page to the user. Prior to the Centralised Server operating in any \u201csearch\u201d mode in which it aims to find the \u201cbest\u201d (i.e. the fastest, nearest or otherwise most appropriate) server or servers, it may contain links to one or more \u201cdefault\u201d servers. At any point, the user may choose, or send a request for, a piece of content\u2014if this occurs before any search has been completed, a default streaming server may then be chosen to deliver the content, or a link to one or more default servers may be provided.","Video Streaming Servers: A plurality of \u201cMultimedia Servers\u201d or \u201cVideo Streaming Servers\u201d  are shown (in this example, three such servers are shown, identified as \u201cC1\u201d, \u201cC2\u201d and \u201cCn\u201d), each of which contains, or has access to, stored \u201cMultimedia Content\u201d  such as \u201cVideo Content\u201d, compressed or uncompressed, an \u201cRMI Server\u201d  which communicates with the \u201cRMI Client\u201d  in the Centralised Server , and suitable software capable of serving \u201cVideo Streaming Content\u201d to end-users such as the Client . They are also provided with means for carrying out a \u201cPing\u201d test, as will be explained later, and for establishing a value, which may be an average value, for a \u201cround-trip response-time\u201d as will be described in more detail later, and providing this to the Centralised Server.","All of these components may interact in order to deliver video streaming content to end-users, as will be explained later.","The process of determining the \u201cbest\u201d (or at least a \u201cpreferred\u201d) Server is described below. It will be understood that while \u201cbest\u201d is a subjective term, two factors which are of great importance in data transfer are speed and reliability. Any improvement in relation to either of these factors can be regarded as an improvement in the overall quality of the download. There are two principal aspects to the process, which will be referred to as follows:\n\n","The tests can be carried out one after the other in either order, or contemporaneously. They will be described in the following paragraphs.","a) Latency Test","Step 1 (shown in ): The \u201cClient\u201d or \u201cUser\u201d  submits a request for connection to a \u201cMultimedia Server\u201d, via a \u201cCentralised\u201d Server , which is responsible for the co-ordination of the entire \u201csearch\u201d process for multimedia servers. This Centralised Server  contains a \u201cServlet\u201d , which is capable of retrieving the IP address of the \u201cClient\u201d or \u201cUser\u201d machine  in order that it may propagate this IP address to a number of Multimedia Servers , using \u201cJAVA RMI\u201d technology for example. The user may make a request for specific data, or a specific item, such as a specific video file for example, in which case the Centralised Server may carry out a search for Video Servers capable of providing that data, item or file before continuing with the process of determining the \u201cbest\u201d Server from those that are found to be capable thereof. Alternatively, the user's request may be for data in general, in which case the Centralised Server may carry out the process of determining the \u201cbest\u201d Server from a set of servers, predetermined or otherwise, in which case the user may be allowed to select which item or items to receive from the preferred server once the identity of that preferred server has been established, once that server has provided a \u201clibrary\u201d of available items to the user, for example.","Step 2 (shown in ): As referred to above, the IP address retrieved from the \u201cClient\u201d or \u201cUser\u201d machine  is propagated from the \u201cRMI Client\u201d  of the Centralised Server  to the \u201cRMI Servers\u201d  of the Multimedia Servers .","Step 3 (shown in ): Each \u201cRMI Server\u201d  located in a \u201cVideo Streaming Server\u201d  will retrieve that IP address, and each one will send a test signal by \u201cPING-ing\u201d the \u201cUser\u201d machine , using that IP address. \u201cPing\u201d refers to the application software \u201cPacket INternet Gophers\u201d which may be used to operate the process of sending Internet Control Message Protocol (ICMP) packets from a \u201cVideo streaming Server\u201d machine to a \u201cClient\u201d machine, and in this way, it is possible to measure the time it takes for a packet to travel from that \u201cVideo Streaming Server\u201d machine  to a \u201cClient\u201d machine  and return to the Video Streaming Server. Generally, The more successful packets received back (if more than one is sent) and the less time (generally to be measured in milliseconds) it takes for a packet to travel from a specific \u201cVideo Streaming Server\u201d machine to the Client machine and back, the better the video-streaming performance that end-user is likely to get if connected to that \u201cVideo Streaming Server\u201d. At this point, it should be mentioned that a packet may be considered \u201cunsuccessful\u201d, if a \u201cRequest Timeout Response\u201d message is received after the \u201cPing\u201d process for some packets. In this case, the packet is considered \u201clost\u201d and a default value (usually 1000 ms), may be given, thus affecting the \u201caverage\u201d value calculated at the end.","While it is particularly advantageous to utilise the \u201cPing\u201d test as above, in particular because it requires no extra software to be installed on the user machine, alternatives do exist for measuring latency. These alternatives include known network tools such as \u201cTraceroute\u201d and \u201cPing\u201d equivalents suitable for protocols other than ICMP, such as UDP (\u201cUser Datagram Protocol\u201d).","Step 4 (shown in ): After the \u201cPinging\u201d process, in each machine, has been completed, an average value is calculated and this value is returned back to the \u201cCentralised\u201d Server, using RMI again. Thus, a \u201ctable\u201d with \u201caverage\u201d response value times, like the ones shown in Table 1 will be formed in the \u201cRMI Client\u201d. From all these values, the smallest one (i.e. Server C in this case) may be chosen as the preferred, or most suitable \u201cVideo Streaming Server\u201d (or \u201cbest\u201d Server).",{"@attributes":{"id":"p-0049","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"This shows the average values retrieved from all \u201cVideo"},{"entry":"Streaming Servers\u201d with RMI technology. The \u201cRMI Client\u201d may"},{"entry":"pick the smallest value (i.e. Server C1)."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IP address","Average \u201cresponse time\u201d value"]},{"entry":[{},"(Video Streaming Server)","(milliseconds)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C1: 132.146.107.61","57","ms"]},{"entry":[{},"C2: 132.146.107.124","1000","ms"]},{"entry":[{},"Cn: 132.146.107.16","540","ms"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"Step 5 (shown in ): The \u201cServiet\u201d then retrieves from the \u201cRMI Client\u201d the IP address of the \u201cVideo Streaming Server\u201d with the smallest \u201caverage response time\u201d. In the above example this is \u201cC1\u201d with IP address \u201c132.146.107.61\u201d. It may update the web page containing the video links with that new IP address. In this way, the \u201cCentralised\u201d server will redirect the client to that \u201cmultimedia\u201d Server, via JAVA \u201cServlet\u201d technology.","This is the end of the latency test. The entire process as set out above may be invisible to the end-user, may take only a few seconds to be completed and by selecting on the basis of this test alone a Server may be selected from which the user may get video streaming content from a \u201cpreferred\u201d \u201cVideo Streaming Server\u201d.","The above process can be repeated after specific periods of time set by the \u201cVideo Server\u201d administrator for example, and each time the web page can be dynamically refreshed with a new preferred \u201cVideo Streaming Server\u201d IP address.","b) Remaining Bandwidth Test","While the system as described above is capable of establishing a preferred server on the basis of the results of the \u201clatency test\u201d alone, systems according to embodiments of the invention are also capable of performing a further test, which will be referred to as the \u201cRemaining Bandwidth Test\u201d. This allows a server to be \u201cdisqualified\u201d from being chosen as the preferred server if it is currently \u201ccongested\u201d, due to being used by a significant number of other users, or due to a high proportion of its bandwidth already being assigned to other tasks.  illustrates the calculation of the remaining \u201cup-link\u201d capacity in a \u201cServer\u201d, for a specific period of time.","Step 3a (not shown in ): Preferably, but not necessarily, at the same time as Step 3 of the \u201cLatency Test\u201d, the \u201cRMI Servers\u201d  of each of the Multimedia Servers  may obtain from the \u201cVideo streaming software\u201d a value U for the number of other users already connected to that Multimedia Server, and for each one, the \u201cbit-rate\u201d B of the clip requested. With reference to , the bit-rate of each of the U existing users is shown, for the sake of simplicity, as being 220 kilobits per second, although the bit-rates of existing users need not be the same. Such information could be programmatically retrieved, using \u201cplug-in\u201d libraries like the \u201cWindows Media SDK\u201d tools from \u201cMicrosoft\u201d, or similar tools from other companies (RealVideo, QuickTime, etc).","The formula below will give the total bandwidth consumed at the time of the request from the \u201cRMI Server\u201d:",{"@attributes":{"id":"p-0056","num":"0090"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["N","total"]},"mo":"=","mrow":{"mo":"\u2211","msub":{"mi":["B","i"]}}},{"mrow":{"mi":["where","i"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"=","mn":"0"},{"mi":["\u2026","U"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}],"mo":[",",",",",",",",","],"mn":["1","2","3"]}},{"mrow":{"mo":["(",")"],"mrow":{"mi":["F",".1"],"mo":"\u2062"}}}]}}}},"br":{}},"Nis the Total Bandwidth consumed by the requested \u201cVideo streams\u201d, at the time the request from the \u201cRMI server\u201d took place.","Bis the Encoding \u201cBit-Rate\u201d of the requested \u201cvideo clip\u201d, for the i\u201cUser\u201d.","U is the Number of connected \u201cUsers\u201d to the \u201cVideo Streaming Server\u201d","At the same time, the \u201cRMI Server\u201d may establish the maximum available \u201cupstream\u201d bandwidth for a \u201cVideo Streaming Server\u201d limited by the network connection. This could be either set by the \u201cadministrator\u201d manually, when he installs the entire software, or it could be retrieved automatically, from a process running locally on the machine, which determines the maximum \u201cup-link\u201d connection bandwidth.","Thus: Xis the maximum available \u201cupstream\u201d bandwidth.","Finally, the formula below will give us the \u201cpercentage\u201d of available \u201cup-link\u201d bandwidth:\n\n=[()\/]*100%\u2003\u2003(F.2)\n\nwhere A is the percentage of remaining \u201cup-stream\u201d bandwidth\n","In this way, we can set a \u201cthreshold\u201d, of 10-20% for example, such that if A is below the threshold, we can assume that this \u201cVideo Streaming Server\u201d is almost congested, thus it will not be included in the final \u201cbest Video streaming Server\u201d decision (Step 4).","Below an example is given to explain the formulas above:","Let us take, for example, a situation where there are two clips encoded in a \u201cVideo Streaming Server\u201d: The first file is called \u201cvideofile1\u201d and has an encoding bit-rate of 220 kbps. The second is called \u201cvideofile2\u201d and has an encoding bit-rate of 140 kbps. Ten other \u201cUsers\u201d are already connected to the \u201cVideo Streaming Server\u201d, seven of which are watching \u201cvideofile1\u201d and three of which are watching \u201cvideofile2\u201d. The maximum available bandwidth is X=10 Mbps=10000 Kbps. We set the threshold 20%.","From formula (F.1), we have the following:\n\n","Thus, the total bandwidth consumed is:",{"@attributes":{"id":"p-0068","num":"0105"},"maths":[{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"N","mo":"=","mrow":{"mrow":[{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"1"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"2"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"3"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"4"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"5"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"6"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"7"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"8"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"9"},{"mi":"B","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"10"}],"mo":["+","+","+","+","+","+","+","+","+"]}}}},{"mtd":{"mrow":{"mo":"=","mrow":{"mn":["220","220","220","220","220","220","220","140","140","140"],"mo":["+","+","+","+","+","+","+","+","+"]}}}},{"mtd":{"mrow":{"mo":"=","mn":"1960"}}}]}}},{"@attributes":{"id":"MATH-US-00002-2","num":"00002.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["N","TOTAL"]},"mo":"=","mrow":{"mn":"1960","mo":"\u2062","mi":"kbps"}}}}]},"As set out above, the maximum available bandwidth X=10000 kbps","From formula (F.2):",{"@attributes":{"id":"p-0071","num":"0108"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"A","mo":"=","mrow":{"mrow":{"mo":["[","]"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":["X","N"],"mo":"-"}},"mo":"\/","mi":"X"}},"mo":["*","\u2062","\u2062"],"mn":"100","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mi":"%"}}}},{"mtd":{"mrow":{"mo":"=","mrow":{"mrow":{"mo":["[","]"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mn":["10000","1960"],"mo":"-"}},"mo":"\/","mn":"10000"}},"mo":["*","\u2062","\u2062"],"mn":"100","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mi":"%"}}}},{"mtd":{"mrow":{"mo":"=","mrow":{"mn":"80.4","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mi":"%"}}}}]}}},"br":{}},"Conclusion: The remaining available \u201cup-link\u201d bandwidth is 80.4%, above the threshold of 20%. So this server is capable of accepting requests for more \u201cvideo streams\u201d and it's \u201caverage response time\u201d from Step 3, will be included in the final \u201cbest Video Streaming Server\u201d decision.","It should be noted that alternative way of calculating the \u201cremaining capacity\u201d exist, such as the following. A program could be running continuously on the Server or other such Data provider which is capable of measuring the packets (TCP\/UDP) sent out over a period of time, thus measuring the \u201cAverage up-link capacity\u201d. Such programs are widely available and would give an estimate of the traffic to and from the Data Provider. Such processes may be more complicated than that described above, but may be capable of providing a more accurate measurement of the instantaneous average remaining bandwidth, and may also measure not only any \u201cmultimedia packets\u201d, but also any other traffic (TCP acknowledgement messages, overhead packets, traffic from other network applications etc). Such methods would in general run continually on the \u201cData Provider\u201d, while the one described in detail above need be initiated only when the \u201cbandwidth measurement\u201d is required.","Step 4a (not shown in ): Once the above value has been established, the percentage of available \u201cup-link\u201d bandwidth may be returned to the RMI Client  of the Centralised Server  by each Video Streaming Server . Once the \u201cPinging\u201d process (Step  of the \u201cLatency Test\u201d) has also been completed in relation to each machine, a table with average response time values and percentage values may be formed in the \u201cRMI Client\u201d (see Table 2 below). If the percentage of available \u201cup-link\u201d bandwidth of any Video Streaming Server is below a predetermined \u201cthreshold\u201d, that Server may be disqualified irrespective of its response time value. From those that are not disqualified, the one with the smallest average response time value (i.e. \u201cC1\u201d in this example) may be chosen as the most suitable (or \u201cbest\u201d) Video Streaming Server.",{"@attributes":{"id":"p-0075","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"This shows the \u201cAverage response time\u201d values retrieved"},{"entry":"from all \u201cVideo Streaming Servers\u201d with RMI technology,"},{"entry":"together with the percentage of available up-link bandwidth values."},{"entry":"The \u201cRMI Client\u201d may pick the Server having the smallest"},{"entry":"response time value that is not disqualified on account of having"},{"entry":"a percentage value below the predetermined threshold of 20%."},{"entry":"Note that the nserver (Cn) seems \u201ccongested\u201d, so its"},{"entry":"\u201caverage response time\u201d value, although very low, will"},{"entry":"be rejected from the final decision."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Available \u201cup-"]},{"entry":["IP address","Average response time","link\u201d bandwidth"]},{"entry":["(Video Streaming Server)","(milliseconds)","(%)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["C1: 132.146.107.61","57 ms","80.4%\u2002\u2009"]},{"entry":["C2: 132.146.107.124","100 ms\u2002","94%"]},{"entry":["Cn: 132.146.107.16","54 ms","15%"]},{"entry":[{},{},"(rejected)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Step 5 (shown in ): The \u201cServlet\u201d will retrieve from the \u201cRMI Client\u201d, the IP address of the preferred Video Streaming Server, and it will update the web page containing the video links with that new IP address. In this way, the \u201cCentralised\u201d server may redirect the client to that \u201cmultimedia\u201d Server, via JAVA \u201cServlet\u201d technology.","This is the end of the test, by virtue of which the user will be able to receive video streaming content from the \u201cbest\u201d Video Streaming Server.","The process can be repeated for a fixed period of time, set by the \u201cVideo Server\u201d administrator, and each time, the web page can be dynamically refreshed with a new \u201cVideo Streaming Server IP address\u201d.","Study of Special Cases:","Below, we briefly review some specific situations which may disrupt the above processes:","RMI server is \u201cdown\u201d: In this case, the RMI Client may not be able to establish communication with the RMI Server of a particular Video Streaming Server. It may thus assume that this \u201cServer\u201d is currently not working. Thus, this \u201cServer\u201d will not be taken into account in the decision of which \u201cVideo streaming Server\u201d is the \u201cbest\u201d.","User\/Client is behind firewall: In this special case, there is a possibility that the Client's machine blocks all \u201cPing\u201d packets, resulting in all servers receiving \u201crequest time out responses\u201d. In this case, the end-user may be offered a default \u201cVideo Streaming Server\u201d and may be informed about this event (i.e. that he is behind a firewall and should deactivate the blocking of ICMP packets). Alternatively, other processes may be automatically initiated to tackle this case.","\u201cVideo Streaming Server\u201d is \u201cdown\u201d: In this case, the RMI Server may check if the video streaming software is working and may inform the \u201cRMI Client\u201d if or when that \u201cVideo Streaming Server\u201d is ready to receive connections. Alternatively, in Step , this \u201cServer\u201d may be excluded from the process of establishing which \u201cVideo Streaming Server\u201d is the \u201cbest\u201d."],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further features and advantages of the present invention will become apparent from the following description of embodiments thereof, presented by way of example only, and by reference to the accompanying drawings, wherein like reference numerals refer to like parts, and wherein:",{"@attributes":{"id":"p-0034","num":"0066"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0035","num":"0067"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
