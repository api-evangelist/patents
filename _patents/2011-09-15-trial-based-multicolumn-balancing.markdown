---
title: Trial based multi-column balancing
abstract: A trial based layout builder generates multiple trial multi-column layouts for content until a multi-column layout that satisfies particular criteria for multi-column balancing is generated. Multiple trial multi-column layouts can be generated in parallel based on different boundaries until a layout that does satisfy the criteria is identified. Different elements of the content laid out in different trial multi-column layouts can be reused in subsequently generated trial multi-column layouts. The content can also optionally be separated into multiple different portions at various break points, and trial multi-column layouts for the different portions can be generated in parallel. Additionally, if a trial multi-column layout for one of the portions that satisfies the particular criteria is identified, the content in that portion can be displayed while continuing to attempt to identify a layout for the content of the other portion that satisfies the one or more criteria.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08881002&OS=08881002&RS=08881002
owner: Microsoft Corporation
number: 08881002
owner_city: Redmond
owner_country: US
publication_date: 20110915
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Rendering structured Web content, such as HyperText Markup Language (HTML) and Cascading Style Sheet (CSS) content using a Web browser, typically involves processing a structured document including markup to ascertain the layout of the content so that it can be presented by the Web browser. However, due to the many different fonts, characters, symbols, and so forth that can be displayed, as well as the different sizes for such fonts, characters, symbols, and so forth, it can be difficult to obtain a well-balanced layout of the content if displaying the content across multiple columns.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","In accordance with one or more aspects, content to be displayed in a multi-column layout in an area having boundaries is identified. The content includes multiple elements, and for each of at least one of the multiple elements, an element layout generated for a previous trial multi-column layout of the content is obtained. A trial multi-column layout for the content based at least in part on the boundaries and the obtained at least one element layout is generated, and a check made as to whether the trial multi-column layout satisfies one or more criteria. If the trial multi-column layout satisfies the one or more criteria, then the trial multi-column layout is used for displaying the content. However, if the trial multi-column layout does not satisfy the one or more criteria, then the obtaining, generating, and checking are repeated with areas having boundaries.","In accordance with one or more aspects, content including multiple elements to be displayed in a multi-column layout in an area is identified. A first trial multi-column layout for the content is generated based at least in part on first boundaries in parallel with generation of a second trial multi-column layout for the content based at least in part on second boundaries. These first and second boundaries are different sets of boundaries, and a check is made as to whether the first trial multi-column layout or the second trial multi-column layout satisfies one or more criteria. If the first trial multi-column layout or second trial multi-column layout satisfies the one or more criteria, then the one of the first trial multi-column layout or the second trial multi-column layout that satisfies the one or more criteria is used to display the content. However, if neither the first trial multi-column layout nor the second trial multi-column layout satisfies the one or more criteria, then the generating and checking are repeated with different boundaries.","Trial based multi-column balancing is discussed herein. A controller coordinates multiple different layout generation modules each of which attempts to generate a multi-column layout for content that satisfies one or more criteria in an area having particular boundaries. This criteria can be, for example, that the content does not overflow the particular boundaries and does not underflow the particular boundaries by more than a threshold amount. These different layout generation modules can run in parallel generating different trial layouts based on different boundaries concurrently until a layout that does satisfy the one or more criteria is identified. Different elements of the content laid out in different trial layouts can also be reused in subsequently generated trial layouts, reducing the amount of time taken to subsequently generate the trial layouts. The content can also optionally be separated into multiple different portions at various break points, and trial layouts for the different portions can be generated in parallel. Additionally, if a trial layout for one of the portions that satisfies the one or more criteria is identified, the content in that portion can be displayed while continuing to attempt to identify a layout for the content of the other portion that satisfies the one or more criteria.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","100","102","102","102","102"]},"Computing device  also includes one or more applications  and a Web browser . Web browser  can be any suitable Web browser, such as the Internet Explorer\u00ae Web browser available from Microsoft Corporation of Redmond, Wash. In addition, computing device  includes a trial based layout builder . Trial based layout builder  can be implemented as a standalone component that can be utilized by applications  and Web browser . Alternatively or additionally, trial based layout builder  can be implemented as part of applications  and\/or Web browser .","In operation, trial based layout builder  allows for various trial layouts to be generated, each having different boundaries for an area including multiple columns of content. A trial layout refers to a layout that is generated in an attempt to generate a multi-column layout that satisfies one or more criteria for balancing the content across multiple columns. Various trial layouts are generated until a layout is generated that satisfies one or more criteria for balancing the content across multiple columns. A trial layout that satisfies the one or more criteria for balancing the content across multiple columns is also referred to as a balanced layout. Trial based layout builder  employs, for each trial, the use of a layout builder to oversee the process of layout processing for the trial, box builder types that are knowledgeable of their own requirements for content processing, and associated layout boxes that are built or generated by instances of the box builder types and which hold data that for the trial layout (and which will ultimately be rendered on a display or screen if the trial layout satisfies the one or more criteria for balancing the content across multiple columns).","In addition, system  includes a network  and one or more web sites  from which content can be received and\/or to which content can be sent. Such content can include structured documents such as HTML documents and other web content that can be operated upon by trial based layout builder . Network  can be a variety of different networks, including the Internet, a local area network (LAN), a public telephone network, an intranet, other public and\/or proprietary networks, combinations thereof, and so forth. Web sites  can be implemented by a one or more computing devices that, similar to the discussion of computing device , can be a variety of different types of devices, ranging from full resource devices with substantial memory and processor resources to low-resource devices with limited memory and\/or processing resources.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","108","200","202","204","1","204","206","202","204","204","202","204","204","204","202","202"],"i":"x"},"Multi-column controller  can use various criteria for multi-column balancing. Generally, multi-column balancing refers to content being spread across multiple columns with a balanced look, so that the content in each column is approximately at the bottom of the column. In one or more embodiments, the multi-column balancing refers to the content not overflowing (not exceeding) the area in which the content is being displayed and not underflowing (not leaving too much empty space until the end of) one or more of the multiple columns by more than a threshold amount.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 3","FIG. 3"],"b":["302","302","302","302","302","302","302","302","302","302","200","304"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIGS. 4","FIGS. 4","FIG. 4"],"b":["5","6","5","6","402","404"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5","b":["502","504","504"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6","b":["602","604"]},"Returning to , multi-column controller  oversees or organizes the generation of trial layouts by multi-column layout generation modules . The number of columns in the trial layouts can be determined in different manners, such as being specified as a column count in the source content, being specified as a column width in the source content (which can be divided into a width of a window in which the source content is to be displayed in order to determine how many columns of that width can be displayed), and so forth.","For a trial layout, a multi-column layout generation module  builds a display tree of layout boxes that contain content or data, such as text, images, or graphical elements such as scalable vector graphics (Svg) elements that are to be rendered on a screen or display for the trial layout. Particular boundaries of an area in which the layout boxes are to be displayed using multiple columns for a particular trial layout are provided by multi-column controller  to the multi-column layout generation module  generating the trial layout. The boundaries are typically a height and width of an area (e.g., in pixels) in which the multi-column layout is displayed. Multi-column controller  can change these boundaries, providing different boundaries to different multi-column layout generation modules . Multi-column controller  typically changes the height of the boundaries provided to different multi-column layout generation modules , although multi-column controller  can alternatively change the width (or both width and height) of the boundaries provided to different multi-column layout generation modules .","Each multi-column layout generation module  includes a layout builder  and one or more box builders , and generates a trial layout box . Layout builder  constitutes the layout engine or object that oversees or organizes the processing for a particular trial layout. Layout builder  is responsible for instantiating trial layout box , and then communicating with one or more box builders  to see that the trial layout box  is populated with content for the trial layout. Each box builder  is an object that is responsible for building a particular type of element layout within layout box . Each element layout can be made up of one or more line boxes. For example, element layout A in  is illustrated in a single line box in a single column, and element layout B is illustrated as two line boxes each in one of two different columns. Specifically, there are different types of box builders, such as box builders for building tables, images, multicolor, lines, and the like. The box builders are specifically configured to build a particular type of content. As will be appreciated by the skilled artisan, different types of content have different layout requirements. Each different type of box builder is knowledgeable of the different layout requirements for its associated content type, and can build a corresponding piece of content. In one or more embodiments, box builder  is an abstract class that represents common properties and methods of these different types of builders, and thus defines the general contract of box building.","Multi-column controller  receives source content, such as an HTML document, and creates or activates one or more multi-column layout generation modules  to generate trial layouts. The layout builder  receives the source content and sequentially moves through the source content, communicating with one or more box builders  which, in turn, populate the trial layout box  with its content. The trial layout boxes  are also referred to as trial layouts generated by multi-column layout generation modules . Each trial layout box  has a particular area, defined by particular boundaries, in which content is displayed in multiple columns. Depending on the boundaries of the trial layout box , the content of trial layout box  may underflow or overflow this area as discussed above. A result value is also generated by each multi-column layout generation module , the result value indicating whether the content of trial layout box  underflowed or overflowed the area for the trial layout box , and if so by how much (e.g., a number of pixels) by which the content underflowed or overflowed the area.","Multi-column controller  can determine the initial boundaries to provide to multi-column layout generation modules  in a variety of different manners. For example, multi-column controller  can invoke an estimator that can generate a single-column layout for the content and identify a height (e.g., in pixels) of the single-column layout given a particular width of an area. This height can be divided by the number of columns in the multi-column layout, and the resulting value used by multi-column controller  as the height for the initial boundaries of the area. The resulting value can also be increased and\/or decreased by a particular amount (e.g., by 5% or 10%), and controller  can create or activate multiple multi-column layout generation modules  in parallel as discussed in more detail below, providing one with the resulting value, providing one or more other modules  with the resulting value increased by some amount (e.g., 5% or 10%), and\/or providing one or more other modules  with the resulting value decreased by some amount (e.g., 5% or 10%).","By way of another example, multi-column controller  can maintain a record of previously generated balanced multi-column layouts for content (e.g., if the source content was previously received from a web site  of ), such as a record of the boundaries of the area in which the balanced multi-column layout was displayed. If a record of a previous balanced multi-column layout for the content is available, multi-column controller  can use the boundaries of that previous balanced multi-column layout for the content as the initial boundaries to provide to a multi-column layout generation module . The boundaries of that previous balanced multi-column layout can also be increased and\/or decreased by particular amounts (e.g., by 5% or 10%), and controller  can create or activate multiple multi-column layout generation modules  in parallel as discussed in more detail below, providing one with the boundaries of the previous balanced multi-column layout, providing one or more other modules  with the boundaries of that previous balanced multi-column layout increased by some amount (e.g., 5% or 10%), and\/or providing one or more other modules  with the boundaries of that previous balanced multi-column layout decreased by some amount (e.g., 5% or 10%).","One or more trial layout boxes  that are populated by a multi-column layout generation module  are also maintained in layout store , even though the trial layout boxes  may not have been rendered. The layout of different elements within trial layout boxes  stored in layout store  can be used by multi-column layout generation modules  in generating subsequent trial layouts as discussed in more detail below. The number of trial layout boxes maintained in layout store  can be determined in different manners, such as keeping a threshold number of most recently generated trial layout boxes, allocating a particular amount of storage space and keeping as many most recently generated trial layout boxes as will fit in the particular amount of storage space, and so forth.","Various different techniques are employed by multi-column controller  and\/or multi-column layout generation modules  in generating trial layout boxes . These techniques can include using parallelization, reusing element layouts, fragmenting layouts, and\/or rendering partial layouts, and are discussed in more detail below. All of these techniques can be used together, individual ones of these techniques can be used, or various combinations of these techniques can be used.","Parallelization refers to running multiple multi-column layout generation modules  in parallel. Multiple multi-column layout generation modules  running in parallel refers to the multiple modules  running concurrently. Such modules  can be executed concurrently (e.g., on different processors or processor cores) or can execute at different times (e.g., being time-multiplexed on a processor or processor core). Running multiple multi-column layout generation modules  in parallel allows trial layout boxes  for areas with different boundaries to be generated concurrently. Multi-column controller  can determine how many multi-column layout generation modules  to run in parallel in various manners, such as based on a number of processors and\/or processor cores in a device implementing a layout builder  (e.g., one multi-column layout generation module for each processor and\/or processor core), based on a number of different boundaries for which controller  desires to have trial layouts generated, and so forth.","Multi-column controller  maintains a record of the boundaries that were used by each multi-column layout generation module  in generating a trial layout box , as well as a result indicating why the trial layout box  did not satisfy the one or more criteria. For example, if the content underflowed (or overflowed) the area of a trial layout box  having particular boundaries, then multi-column controller  maintains a result indicating that the content underflowed (or overflowed) the area with those particular boundaries and by how much (e.g., how many rows of pixels) the content underflowed (or overflowed) the area.","Multi-column controller  can use these results in determining boundaries for subsequent multi-column layout generation modules . For example, assume the content underflows the area of a trial layout box  having boundaries indicating a height of 190 pixels, but overflows the area of a trial layout box  having boundaries indicating a height of 170 pixels. Multi-column controller  can readily determine that an area that satisfies the one or more criteria for multi-column balancing has a boundary with a height between 170 and 190 pixels, and thus can launch two multi-column layout generation modules  to generate trial layout boxes  having boundaries with heights between 170 and 190 pixels (e.g., one having a boundary with a height of 177 pixels, and the other having a boundary with a height of 184 pixels).","When multi-column controller  determines that a trial layout box  satisfies the one or more criteria for multi-column balancing, controller  can optionally terminate any multi-column layout generation modules  still generating a trial layout box . Similarly, when multi-column controller  determines that content overflows the area of a trial layout box , controller  can optionally terminate any multi-column layout generation modules  still generating a trial layout box  for an area having smaller boundaries than (e.g., a height less than) the boundaries of the area that was overflowed. Additionally, when multi-column controller  determines that content underflows the area of a trial layout box , controller  can optionally terminate any multi-column layout generation modules  still generating a trial layout box  for an area having larger boundaries than (e.g., a height greater than) the boundaries of the area that was underflowed.","Reusing element layouts refers to reusing element layouts generated as part of a trial layout in other trial layouts. As discussed above, each box builder  is an object that is responsible for building a particular type of element layout (also referred to as a line box) within layout box . These element layouts are included as part of layout box , and thus are stored in layout store . An association between the source content for an element and the element layout for that element in a layout box stored in layout store  is maintained (e.g., in layout store  or alternatively in another record or store). This association allows one or more element layouts for a particular element of the source content to be readily identified. This association can take a variety of different forms, such as maintaining for each element, an identifier of the element as well as identifiers of each associated element layout and each layout box including an associated element layout.","Each element layout is an object that includes various content or data, and also supports various functionality. A layout builder  can give an element layout a particular space within which the element layout is to be laid out, and query the element layout as to whether the element layout can be reused within the particular space. The element layout determines, and returns to layout builder  an indication of, whether the element layout can be reused within the particular space. If the element layout cannot be reused within the particular space, then layout builder  creates or activates an appropriate box builder  to build or generate the element layout in a layout box . However, if the element layout can be reused within the particular space, then layout builder  can reuse that element layout in layout box , adding the element to layout box  without creating or activating a box builder  to build the element layout in layout box .","The particular space that layout builder  provides to the element layout is based on the location of layout box  in which layout builder  desires to place the element layout. For example, referring to , assume that element layout C has been previously built and is stored in layout store . Layout builder  desires to locate element layout C below element layout B in the middle column of the multi-column layout. This location extending from just below element layout B to the end of the middle column is the particular space layout builder  provides to the element layout.","Whether the element layout can be reused within a particular space can be determined in various manners. In one or more embodiments, the element layout checks whether the height (e.g., in pixels) of the element layout is less than or equal to the height (e.g., in pixels) of the particular space. If the height of the element is not less than or equal to the height of the particular space then the element layout cannot be reused in the particular space. However, if the height of the element is less than or equal to the height of the particular space (and optionally other checks are satisfied), then the element layout can be reused in the particular space. Additionally, the element layout can check whether the element layout was fragmented (separated into multiple portions). If the element layout was fragmented, then the element layout cannot be reused in the particular space. However, if the element layout was not fragmented (and optionally other checks are satisfied) then the element layout can be reused in the particular space.","Although the element layout itself is discussed herein as determining whether the element layout will fit within a particular space, alternatively other components or modules can make the determination. For example, a layout builder  can make the determination based on metadata associated with the element layout (e.g., metadata indicating a height of the element layout, metadata indicating whether the element was fragmented, etc.). By way of another example, a box builder  can make the determination based on metadata associated with the element layout (e.g., metadata indicating a height of the element layout, metadata indicating whether the element was fragmented, etc.), and build or not build the element layout based on the result of the determination.","Fragmenting layouts refers to separating the content into multiple different portions, and generating trial layout boxes  for each of these different portions separately. The trial layout boxes  for the different portions can be generated in parallel using different multi-column layout generation modules , or alternatively consecutively (e.g., using the same multi-column layout generation module ). The content is separated into different portions at a break point in the content, and the break point can be any point in the content (e.g., any arbitrary point identified by a multi-column layout generation module , any arbitrary point identified by multi-column controller , and so forth).","The break points can be, for example, locations in the content at which the type of content changes (e.g., text changes to images), locations in the content at which different pages are displayed (e.g., if the trial layout includes multiple pages, a break point can be located between each page), and so forth. The break points can also be locations at which a multi-column layout generation module  stops processing content. For example, when generating an element layout, a multi-column layout generation module  may encounter the end of a column in the multi-column layout being generated. In response, the multi-column layout generation module  stops processing the content and sets a break point at the location in the content where the module  stopped. The module  provides an indication of this break point to multi-column controller , allowing the multi-column controller  to have another multi-column layout generation module resume processing of the content at the break point. The indication can be provided in different manners, such as saving a record of the break point that is accessible to multi-column controller , invoking an application programming interface of multi-column controller , including an identification of the break point as metadata associated with the trial layout box , and so forth. Thus, an element layout for particular content or data can include multiple line boxes in multiple different columns.","Rendering partial layouts refers in part to rendering different portions of content separately, and allowing one portion to be rendered while attempts to identify a layout for another portion that satisfies the one or more criteria for multi-column balancing continue. The content can be separated into different portions at spanning items. A spanning item refers to a location in the content where some content or data would be displayed spanning across all of the columns of the multi-column layout. A spanning item can be various types of content or data itself, such as an image that is displayed, a button or other control that is displayed, and so forth. Because the spanning item spans all columns of the multi-column layout, the content above and below the spanning item is balanced separately. Accordingly, the two portions of content can be treated by multi-column controller  as different content for which multi-column layouts are generated.","Multi-column controller  can create or activate multi-column layout generation modules  to generate different trial layouts  for these different portions. In situations in which a balanced layout for one of the portions is generated before a balanced layout for the other portion is generated, the balanced layout for the one portion can be rendered before the balanced layout for the other portion. Multi-column controller  can continue the process of finding a balanced layout for the other portion, and then render that balanced layout for the other portion when found.","Rendering partial layouts also refers to rendering a trial layout  that is not a balanced layout. Multi-column controller  renders, as a partial layout, a trial layout  for content while continuing attempts to identify a trial layout  for that content that satisfies the one or more criteria for multi-column balancing continue. The trial layout  that multi-column controller  renders as a partial layout can be, for example, the trial layout  that most closely satisfies the one or more criteria for balancing the content across multiple columns (e.g., has the smallest amount of underflow or overflow). The partial layout can also be an incomplete layout (a layout for less than all of the content). By rendering a trial layout that is not a balanced layout, the content is rendered quickly even though not in a manner that satisfies the one or more criteria for balancing the content across multiple columns. However, multi-column  continues to attempt to identify a trial layout  that does satisfy the one or more criteria for balancing the content across multiple columns, and renders in place of the partial layout the trial layout  that does satisfy the one or more criteria for balancing the content across multiple columns when identified.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 7","FIG. 1"],"b":["700","700","102","700","700"]},"In process , content to be displayed in a multi-column layout is identified (act ). The identified content is source content included in a structured document, such as an HTML document, that can include an indication of which content is to be included in the multi-column layout as discussed above.","An estimate of boundaries for the multi-column layout is obtained (act ). This estimate can be generated in various manners as discussed above, such as by using boundaries from a previously generated balanced multi-column layout for the content if available, or being the height of a single-column layout for the content divided by the number of columns in the multi-column layout if a previously generated balanced multi-column layout for the content is not available.","One or more trial multi-column layouts for the content are generated (act ), based at least in part on particular boundaries as discussed above. The estimate of boundaries from act  is initially used in generating the one or more trial multi-column layouts, and subsequent trial layouts are generated with different boundaries (act  discussed below). These layouts can be generated using various techniques, such as using parallelization, reusing element layouts, fragmenting layouts, and\/or rendering partial layouts as discussed above. For example, an element layout from a previously generated trial multi-column layout can be obtained (act ), and a trial multi-column layout generated based at least in part on the obtained element (act ). By way of another example, multiple trial multi-column layouts can be generated in parallel with different boundaries (act ).","A check is made as to whether a multi-column layout generated in act  satisfies one or more criteria (act ). These one or more criteria comprise one or more criteria for balancing the content across multiple columns as discussed above.","If a multi-column layout satisfies the one or more criteria for multi-column balancing, then the multi-column layout that satisfies the one or more criteria is used to display the content (act ). However, if none of the multi-column layouts satisfy the one or more criteria for multi-column balancing, then the generation and checking is repeated with different boundaries (act ). These different boundaries can be determined in different manners as discussed above.","The trial based multi-column balancing techniques discussed herein support various usage scenarios. For example, multiple trial layouts can be generated in parallel, allowing a layout that satisfies the one or more criteria for multi-column balancing to be identified more quickly. Furthermore, element layouts from different trial layouts can be reused for subsequent layouts, freeing the trial based layout builder from needing to re-build or re-generate element layouts that have already been built. Additionally, element layouts can be fragmented at various break points, allowing multi-column layouts for the fragmented portions to be generated independently. In addition, content can be separated into multiple portions, and a multi-column layout generated for each of the multiple portions separately. The multi-column layouts for the different portions can be rendered as balanced multi-column layouts are identified, and each need not wait to be rendered until the balanced multi-column layout for the other is identified.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 8","FIG. 1"],"b":["800","800","102"]},"Computing device  includes one or more processors or processing units , one or more computer readable media  which can include one or more memory and\/or storage components , one or more input\/output (I\/O) devices , and a bus  that allows the various components and devices to communicate with one another. Computer readable media  and\/or one or more I\/O devices  can be included as part of, or alternatively may be coupled to, computing device . Processor , computer readable media , one or more of devices , and\/or bus  can optionally be implemented as a single component or chip (e.g., a system on a chip). Bus  represents one or more of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, a processor or local bus, and so forth using a variety of different bus architectures. Bus  can include wired and\/or wireless buses.","Memory\/storage component  represents one or more computer storage media. Component  can include volatile media (such as random access memory (RAM)) and\/or nonvolatile media (such as read only memory (ROM), Flash memory, optical disks, magnetic disks, and so forth). Component  can include fixed media (e.g., RAM, ROM, a fixed hard drive, etc.) as well as removable media (e.g., a Flash memory drive, a removable hard drive, an optical disk, and so forth).","The techniques discussed herein can be implemented in software, with instructions being executed by one or more processing units . It is to be appreciated that different instructions can be stored in different components of computing device , such as in a processing unit , in various cache memories of a processing unit , in other cache memories of device  (not shown), on other computer readable media, and so forth. Additionally, it is to be appreciated that the location where instructions are stored in computing device  can change over time.","One or more input\/output devices  allow a user to enter commands and information to computing device , and also allows information to be presented to the user and\/or other components or devices. Examples of input devices include a keyboard, a cursor control device (e.g., a mouse), a microphone, a scanner, and so forth. Examples of output devices include a display device (e.g., a monitor or projector), speakers, a printer, a network card, and so forth.","Various techniques may be described herein in the general context of software or program modules. Generally, software includes routines, programs, applications, objects, components, data structures, and so forth that perform particular tasks or implement particular abstract data types. An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available medium or media that can be accessed by a computing device. By way of example, and not limitation, computer readable media may comprise \u201ccomputer storage media\u201d and \u201ccommunication media.\u201d","\u201cComputer storage media\u201d include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media include, but are not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computer. Computer storage media refer to media for storage of information in contrast to mere signal transmission, carrier waves, or signals per se. Thus, computer storage media refers to non-signal bearing media, and is not communication media.","\u201cCommunication media\u201d typically embody computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier wave or other transport mechanism. Communication media also include any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.","Generally, any of the functions or techniques described herein can be implemented using software, firmware, hardware (e.g., fixed logic circuitry), manual processing, or a combination of these implementations. The terms \u201cmodule\u201d and \u201ccomponent\u201d as used herein generally represent software, firmware, hardware, or combinations thereof. In the case of a software implementation, the module or component represents program code that performs specified tasks when executed on a processor (e.g., CPU or CPUs). The program code can be stored in one or more computer readable memory devices, further description of which may be found with reference to . In the case of hardware implementation, the module or component represents a functional block or other hardware that performs specified tasks. For example, in a hardware implementation the module or component can be an application-specific integrated circuit (ASIC), field-programmable gate array (FPGA), complex programmable logic device (CPLD), and so forth. The features of the trial based multi-column balancing techniques described herein are platform-independent, meaning that the techniques can be implemented on a variety of commercial computing platforms having a variety of processors.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The same numbers are used throughout the drawings to reference like features.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 4","b":["5","6"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
