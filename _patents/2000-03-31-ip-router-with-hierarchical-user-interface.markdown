---
title: IP router with hierarchical user interface
abstract: A hierarchical interface component of a router transforms the flat feature presentation of traditional routers into a hierarchical feature presentation. The features are organized as functional components that include sub-components and attributes. Attributes store values relating to routing algorithms and components represent functionality relating to a routing algorithm and may contain additional components (sub-components) or attributes. The hierarchical interface allows a user to easily inspect, modify, and read the router attributes. Further, because the interdependencies of the attributes are clearly and visually displayed to the user, the user may more quickly understand the ramifications of changing a particular router attribute.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06850976&OS=06850976&RS=06850976
owner: Intel Corporation
number: 06850976
owner_city: Santa Clara
owner_country: US
publication_date: 20000331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","This application relates generally to computer networks, and more particularly, to data routing and switching in a computer network.","2. Description of Related Art","Computer networks are important, if not essential, elements of modern society. The Internet, for example, connects millions of computer users located around the world. Information is transmitted across the Internet using the well known IP protocol.","Data transmitted with the IP protocol is transmitted in discrete bundles, called packets, of data. Each packet includes an address describing the final destination of the packet. During transmission, the packets are forwarded through the network via a series of interconnected nodes. At each node, a data forwarding algorithm determines the next node that is to relay the packet. In this manner, the packets \u201chop\u201d from node to node in the network until the packet reaches its final destination.","Routing protocols and their associated routing algorithms can discover and manage the data paths from the router to destination nodes. Different routing protocols can work together to discover the best paths.","One known software package that performs a number of routing protocols is known as GateD. GateD, which is available from the Merit GateDaemon Consortium, of Michigan (reachable on the world wide web at \u201cwww.gated.org\u201d), is a software package of IP routing protocols that was initially developed for UNIX-based workstations. With GateD running, a workstation may function as a network router. GateD has also been imported into dedicated hardware routers.","Configuring or modifying the routing algorithms implemented by GateD is performed using a GateD script file. When GateD first executes, it reads its associated script file to obtain its configuration information. If a user desires to modify GateD's configuration information, the user rewrites the script file and then restarts GateD with the new script file.","Changing the configuration information by restarting GateD with a new script file is awkward when GateD is implemented as a dedicated hardware router. Interruption of data delivery service due to minor configuration changes is not generally acceptable in the real-time router environment. Dedicated routers typically operate in real-time, and thus use a real-time operating system. Real-time operating systems are usually event-driven, which means they perform tasks based on the occurrence of an event (e.g., receipt of packets). Further, they tend to lack a disk based file system and instead rely on fast access semiconductor memory. Reconfiguring GateD by closing and restarting it detracts from the real-time nature of the router and may thus undesirably hamper packet delivery.","Router configuration options may be used to set router features such as the routing algorithms to use. Conventionally, the configurable features in a router have the same functional priority (i.e., their organizational structure is \u201cflat\u201d) and are interdependent, so that changing one option may impact the effect of other options. The flat nature of this organizational structure, however, can make it difficult for the user to understand how changing one feature may affect other features.","Accordingly, there is a need in the art to improve the ease with which a user may configure options for a router operating in real-time.","The following detailed description refers to the accompanying drawings that illustrate the embodiments of the present invention. Other embodiments are possible and modifications may be made to the embodiments without departing from the spirit and scope of the invention. Therefore, the following detailed description is not meant to limit the invention. Rather the scope of the invention is defined by the appended claims.","As described herein, router configuration information (i.e., attributes) is arranged in a hierarchical structure based on factors such as the feature, functionality, or interdependence of the features. Branches in the hierarchical tree structure visually and intuitively inform the user of the relationship between attributes and what attributes are affected when another attribute is modified. Accordingly, when modifying an attribute in the disclosed hierarchical structure, the user can quickly asses the routing function the attribute relates to and the attribute's relationship to other attributes. In other words, the attribute dependency is localized by the tree structure. Moreover, the user can modify the attributes on the fly without having to restart or reinitialize the router.",{"@attributes":{"id":"P-00020","num":"00020"},"figref":"FIG. 1","b":["102","108","100","110","111","112","110","102","104","120","111","105","121","112","106","107","122","108","110","111","112"]},"Routers within each area , , or  periodically exchange network information with other routers in their area. For example, routers - each know the address of the other routers - in area . Thus, when one of routers - receives a packet addressed to any of computers , the router is aware of the complete path to the destination computer. On the other hand, border router  exchanges the network information between areas. When a packet is received at a router that is addressed to a computer in another area, the router, although it may not know the complete path to the packet's destination address, is able to transmit the packet to the border router to relay the packet to its destination. For example, router  can forward the packets from PC  to PC .","Routers - may be, for example, dedicated hardware routers, or general purpose computers running routing software such as GateD. Computers - may be any of a number of well known computer systems, such as personal computers.","For a router to function effectively in a network, it must be configured correctly. Users configuring a router typically have multiple different configurable features to choose from, such as the routing protocol(s) to support and the features associated with each protocol. Often, changing one attribute of a router may affect a number of other attributes.","Consistent with an aspect of the present invention, router attributes (i.e., configurable features) are arranged hierarchically by functionality or dependency. \u201cComponents\u201d are defined that hold groups of related attributes. This hierarchical component tree allows a user to easily inspect, modify, and read the router attributes.",{"@attributes":{"id":"P-00025","num":"00025"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["201","206","207","208","205","207","214","215","209","214","210","211","212","213"]},"An attribute corresponds to a \u201cleaf\u201d of the component tree . That is, each attribute is associated with a value, but does not reference any sub-components or sub-values. The \u201crouter id\u201d attribute , for example, stores an identification code unique to the router.","The ospf component  encapsulates all features of the router relating to the OSPF protocol. Each component and attribute below component  in component tree  in some way relates to the OSPF protocol. The components and attributes shown in component tree  will now each be discussed in more detail.","The highest level of component tree , in addition to \u201cospf\u201d component , includes the components \u201cstatic routing\u201d , \u201crouting table\u201d , and the attribute \u201crouter id\u201d . The static routing component  references an alternative routing source to the OSPF protocol. In general, static routing is the simplest form of a \u201crouting protocol\u201d, in which the administrator tells the router how to route data traffic to a pre-specified network address. Dynamic routing protocols, on the other hand, such as OSPF, enable routers to share routing information and to learn dynamically the routes available to them. There are many well known dynamic routing protocols in addition to OSPF that would typically be incorporated into a router. For simplicity, however, only the routing protocols corresponding to the ospf component  and the static routes component  are shown in FIG. .","Routing table component  relates to options associated with the router's routing table. A routing table is a table in which the router stores a list of destination networks that the router is aware of, along with information about each destination network, such as the next node's address and the path length to the destination. Preference attribute  indicates which protocol the router is to use if the routing table indicates that a particular destination address was found by more than one protocol.","For simplicity, the sub-components and attributes of routing table component  and static routing component  are not shown in FIG. .","In the OSPF protocol, by dividing a network into areas, such as those shown in , even extremely large networks can be managed with a reasonable amount of computing resources. Area components, such as area component , further include an \u201carea type\u201d attribute  and one or more \u201cif\u201d (interface) components  and . The interface component identifies the local network included in the area. Area type attribute  indicates how the routing information is generated and distributed for the area. For example, a \u201cstub\u201d area type usually has one exit point and it does not accept the routing information outside of the area. In contrast, an area type attribute having the value \u201ctransit\u201d indicates that the associated area connects to more than one other area, and may be used as a temporary hop for packets destined for other sub-networks.","As illustrated in , interface component  is defined by four attributes: \u201cif type\u201d attribute , \u201ccost\u201d attribute , \u201cprority\u201d attribute , and \u201chello\u201d attribute . These attributes collectively help to define the OSPF behavior of the interface component . The \u201cif type\u201d attribute  relates to the physical network connection used by the interface, and may have values indicating networks such as a broadcast network (e.g., Ethernet) or a non-broadcast network (e.g., ATM or FrameRelay). \u201cCost\u201d attribute  describes the cost to transmit a packet to the interface. \u201cPriority\u201d attribute  indicates the priority of the OSPF designated router election for the local network. \u201cHello\u201d attribute  specifies how often the router should contact the neighbor nodes in order to maintain the live relationship.","As described above, components such as the \u201carea\u201d component - represent router protocol functionality in component tree . Area components -, for example, contain information representing the OSPF functionality relating to dividing a network into sub-networks or \u201careas.\u201d Within each area component - are additional sub-components or attributes further defining their area component.",{"@attributes":{"id":"P-00034","num":"00034"},"figref":"FIG. 3","b":["301","310","311","310"]},"Configurable features in a conventional router are organized as a \u201cflat\u201d interface that provides little context or feature interdependency information to the user. Router , in contrast, includes a hierarchical API interface component , which is a program that implements a hierarchical arrangement of the router features such as that shown in component tree . API interface  may be stored in computer memory of router  and executed by a processor in router .","API interface  presents the features of the router  in hierarchical component tree  to the user. API interface  may allow a user to interact with it through a number of mechanisms. For example, as shown in , users may interact with component  via a traditional command-line interface, through a graphical network management system interface, or through a Web browser using the well known HTTP protocol.","An exemplary set of command-line interface commands for modifying and viewing component tree  will next be described in more detail with reference to , which is a diagram illustrating command-line component navigation and command usage. The commands shown in  are described with reference to component tree .","API interface  prompts the user with the prompt \u201c\/router>\u201d, which informs the user that the current position is \u201crouter\u201d (the highest level in component tree ). The user enters the first command \u201cadd\u201d ospf, (line ), which instructs interface component  to create the sub-component ospf. The ospf component, when added, may include a number of default sub-components and attribute values, such as the sub-components and attributes shown under ospf in FIG. . The user then changes the current active position in component tree  to the newly created ospf component. (Line ). The user employs the \u201cset\u201d command to set the preference attribute  to the value 50. (Line ). The user may add sub-components to the ospf component, such as an area sub-component and an interface sub-component. (Lines  and ). Finally, using the \u201cdisplay\u201d command, the user displays the component tree under the ospf component. (Lines ).","Commands other than the \u201cset,\u201d \u201cadd,\u201d and \u201cdisplay\u201d may be implemented by API interface . For example, a \u201cdelete\u201d command may be used to delete components and a \u201cget\u201d command may be used to retrieve the value of an attribute.","Table 1, below, illustrates a tabular representation of the portion of component tree  displayed by the user using the \u201cdisplay\u201d command at line .",{"@attributes":{"id":"P-d0e1746","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}},{"entry":["Area","Area Type","If","if type","cost","Priority","hello"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0.0.0.1","stub","11.0.0.1","bcast","2","10","10"]},{"entry":[{},{},{},"(broadcast)"]},{"entry":["0.0.0.2","nssa","10.1.1.1","bcast","1","20","10"]},{"entry":[{},{},"10.0.1.1","p2p (point-","5","1","10"]},{"entry":[{},{},{},"to-point)"]},{"entry":["0.0.0.3","normal","12.1.2.3","bcast","2","5","10"]},{"entry":[{},{},"12.3.0.1","nbma (non-","3","10","10"]},{"entry":[{},{},{},"broadcast)"]},{"entry":[{},{},"12.5.3.1","bcast","1","20","10"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}]}}},"Although the specific example just discussed presented a command-line implementation of interface component , as was previously mentioned, the interface could also be presented to the user as a more graphical interface.","The C++ programming language is one computer language that may be used to implement component tree . In particular, the object oriented nature of C++ lends itself well to the framework of the hierarchical component tree . For example, two classes may be defined in C++: \u201ccomponent\u201d and \u201cattribute.\u201d The class \u201ccomponent\u201d defines the methods \u201cadd\u201d and \u201cdelete\u201d; while the class \u201cattribute\u201d defines the methods \u201cset\u201d and \u201cget.\u201d New components or attributes may easily be added by further defining sub-classes of \u201ccomponent\u201d class or \u201cattribute\u201d class, respectively.","Although router  was described as a dedicated hardware router, one of ordinary skill in the art will recognize that component interface  and component tree  could also be implemented on a general purpose computer.","As described herein, a hierarchical interface component tree reorganizes the traditional flat feature presentation of traditional routers into a hierarchical feature presentation. In particular, the features are organized as functional components that include sub-components and attributes. This arrangement tends to be more intuitive and is easily navigable by applications and the user. Further, because the interdependencies of the attributes are localized and clearly and visually displayed to the user, the user may more quickly understand the ramifications of changing a particular attribute of the router.","It will be apparent to one of ordinary skill in the art that the embodiments as described above may be implemented in many different embodiments of software, firmware, and hardware in the entities illustrated in the figures. The actual software code or specialized control hardware used to implement the present invention is not limiting of the present invention. Thus, the operation and behavior of the embodiments were described without specific reference to the specific software code or specialized hardware components, it being understood that a person of ordinary skill in the art would be able to design software and control hardware to implement the embodiments based on the description herein.","The foregoing description of preferred embodiments of the present invention provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible consistent with the above teachings or may be acquired from practice of the invention. The scope of the invention is defined by the claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this Specification, illustrate an embodiment of the invention and, together with the description, explain the objects, advantages, and principles of the invention. In the drawings:",{"@attributes":{"id":"P-00014","num":"00014"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00015","num":"00015"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
