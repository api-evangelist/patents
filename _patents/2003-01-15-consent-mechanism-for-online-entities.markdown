---
title: Consent mechanism for online entities
abstract: A method, system, and computer-readable medium are provided for managing consent between online entities to perform tasks. The consent mechanism uses an asynchronous protocol for submitting consent requests, managing consent requests, and resolving consent requests. An application that requires consent to perform a task submits a request for consent to the consent mechanism. The resolving authority obtains pending request information from the consent mechanism and sends the consent mechanism request resolution information. The application obtains resolved request information from the consent mechanism. If the resolved request is approved, the consent mechanism allows the application to perform the task. If the resolved request is denied, the consent mechanism does not allow the application to perform the task.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07454508&OS=07454508&RS=07454508
owner: Microsoft Corporation
number: 07454508
owner_city: Redmond
owner_country: US
publication_date: 20030115
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT"],"p":["This application is a continuation-in-part of U.S. application Ser. No. 10\/187,408, filed Jun. 28, 2002, now U.S. Pat. No. 7,302,488 entitled \u201cParental Controls Customization and Notification,\u201d the subject matter of which is incorporated herein by reference and the benefit of the filing date of which is claimed under 35 U.S.C. \u00a7 120. This application also claims, under 35 U.S.C. \u00a7 119, the benefit of the filing date of U.S. Provisional Application No. 60\/406,218, filed Aug. 27, 2002.","This invention relates to computer software and, in particular, to a method and system for controlling operations performed across a network.","Today's Internet is used to perform an ever-increasing number and variety of online tasks. Consequently, the ability to control online tasks has never been more important. Users want to be able to control the actions that applications may take on their behalf. For instance, users want to be able to control online actions taken on their behalf for privacy and security reasons. As another example, users want to control online actions that involve accessing the users' profile information, financial information, and preferences. Parents want control over the online actions performed by their children. Administrators of online accounts want control over users' online actions. Schools and libraries want to control what users do while online. In essence, users want to be able to require applications to obtain consent to perform certain online actions on their behalf or the behalf of others before the actions are taken.","Many online actions today already require consent before the online task can be completed. Laws have been passed that mandate that Web sites control the performance of certain online actions. For example, in 1998, the Children's Online Privacy Protection Act (\u201cCOPPA\u201d) was passed to prevent Web sites from gathering personal information from children under the age of 13 without the approval of a consenting adult. Web sites often require obtaining consent from users to terms of use the first time a user accesses the site and anytime the terms of use change. Such laws and requirements have developed a need for ways for Web sites to increase their control over online actions that applications perform on behalf of users.","In summary, for various reasons, a need exists for ways of controlling online actions, not only on user online actions, but also the online actions of applications, such as Web services. As the demand for controlling online actions and providing consent to applications to perform online actions grows, so too does the need for a system for controlling online actions and consent for online actions.","The present invention addresses the above needs by providing a consent mechanism for managing consent to perform tasks between online entities.","In accordance with a first aspect of the present invention, a method for requesting, managing, and resolving consent requests from an application that requires consent to perform a task on behalf of a first user is provided. In response to the receipt of a request from an application for consent to perform a task on behalf of a first user, a second user who has authority to resolve the consent request is identified. In response to receiving the consent request resolution information from the second user, the computer analyzes the consent request resolution information to determine if the consent request is approved. If the consent request is determined to be approved, the application is allowed to perform the task.","In accordance with a second aspect of the present invention, a computer-readable medium having computer-executable instructions for requesting, managing, and resolving consent requests from an application that requires consent to perform a task on behalf of a first user is provided. When a computer executing the instructions receives a request from an application for consent to perform a task on behalf of a first user, the executing instructions cause the computer to identify a second user who has authority to resolve the consent request. In response to the computer's receiving consent request resolution information from the second user, the executing instructions cause the computer to analyze the consent request resolution information to determine if the consent request is approved. If the computer determines that the consent request is approved, the executing instructions allow the application to perform the task.","In accordance with a third aspect of the present invention, a computer system is provided for (i) receiving a request from an application for consent to perform a task on behalf of a first user; (ii) receiving consent request resolution information from a second user, who is authorized to resolve the consent request; (iii) analyzing the consent request resolution information to determine if the consent request is approved; and (iv) if the consent request is determined to be approved, allowing the application to perform the task. More specifically, the computer system includes a consent mechanism component for receiving a request from an application for consent to perform a task on behalf of a first user. In response to the consent mechanism's receiving the consent request, the consent mechanism queries an association service component for the identity of a second user who has authority to resolve the consent request. In response to receiving the query from the consent service, the association service identifies a second user who has authority to resolve the consent request and returns the identity of the second user to the consent mechanism. The consent mechanism uses the identity information to verify such consent request resolution information. In response to receiving consent request resolution information from the second user, the consent mechanism analyzes the consent request resolution information to determine if the consent request is approved. If the consent mechanism determines that the consent request is approved, the consent mechanism allows the application to perform the task.","In accordance with a fourth aspect of the present invention, a consent mechanism for requesting, managing, and resolving consent requests from an application that requires consent to perform a task on behalf of a first user is provided. The consent mechanism includes a first means for submitting a consent request in response to receiving a request from an application for consent to perform a task on behalf of a first user. The consent mechanism includes a second means for providing consent request information to a second user who has authority to resolve the consent request in response to receiving a request from the second user. The consent mechanism includes a third means for resolving a consent request in response to receiving consent request resolution information from the second user.","In accordance with a fifth aspect of the present invention, a computer-readable medium having a data structure stored thereon suitable for creating an entry in a consent database for a request from an application that requires consent to perform a task on behalf of the first user is provided. The data structure includes a data element containing request identification information, a data element containing first user identification information, a data element containing second user identification information, said second user identification information identifying a user who has authority to resolve the request, a data element containing task description information, and a data element containing request status information.","The detailed description that follows is in terms of processes and symbolic representations of operations by conventional computer components, including a processor, memory storage devices for the processor, connected display devices, and input devices. These described processes and operations may utilize conventional computer components in a heterogeneous distributed computing environment, including remote file servers, computer servers, and memory storage devices. Each of these conventional distributed computing components is accessible by the processor via a communication network.","The term \u201cInternet\u201d refers to a collection of networks and routers capable of communicating with one another. A representative section of the Internet  is shown in . The representation section of the Internet  shown in  includes a plurality of local area networks (LANs)  and wide area networks (WANs)  interconnected by routers . The routers  are generally special purpose computers used to interface one LAN or WAN to another. Communication links within the LANs may be formed by twisted pair wire, coaxial cable, or any other well-known communication linkage technology, including wireless technology. Communication links between networks may be formed by 56 Kbps analog telephone lines, or 1 Mbps digital T-1 lines, and\/or 45 Mbps T-3 lines or any other well-known communication linkage technology, including wireless technology. Further, computers and other related electronic devices  can be remotely connected to either the LANs  or the WANs  via a modem and temporary telephone link, including a wireless telephone link. Such computers and electronic devices  are shown in  as connected to one of the LANs . It will be appreciated that the Internet  comprises a vast number of such interconnected networks, computers, and routers and that only a small, representative section of the Internet  is shown in .","The Internet  has recently seen explosive growth by virtue of its ability to link computers located throughout the world. As the Internet has grown, so has the World Wide Web (\u201cWWW\u201d or the \u201cWeb\u201d). As is appreciated by those of ordinary skill in the art, the Web is a vast collection of interconnected or \u201chypertext\u201d documents (also known as \u201cWeb pages\u201d), written in HyperText Markup Language (\u201cHTML\u201d), or other markup languages, that are electronically stored at \u201cWeb sites\u201d throughout the Internet. Other markup languages include Standard Generalized Markup Language (\u201cSGML\u201d) and eXtensible Markup Language (\u201cXML\u201d), a condensed form of SGML. A Web site is a server connected to the Internet  that has mass storage facilities for storing hypertext documents and that runs administrative software for handling requests for those stored hypertext documents. A hypertext document normally includes a number of hyperlinks, i.e., highlighted portions of text which link the document to another hypertext document possibly stored at a Web site elsewhere on the Internet. Each hyperlink is associated with a Uniform Resource Locator (\u201cURL\u201d) that provides the exact location of the linked document on a server connected to the Internet and describes the document. Thus, whenever a hypertext document is retrieved from any Web server, the document is considered to be retrieved from the WWW. As is known to those of ordinary skill in the art, a Web server may also include facilities for storing and transmitting application programs, such as applications written in the JAVA\u00ae programming language from Sun Microsystems, for execution on a remote computer. Likewise, a Web server may also include facilities for executing scripts and other application programs on the Web server itself.","A remote user may retrieve hypertext documents from the WWW via a Web browser application program. A Web browser, such as Netscape's NAVIGATOR\u00ae or Microsoft's INTERNET EXPLORER\u00ae, is a software application for providing a graphical user interface to the WWW. Upon request from the user via the Web browser, the Web browser accesses and retrieves the desired hypertext document from the appropriate Web server using the URL for the document and a protocol known as HyperText Transfer Protocol (\u201cHTTP\u201d). HTTP is a higher-level protocol than the Transmission Control Protocol\/Internet Protocol (TCP\/IP) and is designed specifically for the requirements of the WWW. It is used on top of TCP\/IP to transfer hypertext documents between servers and clients. The Web browser may also retrieve application programs from the Web server, such as JAVA Applets, for execution on the user's computer. A Web service is a modular collection of Web protocol-based applications that can be mixed and matched to provide business functionality through an Internet connection. Web services can be used over the Internet or an intranet to create products, business processes, and business-to-business interactions. Web services use standard Internet protocols such as HTTP, XML, and Simple Object Access Protocol (\u201cSOAP\u201d), which is an XML-based protocol for exchanging structured and type information on the Web, to provide connectivity and interoperability between companies.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2A","FIG. 2A","FIG. 2A","FIG. 2A","FIG. 2A"],"b":["200","200","100","200","202","204","206","208","210","218","210","212","214","216","200","226","224","222","220","210","218","220","224","212","214","216","210","202","204","200","206","208","100"]},"The consent service  illustrated in  includes an application programming interface (\u201cAPI\u201d). An API is a set of methods used by an application program to direct the performance of procedures by the computer's operating system. The consent service  API includes methods for querying for a request, submitting a request, and resolving a request. In one embodiment, the consent service  exposes various methods including a submit request method, a query request method, a query by request ID method, a query by attributes method, and a resolve request method.","In one embodiment, the consent service  is implemented as a Simple Object Access Protocol (\u201cSOAP\u201d) interface, which is an XML-based protocol for exchanging structured and type information on the Web. In one embodiment, the submit request method is called by an online entity that requires consent to perform a task on behalf of a user. For example, an application acting on behalf of a user may call the submit request API method to request consent to perform a task. The submit request method parameters may include information about the identity of the user requesting the task, the description of the requested task, and the request ID. The request ID is returned to the calling entity upon successful completion of the submit request method. In one embodiment, the submit request method creates a new request for consent by creating an entry for the request in the consent database . The consent database  entry may utilize a data structure that includes a unique request ID, a unique identifier or sign-in name of the user requesting the task, a unique identifier or sign-in name of the user who is the resolving authority, a task description, and a request status. The unique request ID may be generated by the submit request method. The submit request method may also send notification to the resolving authority about the pending request for consent. The pending request notification may be sent using electronic mail, instant messaging, or the like. In this embodiment, the submit request method obtains information about the resolving authority using the association service , described below with reference to .","The query request method may be called by a resolving authority to obtain information about pending consent requests. The query request method may also be called by an application to obtain information about resolved requests. The query request method parameters may include the user identifier, on whose behalf the request is made, and a string describing the set of requests to be returned. The query request method searches the consent database  for the requests. The query request method returns the search results in an array. In one embodiment, the search results include information about each found request, which includes the request ID, the description of the requested task, the request status (pending\/approve\/deny\/delete), the user identity of the request creator, and the last modified user identity.","The query by request ID method may be called by a resolving authority to obtain information about pending consent requests. The query by request ID method may also be called by an application to obtain information about resolved requests. The query by request ID method parameters may include the number of elements in a request IDs array, an array of the request IDs, and a query results string. In one embodiment, the query results are returned in XML format and include information about each found request, including the request ID, the user ID, the creator user ID, the request type, and the request status. The query by request ID method searches the consent database  for the requests that have a request ID that matches the value of the request ID input parameter.","The query by attributes method may be called by a resolving authority to obtain information about pending consent requests. The query by attributes method may also be called by an application to obtain information about resolved requests. The query by attributes method parameters may include the number of elements in a resolving authority array, an array of resolving authority identities, the number of elements in an array of users on whose behalf the request is made, an array of users' identities, the number of elements in the request status array, an array of request status, the number of elements in the request type array, the array of request types, and a query results string. The query results are returned in XML format and include information about each found request, including the request ID, the user ID, the creator user ID, the request type, and the request status. The query by request ID method searches the consent database  for the requests that have a request ID that matches the value of the request ID input parameter.","In one embodiment, the resolve request method is called by the resolving authority to resolve a request for consent from an application to perform a task on behalf of a user. The resolve request method parameters may include the request ID and a resolved status. The resolved status parameter has enumerated values for approve, deny, and delete. In one embodiment, the resolve request method resolves the request by updating the request status for the request entry in the consent database  in accordance with the resolved status parameter, i.e., approve, deny, or delete. The resolve request method may also send notification to the application requesting consent about the resolved request for consent. The resolved request notification may be sent using electronic mail, instant messaging, or the like. In this embodiment, the resolve request method obtains and verifies information about the resolving authority using the association service , described below with reference to .","The association service  illustrated in  includes an application programming interface (\u201cAPI\u201d) with a method for querying associations in the association database . The query association method may be used to determine if there is an online entity that has been approved as having authority to grant consent for an online task. In one embodiment, the association database  stores information about associations between users of online identities. In another embodiment, the association database also stores information about a consent policy that acts as a rule to define the association between the associated online identities. For example, an association can be based on a parental controls policy, a COPPA policy, or a school policy. For a more detailed description of an association service, attention is directed to U.S. Provisional Application No. 60\/406,274, filed Aug. 2, 2002, entitled \u201cMethod and System for Enforcing Consent Policies on Online Identities,\u201d the subject matter of which is incorporated herein by reference.","As illustrated in , one embodiment of the present invention provides a role list  residing on the consent server . The role list  includes an ordered list of rules that are used for providing the automatic resolution feature of the present invention. In one embodiment, each rule in the role list  includes a task syntax and a rule definition. The task syntax is a schema utilized for describing and validating task data. The rule definition specifies how a request for consent to perform a task is to be resolved. For example, a role list for a parent may include a rule that access to all sites be approved for the child. As another example, a manager role list may include a rule that any request from the manager be approved. A rule may be defined by an online entity, such as an application acting on behalf of a user. For example, a parental controls application acting on behalf of a parent may define a rule. The use of the role list  in providing the automatic resolution feature of the present invention is described below with reference to .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIGS. 2B and 2C","FIG. 2B","FIG. 2B"],"b":["202","206","206","206","210","202","206","210","210","206","218","202","218","226","202","226","210","210","224"]},"As another example of submitting a consent request, a client  user may request to access a Web site or Web service that requires access to the user's profile information prior to allowing access. In the United States, if the user is a child under the age of 13, the Web site is required by COPPA to obtain consent from an adult before accessing the child's profile information. The Web site or Web service application, acting on behalf of a child under the age of 13, may submit a request for consent from an adult to access the child's profile information. The consent server  may call the association service  to query associations between the child user and an adult that have been approved as having authority to resolve the request for consent to access the child's profile information. Those of ordinary skill in the art will readily appreciate that the present invention is not limited to the above-described examples and that the present invention may be practiced by any application or online entity that requires consent to perform a task.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2C","FIG. 2C"],"b":["204","206","202","210","204","210","218","202","218","226","202","226","218","218","210","210"]},"The consent server  updates the consent database  in accordance with the request resolution information from the resolving authority. In one embodiment, the consent database  is updated so that the consent request entry indicates a resolved status of approve, deny, or delete. A consent request resolution may mean that the user's settings in the profile database  may need to be updated. For example, in one embodiment of the present invention, the profile database  may store settings, such as filters, for a user. The settings in the profile database  may need to be updated to correspond with the request resolution. For example, if a user's settings indicate that the user is not allowed to access a Web site or Web service and a consent request was resolved so that the user is allowed access to the Web site or Web service, the user's settings need to be updated to correspond with the request resolution. Similarly, a user's credentials may need to be updated to correspond to the request resolution. If so, the login credential database  is updated to be consistent with the request resolution.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["300","300","302","304","304","306","300","300","308","310","304","308","310","300","300"]},"The computer storage medium of the device  also contains computer programs and\/or routines suitable for communicating with and processing information from remote computers, such as consent server , association service , and clients  and .","The device  may also contain communications connections  that allow the device to communicate with other devices. Communication connections  are examples of communication media. Communication media typically embody computer-readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and include any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation, communication media include wired media, such as a wired network or a direct wired connection, and wireless media, such as acoustic, RF, infrared, and other wireless media. The term \u201ccomputer-readable media,\u201d as used herein, includes both storage media and communication media.","The device  may also have input devices(s) , such as a keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s) , such as a display, speakers, printer, etc., may also be included. Since all these devices are well known in the art, they are not described here.","The components of system  can be implemented utilizing the exemplary computing device described with reference to . For example, the clients  and  can be formed utilizing the exemplary computing device . Similarly, the consent server  can be formed utilizing the exemplary computing device . Additionally, the server upon which the association service , profile database , login credential database , consent database , and association database  reside can be formed utilizing the exemplary computing device . The computing device  is only one example of suitable computing environments and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Neither should the computing environment be interpreted as having any dependency requirement relating to any one or a combination of components illustrated in the exemplary operating environment.","The invention is operational in numerous other general purpose or special computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that may be suitable for implementing the invention include, but are not limited to, personal computers, server computers, laptop devices, multiprocessor systems, microprocessor-based systems, network PCs, minicomputers, mainframe computers, and distributed computing environments that include any of the above systems or the like.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIGS. 4-7","FIGS. 4-7","FIGS. 4-7"],"b":["206","210","402","206","210","402"]},"As described above with reference to , the consent server  may include a consent service  with an application programming interface (\u201cAPI\u201d). The consent service API may include methods for querying for a request, submitting a request, and resolving a request. In one embodiment, the interactions with the consent server  illustrated in  may be performed utilizing the consent service API methods for querying for a request, submitting a request, and resolving a request. However, the invention is not so limited and other methods well known to those of ordinary skill in the art for transmitting messages between computing devices across a network, such as the Internet, may be utilized.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 4","FIG. 4"],"b":["206","210","402","206","402","206","206","404","210","210","224","210","406","402","402","408","210","210","402","210","224","210","410","402"]},"After the resolving authority  has obtained the pending request information, the resolving authority  sends approve request resolution  to the consent server . The consent server  updates the consent database  to indicate that the request status is approved. The consent server  may also send an optional resolved request notification  to the application . The application  may also send a query for resolved request  to the consent server . The consent server  searches the consent database  for resolved requests. The consent server  sends resolved request search results  to the application . Since the resolving authority  approved the consent request, the application  is allowed to perform the task on behalf of the user.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5","FIG. 5"],"b":["206","210","402","206","402","206","210","402","210","402","502","210","210","224","206","210","402","206"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6","FIG. 6"],"b":["206","210","402","206","402","206","210","402","210","402","602","210","210","206","210","210","402","224","206"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 7","FIG. 7"],"b":["206","210","402","206","206","210","210","224","210","402"]},"As described above with reference to , one embodiment of the present invention includes a consent server  upon which role list  resides. The role list  includes an ordered list of rules that are used for providing the automatic resolution feature of the present invention. Each rule in the role list  includes a task syntax and a rule definition. The task syntax is a schema utilized for describing and validating task data. The rule definition specifies how a request for consent to perform a task is to be resolved. For example, a role list for a parent may include a rule that access to all sites be approved for the child. As another example, a manager role list may include a rule that any request from the manager be approved. A rule may be defined by an online entity, such as an application acting on behalf of a user. For example, a parental controls application acting on behalf of a parent may define a rule. After the task syntax and rule definition have been defined by the online entity and stored in the role list , the consent server  may use the role list to evaluate consent requests for providing automatic request resolution. After the rule for resolving a consent request for a task and the task syntax have been defined by the online entity and stored in the role list , the consent server  may use the rule to evaluate consent requests and determine if the consent request can be automatically resolved.","With reference to , after the consent server  receives the consent request, the consent server  evaluates the task that application  has requested consent to perform on behalf of the user. The consent server  evaluates the task to determine if the task should be automatically approved. In one embodiment, the consent engine  evaluates consent requests to determine if a rule in the role list  applies to the task corresponding to the consent request. In one embodiment, the consent engine  validates the task data for the consent request to determine if the task data conforms to a specified task syntax or schema. If the task data conforms to a task syntax or schema, the consent engine  evaluates the task data against the ordered list of rules in the role list  to determine if a rule applies to the consent request task. If a rule applies to the consent request task, the consent engine  uses the rule definition to automatically approve or deny the consent request. If the rule definition applies to the consent request such that the consent request is to be approved, the consent engine  updates the consent database  to indicate that the consent is approved. If the rule definition applies to the consent request such that the consent request is to be denied, the consent engine  updates the consent database  to indicate that the consent is denied. If the consent engine  determines that no rule in the role list  applies to the consent request task, the consent request remains in a pending status and is not automatically resolved. Consent requests that are not automatically resolved are resolved by the resolving authority as described above with reference to .","In the illustrated example shown in , the consent server  has determined that a rule in the role list  applies such that the consent request is automatically resolved as approved or denied. The application  obtains information about the automatically resolved request either by receiving an optional resolved request notification or by submitting a query for resolved requests. If the request is automatically resolved to be approved, in accordance with a rule in the role list , the application  is allowed to perform the task. Alternatively, if the request for consent to perform the task is automatically resolved to be denied, in accordance with a rule in the role list , the application  is not allowed to perform the task.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 8","b":["800","800","802","804","804","800","806","806"]},"If at decision block , it is determined that consent is not required, routine  proceeds to block  and the application is allowed to perform the task. After allowing the application to perform the task at block , routine  proceeds to block  and is completed.","Alternately, if at decision block , it is determined that consent is required, routine  proceeds to block . At block , the application determines if consent for the application to perform the task on behalf of the user was already approved. In one embodiment, the application determines if consent was already approved by querying the consent server . As described above with reference to , the consent server  includes a consent service . In one embodiment of the present invention, the consent service interface includes an application programming interface with methods for submitting a request, resolving a request, and querying for a request. In another embodiment, the application queries settings in the profile database . In yet another embodiment, the application may determine if consent to perform the task is already approved by checking its local cache.","After determining if consent to perform the task was already approved at block , routine  proceeds to decision block . At decision block , a test is performed to determine if consent has already been approved. If at decision block , it is determined that consent is already approved, routine  proceeds to block  and the application is allowed to perform the task. After allowing the application to perform the task at block , routine  proceeds to block  and is completed.","If at decision block , it is determined that consent was not already approved, routine  proceeds to block . At block , routine  submits a request for consent for the application to perform the task on behalf of the entity to the consent server . After submitting the consent request at block , routine  proceeds to block . At block , the consent server  receives the consent request, validates the input parameters, and determines the resolving authority. As described above with reference to , one embodiment of the present invention determines the resolving authority by querying an association service , which in turn queries the association database  for resolving authority information. In another embodiment, the input parameters include task data and specify a schema for the task data. The consent server  validates the input parameters to confirm that the task data conforms with the specified schema. After validating the input parameters and determining the resolving authority at block , routine  proceeds to block .","At block , the consent server evaluates the consent request to determine if predefined rules in the role list  apply for automatic resolution. As discussed above with reference to , the consent engine  residing on the consent server  evaluates the task data against the ordered list of rules to determine if a rule applies to the consent request task. If a rule applies to the consent request task, the consent engine  uses the rule definition to automatically approve or deny the consent request. After evaluating the request to determine if predefined rules in the role list apply for automatic resolution at block , routine  proceeds to decision block . At decision block , a test is made to determine if automatic request resolution is to be performed. If at decision block , it is determined that automatic request resolution is not to be performed, routine  proceeds to block  and performs the steps that are described below with reference to . As described above, it is determined that automatic request resolution is not to be performed when no predefined rule in the role list  applies to the task. If at decision block , it is determined that automatic request resolution is to be performed, routine  proceeds to block  and performs the steps that are described below with reference to .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 9A","FIGS. 4-6"],"b":["800","822","800","824","902","902","210"]},"After the resolving authority obtains information about the pending requests at block , routine  proceeds to block . At block , the resolving authority submits a request resolution to the consent server . The request resolution may be to approve, deny, or delete the consent request. After the resolving authority submits a request resolution to the consent server  at block , routine  proceeds to block . At block , routine  verifies the resolving authority identity. In one embodiment of the present invention, the identity of the resolving authority is verified utilizing the association service  as described above with reference to .","After verifying the resolving authority at block , routine  proceeds to decision block . At decision block , a test is made to determine if settings for the user need to be updated to correspond with the resolved request. If at decision block , it is determined that the settings need to be updated, routine  proceeds to block  to update the user's settings. In one embodiment of the present invention, the user's settings are stored in the profile database  and the login credential database . After updating the user's settings at block , routine  proceeds to block . If at decision block , it is determined that the settings do not need to be updated, routine  proceeds to block . At block , the consent database  is updated to indicate that the request is resolved as approved, denied, or deleted in accordance with the request resolution. After updating the consent database  to indicate that the request is resolved at block , routine  proceeds to block . At block , the application obtains information about the resolved request. In one embodiment of the present invention, an optional request resolution notification is sent to the application. In another embodiment of the present invention, the application submits a query to the consent server  for resolved requests.","After the application obtains information about the resolved request at block , routine  proceeds to decision block . At decision block , a test is performed to determine if the request was approved. If at decision block , it is determined that the request is approved, routine  proceeds to block  and the application is allowed to perform the task. After allowing the application to perform the task at block , routine  proceeds to block  and is completed. If at decision block , it is determined that the request was not approved, routine  proceeds to block  and the application is not allowed to perform the task. From block , routine  proceeds to block  and is completed.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 9B","FIG. 7"],"b":["800","822","800","826","930","930","800","224","216","930","800","932","210"]},"After the application obtains information about the resolved request at block , routine  proceeds to decision block . At decision block , a test is made to determine if the request is approved. If at decision block , it is determined that the request is approved, routine  proceeds to block  and the application is allowed to perform the task. After allowing the application to perform the task at block , routine  is completed at block . If at decision block , it is determined that the request is not approved, routine  proceeds to block  and the application is not allowed to perform the task. From block , routine  proceeds to block  and is completed.","With reference once again to , an alternative embodiment of the present invention, the components of the system  may be implemented as distributed software components accessible via the communication network. An example of a distributed application development and execution platform is the Microsoft\u00ae .NET platform from Microsoft\u00ae Corporation of Redmond, Wash. Generally described, the Microsoft\u00ae .NET platform is an application programming and execution platform that provides write-once, compile-once, run-anywhere application development. Microsoft\u00ae .NET platform applications may be created in any language as long as they are compiled by a compiler that targets the Microsoft\u00ae.NET universal runtime (\u201cURT\u201d), also known as the \u201ccommon language runtime engine.\u201d Such a compiler compiles .NET applications into intermediate language (\u201cIL\u201d) rather than directly into executable code.","To execute a .NET platform application, the compiled IL is interpreted, or \u201cjust-in-time\u201d compiled, by the URT into native machine instructions. The native machine instructions can then be directly executed by the CPU. The Microsoft\u00ae .NET platform also includes a base library that comprises a large set of class libraries and services. These libraries and services provide access to the features of the URT, and other high-level services, so that software developers do not have to code the same services repeatedly. Although the present invention may be applicable with regard to a .NET platform implementation, the present invention may also be implemented in alternative platform environments.","While the preferred embodiment of the invention has been illustrated and described, it will be appreciated that various changes can be made therein without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2B","FIG. 2A"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2C","FIG. 2A"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIGS. 8","b":["9","9"]}]},"DETDESC":[{},{}]}
