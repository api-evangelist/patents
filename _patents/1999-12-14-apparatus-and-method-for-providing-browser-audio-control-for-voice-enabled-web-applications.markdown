---
title: Apparatus and method for providing browser audio control for voice enabled web applications
abstract: A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The web browser receives an HTML page from the application server having an XML element that defines data for an audio operation to be performed by an executable audio resource. The web browser selectively executes the audio operation based on whether the web browser detects the presence of the executable audio resource. If the web browser does not have the executable audio resource, then the web browser ignores the XML element, and merely presents any other recognized HTML tags. However if the web browser has access to an executable audio resource that understands the XML element, then the web browser executes the audio operation based on enhanced audio control specified by the XML element. Hence, a web browser can be used to provide enhanced voice control for voice enabled web applications, merely by possession of an executable audio resource that recognizes the XML element that specifies the enhanced audio control required for the audio operation to be performed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08448059&OS=08448059&RS=08448059
owner: Cisco Technology, Inc.
number: 08448059
owner_city: San Jose
owner_country: US
publication_date: 19991214
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["This application claims priority from provisional application No. 60\/152,316, filed Sep. 3, 1999, the disclosure of which is incorporated in its entirety herein by reference.","1. Field of the Invention","The present invention relates to web browser control of audio operations for voice enabled web applications within a hypertext markup language (HTML) and hypertext transport protocol (HTTP) framework.","2. Description of the Related Art","The evolution of the public switched telephone network has resulted in a variety of voice applications and services that can be provided to individual subscribers and business subscribers. Such services include voice messaging systems that enable landline or wireless subscribers to record, playback, and forward voice mail messages. However, the ability to provide enhanced services to subscribers of the public switched telephone network is directly affected by the limitations of the public switched telephone network. In particular, the public switched telephone network operates according to a protocol that is specifically designed for the transport of voice signals; hence any modifications necessary to provide enhanced services can only be done by switch vendors that have sufficient know-how of the existing public switched telephone network infrastructure.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 1","FIG. 1"],"b":["10","12","14","16","18","16"]},"As shown in , the wireline subnetwork  includes telephony application servers  configured for providing voice applications  such as subscriber profile management, voice mail, call forwarding, etc. for the user devices , , and coupled to the wireline subnetwork . As recognized in the art, the telephony application servers  include advanced intelligent network (AIN) components such as services control point (SCP) directories and service nodes (SN) configured for controlling the telephony applications . The wireline subnetwork  also includes telephony access services  configured for providing the user devices , , and access to the wireline subnetwork using, for example, analog twisted pair connections or ISDN connections to a central office. The user devices , , and , illustrated as a cordless telephone , a fax machine with an attached telephone, and an analog telephone , are referred to herein as \u201cskinny clients\u201d, defined as devices that are able to interface with a user to provide voice and\/or data services (e.g., via a modem) but cannot perform any control of the application  or the protocol used to interface with the wireline subnetwork .","The wireless subnetwork includes wireless application servers , and wireless access services  for providing wireless voice and data services to the wireless user devices , , and . The wireless user devices , , and , illustrated as a cellular telephone (e.g., AMPS, TDMA, or CDMA) , a handheld computing device (e.g., a 3-Com Palm Computing or Windows CE-based handheld device) , and a pager , interact with the wireless application  based on respective wireless protocols controlled by the wireless access services . The wireless application servers  control wireless services such as home location register (HLR) management, and service node (SN) telephony applications. \u201cTiny clients\u201d are distinguishable from skinny clients in that the tiny clients tend to have even less functionality in providing input and output interaction with a user, and may not be able to send or receive audio signals such as voice signals at all. Examples of tiny clients include wireless user devices , , and , as well as function-specific terminal devices. Note that tiny clients tend to be one-way (receive-only or transmit-only) devices.","In both cases, however, both skinny clients and tiny clients have no control of the respective applications  and  that are running within the respective networks. Rather, the applications  and  are executed exclusively by the servers  and . Moreover, both skinny clients and tiny clients have no control of the access protocol used to access the respective subnetworks  and ; hence, the skinny clients and tiny clients are currently incapable of initiating access to another network using an alternative protocol, for example Internet protocol (IP). Consequently, the skinny clients and tiny clients rely exclusively on the service nodes of the servers  and  to provide the voice application services programmed in the applications  and , respectively. Although this exclusive control of the applications  and  by the servers  and  is advantageous in maintaining control over quality of service and reliability requirements, the applications  and  can only be developed and maintained by programmers having sufficient know-how of the public switched telephone network infrastructure. As a result, programmers familiar with open standards such as IP are unable to provide contributions in enhancing the applications  and  due to the limitations of the public switched telephone network paradigm.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2","b":["40","40","42","42","42","42","44","42","46","48","50","52","54","42","56","44","48","42","46"],"i":["a ","b ","a ","a ","b ","a "]},"The clients and , referred to herein as \u201cfat clients\u201d and \u201cthin clients\u201d, respectively, have the distinct advantage that they can initiate requests using IP protocol to any connected web server  to execute part or most of the applications  on behalf of the clients. An example of a fat client is an e-mail application on a PC that knows how to run the application  and knows how to run the IP protocols to communicate directly with the messaging server via the packet switched network . An example of a thin client is a PC that has a web browser; in this case, the web browser  can use IP protocols such as HTTP to receive and display web pages generated according to hypertext markup language (HTML) from server locations based on uniform resource locators (URLs) input by the user of the PC.","Hence, the web server paradigm enables the clients  to access any web server on the IP network . Moreover, the use of open protocols such as HTTP and HTML enable any client , regardless of its configuration, to access an HTML web page from a server that has no knowledge of the configuration of the requesting client; if the HTML web page received by the client includes information such as a specific HTML tag that is not recognizable by the browser , the browser  can merely ignore the unrecognized HTML tag.","Efforts at extending the voice applications  and  from the public switched telephone network to the IP network  have had limited success, primarily because the telephone protocols used in development of the applications  and  do not operate under the same paradigm as the IP network . For example, the telephony applications  and  are state aware, ensuring that prescribed operations between the application servers  or  and the user devices  occur in a prescribed sequence. For example, operations such as call processing operations, voicemail operations, call forwarding, etc., require that specific actions occur in a specific sequence to enable the multiple components of the public switched telephone network to complete the prescribed operations.","The applications  and  running in the IP network , however, are state-less: the applications  and , in response to reception of a specific request in the form of a URL from a client , instantiate a program configured for execution of the specific request, send an HTML web page back to the client , and end the program that executed the specific request. Although state information may be passed between the browser  and a web application  using a data file referred to as a \u201ccookie\u201d, some users prefer not to enable cookies on their browser ; in addition, the passing of a large amount of state information as would normally be required for voice-type applications between the browser  and the web application  would substantially reduce the bandwidth available for the client .","In addition, HTML does not provide the type of control that is necessary to support voice applications. Specifically, HTML was designed as a set of specifications for embedding instructions within text that specifies to a browser how the text should be presented to the user. Hence, HTML is particularly effective for presenting on a browser a web page having text and image data, or forms data. However, HTML does not provide good media control: if instructions are embedded within an HTML page, there is no guarantee that a browser will execute the embedded instructions as intended by the web page designer.","Hence, efforts have been made to integrate the telephony applications  and  directly onto the IP network  by developing protocol translators that provide a termination between the telephony applications servers  and  and the web application servers . One such proposal is referred to as voice over IP, where telephony data from the telephony applications  and  are repackaged into IP packets for transmission across the IP network . These efforts, however, still require programmers who have substantial know-how of the telephony applications  and  and the public switched telephone network infrastructure. Moreover, the repackaging of telephony data into IP packets creates substantial problems in transmission of the telephony data, since the transport of IP data packets is not sequential and synchronous, as required for the voice applications.","Another attempt at performing voice applications over an IP network involves rewriting the telephony applications  and  as scripts in extensible markup language (XML), and sending the XML scripts over the IP network to an interpreter that is coupled to a telephone. The interpreter then plays the received XML scripts for the telephone. However this approach merely transfers some application functionality from the telephony applications  and  to the interpreter, and still requires telephony application engineers to write XML scripts of the applications  and . Hence, the IP network is used only for transporting the XML scripts, and does not take advantage of the open standards-based flexibility of the IP network that has provided enormous growth in web infrastructure and Internet commerce.","There is a need for an arrangement that enables voice applications to be implemented on an IP packet switched network using the open standards-based flexibility of the IP network.","There is also a need for an arrangement that enables voice applications to be implemented using HTTP and HTML open standards, enabling development of voice applications by individuals that do not have expertise in the public switched telephone network. For example, there is a need for arrangement that enables voice applications to be designed by web programmers.","There is also a need for an arrangement that enables voice applications to be implemented using an IP network, without the necessity of the public switched telephone network.","There is also a need for an arrangement that enables unified voice messaging services to be provided via an IP network to any device having a browser, regardless of the configuration of that browser.","There is also a need for an arrangement that enables a web browser to provide advanced audio control features to enable voice enabled web applications from a web server to be presented to a user of the web browser.","These and other needs are attained by the present invention, where a web browser receives an HTML page having an XML element that defines data for an audio operation to be performed by an executable audio resource. The web browser selectively executes the audio operation based on whether the web browser detects the presence of the executable audio resource. If the web browser does not have the executable audio resource, then the web browser ignores the XML element, and merely presents any other recognized HTML tags. However if the web browser has access to an executable audio resource that understands the XML element, then the web browser executes the audio operation based on enhanced audio control specified by the XML element. Hence, a web browser can be used to provide enhanced voice control for voice enabled web applications, merely by possession of an executable audio resource that recognizes the XML element that specifies the enhanced audio control required for the audio operation to be performed.","According to one aspect of the present invention, a method is provided in a device configured for executing a web browser according to hypertext transport (HTTP) protocol. The method includes receiving a hypertext markup language (HTML) page, from an HTTP connection, having at least one extensible markup language (XML) element defining data for an audio operation to be performed by an executable audio resource, and selectively executing by the web browser the audio operation based on detection of the executable audio resource by the web browser. The reception of an HTTP page that includes an XML element defining data for an audio operation to be performed enables the browser to receive advanced audio control functions from a web server via an HTTP connection, without any modification to the web browser. Moreover, the selective execution by the web browser of the audio operation based on detection of the executable audio resource ensures that web browsers having access to the executable audio resource can provide voice enabled web application interactivity with a user, while web browsers that lack the executable audio resource can merely ignore the XML element without any adverse effects. Hence, web programmers can design voice enabled web applications that are executable on a web server and that interact with web browsers by sending HTML pages having XML element, and receiving data such as input digits or sound files from the web browser according to HTTP protocol.","Another aspect of the present invention provides a processor-based device configured for executing audio operations based on a hypertext markup language (HTML) page received from a server according to hypertext transport protocol (HTTP). The device includes a web browser configured for selectively interpreting the HTML page, the HTML page including at least one of HTML tags and an XML element that defines data for an audio operation to be performed by an executable audio resource. The web browser selectively executes the audio operation specified by the XML element based on a determined presence of the executable audio resource by the web browser.","Additional advantages and novel features of the invention will be set forth in part in the description which follows and in part will become apparent to those skilled in the art upon examination of the following or may be learned by practice of the invention. The advantages of the present invention may be realized and attained by means of instrumentalities and combinations particularly pointed out in the appended claims.","The disclosed embodiment is directed to an arrangement for providing unified voice messaging services and data services via an IP network using a web browser having audio control for voice enabled web applications. The ability to provide unified voice messaging services via an IP network enables existing web servers on the World Wide Web or in corporate intranets to support telephone applications on a scalable and economic platform. Moreover, providing unified voice messaging services via an IP network enables use of open standards that permits web programmers to use existing web programming techniques to design and implement voice telephone applications.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 3","FIG. 3"],"b":["60","42","42","56","42","42"],"i":["a ","b ","a ","b "]},"The skinny clients , , and and the tiny clients , , and also have access to the unified voice messaging services in the unified network  by accessing a proxy browser , configured for providing an IP and HTTP interface for the skinny clients and the tiny clients. In particular, browsers operate by interpreting tags within a web page supplied via an HTTP connection, and presenting to a user media content information (e.g., text, graphics, streaming video, sound, etc.) based on the browser capabilities; if a browser is unable to interpret a tag, for example because the browser does not have the appropriate executable plug-in resource, then the browser typically will ignore the unknown tag. Hence, the proxy browser  can provide to each of the skinny clients and tiny clients the appropriate media content based on the capabilities of the corresponding client, such that the cordless telephone and telephone would receive analog audio signals played by the proxy browser  and no text information (unless a display is available); the fax machine and pager would only receive data\/text information, and the cellular telephone and the handheld computing device would receive both voice and data information. Hence, the proxy browser  interfaces between the IP network and the respective local access devices for the skinny clients and the tiny clients to provide access to the unified messaging network .","The proxy browser  and the web browsers  within the fat client and the thin client execute voice enabled web applications by sending data and requests to a web server , and receiving hypertext markup language (HTML) web pages from the web server , according to hypertext transport protocol (HTTP). The web server  may be similar to the web application server  of  by providing proxy application services for web clients. However, the web server  preferably serves as an interface between the browsers and an application server  that provides an executable runtime environment for XML voice applications . For example, the web server  may access the application server  across a common Gateway Interface (CGI), by issuing a function call across an application programming interface (API), or by requesting a published XML document or an audio file requested by one of the browsers  or . The application server , in response to receiving a request from the web server , may either supply the requested information in the form of an HTML page having XML tags for audio control by a voice resource within the browser, or may perform processing and return a calculated value to enable the browser  or  to perform additional processing. In particular, the application server  may either access static XML pages, or the application server  may access stored XML application pages (i.e., pages that define an application) and in response generate new XML pages during runtime and supply the generated XML pages to the web server . Since multiple transactions may need to occur between the browser  or  and the application server , the application server  may store for each existing session a data record, referred to as a \u201cbrownie\u201d, that identifies the state of the existing session; hence, the application server  can instantiate a procedure, return the necessary data, and terminate the procedure without the necessity of maintaining the instance running throughout the entire user session.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 4","FIG. 3","FIG. 4"],"b":["60","70","72","74","76","78"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":["42","42","64","82","84","42","64","42","56","86","42","64","10","87","88","64","89","90"],"i":["b ","a","b ","b ","b ","a "]},"Since the skinny clients and tiny clients  do not have browser resources, the skinny clients and tiny clients  access the proxy browser  via the PSTN  and the IP gateway . The IP gateway includes both a proxy browser  and a voice resource , enabling the IP gateway  to provide all audio control service for the skinny clients and tiny clients . Hence, the PSTN  is used merely for transfer of analog audio signals, with intelligent application processing being provided by the proxy browser . Note that if one of the telephones \u2032 is an IP telephone, then it can access the server  via an IP connection ; in this case, the browser internal to the IP telephone \u2032 would process only audio functions, and would ignore any tags associated with text or image content.","As shown in , the web server , the application server , and the voice web applications  reside within a gateserver . The gateserver  includes a browser based XML editor tool  that enables a web programmer to design voice applications using XML pages, described below. The XML pages are stored as XML applications and functions , for example within a database accessible by the application server . The XML pages stored within the XML application and functions  may be stored as static pages to be fetched by the web server  and supplied to a browser, however the XML pages may also define the actual application to be executed by the application server  in runtime. Hence, the application server  may execute stored XML applications and functions , and in response generate dynamic HTML having XML tags, also referred to as HTML\/XML pages.","According to the disclosed embodiment, the browsers  and  provide audio control for voice enabled web applications based on the HTML-XML pages supplied by the application server  to the web server  for transport across an HTTP connection. The browsers  and , as well as the voice resources , can be implemented as computer code that is stored on a computer readable medium (e.g., a hard disk drive, a floppy drive, a random access memory, a read only memory, an EPROM, a compact disk, etc). The following description elaborates on the combination of XML tags within HTML pages, enabling the voice resources  to provide browser audio control for voice enabled web applications.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIGS. 5A and 5B","b":["56","62","86","66","86","66"]},"As shown in , a set of XML tags may be generated, by the application server , that provide a set of controls for a plug-in resource. For example, the XML tag  specifies plug-in control elements to be used for controlling an XML aware plug-in resource. The plug-in control elements include a prompt list  that includes an attribute (prefetch) that instructs the plug-in resource  to automatically fetch the prompts  and , identified as audio files \u201cwav1.wav\u201d and \u201cwav2.wav\u201d, from the application server  and play them sequentially as prompts. Note that conventional HTML web browsers could not execute more than one audio file at a time, since the browser would not know whether to play all the audio files simultaneously, or interrupt the playing of one audio file with another audio file, or play only one of the audio files. The extensible nature of XML elements, however, enables attributes to be defined for each XML element; hence, the XML aware plug-in resource  knows that it needs to prefetch all the .wav files specified in XML tags  and , and play them in sequence.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 5B","FIG. 5A","FIG. 5B"],"b":["104","106","108","56","108","104","106","104","106"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 5A","b":["110","112","86"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 6","b":["120","56","62","64","120","64","66","122","66","190","64","190","56","62","122"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 7","FIG. 7"],"b":["190","122","190","190","200","202","204","206","86"]},"The browser  or  parses the HTML contents in step . Specifically, the browser fetches the audio file \u201cwavfile.wav\u201d from the web server  and begins to play the file, for example as a welcome greeting. The browser  or  also may post to a standard URL to obtain a session identifier for use during user interaction with the application server . Upon receiving the audio file, the browser instantiates and audio plug-in resource in step . Alternatively, if the web page  includes an embedded audio resource, for example an embedded Java applet (not shown) configured for execution of XML documents, the browser instantiates the embedded Java applet for XML control in step .","Once the browser has initiated execution of the plug-in resource, then the plug-in resource is able to parse the XML portion  if the plug-in resource is XML control aware in step . If the plug-in resource is not XML control aware, but rather is a standard audio plug-in resource, then the browser  or  merely displays the HTML page within the browser window and plays the embedded audio file in step , disregarding the XML portion . However if the plug-in resource is XML control aware (or an XML aware Java applet is instantiated in step ), then the XML aware audio resource  begins to play the audio files \u201cwavurl1\u201d and \u201cwavurl2\u201d in the prescribed sequence in step . For example, the XML aware audio resource  (e.g., the plug-in resource or the Java applet) plays a \u201cGood Morning\u201d prompt for wavurl1 and \u201cEnter Your Phone Number followed by the Pound (#) Key\u201d prompt for wavurl2, while waiting for an input pattern ([0-9] {7,9}#). This exemplary pattern ([0-9] {7,9}#) specifies to the XML aware audio resource  that a valid input is composed of any string of the characters 0 through 9 for a length of 7 to 9 digits, followed by a pound key. The XML aware audio resource  continues to play the audio files in the prescribed sequence while waiting in step  for the user to input a key entry. The browser matches the user input to the input pattern, and posts the data to the voice application URL (see step ).","The audio resource  then checks in step  whether there is a record operation, as specified in the XML element , that is pending. If no record is pending, then the browser  posts to the voice application URL. Hence, the browser  can provide the appearance to the user that pressing a \u201chot key\u201d causes an immediate response in the browser  to play another audio file, when actually the browser  merely posts the \u201chot key\u201d input to the voice application URL, causing the server  to return another HTML\/XML page including the sound to be played. Hence, the audio resource  does not need any intelligence in regards to digits pressed, other than to post the digits to the server.","If a record operation is pending, the audio resource  begins recording in step , for example by playing a tone to signal the user to begin speaking. The audio resource  continues to record in step  until a timeout occurs (e.g., 30 seconds), or the user enters a key indicating recording should be halted.","After recording the audio message spoken by the user, the browser  or  posts the data to the web server  in a prescribed sequence. Specifically, providing a user with the experience of a voice mail type application requires that certain operations be performed in a prescribed sequence; if the user presses a \u201c1\u201d to replay what has been recorded, then the recorded audio file must be posted to the application server  before the user input \u201c1\u201d is supplied, otherwise the application server  would not be able to replay the recorded audio file. Hence, the audio resource  \u201cquietly\u201d posts the recorded audio file to the \u201cupload URL\u201d specified in the record tag  in step . The browser then posts the user input (e.g., as specified in the HTML form ) to another URL specified within the HTML form  in step .","According to the disclosed embodiment, advanced audio control is provided to a web browser by supplying in HTML page having an XML element that defines an audio operation to be performed by an executable audio resource. If the web browser does not have access to an executable audio resource that recognizes the XML element, then the web browser can merely disregard the XML element. However, use of an executable audio resource that is XML aware provides precise audio control between the web browser and the application server across an HTTP connection, enabling use of voice enabled web applications according to an open protocol. Hence, web programmers can now develop their own unified voice messaging systems using conventional web application development techniques, enabling users to personalize their voice mail systems or to develop more sophisticated web messaging systems between multiple users across the World Wide Web.","While this invention has been described in connection with what is presently considered to be the most practical and preferred embodiment, it is to be understood that the invention is not limited to the disclosed embodiments, but, on the contrary, is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Reference is made to the attached drawings, wherein elements having the same reference numeral designations represent like elements throughout and wherein:",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 7","FIG. 6"]}]},"DETDESC":[{},{}]}
