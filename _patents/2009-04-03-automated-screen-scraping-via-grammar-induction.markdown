---
title: Automated screen scraping via grammar induction
abstract: A method and a computer-readable medium are provided which perform screen scraping via grammar induction. The computer-readable medium stores instructions of the method, the instructions directing a computer processor to intercept display information transmitted to a computer-implemented display device representing information stored in a data source; induce a grammar via statistical analysis of the intercepted display information; provide the grammar to a parser-generator to generate a parser corresponding to the induced grammar; and perform screen scraping using the generated parser.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08838625&OS=08838625&RS=08838625
owner: Yahoo! Inc.
number: 08838625
owner_city: Sunnyvale
owner_country: US
publication_date: 20090403
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF INVENTION","SUMMARY OF INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of Invention","Aspects of embodiments relate to information processing. More particularly, aspects of embodiments relate to determining information content displayed by users of information processing systems including diverse sources of information and diverse display systems and methods.","2. Discussion of Related Art","Users of large networks, such as the Internet, interact with large numbers of diverse programs for generating, storing, communicating and otherwise manipulating user generated content. For example, a user of a social networking Internet site or component of a site may store contact information for their contacts in records on the site that include fields like name, address, and multiple phone numbers. A user of a photo\/video Internet site or component of a site may store photo or video records that include the image data, tags, descriptions and comments. These user-generated contents are of diverse types and varying formats. Moreover, the structures and mark-up of the content can change frequently. For various purposes, including further manipulation of the information or data collection regarding the information, determining the structure and content of the information may be desired.","To manually induce the structure is not only tedious, but also very error-prone. Given the large number of data sources and the extreme diversity of structure used by them, a lot of computer and\/or human time is required to analyze the data sources individually.","Normally, data transfer between programs is accomplished using data structures suited for automated processing by computers, not people. Such interchange formats and protocols are typically rigidly structured, well-documented, easily parsed, and keep ambiguity to a minimum. Very often, these transmissions are not human-readable at all.","In contrast, output intended to be human-readable is often the antithesis of this, with display formatting, redundant labels, superfluous commentary, hidden and embedded metadata and other information which is either irrelevant or inimical to automated processing. However, if the person, entity or computer program seeking to analyze data being transferred from one program to another or from an Internet site to a user can only intercept such human-oriented display data, screen scraping may be employed. In order to perform screen scraping, the structure of the display information must be known so that the content can be successfully parsed.","Aspects of embodiments are advantageous because they automate a very tedious process, and significantly reduce human error. Moreover, aspects of embodiments can monitor data sources to automatically detect structural and syntactic changes at the data sources; and, dynamically update processes which extract useful information from the data sources.","According to an embodiment, display information transmitted to a computer-implemented display device representing information stored in a data source is intercepted; a grammar is induced via statistical analysis of the display information; the grammar is provided to a parser-generator to generate a parser corresponding to the induced grammar; and, the generated parser performs screen scraping using the generated parser.","According to another embodiment, a computer-readable medium is provided. The computer-readable medium stores instructions directing a computer processor to intercept display information transmitted to a computer-implemented display device representing information stored in a data source; induce a grammar via statistical analysis of the intercepted display information; provide the grammar to a parser-generator to generate a parser corresponding to the induced grammar; and perform screen scraping using the generated parser.","According to aspects of embodiments, a computer-implemented method of extracting information from a data source includes: intercepting display information transmitted to a computer-implemented display device representing information stored in a data source; inducing a grammar via statistical analysis of the intercepted display information; generating a parser corresponding to the induced grammar; and performing screen scraping using the generated parser to produce a sequence of return values representing the extracted information.","According to variations on these aspects of embodiments, inducing a grammar further comprises: tokenizing the text; counting occurrences of each token; forming a histogram of tokens according to the frequency of each token; and segmenting the text into records starting with tokens with lower frequency. According to another variation, inducing a grammar further comprises: recursively segmenting the records to identify the underlying hierarchical structure. In another variation, generating the parser further comprises: receiving the induced grammar; representing the induced grammar using a regular language; and programming state transitions of a finite state machine to correspond to relationships represented in the regular language. In another variation, generating the parser further comprises: receiving additional annotations which specify fields to extract and how the fields map to the return values. According to yet another variation, screen scraping further comprises: receiving the intercepted display information as an input to the finite state machine; and producing the return values representing the extracted information.","According to other aspects of embodiments, there is provided a computer-readable medium in which are stored instructions directing a computer processor to: intercept display information transmitted to a computer-implemented display device representing information stored in a data source; induce a grammar via statistical analysis of the intercepted display information; provide the grammar to a parser-generator to generate a parser corresponding to the induced grammar; and perform screen scraping using the generated parser.","According to variations on these aspects of embodiments, inducing a grammar further comprises: tokenizing the text; counting occurrences of each token; forming a histogram of tokens according to the frequency of each token; and segmenting the text into records starting with tokens with lower frequency. According to another variation, inducing a grammar further comprises: recursively segmenting the records to identify the underlying hierarchical structure. In another variation, generating the parser further comprises: receiving the induced grammar; representing the induced grammar using a regular language; and programming state transitions of a finite state machine to correspond to relationships represented in the regular language. In another variation, generating the parser further comprises: receiving additional annotations which specify fields to extract and how the fields map to the return values. According to yet another variation, screen scraping further comprises: receiving the intercepted display information as an input to the finite state machine; and producing the return values representing the extracted information.","According to yet other aspects of embodiments, apparatus for extracting information from a computer-based data source comprises: means for intercepting display information transmitted to a computer-implemented display device representing information stored in a data source; and a computer processor executing a sequence of instructions configuring the computer processor as: a grammar inducer producing a representation of a hierarchy as segmented records defined using a regular language; a parser-generator receiving the segmented records defined using the regular language and configured to generate a parser corresponding thereto; and a screen scraper configured to extract the information from the intercepted display information using the generated parser.","According to variations on these aspects of embodiments, the sequence of instructions for the grammar inducer further comprises configuring the processor to perform: tokenizing the text; counting occurrences of each token; forming a histogram of tokens according to the frequency of each token; and segmenting the text into records starting with tokens with lower frequency. According to another variation, the sequence of instructions for the grammar inducer further comprises configuring the processor to perform: recursively segmenting the records to identify the underlying hierarchical structure. According to yet another variation, the sequence of instructions for the parser-generator further comprises configuring the processor to perform: receiving the induced grammar; representing the induced grammar using a regular language; and programming state transitions of a finite state machine to correspond to relationships represented in the regular language. According to a further variation, the sequence of instructions for the parser-generator further comprises configuring the processor to perform: receiving additional annotations which specify fields to extract and how the fields map to the return values. According to yet a further variation, the sequence of instructions for the screen scraper further comprises configuring the processor to perform: receiving the intercepted display information as an input to the finite state machine; and producing the return values representing the extracted information.","This invention is not limited in its application to the details of construction and the arrangement of components set forth in the following description or illustrated in the drawings. The invention is capable of other embodiments and of being practiced or of being carried out in various ways. Also, the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of \u201cincluding,\u201d \u201ccomprising,\u201d or \u201chaving,\u201d \u201ccontaining\u201d, \u201cinvolving\u201d, and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items.","Obtaining foreknowledge of the structure of display information has been a problem, in view of the constant evolution of programs and Internet sites to handle varying types of user generated content. Indeed, operators of some Internet sites may deliberately alter the layout and other presentation details of their sites specifically to, among other things, avoid the extraction of data from the information in human readable form.","Computer System","Various aspects and functions described herein in accord with the present invention may be implemented as hardware or software on one or more computer systems. There are many examples of computer systems currently in use. Some examples include, among others, network appliances, personal computers, workstations, mainframes, networked clients, servers, media servers, application servers, database servers and web servers. Other examples of computer systems may include mobile computing devices, such as cellular phones and personal digital assistants, and network equipment, such as load balancers, routers and switches. Additionally, aspects in accord with the present invention may be located on a single computer system or may be distributed among a plurality of computer systems connected to one or more communication networks.","For example, various aspects and functions may be distributed among one or more computer systems configured to provide a service to one or more client computers, or to perform an overall task as part of a distributed system. Additionally, aspects may be performed on a client-server or multi-tier system that includes components distributed among one or more server systems that perform various functions. Thus, the invention is not limited to executing on any particular system or group of systems. Further, aspects may be implemented in software, hardware or firmware, or any combination thereof. Thus, aspects in accord with the present invention may be implemented within methods, acts, systems, system elements and components using a variety of hardware and software configurations, and the invention is not limited to any particular distributed architecture, network, or communication protocol.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1","b":["100","100","100","102","104","106","102","104","106","108","108","108","102","104","106","108","102","104","106","108","100","100"]},"Various aspects and functions in accord with the present invention may be implemented as specialized hardware or software executing in one or more computer systems including a computer system  shown in . As depicted, the computer system  includes a processor , a memory , a bus , an interface  and a storage system . The processor , which may include one or more microprocessors or other types of controllers, can perform a series of instructions that result in manipulated data. The processor  may be a commercially available processor such as an Intel Pentium, Motorola PowerPC, SGI MIPS, Sun UltraSPARC, or Hewlett-Packard PA-RISC processor, but may be any type of processor or controller as many other processors and controllers are available. As shown, the processor  is connected to other system elements, including a memory , by the bus .","The memory  may be used for storing programs and data during operation of the computer system . Thus, the memory  may be a relatively high performance, volatile, random access memory such as a dynamic random access memory (DRAM) or static memory (SRAM). However, the memory  may include any device for storing data, such as a disk drive or other non-volatile storage device. Various embodiments in accord with the present invention can organize the memory  into particularized and, in some cases, unique structures to perform the aspects and functions disclosed herein.","Components of the computer system  may be coupled by an interconnection element such as the bus . The bus  may include one or more physical busses (for example, busses between components that are integrated within a same machine), but may include any communication coupling between system elements including specialized or standard computing bus technologies such as IDE, SCSI, PCI and InfiniBand. Thus, the bus  enables communications (for example, data and instructions) to be exchanged between system components of the computer system .","The computer system  also includes one or more interface devices  such as input devices, output devices and combination input\/output devices. The interface devices  may receive input or provide output. More particularly, output devices may render information for external presentation. Input devices may accept information from external sources. Examples of interface devices include, among others, keyboards, mouse devices, trackballs, microphones, touch screens, printing devices, display screens, speakers, network interface cards, etc. The interface devices  allow the computer system  to exchange information and communicate with external entities, such as users and other systems.","The storage system  may include a computer readable and writeable nonvolatile storage medium in which instructions are stored that define a program to be executed by the processor. The storage system  also may include information that is recorded, on or in, the medium, and this information may be processed by the program. More specifically, the information may be stored in one or more data structures specifically configured to conserve storage space or increase data exchange performance. The instructions may be persistently stored as encoded signals, and the instructions may cause a processor to perform any of the functions described herein. The medium may, for example, be optical disk, magnetic disk or flash memory, among others. In operation, the processor  or some other controller may cause data to be read from the nonvolatile recording medium into another memory, such as the memory , that allows for faster access to the information by the processor than does the storage medium included in the storage system . The memory may be located in the storage system  or in the memory . The processor  may manipulate the data within the memory , and then copy the data to the medium associated with the storage system  after processing is completed. A variety of components may manage data movement between the medium and integrated circuit memory element and the invention is not limited thereto. Further, the invention is not limited to a particular memory system or storage system.","Although the computer system  is shown by way of example as one type of computer system upon which various aspects and functions in accord with the present invention may be practiced, aspects of the invention are not limited to being implemented on the computer system as shown in . Various aspects and functions in accord with the present invention may be practiced on one or more computers having a different architectures or components than that shown in . For instance, the computer system  may include specially-programmed, special-purpose hardware, such as for example, an application-specific integrated circuit (ASIC) tailored to perform a particular operation disclosed herein. While another embodiment may perform the same function using several general-purpose computing devices running MAC OS System X with Motorola PowerPC processors and several specialized computing devices running proprietary hardware and operating systems.","The computer system  may include an operating system that manages at least a portion of the hardware elements included in computer system . A processor or controller, such as processor , may execute an operating system which may be, among others, a Windows-based operating system (for example, Windows NT, Windows 2000 (Windows ME), Windows XP, or Windows Vista) available from the Microsoft Corporation, a MAC OS System X operating system available from Apple Computer, one of many Linux-based operating system distributions (for example, the Enterprise Linux operating system available from Red Hat Inc.), a Solaris operating system available from Sun Microsystems, or a UNIX operating systems available from various sources. Many other operating systems may be used, and embodiments are not limited to any particular operating system.","The processor and operating system together define a computing platform for which application programs in high-level programming languages may be written. These component applications may be executable, intermediate (for example, C# or JAVA bytecode) or interpreted code which communicate over a communication network (for example, the Internet) using a communication protocol (for example, TCP\/IP). Similarly, aspects in accord with the present invention may be implemented using an object-oriented programming language, such as SmallTalk, JAVA, C++, Ada, or C# (C-Sharp). Other object-oriented programming languages may also be used. Alternatively, procedural, scripting, or logical programming languages may be used.","Additionally, various aspects and functions in accord with the present invention may be implemented in a non-programmed environment (for example, documents created in HTML, XML or other format that, when viewed in a window of a browser program, render aspects of a graphical-user interface or perform other functions). Further, various embodiments in accord with the present invention may be implemented as programmed or non-programmed elements, or any combination thereof. For example, a web page may be implemented using HTML while a data object called from within the web page may be written in C++. Thus, the invention is not limited to a specific programming language and any suitable programming language could also be used.","A computer system included within an embodiment may perform functions outside the scope of the invention. For instance, aspects of the system may be implemented using an existing commercial product, such as, for example, Database Management Systems such as SQL Server available from Microsoft of Seattle Wash., Oracle Database from Oracle of Redwood Shores, Calif., and MySQL from Sun Microsystems of Santa Clara, Calif. or integration software such as WebSphere middleware from IBM of Armonk, N.Y. However, a computer system running, for example, SQL Server may be able to support both aspects in accord with the present invention and databases for sundry applications not within the scope of the invention.","Example System Architecture",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 2"],"b":["200","200","202","204","206","208","210","212","204","208","206","206","208","210","212","212","212"]},"The sundry computer systems shown in , which include the computer system , the content delivery engine , the content management system , and the network  each may include one or more computer systems. As discussed above with regard to , computer systems may have one or more processors or controllers, memory and interface devices. The particular configuration of system  depicted in  is used for illustration purposes only and embodiments of the invention may be practiced in other contexts. Thus, the invention is not limited to a specific number of users or systems.","In various embodiments, the content delivery engine  includes facilities configured to provide requested content to users. In the illustrated embodiment, the content delivery engine  can provide the access interface  to the user . The access interface  may include facilities configured to allow the user  to search, select and review a variety of content, including content created by other users and made available through a social networking site. For example, in one embodiment, the access interface  can provide, within a set of search results, navigable links to documents or other content available from one or more of a wide variety of websites connected to the network . In other embodiments, the access interface  can provide links to documents stored in the content delivery engine .","Aspects of embodiments first send out a request for information from the content delivery engine , for example in the form of a message using one of the conventional http, https, pop, etc. protocols. The exemplary protocols http and https are hypertext transfer protocols (unsecure and secure, respectively) used on computer networks to transfer hypertext documents, for example between content servers and client applications (e.g. content consumers such as browser applications). The pop protocol is a post office protocol used on computer networks to transfer electronic mail information between email systems, such as email servers and email clients (e.g. Outlook or Outlook Express). Other protocols having other applications can also be used. In response to the request, a response from the service, e.g., mail, address book, or social network site, etc. is returned, also using one of the http, https, pop, etc. protocols. That response is processed according to the methods next described.","Without loss of generality, some computer-implemented aspects of embodiments, such as shown in , include a process  having three elements. The process begins . First, a grammar is induced , via statistical analysis of text requested from a service using one of the protocols referred to above and transmitted to a display, for example as a formatted HTML page returned to a browser window using one of the protocols referred to above. Second, the grammar is fed into a parser-generator to generate a parser, . Third, the generated parser performs screen scraping, . The process  then concludes, . The elements of this method are described now in greater detail.","The grammar of a message defines how to break up a message into its component parts. One representation of breaking up a message into its component parts is as a data structure. The parts may include content data, formatting data, and other data elements. Parsing identifies those parts of a message that are of interest, and what they signify. The actual meaning extracted from a part of the message identified as \u201cof interest\u201d is contained in the information or value conveyed by that part, as that information or value relates to the significance of the part. As an example, suppose a received message is an address book entry, including (among other things) message components representing information signifying First Name, Last Name, Email and Phone for a person. Grammar induction identifies the four components (as well as any others); the parser generator identifies by their significance the components desired to be extracted (e.g. First Name, Last Name and Phone, but not Email, if such is the subset desired) and creates a parser to do so; and the parser so generated then operates on received messages of this type to extract First Name, Last Name and Phone information in response to suitable queries.","Grammar induction and parser generation is most easily employed when a known input and a corresponding known output are available. The processes described below can proceed iteratively, with corrections between iterations, until the known input produces the correct known output. Iterations can be performed automatically using known artificial intelligence principles, or can be performed with the assistance of a human user who recognizes correct and incorrect results and instructs the system accordingly. The result of these two processes is an identification of the organization of meaning within a message (i.e., the grammar) and identification within the organization of meaning of those elements of meaning that are of interest in a particular application, along with the means to extract that meaning (i.e., the generated parser).","Grammar Induction","To automatically induce grammar, a statistical method is employed. As shown in , one way to induce the grammar of a text  is as follows. When a screen of text is received, the process begins .\n\n","The process ends  when the underlying hierarchy has been fully identified through the recursive segmentation .","Other statistical methods can alternatively be employed to identify the hierarchical structure underlying displayed information. In the aspects of embodiments illustrated herein the hierarchical structure is identified through its description by a regular language, however that structure is ultimately derived and identified. In computer science, a regular language is a formal language that can be accepted by a deterministic or non-deterministic finite state machine, and which therefore can be interpreted by such a machine.","Text is represented in computer systems such as described above by strings of characters encoded for processing by the computer system. As in written human language, in which the text will ultimately be displayed, elements of text are composed of such strings of characters, separated from each other by special characters which may be variously known as \u201cwhitespace,\u201d \u201cpunctuation,\u201d \u201ccontrol\u201d or other separating characters known in this art. Tokenizing the text involves first identifying, using the separating characters as boundaries, individual elements of the text, for example words or numbers. Using the frequency analysis described above, the hierarchical structure of the text can be identified, permitting the tokens to be placed into a framework of segmented records, groups of records (e.g., tables or arrays), super-groups of records (e.g., pages, workbooks or schema), etc. The text is segmented recursively to determine the hierarchy. It is the relationship between the hierarchical structure (i.e., the segmented records and their relationships) and the text within that structure which gives the text as a whole meaning to the human viewing the text on a display or printed page, and which admits of representation by a regular language. Thus, once these elements are determined, a finite-state machine or other mechanism can be set up to similarly extract meaning from the text and hierarchy.","Parser Generation","Given that the structure and hierarchy of a human-readable screen full of text is represented as described above by a regular language, the parser can be based on a finite state machine, i.e., a finite automaton. Although the present example employs such a finite state machine, other programming constructs can be used to represent the structure of the user generated contents, if desired.","The parser generator process , which begins at , is shown in .","The parser generator receives the induced grammar as represented by the segmented records, , represents that segmented record structure as a regular language, , and programs state transitions of a finite state machine to represent the relationships defined by that regular language, . In addition to the induced grammar, the parser-generator also receives as input additional annotations, . These annotations specify which fields to extract and how these fields map to the return values of the screen scrapper. The additional annotations can be provided by a user employing their a priori knowledge of the information expected from a particular source, or can be derived automatically from information contained in the text or its structure, such as labels indicating the presence of one or another type of field.","The programming of the finite state machine can proceed deterministically, without further manual intervention if enough initial information is provided to define the desired output, so the programming facility can recognize the correct result. The initially-provided information can also enable the programming facility to define formatting or transformation options, such as when a field designated \u201cSurname\u201d should map to a field designated \u201cLast Name\u201d and when it should instead map to a field designated \u201cFirst Name\u201d in a particular application.","Once the finite state machine is programmed the process concludes, .","It should be noted that the description of a human-readable screen full of text, or any other message type to be parsed, by a regular language is not a requirement. In practice, less structured or semi-structured data can be parsed using methods according the aspects of embodiments. For example, in response to some queries, some applications may return items with varying grammar, such as when some items in a catalog have descriptions while others do not, or such as when some items in a catalog have a price while others do not, or even such as when some items have a price range rather than a single value for price. Grammar can be induced from regular language (which is context-free) or from irregular language (which is context-sensitive); and, a suitable parser generated from either, simply by producing a state machine having extra states to recognize the context.","Screen Scraping Via Auto-Generated Parser","Given the state-machine based parser generated by the parser-generator, as shown in , screen scraping  is straightforward. The process begins . The information displayed is simply applied as an input to the finite state machine, , which produces as a sequential output a series of return values representing the data to be extracted from the information displayed, . Once the information has been extracted, the process concludes, .","In an alternative application of aspects of embodiments, changes to the underlying data source and its interface can be detected. Assume that a data source has been queried, a response has been returned and a grammar has been induced and\/or a parser generated according to the techniques described above. In such a case, if the data source is queried again, any differences between the previously induced grammar or the previously generated parser and a newly induced grammar or a newly generated parser indicate corresponding changes to the underlying data source and\/or its interface. If the same query of the data source is expected to yield the same data, any differences between what was returned the first time and what was returned during a subsequent query are readily processed into differences in either induced grammar or generated parser. Even if there is no expectation that identical data will be contained in the result, grammar induction and parser generation will identify differences in the structures through which the data is represented.","Embodiments of aspects have application in numerous different contexts. Some aspects may be used to grab information posted to popular social network web sites such as Facebook and MySpace address lists. Other aspects may be used to extract a particular user's uploads, or uploads bearing particular tags, from user-content web sites such as Flickr or YouTube. A particular user's reviews can be extracted from various rating or review web sites. Both catalog web sites and price comparison web sites are susceptible to extraction of information using aspects of embodiments. Indeed, information can be extracted from any web site or other message source returning structured or semi-structured messages in response to queries.","Having thus described several aspects of at least one embodiment of this invention, it is to be appreciated various alterations, modifications, and improvements will readily occur to those skilled in the art. Such alterations, modifications, and improvements are intended to be part of this disclosure, and are intended to be within the spirit and scope of the invention. Accordingly, the foregoing description and drawings are by way of example only."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["The accompanying drawings are not intended to be drawn to scale. In the drawings, each identical or nearly identical component that is illustrated in various figures is represented by a like numeral. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
