---
title: System and method for an access layer application programming interface for managing heterogeneous components of a storage area network
abstract: Embodiments of an application programming interface (API) for a Storage Area Network (SAN) access layer. A SAN may include a SAN access layer as an interface between SAN components and client applications. A SAN access layer API may be provided which enables a client application to access SAN access layer functionality such as storage management and configuration services. Through the SAN access layer API, a client application may invoke some or all of the functionalities of the SAN access layer. The SAN access layer may provide SAN information gathered from the SAN to the client application through the SAN access layer API. Embodiments of the SAN access layer API may provide security and licensing restrictions to client applications. Embodiments of the SAN access layer API may encapsulate message conversion and network transport functions so that client application developers are not required to implement these functions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07401338&OS=07401338&RS=07401338
owner: Symantec Operating Corporation
number: 07401338
owner_city: Mountain View
owner_country: US
publication_date: 20020927
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EMBODIMENTS","CONCLUSION"],"p":["1. Field of the Invention","This invention is related to the field of storage management and, more particularly, to software used in management of storage area networks.","2. Description of the Related Art","In the past, large organizations relied heavily on parallel SCSI (Small Computer System Interface) technology to provide the performance required for their enterprise data storage needs. More recently, organizations are recognizing that the restrictions imposed by SCSI architecture are too costly for SCSI to continue as a viable solution. Such restrictions include the following:\n\n","One solution has been to create technology that enables storage arrays to reside directly on the network, where disk accesses may be made directly rather than through the server's SCSI connection. This network-attached storage (NAS) model eliminates SCSI's restrictive cable distance, signal timing, and termination requirements. However, it adds a significant load to the network, which frequently is already starved for bandwidth. Gigabit Ethernet technology only alleviates this bottleneck for the short term, so a more elegant solution is desirable.","The storage area network (SAN) model places storage on its own dedicated network, removing data storage from both the server-to-disk SCSI bus and the main user network. This dedicated network most commonly uses Fibre Channel technology, a versatile, high-speed transport. The SAN includes one or more hosts that provide a point of interface with LAN users, as well as (in the case of large SANs) one or more fabric switches, SAN hubs and other devices to accommodate a large number of storage devices. The hardware (e.g. fabric switches, hubs, bridges, routers, cables, etc.) that connects workstations and servers to storage devices in a SAN is referred to as a \u201cfabric.\u201d The SAN fabric may enable server-to-storage device connectivity through Fibre Channel switching technology to a wide range of servers and storage devices.","The versatility of the SAN model enables organizations to perform tasks that were previously difficult to implement, such as LAN-free and server-free tape backup, storage leasing, and full-motion video services. SAN deployment promises numerous advantages, including cost management through storage consolidation, higher availability of data, better performance and seamless management of online and offline data. In addition, the LAN is relieved of the overhead of disk access and tape backup, data availability becomes less server-dependent, and downtime incurred by service and maintenance tasks affects more granular portions of the available storage system.","Embodiments of an application programming interface (API) for a Storage Area Network (SAN) access layer are described. A SAN may include a SAN access layer, for example on a host in the SAN, that may serve as an interface between SAN components (hardware and\/or software) and client applications of the SAN system. A SAN access layer API may be provided which enables a client application to access SAN access layer functionality such as storage management and configuration services. Through the SAN access layer API, the client application may invoke some or all of the functionalities of the SAN access layer including one or more of, but not limited to, discovering interconnect (fabric) elements such as switches, storage devices, hosts, and SAN application information, and performing access control configuration and other management operations on the SAN. The SAN access layer may provide SAN information gathered from the SAN to the client application through the SAN access layer API.","Third-party client applications may desire to use portions of the discovery and configuration services that the SAN access layer provides. In one embodiment, the SAN access layer may provide an interface to full functionality of the SAN access layer. In one embodiment, the interface to the SAN access layer may provide limited or no security and\/or license enforcement. In one embodiment, the SAN access layer API may expose a portion of the functionality of the SAN access layer to client-applications, and may also provide security and licensing restrictions to the client applications. In one embodiment, components of a SAN system including a SAN access layer such as a SAN management system may also leverage the SAN access layer API to access the SAN access layer.","In one embodiment, to use the interface provided by the SAN access layer, a client application may be required to use a parser (e.g. an XML parser) to translate messages received from the SAN access layer interface into format(s) compatible with the client application, and to convert messages in format(s) compatible with the client application into format(s) compatible with the SAN access layer interface. Further, the client application may be required to provide network transport (e.g. TCP\/IP) to a particular socket of the SAN access layer. Embodiments of the SAN access layer API may encapsulate the message translation and network transport functions, and thus may simplify programming when developing client applications.","In one embodiment, the SAN access layer API may receive a request message or messages for accessing a function or functions of the SAN access layer and formatted in accordance with the SAN access layer API from a client application. The SAN access layer API may convert the request message(s) into markup language (e.g. XML) message(s) formatted in accordance with the SAN access layer interface. The SAN access layer API then may send the markup language message(s) to the SAN access layer on a network transport supported by the SAN access layer. In one embodiment, the SAN access layer API may open a communications connection (e.g. a socket) to the SAN access layer to transmit the message(s). The SAN access layer may then perform the requested task(s) as specified by the markup language message(s). Responses and\/or results of a requested function(s) may be sent by the SAN access layer to the SAN access layer API in one or more markup language (e.g. XML) messages formatted according to the SAN access layer interface. The SAN access layer API may then parse and convert the markup language message(s) received from the SAN access layer to generate one or more messages in the SAN access layer API format. The SAN access layer API may then provide the results and\/or responses to the client application in the one or more messages in the SAN access layer API format.","While the invention is described herein by way of example for several embodiments and illustrative drawings, those skilled in the art will recognize that the invention is not limited to the embodiments or drawings described. It should be understood, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application, the word \u201cmay\u201d is used in a permissive sense (i.e., meaning having the potential to), rather than the mandatory sense (i.e., meaning must). Similarly, the words \u201cinclude\u201d, \u201cincluding\u201d, and \u201cincludes\u201d mean including, but not limited to.","Embodiments of an application programming interface (API) for a Storage Area Network (SAN) access layer are described.  shows an exemplary SAN including a SAN access layer and a SAN access layer API according to one embodiment. For one embodiment, a SAN may be described as a high-speed, special-purpose network that interconnects storage devices  (e.g. storage devices A, B, and C) with associated data servers (e.g. hosts A, B, and C) on behalf of a larger network of users. This dedicated network may employ Fibre Channel technology.","A SAN may be part of the overall network of computing resources for an enterprise or other entity. A SAN may include one or more hosts  (e.g. hosts A, B, and C), one or more storage devices  (e.g. storage devices A, B, and C), and one or more SAN fabrics . A SAN may also include one or more client systems , which may access the SAN via a SAN access layer API  to the SAN access layer , for example via a network (e.g. Internet, Local Area Network (LAN), Wide Area Network (WAN), etc.) connection to one or more of the hosts .","Storage devices may include any of one or more types of storage devices including, but not limited to, storage systems such as RAID (Redundant Array of Independent Disks) systems, disk arrays, JBODs (Just a Bunch Of Disks, used to refer to disks that are not configured according to RAID), tape devices, and optical storage devices. These devices may be products of any of a number of vendors including, but not limited to, Compaq, EMC, and Hitachi. Hosts  may run any of a variety of operating systems, including, but not limited to, Solaris 2.6, 7 and 8, Microsoft Windows NT 4.0 (Server and Enterprise Server), and Microsoft Windows 2000 (Server, Advanced Server and Datacenter Editions). Each host  may be connected to the fabric  via one or more Host Bus Adapters (HBAs).","The hardware that connects hosts  (and other devices such as workstations) to storage devices  in a SAN may be referred to as a SAN fabric . The SAN fabric  enables server-to-storage device connectivity through Fibre Channel switching technology. The SAN fabric  hardware may include one or more of switches  (also referred to as fabric switches), bridges , hubs , or other devices  such as routers, as well as the interconnecting cables (for Fibre Channel SANs, fibre optic cables).","A SAN system may include a SAN access layer  that may serve as an interface between SAN components (hardware and\/or software) and client applications  of the SAN system. A SAN access layer API  may be provided which enables a client application  to access SAN access layer  functionality such as storage management and configuration services. Through the SAN access layer API , the client application  may invoke some or all of the functionalities of the SAN access layer  including, one or more of, but not limited to, discovering interconnect elements (e.g. switches , Host Bus Adapters (HBAs), bridges , hubs , etc.), storage devices  (e.g. Just a Bunch of Disks (JBODs), tape drives, disk arrays, etc.), host  and SAN application information, and performing access control configuration and other management operations on the SAN. The SAN access layer  may provide SAN information gathered from the SAN to the client application  through the SAN access layer API .","While  shows the client application  and the SAN access layer API  running within a client system  separate from the host B running the SAN access layer , in one embodiment the client application  and the SAN access layer API  may run within the same machine as the SAN access layer . In one embodiment, the client application  and the SAN access layer API  may be components along with the SAN access layer  running within a server container on the same machine. In one embodiment, the client application  and the SAN access layer API  may be components running within a container (e.g. a client) separate from a server container running the SAN access layer  but running within the same machine. In one embodiment, the client application  may be a component of a SAN management server, such as the exemplary SAN management server described below, of which the SAN access layer  is also a component.","Third-party client applications  may desire to use portions of the discovery and configuration services that the SAN access layer  provides. In one embodiment, the SAN access layer  may provide an interface to full functionality of the SAN access layer. In one embodiment, the interface to the SAN access layer  may provide limited or no security and\/or license enforcement. In one embodiment, the SAN access layer API  may expose a portion of the functionality of the SAN access layer  to client applications , and may also provide security and licensing restrictions to the client applications . In one embodiment, components of a SAN system including a SAN access layer , such as the exemplary SAN management system described below, may also leverage the SAN access layer API  to access the SAN access layer .","In one embodiment, in addition to the security issues described above, to use the interface provided by the SAN access layer , a client application  may be required to use a parser (e.g. an XML parser) to translate messages received from the SAN access layer  interface into format(s) compatible with the client application , and to convert messages, in format(s) compatible with the client application into format(s) compatible with the SAN access layer  interface. Further, the client application  may be required to provide network transport (e.g. TCP\/IP) to a particular socket of the SAN access layer . Encapsulating the message translation and network transport functions in the SAN access layer API  may simplify programming when developing client applications .",{"@attributes":{"id":"p-0035","num":"0037"},"figref":"FIG. 2","b":["204","204","204","100"]},"Embodiments of the SAN access layer API  may provide a single, secure point of entry into the SAN access layer  for client applications . In one embodiment, SAN access layer  may accept messages formatted according to a markup language (e.g. eXtensible Markup Language (XML)) and may output results of operations as messages formatted according to the markup language. Rather than requiring each heterogeneous client application  to handle markup language document construction and parsing, authentication, and transport (e.g. HTTP transport) support, the SAN access layer API  provides these functionalities for the client applications  through a common, relatively simple API.","In one embodiment, the SAN access layer  may provide limited or no security capabilities (e.g. license enforcement, authentication, etc.). The SAN access layer  may include an interface for accessing various functions of the SAN access layer . In one embodiment, this interface may be a proprietary interface, and the SAN access layer API  may provide access to a portion of the functions of the SAN access layer  to third-party client applications. In one embodiment, this interface may be provided by a SAN access layer agent (described below). If a user has access to and knows how to use the SAN access layer  interface, the user may access all of the functionality of the SAN access layer . Embodiments of the SAN access layer API  may provide a more limited and controlled API to the functions provided by the SAN access layer  interface that may be published for access by client applications . In one embodiment, to use the SAN access layer  via SAN access layer API , the client application  must have a key that may be passed to\/through the SAN access layer API . In one embodiment, different access levels to the SAN access layer  may be provided as determined by the key.","In one embodiment, a client application  may provide a user interface for taking advantage of one or more of the SAN access layer  capabilities through the SAN access layer API . In one embodiment, the client application  may provide a graphical user interface for displaying the information compiled by and received from the SAN access layer  via the SAN access layer API  in graphical and\/or textual format. Embodiments of the client application  may perform various SAN functions including one or more of, but not limited to, discovering SAN objects, creating and managing SAN object enclosures, SAN zoning management, generating and displaying reports on various aspects of the SAN, defining and naming groups of SAN objects, and LUN security\/LUN management functions. Some embodiments of the client application  may provide a user interface that allows a user to interact with the SAN access layer  via the SAN access layer API  to perform one or more functions on the SAN. In one embodiment, multiple client application  may connect simultaneously with the SAN access layer  via SAN access layer APIs , for example using TCP\/IP socket(s) assigned to the SAN access layer .",{"@attributes":{"id":"p-0039","num":"0041"},"figref":"FIG. 3A","b":["400","402","404","204"]},{"@attributes":{"id":"p-0040","num":"0042"},"figref":"FIG. 3B","b":["410","412","414"]},{"@attributes":{"id":"p-0041","num":"0043"},"figref":"FIG. 4","b":["204","204","206","206","206","206","250","252","254","204","250","206","254","100"]},"In one embodiment, the SAN access layer  may be configured for discovery and device communication through a configuration file. The configuration file may include one or more parameters for the SAN access layer  and\/or globally to the explorers . In this example, a \u201cdelay\u201d parameter may specify the time delay (e.g., in seconds) between executions of the explorers. Each type of explorer may have a section in the configuration file that may include one or more parameters specific to the particular type of explorer.","In one embodiment, the SAN access layer  may include one or more explorers  that provide an interface to different types of heterogeneous SAN components so that the SAN access layer  may provide a common data representation for heterogeneous SAN components to client applications  via the SAN access layer API . Explorers  may communicate with the SAN components over Fibre Channel (in-band) and\/or Ethernet (out-of-band) connections to inventory the SAN. Each explorer  may communicate with a specific type of SAN component using a protocol available for that specific type of SAN component.","Explorers  may communicate with the SAN components over Fibre Channel (in-band) and\/or Ethernet (out-of-band) connections to inventory the SAN. Each explorer  may communicate with a specific type of device, using a protocol available for that specific type of device. In one embodiment, the SAN access layer  may aggregate information gathered by the explorers  into a SAN access layer  data store. Once the SAN is discovered, the SAN access layer  may continue to monitor the SAN. In one embodiment, the SAN access layer  may periodically examine the SAN for objects that are added, objects that are removed, and connections that are pulled. In one embodiment, new explorers  may be added as needed or desired. For example, if a new type of SAN device is added to the SAN, or an existing type of SAN device is modified or upgraded, an explorer  may be added or updated to correctly communicate with the new or updated type of SAN device.","Each explorer  may use a different method to discover information about objects on the SAN. Explorers  may be categorized into types, including, but not limited to, switch explorers, zoning explorers, disk array explorers, and Host Bus Adapter (HBA) explorers. In one embodiment, the explorers  may query objects on the SAN to retrieve a standard set of attributes for each type of object. The terms \u201cinformation\u201d and \u201cdetails\u201d may be used to describe the different kinds of data about a SAN that the SAN access layer  may discover, including, but not limited to, SAN events, zone memberships, connectivity, etc. The term \u201cattributes\u201d refers to a subset of that larger body of information. Attributes are details that are particular to a type of object, such as a switch\u2014details such as its vendor, model number, firmware version, port count, World Wide Name (WWN), and out-of-band address.","Switch explorers may discover switch information such as vendor name, firmware version, and model name. Switch explorers may include, but are not limited to, a management server explorer and an out-of-band switch explorer.","In one embodiment, the SAN access layer  may include a management server explorer to communicate with supported switches over Fibre Channel connections. In one embodiment, the management server explorer may use the Fibre Channel Common Transport (CT) protocol to communicate with switches in the SAN fabric . The management server explorer may, for example, discover switches in-band over Fibre Channel, obtain switch characteristics, and\/or explore port connectivity. In one embodiment, the management server explorer may optionally run over IP networks, for example to discover Brocade fabrics. For some switches such as Brocade switches, the management server explorer may run out-of-band. In one embodiment, the management server explorer may also perform in-band zoning (e.g. for McDATA switches).","In one embodiment, there may be circumstances in which out-of-band exploration may be desired, for example, when there are multiple switch fabrics (e.g. McDATA switch fabrics) or unsupported HBA drivers. In one embodiment, the SAN access layer  may include an out-of-band switch explorer to communicate with switches (or their proxies) over Ethernet. In one embodiment, the out-of-band switch explorer may discover devices managed over any IP network. In one embodiment, the out-of-band switch explorer may use SNMP (Simple Network Management Protocol). SNMP is a protocol for monitoring and managing systems and devices in a network. The data being monitored and managed is defined by a MIB (Management Information Base), the specification and formal description of a set of objects and variables that can be read and possibly written using the SNMP protocol. Some embodiments may use other network protocols, for example Common Management Information Protocol (CMIP), Remote Monitoring (RMON), etc. Enabling the out-of-band switch explorer may include specifying IP addresses for each switch (or for multiple switch fabrics, each proxy) in a SAN access layer configuration file.","Embodiments of the SAN access layer  may include zoning explorers that may be used as an interface for the SAN access layer  to communicate with fabric switches to perform discovery and control of zones in the SAN. When zoning commands are issued (e.g. by a client application  via SAN access layer API ), the SAN access layer  may use a zoning explorer to contact the switch to perform the zoning operation. In one embodiment, the zoning explorers may communicate with the switches out-of-band. Embodiments may provide zoning explorers specific to fabric switches provided by various switch vendors such as QLogic, INRANGE, McDATA and Brocade. In one embodiment, one or more zoning explorers (e.g., a Brocade zoning explorer) may complete transactions with a switch management server (name server) to discover zone names and attributes and to perform switch zoning commands. In one embodiment, the management server explorer may, in addition to discovery, also manage zoning for some vendors' switches in-band, for example, McDATA switches.","In one embodiment, the SAN access layer  may include an HBA explorer that may discover information about SAN-connected storage devices  that are zoned to a host. The HBA explorer may interact with a host (e.g. a Sun Solaris or Windows 2000\/Windows NT Server) to discover HBAs and device paths. A device path may be defined as a route through an interconnect that allows two (or more) devices to communicate. In one embodiment, the HBA explorer may not discover locally attached storage (e.g. disks or other devices attached through a SCSI or IDE controller). If these storage devices have OS handles, then the HBA explorer may return LUN names and attributes. An OS handle is the name the operating system uses to identify a storage resource (known as an Addressable Unit, or AU), and the correct methods (e.g. driver\/system call) to access the storage resource. If no OS handles are available, then the HBA explorer may identify the device as a generic device (a block device attached to a port on the host).","Embodiments of the SAN access layer  may include one or more disk array explorers that may provide information about array names and their attributes, such as number of ports and the number of disks contained in an array. Disk array explorers may discover disk arrays\/enclosures and their LUNs. Disk array explorers may pass along LUN management commands to the array's management interface to execute. In one embodiment, disk array explorers may discover LUNs that are not masked to discovered hosts on the SAN. The SAN access layer  may include disk array explorers specific to disk arrays of various vendors, including, but not limited to, Compaq, EMC, and Hitachi disk arrays.","In one embodiment, the SAN access layer  may not communicate directly with a disk array but instead may communicate through the array's management interface, for example, Command Scriptor (Compaq) and SYMCLI (EMC). In one embodiment, the array vendor's management software is installed on a host  with an in-band connection to the arrays to be managed. The management software may provide a unified interface\/command interpreter between the SAN access layer  and the arrays on the fabric.","In one embodiment, disk array explorers (e.g. Compaq and EMC explorers) may start when the SAN access layer  starts. In one embodiment, the disk array explorers may check to see if the host has the management interfaces (e.g. CCS or SYMCLI). If the host does not have the management interface, then the corresponding explorer may be disabled. If the management interfaces are present, then the explorers may attempt to determine if the host has access to any LUNs exported by the array. If any LUNs are available, the explorers may attempt to discover the array using the OS handle to the LUN.","In one embodiment, some disk array explorers (e.g., a Hitachi explorer) may use a different model than other explorers such as Compaq and EMC explorers. Going out-of-band, these explorers may use a network protocol such as SNMP to communicate directly with the disk array controller (e.g. the Hitachi disk array controller). IP addresses for each disk array may be supplied for SAN access layer  discovery and communication. For example, in one embodiment, for the SAN access layer  to discover and make LUN management requests using the Hitachi explorer, the IP addresses of an agent (e.g. SNMP agent) residing on each Hitachi disk array may be specified in a SAN access layer  configuration file.","In one embodiment, the SAN access layer  may automatically discover information for each Addressable Unit (LUN) that is under the control of a volume manager. The discovered information may include, but is not limited to: Disk Group Name, Disk Media Host, Disk Media I\/O Paths, Disk Media Public Capacity, and Disk Name.","In one embodiment, data gathered by the explorers  may be aggregated into data store , which may be updated with real-time information about objects on the SAN. Once the SAN is discovered, the SAN access layer  may continue to monitor the SAN and may update the data store  as new events occur on the SAN. In one embodiment, the SAN access layer  may periodically examine the SAN, for example to discover or determine objects that are added, objects that are removed, and connections that are pulled. In one embodiment, the data store  may be managed by the SAN access layer engine . In one embodiment, the data store  may be an embedded, ODBC-compliant, relational database. In one embodiment, data from the database may be imported into a data warehouse to track changes and analyze the SAN over periods. In one embodiment, the data store  may be purged, for example when a fabric switch is rebooted or to capture fresh SAN discovery information. Purging the data store  may result in the loss of user-entered data such as manually configured hosts and object attributes. An alternative to purging the data store  is to delete individual objects, for example through a user of a client application  accessing the SAN access layer  via SAN access layer API . SAN objects that are discoverable by the SAN access layer  may be added back into the data store automatically.","In one embodiment, the SAN access layer  may include an agent  that may serve as an interface to functions provided by the SAN access layer. In one embodiment, the interface provided by the SAN access layer  agent may be a proprietary interface, for example for use by components of a SAN management system including the SAN access layer  such as the exemplary SAN management system described below. In one embodiment, the SAN access layer API  may provide access to a limited portion of the functionality available through the SAN access layer  interface to a client application . In one embodiment, each client application  may be given a key for accessing the SAN access layer  via the SAN access layer interface. In one embodiment, different client applications  may be given different keys which may be used to grant different levels of access to the SAN access layer  functions and\/or access to different portions of the SAN access layer  functions to the client applications.","In one embodiment, the agent  may translate information from the data store  into formatted files (e.g. XML files), which may be provided to client applications  via SAN access layer API . The agent may also enforce user authentication for commands sent to the SAN access layer . In one embodiment the agent may handle communication between the SAN access layer  and one or more SAN access layer remotes such as those of the exemplary SAN management server described below.","The following is an example of the client application  requesting SAN data from the SAN access layer  according to one embodiment. The client application  may send a message or messages formatted according to the SAN access layer API  and requesting SAN data stored in data store . The SAN access layer API  may translate the message(s) received from the client application  into a markup language (e.g. XML) message or messages formatted in accordance with the SAN access layer . The SAN access layer API  may open a connection (e.g. TCP\/IP socket) with the SAN access layer agent  and send the message(s), which may request the SAN data stored in the data store . Upon receiving the request, the SAN access layer engine  may dynamically create a document (e.g. an XML document) including the requested SAN data, for example SAN data describing at least a portion of the SAN topology. The SAN access layer agent  then may send this document in a markup language message or messages formatted according to the SAN access layer  to the SAN access layer API . The SAN access layer API  may then translate the received message(s) into one or more SAN access layer API message(s). The SAN access layer API  may then send these messages to the client application . Once the client application  successfully receives the message(s), the SAN access layer API  and\/or the SAN access layer agent  may close the connection. When the client application  receives the message(s), it may read the data and display, in graphical and\/or textual format, the SAN data included in the message(s).","Since not all objects on the SAN may be visible to the host on which the SAN access layer  is installed, one embodiment may include a SAN access layer remote that may be installed on one or more other hosts in the SAN, if any, to assist the SAN access layer  in discovering the entire SAN. In one embodiment, a SAN access layer remote may be installed on every host on the SAN to provide complete and accurate discovery. In one embodiment, the SAN access layer remote may be a modified form of the SAN access layer . In one embodiment, the SAN access layer API  may interact with the SAN access layer  to collect information and\/or issue commands related to the SAN access layer remote(s).","In one embodiment including SAN access layer remotes, each installation of the SAN access layer remote may include one or more explorers . In one embodiment, explorers  of the SAN access layer remotes may include one or more explorers  that may also be used by the SAN access layer , such as a management server explorer and an HBA explorer. In one embodiment, these explorers  may also include an out-of-band switch explorer. In one embodiment, the SAN access layer  and each installation of the SAN access layer remote may each include a set of one or more explorers  that may be determined by the discovery requirements and\/or contents of the region of the SAN visible to the host on which the SAN access layer  or SAN access layer remote resides. Each installation of the SAN access layer remote may provide information gathered by its explorers  to the SAN access layer , which may aggregate this information into the SAN access layer  data store. Installed SAN access layer remotes may be considered agents or extensions of the SAN access layer . Where SAN access layer  is described herein, the description may generally be considered to include the SAN access layer remotes.",{"@attributes":{"id":"p-0062","num":"0064"},"figref":"FIG. 5","b":["300","300","306","204","306","314","316","318","320","204","300","312","300","302","204","300","310","204","204"]},"Embodiments of the API layer  of the SAN access layer API  may include software modules invokable by client applications  through messages formatted according to the SAN access layer API . In one embodiment, the software modules may include one or more of, but are not limited to, software modules for creating a connection to the SAN access layer agent and closing a connection to the SAN access layer agent. In one embodiment, these software modules may include one or more of, but are not limited to, security-related software modules for adding a user to the SAN access layer authentication domain and deleting a references to a user in the SAN access layer authentication domain. In one embodiment, the software modules may include one or more of, but are not limited to, zone and LUN security-related software modules for creating a new zone and adding objects to the zone, adding one or more objects to an existing zone, deleting a zone, moving one or more objects from one zone to another, removing one or more objects from a zone, renaming an existing zone, creating a new zone alias and adding objects to the zone alias, deleting a zone alias, moving one or more objects from one zone alias to another, removing one or more objects from a zone alias, renaming an existing zone alias, granting or revoking permissions to access LUNs from HBAs, and establishing or removing bindings in arrays. In one embodiment, the software modules may include one or more of, but are not limited to, zone and LUN event-related software modules for registering the invoking client application  to receive events and to stop listening for events. In one embodiment, the software modules may include one or more of, but are not limited to, discovery-related software modules for creating a localized namespace for standard SAN access layer attributes, freeing memory allocated for attribute-value arrays, getting a list of all objects of a specified types, including their attributes, getting a list of all the objects of a given type including their attributes, gets the container(s) of an object in the SAN access layer , and getting a list of objects given their SAN access layer object identifier.","The following describes the operation of a SAN access layer according to one embodiment. In one embodiment, the SAN access layer API  may receive a request from client application  formatted in accordance with the SAN access layer API  and invoking one or more of the software modules of the API layer  to perform one or more functions of the SAN access layer . The conversion layer  of the SAN access layer API  converts the request into markup language (e.g. XML) message(s) formatted in accordance with the SAN access layer . The transport interface layer  of the SAN access layer API  then creates a connection to the SAN access layer  (if necessary) and sends the markup language message(s) to the SAN access layer  on a network transport supported by the SAN access layer  (e.g. via TCP\/IP to a socket of the SAN access layer ). The SAN access layer  may then perform the requested task(s) as specified by the markup language message(s). Responses and\/or results of the requested tasks may then be sent by the SAN access layer  to the transport interface layer  of the SAN access layer API  in one or more markup language (e.g. XML) messages formatted according to the SAN access layer . The conversion layer  of the SAN access layer API  may then parse the markup language message(s) received from the SAN access layer  and, the results and\/or responses may be returned to the client application  by the SAN access layer API  in one or more messages formatted according to the SAN access layer API .","The following is a description of Logical Unit Number (LUN) security in general, as well as LUN security as supported by embodiments of the SAN access layer  accessed through the SAN access layer API . Ensuring that SAN applications have the required storage resources may include providing secure storage from storage devices (e.g., disk arrays, tape backup devices, etc.) to hosts within the SAN. Continuing with , in one embodiment, the SAN access layer  and SAN access layer API  may integrate storage masking from various array providers, for example Hitachi Data Systems, Compaq and EMC, to hosts in the SAN. LUN (Logical Unit Number) security is the collective name given to the operations involved in making storage device resources available to hosts on a SAN. In one embodiment of the SAN management system, LUN security may provide granular control over host access to individual LUNs within an array or other collection of potentially heterogeneous storage devices. LUN security may include LUN locating or searching, LUN binding, LUN masking, and fabric zoning. In one embodiment, a client application  may be used to manage LUN security for heterogeneous SAN components via the SAN access layer  and SAN access layer API .","A LUN (logical unit number) is the SCSI (Small Computer System Interface) identifier of a logical unit within a target, the system component that receives a SCSI I\/O command. A logical unit is an entity within a SCSI target that executes I\/O commands. SCSI I\/O commands are sent to a target and executed by a logical unit within that target. A SCSI physical disk may have a single logical unit, or alternatively may have more than one logical unit. Tape drives and array controllers may incorporate multiple logical units to which I\/O commands can be addressed. Each logical unit exported by an array controller corresponds to a virtual disk.","LUN security may include LUN binding, the creation of access paths between an addressable unit (which may also be referred to as an AddrUnit, an AU, a unit, a volume, a logical unit, a logical disk, or a logical device) within a disk array and a port on the array.  illustrates LUN binding according to one embodiment. In the LUN binding process, an AU  is bound to a specified array port  (e.g. array port A or B) in a specified storage device  (e.g. a storage system\/disk array)). This results in the creation of a LUN . AUs A, B, C, and D are storage volumes built out of one or more physical discs within the storage device . Array ports A and B are connected to the SAN fabric  and function as SCSI targets behind which the AUs  bound to those ports  are visible. \u201cLUN\u201d is the term for the access path itself between an AU  and an array port , so LUN binding is actually the process of creating LUNs . However, a LUN  is also frequently identified with the AU  behind it and treated as though it had the properties of that AU . For the sake of convenience, a LUN  may be thought of as being the equivalent of the AU  it represents. Note, however, that two different LUNs  may represent two different paths to a single volume. A LUN  may be bound to one or more array ports . A LUN  may be bound to multiple array ports , for example, for failover, switching from one array port  to another array port  if a problem occurs.","LUN security may also include LUN masking to enable access to a particular Addressable Unit for a host on the SAN.  illustrates LUN masking according to one embodiment. LUN masking is a security operation that indicates that a particular host  (e.g. host A or B), HBA (Host Bus Adapter)  (e.g. HBA A or B), or HBA port  (e.g. HBA port A or B) is able to communicate with a particular LUN . In the LUN masking process, a bound AU  (e.g. AU A, B, C or D) may be masked to a specified HBA port , HBA , or host  (e.g. all HBAs on the host) through a specified array port  in a specified storage device . When an array LUN  is masked, an entry is added to the Access Control List (ACL)  (e.g. ACL A, B, C, D, or E) for that LUN . Each ACL  includes the World Wide Name of each HBA port  that has permission to use that access path that is, to access that AU  through the particular array port  represented by the LUN .","LUN masking may be thought of as the removal of a mask between an AU  and a host  to allow the host to communicate with the LUN . The default behavior of the storage device  may be to prohibit all access to LUNs  unless a host  has explicit permission to view the LUNs . The default behavior may depend on the array model and, in some cases, the software used to create the AU .","LUN security may also include fabric zoning.  illustrates fabric zoning according to one embodiment. After a LUN is masked to an HBA port  (e.g. HBA port A, B or C) in a host, the zoning configuration of the SAN fabric  may still prevent the host from accessing the AU behind that LUN. In order for the host to see the AU and create an Operating System (OS) handle for it, there must be at least one zone on the fabric  that contains both the HBA port  (e.g. HBA port A, B or C) and the array port  (e.g. array port A or B) to which the AU is bound. A zoning operation may be required if the HBA port  and array port  are not already zoned together. Zoning operations may include creating a new zone  and adding the array port  and the HBA port  to an existing zone . Zones  may also include one or more ports on one or more fabric devices (e.g. switches A and B) in the device path between the array port  and the HBA port . Fabric zoning occurs at the level of individual nodes or ports attached to the SAN fabric. Zones and their member objects may be defined in zoning tables within the switches  on the SAN fabric. When zoning is implemented on a SAN fabric, the switches  consult the zoning table to determine whether one object is permitted to communicate with another object, and restrict access between them unless they share a common membership in at least one zone.","In , zone A includes HBA port A, the array ports A and B through which HBA port A may access LUNs bound to the array ports , and the switch ports on switches A and B through which HBA port A and array ports  are coupled. Zone B includes HBA port C, array port B through which HBA port C may access LUNs bound to the array port B, and the switch port(s) on switch B through which HBA port C and array port B are coupled. HBA ports A, B and C may be on the same host or on different hosts and, if on the same host, on the same HBA or on different HBAs. Array ports A and B may be on the same storage system or on different storage systems. For more information on zoning, see the description of zoning above.","In one embodiment as illustrated in , a client application , via the SAN access layer API  of the SAN access layer , may discover SAN components including, but not limited to, one or more storage devices  (e.g. storage devices A and B) each including one or more addressable storage units and one or more fabric ports for coupling to the SAN, and one or more host systems  each including one or more host bus adapters (HBAs)  which each provide host adapter ports for coupling to the SAN. The client application  may provide a user interface for selecting addressable storage units to be made available to selected host adapter ports accessed via the SAN access layer API  of the SAN access layer , and may communicate with the SAN access layer  via the SAN access layer API  to create access paths between selected addressable storage units and selected fabric ports of the storage systems, enable access to the selected addressable storage units for the selected host adapter ports, and\/or zone the selected storage system fabric ports in a common fabric  zone with the selected host adapter ports.","The following is a description of zoning of SAN objects in general, as well as zoning as supported by embodiments of the SAN access layer  accessed through the SAN access layer API . The flexible connectivity capabilities of the SAN storage model may pose security risks. Zoning helps alleviate that risk by providing a means of controlling access between objects on the SAN. By creating and managing zones, the user may control host  access to storage resources. Continuing with , in one embodiment, a client application  may access the SAN access layer  through the SAN access layer  API to create and manage zones of SAN objects, including zones of heterogeneous components.","A zone is a set of objects within a SAN fabric  that can access one another. Zones and their member objects may be defined in zoning tables within the switches on the SAN fabric . When zoning is implemented on a SAN fabric , the switches consult the zoning table to determine whether one object is permitted to communicate with another object, and restrict access between them unless they share a common membership in at least one zone.","Fabric zoning occurs at the level of individual nodes or ports attached to the SAN fabric . Zoning-enabled fabrics may include zoning tables that define each zone along with its member objects. These zones function similar to virtual private networks (VPNs) on traditional networks.","There may be one or more ways to use zoning to improve the security and organization of the SAN. Examples of uses of zoning include, but are not limited to: isolating storage resources for different operating environments, such as separating UNIX storage from Windows NT storage; setting aside resources for routine backups; securing areas of the SAN for storage of sensitive data; and creating dedicated resources for closed user groups.","In one embodiment, the SAN access layer  may provide methods, accessible by client applications  through the SAN access layer API , to enforce the access restrictions created by zones on the SAN. These methods may include two methods that correspond to the forms of zoning commonly referred to as soft zoning and hard zoning.","Soft zoning, also called advisory zoning, may be enforced simply by filtering the visibility of objects on the SAN so that an object can only see other objects that share at least one zone membership with the object. At boot time, a SAN host  or device requests a list of the World Wide Names (WWNs) on the SAN fabric  from the fabric Name Service. The Name Service may consult the zoning table and filter out of its response any WWNs that are not zoned together with the host  or device making the request. In this way, a host  on the SAN is only made aware of devices whose WWNs are zoned together with the host's HBA port. Soft zoning is flexible because it does not rely on an object's physical location on the SAN. If its physical connection to the SAN fabric  changes, its zone memberships remain intact because the zone memberships are based on the WWNs of the object's ports. However, soft zoning may have security vulnerability in that it does not actively prevent access between objects that belong to different zones. Even if the Name Service does not supply a SAN host  with the WWN of a device that is zoned away from the host , a user who knows that WWN (or a hacker trying different combinations of addresses) may still send Fibre Channel packets from the host  to that device.","When hard zoning is implemented, a Fibre Channel switch may actively block access to zone members from any objects outside the zone. This may be performed at the level of ports on the switch. Hard zoning may also be referred to as switch port zoning. The switch checks each incoming Fibre Channel packet against its routing table to see whether the packet may be forwarded from the entry port to its destination port. Switch port zoning offers strong security because it actively segregates zone members from the rest of the SAN fabric . However, hard zoning may lack the flexibility of soft zoning, since an object attached to a zoned switch port loses its zone membership when it is physically disconnected from that switch port and moved elsewhere on the SAN. New objects attached to the switch port may inherit the zone memberships of that port, so planning and record keeping by the administrator may be needed to avoid breaks in security when moving objects around on the SAN.","In one embodiment, the SAN access layer  may support the zoning of objects on the SAN including, but not limited to, switch ports, hosts , and storage devices  including, but not limited to, storage arrays, JBODs, and individual storage devices. In one embodiment, the SAN access layer  may support switch zoning though application program interfaces (APIs) provided by switch vendors, allowing for both hard (port-level) and soft (advisory, WWN) zoning. In one embodiment, zoning may be implemented and used by storage administrators using one or more client applications  which may provide services, tools and\/or utilities for allocating storage resources and managing SAN security via the SAN access layer API  of the SAN access layer . In one embodiment, a client application  may serve as a centralized point from which a manager or other user may access the SAN access layer  via the SAN access layer API  to create and manage zones on the SAN, including zones containing heterogeneous SAN objects.","In one embodiment, the client application  may facilitate the creation, modification, and deletion of zones via the SAN access layer API  of the SAN access layer . The client application  may provide storage zone definition, creation and management. The client application  may be used to administer zones directly and visually; and may reduce or remove the need to use telnet commands or proprietary, hardware-specific Web-based solutions. The client application  may facilitate the creation of new zones and edits to existing zones. The client application  may automatically filter the list of objects on the SAN and present a list of objects that are available to be added to a zone. In one embodiment, an object may be zoned based on the World Wide Name (WWN) of the object node, the WWN of an individual port under the object node, or the switch port to which the object is attached. In one embodiment, users may administer zoning though the zone utility or optionally through a command line interface.","There may be no industry-wide standard for zoning, and thus different vendors' switches may implement switch zoning in different ways. Thus, one embodiment of the SAN access layer  and SAN access layer API  may use a switch-neutral approach to zoning. This embodiment may not specify, for example, whether hard zoning (port-level zoning) or soft zoning (based on WWNs) should be applied in any particular case. In this embodiment, implementation details such as these may be left up to the switch vendor.","In one embodiment, a client application , via the SAN access layer  and SAN access layer API , may provide datapath zoning control for interconnects from vendors such as Brocade, QLogic, and McDATA to abstract the individual interconnects' complex zoning tools to simplify creating, adding to, and deleting zones.","Exemplary SAN Management System",{"@attributes":{"id":"p-0084","num":"0086"},"figref":"FIG. 10","b":["200","204","202","300","204","200"]},"The SAN management server  may provide discovery of SAN objects and their attributes, event and policy management, and\/or notification services. The SAN management server  may explore the SAN to make data available to client applications. The functions of the SAN management server  may include one or more of, but are not limited to: automatically discovering SAN-attached objects including hosts, host bus adapters (HBAs), switches and storage devices; maintaining a data store\/database of real-time object information; managing SAN resources through zoning and LUN access control; monitoring conditions on the SAN; performing policy-based actions in response to SAN conditions; generating inventory and performance reports; and supporting user-defined grouping of objects based on quality of service (QoS) criteria. Embodiments of the SAN management server  may run in a variety of systems, including, but not limited to, Solaris 2.6, 7 or 8, Microsoft Windows NT 4.0 (Server and Enterprise Server), and Microsoft Windows 2000 (Server, Advanced Server and Datacenter Editions).","SAN management system administration may include determining that the SAN management server  is configured to discover and monitor devices on the SAN. In one embodiment, the SAN management system may provide discovery methods that require minimal maintenance, and may provide a SAN configuration utility.","In one embodiment, the SAN management system may include a SAN access layer  including one or more explorers that may provide an interface to different types of heterogeneous SAN components so that the SAN management system may provide a common data representation for the heterogeneous SAN components. One embodiment may include one or more SAN access layer remotes  which each may include one or more explorers. In one embodiment, client applications may access the SAN access layer  through a SAN access layer API . In one embodiment, each client application may have a corresponding SAN access layer API  through which it may access the SAN access layer . In one embodiment, one or more components of the SAN management system, such as one or more components of the SAN management server  (e.g. an alarm service, a policy service, etc.) may access the SAN access layer  via a SAN access layer API .","The SAN manager  is a client application provided with the SAN management system. The SAN manager  may provide an interface for taking advantage of many or all of the SAN management system capabilities. In one embodiment, the SAN manager  provides a graphical user interface for displaying the information (e.g. XML data) compiled by and received from the SAN access layer  via SAN access layer API  and\/or other components of the SAN management server  in graphical and\/or textual format. The SAN manager  may be a central point for the user to perform one or more of SAN management task including, but not limited to, administering the SAN, viewing topographical displays of discovered objects on the SAN, accessing detailed information on components including object attributes and connectivity, creating and modifying policies, administering access control through zoning and LUN security, monitoring SAN events including real-time alerts, allocating storage resources, generating and viewing inventory and performance reports, generating and viewing real-time and historical reports, and\/or launching utilities, tools and applications, which may include third-party management tools.","Embodiments of the SAN manager  may provide a user interface for various tools, utilities and\/or functions of the SAN management system. Embodiments of the SAN manager  may include an enclosure utility for creating and managing SAN object enclosures. Embodiments of the SAN manager  may include a zone utility for simplified zoning management. Embodiments of the SAN manager  may include a policy utility for configuring automated responses to SAN conditions. Embodiments of the SAN manager  may include a reporter mechanism for generating and displaying user-defined and\/or predefined reports on various aspects of the SAN. Embodiments of the SAN manager  may include a group utility for defining and naming groups of SAN objects based on quality of service (QoS) criteria. Embodiments of the SAN manager  may include a LUN security utility for LUN management. Embodiments of the SAN manager  may include a LUN query tool that may query discovered LUNs based on user-specified quality of service criteria and provide input to the zone utility and group utility.","In one embodiment, other client applications, such as a Web browser, may function as clients to the SAN management server . In one embodiment, these other client applications may access the SAN access layer  via a SAN access layer API . In one embodiment, multiple SAN managers  may connect simultaneously with the SAN access layer  via the SAN access layer API , for example using a TCP\/IP socket assigned to the SAN access layer . SAN manager  may run on any of a variety of end-user platforms coupled to one or more of the hosts , for example via a LAN or WAN, or alternatively may run on one of the hosts , including the host  that includes the SAN management server .","Embodiments of the centralized SAN management system may provide administrators with a single management interface to the complex tasks involved in managing a growing, multi-vendor SAN. Embodiments of the SAN management system may simplify and centralize the management of heterogeneous SANs to enable control of SAN resources including, but not limited to, logical volumes, fibre channel adapters, and switches , as well as storage devices . A logical volume is a virtual disk made up of logical disks. A logical disk (also referred to as a logical device) is a set of consecutively addressed FBA (Fixed Block Architecture) disk blocks that is part of a single virtual disk-to-physical disk mapping. Logical disks are normally not visible to the host environment, except during array configuration operations. A virtual disk is a set of disk blocks presented to an operating environment as a range of consecutively numbered logical blocks with disk-like storage and I\/O semantics. The virtual disk is the disk array object that most closely resembles a physical disk from the operating environment's viewpoint.","The SAN management system may provide centralized management of SAN-connected devices with automatic discovery, visualization, access control, and policy-based monitoring, alerting and reporting. The SAN management system may provide a single point of management from logical unit to interconnect to SAN-connected hosts . An interconnect is a physical facility by which system elements are connected together and through which they can communicate with each other. Examples are I\/O buses and networks.","The SAN management system may provide customizable, intuitive views into a SAN based on host , device, fabric , or storage groups, as well as real-time alerts to diagnose and avoid outages. By masking the administrative complexity of the SAN environment, the SAN management system may allow the potential of SANs to be realized.","SAN management may occur at two levels\u2014physical and logical\u2014to maintain control, regardless of the underlying device environment. With the discovery of host attributes like OS platform, OS handles and IP address, the critical link associating logical devices to a host  and its applications may be made. The SAN management system may provide this data-centric management from host applications through interconnects to the storage resources, regardless of the underlying hardware and operating system(s).","One embodiment of the SAN management system may include an integrated volume manager that may provide capabilities including, but not limited to, pooling storage across multiple heterogeneous arrays on the SAN. The SAN management system may automatically discover and display volumes within its interface. Additionally, adding storage to a host may be streamlined though the SAN management system. In one embodiment, when zoning storage to a host, the SAN management system may automatically initiate an operating system rescan so that the new device is immediately available for use by the volume manager on the host. This may be performed without user intervention at the operating system level, saving time and ensuring that the resource can be used immediately.","Embodiments of the SAN management system may provide accurate discovery, visualization and inventory reporting in the SAN environment. Embodiments may reduce or eliminate the manual task of tracking of devices and their connections in the SAN by automatically discovering the physical and logical connections of the SAN, displaying the information in a graphical topology map and logging the data in a variety of inventory reports. Using both in-band and out-of-band protocols, and leveraging industry standards, the SAN management system may automatically capture and display details, including, but not limited to, device driver version, firmware level, status, performance, free and in-use port count, hardware manufacturer, model number and worldwide name (WWN). In-band refers to transmission of a protocol other than the primary data protocol over the same medium (e.g. Fibre Channel) as the primary data protocol. Management protocols are a common example of in-band protocols. Out-of-band refers to transmission of management information for Fibre Channel components outside of the Fibre Channel network, for example over Ethernet. In one embodiment, a storage administrator may assign customized attributes to devices in the SAN for use in tracking information such as physical location, account code, installation date and asset tag number.","One embodiment of the SAN management system may enable the automatic discovery of SAN resources using one or more in-band and\/or out-of-band protocols and industry standards (e.g. MS\/CT, GS-3, SNMP, Fibre Alliance MIB, ANSI T11, vendor-specific extensions, etc.). This embodiment may reduce or eliminate the need for manual tracking of SAN components.","One embodiment of the SAN management system may provide a policy management service that may allow SAN environments to be customized to define what parameters are monitored and how they should be responded to through notification and action options such as e-mail, command line scripts, PERL scripts, and\/or SNMP traps. One embodiment of the SAN management system may include a customizable policy service for intelligent threshold-based monitoring for SAN performance, status, availability and\/or traffic. The SAN management system may provide policies for SAN objects to assist the user in maintaining SAN operations within user-defined parameters. The SAN management system may automatically monitor switch and storage resources, keep environment, error and traffic statistics, and provide automated capabilities. One embodiment may provide one or more policies based on the knowledge of various SAN hardware providers. Standard reports may also be provided, for example to support common storage service-level agreements.","One embodiment of the SAN management system may provide a real-time alert viewer that may monitor heterogeneous device status, and may provide proactive management capabilities in the SAN environment. By supplying policies on SAN devices, the SAN management system may monitor the status and performance of the device(s) and generate alerts when behavior falls outside acceptable user-defined boundaries. The SAN management system may enable intelligent monitoring through user-definable threshold levels that can take actions automatically as well as notify administrators of critical events in real time.","In one embodiment, the SAN manager  may provide a graphical user interface (GUI) through which the SAN management system facilitates management by allowing the user to graphically drill down into the logical and physical devices on the SAN. One embodiment may provide the ability to zoom in or out on areas of interest in a SAN topology map to simplify the navigation of a growing enterprise SAN. Within the topology map, integrated tool tips may be provided to help identify devices and paths in the SAN without having to navigate through a complex topology. Information on SAN devices, such as hosts  with Host Bus Adapters (HBAs), interconnects, and storage devices , may be displayed in context in the GUI, revealing resources in zones as they are physically and logically connected. One embodiment may include a search mechanism. For example, if the administrator wants to ensure that all interconnects in the SAN are at the same firmware level, the administrator may query an integrated search tool for firmware levels to automatically locate all the devices that match the search criteria for the specific firmware level.","Embodiments of the SAN management system may provide both real-time and historical performance data for critical service-level parameters such as connectivity, available space and throughput. Through real-time performance monitoring, with flexible user-defined thresholds, one embodiment may notify administrators about issues that could affect overall SAN performance before the issues have an impact. Logging this data for reporting may, for example, extend the administrator's capability to audit and validate service-level agreements.","One embodiment of the SAN management system may enable real-time performance charting of SAN devices. The SAN management system may monitor interconnect and storage devices in real time, and may be used to display information about the various SAN devices such as current load\/status. The SAN management system may provide a troubleshooting platform for problem resolution.","Embodiments of the SAN management system may provide detailed capacity reports to aid in growth planning and gathers detailed information for use in chargeback reports. One embodiment may track LUN allocation to hosts as well as to storage groups, distilling real-time and historical reports that show where storage resources are being consumed.","In one embodiment, the SAN management system may discover at least some storage enclosures automatically, but in some cases, the SAN management system may discover only the individual storage devices inside the enclosure. For enclosures that are not discoverable, the SAN management system may provide an enclosure utility that may be used to manually create a representation of an enclosure object in the SAN management server data store. In one embodiment, the enclosure utility may be provided through the SAN manager . Using the enclosure utility, the SAN administrator or other user may create an enclosure by specifying the type of enclosure and which devices are contained within it.","In one embodiment, policy-based management provided by the SAN management system enables the monitoring of conditions on a SAN and may facilitate quick response when problems occur. Conditions that may be monitored by the SAN management system may fall into one or more categories of interest to storage administrators, including, but not limited to, traffic on the SAN, the environment status of the SAN's hosts, switches, and disk arrays, errors the SAN is generating, and availability of ports and switches on the fabric.","Embodiments of the SAN management system may use one or more methods for monitoring conditions on a SAN. These methods may include, but are not limited to, out-of-band polling (e.g. SNMP polling), traps (e.g. SNMP traps), and the SAN access layer . In one embodiment, to monitor conditions on a SAN using SNMP polling, the SAN management system may periodically poll SNMP-enabled SAN devices to retrieve the current values of the properties defined in their vendor-supplied SNMP Management Information Bases (MIBs). To monitor conditions on a SAN using SNMP traps, some SAN objects may send SNMP traps to the SAN management server  when an event happens. The SAN access layer  may provide notification of SAN events such as the addition or deletion of SAN components such as SAN fabrics, switches and arrays. In one embodiment, the SAN management system may also monitor conditions in-band, e.g. using the Fibre Channel Common Transport (CT) protocol.","The SAN management system may manage a SAN by monitoring SAN devices and enforcing predefined actions should any device fail to operate within the defined boundaries. In one embodiment, to enable this level of policy management, the SAN management system may include collectors. In one embodiment, these collectors may be based on devices' SNMP MIB variables. A collector may be a path or channel through which the SAN management system gathers a specific type of data for a specific object type. There may be one or more types of collectors, for example collectors for object availability, collectors for environmental conditions, collectors for device errors, and collectors for SAN traffic. Collectors may monitor properties such as switch port status, dropped frames, disk temperature, link failures and so on, which may be evaluated by the policy service to create an accurate composite status of the SAN. In one embodiment, the status of devices may be displayed on a topology map of a SAN manager  user interface, for example using color-coded icons.","Embodiments of the SAN management system may use collector data in real-time collector graphs, the policy engine, and the SAN reporter. In one embodiment, collector values may be refreshed at regular intervals, forming one or more data streams that the SAN management system may use to monitor SAN conditions. Collectors may be used as the basis for policy conditions. In one embodiment, collector data may be stored and used to generate reports about the SAN. Collector data may be stored in a database  to provide a single source of accurate information for the entire SAN.","Each collector may use one of one or more methods for monitoring conditions on a SAN. These methods may include, but are not limited to, out-of-band polling (e.g. SNMP polling) and traps (e.g. SNMP traps) and the SAN access layer . The SAN access layer  may provide notification of SAN events such as the addition or deletion of SAN components such as SAN fabrics, switches and arrays. In one embodiment, one or more collectors may monitor conditions in-band, e.g. using the Fibre Channel Common Transport (CT) protocol.","In one embodiment, the SAN management system may include one collector per data type per object, for each object that can be monitored. In one embodiment, each collector may be associated with an object type, such as a SAN host  or a switch port. In one embodiment, each collector may be associated with a type of data, for example textual state or numeric threshold data. Textual state collectors may be associated with one or more possible values.","Traffic collectors may monitor SAN traffic at the switch port level. The SAN management system may provide a variety of collectors for different vendors including, but not limited to, Brocade, McDATA and QLogic. Various collectors may monitor SAN traffic metrics including, but not limited to, frames discarded, frames rejected, port utilization, and buffer credits.","Error collectors may be used to monitor SAN devices including switches and storage devices. For switches, monitored error information may include one or more of, but is not limited to, CRC errors, address errors, delimiter errors, invalid transmission words, link failures, link resets, sequence errors, signal loss, sync loss, encoding errors, frames too short\/long, and invalid order sets. Error collectors may monitor storage devices for errors including one or more of, but not limited to, array processor errors, internal bus errors, cache errors, memory errors, warning errors, array status, and array failure. Storage devices that may be monitored may include one or more of, but are not limited to, RAID systems, disk arrays, JBODs, tape devices, and optical storage devices.","Environmental collectors may monitor environmental conditions of SAN objects. Monitored environmental conditions may include, but are not limited to, battery status, fan status, power supply status, and other detailed information for at least some objects including disk arrays and switches.","Availability collectors may provide monitoring of device availability states for fabrics , hosts , switches and other devices. Availability collectors may include, but are not limited to, device offline\/online, device mode, fabric added\/removed, host online\/offline, and switch port online\/offline collectors.","In one embodiment, the SAN management system may include a policy service that manages policies that are associated with objects on the SAN. Objects that may be monitored include, but are not limited to, fabrics , switches, switch ports, hosts , and disk arrays. The SAN management server  host  is also an object, and one embodiment may include a set of policies that monitor the SAN management server .","Policies may be viewed as rules that may be used to help manage a SAN by automating responses to certain events and conditions. Policies may detect when something goes wrong, and may be used to anticipate and handle problems before they occur. A policy may include a condition to monitor, such as a high percentage of bandwidth utilization on a switch port, and a set of actions to take when that condition is met, such as raising alerts on the SAN manager  user interface, sending e-mail, triggering SNMP traps, and\/or invoking commands and\/or scripts. In one embodiment, the policy service may be integrated with the SAN manager , permitting users to view what policies are in effect on their SAN, to define and modify policies, and to generate inventory and performance reports based on the conditions monitored by the policy service.","Policy rules may be expressed in ordinary language, for example: \u201cIf port utilization exceeds 90% of its total bandwidth for more than sixty seconds, send an e-mail to the system administrator.\u201d In one embodiment, if a condition specified by a policy is detected, the SAN management system may trigger an alarm, and the alarm instance may be added to a list of active alarms.","A policy may indicate a particular object or type of object to monitor. In general, any object for which the SAN management system provides at least one collector may be monitored. A policy may include a description of the condition to monitor on an object. The condition may be based on the value of a collector that represents the type of data to be monitored for the object. The condition may be either a quantitative evaluation (for example, less or more than a certain percentage of available disk space) or a textual value (such as whether a switch's status is \u201coffline\u201d or \u201conline\u201d).","A policy may indicate one or more actions to be taken when the condition is detected. Actions may include raising an alert on the SAN manager  user interface, invoking commands and\/or scripts, sending e-mail notification to a responsible party or parties (e.g. on an enterprise management system), and\/or triggering SNMP traps (e.g. to management frameworks such as Hewlett-Packard OpenView).","One embodiment of the SAN management system may include a set of predefined policies that may be used \u201cout of the box\u201d to achieve at least some SAN monitoring goals without having to code and configure \u201ccustom\u201d policies. In one embodiment, a predefined policy may send an alert to the SAN manager  as a default action in response to a default condition of the policy. In one embodiment, if desired, an administrator may modify the intervals that the policy service gathers SAN data, the conditions that trigger alerts and notifications, and the actions in the predefined policies. For example, the administrator may desire to adjust the threshold value for a monitored condition such as port utilization, or configure an action in addition to a default alert sent to the SAN manager . Predefined policies may include one or more of, but are not limited to, traffic policies, error policies, availability policies, and environment policies.","In one embodiment, the policy service may also provide a mechanism or mechanisms for users to create custom policies for collector types. In one embodiment, users may set the scope of a policy to apply to all objects that support a collector type. In one embodiment, users may set the scope of a policy to apply to all objects of a particular type. In one embodiment, users may set the scope of a policy to apply to a specific object.","One embodiment may include a policy engine that performs the instructions described in all policies enabled on the SAN. In one embodiment, the policy engine may be a component or process of the policy service. Each policy may be based on a particular type of data, represented by a collector, for a particular object or type of object. When the SAN management system discovers the objects on the SAN, it may determine which collectors correspond to the objects and register the relevant collectors with the policy engine. The policy engine then may receive stream(s) of real-time collector data and compare data values with the conditions described in its policies. When the alarm condition for a particular policy is met, the policy engine performs the actions described in the policy.","The policy engine may use current collector values from the data stream, and may retain the values in a buffer long enough to determine whether an alarm threshold has been met. For example, a threshold may be defined as \u201cswitch port utilization greater than eighty percent for two minutes.\u201d In this example, the policy engine may monitor the current value of a port utilization collector over a two-minute period. When a threshold condition is met, the policy engine performs whatever action is prescribed by that policy.","At least some policies may rely on vendor-supplied SNMP Management Information Bases (MIBs) to detect and monitor properties for switches, switch ports, disk arrays and other SAN devices such as switch port status, dropped frames, disk temperature, link failures, and so on. In one embodiment, the policy engine may use SNMP traps from some SAN devices, for example Brocade switches and Compaq arrays, for performance monitoring. SNMP traps from other SAN elements may simply trigger another discovery cycle.","In one embodiment, the SAN manager  may include a policy utility to facilitate policy creation and maintenance. The policy utility may lead a user through the steps of providing the information described above to create user-defined policies. The user may use the policy utility to make changes in existing predefined or user-defined policies as desired.","An alarm is a signal that is generated by a policy when the condition specified in the policy is detected or evaluated as true. An alarm may be triggered if the condition and alarm action are configured in the policy. Note that alarms are associated with alerts, but are not the same. An alarm is an internal signal used by the SAN management system. An alert to the SAN manager  is a configurable responses that may result from an alarm being triggered. When an alarm is triggered, the alarm may be referred to as active. In one embodiment, alarms in the SAN management system may be dynamic\u2014the alarm resets itself automatically when the condition monitored by the policy returns to a specified \u201cclear state.\u201d The clear state for a condition may specified either manually or automatically, depending on whether the condition is a threshold or a textual comparison condition.","One embodiment of the SAN management system may include an alarm service that may monitor and collect status and performance information from the SAN using both out-of-band (e.g., SNMP) and SAN access layer  events. In one embodiment, the alarm service may access the SAN access layer  via the SAN access layer API. This collector information may then be fed into the policy service to trigger policy actions such as SMTP mail, SAN manager alerts, shell scripts and command files, and logging for reporting purposes. In one embodiment, the SAN management system may log data collected by the alarm service in a database. One embodiment may use the Sybase ASA (Adaptive Server Anywhere) database management system for the database.","The conditions available for a policy may be determined by the type of object being monitored. Different types of policy conditions may result in different types of alarms. There are many possible types of conditions for various objects managed by the SAN management server . In one embodiment, these conditions may fall into one of two categories, threshold conditions and text comparison conditions.","One type of policy is a threshold condition with action policy. These policies may be used to monitor an object and detect when a particular numeric threshold is reached and sustained for a configurable period. The collector on which a threshold condition is based may provide data in numeric form, for example as numbered units or a percentage. This type of policy may also reset the alarm when the value being monitored returns to a normal, or below threshold value. Both the alarm state and the clear state of a threshold condition may be configured when defining the policy. A threshold condition with action policy may also provide a condition to reset the alert when the value being monitored returns to a normal, or below threshold value.","Another type of policy is a text comparison condition with action policy. This type of policy may be used to evaluate a textual state to determine the status or condition of the resource. The collector on which a text comparison condition is based provides data as one of one or more possible textual states defined for that collector. An example of a textual state is the port status of a switch as \u201conline\u201d or \u201coffline.\u201d The clear state of a text comparison condition may be automatically assigned and may be, but not is necessarily, the opposite value of the specified alarm state.","For every policy, one or more actions to be taken when the specified condition is detected may be configured. Actions may, for example, perform corrective and\/or notification functions. One type of policy action is a console alert, which may send an alert to the SAN manager  when the specified condition is detected. The desired level of severity associated with the action may be configurable. Another type of policy action is a command or script that executes a command or executable file specified for the action. Yet another type of policy action is to send e-mail notification to one or more specified recipients. In one embodiment, the policy service may be configured to send traps (e.g. SNMP traps) as notifications to network management platform applications such as Hewlett-Packard OpenView Network Node Manager, Tivoli TME, and others. The policy service traps may be handled like any other traps that are received by the network management application. In one embodiment, trap notification may be configured using the policy utility.","Utilities, tools and services provided by the SAN management system may include one or more of, but are not limited to, resource group, zoning, and LUN security utilities, tools and services, which are described below. In one embodiment, one or more of these utilities, tools and services may access the SAN access layer  via a SAN access layer API in performing their various functions.","In one embodiment of the SAN management system, the SAN manager  may serve as a centralized point from which a SAN administrator or other user may create and manage groups of SAN objects, including groups of heterogeneous components. A group may be defined as an arbitrary set of SAN elements defined by an administrator to help organize and provision resources. Groups may be implemented and used by storage administrators to identify and manually provision available storage devices  that match the quality of service requirements of particular user groups or applications. Groups may be used to represent the storage resources available to a particular host , sets of storage devices  with similar quality of service attributes, or for generic organizational purposes.","One embodiment of the SAN management system may provide a group utility for creating and managing logical groups of SAN objects including hosts , storage device  interconnects, other groups, and other objects that may be members of a group. In one embodiment, the group utility may be provided through the SAN manager . In one embodiment, the group utility may access the SAN access layer  via a SAN access layer API when creating and managing logical groups of SAN objects. The group utility may facilitate the management of end-user resources as logical groups of SAN objects. The group utility may be used to create logical storage groups where device membership may be based on zoning, LUN masking, hosts etc., and may also be based on the need for a collection of devices to be viewed as one entity for SAN management system activities such as reporting, configuring and monitoring SAN resources.","In one embodiment, the SAN management system may support one or more types of groups, including, but not limited to, generic groups, storage accounts, and storage groups. Generic groups may include switches, hosts , storage devices , and\/or nested groups of any group type. A generic group may include any type of object that can be grouped. Generic groups may be defined and used as flexibly as the administrator likes. Storage accounts may include hosts , storage devices , and\/or nested groups (storage accounts or storage groups only). A storage account may include one or more host objects and all the storage that the administrator assigns to them. Storage accounts may be used to keep track of the storage resources provisioned for hosts on the SAN. Storage groups may include storage devices  and\/or nested groups (storage groups only). Storage groups may be used to categorize storage resources by quality of service criteria including, but not limited to, cost, performance, capacity and location.","In one embodiment, groups may be nested within other groups. Nested groups may not introduce cyclic dependency. That is, if Group B is nested within Group A, Group A cannot then be nested within Group B, creating a loop. In one embodiment, the SAN management system checks for cyclic dependency and prevents users from creating such a configuration. A generic group may include any other type of group nested within it. Storage accounts may include other storage accounts or storage groups, but may not include generic groups. Storage groups may include only other storage groups, and may not include storage accounts or generic groups.","In one embodiment, there is no member exclusivity applied to generic groups. An object may have membership in multiple generic groups. In one embodiment, in certain cases, if an object is already a member of a group, it may not become a member of another group. For example, if an object is already a member of a storage account, it may not be added to another storage account. As another example, if an object is already a member of a storage group, it cannot be added to another storage group. As yet another example, an object cannot be added to a group twice, for example by adding the object individually and adding a nested group in which the object is a member. If the object is first added individually, the nested group may not be added afterward, and vice versa. In one embodiment, member exclusivity may not apply when nesting groups. By nesting one group within another, objects within the nested group become members of both groups.","One embodiment of the SAN manager may provide a groups view through which the user may view and manage groups of SAN resources. In one embodiment, groups may be represented as directories including sub-branches for each type of member object. The groups view may be used, for example, to locate a particular group by name in order to view the storage devices, hosts, switches, or sub-groups included in that group. In one embodiment, a group may be selected and a SAN management system tool or utility, or optionally a third-party tool or utility, may be launched \u201cin-context\u201d to perform one or more operations on the group or member objects in the group.","Group information for SAN objects may be displayed in one or more other SAN manager  views and panes. In one embodiment, selecting a group in the groups view (or in one or more other views of the SAN manager) may highlight the group and\/or members of the group and\/or display group information in other views of the SAN manager. For example, when a group is selected in the groups view, its member objects may be highlighted in a topology map of the SAN manager. As another example, an attributes pane may display a group objects table when a group is selected.","In one embodiment, the SAN management system may be used to generate reports on groups of SAN objects. For example, capacity reports may display the storage capacity available in a user-defined group. As another example, groups inventory reports may provide information about one or more groups such as group name, description, total storage capacity, number of hosts, number of devices, number of switches, and number of nested groups. One embodiment may track LUN allocation to storage groups, and may provide one or more storage group LUN allocation reports that the user may use in tracking and managing storage group LUN allocation.","In one embodiment, the SAN management system may provide a LUN security utility, which may combine LUN security operations including, but not limited to, searching for and locating one or more LUNs, LUN selection, LUN to disk array port binding, LUN masking and fabric zoning operations in one utility. In one embodiment, the LUN security utility may be provided to the user through the SAN manager  user interface. In one embodiment, the LUN security utility may access the SAN access layer  via a SAN access layer API when performing LUN security tasks.","In one embodiment, the LUN security utility may provide a central utility that, through a graphical user interface, guides the user through configuring LUN security operations (finding and selecting one or more LUNs, binding, masking and zoning) and allows the user to execute the configured LUN security operations with a single operation, for example, a single click of a button in the user interface. Thus, the LUN security operations (finding and selecting one or more LUNs, binding, masking and zoning) may be performed as a single operation from the perspective of the user.","In one embodiment, if any portion of the LUN security operation (binding, masking, and\/or zoning) configured and initiated by the user from the LUN security utility fails to successfully complete, the LUN security utility may \u201cback out\u201d of the entire configured LUN security operation, and may undo any portions of the LUN security operation already completed and\/or leave undone any portions not yet performed. By so doing, the LUN security operation may leave the various SAN components being operated on by the LUN security operation in their original state before the start of the operation if any portion of the operation fails. Thus, LUN security operations configured and initiated using the LUN security utility may be viewed as transactions. A transaction may be defined as a sequence of information exchange and related work that is treated as a unit for the purposes of satisfying a request and for ensuring data integrity. For a transaction to be completed and changes to be made permanent, a transaction has to be completed in its entirety.","The SAN management system may provide a single point of management from logical units of storage devices  to interconnect to SAN-connected hosts . The LUN security utility may provide a central point from which to perform LUN security operations including LUN binding (the creation of access paths (LUNs) between Addressable Units within a disk array and ports on the array), LUN masking (enabling access to Addressable Units for host HBA ports) and fabric zoning (allowing the host to see the AU and create an Operating System (OS) handle for it).","The LUN security utility may guide users through searching and locating, selecting, binding, masking and zoning operations. The LUN security utility may be used to bind LUNs to ports on the array and further mask the LUN(s) to target host HBA ports. The LUN security utility may include safety controls to ensure that invalid LUN binding and LUN masking configurations are not created. The LUN security utility may support multiple storage array vendors, and thus may serve as a centralized utility for performing LUN security operations for heterogeneous SAN components.","Using the LUN security utility, users may specify LUNs and disk array ports to bind. In one embodiment, the SAN management system may provide a LUN query tool for finding and selecting LUNs. Users may also use the LUN security utility to select hosts' HBA ports and LUNs for LUN masking\/security. The LUN security utility may allow users to select a zone that contains the array port and a host's HBA port(s). If no such zone exists, the LUN security utility may allow users to create a new zone or add the array port and the host's HBA port(s) to an existing zone.","Information about discovered SAN objects such as zones, hosts , HBAs, HBA ports, storage devices , array ports, addressable units and LUNs may be discovered by the SAN access layer  and provided to the SAN manager  and\/or one or more components of the SAN management server  by the SAN access layer  via the SAN access layer API. The SAN management server  may use the provided information, for example, to configure collectors to collect information on the discovered SAN objects. The SAN manager  may use the provided information, as well as collected SAN data from the SAN management server , in one or more displays of SAN information.","In one embodiment, a user may launch the LUN security utility from the SAN manager . The discovered SAN objects (e.g., zones, hosts , HBAs, HBA ports, storage devices , array ports, addressable units and LUNs) provided to the SAN manager  by the SAN access layer  (via the SAN access layer API) and\/or SAN management server  may be provided to the user in the LUN security utility, and the user may locate and select from the objects when configuring LUN security operations using the LUN security utility as described herein. As examples, array ports and addressable units may be selected for binding to create LUNs; LUNs may be located and selected, and hosts , HBAs and\/or HBA ports may be selected to mask to the LUNs; and zones may be created and\/or selected to which the HBA ports and LUNs are to be added. After selecting the SAN objects to be operated upon using the LUN security utility, the LUN security operations (e.g. binding, masking and zoning) may be performed as a single operation from the perspective of the user through the LUN security utility.","The LUN security operations as specified by the user in the LUN security utility may be performed to establish device paths in the SAN. In one embodiment, the SAN access layer may perform the LUN security operations (e.g. binding, masking and zoning) as specified by the user in the LUN security utility. In one embodiment, the SAN access layer may pass LUN security commands generated by the LUN security utility to the disk arrays'  management interfaces for execution using the disk array explorers. In one embodiment, the SAN access layer may pass LUN security commands generated by the LUN security utility to the hosts  for execution using the HBA explorers. In one embodiment, the SAN access layers may pass LUN security commands generated by the LUN security utility to the fabric devices for execution using the zoning explorers.","In one embodiment, the SAN manager may allow the user to remove the binding between a LUN and a port of an array in the SAN. In one embodiment, if a LUN is already bound to an array port, the user may mask a host port to the LUN by launching the LUN security utility in-context from a security pane of the SAN manager. This allows the user to skip the LUN selection and binding portions of the LUN security utility. In one embodiment, the SAN manager  may allow the user to remove LUN masking between a host port and an array LUN.","In one embodiment, for arrays that support user-configurable LUN binding, the SAN management system may provide an \u201cAdd LUN Binding\u201d utility to bind LUNs without using the LUN security utility. In one embodiment, there may be a graphical user interface (e.g. a dialog box or window) to the \u201cAdd LUN Binding\u201d utility in the SAN manager through which the user can bind LUNs. In one embodiment, the \u201cAdd LUN Binding\u201d utility may access the SAN access layer  via a SAN access layer API.","In one embodiment, the SAN management system may provide a LUN masking utility that enables an administrator to mask LUNs to host ports without using LUN security utility. In one embodiment, there may be a graphical user interface (e.g. a dialog box or window) to the LUN masking utility in the SAN manager through which the user can mask LUNs. In one embodiment, the LUN masking utility may not provide the LUN security utility's safety features. For example, when the LUN masking utility is used to mask LUNs, the SAN management system may not check for valid LUN binding, wire connectivity, or fabric zoning between the host port and the array port. In one embodiment, the LUN masking utility may access the SAN access layer  via a SAN access layer API when performing LUN masking.","In one embodiment, the SAN management system may provide a LUN query tool, accessible, for example, from the SAN manager , that may be used to search for and find LUNs on the SAN that match one or more properties, such as device vendor, storage type, capacity, configuration, cost, and location. The LUN query tool may allow the user to further refine the search for LUNs based on the storage group(s) the LUNs are assigned to and\/or on their accessibility from specified SAN-attached hosts . The LUN query tool may return a list of all LUNs that meets those requirements. The LUN query tool may be used, for example, when performing LUN security operations (e.g. binding, masking and zoning) and when allocating storage to the requester. In one embodiment, the LUN query tool may access the SAN access layer  via a SAN access layer API when performing LUN queries.","In one embodiment, the LUN query tool may be launched in context from another utility such as the zone utility or the LUN security utility. In this case, when the LUN query tool is closed, any selected LUNs in the LUN query tool results window may be selected (e.g. highlighted) in the UI of the utility from which the LUN query tool was launched.","In one embodiment, after using the LUN Query Tool to generate a list of LUNs that match search criteria, the user may create or edit a LUN attribute and apply the new attribute value across multiple LUNs in-context from the LUN query tool.","SAN Visualization and Reporting in the Exemplary SAN Management System","In one embodiment of the SAN management system, the SAN manager  may serve as a centralized point from which a SAN administrator or other user may view information about a SAN, including, but not limited to, information about the SAN's topology and heterogeneous components. In one embodiment, the SAN manager  may provide a graphical user interface (GUI) that displays information from the SAN access layer  (accessed via the SAN access layer API ) and other SAN management server  components. The SAN manager  may provide this information in an intuitive, navigable form, and may provide a central point to view the SAN, create and modify policies, administer zoning, and launch third-party SAN management tools.  illustrates an exemplary user interface of the SAN manager according to one embodiment. The SAN manager's user interface may include one or more of, but is not limited to, a menu bar , a toolbar , one or more panes (, , ), and a status bar .","Embodiments of the SAN manager may provide one or more display panes to display SAN information in complementary formats. Display panes may include, but are not limited to, a tree view , a display table , and a details view . The tree view  may include a directory tree of SAN objects. In one embodiment, an object selected in the tree view  may become active throughout the other areas of the SAN manager and may be highlighted in a topology map in details view . In one embodiment, object selection in the SAN manager may be unidirectional, moving from the tree view  to the other areas, so an object selected elsewhere in the SAN manager may not normally become active in the tree view . In one embodiment, the display table  functions as an extension of the tree view , and objects highlighted in the display table  may become active throughout the SAN manager.","In one embodiment, the tree view  may provide one or more user-selectable views of the SAN, including, but not limited to, a fabrics view, a storage view, a hosts view, and a groups view. The fabrics view may display objects on the SAN according to the objects' membership in fabrics and zones. Each fabric on the SAN may have its own root directory in the tree. Below each fabric in the fabrics view, the objects in the fabric may be categorized, for example as switches, unidentified adapters, unzoned objects, zone aliases, and zones.","The storage view may be used to view a list of SAN storage devices. The storage view may provide more granular information about SAN objects than the hierarchical fabrics view. The storage view may help the user to view storage device properties or zone memberships, and may be used in managing zone memberships. The list of unzoned storage devices may, for example, help the user to discover devices that may be added to a zone via the zone utility.","The hosts view may be used, for example, to locate a particular host by name in order to view its properties or its zone memberships. The hosts view may be used in managing zone memberships. The list of unzoned hosts may, for example, help the user to discover hosts that may be added to a zone via the zone utility. In one embodiment, the hosts view may include, but is not limited to, a list of hosts on the SAN, a list of unconnected hosts on the SAN, a list of unzoned hosts on the SAN, and a list of zoned hosts on the SAN.","In one embodiment, groups may be represented in a groups view as directories including sub-branches for each type of member object. When a group is selected, all its member objects may be highlighted in a topology map in the details view .","One embodiment may include a display table  that complements the object information selected in the tree view  by displaying the contents beneath a selected branch. The display table  may display information about the next layer of objects under the branch highlighted in the tree view . The types of details that appear in the display table  may depend on the type of object or meta-object (e.g. zones, object groups, etc.) selected in the tree view . For example, if \u201cfabrics\u201d is selected in the fabrics view, the names of all fabrics in the SAN may be displayed in the display table .","One embodiment may include a details view . In one embodiment, the details view  may provide one or more panes, each of which provides a different form of information about the SAN. The type and number of panes available in the details view  may change depending on what type of object or group is selected in the tree view . These panes may include, but are not limited to, a topology pane, an attributes pane, a policies pane, an alerts pane, a connectivity pane, an OS handles pane, an HBAs pane, a security pane, a collectors pane, an events pane, and various other panes of detailed object information. In one embodiment, at least a topology pane, an attributes pane, a policies pane, and an alerts pane may be displayed for each type of object or group.","The topology pane may provide a graphical representation of the SAN in the form of a topology map. The topology map may provide a visual representation of the objects on the SAN as well as a visual representation of the connections between objects. The topology map may reveal the switch port to which each object is connected. In one embodiment, connections displayed in an error color (e.g. red) indicate that a problem exists. In one embodiment, the user may select a connection or object in the topology map (e.g. by hovering the mouse cursor over the connection or object) to view detailed information about the connection or object. When a connection is selected, a \u201ctool tip\u201d may display the port at each end of the connection. For example, when a host is selected, information about the host may be displayed, and when a SAN storage device is selected, its properties may be shown.","In one embodiment, there may be one or more user-selectable topology map layouts, including, but not limited to, a hierarchical layout, a circular layout, a network layout, and a fan layout. In one embodiment, the hierarchical layout is the default layout. The hierarchical layout stratifies the topology map according to object type, with hosts at the top layer, switches below them, and devices of all kinds below the switches. The circular layout arranges the SAN objects in circular patterns that represent one or more objects connected to various ports on the switch. The circles of objects may not represent arbitrated loops on the SAN, however, and thus may not be used to get a list of objects that reside in an arbitrated loop. The network layout emphasizes the switches on the SAN by displaying them centrally among the various other objects to which they connect. The fan layout positions the switches at the top of the topology map and fans out all devices and hosts at a level below the switches in a symmetrical fashion.","The SAN management system may provide one or more methods to view object attributes. One method is an attributes pane in the details view . The attributes pane may display detailed information about the object or directory currently selected in the tree view . Different object types may be associated with different sets of attributes. The attributes pane may be available regardless of what object is selected in the tree view , but its contents may depend on the type of object selected. The attributes pane may display a table or tables that list the attributes and attribute values associated with the type of object selected.","In one embodiment, a connectivity pane may display connections between objects on the SAN. The connectivity pane may display information about objects that are highlighted in the tree view . The connectivity pane may be displayed when objects of various types are selected in the tree view , including, but not limited to, switches, switch ports, enclosures, storage devices, LUNs, hosts, HBAs, and unidentified adapters. In one embodiment, the connectivity pane may include one or more tables that may list attributes and attribute values of some or all objects in the connectivity pane.","In one embodiment, a details view  OS (Operating System) handles pane may be displayed when a host, an HBA, a storage device that contains one or more LUNs, or an individual LUN is selected in the tree view  (or alternatively in other views or panes of the SAN manager). The OS handles pane may display the relationships between HBA ports and the LUNs that are accessible to the HBA ports (i.e., the LUNs that are masked to those HBA ports). If a host or HBA object is selected in the SAN manager, the OS handles pane may display the WWN of the HBA port, and other information about a device port and LUN associated with that HBA port. If a device or LUN is selected, the OS handles pane may display a device port, path, and LUN, the associated host and HBA port, and other information. A different set of information may display in the OS handles pane depending on the type of object currently selected in the SAN manager.","In one embodiment, the details view  may include an HBAs pane. In one embodiment, the details view  HBAs pane is displayed when a host object is selected in the tree view . The HBAs pane may display information about each HBA discovered in the host. The HBAs pane may include a field that displays the discovered attributes of the HBA. The HBAs pane may also include a field that displays information about each port on the HBA. If a host has multiple HBAs, the HBA to view may be selected in the selected HBA field in the pane. The number of attributes of an HBA that are displayed may depend on which SAN management system explorer(s) has discovered the HBA. If the selected host is running the SAN access layer remote, then the host's HBAs may be discovered by the HBA explorer, which may provide more information about the HBAs.","In one embodiment, the details view  may include a security pane that may include one or more tables. In one embodiment, the security pane may include an array port binding table may display information including, but not limited to, the array LUN, the array port to which the LUN is bound, and the SCSI LUN ID. A single LUN may have multiple entries in this table if it is bound to more than one array port. Each entry in the table may represent a bound LUN-array port pair. In one embodiment, the details view  security pane may be displayed when certain enclosure objects are selected in the tree view . In one embodiment, the selected enclosure may be a storage array whose LUN security features the SAN management system supports. The security pane may display LUN security and LUN binding information about LUNs in the enclosure, including, but not limited to, the array LUN, the SCSI LUN ID, the array port to which the LUN is bound, the host(s) that are masked to the LUN, the World Wide Names of the HBAs that are masked to the LUN, and the World Wide Names of the HBA ports that are masked to the LUN. If an array is selected in the tree view , the array's LUNs that are bound to array ports may be displayed in the security pane.","In one embodiment, the security pane may include a LUN masking table that may be context-sensitive to selections in the array port binding table. The LUN masking table may display information about LUN-array port pairs selected in the array port binding table. In one embodiment, only LUNs that are bound to an array port appear in the security pane. If the free LUNs branch under the enclosure object is selected, then the security pane may display only LUNs that are bound to an array port and that have not yet been masked to any HBA.","In one embodiment, the details view  may include an alerts pane that may display alerts sent to the SAN manager in response to events on the SAN. Each alert in the alerts pane may represent a SAN event that has met either the trigger condition or the reset condition of an active policy. The alerts pane may display information about each alert including, but not limited to, the priority level of the alert, the date and time the alert was sent to the SAN manager, the description of the alert, which may include information about the trigger event, and the object at which the event occurred.","In one embodiment, the details view  may include an events pane that may display notifications of fabric events detected by the SAN access layer. These events may not be identical to the conditions monitored by the policy service, although the two may overlap to some extent. At least some events that appear in the events pane may be generated by changes in the discovery state of objects on the fabric, for example, when the SAN management server explorers no longer detect a previously discovered object. The events pane may be used, for example, as a debugging or troubleshooting tool. The events pane may display information about each event including, but not limited to, the object(s) on the fabric to which the event applies, the type of event, the time the event occurred, and the message associated with the event.","In one embodiment, the SAN management system may include a SAN reporter that enables the user to see reports on the details of the SAN. Embodiments of the SAN management system may provide both real-time and historical performance data for critical service-level parameters such as connectivity, available space and throughput. In one embodiment, the SAN management server may collect SAN data (gathered by the collectors) that may be provided as real-time and\/or historical performance data to the SAN reporter for use in generating real-time and\/or historical SAN performance reports. In one embodiment, the SAN access layer may discover SAN objects and information about the discovered objects that may be provided to the SAN reporter (in one embodiment, through the SAN access layer API) and used, for example, in SAN inventory and performance reports. Reports may be generated on various types of SAN objects, including, but not limited to, fabrics, devices, hosts, switches, HBAs and groups.","In one embodiment, reports may fall into one of one or more categories including, but not limited to, capacity reports, inventory reports, performance reports and alert reports. Capacity reports may display the storage capacity of the SAN as a whole and\/or by subdivisions. Inventory reports may display physical objects and\/or user-created objects such as groups and zones on the SAN. Performance reports may be based on the same collector information that is monitored by the policy engine. Performance reports may display the value of various collectors over a specified period (e.g. in graphical form). In one embodiment, performance reports may include traffic reports, error reports, summary reports and detail reports. Alert reports may provide information on historical alerts for a period covered by the report and summaries of the most active types of alerts during that period.","Various embodiments may further include receiving, sending or storing instructions and\/or data implemented in accordance with the foregoing description upon a carrier medium. Generally speaking, a carrier medium may include storage media or memory media such as magnetic or optical media, e.g., disk or CD-ROM, volatile or non-volatile media such as RAM (e.g. SDRAM, DDR SDRAM, RDRAM, SRAM, etc.), ROM, etc. as well as transmission media or signals such as electrical, electromagnetic, or digital signals, conveyed via a communication medium such as network and\/or a wireless link.","The various methods as illustrated in the Figures and described herein represent exemplary embodiments of methods. The methods may be implemented in software, hardware, or a combination thereof. The order of method may be changed, and various elements may be added, reordered, combined, omitted, modified, etc.","Various modifications and changes may be made as would be obvious to a person skilled in the art having the benefit of this disclosure. It is intended that the invention embrace all such modifications and changes and, accordingly, the above description to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The following detailed description makes reference to the accompanying drawings, which are now briefly described.",{"@attributes":{"id":"p-0014","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0018"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0017","num":"0019"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0018","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0027"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
