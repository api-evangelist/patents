---
title: Apparatus and methods for requesting an event notification over a network
abstract: The invention is directed to techniques for providing an event notification string over a network to a notification server. An application server includes a notifying application that monitors, or otherwise determines, the occurrence of an event of interest to a target user who uses a device that can receive notification of the event. The notifying application generates an event notification string that indicates that a notification to the target user should be made. The notifying application then sends the event notification string over a network, such as an IP (Internet Protocol) network, to a notification server, which provides an event notification application that processes the event notification string The event notification application determines the identity of the target user, if the event notification string does not provide this information itself, and which devices accessed by the target user should receive the notification. The event notification application then sends event notifications to one or more of the devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07069309&OS=07069309&RS=07069309
owner: Cisco Technology, Inc.
number: 07069309
owner_city: San Jose
owner_country: US
publication_date: 20001019
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["Historically, a user of one computer system has been able to send a message, such as an electronic mail message, from the computer system to another user who is using another computer system. The sender of the message can use the message to alert the user of the other computer system of the occurrence of some event that the sender wishes to pass on to the receiver of the message.","Computers can also present event notifications to a user of the computer system. For example, if the user receives electronic mail, then the user receives a message box on the display screen of the computer that informs the user that an electronic mail message has been received by the user at the computer.","Paging systems have long been available to inform a user of an event, such as a phone call. For example, if a user of a pager receives a phone call from another person, then the user receives a notification on the user's pager of the phone call, such as a beep or a vibration generated by the pager. The notification may include specific information such as the phone number to use to call back the other person displayed on the visual display of the pager.","Telephony systems have message waiting indicators (MWI) available on some telephony devices that provide notification of an event, such as a voice mail message. For example, a telephone may have a small light that lights up or blinks when a voice mail message was left with the voice mail service for that telephone.","Conventional computer systems are also capable of sending electronic mail messages to a user's computer to inform the computer of the occurrence of an event of interest to the user. For example, a user may subscribe to a computerized stock brokerage service and request that he or she be informed if the price of a specific stock falls (or rises) to a certain level. The service can then send the user an electronic mail message informing the user of the change in the stock price.","In conventional systems, software applications may provide notification of the occurrence of an event to different devices, such as providing a notification message to a pager, a telephone having an MWI, a telephone that can produce a \u201cstutter\u201d dial tone, a facsimile machine, or other devices. In conventional approaches, devices have different interfaces for event notification. For example, a user, who is the target of an event notification, receives a voice message at a computerized voice messaging service that the target user subscribes to; if the target user wishes to be notified by pager as well as by a telephone with an MWI in his\/her office of the voice message, then the computerized service receiving the message must generate two different event notification messages, one for the pager and one for the telephone in the target user's office. The service must also use the interfaces that are available for such an event notification message, which typically requires some overhead to construct and transmit the message, such as an electronic mail message, over a network.","In contrast, using the techniques of the present invention, a computer application sending an event notification string based on an event notification URL (Uniform Resource Locator) can send the string in a relatively low overhead network format. For example, the application can include the event notification string as part of an HTTP (hypertext transport protocol) request that minimizes the time and effort to prepare the request as well as to send it over a network, such as the Internet, compared to generating and sending a message through electronic mail. In addition, the notifying or requesting application (e.g. one that requests that an event notification be made) can prepare an event notification string relying on a single format, such as a URL-based format, and send the string to an event notification application. This application handles the details of determining where to send the event notification and what interface to use (e.g. electronic mail or public telephone network) without unduly burdening the notifying application itself. The requesting application, such as a voice messaging service, can thus provide services at a more optimal level, because the application does not have to expend resources determining all the details of every event notification. For example, after receiving the event notification string, the event notification application can query a database of subscribers, such as a LDAP (Lightweight Directory Access Protocol) database, to obtain information on a user's preferences for notification of an event, such as what devices (e.g. pagers, telephones, etc.) a user wishes to receive the notification.","In one embodiment, the invention is directed to a method in a notification server for providing a notification of an occurrence of an event. The method includes receiving an event notification string including event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information, determining notification information that identifies a device to be notified of the occurrence of the event in response to receiving the event notification string, and providing an event notification to the device in response to determining the notification information. Thus, a server or other computing device can provide a string of event notification information without all the detailed information necessary to accomplish the event notification and is not burdened by the details of performing and monitoring the event notification itself.","In another embodiment, the method includes an HTTP request that includes the event information and the identification information. Thus, a server or other computing device providing the event information and identification information can use a relatively low overhead approach (i.e., the HTTP request) to request the event notification.","The method includes, in a further embodiment, receiving one or more of an event type, an event value, an application session identifier, and a parameter. The event notification string includes the appropriate information identifying the event information, as well as additional information, such as parameter information and the application session identifier that identifies the notifying application. Thus, the notification server can use this additional information to obtain additional details related to the occurrence of the event, such as the identity of the target user who is to receive the notification.","In an additional embodiment, the method includes accessing a database that provides the notification preferences of a user. Thus, the user can indicate one or more devices (e.g. a pager) that he\/she wishes to use to receive a notification. The notification preferences are stored in a database that the notification server can use to determine the user's preferences. Another embodiment of the method includes accessing an application-state registry. For example, a server handling the notification can obtain the identity of the target user to receive a notification from information stored in the application-state registry that records information about an application session of the notifying application that has requested the notification. In an additional embodiment, the method includes accessing subscriber profile information from a lightweight directory access protocol (LDAP) directory. For example, a server handling the notification can obtain information about the target user's preferences from the LDAP directory. Another embodiment of the method includes notifying the device according to the notification preferences. For example, a server handling the notification determines what preferences the user has for notification from the database (e.g., during working hours to send an electronic mail message to the user's computer, or during the evening to send a notification to a pager). The server then uses those preferences to notify the user. In another embodiment, the method includes notifying one or more preferred devices identified by the notification preferences. For example, the user can indicate that he\/she wishes to be notified by activating an MWI indicator on his\/her telephone and also by activating his\/her pager.","The method includes, in a further embodiment, receiving an application session identifier that identifies the current session of the application, such as the notifying application, and accessing an application-state data record based on the application session identifier. For example, the notification server can use the application session identifier to access an application-state data record that provides information on the session and identifies the target user who is to receive the notification.","In another embodiment, the method includes providing the event notification based on an application programming interface (API) to a service that provides communication to an external resource. For example, the notification server can use an electronic mail API to send an electronic mail message to a paging service instructing the service to page the target user's pager.","In further embodiment, the method includes providing an event identifier in response to receiving the event notification string and determining the notification information, receiving a query request based on the event identifier that requests a status of the event notification, and providing a response to the query request that indicates the status of the event notification. Thus, a server or computer device, which provided the event notification string to indicate that an event notification should be done, can make a request to determine whether the notification has actually occurred.","In one embodiment, the invention is directed to a notification server configured for providing a notification of an occurrence of an event. The notification server includes a network interface and an executable resource. The network interface is configured to receive an event notification string including event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information. The executable resource is configured to determine notification information that identifies a device to be notified of the occurrence of the event based on the event notification string. The executable resource is configured to provide through the network interface an event notification to the device based on the notification information. Thus, a server or other computing device can provide a string of event notification information to the notification server without all the detailed information necessary to accomplish the event notification and is not burdened by the details of performing and monitoring the event notification itself.","In another embodiment, the event notification string is a HTTP request including the event information and the identification information. Thus, a server or other computing device providing the event information and identification information can use a relatively low overhead approach (i.e., the HTTP request) to request the event notification.","The event notification string, in another embodiment, includes one or more of an event type, an event value, an application session identifier, and a parameter. The event notification string includes the appropriate information identifying the event information, as well as additional information, such as parameter information and the application session identifier that identifies the notifying application. Thus, the notification server can use this additional information to obtain additional details related to the occurrence of the event, such as the identity of the target user, who is to receive the notification.","In a further embodiment, the executable resource accesses a database including notification preferences of a user. Thus, the user can indicate one or more devices (e.g. a pager) that he\/she wishes to use to receive a notification. The notification preferences are stored in a database that the notification server can use to determine the target user's preferences. In another embodiment, the database is an application-state registry. For example, a server handling the notification can obtain the identity of the target user from information stored in the application-state registry that records information about an application session of the notifying application that has requested the notification. In a further embodiment, the database is a lightweight directory access protocol (LDAP) directory, and the executable resource accesses user profile information from the LDAP directory. For example, a server handling the notification can obtain information about the target user's notification preferences from the LDAP directory. In another embodiment, the network interface notifies the device according to the notification preferences. For example, a server handling the notification determines what preferences the user has for notification from the database (e.g., during working hours to send an electronic mail message to the user's computer, or during the evening to send a notification to a pager). The server then uses those preferences to notify the user. In an additional embodiment, the network interface notifies one or more preferred devices identified by the notification preferences. For example, the user can indicate that he\/she wishes to be notified by activating an MWI indicator on his\/her telephone and also by activating his\/her pager.","In a further embodiment, the event notification string includes an application session identifier that identifies the current session of the application, such as the notifying application, and the executable resource accesses an application-state data record based on the application session identifier. For example, the notification server can use the application session identifier that identifies the current session of the notifying application to access an application-state data record that provides information on the session.","In another embodiment, the executable resource provides the event notification based on an API to a service that provides communication to an external resource. For example, the notification server can use an electronic mail API to send an electronic mail message to a paging service to page the target user's pager.","In a further embodiment, the network interface provides an event identifier generated by the executable resource based on the event notification string and the notification information; the network interface receives a query request based on the event identifier that requests a status of the event notification; and the executable resource provides through the network interface a response to the query request that indicates the status of the event notification. Thus, a server or computer device which provided the event notification string to indicate that an event notification should be done can make a request to determine whether the notification has actually occurred.","In one embodiment, the invention is directed to a notification server configured for providing a notification of an occurrence of an event. The notification server includes a network interface and means for producing an event notification. The network interface is configured to receive an event notification string including event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information. The producing means is configured to determine notification information that identifies a device to be notified of the occurrence of the event based on the event notification string. The producing means is configured to provide through the network interface an event notification to the device based on the notification information.","In another embodiment, the invention is directed to a computer program product that includes a computer readable medium having instructions for providing a notification of an occurrence of an event, such that the instructions, when carried out by a computer, cause the computer to perform any or all of the operations disclosed herein of the invention. For example, the instructions cause the computer to receive an event notification string including event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information. The instructions also cause the computer to determine notification information that identifies a device to be notified of the occurrence of the event in response to receiving the event notification string and to provide an event notification to the device in response to determining the notification information.","In one embodiment, the invention is directed to a method in a computer system for requesting a notification of an occurrence of an event. The method includes detecting the occurrence of the event, generating an event notification string in response to detecting the occurrence of the event, and providing the event notification string to the notification server in response to generating the event notification string. The event notification string including event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information on a notification server. Thus, a server or other computing system can provide a string of event notification information without all the detailed information necessary to accomplish the event notification and is not burdened by the details of performing and monitoring the event notification itself.","In another embodiment, the method includes generating an HTTP request including the event information and the identification information. Thus, a server or other computing system providing the event information and identification information can use a relatively low overhead approach (i.e., the HTTP request) to request the event notification.","Another embodiment of the method includes referencing a URL that includes the event information, the identification information, and an address of the notification server. The method also includes generating an HTTP request based on the URL. For example, a server or computing system can use the URL to generate the HTTP request including an event notification string using a URL-based format.","A further embodiment of the method includes generating one or more of an event type, an event value, an application session identifier, and a parameter. The event notification string includes the appropriate information identifying the event information, as well as additional information, such as parameter information and the application session identifier that identifies the notifying application. Thus, the additional information can be used to obtain additional details related to the occurrence of the event, such as the identity of the target user who is to receive the notification.","In another embodiment, the method includes generating an application session identifier that corresponds to an application-state data record. The application session identifier identifies the current session of a notifying application executing on the computing system and an application-state data record that records information about the current session, including, for example, the identity of the target user.","In a further embodiment, the method includes receiving an event identifier in response to providing the event notification string, providing a query request based on the event identifier that requests a status of the notification, and receiving a response indicating the status of the notification. Thus, the computer system can receive an event identifier and make a request to determine whether the notification has actually occurred.","In one embodiment, the invention is directed to a computer system configured for requesting a notification of an occurrence of an event. The computer system includes a network interface and a first executable resource. The first executable resource is configured to detect the occurrence of the event and to generate an event notification string in response to detecting the occurrence of the event. The event notification string includes event information that identifies one or more features of the event and identification information that identifies a second executable resource capable of processing the event information on a notification server. The network interface is configured to provide the event notification string to the notification server. Thus, the computer system can provide a string of event notification information without all the detailed information necessary to accomplish the event notification and is not burdened by the details of performing and monitoring the event notification itself.","In another embodiment, the event notification string is an HTTP request including the event information and the identification information. Thus, the computer system providing the event information and identification information can use a relatively low overhead approach (i.e., the HTTP request) to request the event notification.","In an additional embodiment, the computer system includes a URL that includes the event information, the identification information, and an address of the notification server, and the first executable resource generates an HTTP request based on the URL. For example, the computer system can use a URL to generate the HTTP request including an event notification string using a URL-based format.","In a further embodiment, the event notification string includes one or more of an event type, an event value, an application session identifier, and a parameter. The event notification string includes the appropriate information identifying the event information, as well as additional information, such as parameter information and the application session identifier that identifies the notifying application. The additional information can be used to obtain additional details related to the occurrence of the event.","In another embodiment, the event notification string includes an application session identifier that corresponds to an application-state data record. The application session identifier identifies the current session of a notifying application executing on the computing system and an application-state data record that records information about the current session, including, for example, the identity of the target user.","In a further embodiment, the network interface receives an event identifier in response to the event notification string; the first executable resource provides through the network interface a query request based on the event identifier that requests a status of the notification; and the network interface receives a response indicating the status of the notification. Thus, the computer system can receive an event identifier and make a request to determine whether the notification has actually occurred.","In one embodiment, the invention is directed to a computer system configured for requesting a notification of an occurrence of an event. The computer system includes a network interface and means for producing an event notification string. The producing means is configured to detect the occurrence of the event and to generate an event notification string in response to detecting the occurrence of the event. The event notification string includes event information that identifies one or more features of the event and identification information that identifies a second executable resource capable of processing the event information on a notification server. The network interface is configured to provide the event notification string to the notification server.","In one embodiment, the invention is directed to a computer program product that includes a computer readable medium having instructions for requesting a notification of an occurrence of an event, such that the instructions, when carried out by a computer, cause the computer to perform any or all of the operations disclosed herein. For example, the instructions cause the computer to detect the occurrence of the event, to generate an event notification string in response to detecting the occurrence of the event, and to provide the event notification string to the notification server in response to generating the event notification string. The event notification string includes event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information on a notification server.","In one embodiment, the invention is directed to an HTTP request suitable for use in requesting a notification of an occurrence of an event. The HTTP request includes event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information on a notification server","In another embodiment, the invention is directed to a computer data propagated signal embodied in a propagation medium, having a packet of data including an HTTP request suitable for use in requesting a notification of an occurrence of an event. The HTTP request includes event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information on a notification server","In a further embodiment, the invention is directed to a URL suitable for use in requesting a notification of an occurrence of an event. The URL includes an address of the notification server, as well as event information that identifies one or more features of the event and identification information that identifies an executable resource capable of processing the event information on a notification server.","In some embodiments, the techniques of the invention are implemented primarily by computer software. The computer program logic embodiments, which are essentially software, when executed on one or more hardware processors in one or more hardware computing systems cause the processors to perform the techniques outlined above. In other words, these embodiments of the invention are generally manufactured as a computer program stored on a disk, memory, card, or other such media that can be loaded directly into a computer, or downloaded over a network into a computer, to make the device perform according to the operations of the invention. In one embodiment, the techniques of the invention are implemented in hardware circuitry, such as an integrated circuit (IC) or application specific integrated circuit (ASIC).","The invention is directed to techniques for providing an event notification string over a network to a notification server. A notifying application (e.g., software application requesting a notification) monitors, or otherwise determines, the occurrence of an event of interest to a target user of a device (e.g. pager) that can receive notification of an event. For example, a user of the notifying application originates an event notification providing a voice message for the target user to receive via the target user's pager or other device. The notifying application provides an event notification string (e.g., as part of an HTTP request based on an event notification URL) that requests that the target user be notified of the occurrence of the event. The notifying application then sends the event notification string over a network, such as an IP network, to the notification server, which provides an event notification application that handles the request. The event notification string can include an event type, event value, an application session identifier, and\/or other parameters, such as a parameter identifying the target user to be notified. The event notification application determines who the target user is who is to be notified, if the event notification string does not provide this information itself.","For example, if the notifying application is a voice mail application and the application user leaves a voice message for the target user, then the notifying application provides to the notification server a notification string that includes an application session identifier that identifies the current session of the notifying application with the application user. The application session identifier indicates an application-state data record in a database that describes the state of the current session of the notifying application. The notification server then uses the application session identifier to look up the application-state data record, which identifies the target user to be informed of the voice mail message. Once the event notification application knows the identity of the target user to be notified, the event notification application can then look up the preferences of the target user for notification in a user database. For instance, the target user may prefer to be notified by pager, as well as having a MWI light activated on the target user's office telephone. The notification server determines these preferences from the user database and can send an electronic mail message to the paging service for the target user, and use the public telephone networks to send out a signal activating the MWI indicator on the target user's office telephone. Thus, the notifying application can make a relatively low-overhead request to the event notification application using the event notification string for a notification without determining all of the notification details. The event notification application can determine the notification details, the devices to be notified, and make the event notification to the devices preferred by the target user without requiring any additional expenditure of resources by the notifying application.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 1","FIG. 1"],"b":["50","42","42","42","50","18","18","18","18","18","18","18","62","64","66","68","302","304","18","18","18","18","18","18","18"],"i":["a ","b","a","b","c","d","e","f","a","b ","c","d","e","f "]},"In general, a notifying application  on an application server  determines that an event of interest to a user has occurred. For example, a user that originates the event uses the mobile phone to leave a message for a target user who is to be notified of the message. In one embodiment, the originating user is an application user that access the application server  through a proxy browser . The notifying application  sends an event notification string (e.g. as part of an HTTP request) via the IP network  to the event notification application  on the notification server . The notification server  determines the target user to be notified and the devices that the target user wishes to use for notification. In the example shown in , the target user prefers that notification be given to a telephone \u2032 with a MWI and to a pager \u2032. The event notification application  then provides the event notification to the telephone \u2032 and to the pager \u2032. This process will be described in more detail in connection with the flowcharts illustrated in , , and . The individual components illustrated in  will be discussed in more detail in the following paragraphs.","The web server  is preferably a server computer including a processor, a memory, and communication hardware (not specifically shown) that enables communication over a network, such as the IP network . The web server  provides a communication connection between the proxy browser  and the application server . In one embodiment, the web server  is a server providing communications over the World Wide Web.","The application server  is a server computer including a processor, a memory, and communication hardware that enables communication over a network, such as the IP network . The application server  also includes an executable resource or notifying application  that provides services in response to requests received over the network (e.g. HTTP requests received from the proxy browser ). The notifying application  can provide a notifying function by making requests for notification (e.g. via HTTP requests) over the IP network  to the event notification application  on the notification server .","The notification server  is a server computer including a processor, a memory, and communication hardware (not specifically shown) that enables communication over a network, such as the IP network . The notification server  includes an executable resource or event notification application  that provides notification services in response to requests received over the network (e.g. HTTP requests). Each executable resource, such as  or , includes one or more programs, scripts, procedures, routines, objects, and\/or other software entities, capable of executing on a computing device.","The proxy browser  is a computing device including a processor, a memory, and communication hardware that enables communication over the IP network . The proxy browser  provides browser services over the World Wide Web for clients that have limited capabilities and which do not typically include their own web browsers. The proxy browser  is capable of making requests (e.g. HTTP requests) over the network  to the application server . In one embodiment, the proxy browser  is capable of making notification requests (e.g. HTTP requests) over the network  directly to the notification server  without having the notification requests pass through or be initiated by the application server  and notifying application .","The fat client is a computer system including a processor, a memory, an output device, such as a visual display, an input device for the customer to provide input, and communication hardware that enable communication over a network, such as the IP network . The fat client includes a web browser  and a local application  running on the fat client and providing services to the fat client . The fat client is capable of initiating a notification request to the notification server , as well as being capable of receiving a notification, such as an electronic mail or other notification message, for the user of the fat client from the notification server .","The thin client is a computer system including a web browser . The thin client typically has less capacity than the fat client and does not typically initiate a notification request to the notification server . The thin client is capable of receiving a notification, such as an electronic mail or other notification message, for a user of the thin client from the notification server .","The user client devices , , and , illustrated as a cordless telephone , a fax machine having an attached telephone, and an analog telephone , are referred to herein as \u201cskinny clients,\u201d defined as devices that are able to interface with a user to provide voice and\/or data services (e.g., via a modem) but cannot perform any direct control of the associated access subnetwork. The wireless user client devices , , and , illustrated as a mobile or cellular telephone , a handheld computing device (e.g., a 3-Com Palm Computer or Windows CE-based handheld device) , and a pager , are referred to as tiny clients. \u201cTiny clients\u201d tend to have even less functionality than skinny clients in providing input and output interaction with a user. The clients  do not typically initiate notification requests directly to the notification server , but would initiate such requests through the proxy browser  and the application server . However, in one embodiment, the clients  can also receive event notifications in a direct mode (i.e., directly from the notification server , such as through the public telephone network). For example, the clients  receive an event notification from the notification server , as shown for clients \u2032 and \u2032 in . In another embodiment, the clients  can also receive event notifications in an indirect mode, that is, from the notification server  via the IP network  and the proxy browser .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 2","FIG. 1"],"b":["305","306","308","310","314","314","316","316","316","324","1","324","2","380","382"],"i":["a","b","a","b","c"]},"The service API  is one or more programming interfaces available on the notification server  that the event notification application  uses to communicate with services providing access to external resources, such as electronic mail or databases on the Internet. The service API  is, for example, an interface to electronic mail based on SMTP (Simple Mail Transfer Protocol), to messaging services based on IMAP (Internet Message Access Protocol), to a directory over a network based on LDAP (Lightweight Directory Access Protocol) or to other resources or services. In another example, the service API  is an interface to telephony services or protocols that allow the notification server  to communicate with telephony devices  over the PSTN (public switched telephone network). In one embodiment, the service API  provides an interface to device notification services -, - available on service servers -, - (described in more detail later).","The user database  is a database, such as a database provided on a computer over a network or other suitable connection allowing communication with the notification server . The user database  includes profile information for users of the client devices  who wish to be notified of events. In one embodiment, the users are subscribers to services, such as a voice messaging service or a paging service. In another embodiment, the users are subscribers to an event notification service provided by the event notification application . In one embodiment, the users provide profile information and notification preferences over the Internet to the user database . In one embodiment, the notification server  accesses the user database  over the Internet through the network interface . In other embodiments, the notification server  accesses the user database  through a network connection other than the Internet, or the user database  is part of the notification server . In a further embodiment, the user database  is an LDAP directory including user information or subscriber profile information. The notification server  accesses the user database  to determine user preferences for notification. For example, the user can indicate what devices  he or she wishes to be notified upon the occurrence of an event.","The application-state database  is a database that includes application-state data records  that specify the application state for an instance of an application. For example, an application-state data record or \u201cbrownie\u201d  can specify the application state for an instance of the notifying application . In one embodiment, the application-state data record  includes a session identifier (e.g., \u201csesid\u201d) that identifies a unique application session for an instance of the notifying application . The application server  generates the unique session identifier for each application-state data record . For example, the user of client device establishes an interactive application session, such as a voice mail or messaging session, with the notifying application  through the proxy browser . The notifying application  uses the application-state data record  to maintain a current state of the application session. In one embodiment, the application-state data record  also includes additional information related to event notification, such as the identity of a target user that the application user wishes to notify, for example, to notify the target user of a message provided by the application user. In one embodiment, the application-state data record  is implemented according to commonly assigned, copending U.S. patent application Ser. No. 09\/461,191, which is described in more detail later.","The network interface , (referred to generally as network interface ) is an interface that provides communication through a network, such as the Internet, between the notification server  and the application server . In one embodiment, the network interface  is a hardware interface, such as network interface card, along with associated supporting software. The network interface , in one embodiment, also provides a communication connection from the notification server  to the user database  and the application-state database . In another embodiment, the network interface provides a communication connection from the application server  to the application-state database . The application server  sends an event notification string  through the network interface to the notification server .","The user devices , , and (referred to generally as user device ) are client devices, such as a client device , client computer , or other client device or computer, such as an IP telephone communicating through a computer over an IP network .","Each service server - or - (referred to generally as service server ) is a server computer including a processor, a memory, and communication hardware (not specifically shown) that enables communication over a network, such as the IP network . The service servers -, - include device notification services -, - (referred to generally as device notification service ) that provides notification to one of the user devices , as described below. The device notification service  includes one or more programs, scripts, procedures, routines, objects, and\/or other software entities, capable of executing on a computing device. For example, the device notification service  is a SMS (Short Message Service), SMTP mailing service, a paging service (using a paging protocol) and\/or other service capable of providing a notification to a user device .","An application user communicates with the application server  by using the user device and generates an event (e.g., a request to page the target user). The application server  sends an event notification string  to the notification server . The notification server  sends an event notification -, - (referred to generally as event notification ) by interfacing with the device notification services  such as SMS, SMTP, a paging service (using a paging protocol), and other services by using the respective service API's . The device notification service  provides a device notification -, - (referred to generally as device notification ) based on the event notification . The device notification service  sends the device notification  to the target user at one of the user devices  used by the target user. For example, the event notification application  uses a paging service API  to send an event notification  to a paging notification service , which in turn sends a device notification  (e.g. phone number for the target user to call) based on the event notification  to the target user's device (e.g. pager) .","In one embodiment, a computer program product  including a computer readable medium (e.g. one or more CDROM's, diskettes, tapes, etc.) provides software instructions for the notifying application , event notification application , proxy browser , and\/or other devices shown in . The computer program product  can be installed by any suitable software installation procedure, as is well known in the art. In another embodiment, the software instructions can also be downloaded over a wireless connection. A computer program propagated signal product  embodied as a propagated signal on a propagation medium (e.g. a radio wave, an infrared wave, a laser wave, sound wave, or an electrical wave propagated over the Internet or other network) provides software instructions for the notifying application , event notification application , proxy browser , and\/or other device shown in . In alternate embodiments, the propagated signal is an analog carrier wave or a digital signal carried on the propagation medium. For example, the propagated signal can be a digitized signal propagated over the Internet or other network. In one embodiment, the propagated signal is a signal that is transmitted over the propagation medium over a period of time, such as the instructions for a software application sent in packets over a network over a period of seconds, minutes, or longer. In another embodiment, the computer readable medium of the computer program product  is a propagation medium that the computer can receive and read, such as by receiving the propagation medium and identifying a propagated signal embodied in the propagation medium, as described above for the computer program propagated signal product .",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 3","b":["330","320","330","332","320","320","334","336","336","338","340","342","344"]},"The notifier field  indicates the identity of a notification server  that is capable of handling the event notification string . The application field  indicates the identity of an executable resource or software application available on the notifier, such as event notification application , that is capable of processing the event information . In the example shown in , the event notification application  is a CGI (Common Gateway Interface) script that executes on the notification server . The event fields ,  include the event type field  that provides information on the event type and the event value field  that provides an event value associated with the event type field . The session ID field  includes an application session identifier for an application session (e.g. session of the notifying application ) that enables identification of an application-state record  recording the current status of that application session. The parameter field  provides information on additional parameters, such as information on a user device , or an identification of a target user.","In one embodiment, the event notification string  includes the application field , and one or more of the event type field , event value field , session ID field , and the parameter field . In another embodiment, the event notification string  is based on the URL  and is included in an HTTP request (e.g. GET request) that the application server  transmits to the notification server . In a further embodiment, the application server  transmits the URL  to another computer or server, such as in an HTML page that lists the URL  in the page. For example, the application server  transmits the URL  to the proxy browser , which in turn submits the event notification string  (e.g., as part of an HTTP request) to the notification server .","The event fields ,  may include, in one embodiment, certain event types and values that are typically used with a session ID  or a parameter  to identify a target user, as shown in the following examples:\n\n","The event fields ,  include the following event types and values that do not typically require a session ID  or a parameter  to identify a target user:\n\n","The event type field  and value field  are not limited to the event types and values listed herein. In other embodiments, the event fields ,  list other types of event types and values suitable for use in requesting an event notification.",{"@attributes":{"id":"p-0077","num":"0083"},"figref":"FIG. 4","b":["400","320","302"]},"In step , an application server  detects the occurrence of an event, for example by using a notifying application . For example, an electronic mail handling application detects the arrival of a piece of electronic mail for a target user, who is a user of the electronic mail service. The electronic mail may be of a particular type or from a particular user, such as electronic mail from the user's supervisor. In this example, the supervisor is an application user of a user device in communication with the electronic mail or notifying application .","In another example, an application user accesses a notifying application  (e.g., voice mail application) through a user device to leave a voice mail message for a target user. The target user is also a user of the notifying application  and\/or has provided user profile information to the user database . In this example, the notifying application  treats the arrival of the voice mail message at the application  as an occurrence of an event of significance to the target user.","In step , the application server  generates an event notification string  (e.g., as part of an HTTP request). The event notification string  includes an application field  and event information fields  (as described above for ).","In step , the application server  sends the event notification string  to the notification server . In one embodiment, the application server  makes an HTTP request, including the event notification string , to the notification server .","In step , the application server  receives an event identifier from the notification server  that identifies the event notification. The application server  can use the event identifier to request from the notification server  the current status of the event notification.","In step , the application server  determines whether or not to request the current status of the event notification. For example, the application user has requested that he\/she receive feedback on whether the target user actually receives the notification about a message that the application user has left for the target user.","In step , the application server  sends a query based on the event identifier to the notification server . The query requests the status of the event notification  to the client devices  identified for the target user. For example, the application server  can determine whether the notification  is pending, complete, or has some other status.","In step , the application server  receives the current status from the notification server  (as shown, for example, in , to be discussed later).","In step , the application server  determines from the current status if the notification is complete. If the status is not complete, the application server  optionally determines to repeat the query (returning to step ).",{"@attributes":{"id":"p-0087","num":"0093"},"figref":"FIG. 5","b":["500","322","500","502","504","506","506","506"],"i":["a","b "]},"The event status header  provides the event identifier (e.g., \u201c1122334455xyz\u201d) and the event type and value (e.g., \u201cMSGWAITING:ON\u201d). The event state  indicates that the event indicated by the event identifier was successfully processed, in this example, at \u201c14:45\u201d (2:45 PM). The device report indicates, in this example, that the target user's pager at telephone number 804-555-0000 was successfully paged. The device report indicates, in this example, that the message light on the target user's telephone number 804-555-1212 was not changed. The \u201cRNA\u201d in the second device report indicates that the resource (e.g., telephone) was not available.",{"@attributes":{"id":"p-0089","num":"0095"},"figref":"FIG. 6","b":["302","320","304","602","616"]},"In step , the notification server  receives the event notification string  (e.g. as part of an HTTP request) from the notifying application  on the application server .","In step , the notification server  determines the identity of a device  (e.g. pager) used by the target user to receive the notification of the occurrence of the event. If the event notification string  includes an application session identifier , the notification server  determines the identity of the device  by using the session identifier to access one of the application-state data records  from the application state database . In one embodiment, the application-state data records  includes information on the identified session of the notifying application , including information on the target user. For example, the application user who is using the identified session of the notifying application  indicates that he\/she wishes to leave a voice mail message for the target user. Alternatively, the event notification string  includes a parameter  that identifies the target user, and the notification server  uses the parameter  to identify the target user. In one embodiment, after the event notification server  identifies the target user, then the notification server  looks up user profile information in the user database  to identify one or more user devices  that the target user has indicated that he\/she wants to receive messages on.","In step , the notification server  sends the event notification  via the service API  and device notification service  to the user device  identified for the target user. For example, as shown in  the notification server  sends one event notification - to the device notification service -, which sends a device notification - to user device , and another event notification - to the device notification service -, which sends a device notification - to user device ","In step , the notification server  sends an event identifier to the application server  that had sent the event notification string . In one embodiment, the application server  sends the event notification string  as part of an HTTP request, and the response from the notification server  includes the event identifier.","In step , the application server  determines whether or not to request the current status of the event notification from the notification server .","In step , the notification server  receives a query from the application server  based on the event identifier that requests the status of the event notification (e.g., whether the notification is pending, completed, or has another status).","In step , the notification server  provides the current status (see, for example, ) in response to the query from the application server .","In step , the application server  determines from the current status if the notification is complete. If the status is not complete, the application server  optionally determines to repeat the query (returning to step ).",{"@attributes":{"id":"p-0098","num":"0104"},"figref":"FIG. 7","b":["700","322"]},"In step , the user of a notifying application  (e.g. a voice mail application) uses a device  (e.g., telephone) to access the notifying application  and leave a message for another individual or target user who is to receive the message. The notifying applications  stores in the application-state database  an application-state data record  indicating the state of the current session of the notifying application  that is interacting with the application user. The data record  provides information about the session, which is identified with a session ID, including, for example, the identification of the target user to receive the message.","In step , the application server  opens a connection to the notification server  (e.g., an Internet connection). The application server  then sends an event notification string  in an HTTP request to a notification server  (e.g., notifier) to request notification of the voice message to the target user, based on an event notification URL . The event notification URL  shown as an example in step  includes a notifier (e.g., \u201capp.cgi\u201d), an event type (e.g., \u201cMSGWAITING\u201d), an event value (e.g., \u201cON\u201d), and session ID (e.g., \u201csesid12123434abcd\u201d). See the discussion for  for more details on the format of the event notification URL .","In step , the notification server  returns an event status identification to the application server  in response to the HTTP request sent in step . The application server  then closes the connection with the notification server .","In step , the notification server  accesses the application-state database  and reads the application state information for the session of the notifying application  from the application-state data record . In this example, the application-state data record  is identified by the session identifier (e.g., \u201csesid12123434abcd\u201d) received in step  in the event notification string  by the notification server  from the application server . The notification server  determines the target user to be notified from the application-state data record .","In step , the notification server  looks up the target user's preferences for notification in a user database  (e.g., an LDAP directory) and finds one or more devices  for notifying the target user (e.g. two telephones with MWI capability and one pager). The target user, at a previous point in time, has indicated to the user database  what his\/her notification preferences are, such as when the target user subscribed to the voice mail system.","In step , the notification server  sends the notification via a service API  and device notification service  to the devices  indicated by the target user. For example, the notification server  uses telephony service API's  to access the MWI devices (e.g. telephones) and uses an SMTP service API  to send an SMTP mail message to the paging service for the pager. In other examples, the notification server  sends the event notification  by interfacing with device notification services  such as SMS, SMTP, a paging service (using a paging protocol), and\/or other services by using respective service API's .","In one embodiment, the application-state data record  is implemented according to commonly assigned, copending patent application Ser. No. 09\/461,191, filed Dec. 15, 1999, entitled \u201cApparatus and Method for Providing Server State and Attribute Management for Voice Enabled Web Applications\u201d the disclosure of which is incorporated in its entirety herein by reference, which discloses an arrangement for providing the application server state and managing application attributes for a notifying application . For example, the notifying application  may be a voice mail application accessed by an application user who provides a message (i.e., occurrence of an event) for a target user. An application server  configured for executing voice-enabled web applications for a web browser generates and maintains a server-side data record  that includes application state information and user attribute information for an identified user session with a web browser. The application server , in response to receiving a new web page request from a browser (e.g., proxy browser ), upon verifying that a new session with the user is required, creates a transient application session and executes a web application instance of the notifying application  to complete the request, and generates the server-side data record  including application state information for the application session and user attribute information for the user of the application session. The server-side data record also includes a session identifier that uniquely identifies the session with the user of the application session. The application server  stores the server-side data record  in a memory resident, such as the application-state database , within the server side of the network, and sends to the browser the session identifier and the corresponding web page requested by the web browser. In response to receiving a second web page request from the browser that includes the session identifier, the application server  executes a new web application instance of the notifying application , and recovers the server-side data record  from the memory based on the session identifier included in the second page request. Hence, the application server  is able to resume processing relative to the prior application state and user attributes specified in the server-side data record , providing a state-full session for the user without the passing of the application state and the user attributes to the browser as cookies.","Thus, the application-state data record  is available to a notification server  from the application-state database . The event notification application  within the notification server  accesses the application-state data record  in response to receiving the event notification string  to obtain information about an event, such as the identity of a target user who is to receive a voice mail message.","While this invention has been particularly shown and described with references to preferred embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims.","For example, the user database  and the application-state database  can be databases provided on separate computers from the notification server  or application server . Alternatively, a server can include one or more of the databases. For example, the notification server  can include the user database .","In addition, the components shown in  may be combined within one or more computing devices. For example, the user device can be an IP telephone connected directly to the desktop computer that also serves as the application server .","Furthermore, the notifying application  can send the event notification string  to the event notification application  by communication protocols other than HTTP. The notifying application  can use any communication protocol suitable for communicating a string of information between two devices. Suitable protocols can provide for communication over a network, through telephone lines, by a direct connection between two computers, or by other transmission via radio, light, sound, electrical transmission, or other approaches."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular description of preferred embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
