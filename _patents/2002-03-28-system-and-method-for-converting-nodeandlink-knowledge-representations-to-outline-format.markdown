---
title: System and method for converting node-and-link knowledge representations to outline format
abstract: A computer-implemented system and method for translating node-and-link knowledge representations to an outline format is disclosed. The representation includes one or more node objects and one or more link objects. Each link object has a “from node identifier” that identifies the node object in a concept map connected to a link's tail and a “to node identifier” identifying the node object in the concept map to which the link object points. A translation program traverses all of the node objects in a node-and-link representation as directed by the link objects by following links out of each node depending of the link objects' “to node identifier” such that an outline is output having node object information and link object information hierarchically interrelated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06907417&OS=06907417&RS=06907417
owner: International Business Machines Corporation
number: 06907417
owner_city: Armonk
owner_country: US
publication_date: 20020328
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE RELATED ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["The present invention relates to knowledge representation and automated conversion from one knowledge representation format to another. More specifically, the present invention relates to converting a directed, possibly-cyclic, graph of labeled nodes and links, commonly used for visual knowledge representation and known as a concept map or a semantic network, to traditional outline form.","Semantic networks are a well-known knowledge representation mechanism. A semantic network includes nodes representing concepts, objects, actions (these are referred to hereafter as concept nodes or simply nodes), connected by directional links defining the relationships between nodes (See. e.g., Quillian, M. R. (1968). Semantic memory, In M. Minsky (Ed.), (pp. 227-270). Cambridge, Mass.: MIT Press). Semantic networks can be, and often are, represented visually\/graphically.","When semantic networks are graphically depicted, they are also known as concept maps (See, e.g., Kommers, P. A. M., Jonassen, D. H. & Mayes, J. T. (Eds.) (1992). . Berlin: Springer-Verlag). Hence, a concept map is a visual representation of knowledge of a domain. Concept maps have also been called knowledge maps, semantic maps, webs, and semantic webs (See, Bromley, K. D. (1996). Webbing with Literature: Creating Story Maps with Children's Books (Second Edition). Needham Heights, Mass.: Allyn & Bacon). Concept maps are often drawn with a computer-based editor, so as to share knowledge among people.","Visually, a node may be represented by a geometric object, for example a rectangle or oval, containing a textual label or name. Each relationship link is represented by a line with an arrowhead at one or both ends. In some concept mapping tools, links may also be textually labeled. Together, nodes and labeled links define propositions, which may include assertions about a topic, domain, or thing.  is an example of a concept map where the nodes and link represent the knowledge \u201cbirds have wings\u201d.","A small number of concept map tools automate the conversion of concept maps to outlines. Many users of concept map tools may also wish to see their ideas\/thoughts\/knowledge organized in outline form. However, the few existing tools that do such translation elide from the outline much of the important knowledge and information that is contained in the concept map.","Concept mapping tools that include the ability to translate a concept map to outline format include Learning Tool (See Kozma, R. B. (1992). Constructing knowledge with Learning Tool, in P. A. M. Kommers, D. H. Jonassen, and J. T. Mayes (Eds.), (pp. 23-32). Berlin: Springer-Verlag) and INSPIRATION\u00ae (Inspiration Software, Inc. (1998). . Portland, Oreg.: Inspiration). The most prominent and representative example of prior art is the INSPIRATION\u00ae software product. Inspiration is a popular consumer product for computer-based concept mapping. The INSPIRATION\u00ae product can produce outlines from concept maps, but there are significant problems with these outlines and these problems are evident in the other concept map tools as well.","First, labels that appear on inter-node links are ignored in Inspiration's outlines; these labels appear nowhere in the outline translation of a map. The labels on links provide a primary source of knowledge in a concept map, the labels define the relationships between two nodes, and without labels on inter-node links, all that is known from the map is that there is some relationship between the connected nodes.","The problem in eliding the labels on inter-node links from the outline translation of a concept map is that because these concept-to-concept relationships provide important semantic information the outline is an impoverished representation of the knowledge contained in the map. If a user believed it important to name the relationship between two concepts, this information ought to be incorporated into the alternative outline representation of that user's concept map.","So, for example, for the concept map shown in , if the link labels were disregarded in and only concept nodes were included, a portion of the outline view may appear as:","animal\n\n","Second, concept maps may have multiple layers of knowledge and information. In INSPIPATION's\u00ae translation of a concept map to an outline, only the information in a single level of the map is included in an outline. That is, none of the knowledge or information in any of the child\/sub-maps is included. A user may request an outline translation of each sub-map individually. Not only is this cumbersome, but the entire set of knowledge elements, that is, the entirety of the knowledge represented by the overall concept map, may not be viewed in a single outline. Some of the hierarchical relationships among all concepts are lost once several sub-outlines are thus opened, thereby defeating the reason for the outline view.","Third, concept map graphs may have cycles. As a specific example, assume a link connecting nodes A and B with an arrowhead pointing to node B, and a second link pointing from node B to node C, and a third link pointing from node C back to node A. In the INSPIRATION\u00ae product's outlines, the link causing the cycle, the link from node C to node A, is ignored. It simply does not appear in the outline. There is no information in the outline portraying the knowledge that C is somehow related to A. In INSPIRATION\u00ae, the outline translation of the concept map with the A-to-B-to-C-to-A cycle looks like:","A","A. B\n\n","Therefore, a need exists for a system and method that includes, in outline form, all of the semantic and relational information provided in graphical concept maps.","A computer-implemented system of the present invention is provided for translating node-and-link knowledge representations to an outline format. The representation includes one or more node objects and one or more link objects. Each link object has a \u201cfrom node identifier\u201d that identifies the node object in a concept map connected to a link's tail and a \u201cto node identifier\u201d identifying the node object in the concept map to which the link object points. A translation program traverses all of the node objects in a node-and-link representation as directed by the link objects by following links out of each node depending of the link objects' \u201cto node identifier\u201d such that an outline is output having node object information and link object information hierarchically interrelated.","A method for creating an outline by translation of a node-and-link knowledge representation includes providing a concept map or semantic net having one or more node objects. Each node object has: a location of a node in the concept map, and zero or more connecting link objects that connect the node objects. The link objects have a \u201cfrom node identifier\u201d that identifies the node object in the concept map connected to the link's tail and a \u201cto node identifier\u201d identifying the node in the concept map to which this link points. The concept map is tranlated to an outline by traversing all of the node objects in the concept map as directed by the link objects and following link objects out of each node objects depending of the link object's \u201cto node identifier\u201d. The outline is ouput and includes a hierarchical listing of node objects and link objects.","The methods of the present invention may be implemented by a program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform method steps for creating an outline by translation of a node-and-link knowledge representation.","These and other objects, features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.","The present invention provides an improved system and method for translating concept maps or semantic networks into an outline format. This disclosure describes a translation method in which the organization of all thoughts and concepts that exist in a concept map, including the names of all inter-concept relationships and all knowledge at all abstraction or sub-map levels, is presented in a single inclusive outline. The present invention also provides that outlines derived via translation of the knowledge and information in a concept map should incorporate all of the semantic information included in that concept map, and at the same time avoid presenting knowledge or information redundantly.","In accordance with the present invention, the translations of the concepts map presented above may include the following:","animal\n\n","A","A. relationship from A to B: B\n\n","It should be understood that the elements shown in FIGS. may be implemented in various forms of hardware, software or combinations thereof. Preferably, these elements are implemented in software on one or more appropriately programmed general purpose digital computers having a processor and memory and input\/output interfaces.","Referring now in detail to the figures in which like numerals represent the same or similar elements and initially to , , , and together comprise an example of a semantic network or concept map about \u201canimals\u201d. This example will be used in the following description to illustratively demonstrate the capabilities of the present invention. It is to be understood that the present disclosure considers labeled links, although unlabeled links are handled as well. Furthermore, the present disclosure considers node-and-link knowledge representations, including concept maps and semantic networks, to be (a) graphs composed of labeled nodes and links; (b) such graphs are directed, links have directions indicated by an arrowhead at either or both ends of a link; (c) such graphs may be cyclic, that is, they may include cycles (e.g., there may be a link connecting nodes A and B with an arrowhead pointing to B, and another link connecting nodes A and B with an arrowhead pointing to A; or, there may be a link pointing from node A to node B, another link pointing from node B to node C and a third link pointing from node C back to node A; and so on); and (d) the graph's nodes and links are used to represent knowledge as described above.","In addition, the present invention considers concept maps, semantic networks, graphs that incorporate a sub-net, sub-map, or child map mechanism (hereafter referred to as sub-maps). Sub-maps are used to represent conceptual abstractions and reduce the visual clutter in a node-and-link graph (concept map, semantic net, etc.). In other words, a single concept may actually be an abstraction, that is, a single node at one level of detail but one that represents an arbitrarily complex concept, action, or object at a more detailed level. This single abstraction node may be \u201cexpanded\u201d into an elaborated definition of its own which includes multiple concepts\/nodes and links.","For example, in a software tool that exemplifies a preferred embodiment of this disclosure, in addition to simple concept nodes (e.g., nodes ,  and  in ) connected by links (e.g., links  and ), sub-map nodes (e.g., sub-map node  in ) may also appear in any level of a map. This single element (node) represents a single abstract concept, object, or action in the map level in which the element appears. However, a sub-map node (e.g.,  in ) may include another (sub-)network (e.g., ) of nodes and links, that is, another (sub-)map, representing the elaborated definition of the single concept represented by the sub-map node. The details of this sub-network can be brought into focus, so that its multiple constituent knowledge elements are made visible.","For example, the \u201cAnimals\u201d concept map in includes a \u201cBird\u201d abstraction at the topmost level of the map. An animal node  connects to sub-map  by a link . The abstraction is represented by a single sub-map node  at this level of detail. One may view the elaborated sub-map represented by this single node . shows the details of an example \u201cBird\u201d sub-map.",{"@attributes":{"id":"p-0043","num":"0051"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"i":["b ","b","c ","c "],"b":["1100","1140","1160","1180","1120","1130","1150","1170","1110","1195","1100","1190","1195","1200","1240","1260","1280","1220","1230","1250","1270","1210"]},"An activity often associated with concept map usage is the organization of ideas in preparation for writing a report, composition, or story. A very common alternative representation for thought or idea organization is an outline. In fact many people are accustomed to and prefer outlines for organizing thoughts when preparing to write prose. In response to this need, a (small) number of concept map tools automate the conversion of concept maps to outlines.","Referring to , a block\/flow diagram of the system in which the conversion method of the present invention operates is illustratively shown. Block  includes a computer in which a software program having a translation\/conversion algorithm  of the present invention stored in memory. In block , a concept map\/semantic network\/graph that include nodes interconnected by links to represent knowledge is input into computer  and\/or stored therein. In block , an output outline created by the present invention, the conversion algorithm  is provided. The output outline  includes all of the knowledge and information that is provided in the semantic network  but now in an alternative outline format. In a preferred embodiment of the present invention, the outline  is displayed on a display monitor .","A sample result of using the outline translation method on the concept map of results as follows:","Animal","I. has: skin","II. breathes: oxygen","III. Bird\n\n","Each entry in the outline corresponds to one or more elements (nodes and links) in the concept map shown in FIG. . The same outline is shown below annotated with numbers corresponding to the knowledge elements in FIG. . At the start of each line\/entry in the outline is the number (in square brackets) of the corresponding node(s) and, possibly, link shown in FIG. . For example, the outline entry annotated [] is the entry corresponding to the \u201cAnimal\u201d concept node numbered  in ; the entry annotated [ and ] represents the \u201chas\u201d link  and the \u201cskin\u201d node . The entry annotated [ and ] is a single entry representing two nodes: the \u201cBird\u201d sub-map node  that appears in the top level of the network (), and the main node  of the corresponding sub-map shown in . The handling of sub-map nodes and the main node of the corresponding sub-map is described below.",{"@attributes":{"id":"p-0052","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[1000]","Animal"]},{"entry":[{},"[1010 and 1020]","I. has: skin"]},{"entry":[{},"[1030 and 1040]","II. breathes: oxygen"]},{"entry":[{},"[1060 and 1100]","III. Bird"]},{"entry":[{},"[1130 and 1140]","\u2003\u2002A. can: fly"]},{"entry":[{},"[1150 and 1160]","\u2003\u2002B. has: wings"]},{"entry":[{},"[1170 and 1180]","\u2003\u2003\u2003\u20091. have: feathers"]},{"entry":[{},"[1110 and 1120]","\u2003\u2002C. evolved from: dinosaur"]},{"entry":[{},"[1195 and 1200]","\u2003\u2002D. Bald Eagle"]},{"entry":[{},"[1210 and 1220]","\u2003\u2003\u2003\u20091. hunts: fish"]},{"entry":[{},"[1230 and 1240]","\u2003\u2003\u2003\u20092. is native to: North America"]},{"entry":[{},"[1250 and 1260]","\u2003\u2003\u2003\u20093. has: talons"]},{"entry":[{},"[1270 and 1280]","\u2003\u2003\u2003\u2003\u2002\u2009a. are: powerful"]},{"entry":[{},"[1190 and 1100]","\u2003\u2003\u2003\u20094. is a: Bird"]},{"entry":[{},"[1050 and 1000]","\u2003\u2002E. is a: Animal"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{},"figref":"FIG. 2","i":"a ","b":["1060","1000","1060","1100","1000"]},"Then, elements  through  of the \u201cBird\u201d submap, the elements below the main \u201cBird\u201d node  of that submap, appear below the \u201cBird\u201d entry in the outline (entry III.) and indented further. For example, in the \u201cBird\u201d submap in , the concept node \u201cfly\u201d  is directly connected to the \u201cBird\u201d concept node , by the relationship link labeled \u201ccan\u201d . Thus, in the outline, \u201cfly\u201d (along with its connecting link \u201ccan\u201d) appear a single level deeper than \u201cBird\u201d\u2014in the outline \u201ccan: fly\u201d appears as entry III. A. (annotated as [ and ]) at the immediately subsequent indentation level after \u201cIII. Bird\u201d.","Also in , \u201cwings\u201d  appears one level away (one relationship link away) from \u201cBird\u201d  and the \u201cfeathers\u201d concept  is one additional level further away from \u201cBird\u201d  but directly linked to (a single level away from) \u201cwings\u201d . The corresponding outline entries show \u201cwings\u201d (along with its connecting link \u201chas\u201d) one level below and indented to the right from \u201cBird.\u201d The \u201chas: wings\u201d entry appears at III. B. (annotated as [ and ]), one hierarchical level below (and indented to the right of) III. Also, \u201cfeathers\u201d (along with its relationship link \u201chave\u201d) appears at the next indentation level (one more level below and indented further). It is entry III. B. 1 (annotated as [ and ]), one level deeper than entry III. D.","Carrying this scheme further, the \u201cBald Eagle\u201d sub-map node  is one level subordinate to (one link away from) the \u201cBird\u201d node  in . Thus, it appears as item \u201cIII. D. Bald Eagle\u201d in the outline (the entry annotated [ and ], one level subordinate to the \u201cIII. Bird\u201d entry. The elements ( through ) subordinate to the \u201cBald Eagle\u201d node  in the submap shown in then appear at the appropriate subordinate levels of the outline. For example, the \u201chunts\u201d link  connects \u201cBald Eagle\u201d  to the \u201cfish\u201d concept . In the outline, this gives rise to the entry \u201cIII. D. 1. hunts: fish\u201d (annotated as [ and ]).","The textual labels that appear on relationship links are integrated into outline entries providing more complete information and a more accurate translation of the knowledge in the concept map. As examples, see the first two entries below item III. D., e.g., a bald eagle \u201chunts: fish\u201d (the entry annotated as [ and ]) and \u201cis native to: North America\u201d (the entry annotated as [ and ]). If a relationship link has no label, then the outline could simply have no text prefixing the node's label. For example, for a node link with no label, pointing to a node labeled \u201cNorth America\u201d, the outine entry would look like, e.g., \u201cIV. North America\u201d. Alternatively a default link label could be used for the text of the outline entry, in which case the entry might look like, e.g., \u201cIV. is related to:Whatever\u201d. The colon in each entry's text may be considered optional; if elided, an entry would look instead like, for example: \u201cIII. D. 2. is native to North America.\u201d","The text of each outline entry depends on the direction of each relationship link: when a link, X, between nodes A and B has an arrowhead pointing to node B, then subordinate to the entry for A itself will be an outline entry that includes: <X's label> followed by an optional colon, followed by 1 space, followed by <B's label>. For example, for the concept map of  (\u201cbirds have wings\u201d), the corresponding outline in accordance with the present invention would look like:","birds\n\n","A. birds\n\n","birds\n\n","The present methods may assume that each level of the map, including the top level, has a node that the concept map author has designated as the main or central node, the node to start with on that level. In a preferred embodiment, the main node is visually distinguished by being surrounded by a three-dimensional border\u2014for example, the \u201cAnimal\u201d node  in the top level map and the \u201cBird\u201d node  in the sub-map in . If, at any level, the concept map does not have a designated main node, the concept-map-to-outline method chooses one. In a preferred embodiment, the topmost node in a given map level (that is, in the topmost level of the map or in any sub-map) is chosen as the main node. This heuristic assumes concept map authors build their maps top-down, with the most important node being the topmost. If there is a tie for topmost node, i.e., if 2 or more nodes are equivalently topmost, then among those, the node closest to the left-right center position is selected.","The method of the present invention performs a recursive depth-first traversal of nodes, beginning with the main node of the topmost level of the graph\/net\/map, and traversing according to the directions indicated by links' arrowheads. Then, the same depth-first traversal is performed for each of those nodes, if any, that have not been traversed by the depth-first traversal that began at the main node.","Because these graphs are directed, there may exist nodes that cannot be reached when performing the traversal from the main node. Such an \u201coutlier\u201d node could have a directed link pointing to some other node, but no link pointing to itself from any node that can be reached by traversing directed links from the main node.","For example, if a directed traversal of a graph shown in  begins at a main node, \u201cObjectA\u201d, the traversal would not touch node \u201cX\u201d using prior methods. In contrast, the method of the present invention handles the conversion of such outlier nodes to the outline in the steps described in the next paragraph.","Referring to  with continued reference to , the method performs the following steps for each level of a concept map. First, in block , the method does a depth-first traversal of nodes starting with the main node and following the directed links. Then, in block , the method checks to see if any nodes remain which have not yet been output to the outline. If any exist, in block , the topmost such node is picked as the starting point for performing a new depth-first traversal (If there is a tie for topmost node, one of the equivalently topmost nodes is arbitrarily picked). After performing this depth-first traversal, this process of handling outlier nodes (steps  and ) is repeated until there are no nodes remaining that have not been converted\/output to the outline.","The method returns to step  to again find any nodes that have still not yet been output because in the course of traversing depth-first from outlier node A, the traversal may visit and output node B which formerly had not been output. In this way, node B (which was formerly among the not-output-yet nodes) will not be output twice to the outline.","Graphs representing knowledge (semantic nets, concept maps) may also include cycles. These result in an outline that (a) includes all the relevant information found in the graph, and (b) does not redundantly duplicate information. The first type of cycle of caused by the fact that links may be bi-directional.  shows a bi-directional cycle. A corresponding outline includes the information that \u201cthe chicken came before the egg\u201d and \u201cthe egg came before the chicken\u201d. So the outline looks like (assuming \u201cThe chicken\u201d as the starting concept for purposes of the outline):","The chicken","A. came before: The egg\n\n","The chicken\n\n","The present invention provides that in a graph that contains cycles (e.g., FIG. ), infinite loops are prevented by the translation method by flagging each node as \u201chas been output\u201d when the node has first been completely output to the outline. This flag is checked in the method to prevent repeatedly following and translating the links outgoing from each node, as shown below:","The chicken","A. came before: The egg\n\n","In another type of cycle, a particular node may be visited twice (or more times) in the course of traversing all directed links in a graph. When this occurs, the information about subordinate links and nodes of the node (call the node A), that is, the links pointing from A to other node(s) and those thereby connected nodes, is not output to the outline twice (or more times). Advantageously, this information is only incorporated in the outline once.","Using a simpler example for clarity, the concept map in  will be used to show that if a node, A, is visited more than once while performing the depth-first traversal from from the main node and from outlier nodes. Node A's subordinated details, information about the links leading out from node A and the other nodes connected by those links, are not repeated.",{"@attributes":{"id":"p-0076","num":"0105"},"figref":"FIG. 4"},"After accounting for the outlier node \u201cX,\u201d the algorithm winds up traversing to node \u201cThingC\u201d twice, first when traversing the graph from \u201cObjectA\u201d and then when traversing from \u201cX\u201d. Nonetheless the subordinate details of \u201cThingC\u201d do not appear twice in the outline. The outline corresponding to  is shown below. The first time node \u201cThingC\u201d is visited, its subordinate details are output to the outline (the entry \u201cA. contains: ThingD\u201d which is subordinate to entry II., the first entry for \u201cThingC\u201d). When node \u201cThingC\u201d is later re-visited by following the link from \u201cX\u201d to \u201cThingC\u201d, an entry for the node (its label along with the link's label, entry III. A.) is output rid to the outline, but its subordinate details, i.e., the links leading out from node \u201cThingC,\u201d are not repeated. The outline includes:","ObjectA","I. is related to: ConceptB","II. has a: ThingC\n\n","III. X\n\n","One other notable feature of the conversion method is its handling of sub-map labels in outlines. Again, in any level of a map there may be a sub-map node (a single node representing a more elaborated map of nodes and links). The sub-map node has a label assigned by the concept map author. When the associated sub-map is brought into view, the sub-map has a main node which also has a label. If the labels of these two nodes are identical, which is often the case, the two nodes should be represented in the outline by a single entry, rather than two separate entries.","If possible the method collapses the two entries for a sub-map node and the main node of the corresponding sub-map in a single outline entry. The method may be programmed to be conservative in doing so and only performs this flattening of the two nodes into one outline entry if they have the identical label.","Beginning with a simple example for clarity,  is a main level of a concept map about birds. This top level includes a sub-map node labeled \u201ca goose\u201d.  is a sub-map associated with the \u201ca goose\u201d submap node in FIG. . Here, the main node of the sub-map is also labeled \u201ca goose\u201d, the same label as on the sub-map node itself.","The folowing outline is produced by the translation method of the present invention for the concept map of FIGS.  and :","a bird\n\n","Without this feature, the outline for this concept map would look like the outline below, with two redundant entries (III and III.A.):","a bird\n\n","To avoid illogical semantic errors, the present invention performs this flattening of the two nodes into one outline entry only when they both have the identical label. Label equivalents may also be employed to facilitate flattening. For example, two different labels may be equated as equals. In this case, flattening of the two nodes may be performed if equivalent uses exist. Other criteria may be employed as well.","Returning to , if the present invention did not provide flattening as described above, the outline for this concept map would be as shown below. The outline below includes redundant information and is less comprehensible than the outline provided by the present invention. With regard to redundancy, for example, entry III. and its subordinate entry III.A. have the identical label, as do entries III.A.4. and III.A.4.a. The non-flattened outline is as follows:","Animal\n\n","Referring again to , translation program  takes a graph (semantic net, concept map) as input. A graph in this context is a set of nodes interconnected by links. In a preferred embodiment, nodes and links are represented in the software by objects (as in an object-oriented languauge such as JAVA\u2122).  shows the attributes of the classes defining these objects and how they are related. This information is shown as a UML diagram (with the addition of identifying numbers for purposes of identification); UML is a standard notation for portraying information about software objects.  also shows the hierarchy of knowledge element (node and link) classes.","Referring now to , KnowledgeElement  is an abstract class. Actual objects in a graph are instances of the \u201cnode\u201d classes, ConceptNode  or SubmapNode . Link  objects connect a node on one end of the link to another node on the other link end. SubmapNode  is a subclass of, and thereby inherits instance variables (attributes of objects) and behavior from, ConceptNode , which is in turn a subclass of KnowledgeElement . So a ConceptNode  object (an instance of the ConceptNode  class) has instance variables id, its unique identifier; linksFromNode, a collection of all the Link objects that point from the ConceptNode to some other node; center which indicates the node's location in the concept map; as well as the two variables inherited from KnowledgeElement : label, the node's textual label, and the flag hasBeenOutput, which is used by the method disclosed here.","A SubmapNode  object includes all of these instance variables\/attributes plus submap  which points to a collection (a Java Vector object) having zero or more KnowledgeElements  comprising the sub-map  associated with a sub-map node. A Link  object includes the IDs of the node at its tail and the node at its head, in addition to label and hasBeenOutput which its class inherits from the KnowledgeElement class . Each Link  object has a specific direction, that is, it points from the node at its tail to the node at its head. Thus, each Link  object has a \u201cfrom node identifier\u201d that identifies the node object in the concept map connected to the link's tail and a \u201cto node identifier\u201d identifying the node in the concept map to which the link points.","When a bi-directional link, X, connects nodes A and B in a concept map (as in the example of FIG. ), this is internally represented in a preferred embodiment of a concept map tool that incorporates the disclosed translation method by having two Link  objects, one pointing from node A to node B and a second pointing from B to A. A concept map  includes a collection  of one or more KnowledgeElement instances.","In the following discription, the general term \u201cmap\u201d is used to mean graph, network, net, or concept map, and \u201csub-map\u201d is used to mean child map, sub-map, sub-network, sub-net, or sub-graph as described above. Numbers in the text correspond to the numbers in ,  and  which depict a flow diagram for the present invention.","Referring to , a main program block  is shown. In block , a subroutine OUTPUT_LEVEL is called. OUTPUT_LEVEL is called for the top level of the map and sets an initial indentation level 0. Null is used as the most recently output label:","OUTPUT_LEVEL (main level map, 0, null)","Referring to , a function, OUTPUT_LEVEL, is shown. Function, OUTPUT_LEVEL, includes arguments \u201csubmap\u201d, \u201cindentLevel\u201d, and \u201cpreviousLabel\u201d. These provide the following:\n\n","In block , if A's label is not equal to previousLabel, then in block , start a new line of the outline being output. In block , spaces are output to indent the current outline entry as appropriate for the current indentation level. For example, (4*indentationLevel) spaces are output.","In block , output the next \u201coutline item ID\u201d (prefix), as appropriate, for the current indentation level. For example, in a preferred embodiment, at indentation level 1, the item id's are Roman numerals I, II, III . . . , at level 2, they are capitals letters A, B, C, . . . at the 3rd level the outline item IDs are 1, 2, 3 . . . , at the 4th level the IDs are lowercase letters a, b, c . . . and so on. This is a standard notation for outlines. Other notations may be used as well. In an optional special case:","If indentationLevel=0, output a dot\/bullet for the \u201citem ID\u201d, or output nothing for the \u201citem ID\u201d, according to implementer's preference. This may only occur for the root node of the entire outline.","In block , output node A's label, and, in block , call function OUTPUT_NODE for node A, and at the next indentation level:","OUTPUT_NODE (A, indentationLevel+1).","In block , if A's label=previousLabel, then in block , call OUTPUT_NODE with the indentation level unchanged. By not outputing a new outline entry here for node A, redundant entries are eliminated for a sub-map node and the main node of its associated sub-map when the two nodes have the same label:","OUTPUT_NODE (A, indentationLevel)","Iteratively traverse all untouched (not yet traversed; not yet output) nodes.","In block , find all nodes in argument \u201csubmap\u201d (the current level of the map\/sub-map) that have not yet been marked \u201chas been output\u201d. This is checked in block . In block , if there are no remaining untouched nodes, the program exits and returns to the caller.","If untouched nodes remain, in block , the program picks the topmost of all such nodes and calls this node A (if there is a tie among multiple nodes for the topmost one, arbitrarily pick one of those tied or use predetermined criteria to resolve the tie). In block , a new line in the outline is started. In block , spaces are output to indent current outline entry as appropriate for the current indentation level. In block , the next \u201coutline item ID\u201d is outputed as appropriate for the current indentation level. Node A's label is output in block .","In block , if A is a sub-map node, then retrieve the sub-map associated with sub-map node A in block ; call this sub-map SM. In block , mark node A as \u201chas been output\u201d. In block , call OUTPUT_LEVEL (SM, indentation level+1, A's label). Then, return to step .","In block , if A is not a sub-map node, then call OUTPUT_NODE (A, indentation level+1) in block . Then, return to block , and after each untouched node is output to the outline, the program returns to block  to re-find any untouched nodes at that point. This is because traversing nodes from one untouched node may involve traversing\/touching a previously untouched node. This advantageously prevents outputing an initially untouched node more than once.","Referring to , the function, OUTPUT_NODE, is described in more detail. OUTPUT_NODE (OUTPUT_NODE (node A, integer indentLevel)) includes arguments \u201cA\u201d AND \u201cindentLevel\u201d, where:\n\n","In block , mark node A as \u201chas been output\u201d. In blocks  to , iteratively, for each and every (if any) relationship link that is connected at one end to A AND that has an arrowhead pointing to another node B (has a direction pointing from A to B (regardless of whether it is Of bi-directional and thereby also has an arrowhead pointing to A)) perform the following:","In block , the next relationship link leading out from node A is obtained. In block , if there are no remaining links to process, exit OUTPUT NODE at block . Otherewise continue.","In block , start a new line (new entry) in the outline. In block , output (4 * indentLevel) spaces. This indents the entries at each subsequently higher indentation level further to the right of its superordinate entry. (The integer 4 here can be any integer, preferably a single digit number). In block , the next \u201coutline item ID\u201d is output as appropriate for the current indentation level. In block , if the relationship link from node A to node B has a non-empty label, then:","1) output the link's label in block ","2) output \u201c:\u201d (this step is optional)","3) output 1 space character","In block , if the relationship link from node A to node B has a label which is empty\/blank, then:","1) output default \u201cis related to\u201d","2) output \u201c:\u201d (this step is optional)","3) output 1 space character","4) Or: alternatively, instead of the preceding steps 1) through 3), if the link's label is blank, output nothing here (the choice is according to user preferences).","In block , label the node that the link points to \u201cB\u201d and output the textual label of node B. In block , if B is a sub-map node, then retrieve the sub-map associated with sub-map node B; call this sub-map SM in block . In block , call OUTPUT_LEVEL for the sub-map (OUTPUT_LEVEL (SM, indentation level+1, previousLabel)). Thus, the program performs a depth-first traversal recursively for each sub-map node touched by the traversal.","In block , if node B has not yet been marked as \u201chas been output\u201d (this test prevents infinite looping in this method caused by cycles in the map), then, in block , OUTPUT_NODE is called for the node B to output all the links leading from B: OUTPUT_NODE (B, indentation level+1). This makes the algorithm recursively perform a depth-first traversal for each concept node touched by the traversal. Return to block  to check the next relationship link leading out from node A.","Having described preferred embodiments of a system and method for converting node-and-link knowledge representations to outline format (which are intended to be illustrative and not limiting), it is noted that modifications and variations can be made by persons skilled in the art in light of the above teachings. It is therefore to be understood that changes may be made in the particular embodiments of the invention disclosed which are within the scope and spirit of the invention as outlined by the appended claims. Having thus described the invention with the details and particularity required by the patent laws, what is claimed and desired protected by Letters Patent is set forth in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The invention will be described in detail in the following description of preferred embodiments with reference to the following figures wherein:",{"@attributes":{"id":"p-0022","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0026"},"figref":"FIGS. 2","i":"a-c "},{"@attributes":{"id":"p-0024","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0028"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0029"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0031"},"figref":"FIGS. 7 and 8"},{"@attributes":{"id":"p-0029","num":"0032"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0033"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0031","num":"0034"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0032","num":"0035"},"figref":["FIG. 12","FIG. 11"]}]},"DETDESC":[{},{}]}
