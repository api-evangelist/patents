---
title: Out-of-band host management via a management controller
abstract: Techniques presented herein provide approaches for out-of-band host management via a management controller. In one embodiment, the management controller provides an application programming interface (API) specifying one or more functions for managing one or more applications executing on a host computer. The one or more functions may be invoked by a requesting entity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566847&OS=08566847&RS=08566847
owner: Cisco Technology, Inc.
number: 08566847
owner_city: San Jose
owner_country: US
publication_date: 20110311
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DESCRIPTION","Overview","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["Embodiments presented in this disclosure generally relate to techniques for host management and, more particularly, to techniques for out-of-band host management via a management controller.","As the number of computer servers used by businesses has substantially increased, a number of techniques have been developed to remotely manage the operation of such servers. For example, large data centers are frequently managed using a variety of different remote management tools, including, e.g., simple terminal connections, remote desktop applications and sophisticated software tools used to configure, monitor, and troubleshoot both computer hardware and software. The remote management tools are often configured to communicate using standardized protocols.","One embodiment provides a system that includes one or more computer processors, a memory and a management controller. The memory contains one or more applications. The management controller is communicatively connected to: (i) an out-of-band network for accessing the management controller and (ii) a private network for communicating with an execution engine running on the system. The management controller is configured to perform an operation for managing the system. The operation includes providing a first application programming interface (API). The first API specifies one or more functions for managing at least a first one of the applications. The operation also includes receiving, via the out-of-band network, a request for the first application to perform a predefined action, wherein the request invokes a function specified in the first API. The operation also includes, via the private network, sending the request to the execution engine to instruct the first application to perform the predefined action responsive to the request.","Another embodiment provides a management controller configured to perform an operation for managing a host computer, the host computer including a computer processor, a memory, and the management controller. The operation includes providing a first application programming interface (API). The first API specifies one or more functions for managing one or more applications executing on the host computer. The operation also includes receiving, via an out-of-band network for accessing the management controller, a request for at least a first one of the applications to perform a predefined action, wherein the request invokes a function specified in the first API. The operation also includes, via a private network communicatively connecting the management controller to an execution engine running on the host computer, sending the request to the execution engine to instruct the first application to perform the predefined action responsive to the request.","Yet another embodiment provides a computer-implemented method that includes providing a first application programming interface (API). The first API specifies one or more functions for managing one or more applications executing on a host computer. The method also includes receiving, via an out-of-band network for accessing a management controller configured to manage the host computer, a request for at least a first one of the applications to perform a predefined action, where the request invokes a function specified in the first API. The method also includes, via a private network communicatively connecting the management controller to an execution engine running on the host computer, sending the request to the execution engine to instruct the first application to perform the predefined action responsive to the request.","Embodiments presented in this disclosure provide techniques for out-of-band host management via a management controller. The management controller is configured to manage a variety of functions of a host computer, such as sensors and power operations. To this end, the management controller may communicate with components of the host computer using messages composed according to the Intelligent Platform Management Interface (IPMI) specification. IPMI refers to monitoring, system control and communication interfaces implemented directly in platform management hardware and firmware (e.g., the hardware and firmware of the host computer). Examples of a management controller include a baseboard management controller (BMC) and a lights out management system.","In one embodiment, the management controller provides a first application programming interface (API) for managing one or more applications (or operating system) executing on the host computer. A user of a management console may send a request to the management controller via an out-of-band network of the host computer. The management controller may forward the request to an execution engine executing on the host computer. For example, the request may be forwarded via a private network between the management controller and the host computer. The private network may be provided by one or more virtualized network interface cards (NICs) via a bus operatively connecting the management controller and the host computer. In one embodiment, the bus operates in accordance with the Universal Serial Bus (USB) specification. Further, depending on the embodiment, the first API and\/or the execution engine may be extensible during runtime.","By configuring the management controller, the execution engine, and\/or the private network according to the techniques disclosed herein, the management controller may manage applications executing on the host computer more conveniently and\/or efficiently at least in some cases. For example, the management controller may manage applications executing on the host computer without requiring drivers to be written or provided for the operating system executing on the host computer, the drivers implementing some or all of the functionality provided by the first API. At least in some cases, the first API may be more easily and\/or conveniently extensible when the first API is not dependent on the drivers for the operating system of the host computer. Accordingly, the first API facilitates managing applications executing on the host computer, e.g., where the host computer operates as part of a cloud computing infrastructure. In this regard, the applications may be managed more consistently relative to other approaches in which the management controller does not communicate with the host computer and that manage the applications on an inconsistent and\/or ad-hoc manner. For example, using the techniques disclosed herein, the management controller may serve as a proxy to applications executing on the host computer, and the applications may be managed without having to correlate the host computer to the management controller.","The following discussion references various embodiments. However, it should be understood that the disclosure is not limited to specific described embodiments. Instead, any combination of the following features and elements, whether related to different embodiments or not, is contemplated to implement and practice the disclosure. Furthermore, although embodiments may achieve advantages over other possible solutions and\/or over the prior art, whether or not a particular advantage is achieved by a given embodiment is not limiting of the disclosure. Thus, the following aspects, features, embodiments and advantages are merely illustrative and are not considered elements or limitations of the appended claims except where explicitly recited in a claim(s). Likewise, reference to \u201cthe disclosure\u201d shall not be construed as a generalization of any inventive subject matter disclosed herein and shall not be considered to be an element or limitation of the appended claims except where explicitly recited in a claim(s).","As will be appreciated by one skilled in the art, aspects of the present disclosure may be embodied as a system, method or computer program product. Accordingly, aspects of the present disclosure may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present disclosure may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus or device.","Computer program code for carrying out operations for aspects of the present disclosure may be written in any combination of one or more programming languages, including an object oriented programming language such as Java\u2122, Smalltalk\u2122, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present disclosure are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the disclosure. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","Embodiments may be provided to end users through a cloud computing infrastructure. Cloud computing generally refers to the provision of scalable computing resources as a service over a network. More formally, cloud computing may be defined as a computing capability that provides an abstraction between the computing resource and its underlying technical architecture (e.g., servers, storage, networks), enabling convenient, on-demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. Thus, cloud computing allows a user to access virtual computing resources (e.g., storage, data, applications, and even complete virtualized computing systems) in \u201cthe cloud,\u201d without regard for the underlying physical systems (or locations of those systems) used to provide the computing resources.","Typically, cloud computing resources are provided to a user on a pay-per-use basis, where users are charged only for the computing resources actually used (e.g., an amount of storage space consumed by a user or a number of virtualized systems instantiated by the user). A user can access any of the resources that reside in the cloud at any time, and from anywhere across the Internet. In context of the present disclosure, a user may request the one or more applications to execute in the cloud. Having the one or more applications execute in the cloud allows the user to manage execution of the one or more applications from any computing system attached to a network connected to the cloud (e.g., the Internet).","The flowchart and block diagrams in the Figures illustrate the architecture, functionality and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present disclosure. In this regard, each block in the flowchart or block diagrams may represent a module, segment or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100","102","102","170","180","130","130","130","130","130","130","100","130","100","130","130","130","100"],"sub":["1 ","2","2 ","1 ","2 ","2 ","2"]},"The computer  generally includes a processor  connected via a bus  to a memory , a network interface device , a storage , an input device , and an output device . The computer  is generally under the control of an operating system. Examples of operating systems include UNIX, versions of the Microsoft Windows\u00ae operating system, and distributions of the Linux\u00ae operating system. More generally, any operating system supporting the functions disclosed herein may be used. The processor  is included to be representative of a single CPU, multiple CPUs, a single CPU having multiple processing cores, and the like. Similarly, the memory  may be a random access memory. While the memory  is shown as a single identity, it should be understood that the memory  may comprise a plurality of modules, and that the memory  may exist at multiple levels, from high speed registers and caches to lower speed but larger DRAM chips. Each network interface device may be any type of network communications device allowing the computer  to communicate with other computers via the respective network .","The storage  may be a persistent storage device. Although the storage  is shown as a single unit, the storage  may be a combination of fixed and\/or removable storage devices, such as fixed disc drives, solid state drives, floppy disc drives, tape drives, removable memory cards or optical storage. The memory  and the storage  may be part of one virtual address space spanning multiple primary and secondary storage devices.","The input device  may be any device for providing input to the computer . For example, a keyboard and\/or a mouse may be used. The output device  may be any device for providing output to a user of the computer . For example, the output device  may be any conventional display screen or set of speakers, along with their respective interface cards, i.e., video cards and sound cards (not shown). Although shown separately from the input device , the output device  and input device  may be combined. For example, a display screen with an integrated touch-screen may be used.","In one embodiment, the computer  also includes a management controller  connected to the processor , the memory , and\/or the storage  via a private network . The management controller  is further connected to the out-of-band network . The private network  is connected to the out-of-band network via a network interface . Depending on the embodiment, some or all of the functionality of the private network  may be integrated into the bus . Further, the private network  may serve to extend the out-of-band network to include the processor  of the computer \u2014rather than merely the management controller . In one embodiment, the private network  includes a bidirectional Internet Protocol (IP) network provided by one or more virtualized network interface cards (NICs) over a bus operatively connecting the management controller  and the processor . The management controller  manages one or more network addresses on the private network, including a first network address for the management controller  and a second network address for the computer . In one embodiment, each network address is an Internet Protocol (IP) address.","As shown, the memory  of the computer  includes an execution engine , an operating system  and applications . The management controller  communicates with the execution engine  via the private network , and vice versa. In one embodiment, the management controller  provides a first application programming interface (API)  for managing the applications  and\/or the operating system  executing on the computer . The management controller  may operate in accordance with a predefined architecture, such as Representational State Transfer (REST). REST refers to a stateless client-server architecture for distributed hypermedia systems, in which web services are viewed as resources and can be identified by their Uniform Resource Locators (URLs). Additionally or alternatively, the management controller  may provide interfaces according to predefined protocols, such as Telnet and Secure Shell (SSH). In some embodiments, access to the first API may be secured via mechanisms for user authorization, role-level authentication and\/or encryption. For example, access to the first API may be encrypted via Secure Sockets Layer (SSL) or Transport Layer Security (TLS).","In alternative embodiments, the execution engine  runs on the management controller  rather than on the processor . For instance, the execution engine  running on the management controller  may communicate with one or more host agents executing on the processor . The communication may occur via SSH, and the host agents may be Windows Management Instrumentation (WMI) or Simple Network Management Protocol (SNMP) agents provided by the operating system . WMI refers to a set of extensions to Windows Driver Model (WDM) that provides an OS interface for managing instrumented components, and SNMP refers to a protocol for managing devices on IP networks.","In one embodiment, the management controller  receives a request for an application  or the operating system  to execute a predefined command. Further, the request may include an invocation of a function specified in the first API . The function specified in the first API  may be invoked from the computer  or from a remote computer . More specifically, in some embodiments, the request may be received from a management console executing on the computer . In other embodiments, the request may be received via the out-of-band network from a management console executing on the remote computer . For instance, the management console may request for more virtualized (NICs) to increase network bandwidth on the computer . Distributing the management controller  and the management console across the networked system  may make the networked system  more fault-tolerant at least in some cases. The management controller  may receive the request from the management console during an SSL session. Additionally or alternatively, the request may be composed as specified by the REST architecture. As an example, suppose the request specifies to restart a web server application executing on the computer . In this particular example, the request may access the following URL: cimc.cisco.com\/api\/host\/webserver\/restart. In response to receiving the request, the management controller  may authenticate the request and then send the request to the execution engine  via the private network .","In one embodiment, upon receiving the request, the execution engine  retrieves business logic  associated with the invoked function. The execution engine  then executes the business logic , such that the application  and\/or operating system  execute the predefined command. In some embodiments, the business logic  may invoke one or more functions specified in a second API  provided by the operating system . The execution engine  may also send results of executing the business logic  to the management controller  via the private network . The results may specify whether the execution of the business logic  is successful and\/or may include output associated with executing the business logic . Because the management console may typically anticipate receiving results from the management controller, the management controller  may send the results to the management console via the out-of-band network . In addition, as further described below, the management controller  and\/or the execution engine  may be extensible during runtime.","By configuring the management controller , the private network , and\/or the execution engine  using the techniques disclosed herein, the management controller  may manage applications and\/or services executing on the computer \u2014in addition to hardware and\/or firmware components of the computer . Further, the applications and\/or services may be managed even when the in-band network  is unavailable or otherwise operating in a degraded state. For example, an administrator may physically or logically remove the computer  from the in-band network , in response to a security incident.","Additionally, the management console may manage applications and\/or services executing on the computer more reliably than invoking an API via the in-band network , where the API is implemented by a host agent executing on the processor . For example, the management controller  may remain available at times during which the host agent is unavailable or running in a degraded state or the computer  is intentionally removed from the in-band network .","As described above, the first API  specifies functions for managing one or more applications executing on the computer . For example, one such function could be invoked to power off the computer . By configuring the computer  using the techniques disclosed herein, the execution engine  may coordinate with the operating system  to allow the operating system  to perform a graceful shutdown prior to powering off the computer . Allowing the operating system  to perform a graceful shutdown may simplify out-of-band management of the computer  at least in some cases, relative to signaling the computer  to power off without coordinating with the operating system .","In one embodiment, another function could be invoked to configure the operating system  with a static IP address for the in-band network . Accordingly, the second function may be invoked to initially set the static IP address for the computer , without first requiring the computer  to connect to the in-band network . Of course, other functions for managing the one or more applications are broadly contemplated. For example, one function may specify to transmit one or more patches to the computer . Accordingly, an administrative user may invoke the one function, subsequent to a security incident prompting the administrative user to intentionally remove the computer  from the in-band network . Another function may specify to transmit, via the out-of-band network and the private network , an SSL certificate to the computer  for use with the in-band network , without first requiring the computer  to connect to the in-band network . Still another function may specify to start, stop or restart one or more hypervisors executing on the computer . Yet another function may instruct the computer  to route network traffic through the out-of-band network rather than through the in-band network . To this end, the management controller may provide a Transmission Control Protocol\/Internet Protocol (TCP\/IP) stack. In this regard, the private network, the management controller, and the out-of-band network may operate as a failover network for the in-band network . Still another function may instruct the operating system  to execute one or more predefined commands. In some embodiments, one or more of the commands may be configured to modify and\/or repair a registry of the operating system . Still another function may instruct the operating system  to execute a predefined shell script containing one or more commands.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 1"],"b":["200","102","200","210","204","202","158","160","202","170","150","130","152","220","150","154","113"],"sub":["1","1"]},"At step , the execution engine  retrieves and executes business logic  associated with the invoked function. The business logic  is executed such that the application  and\/or the operating system  execute the predefined command. At step , the application  and\/or the operating system  may return a result. If so, the execution engine  may return the result to the management controller  via the private network  (step ). Alternatively, the execution engine  may transform the result before returning the transformed result to the management controller  via the private network . The result may be transformed to include additional information in the result, to remove a subset of information contained in the result, to reformat or repackage a result, etc. At step , the management controller  may return the result via the out-of-band network to the management console . Alternatively, the management controller  may also transform the result before returning the transformed result to the management console . After the step , the operation  terminates.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 1"],"b":["300","102","150","300","310","150","162","102","320","150","202","130","162"],"sub":"1"},"At step , the management controller  sends the request via the private network  to the processor  of the computer . In response, the application performs the predefined action. At step , the management controller  receives, from the processor  of the computer , results of performing the predefined action. The management controller  may then return the results to the management console . After the step , the method  terminates.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 4","FIG. 1","FIG. 3"],"b":["400","102","154","400","410","154","150","113","420","154","430","154","440","154","150","440","400"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 5","FIG. 1"],"b":["500","150","102","150","500","510","150","102","520","150","202","202","150","150","530"]},"At step , the management controller  updates the first API to include the new function. To this end, the first API may be updated without requiring the management controller  to be restarted. At step , the management controller  may register the new function and the business logic with the execution engine  executing on the computer , e.g., by sending one or more messages to the execution engine  via the private network . To this end, the execution engine  may associate the new function and the business logic.","Advantageously, embodiments described above provide approaches for managing a computer via an out-of-band network. In one embodiment, a management controller provides an application programming interface (API) specifying one or more functions for managing one or more applications executing on a host computer. The API may also be extensible during runtime to include additional functions for managing the one or more applications. Using the API, the one or more applications may be managed more conveniently and\/or efficiently at least in some cases, without requiring drivers to be written for the operating system executing on the host computer.","In view of the foregoing, the scope of the present disclosure is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above-recited features of the present disclosure can be understood in detail, a more particular description of the disclosure, briefly summarized above, may be had by reference to embodiments, some of which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only typical embodiments of this disclosure and are therefore not to be considered limiting of its scope, for the disclosure may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
