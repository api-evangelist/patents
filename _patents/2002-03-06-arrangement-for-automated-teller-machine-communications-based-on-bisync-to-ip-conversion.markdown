---
title: Arrangement for automated teller machine communications based on bisync to IP conversion
abstract: A novel translation is used to enable the transport of bisync information from an automated teller machine (ATM) to a host computer via an Internet Protocol network, without the necessity of providing a serial data stream to a host server for transport of bisync information. A router includes a serial interface configured for receiving a bisync serial data stream carrying Base-24 protocol data from the ATM. The router is configured for retrieving the Base-24 data from the bisync serial stream, and generating a new header that specifies attributes of the Base-24 message from the ATM; the Base-24 message and the corresponding new header are sent by the router to the host server according to Internet Protocol, enabling the host server to receive the Base-24 message and any associated status information based on the corresponding supplied header. The router also is configured for receiving via the data network an IP packet having a Base-24 message generated by the host server, and the associated header, and generating a bisync header based on the received header. The router can then output a new bisync frame having the generated bisync header and the Base-24 message generated by the host server, for the local ATM via the serial connection.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07151780&OS=07151780&RS=07151780
owner: Cisco Technology, Inc.
number: 07151780
owner_city: San Jose
owner_country: US
publication_date: 20020306
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to communications of Base-24 protocol messages between a host server and an automated teller machine (ATM) via an Internet Protocol (IP) network.","2. Description of the Related Art","Automated teller machines (ATMs) have been configured for communicating with host servers using Base-24 protocol via a serial tunneling connection, referred to as bisync tunneling (BSTUN). In particular, an ATM is configured for generating Base-24 data; the Base-24 data is encapsulated into a bisync frame, according to bisync (BSC) data link protocol, that is sent over a serial connection to a host server. Hence, each ATM has a corresponding serial connection to the host server. For transport of serial data from remote ATMs, the BSC data link protocol enables enterprises to transport bisync traffic over the same network that supports their SNA and multi-protocol traffic, eliminating the need for separate BSC wide area network facilities.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1","b":["12","14","10","16","16","16","16","18","20"],"i":["a","b","a ","b "]},"In particular, the BSTUN resource is configured for encapsulating the bisync traffic received from the serial connection into IP frames, and outputting the IP frames to the headend router via the IP network . The BSTUN resource receives the IP frames from the network , removes the IP headers, and presents the bisync traffic from the ATM  to the bisync host  via a corresponding serial connection assigned for that ATM , for example the serial link . Note that alternative encapsulation methods may be used, for example High Level Data Link Control (HDLC) protocol may be used as an alternative encapsulation method for point to point links; frame relay is another alternative encapsulation method when transporting over frame relay circuits where IP routing is not necessary (e.g., where both the tail-end router and the headend router are directly attached to a frame relay network instead of the IP network ).","The BSTUN resources  support point-to-point, multi-drop and virtual multi-drop BSC connections. In point-to-point BSTUN passthrough operation, the bisync traffic between the two point-to-point devices (e.g., the ATM  and the host server ) are received and forwarded transparently by the BSTUN resources . The procedures for establishing a transmission link between the end devices ,  are handled by the end devices themselves, with data and control frames encapsulated with a BSTUN header and forwarded, and the peer router removing the header and forwarding the bisync data to the proper serial port . In particular, each BSTUN resource  includes a TCP\/IP encapsulation resource  for encapsulation of the bisync frame and transfer to the peer resource  via a TCP\/IP tunnel, a direct connect resource , and\/or a frame relay encapsulation resource  for encapsulation of the bisync frame and transfer to the peer resource  via a frame relay connection.","In cases where bisync local acknowledgment (BSC LACK) is needed, the routers  include bisync resources . The bisync resource implemented within the headend router includes a pollee state machine  to simulate a secondary end device (e.g., an ATM) responding to polls from the host server . The bisync resource implemented within the tail-end router includes a poller state machine  to perform the primary polling operations (e.g., simulating the host server ) by sending poll requests to the ATM . Hence, in the case of BSC local acknowledgment, only the data frames are encapsulated with a BSTUN header and forwarded by the router . Management of control unit (CU) states between the poller and pollee are managed by a bisync local acknowledgment application programming interface (BSC LACK API) , which adds a BSC LACK header before sending packets to the BSTUN resource . An SNMP agent (not shown) is used for tunnel state changes in the IP tunnel between the routers .","A fundamental problem with the arrangement of  is that the disclosed implementation of transporting bisync traffic across a network using B STUN is based on the design assumption that all devices (e.g., the ATM ) that send and receive bisync protocol data frames are serially attached to the host server ; hence, the routers  are used to terminate the serial lines  and send the bisync traffic over a common wide area network  along with the associated SNA and multi-protocol traffic. Hence, deployment of the system of  would require multiple external serial processors  coupled to the host server  for the respective deployed ATMs , limiting scalability and resulting in increased costs due to connecting multiple external serial processors  to the host server .","Newer automated teller machines are TCP\/IP based and connect to a host server via an IP network , enabling the host server to communicate with the automated teller machines via a local area network and wide area network. However, such TCP\/IP based ATMs lack management support, as found in legacy ATMs utilizing bisync protocol as illustrated above with respect to . In particular, the host server may be unable to determine connection status of a TCP\/IP based ATM to determine, for example, whether the ATM utilizing TCP\/IP connections needs user intervention.","There is a need for an arrangement that enables legacy ATMs utilizing bisync protocol to be implemented within an IP network, without the necessity of multiple respective serial connections at the host server.","There also is a need for an arrangement that enables bisync ATMs utilizing bisync protocol to communicate with a host computer coupled to a local area network, via Internet Protocol based routers configured for establishing a connection between the ATM and the host server, without the necessity of multiple serial connections.","There also is a need for an arrangement that enables a host computer to obtain management and status information, including connection status, from ATMs via an IP network, without the necessity of multiple serial connections for the host computer.","These and other needs are attained by the present invention, where a novel translation is used to enable the transport of bisync information from an automated banking device, for example an automated teller machine (ATM), to a host computer via an Internet Protocol network, without the necessity of providing a serial data stream to the host server for transport of bisync information. A router includes a serial interface configured for receiving a bisync serial data stream carrying Base-24 protocol data from the ATM. The router is configured for retrieving the Base-24 data from the bisync serial stream, and generating a new header that specifies attributes of the Base-24 message from the ATM; the Base-24 message and the corresponding new header are sent by the router to the host server according to Internet Protocol, enabling the host server to receive the Base-24 message and any associated status information based on the corresponding supplied header. The router also is configured for receiving via the data network an IP packet having a Base-24 message generated by the host server, and the associated header, and generating a bisync header based on the received header. The router can then output a new bisync frame having the generated bisync header and the Base-24 message generated by the host server, for the local ATM via the serial connection.","Hence, ATMs configured for outputting bisync frames carrying Base-24 data can be deployed in an IP network where the host server is coupled to a local area network, eliminating the necessity of multiple serial connections for the host server.","One aspect of the present invention provides a method in a router configured for establishing an Internet Protocol (IP) connection. The method includes receiving a bisync protocol data frame carrying bisync protocol fields and Base-24 protocol data from an automated banking device via a serial connection. The method also includes generating a new frame by generating a new header specifying attributes of the Base-24 protocol data and the automated banking device, removing the bisync header, and adding the new header to the Base-24 protocol data, and outputting the new frame, having the new header and the Base-24 protocol data, to an identified host server via the IP connection.","Another aspect of the present invention provides a router configured for establishing an Internet Protocol (IP) connection. The router includes a serial interface, a bisync to IP resource, and an IP interface. The serial interface is configured for receiving a bisync protocol data frame carrying bisync protocol data fields and Base-24 protocol data from an automated banking device via a serial connection. The bisync to IP resource is configured for generating a new frame by generating a new header specifying attributes of the Base-24 protocol data and the automated banking device, removing the bisync header, and adding the new header to the Base-24 protocol data. The Internet Protocol (IP) interface is configured for outputting the new frame, having the new header and the Base-24 protocol data, to an identified host server via the IP connection.","Additional advantages and novel features of the invention will be set forth in part in the description which follows and in part will become apparent to those skilled in the art upon examination of the following or may be learned by practice of the invention. The advantages of the present invention may be realized and attained by means of instrumentalities and combinations particularly pointed out in the appended claims.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","b":["30","12","32","20","32","20"]},"The system  also includes a router , for example a commercially available Cisco 1700, 2600, 3600, and\/or 7200 series router from Cisco Systems, San Jose, Calif. Note that other commercially available routers may be utilized. The router  is configured for supporting automated banking devices  that utilize the bisync (BSC) data link protocol. According to the disclosed embodiment, the router  is implemented by modifying the existing router by adding a bisync to IP (BIP) resource , and configuring a Simple Network Management Protocol (SNMP) agent  to send messages to a network management server , based on a detected change in the status of the ATM  or the IP connection between the router  and the host server . The bisync to IP resource  is configured for converting between a bisync frame  received from a serial interface , and an IP packet  transported by the IP interface  onto the IP network .","As illustrated with respect to , the bisync to IP resource  is configured for generating a new IP frame  from a bisync protocol data frame  received from the automated banking device  via the serial connection and the serial interface . In particular, the bisync to IP resource  strips all bisync related information, including the bisync header  and error correction fields , in order to retrieve the raw base  protocol data . The bisync to IP resource  generates the new IP frame  by generating a new header , prepending the header  to the base  data \u2032, and prepending an IP header  having a prescribed destination IP address and a prescribed destination TCP port based on prescribed configuration settings to reach the host server . As described below, the base  data  in the bisync protocol data frame  may have a different format (e.g., EBCDIC) than the ASCII format of the base  data \u2032 in the IP frame .","According to the disclosed embodiment, the bisync to IP resource  generates, as a new header , a four-byte header having a two byte length field , and a two byte status\/control field . The length field  specifies the length of the Base-24 data \u2032, and the status\/control field  specifies prescribed attributes of the automated banking device  having generated the Base-24 protocol data \u2032. For example, the status\/control field  includes control bits that specify whether the attached bisync device  has a status of \u201cOK\u201d, active, inactive, busy, or exited busy. The status\/control field  also includes status bits that specify if the attached device has generated any of the following conditions: command rejected, intervention required, equipment check, data check, or operation check. Hence, the generation of the status\/control field  enables the host server , upon reception of the IP frame  via the IP network , to monitor any changes in the status of the automated banking device .","The bisync to IP resource  also is configured for converting an IP frame  received via the IP interface  from the IP network , into a new bisync protocol data frame  for transmission to the automated banking device  via the serial interface . Hence, the bisync to IP resource  provides two-way conversion between bisync protocol data frames  and IP protocol frames  carrying the Base-24 data.","In addition, the bisync to IP resource  is able to generate the appropriate BSC header  and error fields  based on the configuration setting of the data type and transparency. Note that the Base-24 data \u2032 transported across the IP tunnel will always be sent as ASCII text. Depending on the configuration of the data type, there may be a translation between ASCII and EBCDIC text when converting between the BSC frame  and the IP frame . Using the data type and the transparency configured, the Base-24 data  will be enclosed by the appropriate header and error field to create a BSC frame  that is one of the following frame types: a transparent ASCII format , a transparent EBCDIC format , a nontransparent ASCII format , or a nontransparent EBCDIC format . The \u201cEBCDIC\u201d format refers to the Extended Binary Coded Decimal Interchange Code developed by IBM as an 8-bit extension of the 4-bit binary coded decimal encoding of digits 0\u20139.","The router  also includes an SNMP agent  configured for generating \u201cSNMP traps\u201d in response to the bisync to IP resource  detecting one of the identified conditions during generation of the status\/control field . As described below, the bisync to IP resource  may determine the conditions for the status\/control field  based on the bisync header , responses to bisync local acknowledgment polls, described below, and\/or a combination of both. As illustrated in , the SNMP agent  may send an SNMP message identifying the state of the automated banking device  to a network management server .","Hence, legacy-based automated banking devices  configured for sending and receiving bisync protocol data frames  can be deployed within an IP based network according to TCP\/IP protocol, while maintaining the automated banking device status information to enable the host server  to perform management operations and determine the status of the automated banking device .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 4","FIG. 4"],"b":["12","50","32","52"]},"The method begins in step , where the bisync tunneling resource is configured to recognize the bisync to IP resource  as an alternative encapsulation type to the peer tunneling resources TCP\/IP , direct connect , and frame relay . Hence, the BSTUN resource is configured for identifying the bisync to IP resource  as an alternative encapsulation resource for transporting the data across the IP network , and will pass all messages received by the bisync resource to the bisync to IP resource .","The host server  either configured either for active connections or passive listening for an incoming connection. In particular, the host server can be configured to establish a TCP connection (i.e., active connection) if it is desired that the host server  maintains manual control of the connection to the ATM  from the host server . The host server  also can be configured to listen for an incoming connection, enabling the router  to initiate the activation of the TCP connection, for example for an automatic recovery if the tunnel connection is lost. For an active connection, the host server  must use the router's listening port  for the foreign port, and must have a unique local port to identify the connection between the automated banking device  and the host server . If configured to accept an incoming connection, a common local port will be used by the host server , for example port , and a unique foreign port to identify the connection between the automated banking device  and the host server .","The bisync to IP resource  can be configured in step  to recognize passive connections initiated remotely by the host server , where the bisync to IP resource monitors (i.e., \u201clistens\u201d) for incoming connections on a prescribed TCP port, for example port . In this case, the foreign port on the \u201cbstun route\u201d statement must match the local port configured on the active open definition at the host server . Alternatively the bisync to IP resource  can be configured in step  to initiate an active open connection to the host server . In this case the foreign port on the \u201cbstun route\u201d statement will be set to the listening port for the host server  and the local port will be set to the unique value specified on the host server  for the foreign port which was used to identify the connection between the automated banking device  and the host server . The unique combination of foreign and local ports for active or passive connections enables the host server  to distinguish from multiple automated banking devices that may share the same router  having the same IP address, enabling the router  and the host server  to identify the correct TCP peer structure.","The bisync to IP resource  initiates in step  an active open, or a listen for connections, based on the above-described configurations.","If in step  the router determines that the IP tunnel is inactive due, for example, to a failure in a prior connection, then if in step  the router  is configured for performing an active open TCP connection to the host server , the router  initiates a reconnect timer in step  in an attempt to reconnect the tunnel between the router  and the host server  (e.g., a timer having a range of about 1 to 600 seconds with a default of 60 seconds). Depending on configuration, the bisync to IP resource  will either listen for an incoming connection or initiate an active open connection. Otherwise, the bisync to IP resource  takes no further action until the tunnel is active , in step .","Once the bisync to IP resource  determines in step  that the tunnel is active in step , the bisync to IP resource  sends in step  a request to the BSC local acknowledgment poller state machine  to send a Poll Address Add command (POLL_ADDR_ADD) to the bisync local acknowledgment API . In response to the bisync resource code receiving a response from the automated banking device , the bisync resource  then returns to the bisync to IP resource  a Poll Address Active response (POLL_ADDR_ACTIVE) in step , indicating the ATM  is active and ready for data traffic. Note that the bisync to IP resource  may wait indefinitely for the Poll Address Active message.","Hence, if in step  the bisync to IP resource  detects the Poll Address Active message, the bisync to IP resource  generates in step  an IP frame having a header  (but no Base-24 data ) with a Device Active Bit turned on within the status bits, and forwards the IP-based device active status frame in step  to the host server ; the bisync to IP resource  also causes an SNMP message (e.g., an \u201cSNMP trap\u201d) to be output to the network manager  indicating a change of status with the device active bit set. Hence, the IP-based device active status frames output in step  indicate that the ATM is active and ready for data traffic, enabling the bisync to IP resource to perform the above-described translations in step .","Assuming in step  that the router  determines that the tunnel connection is lost (e.g., TCP connection status based on \u201ckeepalive\u201d messages), the bisync to IP resource  outputs in step  a request to the BSC local acknowledgment poller state machine  to send a Poll Address Delete command (POLL_ADDR_DELETE) to the bisync local acknowledgment API  to stop polling of the ATM . The bisync to IP resource  then causes in step  an SNMP message (e.g., an \u201cSNMP trap\u201d) to be output to the network manager  to notify the network manager of the lost tunnel connection. Depending on configuration, re-establishment of the tunnel connection may be performed using the TCP open connect resource either by the host server , or the router .","Assuming in step  that the tunnel connection is maintained but that a Poll Address Inactive message (POLL_ADDR_INACTIVE) is received in step , indicating that the ATM  is not responding to poll requests, the bisync to IP resource generates in step  an IP frame having a header  (but no Base-24 data ) with a Device Inactive bit value within the status bits, indicating that the ATM  is inactive and currently unable to receive data traffic. The bisync to IP resource  outputs in step  the Device Inactive status frame to the host server  via the IP tunnel, and causes an SNMP message to be sent to the network management server , indicating that the ATM  is inactive.","As apparent from the foregoing, various implementation methods may be used, depending on whether the bisync to IP resource  is configured as a separate peer structure for the bisync resource ","According to the disclosed embodiment, automated banking devices configured for sending and receiving bisync protocol data frames can be deployed within an Internet Protocol based network for communication with a host server  connected via a local area network, for example Fast-Ethernet, based on translating the bisync protocol data frame into an IP frame having a new header specifying attributes of the Base-24 protocol data, and the automated banking device. Hence, a host server  can monitor the status of the automated banking device, and the TCP connection between the TCP peers.","While the disclosed embodiment has been described in connection with what is presently considered to be the most practical and preferred embodiment, it is to be understood that the invention is not limited to the disclosed embodiments, but, on the contrary, is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Reference is made to the attached drawings, wherein elements having the same reference numeral designations represent like elements throughout and wherein:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 4","FIG. 2"]}]},"DETDESC":[{},{}]}
