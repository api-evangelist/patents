---
title: Rules engine with database triggering
abstract: An automated facilities management system has the ability to predict occupant behavior by identifying recurring patterns in the way that people use buildings and comparing them with environmental characteristics. This technology is not limited to human behavior patterns, but extends to any mechanical systems or data points that tend to vary in recurring patterns. The data processing is carried out by rules engines triggered by relational database modifications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08849771&OS=08849771&RS=08849771
owner: 
number: 08849771
owner_city: 
owner_country: 
publication_date: 20110902
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of:\n\n","Smart Building technologies are typically employed in an effort to monitor and control elements of a building. In such systems, the various building subsystems are integrated into a network infrastructure with a common user interface. The integrated subsystems typical include mechanical and electrical equipment such as Heating, Ventilation, and Air Conditioning (HVAC), lighting, power, fire, communications, and security systems","While the Smart Building interface allows a user to manage HVAC and lighting, the functions are controlled by manually entering set points. While different zones can have differing set points and differing target temperatures and lighting levels, the zones typically have a morning set point and an evening set point. After the morning set point, the thermostats and lighting controllers are set in anticipation of zone occupancy. Likewise, after the evening set point, the thermostats and lighting controller are set in anticipation of the zone being unoccupied. The settings are usually dictated by building management to reflect standard work hours.","While weekdays, weekends, and holidays are recognized and programmed differently, workers who come in early or stay late may be uncomfortable. Likewise, zones that are vacant during a particular workday will be treated and being occupied, wasting energy. Special action must be taken by building management to accommodate special occupancy requests, such as working on weekends or unusual hours. To avoid this problem, set points are often left fully closed (occupied setting) around the clock, which is a substantial waste of energy.","In the domain of Smart Buildings, the ability to predict future occupant needs, and intelligently address those needs preemptively, is a very powerful capability. For example, being able to predict accurately when a building or a section of a building will be occupied and preemptively adjust lighting and HVAC (Heating, Ventilation & Air Conditioning) optimizes occupant comfort. Conversely, being able to predict accurately when buildings and sections of buildings will be unoccupied and setting lighting and HVAC for maximum energy savings during those periods minimizes energy consumption. A particular automated facilities management system also changes settings in anticipation of changes in occupancy. For example, coasting is done well in advance of the time that the space will be unoccupied. Doing all provides better comfort and energy savings.","An automated facilities management system in accordance with particular embodiments of the invention has the ability to predict occupant behavior by identifying recurring patterns in the way that people use buildings and comparing them with environmental characteristics. This technology is not limited to human behavior patterns, but extends to any mechanical systems or data points that tend to vary in recurring patterns.","A particular embodiment of the invention includes a method for predicting future behavior. That method includes:\n\n","In more particular embodiments, the behavior can be a group behavior. Also processing the intervals of historical data can include performing a cluster analysis to identify the patterns. Additionally, comparing the current data can include performing a cluster analysis to identify the best fit pattern from the plurality of patterns. That cluster analysis can weigh recent current data more than distant current data.","The intervals can be divided into an equal number of slices. Specifically, the slices can be consecutive time slices.","Furthermore, the method can include making adjustments in anticipation of the predicted data. In addition, the method can solicit feedback and make adjustments in response to the feedback.","Another embodiment of the invention can include a system for automatically managing a facility. The system can include:\n\n","Another particular embodiment of the invention can include an automated computing system, including a database system and a rule.","The database system can store data in an organized structure and trigger an event upon modifications to the stored data. The database system can include an ACID-compliant relational database storing the data in tables with data columns.","The rule can be responsive to the triggered event to process an action based on the stored data. The rule can include a rule definition identifying the data that triggers the rule. More particularly, the rule definition can include a list of data that triggers the rule. The rule can also include an assigned priority.","As for the action, the action can succeed or fail and a failed action can be retained and can be restartable.","Another particular embodiment of the invention can include a more particular automated computing system, including a relational database system and a plurality of rules.","The relational database system can store data in an organized structure of tables having columns of data. The relational database system can also trigger an event upon modifications to the stored data. In particular, the relational database can be ACID compliant.","Each rule can include a list of table and column pairs in the relational database that trigger the rule and an action process responsive to a event to the data stored in a table and column from the list, where the action can process a subset of the stored data. The rule can further include an assigned priority.","In particular, the subset of stored data can include data not in the table and column pairs. Also a plurality of instances of a same rule can execute in parallel. Furthermore, instances of the same rule can be triggered by different table and column pairs. The triggering and execution of the rules can be multi-threaded and\/or asynchronous.","Furthermore, the action can succeed or fail and a failed action can be retained and can be restartable. More particularly, triggered rules can be stored as entries in an execution queue. The rules entered in the execution queue can be modified. Those modified rules can also be consolidated.","An automated facilities management system in accordance with particular embodiments of the invention is useful in residential and commercial buildings. In particular, the system can tailor a building's energy usage to known or derived occupancy patterns and the building's energy parameters. By doing so, energy can be more efficiently used when needed and conserved when not needed.",{"@attributes":{"id":"p-0049","num":"0064"},"figref":"FIG. 1","b":["2","8","2","8","7"]},"The client-side infrastructure includes one or more Local Energy Optimizers (LEO) -, -. Each LEO -, - is responsible for executing a local energy conservation plan. A particular building may require multiple LEOs, depending on various factors including network infrastructure. Indeed, each business operating within a building can have one or more dedicated LEOs. The LEOs function autonomously, but each will generally be embodied in a commercially-available desktop or laptop computer having limited processing power and memory.","Each LEO -, - is in communication with a plurality of facility devices  located throughout a monitored space. The facility devices  include sensors  and controls (i.e. actuators) .","While the sensors  can directly communicate with the LEOs -, -, certain sensors  communicate via a separate sensor controller -, such as a third-party Crestron controller. Example sensors include, but are not limited to:\n\n","Similarly, the LEOs -, - forward commands to a plurality of controls  to adjust the energy usage of the space. Examples of such controls include, but are not limited to:\n\n","While the LEOs -, - can directly communicate with the controls , such as in a residential environment, a particular embodiment of the invention exploits third-party Building Management System (BMS) controllers -, - to operate facility controls . Such BMS controllers -, -, available from various sources, are typically installed in commercial buildings to control and monitor the building's mechanical and electrical equipment such as HVAC, lighting, power systems, fire systems, and security systems.","In particular, commercial BMS controllers -, - are programmed to operate a network of control actuators  to obtain a desired result (e.g. temperature change). In other words, the building's BMS controllers -, - already know what systems need to be adjusted and how each component in the system (dampers, mixing valves, etc.) needs to be actuated to accomplish a result without compromising other parts of the system. What the BMS controllers lack is an understanding of when to make macro adjustments such as zone temperature changes, instead relying on human policy or configuration input. By integrating with the BMS, the LEOs automate the \u201cwhen\u201d part of the equation by predicting future needs. The actual protocols used to communicate with the BMS are product specific.","More particularly, when to apply changes to HVAC settings in anticipation of a predicted change in occupancy is determined by establishing the heating and cooling characteristics of the HVAC zone through regression analysis of the rate of change in temperature as a function of HVAC heating or cooling demand, interior temperature, exterior temperature, and solar heating through windows. The coefficients derived from this analysis establish the characteristic of the zone. By applying these coefficients to actual conditions, the time to heat or cool the space to the desired temperature can be determined. Once this time has been established, it can be applied to the predicted occupancy and an optimal time to either actively heat or cool the space, or turn off active heating and cooling and let the temperature settle, can be determined. By continually performing this analysis, changes in coefficients will be indicators of changes in HVAC system performance or in building shell performance.","Data from the sensors  is stored in a local data store -, - as relational database tables -, -. Each LEO -, - includes a respective rules engine -, - for processing the stored sensor data and signaling the controls  and BMS controllers -, -, if necessary. Each rules engine -, - employs a respective rules database -, - to manage data and processing. In a particular embodiment, the rules engines -, - are implemented as Windows Services under a Microsoft Windows operating system.","Also in communication with the WAN  and accessible by the LEOs -, - are logical sensors , which provide external data to the LEOs -, -. Examples of logical sensors  include weather forecasts, such as provided by Google, Inc., climate models, electricity rates, time signals from time services, and other data feeds.","The LEOs -, - communicate through the WAN  with a central server  on the central hosting infrastructure . It should be understood that the database for an LEO can include data from sensors  that signal another LEO, by receiving the sensor data over the LAN or via the central server . Specifically, the LEO will periodically send data to the central server  for storage or transfer to another LEO. The LEO can also send a request for data to the central server , where it will either reply with data or timeout. Because the LEOs -, - will typically communicate through a firewall -, -, the communication is initiated by the LEOs -, - through an open firewall port (such as a Hyper-Text Transport Protocol (HTTP) request through port ).","The central server  is responsible for storing long-term data and operating on the data, particularly pattern detection and analysis. The central server  communicates with a data warehouse  storing a relational database . Human interaction with the system is through a computer interface, such as a web client  (PC),  (smartphone), a mobile client  or feedback devices  (smartphone),  (PC). Note that human interaction can also be initiated on the central hosting infrastructure , depending on how implemented.","By disposing the central server  on the WAN , the data warehouse  can be used to store historical data and patterns from numerous client sources. That micro data can then be exploited to derive macro data for use by energy utilities and energy brokers. To that end, a particular embodiment of the invention deploys the central hosting infrastructure  on a commercial cloud computing system. Of course, the central server  and data warehouse  can be disposed on the client LAN for clients, such as government entities, that desire or require secure control over its data and patterns.","The central data warehouse  stores historical data for each LEO -, - and each LEO -, - locally stores current data at least until transferred to the central server , such as once per day (e.g. overnight transfer). Once the central data warehouse  stores a sufficient amount of historical data, the historical data is processed by a server rules engine  on the central server  to detect patterns in the data. The rules engine  employs a server rules database  to manage data and processing. Again, in a particular embodiment, the rule engine  is implemented as Windows Services under a Microsoft Windows operating system.","One important measure of patterns is the occupancy rate of an office or home as viewed over a period of time, such as daily. For example, instead of a building usage following a simple, weekday or weekend pattern there can be several usage patterns for both a weekday and a weekend. Knowing those patterns allows significant energy conservation by anticipating demand. In a particular embodiment, pattern detection and recognition processing is performed at a convenient periodic time, such as on a weekly basis.","Once patterns are recognized, those patterns are useful for predicting future behavior, such as occupancy. Specifically, as long as occupancy can be correlated with a known pattern, it can be assumed that the pattern will continue at least for the near term. For that use, the various detected patterns are transferred to the LEO databases -, - for real-time matching.",{"@attributes":{"id":"p-0065","num":"0088"},"figref":["FIG. 2","FIG. 1"],"b":["28","280","281","282","283","284","285","286","287","288","289"]},"The clients table  defines the installations of the management system included in the database. The table columns include:\n\n","The spaces table  includes hierarchical definitions of the spaces (locations, buildings, floors, zones, rooms) of all installations. The table columns include\u201d\n\n","The leos table  includes entries for all LEOs within all installations. The table columns include:\n\n","The controllers table  includes entries for all interfaces to controllers, sensors or controls across all installations. The table columns include:\n\n","A controller represents an interface to a third-party controller or a network interface and protocol to a bank of directly controlled sensors and controls. The controllerattributes table  controls meta data describing the controller. Controllers are associated with LEOs. These are physical associations.","The controllerattributes table  thus includes entries that define the attributes for each controller, such as the type of interface (BMS, Bluetooth, ZigBee), the address of the interface, and any other interface-specific meta data. The table columns include:\n\n","The devices table  includes an entry for each device (sensor or control). The table columns include:\n\n","Notice that sensors and controllers are directly tied to spaces. These connections may be physical or logical. The connection between sensors and controls to LEOs is through devices and controllers.","The deviceattributes table  includes entries that define attributes for each device, such as the network address. The table columns include:\n\n","The sensorsandcontrols table  includes entries for all sensor values, control settings and intermediate values used by rules. The table columns include:\n\n","The sensororcontrollog table  includes the new value and time of transitions for sensors and controls. The table columns include:\n\n","The timeslotlog table  includes average values for a sensor or control across a time slot. The table columns include:\n\n",{"@attributes":{"id":"p-0078","num":"0152"},"figref":["FIG. 3","FIG. 1"],"b":["24","241","242","243","244","245"]},"The classes table  defines the base classes for rules and includes columns with meta data for loading the code implementing the classes. The table columns include:\n\n","The rules table  defines all rules. It includes an entry for all rules being used by the application running on the rules engine. The table columns include:\n\n","The rule_parameters table  is used when deriving multiple rules from a single class. It may, for example, define the table(s) and column(s) that the rule will be triggered by and perform actions on. The table columns include:\n\n","The event_queue table  includes a FIFO (First In, First Out) queue of events. The table columns include:\n\n","The rule_queue table  includes an entry for each rule that is queued for execution, running, or has failed. The table columns include:\n\n","With the basic structure of the system and its databases, the detailed processing will now be described.",{"@attributes":{"id":"p-0085","num":"0186"},"figref":"FIG. 4","b":["1","10"]},"The communication between the IR sensors and the LEO (not shown) is determined by the sensor manufacturer. Some manufacturer will signal whenever a change is detected, and some will periodically signal. For this example, it is assumed that the IR sensors signal changes. Also, the Bluetooth emitters are periodically polled on a rolling basis, generally cycling every few seconds depending on the number of emitters and system load.","In the early morning, the office would typically be unoccupied so all the sensors are inactive. From the database, we can determine when employees left the office by looking at data stored for their respective Bluetooth (cell phone) emitters.","As the workday begins, Bluetooth emitters from cell phones and signals from the IR detectors will begin to be reported as active. Throughout the day motion continues to be detected throughout the office. Some people may come and go, and others will move around to continually populate the database.","As the workday comes to an end, people will begin leaving the office so sensor activity will decrease. Some people may stay later than others but typically, everyone will leave for the night. Sporadic activity may be detected from cleaning crews, security patrols, and employees returning to the office to work or to retrieve forgotten items. People fitting those demographics usually do not require a change in the environmental settings.","As can be appreciated, occupancy and usage patterns of a space can be tracked and plotted. To that end, the data changes are logged for forwarding to the central server . The central server  analyzes the historical data. In particular, the central server  performs statistical analysis to recognize patterns in the data, such as occupancy patterns. Further analysis can provide more individualized information, such as individual space usage patterns.",{"@attributes":{"id":"p-0091","num":"0192"},"figref":["FIG. 5","FIG. 4"],"b":["100","102","105"]},"The length of the time slices is chosen to match the application of the pattern, which in an HVAC application is a function of balancing data operations performance against providing balanced energy efficiency. For example, when controlling heating and cooling, a 15-minute time slice is a typical choice that strikes a balance between the amounts of data generated and the granularity required for optimum comfort. The time slice can be variable over time, based on circumstances. So if data quantities were moderate, and comfort could be enhanced by shorter time slices, the time slices for a space could be shortened.","By averaging sensor values, the system determines the probability of certain behaviors for various time intervals with similar characteristics (such as day of week). The patterns act as a predictor of sensor values for a given time slices in the future, especially the next time slice. To that end, the system gathers sensor data over time, groups the data by time intervals with similar characteristics, then compares new time intervals with similar characteristics to find matches. If a match is found, the system predicts sensor values in the new time interval by recalling the values found in the past time intervals with similar characteristics. Because sensor values are indicative of specific human behaviors, such as occupancy, the system becomes reliable in the prediction of such human behavior.","Once the human behavior is patterned, the results can be used in facilities management. Specifically, predictions based on the patterns are used to tailor temperature and lighting levels to the environment. The patterns can also be used to examine other facility metrics, such as space usage and planning. For example, individual schedules can be monitored to see if people really use scheduled rooms. Rooms can also be consolidated into common zones. Another example application of scheduling involves factory scheduling and school schedule.","In addition to human behavior, the system is sensitive to changes in the electrical and mechanical performance of the building. If the facilities equipment and physical building do not behave or respond as expected, those deviations can be logged. As such, the facilities management system can perform monitoring-based commissioning of the facility.",{"@attributes":{"id":"p-0096","num":"0197"},"figref":["FIG. 6","FIG. 5"],"b":["110","105","105","102"]},"Viewing the data, the pattern  can be divided into multiple operational segments. The office is occupied from the morning until the evening, with some people coming in earlier than others and some people leaving later than others. There is no overnight occupancy. During the occupied working hours segment , the HVAC plan can focus on optimizing employee comfort. During the overnight segments , , the office is generally unoccupied and the HVAC system can focus on maximizing savings. During morning and evening standby segments , , people are entering or leaving for the day and the HVAC plan can maintain an intermediate setting by either ramping up the HVAC system during the morning segment , or allowing the HVAC system to coast to the overnight setting during the evening segment ","When exactly the HVAC system is initially ramped up or begins coasting will depend on the thermal characteristic of the building. It is understood that the thermal characteristics of the building are not static or predefined. Instead, the system determines the rate at which space gains or dissipates heat as part of its normal operation, thereby self-learning the thermal characteristics that contribute to the \u201cwhen\u201d the ramping up or coasting begins.",{"@attributes":{"id":"p-0099","num":"0200"},"figref":["FIG. 7","FIG. 5","FIG. 1"],"b":["120","105","102","105","127","129","122","128","39","1","39","2"]},"It should be understood that the predicted pattern depends on the time interval characteristics. Characteristics are data that describe objects and time interval characteristics are data that describe time intervals. For example, in an office environment, occupancy is typically different on weekdays as opposed to weekends. Thus, the day of the week (e.g., Wednesday) is a characteristic of a \u201c24-hour period starting and ending at midnight\u201d, and one that has an obvious relevance to the occupants of a space. Depending on the situation, a large number of other characteristics can be relevant. Examples include, but are not limited to:\n\n","The system initially performs general pattern detection across all time intervals, disregarding characteristics such as the day of the week. The result is a number of patterns, each of which is characterized by average sensor values for each time slice, the number of time intervals that were used in generating the pattern, and the \u201cdensity\u201d of the pattern. Density is a measure of how similar the sensor data is across all the time intervals used to generate it. Patterns that are generated from many time intervals and are \u201cdense\u201d are strong indicators of recurring sensor data, and therefore strong predictors of future sensor values.","After the patterns have been ascertained, they are matched against time interval characteristics. For all time intervals that match a given characteristic, the system determines which pattern is the best fit. The result is a count for each pattern of the number of time intervals for which it was the best fit. The pattern that has the highest count of being the best fit is considered the best match for the selected characteristic. That best fit match is then used as a basis for predicting future behavior for facilities management.",{"@attributes":{"id":"p-0103","num":"0218"},"figref":"FIG. 8","b":["1005","1010","1015"]},"On the client-side, the stored recurring patterns  are combined at step  with the previously stored characteristics of the time interval  to find a default pattern from time intervals with similar characteristics. That default pattern is then used as the initial current pattern  at step .","Pattern matching is now done against current time interval , which has a starting time slice , a current time slice , and an ending time slice For the elapsed time period  from the starting time slice to the last completed time slice , current data for each time slice , . . . , is compared against data in a respective time slice , . . . , in the current pattern . The recurring patterns  are also combined at step  with sensor data from elapsed time slices  to find the best match and use as the current pattern if a better fit is found than the previously selected current pattern.","Based on the sensor data in the current pattern, the process predicts future sensor data at step . It should be understood that the prediction is most accurate for the current time slice and the next time slice in the future, while the prediction becomes less reliable as they more farther in the future. Once data collection for the current time slice completes, the matching algorithm at step  and prediction algorithm at step  are processed again, and iterative continues after each new time slice.","The algorithms used for pattern detection and matching are driven by a tradeoff between accuracy and performance. That compromise aims to achieve an optimum balance between accuracy, responsiveness, and computing resource consumption. The algorithms for measuring similarity of sensor readings between two time intervals and the heuristic algorithm for detecting recurring patterns in a large number of time intervals were developed with this balance in mind.","As an overview, every time a selected sensor value differs from the previous reading of the sensor, the date and time of the transition and the new sensor value is stored in a log file. At the end of each time slice, the average values for the selected sensors are calculated and stored with the date and time of the time slice in an averaged sensor value log file. The average values for all the selected sensors are normalized for equal weighting to ensure that all sensors have the same effect on the similarity calculations. A typical normalization formula adds a base value and multiplies the result with a factor to yield the same range of values for all the sensors. A typical normalization will map all sensor values into a numerical range from 1 to 100.","The general normalization equation is:\n\n+()*()\/()\n\nwhere Ris the normalized value, Ris the average sensor value, Ris the smallest value the sensor can return, Ris the maximum value the sensor can return, Nis the smallest possible normalized value, and Nis the largest possible normalized value. In some cases it may be desirable to select Rand Ras the smallest and largest typical sensor values as opposed to the smallest and largest possible sensor values.\n","The normalized average sensor value is stored in a log file with the time slice for which it was calculated.",{"@attributes":{"id":"p-0111","num":"0226"},"figref":"FIG. 9","b":["1110","1112","1112","1122","1122","1114","1114","1116","1116","1124","1124","1126","1126"],"sub":["1","N ","1","N","1","N","1","N ","1","N","1","N "]},"The first step  is to calculate the similarity of sensor values for each corresponding time slice in the two time intervals. The time slice similarity function is:",{"@attributes":{"id":"p-0113","num":"0228"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["S","T"]},"mo":"=","msqrt":{"mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"I","mo":"=","mn":"1"},"mi":"M"},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"R","mrow":{"mi":"IT","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"1"}},{"mi":"R","mrow":{"mi":"IT","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"2"}}],"mo":"-"}},"mn":"2"}},"mi":"M"}}}}},"br":{},"sub":["T ","IT1 ","IT2 "],"b":["1","2"]},"Once the similarity of individual time slices within a time interval are calculated, the overall similarity of the two time intervals is calculated at step  as:",{"@attributes":{"id":"p-0115","num":"0230"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["S","O"]},"mo":"=","msqrt":{"mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"T","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msubsup":{"mi":["S","T"],"mn":"2"}},"mi":"N"}}}}},"br":{},"sub":"T "},"The calculated value of similarity becomes zero when the sensor readings are identical across all time slices. Thus small values indicate a high degree of similarity and large values indicate significant differences in sensor readings. In accordance with a particular embodiment of the invention, the time slices are considered to be suitably similar if S\u2266100.","While a distance of 100 or less implies similarity in accordance with a particular embodiment. This value can be modified over time by determining what values deliver the best patterns. \u201cBest\u201d means delivering the largest number of patterns. High values deliver few, large patterns. Too small values will not deliver any patterns. It is anticipated that a few times a year, all historical data is analyzed to determine an optimal value. It should be appreciated that the optimal value is dependent on the characteristics of the space. For example, a residence will have a different optimal value than a commercial office space.","To detect recurring patterns of sensor readings, clusters of similar time intervals must be identified. Two approaches will now be described. The first approach is a precise approach that is guaranteed to identify all clusters, but scales poorly. The second approach is a heuristic approach that has been shown to find almost all possible clusters, but which does scale well.","The precise method was used during the development of the heuristic method to validate that they generated the same or very similar patterns. As increasing amounts of data is collected, or questions are raised about the accuracy of the heuristic algorithm, the precise algorithm can be used as a baseline for validation or improvements of the heuristic approach.",{"@attributes":{"id":"p-0120","num":"0235"},"figref":"FIG. 10","b":["1210","1200"]},"Furthermore, a cluster also must have a minimum number of members. For this embodiment, three was chosen. The choice is application dependent and driven by whether there is a need or desire to yield patterns with small data sets, and the existence of a need for large numbers of patterns with large data sets.","The method then enters an iterative loop at step  where all time intervals are tested against all clusters in which they are not already a member. At step , for each cluster, all possible clusters are created with one additional member, but not exceeding the absolute maximum cluster size. If the addition of the time interval to the cluster does not cause the cluster to exceed the maximum cluster size, the time interval is added to the cluster. The iterative loop continues through step  until a pass does not add any time intervals to any clusters. All possible clusters no larger than the absolute maximum cluster size are thus identified.","Two additional steps are performed. First, at step , all clusters less than a certain size are eliminated. An optimal cutoff size depends on the data, but typically one to two orders of magnitude smaller than the total number of time intervals contributing to the process. Next, at step , the process eliminates overlapping clusters, i.e. clusters that share members. The approach is to eliminate all but the cluster with the largest number of members from the overlapping set. If multiple clusters are of the same size, the one with the highest density is retained.",{"@attributes":{"id":"p-0124","num":"0239"},"figref":"FIG. 11","b":["1300","1310"]},"The rest of the algorithm runs in a loop that starts at step  with picking the similarity of the first pair in the list as a current maximum cluster size for this iteration. Viewed graphically, the new maximum cluster size is a diameter equal to the distance between the first pair in the list. At step , the method then determines if any existing clusters can be combined into a single cluster without exceeding the current maximum cluster size. Those that can are merged. At step , the method then determines if any of the time intervals (e.g. days) that are not already in a cluster can be added to any of the existing clusters without exceeding the current maximum cluster size. Then at step , all pairs from the list that have similarities not greater than the current maximum cluster size, and where none of the two are members of a cluster, are added to the clusters. The final step  of the iterative loop is to remove all pairs where at least one member of the pair has been assigned to clusters. The iteration stops when the similarity of the smallest pair in the list exceeds the maximum cluster size, or there are no more unassigned time intervals.","Regardless of which method is employed, every detected cluster is the source for a pattern. In particular, each pattern is the sensor value averages from all members of the cluster across each time slice in the time interval. The collections of patterns are stored by the server and transferred to the LEOs at an appropriate time, such as over a weekend. Each LEO then begins using the patterns in its matching algorithms.",{"@attributes":{"id":"p-0127","num":"0242"},"figref":["FIG. 12","FIG. 1","FIG. 9"],"b":["1400","1410","1420"]},"For pattern matching, the general time slice similarity function is:",{"@attributes":{"id":"p-0129","num":"0244"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["S","T"]},"mo":"=","msqrt":{"mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"I","mo":"=","mn":"1"},"mi":"M"},"mo":"\u2062","mrow":{"mo":"(","mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["R","IP"]},{"mi":["R","IT"]}],"mo":"-"}},"mo":"*","msup":{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mrow":{"mo":["(",")"],"mrow":{"mo":["(",")"],"mfrac":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["T","N"]},{"mi":["T","T"]}],"mo":"-"}},"msub":{"mi":["T","S"]}}}}}},"mn":"2"}}}},"mi":"M"}}}}},"br":{},"sub":["T ","IP ","IT ","N ","T ","S "]},"One difference between this formula and the one used for pattern detection is that differences are weighted by the time difference between the start of the current time slice and the start of the time slice being measured. The current time slice difference is given a weight of one, and a time difference of a full time slice away is given a weight of zero.","The weighting can be made non-linear by applying an exponent to the weighting factor as below.",{"@attributes":{"id":"p-0132","num":"0247"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["S","T"]},"mo":"=","msqrt":{"mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"I","mo":"=","mn":"1"},"mi":"M"},"mo":"\u2062","mrow":{"mo":"(","mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["R","IP"]},{"mi":["R","IT"]}],"mo":"-"}},"mo":"*","msup":{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msup":{"mrow":{"mo":["(",")"],"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mi":["T","N"]},{"mi":["T","T"]}],"mo":"-"}},{"msub":{"mi":["T","S"]},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]}}},"mi":"P"}}},"mn":"2"}}}},"mi":"M"}}}}},"br":{}},"The overall similarity of the pattern to the time interval is",{"@attributes":{"id":"p-0134","num":"0249"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["S","O"]},"mo":"=","msqrt":{"mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"T","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msubsup":{"mi":["S","T"],"mn":"2"}},"mi":"N"}}}}},"br":{},"sub":"T "},{"@attributes":{"id":"p-0135","num":"0250"},"figref":["FIG. 13","FIG. 8"],"b":["2025","1005","2025","2032","2033","2034","1015","2033"]},"At step , the process counts the number of times a particular pattern is the best match for a time interval. Then, at step , the pattern that has the highest count of being the best match becomes the default pattern for the given time interval .","For each time interval characteristic, the pattern with the highest rank becomes the default pattern for that characteristic. The default patterns, the characteristics, and the number of times the patterns is the best match for the characteristic are stored for prediction of sensor values. It should be appreciated that the choice of the default pattern is dynamic and can thus change as frequently as every time slice.",{"@attributes":{"id":"p-0138","num":"0253"},"figref":["FIG. 14","FIG. 8"],"b":["2040","2042","2015","1015","2055","2044","2055","2050","2045","2050","2055","2048","2050","2046"]},{"@attributes":{"id":"p-0139","num":"0254"},"figref":["FIG. 15","FIG. 8"],"b":["2084","2081","2082","2050"],"sub":"X "},"How far out in the future to retrieve a predicted sensor value is dependent on the actual application. For HVAC, the time needed to bring the building to the desired temperature is the major factor. This time will vary with the thermal properties of the building and with the range that the temperature needs to change by, which, in turn may vary by the outside temperature. The times can also be different for heating and cooling.","While the above pattern detection and matching processes have been described with reference to time slices, the horizontal dimension can be other metrics other than time. An example of non-time based patterns is monitoring how a failure of vehicle parts relate to the mileage of the vehicle. That is, if the failure of various parts are mapped into the mileage across a large population of vehicles, patterns will emerge. The emergence of new patterns, occurring at lower mileages, may indicate deteriorating quality of a part.","To accomplish balanced energy efficiency, a particular embodiment of the system includes logic to understand how comfortable the occupants of a building are, and how comfortable they should be. The determination of how comfortable occupants \u201cshould be\u201d includes an element of corporate or institutional policy that must be considered, and is accounted for in the system algorithms as well. In particular, the system uses occupant feedback to determine the comfort status of groups of occupants, and uses that as a factor in governing the settings of building subsystems to optimize group comfort, while balancing against policy driven energy savings requirements.","By employing feedback, people are treated as fuzzy sensors (e.g. \u201ctoo hot\u201d, \u201ctoo cold\u201d, \u201cjust right\u201d). Feedback then is thus data, from which the system can extract information, and treated as complaints. Thus feedback is actively solicited, unlike complaints, because more data is better.",{"@attributes":{"id":"p-0144","num":"0259"},"figref":"FIG. 16"},"In most buildings, efficient facilities management requires striking a balance between reducing energy consumption and optimizing occupant comfort. In environments such as businesses, institutions and agencies, the comfort of an employee is an important factor in their overall job satisfaction and has a direct impact on their morale, productivity and employee retention. Whereas reducing energy consumption means saving money, one cannot lose sight of the costs associated with unhappy employees. The costs associated with reduced productivity or low rates of retention can be substantial, and have the potential to outweigh energy savings gained at the expense of comfort. Therefore, finding the perfect balance between reducing energy consumption and keeping people comfortable is an important strategic goal of most commercial entities.","A particular facilities management system includes the ability to measure occupant comfort and apply the results to facilities management. The system facilitates and encourages occupant feedback by providing easy and entertaining feedback interfaces on familiar devices such as smart phones and personal commuters, and by responding to the occupant's feedback in a way that makes the occupant understand the functioning of the system and remain eager to participate. Encouraging full and active occupant feedback participation allows for accurate statistical analysis and reliable determination of group comfort.","Subsystems will have overlapping, but often different control zones. For example, a room may be the entire control zone for lighting control, but one of several rooms that are a single HVAC control zone. When feedback is received, the location of the feedback is mapped into all of the control zones that the location is part of. Typically, but not necessarily, feedback for a given subsystem is handled independently of feedback from other subsystems. Feedback that an occupant finds that a space is too brightly lit may affect the lighting or window shade settings, but will not affect temperature handling.","Occupant feedback is implemented through a cycle of collecting feedback for a given period of time, the measurement period, then analyzing the feedback to identify differences between group comfort and current subsystem settings adjustments, and finally making adjustments to subsystem settings as appropriate. The cycle repeats continuously as feedback is received.",{"@attributes":{"id":"p-0149","num":"0264"},"figref":"FIG. 17","b":"3100"},"The collection phase addresses collecting feedback received from feedback devices at step  for a fixed time period. The measurement period length for each collection phase is determined on a customer-by-customer basis to account for:\n\n","It should be noted that too short of a measurement period may result in undesirable fluctuations in settings based on too few instances of feedback. However, too long of a measurement period may result in undesirable delays between feedback and noticeable changes in subsystem settings or feedback response. System reports can assist the customer in selecting the most appropriate measurement period. The default setting for a new customer is typically 24 hours.","Feedback for a measurement period is stored in a database , including the following information:\n\n","The user interface typically supports simultaneous feedback on multiple subsystems. Each instance of feedback will create a separate record in the database relating to the associated subsystem.","For the analysis phase, feedback is parsed for analysis according to associated subsystems and control zones. Feedback for each subsystem is analyzed independently of the feedback for other subsystems. Within each subsystem, feedback for each control zone is analyzed independently of other control zones.","Feedback is pre-processed from individual occupants at step . The treatment of multiple instances of feedback from individual occupants is defined by the customer's policy settings . Settings may be collective, applying to all occupants, or individual, applicable to specific occupants. The purpose is to ensure that occupant feedback is treated \u201cfairly\u201d, as determined by the customer, and to eliminate intentional manipulation of the system.","Multiple instances of feedback from a single individual for a specific subsystem and control zone during a single measurement period can be handled in several ways:\n\n","It is recognized that the pre-processing of feedback may raise alerts  to the customer. For example:\n\n","The feedback from specific occupants for specific subsystems and control zones can be given different levels of weight as defined by customer policy. For example, the customer may decide that feedback from residents is given more weight than feedback from non-residents, or that professors are accorded a higher weighting than students. Such weighting can be included in the calculation of adjustment factors for a given subsystem or control zone.","After the feedback from individual occupants has been processed, then all feedback is analyzed statistically at the group level at step  for:\n\n","The statistical analysis may also raise alerts  to the customer that indicate that facility systems are faulty or out of calibration, such as:\n\n","Specific occupants consistently providing feedback that is divergent from the majority of occupants may indicate:\n\n","The following feedback data received from a group of individuals is an illustrative example:",{"@attributes":{"id":"p-0163","num":"0340"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Comfort","Value","Count"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Extremely cold","\u22124","1"]},{"entry":[{},"Very cold","\u22123","1"]},{"entry":[{},"Cold","\u22122","2"]},{"entry":[{},"Cool","\u22121","10"]},{"entry":[{},"Comfortable","0","20"]},{"entry":[{},"Warm","1","15"]},{"entry":[{},"Hot","2","4"]},{"entry":[{},"Very hot","3","1"]},{"entry":[{},"Extremely hot","4","0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"If the 10% outliers are removed, the data becomes:",{"@attributes":{"id":"p-0165","num":"0342"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Comfort","Value","Count"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Extremely cold","\u22124","0"]},{"entry":[{},"Very cold","\u22123","0"]},{"entry":[{},"Cold","\u22122","0"]},{"entry":[{},"Cool","\u22121","10"]},{"entry":[{},"Comfortable","0","20"]},{"entry":[{},"Warm","1","15"]},{"entry":[{},"Hot","2","4"]},{"entry":[{},"Very hot","3","0"]},{"entry":[{},"Extremely hot","4","0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"With the outliers removed, there is a significant bias towards \u201cwarm\u201d in the feedback. Depending on the customer's policy settings, the season, the weather, or the influence of solar heating, etc., this might warrant dropping the thermostat's high set-point in summer, causing more energy consumption for air conditioning, or dropping the thermostat low set-point during the heating season, leading to a reduction in energy consumption for heating.","In addition, occupant-level statistical analysis is also performed at step  for:\n\n","The following aggregate feedback received from an individual is another example:",{"@attributes":{"id":"p-0169","num":"0357"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Comfort","Value","Count"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Extremely cold","\u22124","1"]},{"entry":[{},"Very cold","\u22123","2"]},{"entry":[{},"Cold","\u22122","4"]},{"entry":[{},"Cool","\u22121","10"]},{"entry":[{},"Comfortable","0","20"]},{"entry":[{},"Warm","1","6"]},{"entry":[{},"Hot","2","2"]},{"entry":[{},"Very hot","3","1"]},{"entry":[{},"Extremely hot","4","0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"From the data, the average feedback from this individual Occupant is \u22121.66 (\u201ccool\u201d) and the median value is \u201ccomfortable\u201d. If we again remove 10% outliers, the average becomes \u22122 (\u201ccold\u201d) and the median remains \u201ccomfortable\u201d. Depending on the customer's policy settings, an alert may be issued that this occupant typically feels too cold.","For the adjustment phase , the results of the statistical analysis from step  and customer policy settings  are fed to rules that manage the settings for the controls that adjust the subsystems and control zones just analyzed. Examples of such rules are:\n\n","Note that the adjustments typically will create an optimum balance between occupant comfort and energy consumption.","The system also includes a provision for policy override because some amount of discomfort may be desirable from a business perspective due to the potential energy savings. Thus policy adjustment mechanisms are provided to over-ride optimization to conform to such business policy.","An occupant feedback response  is provided at all stages of feedback processing. The types of response and when a response should be provided to the occupant who provides the feedback are driven by rules that take customer policy settings as input.","From the collection stage at step , an immediate response is provided to the occupant to show that each instance of feedback has been received and will be processed. Responses may also include incentives or historical information, such as:\n\n","From the analysis stage, all steps can result in responses to specific occupants, to groups of occupants, or all occupants, depending on specific conditions. As a result of pre-processing of feedback at step  from individual occupants, the occupants may be provided a feedback response, such as:\n\n","From the adjustments stage at step , energy management setting adjustments can generate occupant feedback responses, such as informing all affected occupants of adjustments that have been made in response to occupant feedback, with information about the impact of the adjustment on comfort levels and energy consumption.",{"@attributes":{"id":"p-0178","num":"0383"},"figref":"FIG. 18","b":["3500","3510","3520","3530","3512","3514","3516","3532","3534","3522"]},"Returning to , each LEO -, - and the central server  include a respective rules engine -, -,  for processing data. While traditional programming could be used, the rules engines create a programming environment that is extremely close to a number of real-world situations. By using a rules engine, the programmer can focus on the business problem and not worry about traditional programming concepts such as program flow.","A rules engine, in accordance with particular embodiments of the invention, operates on a set of rules, specified as \u201cwhen <event> do <action>\u201d. The rules engines detect the occurrence of events and automatically execute the matching actions for rule-specified events that have occurred. If an action creates the conditions specified by one or more events, or possibly the same rule, they, in turn are executed until no more events are detected. In the terminology of rules engines, a rule is triggered when an event fires.","Ideally, the rules engine itself consumes few resources and leaves most of the computer's resources to execution of the rule actions. In practice, however, rules engines often consume large amounts of resources in the process of detecting events and triggering rules.","The most complex issues that contribute to rules engine overhead are detection of events and chaining to rules, and state management.","For the detection of events and chaining to rules, the more general the rules engine, and the more complex logic is allowed in the definition of events, the more difficult, and in turn, resource consuming does the rules engine's logic for this process become. In the terminology of artificial intelligence, a rules engine can be forward chaining, in which cases it detects an event then examines whether any rules exist that should be triggered by the event, or backward chaining, in which case the rules engine constantly watches the environment for conditions that satisfy the rule triggering logic.","Management of state by the rules engine is important and potentially very complex. As a result, most rules engines are single-threaded\u2014only one rule action can execute at a time. Multithreading can be desirable if some events take a long time to complete.","The order in which rule actions execute can also be important, if some event triggers two rules, the final state can be different depending on the order in which the rule actions execute. If the order is predictable the rules engine is deterministic and if it is not, the rules engine is non-deterministic.","An interesting case is the scenario where an event fires a rule, but for some reason the conditions defining the event are not true at the time the action executes. A real-world example is that a rule can specify that a thermostat should be set at a comfortable level when an office is occupied, and another rule states that different thermostat settings should be employed when the office is unoccupied. If the office becomes occupied and triggers the first rule, but the event is not executed until the office becomes unoccupied, then the thermostat is adjusted unnecessarily. The second rule will fire when the office becomes unoccupied and if the rule actions execute in the order in which the rules were fired, the thermostat will be set correctly after the second rule performs its action.","The rules engines are frequently triggered by periodic events. As such, the system uses rules to maintain time data in a heartbeat table (not shown) and to process actions in response to changes in the time fields.","In accordance with a particular embodiment of the invention, a rules engine addresses the issues described above by leveraging ACID relational database technology ,  () in the creation of rules engines. Specifically:\n\n","In a particular embodiment of the invention, the ACID database is provided by MySQL, version 5.2, paired with the InnoDB storage engine. The integration of ACID-compliant database technology has enabled a number of other significant features and benefits. To maximize leverage of database technology and to make the rules engine as useful as possible in a real-world application setting, the particular rules engine has the following features:\n\n","The particular rules engine applies the capabilities of modern ACID-compliant relational databases to the domain of rules engines in a unique and innovative manner to implement a rules engine with a number of unique and desirable features:\n\n",{"@attributes":{"id":"p-0191","num":"0426"},"figref":"FIG. 19","b":"4000","ul":{"@attributes":{"id":"ul0099","list-style":"none"},"li":{"@attributes":{"id":"ul0099-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0100","list-style":"none"},"li":["1. the event definition , which is the data that will trigger the rule;","2. the action  the rule should perform when triggered; and","3. the priority of the rule ."]}}}},"Triggering data is data that, if changed by database inserts, deletes or updates, will trigger rules. The definition includes a list of table and column pairs. The list of tables can include multiple tables , , . . . ,  and multiple columns -A, -B, -C, . . . , -D with no restriction other than all the tables must be under the control of a single transaction manager. Pointers  are used to access the table columns.","The action to be performed when triggered is machine-executable code that must be run after the rule is triggered.","Rules are created by adding entries to a rule definition table that contains the identity of the rule, the trigger definition, the action code and the rule priority. Depending on the implementation, any or all of these fields can be pointers to data external to the database or contained in data or code external to the database.",{"@attributes":{"id":"p-0195","num":"0433"},"figref":["FIG. 20","FIG. 19"],"b":["4100","4100","4080","4110","4010","4120","4130","4140"]},"The entries on the rule execution queue  are processed by processes -, -, . . . , -R executing the specified rule action  (). As shown, the processes can run in parallel. The power of the rules engine can be appreciated by the fact that the rule actions can result in modification to the database, which can also trigger further rules.",{"@attributes":{"id":"p-0197","num":"0435"},"figref":["FIG. 21","FIG. 20"],"b":["4110","1081","4112","4114","4116","4120"]},"One advantage of using database triggers is that the process making the change to the data is unaware of the triggering, and that the trigger will capture any modification to the data, no matter how it is made. Finally, the triggering code is run in the context of the transaction of the modifying query and follows the ACID compliant rules. Specifically, if the modifying code fails and the transaction is rolled back, the entry into the event queue will also be rolled back and removed.",{"@attributes":{"id":"p-0199","num":"0437"},"figref":["FIG. 22","FIG. 20"],"b":["4120","4131","4120","4010","4132"],"ul":{"@attributes":{"id":"ul0101","list-style":"none"},"li":{"@attributes":{"id":"ul0101-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0102","list-style":"none"},"li":["At step , a rule execution queue entry is created that includes a rule identifier, the table name, the column name, the primary key values, and the action from the event queue entry.","At step , the process examines the contents of a rule execution queue table. A row in the rule execution queue table includes the identity of a rule, the name of the triggering table, the name of the triggering column, the primary key values of the row that triggered the rule, the action that caused the trigger (insert, delete, or update), the state of the entry, the priority of the rule, and the date and time the row was placed in the queue.","At step , if no entry was found in the rule execution queue that matches the rule identifier, the table name, the column name, the primary key values, and the action from the event queue entry, a new rule execution queue entry is added at step  that includes the identity of the rule, the data from the event queue table, the rule priority and current date and time.","If an entry was found at step , then processing continues to step  where the entry's state is examined and depending on its value, one of the following actions is taken:\n        \n        "]}}}},"At step , if there are more rules that match the event queue entry, then processing returns to step  to process the next rule. Upon completion of these actions the entry in the event queue table is deleted at step  and processing returns to step  to process the next event queue entry. Each event queue entry is handled in a transaction, ensuring that it either completes, and is deleted, or rolled back, and stays in the queue.",{"@attributes":{"id":"p-0201","num":"0447"},"figref":["FIG. 23","FIG. 20","FIG. 20"],"b":["4020","4140"],"ul":{"@attributes":{"id":"ul0104","list-style":"none"},"li":{"@attributes":{"id":"ul0104-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0105","list-style":"none"},"li":["Depending on how it is set up, a rule execution process can be configured for a subset of possible priorities. In a single transaction, the highest priority, oldest (defined by the submission date and time) rule execution queue entry that matches the priority configuration of the process, and has a state of waiting to be run is selected at step . At step , its state is changed to running, and the transaction is committed. The code of the rule is then called at step , passing the data from the queue entry as parameters.","If the code returns without failure at step , the queue entry is retrieved again (it may have been modified in the meantime), and its state is examined and the following actions taken based on the state:\n        \n        ","If the rule code returns a failure at step , the current transaction is committed, a new transaction is started and the queue entry state is modified to failed at step .","The current transaction is then committed to the database."]}}}},"In addition to the above, database event triggers can be automatically created. By examining the totality of rules the aggregate set of rule-triggering table\/column pairs can be ascertained. By maintaining a strict naming convention for the rules engine-generated database triggers the rules engine can automate the management of them. When a rule is created, deleted or modified, the rules engine will generate the source code for the required database triggers. If the database engine provides a facility for examining the source of installed triggers, the engine can compare those required with those installed and delete those no longer required, create new ones required and modify those where the generated source is different from the installed.","Furthermore, rules in a running rules engine can be updated with no disruption by updating the system as follows:\n\n","Performance of the rules engine can be increased by caching read-only data. In particular, when there is a high probability that the same data will be executed multiple times in a single process, the performance of the second and subsequent executions can be increased by passing each instance of the rule a pointer to an in-memory data structure that will be passed to all instances running in that process. The first instance may determine that the data structure does not contain the read-only data and read it from the database or some other data source. Subsequent instances may examine the data structure and determine that it contains the read-only data and use the in-memory contents.","The same data structure can be used for instance-to-instance communication within a single process that does not need to be managed transactionally.","Finally, a failed rule instance (where the rule execution queue state is failed) can be restarted by changing the state to waiting to be run after the condition causing the failure has been corrected. The failure correction can include updating the rule logic as described above.","It may be desirable to run the failed rule without changing its initial state for diagnostic purposes, or to validate that the error-causing condition has been corrected. This can be done by running a process (possibly under debugger control) that selects the failed rule from the rule execution queue, but otherwise follows the same logic as described.","If a rule action performs aggregate functions, such as operating across multiple rows, it can be undesirable to have rule instances for each modified row. For example, if a rule calculates the sum of the values of a column across an entire table, the rules engine can place multiple instances of the rule in the rule execution queue, all waiting to be executed. When the first instance executes, the sum will be calculated, and subsequent instances will calculate the same sum and, in effect, do no useful work.","To eliminate that wasted resource use, the particular rules engine allows the rule so specify a piece of code to be executed as the event queue entry is translated to a rule execution queue entry. This code is granted modification access to the rule execution queue entry before the queue is scanned for the same entry. By modifying the entry it can manipulate which existing queue entries it will match. For example, in the previous example, if the field containing the primary key values is modified to a constant value, triggering from different rows will create the same rule execution queue entry and only one instance will exist in the queue at any time.",{"@attributes":{"id":"p-0210","num":"0467"},"figref":["FIG. 24","FIG. 22","FIG. 22"],"b":["4130","4130","4133","4133","4134"]},{"@attributes":{"id":"p-0211","num":"0468"},"figref":["FIG. 25","FIG. 19","FIG. 24","FIG. 19"],"b":["4000","4010","4020","4030","4000","4040"]},"The ability to manipulate the rule execution queue entry is extremely powerful and useful in a number of other instances.","Finally, the ability to schedule rule actions other than through the previously described database triggers extends the scope of events beyond the modification of database table values. In effect, it allows any piece of software, including rule actions, to raise events and trigger rule execution.","The particular rules engine provides three mechanisms to programmatically trigger rules:\n\n","These API entries provide a completely generalized interface for code that programmatically raise events and schedule rule execution.","It is anticipated that the described technologies can be applied to areas beyond facilities management and energy conservation, and that those of ordinary skill in the art will recognize many other application. Some other applications include, but are not limited to:\n\n","Those of ordinary skill in the art should recognize that methods involved in the automated facilities management system may be embodied in a computer program product that includes a computer-usable medium. For example, such a computer-usable medium can include a readable memory device, such as a solid state memory device, a hard drive device, a CD-ROM, a DVD-ROM, or a computer diskette, having computer-readable program code segments stored thereon. The computer-useable medium can also include a communications or transmission medium, such as a bus or a communications link, whether optical, wired, or wireless, having program code segments carried thereon as digital or analog data signals.","While this invention has been particularly shown and described with references to particular embodiments, it will be understood by those skilled in the art that various changes in form and details may be made to the embodiments without departing from the scope of the invention encompassed by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular description of particular embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention.",{"@attributes":{"id":"p-0023","num":"0038"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0039"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0025","num":"0040"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0026","num":"0041"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0027","num":"0042"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0028","num":"0043"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0029","num":"0044"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0030","num":"0045"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0031","num":"0046"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0032","num":"0047"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0033","num":"0048"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0034","num":"0049"},"figref":["FIG. 12","FIG. 1"]},{"@attributes":{"id":"p-0035","num":"0050"},"figref":["FIG. 13","FIG. 8"]},{"@attributes":{"id":"p-0036","num":"0051"},"figref":["FIG. 14","FIG. 8"]},{"@attributes":{"id":"p-0037","num":"0052"},"figref":["FIG. 15","FIG. 8"]},{"@attributes":{"id":"p-0038","num":"0053"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0039","num":"0054"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0040","num":"0055"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0041","num":"0056"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0042","num":"0057"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0043","num":"0058"},"figref":["FIG. 21","FIG. 20"]},{"@attributes":{"id":"p-0044","num":"0059"},"figref":["FIG. 22","FIG. 20"]},{"@attributes":{"id":"p-0045","num":"0060"},"figref":["FIG. 23","FIG. 20"]},{"@attributes":{"id":"p-0046","num":"0061"},"figref":["FIG. 24","FIG. 22"]},{"@attributes":{"id":"p-0047","num":"0062"},"figref":["FIG. 25","FIG. 19","FIG. 24"]}]},"DETDESC":[{},{}]}
