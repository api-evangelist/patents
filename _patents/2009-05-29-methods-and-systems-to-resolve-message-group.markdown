---
title: Methods and systems to resolve message group
abstract: A method and system for resolving addresses of a message including looking up, from a source directory, a group name associated with a message address of the message, looking up through a cache of user names mapped to user addresses, a user address for each of the looked up user names and returning an associated user address, and addressing the message to each looked up user addresses. Expanding group address by looking up user name in for group from source directory, looking up user address for each user name from user cache, addressing message to looked up user, address, and transmitting message to looked up user address.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667271&OS=08667271&RS=08667271
owner: Blackberry Limited
number: 08667271
owner_city: Waterloo
owner_country: CA
publication_date: 20090529
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["This application claims priority from, and is entitled to the benefit of the filing date of U.S. patent application No. 61\/080,922 entitled METHODS AND SYSTEMS TO RESOLVE MESSAGE GROUP filed Jul. 15, 2008. The content of the above application is hereby incorporated by reference into the detailed description hereof.","The present description relates to messaging applications that send and receive messages and, in particular, to methods and systems for resolving a message group.","Message addresses are often organized in groups to identify message addresses to which certain information should be sent. Such groups can provide authentication for the message address to ensure that only those that are authorized to receive the message receive a message. For example, financial information about a company may be authorized for only an executive group of the company. A message address group entitled \u201cExecutive\u201d could be set up on a message server of the company. Whenever a message is to be sent to the \u201cExecutive\u201d group then a message server is instructed to resolve the members of the group and send the message to each of them. This process can be resource intensive resulting in degradation of system performance.","It would be advantageous for there to exist improved or alternative methods and systems for the expansion of a message group.","Similar reference numerals may have been used in different figures to denote similar components.","The problem of consumption of system resources for group message resolution is especially true where a message is to be encrypted as additional steps are required to resolve the group and also to obtain required encryption information for individual members, such as an encryption key. This can multiply when groups are nested within other groups. Also, some message servers are unable to resolve group addresses for messages to be encrypted. This means that the group must be resolved prior to sending the message to the server for encryption and transmission, which results in numerous calls to the server.","The present description relates to telecommunications systems, including multimedia telecommunications systems, which may be implemented using a variety of electronic and optical technologies, including but not limited to: analog electronic systems; digital electronic systems; microprocessors and other processing elements; and software and otherwise embodied collections of steps, instructions, and the like, for implementing methods, processes, or policies in conjunction with such systems and processing elements. It will be appreciated that in the telecommunications arts, various signal leads, busses, data paths, data structures, channels, buffers, message-passing interfaces, and other communications paths may be used to implement a facility, structure, link or method for conveying information or signals, and are often functionally equivalent. Such functional equivalents are included within the scope of this description. The terms \u201cinterconnected\u201d and \u201coperatively coupled\u201d are intended to refer interchangeably to a connection between components that allows data to pass therebetween, perhaps through one or more intermediate components.","In this description, reference is made to certain terms as follows: A \u201csource directory\u201d refers to a database of information that is defined to be current. A \u201ccache\u201d reflects a snapshot of information from the source directory that may be out of date since the snapshot was taken. A \u201cuser name\u201d is the name recognized by a server for obtaining associated information about a user, including a user address and, possibly, a user encryption key. The \u201cuser encryption key\u201d may be for example a public key used for encryption of a message to be decrypted by a separate private encryption key provided by the user when attempting to decrypt a message. The user encryption key may be associated with a digital certificate. Other forms of encryption may also be used apart from public key\/private key encryption.","Any references herein to \u201cmessages\u201d are not intended to be limited to e-mail, but should be understood to include other types of messages that one skilled in the art would understand to be possible in the context in which the term is being used. Other types of messages may include, for example, text messages, audio messages, video messages, SMS messages and other items, including calendar entries, tasks, and other date-related items.","For simplicity this description will be made with reference to message addresses with a format that has two portions and an @ symbol at the dividing point between the two portions. For the purposes of this description message addresses can be user addresses or group addresses.","For a user address, one portion is typically the user name that is set up with an address provider, for example a network administrator, and stored in the source directory for use by the server. Information about the user is mapped to the user name in the source directory, such as for example a user address and encryption key. The user name is frequently in the form of the name or nickname of the person associated with the user address. The second portion identifies the host name, or an alias thereof, of a server that receives or handles messages, such as e-mail, for the user identified in the first portion. Host names typically have two or more parts, separated by dots. The part on the left is the most specific, and the part on the right is the most general. In some cases, for example, the host name portion of a message address may not be specified because it may be implicit. For instance, in some cases it may be assumed that messages addressed to any address without a host name may be delivered to or through a default mail handling server of an entity, such as a company or a service provider from which the message is sent, such that the host name or alias of that server need not be specified.","Group addresses can have a format similar to that of a user address; however, it is to be recognized that a group address represents a group of addresses which may be user addresses or further group addresses. For a group address, one portion is typically the group name that is set up with an address provider, for example a network administrator, and stored in the source directory for use by the server. Information about the group is mapped to the group name in the source directory, such as for example a list of members (by user name). The group name is frequently in the form of the name or nickname of the group associated with the group address. Again, the second portion identifies the host name, or an alias thereof, of a server that receives or handles e-mail for the group identified in the first portion.","Although, the aforementioned description of a particular format for message addresses is consistent with that used in many extant messaging systems, it is to be recognized, as mentioned previously, that the embodiments described herein can be extended to message addresses in other formats.","As an overview and before referring to the Figures for additional details, reference will be made herein to a system (and methods related thereto) as an example including facilities that allow a group address to be resolved by expanding the group address into user addresses by looking up user names for members of the group associated with the group address from a source directory then looking up an user address for each of the user names through a user cache of user names mapped to user addresses. The system also includes facilities to resolve the group address to a group name and to look up user names for members of the group based on the group name. The system further includes facilities to encrypt the message and transmit it to the user addresses. The system also includes facilities to transmit a request for transmission of the message to a group address and for encryption of the message prior to resolving the group address. The system also includes facilities to lookup encryption keys for encryption from a source directory using the user names from the cache.","The resolution of group addresses in this manner is acceptable for use with messages to be encrypted as the security risk of sending a message to an out of date user address for a correct user name or using an out of date digital certificate for a correct user name is low. The most likely result is that a message will either not be received or will be received and not be able to be decrypted. If the message is not received then the sender may receive an undeliverable message warning and know to resend the message. When the cache is updated, the message will be deliverable. If a message is received but not able to be decrypted then the recipient can ask to have the message resent. Again, when the cache is updated, the message will be able to be decrypted. By using the source directory to lookup user names associated with a group, messages are unlikely to be addressed to incorrect users.","Further details around the basic system and methods described above can include facilities and method steps for checking in a group cache to see if a group name has already been looked up for a message, for example because it appears already as a group name in the message addresses or nested within a previously resolved group name for the message. If so, the process can be stopped for the group name as it need not be repeated. Similarly, there may be provided facilities and method steps for checking in the user cache to see if a user name has already been looked up for a message, for example because it appears already as a user name in the message addresses or nested within a previously resolved group name for the message, or it was looked up by default as a user name even though it was a group name. If so, the process can be stopped for look up as a user name as it need not be repeated. To facilitate the above checks, an indication when a message address has been looked up as a user name for a message can be added to the user cache, and an indication when a message address has been looked up as a group name for a message can be added to the group cache. Such indications for group names are cleared when the address resolution has completed for a message. If the lookup of a user name in the cache fails then the user name can be looked up in the server for use with the message and the relevant information can also be added to the user cache for future lookups. The process for resolution of group names can be called recursively to resolve nested group names. A check can be performed to limit the number of nesting levels checked to defend against circular, self-referential, or very deep (and time-consuming) groups. Such groups could exist naturally, or be created as an exploit attempt.","Referring now to the drawings, in  a system  for sending messages from a message client  provides an example environment in which example embodiments of aspects of the application may be used. It will be appreciated that aspects of the application may be applied to other environments with or without modifications, which modifications would be within the ability of one of skill in the art.","The system  includes one or more message servers , one of which is shown in . It also include one or more source directories  for the message server , which hold message related data, including for example group records , user address records  and user encryption key records . It is to be understood that the source directories may contain other data, such as for example sent messages, draft messages, received messages, contacts and other data the description of which is being omitted for clarity.","Referring to , example group record , user address records , , and user encryption key records , , are shown in further detail. The group record  shows a group name XY with user names A, B, C. User address record shows for example a user name A with a user address A@EXAMPLE.COM. User encryption key record shows a user name A with a user encryption key LMN. The user address record , , can be merged with the user encryption key records , , , respectively, if desired. The user names in the member list of the group record  can be used as pointers to the user names in the respective user address records , , and user encryption key records , , , as indicated by the arrows in .","Referring again to , the system  further includes a message agent  that performs message related processing. In the example shown in , the message agent  is shown independent of the message server . It is to be understood that the message agent  and\/or all or part of the messaging functions described in respect of the message agent  can form part of the message server  with consequent modification to the system . In the embodiment described later an example is described wherein the message server  and the message agent  are provided by different entities and adapted to the purposes described. Accordingly, the message agent  and message server  are described independently for that embodiment. It is noted that some embodiments of the methods and systems described herein may provide additional improvements over simply searching the source directory  through the server  to resolve message addresses where communication between the message agent  and the server  utilize (or, but for the techniques described herein, would utilize), an application programming interface (API) of the message server  which can involve significant time and resources.","A user cache  is provided for the message agent . The cache  stores and provides access to user data by user name, such as user address records  and, possibly, user encryption key records . The user data is accessible to the message agent  without having to access the data in the source directories , directly or through the message server . The cache  is stored in a location that is quickly accessible by the message agent  and reduces effect on system  performance when compared to accessing the same data in the source directories  through the message server . For example, user cache  may be realized in a random access memory of the message agent . It is to be recognized that the cache  could be in another location that is quickly accessible to the message agent  and reduces effect on system  performance, including but for example local disk storage or network-accessible storage facilities. As groups may have many users, the benefit of the cache  can be significant.","The cache  is nominally divided into two portions: a resolved user portion containing user data, such as records , , for user names that have been found on the source directory , and an unresolved user name portion containing a list of message addresses that have been looked up as user names in the source directory  but not found as user names (\u201cunresolved user names\u201d). The resolved user portion and unresolved user portion are shown for ease of illustration as divided by dividing line ; however, it is to be recognized that this is a notional dividing line only. The portions , may simply be entries in a single memory structure or the cache  can be divided among a plurality of memory structures as appropriate for a given installation or configuration. The cache  persists for resolution of message addresses for successive messages. Example factors that may be taken into account in managing the cache are discussed later in this description.","A group cache is also provided for use by the message agent . The group cache is a list that stores message addresses previously looked up as group addresses for a particular message. The group cache provides an indication of whether or not a looked up message address is in the cache . Entry in the group cache represent whether or not a message address has already been looked up as a group address for the particular message. The group cache is used by the message agent  to determine if a message address has already been looked up as a group address for the particular message. If a message address has earlier been looked up as a group address for the particular message, either the look-up will have been successful, in which case the members of the group will already have been resolved to recipient addresses and added to the list of message recipients, or the look-up will have been unsuccessful. In either case, it is not necessary to attempt to look up again the same message address as part of processing the message addresses for the particular message. Accordingly, presence of a message address in the group cache inhibits subsequent look-ups by message agent  of the same address during the processing of recipient addresses for the particular message. The group cache is cleared after resolution of the message addresses for each message. The group cache is temporary in the sense that its content does not persist between messages. The group cache is stored in a location that is quickly accessible by the message agent .","In some embodiments the group cache can also store with the message address an indication of whether or not a lookup was performed for the message address on the server  to determine if the message address was a group address. This indication is stored in the cache as it is possible that, where the nesting level of the message address is too deep, the message address may be stored in the cache even though a lookup on the server  has not been performed. The indication of whether or not a lookup was performed on the server  can be used to determine whether or not a lookup should be performed or skipped if the message address is encountered again for the same message.","It is to be noted that group names can also serve as group addresses as mentioned previously. Accordingly, group names are also stored in the group cache as group addresses where the longer form of group addresses, or an alias, was originally used as the group address to initiate the lookup. Server , as with most extant servers , is able to resolve a long form of group address, or alias, to a group name provided this association is stored in the source directory . Accordingly, the server  is used to resolve from long form group addresses, or other aliases, to group names. It is recognized that this function could be fully or partially performed elsewhere. For example, for message addresses in RFC-822 format, the message agent  could extract the local-part of the address (that is, the portion before an @ symbol), and the message agent  could initiate a lookup, using that portion as a group name.","A typical configuration for the system  includes a network , such as a local area network, for communication between the message agent , the message server  and the source directories . As shown in , the message agent  may be connected for communication to the message client  through a network . The network  may, for example, be a carrier-operated data network, such as a cellular network, PCS, or other wireless network or other network incorporating wireless handheld devices (see example embodiment described later below) on which the message client  is operating. In alternative embodiments the client  may be connected to the network  for communication with the message agent .","Each of the message agent  and message server  may be implemented using one or more appropriate software programs implemented on compatible hardware to perform the functions described herein. For example, each of message agent  and message server  may be realized using commercial server computers having Intel\u2122 IA-32-based processors and running an operating system in the Microsoft Windows Server\u2122 family, such as Windows Server 2003.","Referring to , a flowchart of example functions of the client  and the system  are shown. For clarity, a dividing line  in  is used to illustrate an example division of functions between the client  and the system , as will be further described below.","At  the client  receives user instruction to compose a message  to a group. At  the client  receives user instruction to encrypt the message . At  the client  receives user instruction to send the message . At  the client  transmits the message  to the message agent  including an instruction to encrypt the message . In the example embodiments described herein, encryption of message  is performed on the message server  for, on behalf of, or as a service to, the message agent . Many commercially-available message servers  include encryption capabilities and it is most efficient to use such capabilities. It would be possible to perform encryption elsewhere, for example at the message agent  by providing such capabilities at the message agent . Message  depicts elements of an example message format, including parameters defining the encoding, recipient and body of the message . The encoding mentioned by way of example in  is NNE, Notes Native Encryption. Other forms of encryption, including for example conventional public key encryption, conventional private key encryption, and commercially-available encryption technologies such as those available from RSA Data Security, could also be used. Other formats for the message and instructions to encrypt the message could also be used.","At , the system  receives the message and instructions to encrypt the message from the client . At , the system  expands the group name into a list of user names of the group from the source directory . At , the system  looks up a user address for each of the user names through the user data cache  containing mappings of user names to user addresses. At , the system  encrypts the message and transmits it to the associated user address.","Referring to , an operational example illustrates example functions within the system  when operating in accordance with an example embodiment of the flowchart of , where all user names are in the cache . For clarity, dividing lines ,  are used to divide the functions of the message agent , cache  and message server  from left to right. As mentioned previously, the particular division of the functions amongst the message agent  and the server  described herein is an example only. Other allocations of these functions could also be used without departing from the spirit of the present disclosure.","At , message agent  receives message  () to be sent with encryption. Continuing with the example message  used earlier in connection with , message  is addressed to group address XY@EXAMPLE.COM. At , the message agent  looks up the group name using the group address (XY@EXAMPLE.COM) of the message  through the server  from the source directory . At , the server  returns user names A, B, C of the members of group name XY. Where, as in this example, the group address is provided in a two part format then the server  can resolve the group address to a group name. For example, the server  may check that the server  is the appropriate server for the host named in the host name portion of the group address, and may then extract the group name as that portion of the address before the @ symbol. At , the message agent  looks up user name A in the cache . At , the cache  returns message address A@EXAMPLE.COM for user name A. At  user name A is set as a recipient of the message by the message agent . Steps ,  and  are repeated for B at , , , and C at , , . The above description assumes that it is known that XY@EXAMPLE.COM is a group name and that the user names and associated user addresses for A, B and C have been previously populated in the cache .","Referring to , an operational example illustrates example functions within the system  when operating in accordance with an example embodiment of the flowchart of , where the message address is not initially known to be a group address, and the message address is initially missing from the user cache . Those steps that are the same from  are referenced with the same reference numerals, and the description is not repeated. At , the message agent  first looks up the message address as a user address in the cache . Although the address is actually a group address, it is not initially recognized as such by message agent . At , the cache  returns the message address as unresolved because it is stored as an entry for the user address in the cache . In  through , the message agent  then continues to look up the group address as in . At , the cache  returns a failure to find B as an entry in the cache  under the user name B. At , the message agent  looks up B as a user name through the message server . At  the message server  finds the user name B in the directory  and returns B@EXAMPLE.COM as the user address. At , the message agent  instructs the cache  to add an entry in the cache  with B as a user name and B@EXAMPLE.COM as the associated user address. At , the cache  adds B, and associated User Name: B, User Address: B@EXAMPLE.COM to the cache . At  through , user C is looked up in the cache, and the corresponding address is set as an address to which the message will be sent, as in .","The above illustrates how the cache  can be populated. In the embodiment described above, initially the cache  would have been empty and then populated through repeated calls to the server . It has been found that removing individual data entries (user names, user addresses) that have been in the cache  for four hours is acceptable in the environment described further below. For example, if User Name A is added to the cache  at 2 pm and User Name B is added at 3 pm then User Name A would be removed at 6 pm and User Name B would be removed at 7 pm. If desired the cache  could be refreshed in its entirety so as not to require server  look ups; however, this may cause unnecessary network traffic and longer cache  look up times. As another alternative, the cache  could refresh frequently used user addresses. Other cache management or refresh strategies and other cache tenancy times may also be used, depending in part on such factors as, by way of example, how much storage is available for the cache , the rate of messaging transactions, and the rate of changes to the source directory (thereby invalidating the contents of the cache ).","To maximize clarity in the initial description of the operation of an example system , the most straightforward example instances of operation are described. In particular, messages with multiple message addresses or nested message addresses may be encountered, for which additional processing steps may be desirable. Example techniques for handling such messages will be discussed later in this description.","Referring to , an illustrative example of respective operations performed by message agent  and message server  in encrypting messages in accordance with an example embodiment of the flowchart of  is shown. At , the message agent  requests the message server  to encrypt a message . The format of the message  contains the user names A, B, C as recipients and the body \u201ctest\u201d. The format of the message  is similar to the format of the messages  in previous FIGS; although, it is noted that the specific example message addresses have been altered in  to illustrate the concepts of the example embodiment now being discussed. User names found earlier are re-used in the request to the server  to further benefit from the functions described herein; however, the message agent  could resolve the user name again through the server  or the cache  if desired. At , the server  then looks up the respective encryption key LMN, MNL, NLM to be used for each recipient A, B, C and returns separate encrypted messages  for each recipient (one such message  for recipient A being shown in ). At , the message agent  receives the encrypted messages  and requests the server  to transmit messages  (again, one such message  for recipient A being shown in ). At , the server  transmits the messages to the recipients A, B, C. Alternatively, if supported by the server , the server  can at  encrypt and return one message  for all recipients A, B, C and, at , the message agent  can receive the encrypted message  and request the server  to transmit message . At , the server  then transmits the message to the recipients A, B, C.","Referring to  various example user interface displays , , ,  may be displayed on a message client  to a user while the client carries out steps , ,  of . The user interface displays , , ,  depicted in  are of a size and aspect ratio that may be used, for example, on a handheld wireless client . The client  has input devices such as a point and click device and a keyboard (not shown) for entry of text and navigation through menu items. The client  may take other forms, such as a personal computer connected to the Internet through a wired or wireless connection (not shown). Other input devices such as for example a mouse, trackball or tablet (not shown) could also be used. Alternate displays, not shown, may be used as appropriate or desired for the message client , for example, to carry out the functions and provide features described herein.","Referring to , a user addresses a message by entering a group address (XY@EXAMPLE.COM) as a message address into a TO: field  of display . As shown, after the user enters at least a part of a group name recognized by the client , the group name may appear in a drop down box  for selection to enter into the field .","Referring to , a user may enter into display  a particular encoding type selection for entry into an encoding field . Similarly to , the encoding may be selected from a drop down box  for entry into the field . The type of encoding may include encryption, such as for example LOTUS NOTES\u2122 Encryption or other types of encryption mentioned previously.","Referring to , a user may enter into display  a subject of a message into a Subject: field  and a body of a message into a body field .","Referring to , a user may instruct the client  to send the message through a drop down box  overlaid on display .","A further example embodiment of steps of a method is illustrated later below in pseudo code that could be implemented, for example, by incorporating one or more computer programs for operation on the system  in the message agent  to interact with the caches , and the server  to resolve group addresses to members, user names and user addresses in accordance, for example, with the flowchart of . The embodiment sets out two primary function calls based generally on the steps set out in the flowchart in  and the more detailed examples in  that, for groups, first resolve group addresses to members (ResolveGroupMembers) and then resolve the members to user names (ResolveUser).","Additional functionality is provided for message addresses involving additional complexity, such as messages with nested message addresses. For the purposes of this application a message address within a nested level is considered to be a message address as it is equally unresolved at the time processing begins. The nested message address is processed in the same manner as a message address actually entered by a user of the client , such as in field  of . The steps of the embodiment are divided into three portions listed below under the headings Resolving Message Recipients, Resolving Group Members, and Resolving Users.","The Resolving Message Recipients portion calls the other two portions as required to resolve message addresses. The Resolving Message Recipients portion defaults to resolving each message address as a user name by calling ResolveUser first for the message address. Then, if ResolveUser fails, ResolveGroupMembers is called. If a message address is resolved as a user address then a user name is returned for the address, such that the user name can be stored in the cache . It is possible that a user name could later appear as part of a message address containing nested levels or in another message address of the same message or another message, and the user name need not be looked up again from the source directory  while the user name is available in the user cache .","If a message address is resolved as a group address then the group address is resolved to a group name and group members (user names). The group name is stored in the cache . Any distinct group address used to lookup the group name is also stored. The group cache is accessed initially for each message address of a message so that message address resolution is fully attempted only once for any particular message address in the same message, which message includes, for example, a message address with nested levels or multiple message addresses at one level","Further the embodiment can be used to resolve messages including multiple message addresses at a single level by repeatedly calling the ResolveGroupMembers function to step through each message address.","An example of the operation of the system  in accordance with the pseudo code on a message address with a nested group (Group ST, having member Group XY) and multiple message addresses at a single level (having member Group XY and User A) is illustrated in . A message is received at the message agent  with a message address of ST@EXAMPLE.COM at  and the portion Resolving Message Recipients first looks up ST@EXAMPLE.COM as a user in the user cache  using ResolveUser at . In this example, group ST was previously looked up as a user name and not found, so entered as unresolved in the cache . The cache  does a find on ST@EXAMPLE.COM which is found as unresolved (i.e. in the unresolved cache ) because it happens to be a group address that was previously searched. The cache  therefore returns the address as unresolved at . If ST was not found in the cache then ST would be looked up on the mail server  as a user name, returning a not found indication, ST would then be added to the cache  as an unresolved user, and ST would then be looked up as a group on the mail server . Continuing as part of Resolving Message Recipients the embodiment then attempts to resolve the message address ST@EXAMPLE.COM as a group address using ResolveGroupMembers at step . The server  returns the group name ST and members XY, A@EXAMPLE.COM at step .","The embodiment then continues resolving XY, first as a user address and then as a group address at step  per the steps of  described above commencing at step  and terminating at step  of . The embodiment then continues resolving A@EXAMPLE.COM as a user address by first looking up A@EXAMPLE.COM as a user address in cache  at step . The cache  does not find A@EXAMPLE.COM in the cache  and returns A@EXAMPLE.COM as not found at step . Although A was looked up previously in step  and following of , A @EXAMPLE.COM was not. A@EXAMPLE.COM is then looked up as a user name on the server  at step . The server  finds A as a user name for email address A@EXAMPLE.COM and returns A as a user name with associated email address A@EXAMPLE.COM at step . The message agent  instructs the cache  to add A@EXAMPLE.COM with the information User Name A and User Address: A@EXAMPLE.COM to cache  at step . A@EXAMPLE.COM and associated User name: A and User Address: A@EXAMPLE.COM are added to the resolved portion of cache  at step . A's information is now in the cache  twice and can be found by looking up message address A or A@EXAMPLE.COM. The embodiment then recognizes A as an existing recipient and, at step A, A is not again added as a recipient, effectively filtering out the duplicate message address. A can be recognized by the message agent  as an existing recipient because user names are required to be unique on the server , and, as a result, User Name A returned by the server  must be the same as User Name A that was found in the cache  earlier on when resolving the members of XY.","The embodiment defines, example inputs and output, and queries utilized in the function calls. It is to be recognized that the embodiment is an example only. An actual implementation can take many different forms.","In the embodiment, nested groups are permitted up to a certain limit and it is recognized that some groups may be repetitive within the nested levels or a particular message. Accordingly, temporary cache is set up for resolution of groups on a message such that a group name is not attempted to be resolved more than once for each message. The temporary cache is cleared after the groups for a message have been resolved. The functions are recursively called until all the groups of the message have been resolved to user names and to user addresses (to the extent available).",{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003Pseudo Code Begins"},{"entry":"\u2003\u2003Resolving Message Recipients"},{"entry":"\u2003\u2003Input:"},{"entry":"\u2003\u2003messageAddresses - message addresses for the recipients of the"},{"entry":"message as specified by the mail client, e.g. group or user SMTP"},{"entry":"addresses"},{"entry":"\u2003\u2003Output:"},{"entry":"\u2003\u2003resolvedList - list of user names of resolved message addresses"},{"entry":"\u2003\u2003unresolvedList - list of unresolved message addresses"},{"entry":"\u2003\u2003Notes:"},{"entry":"\u2003\u2003groupCache - as described elsewhere in the pseudocode; this cache"},{"entry":"exists within the scope of ResolveMessageAddresses function"},{"entry":"\u2003\u2003ResolveUser - the function as described elsewhere in the pseudocode"},{"entry":"\u2003\u2003ResolveGroupMembers - the function described elsewhere in the"},{"entry":"pseudocode"},{"entry":"\u2003\u2003FUNCTION ResolveMessageRecipients(messageAddresses,"},{"entry":"resolvedList, unresolvedList)"},{"entry":"\u2003\u2003for each address in messageAddresses"},{"entry":"\u2003\u2003\u2003if ResolveUser(address, userName) is successful then"},{"entry":"\u2003\u2003\u2003\u2003add userName to resolvedList"},{"entry":"\u2003\u2003\u2003else if ResolveGroupMembers(address, resolvedList,"},{"entry":"unresolvedList, groupCache, 0) returns false then"},{"entry":"\u2003\u2003\u2003\u2003add address to unresolvedList"},{"entry":"\u2003\u2003\u2003\u2003remove address from messageAddresses"},{"entry":"\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2002end for"},{"entry":"\u2003\u2003end ResolveMessageRecipients"},{"entry":"\u2003\u2003Resolving Group Members"},{"entry":"\u2003\u2003Input:"},{"entry":"\u2003\u2003MessageAddress - Message address to do lookup on to try to resolve"},{"entry":"to a group name and members, e.g. group SMTP address or group name"},{"entry":"\u2003\u2003level - level of recursion (group nesting)"},{"entry":"\u2003\u2003groupCache - a cache 20d containing a map of message addresses"},{"entry":"(including associated group name, if any) and whether or not a lookup was"},{"entry":"performed for the message on the message address (and associated group"},{"entry":"name, if any)"},{"entry":"\u2003\u2003Output:"},{"entry":"\u2003\u2003resolvedList - list of names of resolved for the message group"},{"entry":"members (only contains names of users)"},{"entry":"\u2003\u2003unresolvedList - list of group's members that couldn't be resolved for"},{"entry":"the message (can contain names of users or groups)"},{"entry":"\u2003\u2003groupCache - (as described earlier in the pseudocode)"},{"entry":"\u2003\u2003Return:"},{"entry":"\u2003\u2003false if lookup on messageAddress fails or if level of recursion is too"},{"entry":"high, true otherwise"},{"entry":"\u2003\u2003Notes:"},{"entry":"\u2003\u2003LookupGroup is a query to the message server 5 looking in source"},{"entry":"directory 17; if successful, it returns the group's name (groupName) and"},{"entry":"a list of the group's members (memberList)"},{"entry":"\u2003\u2003ResolveUser is a query to the cache 17, and possibly to the message"},{"entry":"server 5 for looking in source directory 17 (pseudocode algorithm below);"},{"entry":"if successful, it returns the user's user name (userName)"},{"entry":"\u2003\u2003FUNCTION ResolveGroupMembers(MessageAddress, resolvedList,"},{"entry":"unresolvedList, groupCache, level)"},{"entry":"\u2003\u2003\u2003\/\/ check if we've seen messageAddress before"},{"entry":"\u2003\u2003\u2003if messageAddress is in groupCache then"},{"entry":"\u2003\u2003\u2003\u2003if lookup was performed on messageAddress then"},{"entry":"\u2003\u2003\u2003\u2003\u2003return true"},{"entry":"\u2003\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003\u2003remove messageAddress from unresolvedList"},{"entry":"\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003\/\/ check if recursion level is too high"},{"entry":"\u2003\u2003\u2003if level > levelLIMIT then - Note: levelLimit is a configurable"},{"entry":"setting to limit recursion as discussed previously, 4 is used in the as an"},{"entry":"example for levelLIMIT. No limit has been provided to the number of"},{"entry":"direct members of a group. As an example, with a levelLIMIT of 4, if"},{"entry":"Group1 is being resolved, and Group1 has a member Group2 that has a"},{"entry":"member Group3 that has a member Group4 that has a member Group5 that"},{"entry":"has a member Group6, Group2-Group5 are resolved, but Group6 is not."},{"entry":"However, if Group1 has members Group2-Group6 (no nesting) then"},{"entry":"Group6 is resolved."},{"entry":"\u2003\u2003\u2003\u2003add messageAddress to groupCache and set that no lookup was"},{"entry":"performed on it"},{"entry":"\u2003\u2003\u2003\u2003return false"},{"entry":"\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003\/\/ perform lookup on MessageAddress"},{"entry":"\u2003\u2003\u2003add messageAddress to groupCache and set that a lookup has"},{"entry":"been performed"},{"entry":"\u2003\u2003\u2003if LookupGroup(MessageAddress) is not successful then"},{"entry":"\u2003\u2003\u2003\u2003return false"},{"entry":"\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003\/\/ check if we've seen groupName before"},{"entry":"\u2003\u2003\u2003if groupName is different from messageAddress then"},{"entry":"\u2003\u2003\u2003\u2003if groupName is in groupCache then"},{"entry":"\u2003\u2003\u2003\u2003\u2003if lookup was performed on groupName then"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return true"},{"entry":"\u2003\u2003\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003\u2003\u2003remove messageAddress from unresolvedList"},{"entry":"\u2003\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003increment level - Note: the new value of level will be passed to"},{"entry":"subsequent calls to ResolveGroupMembers during the loop to resolve the"},{"entry":"groups direct members."},{"entry":"\u2003\u2003\u2003add groupName to groupCache and set that a lookup has been"},{"entry":"performed"},{"entry":"\u2003\u2003\u2003\/\/ resolve the group's members"},{"entry":"\u2003\u2003\u2003for each member of memberList"},{"entry":"\u2003\u2003\u2003\u2003if ResolveUser(member, userName) is successful then"},{"entry":"\u2003\u2003\u2003\u2003\u2003add userName to resolvedList"},{"entry":"\u2003\u2003\u2003\u2003else if ResolveGroupMembers(member, resolvedList,"},{"entry":"unresolvedList, groupCache, level) returns false then"},{"entry":"\u2003\u2003\u2003\u2003\u2003add member to unresolvedList"},{"entry":"\u2003\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003end for"},{"entry":"\u2003\u2003\u2003return true"},{"entry":"\u2003\u2003end ResolveGroupMembers"},{"entry":"\u2003\u2003Note: Thus at the end of ResolveGroupMembers in the example used"},{"entry":"for FIGS. 4 and 5, groupCache would contain XY@EXAMPLE.COM and"},{"entry":"XY,resolvedList would contain A, B, C and unresolvedLIST would be"},{"entry":"empty. Once the message has been processed (for example, encrypted and"},{"entry":"transmitted to recipients) these lists in the temporary caches are cleared."},{"entry":"\u2003\u2003Resolving Users:"},{"entry":"\u2003\u2003Input:"},{"entry":"\u2003\u2003MessageAddress - message address to do lookup on to try to resolve"},{"entry":"to user name, e.g. user's SMTP address or a \u201cnice\u201d looking name"},{"entry":"e.g. \u201cJohn Doe\u201d. Function may be called after group is resolved to a"},{"entry":"list of members, such members are considered to be message addresses for"},{"entry":"the purposes of this description as members replace the original group"},{"entry":"address."},{"entry":"\u2003\u2003Output:"},{"entry":"\u2003\u2003userName - The name required by the message server in order to"},{"entry":"encrypt the message for this recipient"},{"entry":"\u2003\u2003Return:"},{"entry":"\u2003\u2003True if the user was resolved, false otherwise"},{"entry":"\u2003\u2003Notes:"},{"entry":"\u2003\u2003resolved user cache is a map of lookup messageAddress to"},{"entry":"information about the associated user (e.g. user name, SMTP address, etc)"},{"entry":"obtained from looking up the messageAddress on the message server"},{"entry":"\u2003\u2003LookupInResolvedUserCache is a query to the resolved user cache"},{"entry":"described above; if the messageAddress is found in the cache, it returns"},{"entry":"true as well as the information about the user associated with the key"},{"entry":"\u2003\u2003unresolved user cache is a list of lookup keys that failed to be"},{"entry":"resolved to users by the message server"},{"entry":"\u2003\u2003LookupInUnresolvedUserCache is a query to the unresolved user"},{"entry":"cache described above; if the messageAddress is found in the cache, it"},{"entry":"returns true"},{"entry":"\u2003\u2003LookupUser is a query to the message server to try to obtain"},{"entry":"information about the user associated with the key"},{"entry":"\u2003\u2003FUNCTION ResolveUser(MessageAddress, userName)"},{"entry":"\u2003\u2003\u2003if LookupInResolvedUserCache(MessageAddress) is successful"},{"entry":"then"},{"entry":"\u2003\u2003\u2003\u2003set userName to the resolved user\u2019s user name"},{"entry":"\u2003\u2003\u2003\u2003return true"},{"entry":"\u2003\u2003\u2003else if LookupInUnresolvedUserCache(MessageAddress) is"},{"entry":"successful then"},{"entry":"\u2003\u2003\u2003\u2003return false"},{"entry":"\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003if LookupUser(MessageAddress) is successful then"},{"entry":"\u2003\u2003\u2003\u2003set userName to the return user info"},{"entry":"\u2003\u2003\u2003\u2003add messageAddress and userName to the resolved user cache"},{"entry":"\u2003\u2003\u2003\u2003return true"},{"entry":"\u2003\u2003\u2003end if"},{"entry":"\u2003\u2003\u2003add messageAddress to the unresolved user cache"},{"entry":"\u2003\u2003\u2003return false"},{"entry":"\u2003\u2003end ResolveUser"},{"entry":"\u2003\u2003Pseudo Code Ends"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"A further possible example embodiment of the system  will be further described with reference to system  below. The functions described above can be implemented into the corresponding components of the system  (some of which have been referenced with corresponding reference numerals above) and the description provided above will not be repeated for the corresponding components.","A system  constructed according to aspects of the present invention for providing attachments to e-mail messages transmitted from or composed on a wireless hand-held device (WHHD) is shown generally in high-level schematic form in .  shows an example environment in which embodiments of the invention may be used. It will be appreciated that aspects of the invention may be applied to other environments with or without modifications, which modifications would be within the ken of one of skill in the art.","According to a further aspect of the present application, system  includes facilities in an enterprise network that cooperate with the WHHD to provide group name resolution and encryption for messages. A mail agent also cooperates with the WHHD, responsive to receive instructions from the WHHD to send an encrypted e-mail message to a group email address, including resolution of the group name to user names and encryption of the message for transmission to an email server.","As best seen in , a wireless telecommunications system  providing e-mail service to wireless hand-held devices and constructed according to an example embodiment for resolving group email addresses of encrypted email messages transmitted from or composed on a wireless hand-held device may comprise wireless hand-held device (WHHD) , an enterprise network , and one or more networks  coupling the WHHD to enterprise network . Although only a single WHHD  is shown for simplicity, commercial embodiments contemplate the use of a very large number of WHHDs .","Optionally, a wireless device network interface\/enhancement facility (relay)  may be interposed between networks  and enterprise network . Relay  may provide a number of functions that facilitate and enhance the interface of the enterprise network  and WHHD , including without limitation, tracking the availability of WHHD  for communications, tracking which of several possible networks with which WHHD  may be in communication, managing flow of communications between WHHD  and enterprise network , and ensuring reliable communications between WHHD  and enterprise network . Relay  may be implemented and may function as described in Lewis U.S. Pat. No. 7,010,303, which is incorporated by reference herein. Although an embodiment constructed according to aspects of the present invention might operate successfully without relay , and it is therefore optional, further description of wireless system  will treat relay  as present; one of skill in the art will appreciate that connections to relay  could also be made directly to enterprise network , and some functions of relay  might be performed by elements of enterprise network .","WHHD-to-enterprise networks  may comprise one or more wireless networks and any additional transport networks needed to couple such wireless networks to relay . By way of example but not limitation, networks  may include a first network  which may be a telecommunications-carrier-operated public network, such as a GPRS, UMTS, CDMA, or other similar network of any generation or technology, offering data services to public subscribers or users. Networks  may also include, for example, a wireless network access point  for providing access via, for example, the group of wireless technologies known as WiFi. Other wireless access technologies could also be used. WHHD  preferably includes equipment compatible with at least one of the networks ,  such that one or more wireless data communications links, such as ,  may be established between the WHHD  and corresponding ones of networks , .","As is known in the art, networks  and  may be connected to relay  via one or more transport networks , . Transport networks ,  may be realized using any suitable network technology, including without limitation leased data lines, virtual private networks, the Internet, and the like. For example, carrier networks  may typically (but not necessarily) be connected to relay  via leased lines or other private, dedicated, or non-shared facilities. For another example, WiFi access point  may typically (but not necessarily) be connected to relay  via the public Internet. The transport networks ,  may be connected to relay  via any suitable links , . Relay  may be connected to enterprise network  via any suitable link .","Enterprise network  may, for example, be the internal network of a business or other enterprise, and may provide a variety of network and information services to internal users. Enterprise network  typically includes systems  for furnishing to users enterprise e-mail, personal computing, information storage, and other applications. Enterprise network  could also be the network of an Internet Service Provider (ISP) or an Application Service Provider (ASP), which may similarly provide network and information services to external subscribers. Where the term \u201centerprise\u201d is used herein, unless otherwise specified, it is intended to refer to the e-mail and other applications and services, and the networks, servers, software, facilities and other infrastructure arranged to provide such applications and services, similar to those typically provided to corporate users, whether such applications and services are provided by an organization for internal use, or by a service provider for external use.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 13","FIG. 12","FIG. 13"],"b":["116","117","117","208","210","212","214","208","210","214","208","210","214"]},"User interface  includes appropriate hardware and software for implementing a suitable user interface to enable a user to operate the applications and services provided by the device (in conjunction, where applicable) with external networks and information services. For example, user interface  may include a display and keyboard (see ), and other input and output devices such as a trackball or other pointing device, a speaker, and the like. Other user interface hardware may also be provided. User interface  may also incorporate software or firmware for driving the user interface hardware, and for providing services to applications and services on the device. The software or firmware may be implemented as libraries, routines, procedures, objects, message-based interfaces, or other software constructs for performing user interface tasks, as is known in the art. The software or firmware may execute on controller .","WHHD applications and services suite  may provide a variety of applications and services to the user, in cooperation with user interface . In particular, applications\/services  include at least an e-mail application , and may also include such items as services  and applications  that are not otherwise relevant to the aspects described herein. E-mail application  cooperates with components of the enterprise network  to provide e-mail services. Applications\/services  may take the form of software or firmware and may execute on controller .","Network interface system  provides an interface between applications\/services  and one or more wireless networks , such as carrier network  and WiFi access point  (). Network interface  incorporates hardware and firmware or software for implementing at least the physical link layers and data link layers required for accessing wireless networks . Network interface  may further optionally implement additional layers required for accessing wireless networks , including but not limited to the network layer and the transport layer. Alternatively, such layers may be implemented in elements of applications\/services . The software or firmware may be implemented as libraries, routines, procedures, objects, message-based interfaces, or other software constructs for performing user interface tasks, as is known in the art. The software or firmware may execute on controller .","As best seen in , enterprise network  may include, by way of example but not limitation, a collection of enterprise e-mail and applications systems , some of which may be arranged to provide service to WHHDs such as WHHD . Enterprise systems  may include an enterprise e-mail application server  and an enterprise hand-held services enhancement server , which may include as components a mail agent  and a file delivery server . The mail agent  is connected to a cache . The file delivery server  is shown only as an example of other components that may be included within the enterprise network  and is not specifically utilized in the methods described herein or required for the apparatuses. These elements may be interconnected using any suitable interconnect facility, such as network . Enterprise systems  may further comprise one or more storage facilities, such as disk drives or storage systems, such as system file storage unit , also interconnected via network .","Mail server  may be implemented as any suitable e-mail server capable of transmitting e-mail. For example, mail server  may be implemented as a Microsoft Exchange, a Lotus Notes server, or another SMTP mail transport agent such as Sendmail. In many embodiments, mail server  will also be capable of receiving e-mail messages. Enterprise hand-held services enhancement server  optionally provides an interface between the WHHD  and the mail server . Among several functions of enterprise HH server , when an e-mail message arrives for the user at mail server , enterprise HH server  pushes that e-mail message out to WHHD .","When WHHD  transmits an e-mail message, the mail agent  of enterprise HH server  receives instructions and the contents of the e-mail message from the WHHD , as previously described previously with respect to the system . Mail agent  further responsively calls appropriate API components of the mail server  to perform the functions previously described with respect to the system .","Mail server , enterprise hand-held services enhancement server  and mail agent  may be realized using one or more suitable programmable computer systems running a commercially available operating system. For example, these items may be realized using commercial server computers having Intel\u2122 IA-32-based processors and running an operating system in the Microsoft Windows Server\u2122 family, such as Windows Server 2003. Other computers and operating systems could also be used. Although some of elements , , , and  are depicted as distinct elements and may be realized as such (i.e., using separate server computers), skilled artisans will appreciate that these elements may be refactored or virtualized as necessary to meet expected load. Thus, these elements could also be realized as different processes running on the same computer or on several computers.","As a further example of how the above-described embodiments may be used, the above methods of resolving message addresses, including group addresses and group names of  and , and the related description and methods, can be employed in whole or in part on a system , as realized more particularly for example by system  of . Consider, for example, an environment in which a mail server  of , acting as the message server  (), is implemented using the commercially-available DOMINO mail server software. A user may send an email message in the NOTES Native Encrypted encoding format from wireless handheld device  () acting as the client  of  with one or more group addresses as a recipient. In at least some versions, in order to accept a message to be encrypted, the DOMINO software requires that each user name be expressed in DOMINO canonical format (e.g. \u201cCN=John Doe\/O=Domain\u201d). Groups do not have an address in canonical format. In embodiments such as those described above for offering to a DOMINO mail server (of some versions) a message which is to be encrypted and which includes at least one group as a recipient, each such group is first resolved to user names in DOMINO canonical format. This process may be performed, for example, as generally described in connection with  and , with mail agent  of  acting as the message agent  (), message agent storage  of  acting as the user cache  () and group cache (), mail server  of  acting as the message server , and system file storage units  of  and mail server  cooperating to provide the source directories . However, these functions could be implemented using other architectures without departing from the spirit of the present disclosure.","The cache  can, for example, be set to store the cached data in memory or other storage facilities  of messaging agent  for up to a set amount of time (a default of four hours has been found useful in a commercial embodiment) as mentioned previously for the system . Cached entries can also be removed prior to the expiration time if the cache  has reached its size limit and the cache  needs room for new entries.","Further, as an example, embodiments of the above methods and systems for resolving group names can be implemented utilizing a BLACKBERRY\u2122 environment as provided by Research In Motion Limited of Waterloo, Canada such that, for example, the device  is implemented by a BLACKBERRY smartphone, and the mail agent  may be implemented as part of a server computer in conjunction with BLACKBERRY ENTERPRISE SERVER software product commercially available from Research In Motion Limited.","In a first aspect an embodiment of this application provides a method of transmitting a message addressed to at least one group address associated with a group. The method includes expanding a group address by looking up one or more user names for members of a group associated with the group address from a source directory; looking up an user address for each of the one or more user names from a user cache comprising a snapshot of information from the source directory including user names mapped to user addresses; addressing the message to each looked up user address; and transmitting the message to each looked up user address.","Expanding a group address by looking up one or more user names for members of a group associated with the group address from a source directory may include resolving the group address to a group name, and looking up, from the source directory, one or more user names for members of the group based on the group name.","Transmitting the message to each looked up user address may include requesting a message server to encrypt the message for each looked up user address; receiving an encrypted message associated with each looked up user address from the message server; and transmitting each encrypted message to each looked up user address.","Where the message is to be encrypted, the method may include looking up, from the source directory, encryption keys for encryption associated with each of the one or more user names; and encrypting the message using the looked up encryption keys prior to transmitting the message to each looked up user address.","The method may include checking in a group cache () to see if the group address has already been looked up for the message prior to a) and stopping the method for the group address if the group address has already been looked up for the message; adding an indication to the group cache () when the group address has been looked up for the message; and adding an indication to the user cache when each of the user names has been looked up for the message.","The method may include looking up a user address associated with a user name from the source directory, if the user address associated with the user name is not found in the user cache in looking up an user address for each of the one or more user names from the user cache; and adding the user address associated with the user name to the user cache for future lookups.","The method may be implemented in a message agent (, ).","In a second aspect an embodiment of this application provides a system for resolving addresses of a message. The system includes a source directory comprising a database of group names and associated user names, and user names and associated user addresses, a user cache from the source directory of user names mapped to user addresses, and a message agent configured for looking up one or more user names for members of a group associated with a message address from a source directory, configured for looking up the user addresses for the one or more user names from the user cache, configured for addressing the message to the looked up user addresses, and configured for transmitting the message to the looked up user addresses.","The message agent may be further configured for encryption of the message based on the looked up respective user names prior to transmission of the message to the respective user addresses.","The message agent may be further configured for looking up encryption keys from a source directory  of user names and associated encryption keys, the looking up of encryption keys utilizing the respective looked up user names.","The system may further include a group cache for storing an indication when the group name has been looked up for the message; and the message agent may be configured for checking if the group name has already been looked up for the message prior to lookup up the user names from the source directory for the group name, and if the group name has already been looked up for the message stopping processing of the group name; and wherein the message agent may be further configured for adding the indication when the group name has been looked up for the message.","The message agent may be configured for checking if a user name has already been looked up for the message, and if the user name has already been looked up for the message stopping processing of the user name; and the message agent may be further configured for adding the indication to the user cache when the user name has been looked up for the message.","The message agent may be further configured for if the lookup of a user name in the user cache fails then the user name is looked up in a message server  for use with the message and the information being looked up for the user name is added to the user cache for future lookups.","In a third aspect an embodiment of the present application provides a method in a mobile device of transmitting a message to be encrypted, the message addressed to at least one group address associated with a group. The method includes receiving an instruction to compose a message to a group address; receiving an instruction to encrypt the message; receiving an instruction to send the message to a message agent (, ); and transmitting the message to the message agent with an instruction to encrypt the message, wherein the message is subsequently encrypted and transmitted to each user address associated with members of the group.","The message may be encrypted at the message agent.","In a fourth aspect an embodiment of the present application provides a method of resolving message addresses of a message to be encrypted. The method includes looking up, from a user cache, a user address associated with a message address, and if the lookup returns that the message address is unresolved which indicates that the message address had been previously looked up as a user name in a source directory but was not found, treat the message address as a group address, by: a) looking up, from the source directory, a group name associated with the message address and one or more user names for members of the group associated with the group name; looking up an user address for each of the one or more user names from the user cache; if the user address associated with the user name is not found in the user cache, then looking up the user address associated with the user name from the source directory, and if the user address is returned then adding the user address associated with the user name to the user cache for future lookups; if the user address associated with the user name is not found in the source directory then adding the user name as an unresolved message address in the user cache and treat the user name as a group address, returning to a); and the method further includes b) looking up, from the user cache or the source directory, encryption keys for encryption associated with each of the one or more user names; c) addressing the message to the looked up user addresses and encrypting the message using the looked up encryption keys; and d) transmitting the message to each looked up user address.","According to a fifth aspect an embodiment of this application provides a method of resolving addresses of a message. The method includes looking up, from a source directory, a group name associated with a message address of the message and returning one or more user names associated with the group name; looking up through a cache, comprising a snapshot of information from the source directory comprising of user names mapped to user addresses; and addressing the message to each looked up user address.","The method wherein the message is to be encrypted may include transmitting the message with each looked up user address for encryption based on the respective looked up user names prior to transmission of the message to each respective user addresses.","The method may include requesting transmission of the message to each respectively looked up user address.","The method wherein the message is to be encrypted may include looking up encryption keys from a source directory of user names and associated encryption keys, the looking up of encryption keys utilizing the respective looked up user names.","The method may include checking to see if a group name has already been looked up for the message. The method may include stopping the method for a group name if the group name has already been looked up for the message.","The method may include checking to see if a user name has already been looked up for the message. The method may include stopping the method for a user name if the user name has already been looked up for the message.","The method may include adding an indication of when a group name has been looked up for a message. The method may include adding an indication of when a user name has been looked up for a message.","The method may include repeating the method for additional group names of the message.","The method may include if the lookup of a user name in the cache fails then the user name is looked up from the source directory for use with the message and the information being looked up for the user name is added to the cache for future lookups.","The method may include recursively applying the method to resolve nested group names.","The message may first be transmitted for resolution by a message client.","In a sixth aspect an embodiment of this application provides a system for resolving addresses of a message to be encrypted. The system includes a source directory comprising a database of group names and associated user names, and user names and associated user addresses, a cache from the source directory of user names mapped to user addresses, and a message agent configured for looking up the user names from the source directory for a group name of the message, looking up the user addresses for the user names, and addressing the message to the user addresses.","The system may further include a message agent configured to carry out the various steps of the first aspect. The message agent may be configured for looking up in the source directory through a message server. The message agent may be configured for looking up encryption keys from a source directory through a message server.","In a seventh aspect an embodiment of this application provides a system for resolving addresses of a message to be encrypted. The system includes a message agent, a message server, a cache, and a source directory. The message agent and cache are operatively connected. The message server and source are operatively connected. The message agent and the message server are operatively connected. The message agent is adapted to request the message server to look up user names from the source directory for a group name of the message. The message agent is adapted to look up the user addresses for the user names from the cache and to address the message to the user addresses. The method of any of the above claims wherein the message is first transmitted for resolution by a message client.","In an eighth aspect an embodiment of this application provides a method of resolving addresses of a message to be encrypted, the method comprising the steps of looking up, from a source directory, user names associated with a group name of the message, looking up an user address for each of the looked up user names, looking up encryption keys from a cache of user names and associated encryption keys, the looking up of encryption keys utilizing the respective looked up user names, and addressing the message to the looked up user addresses and encrypting the message using the looked up encryption keys.","Other aspects and further details of the above aspects will be evident from the description provided above and the associated drawing FIGS.","The description of example embodiments of aspects of the application does not limit the implementation thereof to any particular computer programming language or system architecture. The aspects are not limited to any particular operating system, mobile device architecture, or computer programming language. Moreover, although some of the embodiments described below include mobile devices, the aspects are not limited to mobile devices; rather, it may be embodied within a variety of user devices or terminals, including handheld devices, mobile telephones, personal digital assistants (PDAs), personal computers, audio-visual terminals, televisions, and other devices. One skilled in the art will appreciate that messaging applications can be installed on most existing implementations of these user devices and terminals.","One of skill in the art will appreciate that the methods described herein may be used with the apparatuses described herein, but could also be used with other apparatuses without departing from the spirit of the invention. Accordingly, some primary steps are presented in a generalized form that does not rely on the particular apparatuses described herein. It is noted in the description of certain steps and substeps that such steps may be performed by specific elements of the apparatuses; however, the association of steps and apparatuses is done by way of example but not limitation, and it is to be understood that these steps could be performed by other apparatuses. Moreover, the term \u201cstep\u201d is used herein to refer to both the general steps associated with the methods and to more detailed substeps which may be comprised as part of a more general step. Some steps are optional. Optional substeps may be omitted or replaced by other specific method steps that implement or embody the function of the primary step. Although discrete steps are mentioned, it will be understood by one of skill in the art that in some embodiments, the functions defined in the steps may be performed as continuous processes.","The steps or operations described herein are just for example. There may be many variations to these steps or operations without departing from the spirit of the invention. For instance, the steps may be performed in a differing order, or steps may be added, deleted, or modified. Parts of one embodiment may be used in another embodiment without requiring all of the steps of any one embodiment.","The embodiments described herein are exemplary. Thus it will be appreciated that although the embodiments are described in terms of specific technologies, other equivalent technologies could be used to implement systems in keeping with the spirit of the present invention.","Although example implementations of the invention have been depicted and described in detail herein, it will be apparent to those skilled in the relevant art that various modifications, additions, substitutions, and the like can be made without departing from the spirit of the invention and these are therefore considered to be within the scope of the invention as defined in the following claims.","The present invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Certain adaptations and modifications of the invention will be obvious to those skilled in the art. Therefore, the above discussed embodiments are considered to be illustrative and not restrictive, the scope of the invention being indicated by the appended claims rather than the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Reference will now be made, by way of example, to the accompanying drawings which show example embodiments of the present invention, and in which:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 4","FIG. 1","FIG. 3"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 5","FIG. 1","FIG. 3"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 6","FIG. 1","FIG. 3"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIGS. 7-10","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 11","FIG. 1","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 13","FIG. 12"]}]},"DETDESC":[{},{}]}
