---
title: Computer-implemented image acquistion system
abstract: An image acquisition system has a computer and one or more imaging devices coupled thereto. Each imaging device has a device memory and is capable of capturing and storing a digital image in its memory. An image device manager is implemented in software on the computer to control imaging device operation. The image device manager presents a user interface (UI) within the familiar graphical windowing environment. The UI has a context space to a particular imaging context (e.g., scanning, photography, and video). The UI also has a persistently-visible imaging menu positioned within the context space that lists options particular to the imaging context. The image acquisition system also includes a set of application program interfaces (APIs) that enable applications to manage loading and unloading of imaging devices, monitor device events, query device information properties, create device objects, capture images using the devices, and store or manipulate the captured images.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07640514&OS=07640514&RS=07640514
owner: Microsoft Corporation
number: 07640514
owner_city: Redmond
owner_country: US
publication_date: 20041117
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation of U.S. patent application Ser. No. 10\/086,927, filed on Oct. 19, 2001 now U.S. Pat. No. 6,912,693, entitled \u201cComputer-Implemented Image Acquisition System\u201d, listing Franc J. Camara, Rick Turner, Mark Enstrom, Reed Bement and Shaun Ivory as inventors, which is a divisional of U.S. patent application Ser. No. 09\/153,432, filed on Sep. 14, 1998, now U.S. Pat. No. 6,373,507, having common title and inventorship and each assigned to the same assignee as the present application, which patent is hereby incorporated herein by reference. This application is also related to U.S. patent application Ser. No. 10\/087,257, filed on Oct. 19, 2001, now U.S. Pat. No. 6,889,364, having common title and inventorship, which is also a divisional of U.S. patent application Ser. No. 09\/153,432, filed on Sep. 14, 1998, which is now U.S. Pat. No. 6,373,507, and is also related to U.S. patent application Ser. No. 10\/990,150, filed on Nov. 16, 2004, now U.S. Pat. No. 7,263,665, which is a continuation of U.S. patent application Ser. No. 10\/086,927 filed on Oct. 19, 2001, now U.S. Pat. No. 6,912,693, and to U.S. patent application Ser. No. 10\/087,257, filed on Oct. 19, 2001, now U.S. Pat. No. 6,889,364, which is a continuation of U.S. patent application Ser. No. 09\/153,432 filed on Sep. 14, 1998, now U.S. Pat. No. 6,373,507.","This invention relates to computer-implemented systems for managing imaging devices, such as digital cameras, scanners, and the like. This invention also relates to graphical window user interfaces, and particularly to user interfaces used to facilitate capture and storage management of digital images. This invention further relates to operating systems and browsers that incorporate image device managers and user interfaces.","Digital imaging devices, such as scanners, cameras, video cameras, have been experiencing rapid growth in popularity as their price tags continue to decrease. Recreational photographers enjoy capturing pictures and videos and placing the digital files onto their computers for printing or emailing to friends and relatives. Businesses use scanners to digitally record documents used in day-to-day operation for archival purposes.","Other solutions to this problem already exist. For example, TWAIN and ISIS are two image acquisition systems that are available today. However, both of these solutions have problems. TWAIN lacks robustness and interoperability. ISIS is a proprietary design that renders it difficult to use with other applications.","Accordingly, a task set before the inventor was to create an image acquisition system that was based on an open architecture model and could be integrated with existing applications and operating systems to provide a convenient environment for the user.","This invention concerns an image acquisition system that offers an open architecture to integration with existing operating systems and other applications.","In an exemplary implementation, the image acquisition system is implemented on computer, such as a desktop personal computer, having a processing unit, memory, and operating system. One or more imaging devices are coupled to the computer. Examples of the imaging devices include a scanner, a digital camera, a digital video camera, and so forth. Some imaging devices, such as digital cameras, have a device memory and are capable of capturing a digital image and storing the image on its memory. Other imaging devices, such as scanners, may not have their own device memory.","The image acquisition system further includes an image device manager that is implemented in software on the computer to control operation of the imaging devices. The image acquisition system presents a user interface (UI) within the familiar graphical windowing environment. The UI presents a graphical window having a context space that pertains to a particular imaging context (e.g., scanning, photography, and video). In the camera context, the context space presents image files stored on the camera memory and\/or on the computer memory. In the scanner context, the context space includes a preview scan area that reveals a preview of the image in the scanner. In the video context, the context space presents video clips stored on the computer memory, but logically represented as belonging to the video camera.","The UI also has a persistently visible imaging menu positioned within the context space that lists options particular to an imaging context. For example, if the context space pertains to the camera context, the menu lists options to take a picture, store a captured image on the computer, send the image in an email, and so on. In the scanner context, the menu lists options to select an image type, preview an image, send the image to a particular destination, and scan the image.","The image acquisition system also includes a set of application program interfaces (APIs) that expose image management functionality to applications. The APIs enable applications to manage loading and unloading of imaging devices, monitor device events, query device information properties, create device objects, capture images using the devices, and store or manipulate the images after their capture.","This invention concerns a computer-implemented image acquisition system that manages imaging devices (such as digital cameras, scanners, digital video cameras, and the like) and the images captured by them. In a preferred implementation, the image acquisition system is implemented in a general-purpose computer (e.g., personal computer, laptop, etc.) to manage imaging devices attached locally to the computer or coupled remotely via a network. The image acquisition system supports a graphical user interface windowing environment that integrates image device management with the same look and feel of familiar browsing user interfaces for conventional file systems. In this manner, a user encounters a familiar experience when managing the imaging devices and image files from his\/her computer.","Exemplary System Architecture",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["20","22","24","30","22","22","40","42","44","46","48","50","52","46","40","52","50"]},"The imaging devices - are coupled to the computer via a serial connection to the USB . Illustrated examples of the imaging devices include a scanner , a video camera , and a digital camera . However, other imaging devices (e.g., copiers, facsimile machines, etc.) may also be used in conjunction with aspects of this invention, as represented by the generic imaging device . Some of the imaging devices have their own memory, as represented by memory  in imaging device . For example, the digital camera may have its own memory, whereas the scanner typically does not have a memory.","The image acquisition system  includes an image device manager , which is implemented as a software component stored on a computer-readable medium of the computer . More particularly, the image device manager  is stored in program memory  and runs on processing unit  during execution. The image device manager  may be integrated into the operating system  (as shown), executed as a set of services, or implemented as a separate self-contained program.","The image acquisition system  also has a user interface , which is preferably a graphical user interface that presents a graphical window having a context space pertaining to the imaging context. Depending upon the particular context, the context space may list available imaging devices for which device drivers have been loaded onto the computer, or list digital image files captured by one or more of the imaging devices, or show an image being scanned in by the scanner.","The user interface  further presents a persistently visible imaging menu positioned within the context space. The imaging menu lists options that are particular to controlling the various imaging devices. For instance, when the context space pertains to the camera context, the menu lists a \u201cTake Picture\u201d option that is specific to operating the digital camera . Upon user selection of \u201cTake Picture\u201d, the image device manager  directs the digital camera  to record the current image obtained through the camera lens. In the scanner context, the menu lists a \u201cScan\/Open\u201d option that is particular to operating the scanner. Upon selection of this option, the image device manager  directs the scanner to scan the current image.","The image device manager  has an image device driver  and a set of APIs (application program interfaces) . The image device driver  controls operation of the imaging device in response to selected options in the context-specific menu. The driver  is the code that facilitates communication with the imaging device over the USB  and passes commands to capture an image, to read image files from the device's local memory, to obtain the device's properties, and so forth.","The APIs  define a set of interfaces that can be used to access the functionality of the image device manager . These APIs are described below in a section entitled \u201cImage Acquisition API\u201d.","Exemplary Software Architecture",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["70","70","72","50"]},"At the user level, a device driver  is loaded for the particular imaging device connected to the computer. The device driver  includes a device object, an optional UI, and optional image processing capabilities. An image device manager object  is called to initialize and select an image device, and create the device interface. The image device manager object  performs such tasks as instantiating a device driver object , determining the device status, monitoring events from the device, and so forth.","A COM (component object model) layer  exposes the device driver object  and image device manager object  to an upper level application . The application layer  represents both traditional TWAIN based applications that utilize a TWAIN compatibility layer , as well as new applications that support the APIs . Unlike the traditional TWAIN model, however, the TWAIN compatibility layer  interacts with the COM-based objects  and  rather than TWAIN-based devices.","Image Acquisition User Interface","The image acquisition system may be incorporated into the operating system, exist as a set of services, or be run as a separate, self-contained application. For discussion purposes, the image acquisition system is described as being integrated into an operating system that supports a graphical user interface windowing environment.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["100","48","100","100"]},"Of interest to the image acquisition system is the integration and treatment of the imaging devices as a folder  organized with the other general computer components. This provides a convenient starting point for the user to access the imaging devices - that are coupled to the computer .","When the user activates the \u201cImaging Devices\u201d folder icon  for the first time, an installation Wizard comes up to guide the user through the installation of an imaging device. Suppose, for example, the user has installed two scanning devices and a digital camera. Activating the \u201cImaging Devices\u201d icon  navigates to a new \u201cImaging Devices\u201d window.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":["110","48","110","112","114","116","118","112"]},"The \u201cImaging Devices\u201d window  distinguishes between devices that are currently available and those that are not available (e.g., offline, physically removed, etc.). Devices that are not available are dimmed and the user has the option of uninstalling them. In , the second scanner identified as \u201cJake's Scanner\u201d is not available and hence the icon  is dimmed.","Activating one of the imaging devices listed in window  causes the image acquisition system to present different windows exhibiting contexts that are specific to the selected imaging device. Within these device-oriented windows, the image acquisition system presents context-specific menus that contain items or options pertinent and relevant to the particular imaging device.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 5","FIG. 4"],"b":["120","114","120","122","122","124","126","120"]},"The context-specific menu  is always visible in the scanner window . The menu  offers options that are tailored to operating the scanner attached to the computer or remotely coupled to the computer via a network. While some of the options may be included in a context menu (i.e., a menu that appears near the pointer following a right mouse click), the persistently-visible menu  lists operating specific options tailored to the scanner that are not included elsewhere in the user interface.","The menu  includes an image type selection  that has a pull-down list of various image types from which a user may select. A non-exhaustive list of image types includes color photograph, black and white photograph, color line art, black and white line art, and text. The image types included in the pull-down list  are specific to the device. Some imaging devices may not provide support for a given format and hence the format is omitted in that particular list.","A destination selection  has a pull-down list of various choices on what to do with the scanned image. For instance, the list  might include using the image in an application, faxing the image, printing the image, copying the image to a clipboard, and saving the image in a file. The destination selection simplifies the output operation for the user. For example, selection of a choice directly affects the acquisition parameters and image quality without requiring the user to know what parameters to set.","The persistently-visible context-specific menu  also has a \u201cNew Preview\u201d command  that directs scanners to create a preview image of an image that is currently in the scanning bed. The image is presented in the preview scan space . When the image appears in the scan space , a preview control  is provided to allow the user to select a region of the image for a final scan. In the illustrated implementation, the control  is shown as a dashed rectangular box framing the picture. The user can manipulate the box  to capture all or less than all of the image. Upon selection of the region, the control can proportionally resize the image to reflect the size of the scanner bed and automatically configure the scanner to make the appropriate adjustments to capture the selected image portion.","The menu  includes a \u201cScan\/Open\u201d command  to direct the scanner to capture the image. When this command is selected, the scanner scans the image in its bed. Concurrently with this scanning action, the image progressively appears in the preview scan space  to visually convey that the scanner is scanning the image. In one implementation, the image is progressively displayed row-by-row from top to bottom of the image.","The menu  includes a \u201cSave\u201d option , which directs the scanner to capture the image as a file and store the file in the computer memory. The last listed option is a \u201cSend to\u201d option , which allows the user to send the image to various locations (or applications) on the PC, such as for packaging in a facsimile or email.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 6","FIG. 4"],"b":["150","116","150","152","152","154","156","150"]},"The context-specific menu  is always visible in the camera window  and offers options that are tailored to operating the digital camera  attached to the computer. While some of the options may be included in a context menu (i.e., a menu that appears near the pointer following a right mouse click), the persistently-visible menu  lists operating specific options tailored to the camera that are not included elsewhere in the user interface.","The menu  is illustrated as having two tabs: a pictures tab  and a camera tab . Table 1 contains the options and corresponding functions available on the pictures tab .",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Option","Function"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Open","Opens a picture with a default"]},{"entry":[{},"registered application."]},{"entry":["Save in \u201cMy Pictures\u201d folder","Downloads the images from the"]},{"entry":[{},"camera and copies them to \u201cMy"]},{"entry":[{},"Pictures\u201d directory on computer"]},{"entry":[{},"memory."]},{"entry":["Zoom","Changes the window view and allows"]},{"entry":[{},"the user to select one picture at a time"]},{"entry":[{},"and zoom in\/out of the picture once it"]},{"entry":[{},"is copied locally."]},{"entry":["Send to","Allows the user to send the picture to"]},{"entry":[{},"various locations (or applications) on"]},{"entry":[{},"the PC. For example, the user may"]},{"entry":[{},"choose to \u201csend\u201d the picture to an"]},{"entry":[{},"\u201cemail recipient\u201d."]},{"entry":["Lock on Camera","Allows the user to lock a picture to"]},{"entry":[{},"prevent accidental deletion."]},{"entry":["Delete from Camera","Allows the user to permanently"]},{"entry":[{},"remove the picture from the camera"]},{"entry":[{},"after a confirmation."]},{"entry":["Rotate to the Right","Allows the user to rotate the picture 90"]},{"entry":[{},"degrees to the right."]},{"entry":["Rotate to the Left","Allows the user to rotate the picture 90"]},{"entry":[{},"degrees to the left."]},{"entry":["View Properties","Allows the user to view properties"]},{"entry":[{},"associated with the selected picture(s)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 2 contains the options and corresponding functions available on the camera tab .",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Option","Function"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Take Picture","Triggers the camera to take a picture."]},{"entry":["Copy all Pictures","Copies all the pictures to designated"]},{"entry":[{},"location on the PC."]},{"entry":["Remove all Pictures","Deletes all pictures in the camera."]},{"entry":["Share","Brings up a wizard for the local user to"]},{"entry":[{},"share the camera."]},{"entry":["Initialize Memory Card","Enables user to initialize the storage"]},{"entry":[{},"card in the camera."]},{"entry":["View Properties","Allows the user to view a summary of"]},{"entry":[{},"the camera properties."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The file space  lists files and\/or folders that pertain to digital images taken by the digital camera. The files are the images themselves (e.g., JPG files) and the folders contain image files and\/or other folders with image files in them.","The file space  presents the files that are currently stored on the camera. In this manner, the user can easily view the camera memory as if it were another memory of the computer. The UI allows easy integration of the camera control into the familiar windowing environment.","To add a picture to the file space, the user captures a picture using the \u201cTake Picture\u201d command in the camera menu . The picture then appears as a file in the file space . The user can then select the image file by clicking on the file and manipulating the picture using the commands on the pictures menu , such as \u201cRotate to the Left\u201d, \u201cRotate to the Right\u201d, \u201cZoom\u201d, and \u201cSend to\u201d. The user can also save the image file to the computer memory using the command \u201cSave in My Pictures folder\u201d.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 7","FIG. 4","FIG. 6"],"b":["170","170","116","150","172","174","176","176","178","26"]},"Notice also that one of the files in the file space  is a play-in-place video file . This play-in-place video file  can be actuated to play a video clip or stream within the small area depicted as box . That is, the static video icon in box  is replaced with a streaming video at the same location in the file space. Play-in-place video files  were first introduced in Media Manager, a multimedia application available from Microsoft.","Table 3 contains the options and corresponding functions available on the video tab .",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Option","Function"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Play","Plays back a video stream from the"]},{"entry":[{},{},"video camera."]},{"entry":[{},"Open","Opens a video file with a default"]},{"entry":[{},{},"application."]},{"entry":[{},"Capture Frame","Directs the video camera to record a"]},{"entry":[{},{},"single still-image frame."]},{"entry":[{},"Capture Video","Directs the video camera to record a"]},{"entry":[{},{},"video clip."]},{"entry":[{},"View Properties","Allows the user to view a summary of"]},{"entry":[{},{},"the video camera properties."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Other commands may be added to the menu. For instance, a \u201cstop\u201d command may be employed to halt the capture of live video.","Image Acquisition API","The image acquisition API  enables applications to manage loading and unloading of all imaging devices, monitor device events, query device information properties, create device objects, capture images using the devices, and store or manipulate the images after their capture.","The interfaces are accessible by high level languages (e.g., Visual Basic) as well as lower level ones (e.g., C, C++, etc.). COM is a suitable interface. In this context, each device is exposed as a COM object, whereby the object provides a number of methods and properties associated with the imaging device.","As one exemplary implementation, there are three general objects: a device manager object, a camera object, and a scanner object. The objects are described generally below. A more detailed description of the objects and methods are provided at the end of this section.","The device object contains device context and status information for a physical device. Once a device object is created for a physical device, the physical device controls what device properties are available and what values the properties may assume. There may be multiple device objects created for any physical device. However, a device object has exclusive access to a physical device before any operation (i.e., scan, take a picture, etc.) is performed. Exclusive access to a physical device is made available through a locking\/unlocking mechanism.","The device manager is implemented as three objects that perform the following functions:","A CImageInDevMgr object is used to:\n\n","A CEnumImageInDevInfo object is used to:\n\n","A CImageInDevInfo object is used to:\n\n","The camera object may expose the following functions:\n\n","The scanner object may expose the following functions:\n\n","ImageIn Device Manager","The ImageIn device manager provides interfaces for enumerating devices, querying properties of installed ImageIn devices and creating ImageIn device objects. The device manager has three objects.","CImageInDevMgr is used to:\n\n","CEnumImageInDevInfo is used to:\n\n","CImageInDevInfo is used to:\n\n","Device information properties are distinct from normal device properties in that they are read from the registry and can be queried without forcing the device object to be created.","A program using its own methods to select an ImageIn device would do the following:\n\n","IImageInDevMgr Interface","EnumImageInDevInfo",{"@attributes":{"id":"p-0081","num":"0106"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IImageInDevMgr::EnumImageInDevInfo("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"IEnumIMAGEIN_DEV_INFO**","ppIEnum);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"EnumImageInDevInfo creates a standard enumerator for CImageInDevInfo objects. The enumerator itself is a CEnumImageInDevInfo object that has a single interface IEnumIMAGEIN_DEV_INFO. Applications can use this API to obtain device information properties from available ImageIn devices.","Parameters:",{"@attributes":{"id":"p-0084","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["lFlags","Specifies the type of device to enumerate."]},{"entry":["ppIEnum","Enumeration interface for CEnumImageInDevInfo objects."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"GetImageInDevInfo",{"@attributes":{"id":"p-0086","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IImageInDevMgr::GetImageInDevInfo("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BSTR","bstrDeviceID,"]},{"entry":[{},"IPropertyStorage**","ppIPropStg);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Given a device ID GetImageInDevInfo returns an IPropertyStorage interface to CImageInDevInfo objects. This API gives applications a quick way to retrieve device information properties from a stored device ID.","Parameters:",{"@attributes":{"id":"p-0089","num":"0114"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["bstrDeviceID,","Device ID string returned from device info object."]},{"entry":["ppIPropStg","IPropertyStorage interface to CImageInDevInfo objects."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"CreateImageInDev",{"@attributes":{"id":"p-0091","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IImageInDevMgr::CreateImageInDev("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BSTR","bstrDeviceID,"]},{"entry":[{},"IUnknown**","ppDevice);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"CreateImageInDev creates a device object identified by bstrDeviceID and returns an IUnknown interface to the object. The application can use QueryInterface on this IUnknown to access the other interfaces on a device.","Parameters:",{"@attributes":{"id":"p-0094","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"bstrDeviceID","Device ID string returned from device info object."]},{"entry":[{},"ppDevice","IUnknown interface pointer returned."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"SelectImageInDev",{"@attributes":{"id":"p-0096","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IImageInDevMgr::SelectImageInDev("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"IUnknown**","ppDevice);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"SelectImageInDev displays UI for the selection of ImageIn devices. When the user selects a device, the device object is created and an IUnknown interface is returned. The application can then use QueryInterface on this IUnknown to access the other interfaces on a device. Returns S_FALSE if the user cancels the selection dialog without making a device selection, S_OK if the user makes a device selection or an error value if the method fails.","Parameters:",{"@attributes":{"id":"p-0099","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lFlags","Operation flags"]},{"entry":[{},"ppDevice","IUnknown interface pointer returned"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"GetImage",{"@attributes":{"id":"p-0101","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IImageInDevMgr::GetImage("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"LONG","lIntent,"]},{"entry":[{},"LONG","cfFormat,"]},{"entry":[{},"STGMEDIUM*","pMedium);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"GetImage displays device selection UI allowing a user to select a device. If the user selects a device, a device is created and device UI is displayed to capture the image. Image data is returned in the pMedium structure. Image format and default image capture properties may be specified using the lIntent and cfFormat parameters. Returns S_FALSE if the user cancels the selection dialog without making a device selection, S_OK if the user makes a device selection and the data is transferred or an error value if the method fails.","Parameters:",{"@attributes":{"id":"p-0104","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lFlags","Operation flags"]},{"entry":[{},"lIntent","Intent, default image capture properties"]},{"entry":[{},"cfFormat","Clipboard format desired by application"]},{"entry":[{},"pMedium","Image is returned through this medium."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"EnumDestinationInfo",{"@attributes":{"id":"p-0106","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IImageInDevMgr::EnumDestinationInfo("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"IUnknown*","pDevice,"]},{"entry":[{},"IEnumIMAGEIN_DEST_INFO**","ppIEnum);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"EnumImageInDestInfo creates a standard enumerator for CImageInDestInfo objects. The enumerator itself is a CEnumImageInDestInfo object that has a single interface IEnumIMAGEIN_DEST_INFO. Applications can use this API to obtain device destination properties from an ImageIn device. Destination applications are registered using RegisterDestinationApplication.","Parameters:",{"@attributes":{"id":"p-0109","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["lFlags","Enumeration flags."]},{"entry":["pDevice","Device object. If null destination applications for all devices"]},{"entry":[{},"are enumerated."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"ppIEnum Enumeration interface for CEnumImageInDestInfo objects.","RegisterDestinationApplication",{"@attributes":{"id":"p-0112","num":"0137"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IImageInDevMgr::RegisterDestinationApplication("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"LONG","lIntent,"]},{"entry":[{},"IUnknown*","pDevice,"]},{"entry":[{},"BSTR","bstrEvent,"]},{"entry":[{},"BSTR","bstrAppName,"]},{"entry":[{},"BSTR","bstrCommandLine);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"This method is called when an application wishes to register as an ImageIn destination.","Parameters:",{"@attributes":{"id":"p-0115","num":"0140"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lFlags","Registration flags."]},{"entry":[{},"lIntent","Intent, default image capture properties."]},{"entry":[{},"pDevice","Device object. If null, destination appli-"]},{"entry":[{},{},"cation is registered for all devices."]},{"entry":[{},"bstrEvent","Optional event name."]},{"entry":[{},"bstrAppName","Friendly name of Application. This name"]},{"entry":[{},{},"will be displayed to the user in UI."]},{"entry":[{},"bstrCommandLine","Full path to the executable for this"]},{"entry":[{},{},"application. Additional command line"]},{"entry":[{},{},"arguments may be added to this command."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"UnregisterDestinationApplication",{"@attributes":{"id":"p-0117","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESTUL IImageInDevMgr::UnregisterDestinationApplication"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"IUnknown*","pDevice,"]},{"entry":[{},"BSTR","bstrAppName);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"This method is called when an application that has registered an ImageIn destination wishes to be uninstalled or no longer known as an ImageIn destination.","Parameters:",{"@attributes":{"id":"p-0120","num":"0145"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lFlags","Operation flags."]},{"entry":[{},"pDevice","Device object. If null, destination application is"]},{"entry":[{},{},"unregistered for all devices."]},{"entry":[{},"bstrAppName","Friendly name of Application, used to register"]},{"entry":[{},{},"application."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"IEnumIMAGEIN_DEV_INFO Interface","The IEnumIMAGEIN_DEV_INFO interface is a standard OLE enumeration interface that supports per device enumeration of device information properties.","Next",{"@attributes":{"id":"p-0124","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IEnumIMAGEIN_DEV_INFO::Next("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ULONG","celt,"]},{"entry":[{},"IPropertyStorage**","rgelt,"]},{"entry":[{},"ULONG","*pceltFetched);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Next returns an array of IPropertyStorage interfaces to CImageInDevInfo objects. Applications can use the returned of IPropertyStorage interfaces to obtain device information properties from available ImageIn devices.","Parameters:",{"@attributes":{"id":"p-0127","num":"0152"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["celt","Specifies the number of elements requested."]},{"entry":["rgelt","Address of an array in which to return the IPropertyStorage"]},{"entry":[{},"interfaces."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"pceltFetched Address of a value that receives a count of the item identifiers actually returned in rgelt.","Skip",{"@attributes":{"id":"p-0130","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT IEnumIMAGEIN_DEV_INFO::Skip(ULONG celt);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Skip skips device objects in the enumeration.","Parameters:","celt Number of items to skip.","Reset",{"@attributes":{"id":"p-0135","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT IEnumIMAGEIN_DEV_INFO::Reset(void);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Reset sets the enumeration back to the first device.","Clone",{"@attributes":{"id":"p-0138","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IEnumIMAGEIN_DEV_INFO::Clone("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IEnumIMAGEIN_DEV_INFO **ppIEnum);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Clone creates another IEnumIMAGEIN_DEV_INFO enumeration object and returns an interface pointer to it.","Parameters:",{"@attributes":{"id":"p-0141","num":"0166"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ppIEnum","Address that receives a pointer to the new enumeration"]},{"entry":[{},"object."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"IEnumIMAGEIN_DEST_INFO Interface","The IEnumIMAGEIN_DEST_INFO interface is a standard OLE enumeration interface that supports enumeration of device destination properties.","Next",{"@attributes":{"id":"p-0145","num":"0170"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IEnumIMAGEIN_DEST_INFO::Next("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ULONG","celt,"]},{"entry":[{},"IPropertyStorage**","rgelt,"]},{"entry":[{},"ULONG","*pceltFetched);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Next returns an array of IPropertyStorage interfaces to CImageInDestInfo objects. Applications can use the returned of IPropertyStorage interfaces to obtain destination information properties from available ImageIn devices.","Parameters:",{"@attributes":{"id":"p-0148","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["celt","Specifies the number of elements requested."]},{"entry":["rgelt","Address of an array in which to return the IPropertyStorage"]},{"entry":[{},"interfaces."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"pceltFetched Address of a value that receives a count of the item identifiers actually returned in rgelt.","Skip",{"@attributes":{"id":"p-0151","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT IEnumIMAGEIN_DEST_INFO::Skip(ULONG celt);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Skip skips destination objects in the enumeration.","Parameters:","celt Number of items to skip.","Reset",{"@attributes":{"id":"p-0156","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT IEnumIMAGEIN_DEST_INFO::Reset(void);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Reset sets the enumeration back to the first device.","Clone",{"@attributes":{"id":"p-0159","num":"0184"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT IEnumIMAGEIN_DEST_INFO::Clone("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IEnumIMAGEIN_DEST_INFO **ppIEnum);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Clone creates another IEnumIMAGEIN_DEST_INFO enumeration object and returns an interface pointer to it.","Parameters:",{"@attributes":{"id":"p-0162","num":"0187"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ppIEnum","Address that receives a pointer to the new enumeration"]},{"entry":[{},"object."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"IPropertyStorage Interface","The IPropertyStorage interface is used to query the device information and destination properties. IPropertyStorage is a standard OLE interface and is documented in the OLE Programmers Reference. All device information properties are read only. Any attempt to modify the device information properties will result in a failure with access denied. The methods of this interface are:",{"@attributes":{"id":"p-0165","num":"0190"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"HRESULT\u2003ReadMultiple(ULONG,\u2003const PROPSPEC, PROPVARIANT);"},{"entry":"HRESULT\u2003WriteMultiple(ULONG,\u2003const PROPSPEC, PROPVARIANT,"},{"entry":"PROPID);"},{"entry":"HRESULT\u2003DeleteMultiple(ULONG,\u2003const PROPSPEC);"},{"entry":"HRESULT\u2003ReadPropertyNames(ULONG,\u2003const PROPID, LPOLESTR);"},{"entry":"HRESULT\u2003WritePropertyNames(ULONG,\u2003const PROPID, LPOLESTR);"},{"entry":"HRESULT\u2003DeletePropertyNames(ULONG,\u2003const PROPID);"},{"entry":"HRESULT\u2003Commit(DWORD);"},{"entry":"HRESULT\u2003Revert(void);"},{"entry":"HRESULT\u2003Enum(IEnumSTATPROPSTG**);"},{"entry":"HRESULT SetTimes(FILETIME const *, FILETIME const *, FILETIME"},{"entry":"const *);"},{"entry":"HRESULT SetClass(REFCLSID);"},{"entry":"HRESULT Stat(STATPROPSETSTG *);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Device Information Properties","All ImageIn devices support the following basic device information properties:\n\n","ImageIn Scanner Device Object","ImageIn device objects support interfaces for querying and setting device properties, displaying device UI and transferring data. ImageIn devices are required to support a small number of standard interfaces that allow applications to deal with all devices in a common manner and transfer data from the devices in a manner that is native to the (COM) application. Device objects may also support more specialized interfaces to implement custom functions. Since the application has a direct connection to the device object, this architecture does not place any strict limits on the interfaces a device object can export. Practically speaking though, applications must know about an interface for it to be useful.","IScan Interface","ScanDlg",{"@attributes":{"id":"p-0172","num":"0207"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT ScanDlg("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"LONG","lIntent);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"ScanDlg presents the system or device UI needed to prepare a device for scanning. If the dialog successfully completes, the scan object will be ready to begin data transfer via the IDataObject or IimageTransfer interfaces. The default image capture properties may be specified using the optional lIntent parameter. Returns S_FALSE if the user cancels the selection dialog without making a device selection, S_OK if the user makes a device selection or an error value if the method fails.","Parameters:",{"@attributes":{"id":"p-0175","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lFlags","Operation flags"]},{"entry":[{},"lIntent","Intent, default image capture properties"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"IPropertyStorage Interface","The standard IPropertyStorage interface is used to query and set all scan device properties. IPropertyStorage is a standard OLE interface and is documented in the OLE Programmers Reference. The methods of this interface are:",{"@attributes":{"id":"p-0178","num":"0213"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"HRESULT\u2003ReadMultiple(ULONG,\u2003const PROPSPEC, PROPVARIANT);"},{"entry":"HRESULT\u2003WriteMultiple(ULONG,\u2003const PROPSPEC, PROPVARIANT,"},{"entry":"PROPID);"},{"entry":"HRESULT\u2003DeleteMultiple(ULONG,\u2003const PROPSPEC);"},{"entry":"HRESULT\u2003ReadPropertyNames(ULONG,\u2003const PROPID, LPOLESTR);"},{"entry":"HRESULT\u2003WritePropertyNames(ULONG,\u2003const PROPID, LPOLESTR);"},{"entry":"HRESULT\u2003DeletePropertyNames(ULONG,\u2003const PROPID);"},{"entry":"HRESULT\u2003Commit(DWORD);"},{"entry":"HRESULT\u2003Revert(void);"},{"entry":"HRESULT\u2003Enum(IEnumSTATPROPSTG**);"},{"entry":"HRESULT SetTimes(FILETIME const *, FILETIME const *, FILETIME"},{"entry":"const *);"},{"entry":"HRESULT SetClass(REFCLSID);"},{"entry":"HRESULT Stat(STATPROPSETSTG *);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"All ImageIn scanner devices support the following basic device properties:\n\n","ImageIn scan devices may support additional device properties depending on hardware configuration.","IDevPropStream Interface","The IDevPropStream interface is used to query\/set all current device properties from\/to a named, non-volatile, registry based storage. The methods of this interface are:","ReadDevPropStream",{"@attributes":{"id":"p-0184","num":"0227"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT ReadDevPropStream(BSTR bstrName);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"ReadDevPropStream reads a device property stream from the specified value and initializes the device with these properties. The properties are per user and per device.","Parameters:","bstrName Name of the property stream.","WriteDevPropStream",{"@attributes":{"id":"p-0189","num":"0232"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT WriteDevPropStream(BSTR bstrName);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"WriteDevPropStream writes the current device property stream to the specified value. The properties are per user and per device.","Parameters:","bstrName Name of the property stream.","ListDevPropStreams",{"@attributes":{"id":"p-0194","num":"0237"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT ListDevPropStreams(BSTR *pbstrName);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"ListDevPropStreams lists the device property stream names present in non-volatile storage. The list is returned in an allocated BSTR which the application must free using SysFreeString.","Parameters:","pbstrName Pointer to receive a list property streams.","DeleteDevPropStream",{"@attributes":{"id":"p-0199","num":"0242"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT DeleteDevPropStream(BSTR bstrName);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"DeleteDevPropStream deletes a device property stream from non-volatile storage.","Parameters:","bstrName Name of the property stream.","IDataObject Interface","The IDataObject interface is a standard OLE data transfer mechanism. This interface is used to provide an easy and natural way for applications to transfer data from a scan device. The full IDataObject interface description can be found in the OLE2 Programmer's Reference. The methods of this interface are:",{"@attributes":{"id":"p-0205","num":"0248"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"HRESULT\u2003GetData(LPFORMATETC, LPSTGMEDIUM);"},{"entry":"HRESULT\u2003GetDataHere(LPFORMATETC, LPSTGMEDIUM);"},{"entry":"HRESULT\u2003QueryGetData(LPFORMATETC);"},{"entry":"HRESULT\u2003GetCanonicalFormatEtc(LPFORMATETC, LPFORMATETC);"},{"entry":"HRESULT\u2003SetData(LPFORMATETC, STGMEDIUM FAR *, BOOL);"},{"entry":"HRESULT\u2003EnumFormatEtc(DWORD, LPENUMFORMATETC FAR *);"},{"entry":"HRESULT\u2003DAdvise(FORMATETC FAR *, DWORD,\u2003LPADVISESINK, DWORD"},{"entry":"FAR *);"},{"entry":"HRESULT\u2003DUnadvise(DWORD);"},{"entry":"HRESULT\u2003EnumDAdvise(LPENUMSTATDATA FAR *);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"IImageTransfer Interface","The IImageTransfer is a high performance data transfer interface. This interface uses a shared memory window to transfer data from the device object to the application, eliminating unnecessary data copies during marshalling. For simplicity, this interface uses the same format negotiation method as IDataObject. IImageTransfer uses two different mechanisms to transfer data.","Banded Transfers","The device breaks a large image transfer up into smaller transfers, which are performed sequentially into an application-specified buffer.","Data Callback","The device does a single large transfer, while calling back to the application as the transfer progresses.","itAllocateTransferBuffer",{"@attributes":{"id":"p-0213","num":"0256"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT itAllocateTransferBuffer("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"LONG","lSize,"]},{"entry":[{},"ULONG","hSection,"]},{"entry":[{},"ULONG","ProcessID);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Allocates a buffer to use for scanning data from the device. The buffer is mapped into the address space of both the client and server process.","Parameters:",{"@attributes":{"id":"p-0216","num":"0259"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lFlags","Operation flags."]},{"entry":[{},"lSize","Size in bytes of the requested buffer."]},{"entry":[{},"hSection","Mapped section handle"]},{"entry":[{},"ProcessID","Caller process ID"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"itFreeTransferBuffer",{"@attributes":{"id":"p-0218","num":"0261"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT itFreeTransferBuffer(void);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Free the buffer created by itAllocateTransferBuffer. This buffer is also freed when the device object is destroyed.","itBeginTransfer",{"@attributes":{"id":"p-0221","num":"0264"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT itBeginTransfer("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LPFORMATETC","pFormatEtc,"]},{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"IDataCallback*","pIDataCallback);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Reset a device object context to begin an IImageTransfer.","Parameters:",{"@attributes":{"id":"p-0224","num":"0267"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pFormatEtc","Format specification."]},{"entry":["lFlags","Operation flags."]},{"entry":["pIDataCallback","Optional transfer progress notification entry point."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"ItGetImage",{"@attributes":{"id":"p-0226","num":"0269"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT itGetImage("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"LONG*","plSrcOffset,"]},{"entry":[{},"LONG*","pcbWritten);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Perform an image transfer.","Parameters:",{"@attributes":{"id":"p-0229","num":"0272"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lFlags","Operation flags."]},{"entry":[{},"plSrcOffset","Source pointer for transfer."]},{"entry":[{},"pcbWritten","Actual number of bytes written during transfer."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"itGetImageCB",{"@attributes":{"id":"p-0231","num":"0274"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT itGetImageCB(LONG lFlags);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Perform an image transfer using a user specified callback.","Parameters:","lFlags Operation flags.","itEndTransfer",{"@attributes":{"id":"p-0236","num":"0279"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT itEndTransfer(LONG lFlags);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Cleanup a device object context after an image transfer.","Parameters:","lFlags Operation flags.","itQueryGetData",{"@attributes":{"id":"p-0241","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT itQueryGetData(LPFORMATETC pfe);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Check to see if a device supports a given format in an image transfer.","Parameters:",{"@attributes":{"id":"p-0244","num":"0287"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pfe","Pointer to the FORMATETC structure defining the format,"]},{"entry":[{},{},"medium, and target device to use for the query."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"itEnumFormatEtc",{"@attributes":{"id":"p-0246","num":"0289"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT itEnumFormatEtc("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DWORD","dw,"]},{"entry":[{},"LPENUMFORMATETC*","lpEnum);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Create a format enumerator.","Parameters:",{"@attributes":{"id":"p-0249","num":"0292"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"dw","Reserved"]},{"entry":[{},"lpEnum","Indirect pointer to the IEnumFORMATETC interface"]},{"entry":[{},{},"on the new enumerator object."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"ImageIn Camera Device Object","The ImageIn Camera is a hierarchical object. The top-level camera object is used to get basic device information and also to get access to individual images or image folders. The CCameraItem object represents images and Image folders.","ICamera Interface","TakePicture",{"@attributes":{"id":"p-0254","num":"0297"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT\u2003TakePicture(\u2009);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The TakePicture method instructs a camera to take a new picture.","GetCameraRootItem",{"@attributes":{"id":"p-0257","num":"0300"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"HRESULT\u2003GetCameraRootItem(ICameraItem**\u2003pICameraItem);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"This method returns an interface to the root CCameraItem object. Using the IcameraItem interface it is possible to enumerate all images on the camera.","Parameters:","PICameraItem Interface pointer to root camera item GetCameraItemByHandle",{"@attributes":{"id":"p-0261","num":"0304"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT\u2003GetCameraItemByHandle("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ULONG","ulItemHandle,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ICameraItem**","pICameraItem);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"This method returns an ICameraItem interface to the specified CCameraItem object. A handle for a CCameraItem object can only be obtained through the ICameraItem interface.","Parameters:",{"@attributes":{"id":"p-0264","num":"0307"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ulItemHandle","Handle to camera item, previously returned by"]},{"entry":[{},"CameraItem interface"]},{"entry":["pICameraItem","Interface pointer to Camera Item specified by handle"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"CameraDlg",{"@attributes":{"id":"p-0266","num":"0309"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT\u2003CameraDlg("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","lFlags,"]},{"entry":[{},"LONG","lIntent,"]},{"entry":[{},"ICameraItem**","pICameraItem);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Display the camera UI. UI will select an image on a device and prepare for image transfer. The UI returns a ICameraItem interface to a CCameraItem ready for data transfer. IDataObject or IImageTransfer interfaces are then used to transfer image data.","Parameters:",{"@attributes":{"id":"p-0269","num":"0312"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["lFlags","Operational flags"]},{"entry":["lIntent","High level intent"]},{"entry":["pICameraItem","Interface pointer to Camera Item selected by Dlg"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"ICameraItem Interface","A CCameraItem object is created for every image and directory on the camera. This is done to support full and flexible hierarchical image storage on cameras. A ICameraItem pointer is returned for each CCameraItem object. ICameraItem methods are defined below.","GetItemType",{"@attributes":{"id":"p-0273","num":"0316"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT\u2003GetItemType(ULONG *pItemType);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"GetItemType returns the type of camera item the object represents. The two types of camera items are:\n\n","Parameters:","pItemType Item Type returned","GetItemHandle",{"@attributes":{"id":"p-0278","num":"0323"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT\u2003GetItemHandle(ULONG *pItemHandle);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Returns a handle to the CCameraItem. This handle can later be used by the ICamera interface to get an interface pointer back to this object.","Parameters:","PItemHandle Item handle returned. This handle may be used by the GetCameraItemByHandle method of the ICamera interface to obtain an IcameraItem pointer.","OpenImagePropertyStorage",{"@attributes":{"id":"p-0283","num":"0328"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT\u2003OpenImagePropertyStorage(IPropertyStorage**"]},{"entry":[{},"ppIPropertyStorage);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Returns an IPropertyStorage interface to the CCameraItem object.","Parameters:","ppIPropertyStorage Returned IPropertyStorage interface pointer.","EnumChildItems",{"@attributes":{"id":"p-0288","num":"0333"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"HRESULT EnumChildItems(IEnumCameraItem** ppIEnumCameraItem);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Creates a CEnumCameraItem object and returns a IEnumCameraItem interface to it. This method only works if the camera item is a folder and the folder is not empty, as shown in the figure above.","Parameters:","ppIEnumCameraItem Pointer to iEnumCameraItem interface.","IEnumCameraItem Interface","IEnumCameraItem is a standard OLE enumerator interface with the usual four methods Next, Skip, Clone and Reset. This enumerator will return an ICameraInterface for each camera item in the current camera folder (that was used in the call to EnumChildItems).","Next",{"@attributes":{"id":"p-0295","num":"0340"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT\u2003Next("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ULONG","celt,"]},{"entry":[{},"ICameraItem**","ppICameraItem,"]},{"entry":[{},"ULONG*","pceltFetched);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Return an ICameraItem interface for each CCameraItem contained by the current folder.","Parameters:",{"@attributes":{"id":"p-0298","num":"0343"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"celt","number of camera items to get"]},{"entry":[{},"ppICameraItem","List of iCameraItem interface pointers returned."]},{"entry":[{},"pceltFetched","Number of interface pointers returned"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Skip",{"@attributes":{"id":"p-0300","num":"0345"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT\u2003Skip(ULONG celt);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Skip celt CCameraItem objects.","Parameters:","celt Number of CcameraItem objects to skip","Reset",{"@attributes":{"id":"p-0305","num":"0350"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT\u2003Reset(void);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Begin at the first CCameraItem object.","Parameters: None","Clone",{"@attributes":{"id":"p-0309","num":"0354"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT\u2003Clone(IEnumCameraItem **ppIEnumCameraItem );"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Create a new CEnumCameraItem object and return a IEnumCameraItem interface.","Parameters:",{"@attributes":{"id":"p-0312","num":"0357"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ppIEnumCameraItem","New enumerator created to exactly match this"]},{"entry":[{},"one."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Camera Download Manager","The camera download manager monitors the connection status of camera devices. When a camera device is connected to the system, the Download Manager will attempt to immediately download all the images from the camera onto the system hard disk. The camera download manager will also maintain a data base of all images previously downloaded from a given camera and not download images that are already cached.","Caching images in this manner has several advantages.\n\n","In order for the camera download manager to work effectively, camera events must be detectable. For example, it should be easy to detect when a camera is connected or disconnected from the system. This should be detectable without loading the entire camera driver. Also any activity performed directly on the camera (through camera controls) must be reported to software so an accurate internal model of the state of the camera can be kept.","Sample Code","Get an image from an ImageIn device. Use the ImageIn device manager device selection UI and the device image acquisition UI.",{"@attributes":{"id":"p-0319","num":"0367"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/***********************************************************"},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","GetImageFromImageIn"]},{"entry":"*"},{"entry":["*","DESCRIPTION:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","Use the ImageIn device manager to select a device"]},{"entry":["*","and acquire an"]},{"entry":["*","image using the device UI."]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","PARAMETERS:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","pszDIBfileName - Name of the DIB file which contain"]},{"entry":["*","the image data."]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"***********************************************************\/"},{"entry":"HRESULT GetImageFromImageIn(LPOLESTR pszDIBfileName)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT","hr;"]},{"entry":[{},"IImageInDevMgr","*pIImageInDevMgr;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Get ImageIn device manager object."]},{"entry":[{},"hr = CoCreateInstance(CLSID_ImageInDevMgr,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NULL,"]},{"entry":[{},"CLSCTX_LOCAL_SERVER,"]},{"entry":[{},"IID_IImageInDevMgr,"]},{"entry":[{},"(void**)&pIImageInDevMgr);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (SUCCEEDED(hr)) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"STGMEDIUM StgMedium;"]},{"entry":[{},"\/\/ Fill in the storage medium spec and get the image."]},{"entry":[{},"StgMedium.tymed = TYMED_FILE;"]},{"entry":[{},"StgMedium.lpszFileName = pszDIBfileName;"]},{"entry":[{},"StgMedium.pUnkForRelease = NULL;"]},{"entry":[{},"hr = pIImageInDevMgr\u2212>GetImage(0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0,"]},{"entry":[{},"CF_DIB,"]},{"entry":[{},"&StgMedium);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pIImageInDevMgr\u2212>Release(\u2009);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return hr;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Enumerate all installed ImageIn devices and get the device ID of a specific device:",{"@attributes":{"id":"p-0321","num":"0369"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/*******************************************************************************"},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","GetDeviceIDfromDescription"]},{"entry":"*"},{"entry":["*","DESCRIPTION:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","Get the unique device ID of an ImageIn device based on it's description."]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","PARAMETERS:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","pszDescription","- Requested device description, from device info properties."]},{"entry":["*","pszDeviceID","- Buffer for the returned device ID."]},{"entry":["*","cbDeviceIDSize","- Size of the returned device ID buffer in bytes."]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*******************************************************************************\/"},{"entry":"HRESULT GetDeviceIDfromDescription("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LPOLESTR","pszDescription,"]},{"entry":[{},"LPOLESTR","pszDeviceID,"]},{"entry":[{},"UINT","cchDeviceID)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"{"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT","hr;"]},{"entry":[{},"IImageInDevMgr","*pIImageInDevMgr;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (pszDeviceID && cchDeviceID) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"*pszDeviceID = \u2018\\0\u2019;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return E_INVALIDARG;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/ Get ImageIn device manager object."]},{"entry":[{},"hr = CoCreateInstance(CLSID_ImageInDevMgr,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NULL,"]},{"entry":[{},"CLSCTX_LOCAL_SERVER,"]},{"entry":[{},"IID_IImageInDevMgr,"]},{"entry":[{},"(void**)&pIImageInDevMgr);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (SUCCEEDED(hr)) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IEnumIMAGEIN_DEV_INFO *pIEnumIMAGEIN_DEV_INFO;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PROPSPEC","PropSpec[1];"]},{"entry":[{},"PROPVARIANT","; PropVarDesc[1], PropVarID[1]"]},{"entry":[{},"UINT","cbSize;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Get an enumerator for the ImageIn device information."]},{"entry":[{},"hr = pIImageInDevMgr\u2212>EnumImageInDevInfo(0, &pIEnumIMAGEIN_DEV_INFO);"]},{"entry":[{},"if (SUCCEEDED(hr)) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IPropertyStorage","*pIPropStg;"]},{"entry":[{},"ULONG","ul;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Enumerate the ImageIn devices, getting a IImageInDevInfo"]},{"entry":[{},"\/\/ pointer for each. Use this interface to query the registry"]},{"entry":[{},"\/\/ based properties for each installed device."]},{"entry":[{},"ul = 1;"]},{"entry":[{},"while ((hr = pIEnumIMAGEIN_DEV_INFO\u2212>Next(1,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"168pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"&pIPropStg,"]},{"entry":[{},"&ul)) =\u2009= S_OK) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Read the device description for the current device."]},{"entry":[{},"PropSpec[0].ulKind = PRSPEC_PROPID;"]},{"entry":[{},"PropSpec[0].propid = DIP_DEV_DESC;"]},{"entry":[{},"hr = pIPropStg\u2212>ReadMultiple(1, PropSpec, PropVarDesc);"]},{"entry":[{},"if (SUCCEEDED(hr)) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Test for a description match."]},{"entry":[{},"if (!wcscmp(PropVarDesc[0].pwszVal, pszDescription)) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Read the device ID."]},{"entry":[{},"PropSpec[0].propid = DIP_DEV_ID;"]},{"entry":[{},"hr = pIPropStg\u2212>ReadMultiple(1, PropSpec, PropVarID);"]},{"entry":[{},"if (SUCCEEDED(hr)) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"wcsncpy(pszDeviceID, PropVarID[0].pwszVal, cchDeviceID);"]},{"entry":[{},"PropVariantClear(PropVarID);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"PropVariantClear(PropVarDesc);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"pIPropStg\u2212>Release(\u2009);"]},{"entry":[{},"if (*pszDeviceID) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"pIEnumIMAGEIN_DEV_INFO\u2212>Release(\u2009);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"pIImageInDevMgr\u2212>Release(\u2009);"]},{"entry":[{},"if (!*pszDeviceID) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"hr = E_FAIL;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return hr;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Although the invention has been described in language specific to structural features and\/or methodological steps, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
