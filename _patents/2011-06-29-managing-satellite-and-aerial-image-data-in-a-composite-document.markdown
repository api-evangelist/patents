---
title: Managing satellite and aerial image data in a composite document
abstract: A method in a computing device for generating a composite document includes receiving drawing data from a user interface, where the drawing data includes a plurality of two-dimensional shapes, and generating a first data structure that includes the received drawing data. The method further includes receiving a reference to a geographic location from the user interface and, in response to receiving the reference to the geographic location, retrieving photograph data corresponding to the received reference, where the photograph data includes at least one of satellite image data and aerial image data for the geographic location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09411901&OS=09411901&RS=09411901
owner: Trimble Navigation Limited
number: 09411901
owner_city: Sunnyvale
owner_country: US
publication_date: 20110629
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF TECHNOLOGY","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This disclosure generally relates to generating and managing a composite document and, in particular, to generating and managing a composite document that includes satellite and aerial image data.","The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent it is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.","Computer-generated presentations are widely used in business, academic, scientific, and other environments. Typically, a computer-generated presentation is made up of multiple slides having text and, in some cases, images in a digital image file format such as BMP, JPEG, etc. For example, a user may illustrate the presentation by inserting drawings or photographs into the corresponding slides. Generally, during a presentation, the user sequentially shows the slides to an audience.","In an embodiment, a method in a computing device for generating a composite document includes receiving drawing data from a user interface, where the drawing data includes a plurality of two-dimensional shapes, and generating a first composite document entity, where the first composite document entity is a data structure that includes the received drawing data. The method further includes receiving a reference to a geographic location from the user interface, in response to receiving the reference to the geographic location, retrieving photograph data corresponding to the received reference, where the photograph data includes at least one of satellite image data and aerial image data for the geographic location, generating a second document entity, where the second composite document entity is a data structure that includes the photograph data and the reference to the geographic location, and generating the composite document, where the composite document includes the first composite document entity and the second composite document entity.","In another embodiment, a tangible non-transitory computer-readable medium stores instructions thereon to implement a composite document system. When executed on a processor, the instructions cause the processor to receive model data that describes a three-dimensional model of an object, where the model data conforms to a non-image format and generate a first composite document entity that includes the model data. The instructions further cause the processor to receive a reference to a geographic location from a user interface, receive photograph data that corresponds to the received reference, where the photograph data includes at least one of satellite image data and aerial image data of the geographic location, generate a second composite document entity that includes the photograph data and the reference to the geographic location, and generate a composite document that includes the first composite document entity and the second composite document entity.","In another embodiment, a tangible non-transitory computer-readable medium stores instructions thereon to implement a composite document system. When executed on a processor, the instructions cause the processor to receive model data that describes a three-dimensional model of an object according to a non-image format, generate a first composite document entity, such that the first composite document entity is a data structure that includes the model data, and generate an interactive visual representation of the three-dimensional model to be displayed on a user interface, where the visual representation of the three-dimensional model is rotated in response to a command received via the user interface. The instructions further cause the processor to receive a reference to a geographic location, receive photograph data that corresponds to the received reference, where the photograph data includes at least one of satellite image data and aerial image data of the geographic location, generate a second composite document entity, where the second composite document entity includes the photograph data and the reference to the geographic location, and generate an interactive visual representation of the photograph data to be displayed on a user interface, such that a zoom level to which the photograph data corresponds is adjusted in response to a command received via the user interface. The instructions further cause the processor to generate a composite document that includes the first composite document entity and the second composite document entity and cause the composite document to be displayed on the user interface as a set of presentation slides, where the set of presentation slides includes the interactive visual representation of the three-dimensional model and the interactive visual representation of the photograph data.","Generally speaking, a system for creating and managing composite documents (\u201cthe composite document system\u201d) allows a user to efficiently generate a composite document that includes several types of data, such as text, images, video and\/or audio content, web page data, map data, satellite and aerial data. The composite document system further allows the user to edit a previously created composite document, update the composite document with new data of one or more types, and adjust visual characteristics of the data included in the composite document. In an embodiment, the composite document system is integrated with a modeling software for creating three-dimensional (3D) models of objects such as buildings, vehicles, furniture, etc., so that a 3D model developed using the modeling software can be added to a composite document as model data that conforms to a non-image format of the modeling software. A user can manipulate (e.g., rotate, scale, spin about a certain point or \u201corbit\u201d) the 3D model in the composite document system without launching the modeling software as a separate application or generating an instance of the modeling software within a window embedded in the composite document system, for example. Further, in an embodiment, the composite document system provides a set of controls on a user interface for drawing two-dimensional (2D) shapes. A user may use a composite document system that implements some or all of the techniques of the present disclosure to create an interactive presentation made up of a series of presentation slides, for example.","In at least some of the embodiments discussed herein, composite documents include multiple data objects (or \u201centities\u201d) that are rendered in corresponding containers. An entity may include an indication of the type of data (e.g., text, an image, a 2D drawing shape, a 3D model, web page data, map data, satellite and aerial image data), the geometry (e.g., positioning, orientation) of the visual representation of the data in the composite document, and a reference to the source of the data (such as a URL referring to the web page from which web page data was received, for example). Thus, for example, a certain composite document may contain a model entity that includes a 3D model of a building and positioning data that indicates where a container for the model is located when the composite document is displayed on a user interface, as well as a text entity that includes a text describing the model and the corresponding positioning data.","According to some embodiments, a user can interact with and modify data within containers by invoking functionality resident in the composite document system. For example, in an embodiment, the composite document system receives and stores web page data, including content and a description of the content in a mark-up language, from a host disposed on the Internet. The user then spatially locates a container for the web page data within a composite document, and the composite document system interprets the web page data and generates an appropriate visual representation (or simply \u201cimage\u201d) of the web page data. Further, in some embodiments, the visual representation of the web page data is interactive, and the user may activate links included in the web page data, click on buttons, launch playback of audio and video content, and otherwise interact with the web page data. To this end, the composite document system may include a set of application programming interface (API) functions of an embedded browser, such as Cocoa NSWebView used on a Mac OS platform or the WebBrowser class used on a Windows platform, for example.","Further, for at least some types of data, the composite document system provides a set of interactive tools that allow a user to specify sources of data to be used in various entities (e.g., URLs of web pages, references to geographic locations for which map data or satellite and aerial imagery is obtained, references to 3D models), inspect entities, edit entities, activate functions within certain entities (e.g., activate a Flash animation in web page data), update entities with up-to-date information (e.g., retrieve updated web page data, a new traffic map, or an updated 3D model), reposition or re-orient containers that enclose entity data, etc. Some of these interactive tools may operate on only some of the types of entities, while other tools may operate on entities of all types. Further, some of the tools may be made available to a user in accordance with the current mode of operation (e.g., edit, presentation).","Several example systems and methods for generating and managing composite documents that include one or more of web page data, map data, and satellite image data are discussed below. First, a brief overview of an example composite document system and an environment in which the composite document system may operate is discussed with reference to . Several techniques for including web page data in a composite document are then discussed with reference to , followed by a discussion of several techniques for including satellite and aerial image data with reference to , further followed by a discussion of several techniques for including map data in a composite document with reference to .","System Overview",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 1","FIG. 1"],"b":["10","100","100","102","104","106","105","107","108","110","100","104","108","100","106","104","105","107","100","106","105","104","107","100","106","107","104","105","10","104","108"]},"In operation, the composite document creation system  receives input from an input sub-system  communicatively coupled to the computing device . The input sub-system  generally may include one or more of a pointing device such as a mouse, a keyboard, a touch screen, a trackball device, a digitizing tablet, a microphone, etc. In the embodiment of , the input sub-system  includes a mouse  and a keyboard . Further, the composite document creation system  provides output, such as a visual representation of a composite document, prompts and dialogs, etc., to an output sub-system  that is also communicatively coupled to the computing device . In an embodiment, the output sub-system  includes an LCD display monitor  and a plotter , although in other embodiments, the output sub-system  additionally or alternatively includes one or more of a touch screen, printer, a speaker, etc. In some embodiment, the computing device  includes one or both of the input sub-system  and the output system . As discussed in more detail below, the composite document creation system  provides a graphical user interface (GUI) to a user via the input sub-system  and the output sub-system .","With continued reference to , the computing device  may include a central processing unit (CPU) , a program memory , and a data storage . Depending on the embodiment, the program memory  may be a Dual Data Rate Dynamic Random Access Memory (DDR-DRAM), as illustrated in , a Static Random Access Memory (SRAM), or any other suitable type of a non-persistent high-speed memory. The program memory  may be provided on the same chip as the CPU  or on a separate chip. The data storage  may be a hard disk drive (HDD) that communicates with the CPU  over a bus, for example, or another type of a suitable persistent storage device. In operation, the CPU  retrieves the computer instructions that make up the engines - from the data storage  and executes the instructions to provide the functionality of the engines -.","The composite document system  may include one or several network cards (not shown) and communicate with remote hosts disposed on a network  (e.g., the Internet) via a communication link  (e.g., an Ethernet link) For example, the web application engine  may receive web page data from a source web page provided by a web server , the map data engine  may receive map data from a map data server , and the satellite and aerial data engine  may receive satellite and aerial data from a satellite and aerial data server . In another embodiment, the map data server  and the satellite and aerial data server  operate on a same host. Further, in an embodiment, some or all of the engines - can be downloaded to the computing device  from an application download server .","In the embodiment of , the computing device  is a personal computer (PC). However, in other embodiments, the computing device  may be any suitable stationary or portable computing device such as a tablet PC, a smartphone, etc. Further, although the computing device  in the example embodiment of  includes both storage and processing components that can fully support the composite document system , the computing device  in other embodiments can be a so-called thin client that depends on another computing device for certain computing and\/or storage functions. For example, in one such embodiment, the data storage  and the program storage  are external to the computing device  and are connected to the computing device  via the Ethernet link .","Now referring to , the composite document system  of  may be implemented, for example, as a composite document system  that executes in a software environment . In an embodiment, a web application engine , a satellite and aerial data engine , a 3D modeling engine , a map data engine , a text engine , and a 2D drawing engine  are software modules that interface with an application framework or wrapper  of the document system . The engines - may be similar to the respective ones of the engines - of . Further, depending on the embodiment, the composite document system  may include additional components such as an image rendering engine (not shown) to render data that conforms to a standard image format such as BMP, JPEG, GIF, etc. Conversely, in some embodiments, the composite document system  may include only some of the engines -. The application wrapper  may operate as a \u201cglue\u201d layer and provide APIs, variables, message queues, etc. using which the engines - and possibly other components of the composite document system  may interact with each other. The application wrapper  may in turn interface with an operating system (OS)  such as Android, Linux, Windows, Mac OS, etc. In another embodiment, the composite document system  executes on a Java Virtual Machine (JVM) in a Java environment, and the application wrapper  includes functions that are platform-agnostic, i.e., independent of the operating system and the hardware on which the operating system executes. In yet another embodiment, some or all of the components of the composite document system  are implemented in a scripting language interpreted by a browser, for example.","In operation, the OS  allows the engines - to receive input data from input devices and provide output to output devices, such as devices operating in the input sub-system  and the output sub-system  of , respectively. In particular, the OS  may include one or several user interface APIs  to access input and output devices, input device drivers , such as a mouse driver  and keyboard driver , as well as output device drivers , such as a graphic video driver  and a printer driver , for example. Further, some or all of the engines - may programmatically interface with a network stack . Referring back to , in an embodiment, the network stack  enables tasks executing in the software environment  to communicate with remote hosts such as servers , , ,  and . For example, the network stack  may implement the TCP\/IP protocol and interface with a network driver  that controls a network card, via which tasks in the software environment  can send and receive data.","The text engine  may process text input received from an input device or another document, for example. In an embodiment, the text engine  supports styled text editing (e.g., Rich Text Format or \u201cRTF\u201d) that allows users to apply to the text various fonts, font faces (e.g., bold, italic, light, heavy), styles, paragraph formatting (e.g., left-align, right-align), tabs, tabular layout, bulleted and\/or number lists, etc","In an embodiment, a 3D modeling software  for developing 3D models of various objects operates in the software environment . The 3D modeling software  generally provides a set of modeling controls to generate, position, and variously adjust three-dimensional shapes, apply textures to the shapes or surfaces, define interactions between shapes, etc. Models developed using the 3D modeling software  may be stored on a computer-readable medium as data files that conform to a certain non-image format. For example, the non-image format may specify a set of faces of a 3D models along with the corresponding attributes, such as the position and orientation of a face, the texture of the face, etc. According to an embodiment, the 3D modeling engine  is configured to render a 3D model developed using the 3D modeling software  and stored in the non-image format of the 3D modeling software . Further, in some embodiments, the 3D modeling engine  is configured to enable additional interaction with the 3D model within a corresponding container included in a composite document. The 3D modeling engine  may allow a user to rotate, scale, and otherwise select and adjust the manner in which the 3D model is rendered, for example. Still further, in some embodiments, the 3D modeling engine  may provide at least partial editing functionality for a 3D model included in the composite document. In one such embodiment, the 3D modeling engine  is a shared software component, such as a Dynamic-link Library (DLL) that includes a set of functions which both the composite document system  and the 3D modeling software  access during operation.","With continued reference to , the composite document system  may also interface with DLLs or other function libraries that provide additional functionality to one or more software applications operating in the software environment . For example, in an embodiment, a web view library  provides embedded browser functionality. The web view library  may include, for example, functions for generating and processing data packets that conform to the Hypertext Transfer Protocol (HTTP), encode data according to the Secure Socket Layer (SSL) protocol, request and verify digital certificates, etc.","Further, in some embodiments, the composite document system  may interact with one or more plugin components (not shown) that variously extend the functionality of an embedded browser operating in the composite document system . For example, a Flash plugin may be installed in the software environment  as a DLL to support playback of Flash-based content, a plugin for interacting with street-level photographs and videos provided by a corresponding service may be installed in the software environment  as another DLL, etc.","As discussed in more detail below, the web application engine  receives web page data from a remote host such as the web server  illustrated in . Web page data may include content, such as text, images, animations, video files, audio files, etc. as well as instructions in a mark-up language such as HTML. The web application engine  may also automatically retrieve content referenced in the web page data using URLs, for example. In an embodiment, the web application engine  is configured to interpret the content of web page data according to the mark-up language and generate a visual representation of the interpreted content in a corresponding container. In some embodiments, the web application engine  may include or invoke the functionality of the web view library  to provide an embedded browser within the corresponding container. A user may accordingly view the web data and interact with the web data in at least a limited manner (e.g., activate Flash content included in the web page data, scroll through the content of the web page data, activate \u201cforward\u201d and \u201cback\u201d controls to retrieve the corresponding data, when available).","The map data engine  provides user interface controls for a user to specify a geographic location and, upon receiving location data from the user interface, receives map and related cartographic data from a remote host such as the map data server  illustrated in , according to an embodiment. The map data engine  may invoke appropriate APIs provided by the wrapper  to interface with the network stack  and\/or APIs provided by a map data service. For example, an API may cause a request for map data corresponding to a particular type (e.g., terrain) for a particular location to be transmitted to a map data server and, when the map data is received, render the map data within the corresponding container.","Further, in an embodiment, the satellite and aerial data engine  receives a selection of a geographic location from a user interface and retrieves satellite and aerial data corresponding to the selected geographic location. Similar to the map data engine , the satellite and aerial data engine  may invoke APIs provided by a satellite and aerial data service. In an embodiment, the satellite and aerial data service is provided by a satellite and aerial image data server such as the server  of , for example.","In an embodiment, some or all of the engines - communicate with a mass storage driver  to store and retrieve composite documents from a persistent memory such as the data storage  of , for example. In an embodiment, the web application engine  stores web page data as well as objects embedded in the web page data and\/or referenced by the web page data. In general, a composite document generated by the composite document system  may be stored in any suitable format such as extensible markup language (XML), for example. According to some embodiments or scenarios, a composite document is stored as several data files (e.g., an XML file, one or several audio file, one or several 3D model files, etc.).","A composite document may be stored with a static snapshot of dynamic data included in the composite document, according to some embodiments. For example, a composite document may include the content of a certain web page as well as the images referenced in the content. As another example, a composite document may store both a 3D model in a non-image format of the 3D modeling software  and a snapshot of the 3D model in a standard digital image format.","Generally speaking, a user may utilize the composite document system  or  to create an interactive presentation made up of a series of presentation slides, edit a previously created presentation, and display the presentation slides to an audience. The interactive presentation may include data of only one type or, in some cases, no data at all. In some embodiments, the interactive presentation may include two or more of a 3D model, 2D shapes, text, images in a digital image format, web page data, map data, satellite and aerial image data, etc., each of which may be stored in a respective entity and rendered in a respective container. In some embodiments, the composite document system  or  operates in several modes, such as an edit mode and a presentation mode, and in different modes provides different functionality and different sets of user controls to a user. For example, a user may be able to rotate a 3D model included in a composite document both in the edit mode and in the presentation mode, but resizing the container that includes the 3D model may be available only in the edit mode.","Next, several features that may be provided by the web application engine , the satellite and aerial data engine , and the map data engine  are discussed in the respective sections below.","Web Application Engine",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 3","FIG. 2","FIG. 3"],"b":["300","100","200","300","200","202","202","300","300","302","304","306","308","302","304","306","302","304","306"]},"As illustrated in , the web reference tool  may include a web reference selector tool  and a web reference geometry tool . During operation, the web reference selector tool  may receive a URL of a source web page (or another reference to web page data) from a user interface and receive web page data in accordance with the URL. The web reference geometry tool  may locate the received web page data within a container in a composite document and receive an initial geometry (e.g., positioning, orientation, size) of the container. The container may appear, for example, as a rectangle in which an embedded browser is displayed. In some scenarios, the URL of the source web page indicates a resource at a remote web server, while in other scenarios, the URL indicates a file stored in a local file system. In the edit mode, the web reference tool  may receive a URL from the user interface, follow the links embedded in the web page corresponding to the URL (when possible), and render web page content, possibly including dynamic media content such as animation, audio, video, etc.","The web application engine  may generate a web reference entity  as a data structure (or \u201cobject\u201d) that includes the web page data as well as the URL of the source web page from which the web page data was retrieved. The web reference entity  may also include data objects referenced by the web page data, such as images, videos, tabular data, etc. In an embodiment, the web reference entity  also includes a static snapshot of the web page data, e.g., the content of a web page, the description of the content in a mark-up language, and the images referenced in the content. Additionally or alternatively, the static snapshot of the web page includes an image of the web page data in a digital image format, for example. The web reference entity  may be stored in a memory such as the data storage  (see ), for example.","The web reference editor  may provide an interface for an embedded web browser, so that a user can interact with the web page data received by the web reference tool  via a set of controls similar to those provided by a typical browser application (e.g., \u201cback\u201d and \u201cforward\u201d browser buttons and a \u201crefresh\u201d button). In an embodiment, the web reference editor  also allows the user to edit the URL of the web page data as well as the content in the web page data. Referring back to , the web reference editor  may interact with the web view library  or similar functions. When activated in the presentation mode, the web reference editor  may allow the user to manipulate the web page data and view dynamic media content such as animation, audio, video, etc. An example interface which the web reference editor  may provide, and the related functionality of the web reference editor , are discussed in more detail with reference to .","In an embodiment, the web application engine  automatically determines whether a new version of web page data is available at a host from which the web page was retrieved, according to an embodiment. The web application engine  accordingly may notify the user via an appropriate dialog box or automatically retrieve the new version of the web page data, depending on the embodiment or configuration.","With continued reference to , the web reference renderer  includes a vector graphics engine  and a raster graphics engine , according to an embodiment. When the web reference tool  receives a command to adjust one or more characteristics of the visual representation of the web page data, such as a command to zoom in or out, rotate the container that includes the visual representation of the web page data, or move the container to a new location, the vector graphics engine  may re-render the web page data in accordance with the received command to generate an updated visual representation of the web page data. Further, the web reference tool  may appropriately scale the updated visual representation to the size of the web page data container in the composite document. The raster graphics engine  may convert the output of the vector graphics engine  to a bit-map image sized to the container of the web page data and display the bit map image in the composite document.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 4","FIG. 3","FIG. 4"],"b":["400","314","314","402","404","406","314","400","409"]},"The web reference selector tool  may receive the URL of a remote web page (or another resource identifier) via an input text box  in any suitable manner (from a keyboard, from the OS clipboard, etc.). In response to detecting that an open button  has been activated, the web reference selector tool  may parse the URL received via the text box  and initiate the retrieval of web page data from the corresponding web page. The dialog box  may also include a browse button , so that a user may invoke a local file browser and a select web page data from a local resource, e.g., a file located in the file system of a computing device in which the web application engine  operates. Further, in an embodiment, the selector tool  verifies the received data to determine whether the received data conforms to a recognized format of web page data, such as HTML.","In an embodiment, the web reference selector tool  displays the dialog box  or a similar dialog box upon determining that certain text in an OS clipboard includes a URL. The web application engine  may prompt the user to determine whether the identified text should be interpreted as a URL and a web reference entity should be created with web page data corresponding to the URL. For example, when a user wishes to transfer text from a text editing software to a document composite system in which the web reference selector tool  operates, the text editing software may place the text into the OS clipboard, and the web reference selector tool , in response to the user pasting the text from the OS clipboard into a composite document, may automatically generate a text entity to contain the text. However, when the text includes a string of characters that parse into a URL, the composite document system may suggest to the user that a web reference entity be generated in addition to, or instead of, the text entity. The composite document system may further suggest to the user that web page data be retrieved from the URL detected in the pasted text.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 5","FIG. 3","FIG. 5"],"b":["500","316","504","502","504","316","506","508","510","504","504","504","50","504","504","316","504","512","514"]},"Referring to , the web reference editor  of  or a similar component may generate a user interface window  to allow a user to clip an image corresponding to received web page data. For example, a user may utilize a shape tool , provided as a component of the geometry tool  and accessible via a menu bar , to define a desired shape, which may be regular or irregular, for the image or a certain section of the image. In the example of , a user defines a circular clipping mask  for the image corresponding to web page data  using commands provided in a pull-down menu . In an embodiment, web application engine  stores the definition of the clipping mask  as a part of the web reference entity corresponding to the web page data .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 7","b":["700","300","300","306","704","702","316","706","708","712","716","718","316","708","300","712","300","716","706","706"]},"As further illustrated in , the user interface window  may render the currently available web page data in a container . In an embodiment, the web application engine  receives a new version of web page data, compares the newly received web page data with the current version of the web page data in the corresponding web reference entity and, if the newly received web page data is different from the current version of the web page data, the web application engine  generates a notification icon .",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 8","FIG. 3","FIG. 8"],"b":["800","304","304","802","802","802"]},"As further illustrated in , the web reference editor  may interpret and render the web page data in a container . For example, the web reference editor  may invoke an embedded browser such as the web view library  illustrated in . The web reference editor  may additionally provide navigation controls in a toolbar  to allow a user to actively interact with rendered web page data. In an embodiment, when the user clicks on an update button , the web reference editor  may generate an image corresponding to the modified web page data and display image in the container . However, if the user clicks on the undo button , the web reference editor  discards changes made to the web page data via the html editor . The web reference editor  may store the changes to the web page data in the corresponding web reference entity when the users clicks on the save button .","Next, an example method for generating a composite document that includes web page data and at least one other type of data is discussed with reference to . By way of example only,  illustrates a method  for generating a composite document that includes web page data and 3D modeling data. However, it is noted that methods similar to the method  may be implemented for generating composite documents having other types of data in addition to web page data, e.g., 2D drawing data, text data, image data, map data, etc.","At block , 3D model data is received in, for example, a non-image format in which the corresponding 3D model was developed using another software application (such as the 3D modeling software  illustrated in ). A model entity may be generated that includes, for example, the received model data, an indication of the type of received data, a reference to the source of the 3D model data, etc. Next, at block , web page data is received. For example, in an embodiment, an address of a source web page is received from a user interface, and web page data is automatically retrieved from the source web page. A web reference entity may be generated that includes, for example, the received web page data and the address of the source web page. At block , a composite document that includes the model data and the web page data received at blocks  and , respectively, is generated. The composite document accordingly may include a model entity and a web reference entity. In other scenarios, a composite document also may include text entities, image entities, sound entities, etc.","At block , the entities included in the composite document are rendered. To this end, in an embodiment, each of the modeling data and the web page data is interpreted according to the format to which the corresponding data conforms. More specifically, in an embodiment, the modeling data conforms to a non-image format of a 3D modeling software, and the modeling data is interpreted at block  using an appropriate 3D modeling engine, so as to generate a raster image or a vector-based image. Further, the web page data may be interpreted and rendered at block  according to the instructions in the mark-up language such as HTML.","According to an embodiment, the method  is implemented in the composite document system . For example, the method  may be at least partially implemented in the 3D modeling engine  and the web application engine . Further, to implement the method , the web reference tool  may be used to facilitate user interaction with respect to web page data.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 10","b":["950","952","306","314"]},"Next, at block , web page data is retrieved in accordance with the request received at block . At block , the newly retrieved web page data is compared to the web page data already available in the web reference entity to determine whether the web page has changed. In some scenarios, web page data includes an indicator of when the web page was last updated (e.g., day, hour, minute), and the indicator in the newly received web page data is compared to a similar indicator in the previously stored web page data. In another embodiment, the content in the new web page data is compared to the content in the previously stored web page data.","If it is determined that the web page data has been updated, the new version of the web page data is stored in the corresponding web reference entity at block . Otherwise, if it is determined that the same web page data has been retrieved at block , the flow of the method  bypasses block , and the method  completes.","Satellite and Aerial Image Data Engine","As indicated above, a composite document system may also allow users to generate, edit, and present composite documents that include interactive satellite and aerial image data. According to some embodiments, a satellite data service provides one or both of satellite and aerial image data via a data server (such as the satellite and aerial data server  illustrated in ) as well as APIs for accessing, rendering, and interacting with such data. Satellite and aerial image data may be provided in a manner that allows rendering of a geographic area in 3D and simulating movement through 3D space. For example, a satellite image of a mountain range may be projected onto, or otherwise combined with, a 3D terrain view of the same area. Further, a satellite data service may provide terrain data as well as geo-relevant static data such as street names and dynamic data such as current weather data, traffic data, and airline flight tracking data. The additional geo-relevant data may be associated with one or several layers to enable selective display of such data over satellite and aerial image data. For simplicity, data that includes one or both of satellite imagery and aerial imagery, as well as additional geo-relevant data, is referred to below as \u201csatellite data.\u201d In some embodiments, satellite data may conform to the Keyhole Markup Language (KML) format or, when distributed in a compressed manner, to the KML-zipped (KMZ) format. In other embodiments, satellite data conforms to another non-image format. In an embodiment, the composite document system utilizes the Google Earth API.","Referring to , an example satellite and aerial data engine  may operate in the composite document system  or , for example, to support including, editing, and interacting with satellite data in a composite document. The satellite and aerial image engine may  may include a satellite image reference tool , a satellite image reference editor (or tool) , a satellite image reference inspector tool , and a satellite image reference renderer . Further, in the embodiment illustrated in , the reference renderer  includes a raster graphics engine  and a vector graphics engine , and the satellite image reference tool  includes a satellite image reference selector  and a satellite image reference geometry tool . A user may be able to access some of the tools , , and  only in certain modes of operation, according to an embodiment.","The satellite and aerial data engine  may operate on a satellite image reference entity  stored on a computer-readable medium. The satellite image reference entity  may include satellite data and such additional information as, for example, an indication of a geographic location to which the satellite data corresponds (e.g., latitude\/longitude coordinates, a postal code, a street address), a timestamp to indicate when the satellite data was last updated, a snapshot of the satellite data in a digital image format (e.g., JPEG, PNG, GIF), etc. Similar to the web reference entity  discussed above, the satellite image reference entity  may be included in a composite document that also includes 3D modeling data or 2D drawing data, stored in a corresponding model or drawing entity, and rendered in a corresponding container when the composite document is displayed on a user interface. Further, the composite document may also include text, images in a digital image format, web page data, map data, etc.","In operation, the satellite image reference selector  may receive a reference to a geographic location for which a user wishes to receive satellite data. In an embodiment, the reference includes geographic coordinates such as Global Positioning Service (GPS) coordinates or Universal Transverse Mercator (UTM) coordinates. In other embodiments, the reference includes a street address, a postal code such as the Zone Improvement Plan (ZIP) code used in the United States, or any other suitable indication of a geographic location or region. The satellite image reference selector  may receive a reference to a geographic location from an input device, a file, or the OS clipboard, for example. Upon receiving a reference to a geographic location via the satellite image reference selector , the satellite and aerial data engine  may request corresponding satellite data using an API provided by a satellite data service, for example. In response to receiving the requested satellite data, the satellite and aerial data engine  may generate a new entity (such as the satellite image reference entity ) to store the satellite data.","The satellite image reference geometry tool  may provide a set of controls for user to define and locate within a composite document a container that includes a visual representation of satellite data. For example, according to an embodiment, the satellite image reference geometry tool  receives positioning, size, orientation, and other initial geometry data for the container. In those embodiments that include 3D rendering, the initial geometry may also include tilt selection. The initial geometry data may be stored in the corresponding satellite image reference entity.","With continued reference to , the satellite image reference renderer  may render satellite data as a bit map image. In an embodiment, the vector graphics engine  generates a vector-based visual representation of satellite data using APIs provided by the satellite data service or by otherwise interpreting satellite data received from the satellite data service. The raster graphics engine  then converts the output of the vector graphics engine  to a bit map image sized according to the dimensions of the container in which the satellite data is displayed within the composite document, according to an embodiment.","The satellite image reference renderer  may render and re-render satellite data in accordance with user commands received from a user interface or in response to other events (timer expiration, detected changes in source satellite data, etc.). For example, when the satellite image reference tool  receives a command to adjust visual characteristics of satellite data, such as a command to resize the corresponding container, the satellite image reference renderer  may accordingly re-render the satellite data. Further, the satellite image reference renderer  may automatically re-render satellite data upon detecting that a user has updated the selection of layers of geo-relevant data. For example, when current visual representation of satellite data includes weather data, and a user unselects the weather data rendering using the satellite image inspector tool , the satellite image reference renderer  re-renders the satellite data so as to remove weather information. Still further, in an embodiment, the satellite and aerial data engine  automatically requests certain dynamic data, such as current weather data, for example, according to a certain configurable schedule.","The satellite image inspector tool  provides a set of satellite data controls in dockable, modeless window, via which a user selects viewing options for a selected satellite data entity, according to an embodiment. The satellite data controls may include an input box specifying a reference to a geographic location, navigation controls (such as pan, zoom, rotate, tilt, etc.), and layer visibility controls (e.g., respective toggle switches for current weather data, airline flight tracking, etc.). In an embodiment, the satellite image inspector tool  also provides 3D viewing controls such as a tilt tool, for example. In some scenarios, a user utilizes the satellite image inspector tool  when working with the satellite image reference editor .","The satellite image reference editor  may implement a satellite data viewer configured to render satellite data and support user interaction with the satellite data. For example, the image reference editor  may provide a set of controls via a user interface to allow the user to select a location in the visual representation of the satellite data, zoom in and out of the selected location, pan to a new location, rotate the visual representation of the satellite data, etc. In some embodiments, the satellite image reference editor  is available in the edit mode of a composite document but unavailable in the presentation mode, for example. In another embodiment, all functions of the satellite image reference editor  are available in all modes of operation. In yet another embodiment, the satellite image reference editor  is available in all modes of operation with different functions enabled.","In an embodiment, the satellite image reference editor  includes a satellite data viewer that is provided as a plugin component. The plugin component may be configured to interact with one or more applications in the corresponding software environment. For example, some or all of the functionality of the plugin for a satellite data viewer may be accessible to the satellite and aerial data engine  as well as a browser application. As another example, referring back to , the plugin for a satellite data viewer may be installed in the computing environment  and configured to be accessible to the web application engine  and the satellite and aerial image data engine .",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 12","FIG. 11","FIG. 12"],"b":["1200","1114","1206","1204","1202","1208","1212","1200","1214"]},"In an embodiment, the satellite image reference selector  displays the dialog box  upon determining that certain text in an OS clipboard potentially includes a reference to a geographic location. The satellite and aerial data engine  may prompt the user to determine whether the identified text should be interpreted as a reference to a geographic location and a satellite image reference entity should be created with satellite data corresponding to the reference. As discussed above with reference to the web reference selector tool  of , when a user wishes to transfer text from a text editing software to a document composite, the text editing software may place the text into the OS clipboard, and the composite document system, in response to the user pasting the text from the OS clipboard into a composite document, may automatically generate a text entity that includes the text. However, when the text includes a string of characters that can be interpreted as a street address, an intersection of several streets, a postal code, GPS coordinates or other geographic coordinates, etc., the composite document system may suggest to the user that a satellite image reference entity be generated in addition to, or instead of, the text entity. The composite document system may further suggest to the user that satellite data be retrieved according to the reference to a geographic location detected in the pasted text.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 13","FIG. 11"],"b":["1300","1116","1302","1303","1116","1306","1310","1308","1312","1302","1314","1302"]},"Referring to , a user may select the Satellite Reference Inspector  item from a menu  provided in a user interface window  and, in response, the satellite and aerial data engine  may generate a dockable, modeless inspector dialog  to provide several controls for interacting with satellite data in a composite document. In the example embodiment illustrated in , the inspector dialog  includes a text box  to receive a street address (or another reference to a geographic location) and a set of checkboxes  to select additional data to be displayed over a visual representation of satellite data. For example, the checkboxes  allow the user to select whether one or several components of weather information (e.g., clouds, forecast) are to be displayed over satellite photographs, and overlay selection options  further allow the user to apply custom overlay selections (e.g., traffic and street labels displayed over a satellite photograph).","In general, the actions a user may perform via the inspector dialog  apply to a currently selected satellite image reference entity. In the example of , satellite data of the currently selected satellite image reference entity is displayed in a container . In an embodiment, the inspector dialog  is accessible in the edit mode of operation but not in the presentation mode.","Further, at least in the edit mode of operation, a user may also activate the satellite image reference editor  that displays an editor toolbar . In an embodiment, the user uses the editor toolbar  to change the zoom level, re-center, adjust the orientation, adjust the tilt, and otherwise interact with the satellite data in the container . To this end, the editor toolbar  may include a zoom selector , a pan control , an orientation control , and a tilt control , for example.","According to an example scenario, when editing a composite document, a user specifies a geographic location using the satellite image reference selector , defines and positions a container within a composite document in which satellite data corresponding to the geographic location is to be displayed using the satellite image reference geometry tool , and selects the desired characteristics for the visual representation of the satellite data and the desires types of data to be included in the visual representation using the editor toolbar  and\/or the inspector dialog . The satellite data and the related parameters, such as the geometry of the corresponding container and overlay selections, may be stored in a satellite image reference entity. As discussed above, the composite document may include any number of other entities in addition to the satellite image reference entity. During a presentation, the satellite data may be displayed in one or several presentation slides in accordance with the parameters and options specified in the edit mode. In some embodiments, the user may interact with the satellite data in the presentation mode to zoom in on the location being discussed in the corresponding presentation slide, \u201cfly over\u201d from one location to another, etc. Moreover, depending on the user configuration, information such as airline flight tracking data may be updated in real-time during a presentation. On the other hand, if the composite document system cannot access the satellite data provider, the snapshot included in the satellite image reference entity may be displayed in the corresponding container (such as the container ) during a presentation.","Referring to , a method  for generating a composite document that includes satellite data and 3D modeling data may be implemented in the composite document system . For example, the method  may be at least partially implemented in the 3D modeling engine  and the satellite and aerial image data engine . It is noted that generating a composite document that includes satellite data and 3D modeling data is discussed by way of example only, and that in general, methods similar to the method  may be implemented to generate composite documents having other types of data in addition to satellite data, e.g., 2D drawing data, text data, image data, web page data, 2D map data, etc.","At block , 3D model data is received in, for example, a non-image format in which the corresponding 3D model was developed using another software application (such as the 3D modeling software  illustrated in ), and a model entity is generated that includes the received model data. Next, at block , satellite data is received. For example, in an embodiment, a reference to a geographic location is received from a user interface, and satellite data corresponding to the geographic location is automatically retrieved from a satellite data server (e.g., the satellite and aerial image data server  of ). A satellite image reference entity may be generated that includes the received satellite data and the reference to the geographic location. At block , a composite document that includes the model data and the satellite data received at blocks  and , respectively, is generated. The composite document accordingly may include a model entity and a satellite image reference entity. In other scenarios, the composite document also may include text entities, image entities, sound entities, etc.","At block , the entities included in the composite document are rendered. To this end, in an embodiment, each of the modeling data and the satellite data is interpreted according to the format to which the respective data conforms. For example, the modeling data that conforms to a non-image format of a 3D modeling software is interpreted at block  so as to generate a raster image or a vector-based image, and the satellite data that conforms to a non-image format of a satellite data service may be interpreted and rendered at block  so as to generate a raster image or a vector-based image.","Map Data Engine","In some cases, a user may wish to include map data in a composite document system. In an embodiment, a map data service provides interactive map data via a data server (such as the map data server  illustrated in ) as well as APIs for accessing, rendering, and interacting with the map data. The map data may include, for example, topographic data, street and road map data, etc. Further, map data may include additional static or dynamic data that optionally can be displayed over the topographic or street data. For example, additional static map data may include such data as bicycle trails, points of interest such as museums or theaters, business data such as restaurants or shops, etc. On the other hand, additional dynamic data may include current traffic data, weather data, etc. The additional static and dynamic map data may be associated with one or several layers to enable selective display of such data. In some embodiments, the map data service provides map data as a set of tiles in a digital image format. In other embodiments, the map data service provides map data in a non-image format, and the composite document system interprets the map data to generate a visual representation of the corresponding map. In one such embodiment, the map data service provides an appropriate API to generate an image based on map data in a non-image format. In an embodiment, the composite document system utilizes APIs provided by Google Maps or Mapquest.","Referring to , an example map data engine  may operate in the composite document system  or , for example, to support including, editing, and interacting with map data in a composite document. The map data engine may  may include a map reference tool  having a map reference selector  and a map reference geometry tool , a map reference editor , a map reference inspector tool , and a map reference renderer  having a raster graphics engine  and a vector graphics engine . In general, the map data engine  may operate on a map reference entity  stored on a computer-readable medium. The map reference entity  may include map data and such additional information as, for example, an indication of a geographic location to which the map data corresponds (e.g., latitude\/longitude coordinates, a postal code, a street address), a timestamp to indicate when the map data was last updated, a snapshot of the map data in a digital image format (e.g., JPEG, PNG, GIF), etc. Similar to the web reference entity  and the satellite image reference entity  discussed above, the map reference entity  may be included in a composite document that also includes 3D modeling data or 2D drawing data, stored in a corresponding model or drawing entity, and rendered in a corresponding container when the composite document is displayed on a user interface. Further, the composite document may also include text, images in a digital image format, web page data, satellite data, etc.","In an embodiment, the map reference selector  operates similar to satellite image reference selector  and receives a reference to a geographic location for which a user wishes to receive map data. The reference may include GPS or UTM coordinates, a street address, a ZIP code, etc. The map data engine  may then request corresponding map data using an API provided by a map data service, for example, and, in response to receiving the requested map data, generate a new map reference entity to store the map data.","The map reference geometry tool  may provide a set of controls such that a user can supply positioning, size, orientation, and other geometry data for a container that encloses a visual representation of the map data. The initial geometry data may be stored in the corresponding map reference entity, such as the map reference entity . With continued reference to , the map reference renderer  may render map data as a bit map image, and generally may be similar to the satellite image reference renderer  discussed with reference to . In particular, according to at least some embodiments, the vector graphics engine  generates a vector-based visual representation of map data using APIs provided by the map data service or by otherwise interpreting map data received from the map data service. The raster graphics engine  then converts the output of the vector graphics engine  to a bit map image sized according to the dimensions of the container in which the map data is displayed within the composite document, according to an embodiment.","The map reference renderer  may render and re-render map data in accordance with user commands received from a user interface or in response to other events (timer expiration, detected changes in source satellite data, etc.). For example, when the map reference tool  receives a command to adjust visual characteristics of map data, such as a command to resize the corresponding container, the map reference renderer  may accordingly re-render the map data. Further, the map reference renderer  may automatically re-render map data upon detecting that a user has selected new rendering options. For example, a user may select bicycle trail display to cause map reference renderer  to re-render the map data with bicycle trails displayed over the corresponding map. Further, in an embodiment, the map data engine  periodically requests dynamic data, such as current traffic information, and the map reference renderer  re-renders the map data using the new dynamic data.","The map inspector tool  provides a set of map data controls in dockable, modeless window, via which a user selects viewing options for a selected map data entity, according to an embodiment. The map data controls may include an input box specifying a reference to a geographic location, navigation controls (such as pan, zoom, rotate, etc.), layer visibility controls (e.g., respective toggle switches for current weather data, current traffic data, airline flight tracking, etc.). In some scenarios, a user utilizes the map inspector tool  when working with the map reference editor .","The map reference editor  may implement a satellite data viewer configured to render map data and support user interaction with the map data. For example, the image reference editor  may provide a set of controls via a user interface to allow the user to select a location in the visual representation of the map data, zoom in and out of the selected location, pan to a new location, rotate the visual representation of the map data, etc. In some embodiments, the map reference editor  is available in the edit mode of a composite document but unavailable in the presentation mode, for example. In another embodiment, all functions of the map reference editor  are available in all modes of operation. In yet another embodiment, the map reference editor  is available in all modes of operation with different functions enabled.","In an embodiment, the satellite image reference editor  includes a map viewer that is provided as a plugin component, which may be configured to interact with one or more applications in the corresponding software environment. For example, some or all of the functionality of the plugin for a map viewer may be accessible to the map data engine  as well as a browser application. As another example, referring back to , the plugin for a map viewer may be installed in the computing environment  and configured to be accessible to the web application engine  and the map data engine .","Referring to , the map reference selector  generates a user interface window  similar to the window  illustrated in  to receive a reference to a geographic location from a user. Further, similar to the satellite image reference selector , upon determining that certain text in an OS clipboard potentially includes a reference to a geographic location, the map reference selector  may prompt the user to determine whether a map reference entity should be generated corresponding to the detected reference. In an embodiment, upon detecting a potential reference to a geographic location, the composite document system allows the user to select between processing the detected potential reference as text, a reference to a map, a reference to a satellite and aerial image, or a reference to both a map and satellite and aerial image.","Referring to , the map reference geometry tool  may generate a user interface window  to receive positioning and geometry data from a user and position a container  enclosing map data within a composite document , according to an embodiment. The map reference geometry tool  may provide a set of geometry and positioning controls such as a rotate tool , a move tool , proportional dimension controls  to set the size of the container , horizontal\/vertical dimension controls  to stretch the visual representation of satellite data in the container , etc.","Now referring to , a user may select the Map Reference Inspector  item from a menu  provided in a user interface window  and, in response, the map data engine  may generate a dockable, modeless inspector dialog  to provide several controls for interacting with map data in a composite document. In the example embodiment illustrated in , the inspector dialog  includes a text box  to receive a street address (or another reference to a geographic location) and a set of checkboxes  to select additional data to be displayed over a visual representation of map data. For example, the checkboxes  allow the user to select for display one or more types of static information such as photographs and transit information and dynamic information such as traffic.","In general, the actions a user may perform via the inspector dialog  apply to a currently selected map entity. In the example of , map data of the currently selected map reference entity is displayed in a container . In an embodiment, the inspector dialog  is accessible in the edit mode of operation but not in the presentation mode.","Further, at least in the edit mode of operation, a user may also activate the map reference editor  that displays an editor toolbar . In an embodiment, the user uses the editor toolbar  to change the zoom level, re-center, adjust the orientation, and otherwise interact with the map data in the container . To this end, the editor toolbar  may include a zoom selector , a pan control , and an orientation control .","According to an example scenario, when editing a composite document, a user specifies a geographic location using the map reference selector , defines and positions a container within a composite document in which map data corresponding to the geographic location is to be displayed using the map reference geometry tool , and selects the desired characteristics for the visual representation of the satellite data and the desires types of data to be included in the visual representation using the editor toolbar  and\/or the inspector dialog . The map data and the related parameters, such as the geometry of the corresponding container and overlay selections, may be stored in a map reference entity. As discussed above, the composite document may include any number of other entities in addition to the map reference entity. During a presentation, the map data may be displayed in one or several presentation slides in accordance with the parameters and options specified in the edit mode. In some embodiments, the user may interact with the map data in the presentation mode to zoom in on the location being discussed in the corresponding presentation slide, pan from one location to another, etc. Moreover, depending on the user configuration, information such as traffic data may be updated in real-time during a presentation. On the other hand, if the composite document system cannot access the map data provider in the presentation mode, the snapshot included in the map image reference entity may be displayed in the corresponding container (such as the container ).","Referring to , a method  for generating a composite document that includes map data and 3D modeling data may be implemented in the composite document system . For example, the method  may be at least partially implemented in the 3D modeling engine  and the map data engine . It is noted that generating a composite document that includes map data and 3D modeling data is discussed by way of example only, and that in general, methods similar to the method  may be implemented to generate composite documents having other types of data in addition to map data, e.g., 2D drawing data, text data, image data, web page data, satellite and aerial image data, etc.","At block , 3D model data is received in, for example, a non-image format in which the corresponding 3D model was developed using another software application (such as the 3D modeling software  illustrated in ), and a model entity is generated that includes the received model data. Next, at block , map data is received. For example, in an embodiment, a reference to a geographic location is received from a user interface, and map data corresponding to the geographic location is automatically retrieved from a map data server (e.g., the map data server  of ). A map reference entity may be generated that includes, for example, the received map data and the reference to the geographic location. At block , a composite document that includes the model data and the map data received at blocks  and , respectively, is generated. The composite document accordingly may include a model entity and a map reference entity. In other scenarios, the composite document also may include text entities, image entities, sound entities, etc.","At block , the entities included in the composite document are rendered. To this end, in an embodiment, each of the modeling data and the map data is interpreted according to the format to which the respective data conforms. For example, the modeling data that conforms to a non-image format of a 3D modeling software is interpreted at block  so as to generate a raster image or a vector-based image, and the map data that conforms to a non-image format of a map data service may be interpreted and rendered at block  so as to generate a raster image or a vector-based image.","Processing Clipboard Data","As discussed above with reference to each of the web application engine , the satellite and aerial data engine , and the map data engine , text in the OS clipboard in some cases includes strings that can be parsed as URLs, geographic references such as street addresses, coordinates, or zip codes, etc. By way of further example,  illustrates a method  for automatically detecting and processing potential non-text based entities for use in a composite document. In an embodiment, the method  is implemented in the composite document system . In general, the method  may be applied to any memory buffer that includes text, including an OS clipboard.","At block , text is received from the clipboard of an operating system in which the corresponding composite document engine executes. For example, a user may copy a block of text from a text editing application, a browser application, a mailer application, a chat application, etc., and paste the copied text into a composite document. The text also may be parsed at block . If it is determined at block  that the text includes a potential reference to a non-text entity, the flow proceeds to block  if the potential reference is a web reference or to block  if the potential reference is a geographic reference. Otherwise, if the text does not include any potential references to non-text entities, the flow proceeds to block , where a text entity is generated to store the text pasted into the composite document from the OS clipboard.","At block , the user is asked to confirm that the detected potential reference to a web page should be processed as a web reference. For example, the detected potential reference to a web page may be a string that begins with \u201chttp:\/\/\u201d or \u201chttps:\/\/.\u201d If the user confirms that the string should be processed as a web reference, a web reference entity is created at block . The web reference entity may include the detected web reference and web page data provided by a source web page which the web reference identifies. Thus, according to an embodiment, web page data is automatically retrieved when the user confirms that the string should be processed as a web reference. On the other hand, if the user does not confirm that the string should be processed as a web reference, the flow proceeds to block .","At block , the user is asked to confirm that the detected potential reference to a geographic location should be processed as a geographic reference. For example, the detected potential reference to a geographic location may be a string that potentially includes a street address, a pair of coordinates, etc. If the user confirms that the string should be processed as a geographic reference, the user may be further prompted to select between satellite data and map data. If the user selects satellite data, a satellite image reference entity is generated at block . In some embodiments, the user may be allowed to select both options. If the user selects map data, a map reference entity is generated at block . In an embodiment, satellite data and\/or map data are retrieved according to the user selection and included in the corresponding entity. If the user does not confirm that the string should be processed as a geographic reference, the flow proceeds to block , and the string is processed as the text entity (or a portion of a text entity).","Additional Considerations","The following additional considerations apply to the foregoing discussion. Throughout this specification, plural instances may implement components, operations, or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations, one or more of the individual operations may be performed concurrently, and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the subject matter discussed in this disclosure.","Certain embodiments are described in this disclosure as including logic or a number of components, modules, or mechanisms. Modules may constitute either software modules (e.g., code embodied on a machine-readable medium or in a transmission signal) or hardware modules. A hardware module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments, one or more computer systems (e.g., a standalone, client or server computer system) or one or more hardware modules of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware module that operates to perform certain operations as described in this disclosure.","Unless specifically stated otherwise, discussions in this disclosure that use words such as \u201cprocessing,\u201d \u201ccomputing,\u201d \u201ccalculating,\u201d \u201cdetermining,\u201d \u201cpresenting,\u201d \u201cdisplaying,\u201d or the like may refer to actions or processes of a machine (e.g., a computer) that manipulates or transforms data represented as physical (e.g., electronic, magnetic, or optical) quantities within one or more memories (e.g., volatile memory, non-volatile memory, or a combination thereof), registers, or other machine components that receive, store, transmit, or display information.","As used in this disclosure, any reference to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular element, feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","As used in this disclosure, the terms \u201ccomprises,\u201d \u201ccomprising,\u201d \u201cincludes,\u201d \u201cincluding,\u201d \u201chas,\u201d \u201chaving\u201d or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. Further, unless expressly stated to the contrary, \u201cor\u201d refers to an inclusive or and not to an exclusive or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).","In addition, use of the \u201ca\u201d or \u201can\u201d are employed to describe elements and components of the embodiments discussed in this disclosure. This is done merely for convenience and to give a general sense of the invention. This description should be read to include one or at least one and the singular also includes the plural unless it is apparent that it is meant otherwise.","Upon reading this disclosure, those of ordinary skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for generating composite documents through the disclosed principles herein. Thus, while particular embodiments and applications have been illustrated and described, it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications, changes and variations, which will be apparent to those skilled in the art, may be made in the arrangement, operation and details of the method and apparatus disclosed in this document without departing from the spirit and scope defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 7","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 8","FIG. 3"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 11","FIG. 2"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 13","FIG. 11"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 14","FIG. 11"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 16","FIG. 2"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 17","FIG. 16"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 18","FIG. 16"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 19","FIG. 16"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
