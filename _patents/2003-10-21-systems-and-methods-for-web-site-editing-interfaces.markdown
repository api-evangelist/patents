---
title: Systems and methods for web site editing interfaces
abstract: A system and method for maintaining a Web site is disclosed that includes browsing to a Web page to be edited, automatically downloading a source file for the Web page including related files associated with display of the Web page, editing the source file, and automatically publishing the edited source file to a file transfer server associated with the Web site including the related files associated with the display of the Web page.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07941748&OS=07941748&RS=07941748
owner: Adobe Systems Incorporated
number: 07941748
owner_city: San Jose
owner_country: US
publication_date: 20031021
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present application is related to concurrently-filed, co-pending, and commonly assigned U.S. patent application Ser. No. 10\/690,980, entitled, \u201cCONTENT-RESTRICTED EDITING;\u201d U.S. patent application Ser. No. 10,689,870, entitled, \u201cAUTOMATIC SET UP FOR EDITING A WEB SITE;\u201d and U.S. patent application Ser. No. 10\/689,860, entitled, \u201cCROSS-PROTOCOL URL MAPPING,\u201d filed Oct. 21, 2003, the disclosures of which are hereby incorporated herein by reference.","The present invention relates, in general, to Web site development, and, more specifically, to a Web site management lifecycle.","Companies typically use the World Wide Web to disseminate information both internally, to employees and contractors, and externally, to customers and business partners. This information is usually generated by content contributors or subject matter experts (SMEs), who are typically people with expertise in the information domain, but who are not usually technically skilled. In order to publish this information to the Web, or edit the existing information already on a company Internet or Intranet Web site, SMEs typically work with technically skilled Web professionals or Web developers, who generally combine Web coding or computer programming skills and graphics design and presentation skills. Skilled Web professionals or Web developers are an expensive and limited resource. Moreover, multiple Web professionals or developers may be used to obtain expertise in both the coding and graphic arts.","Web sites and Web pages typically comprise a Web server, that serves the visual and data content to the user's browser many times in a format, such as hypertext markup language (HTML), and a file transfer server, that provides read and write-access to the files that make up the visual and data content of the Web sites. While Web servers and file transfer servers are usually conceptualized as separate and independent machines, they, in fact, are typically software applications, which often time run on the same computer. The underlying Web files are usually stored on that computer or a storage device accessible by that computer, while the Web server and file transfer server interact with those files in different ways. Web servers typically allow read-only access to the files through HTML browsers, compared to the read\/write-access usually allowed by the file transfer servers. Because file transfer servers typically allow read\/write-access to Web files, general or non-skilled users are not typically given access because changing files through the file transfer server will usually change how those corresponding Web pages are served to the accessing browsers. Web professionals spend a great deal of time designing the core of the Web sites by using specific formatting or style sheets, relational dependencies between linked documents or pages, and the coding that creates dynamic Web experiences. Thus, full access to the inner workings of such Web sites and pages is usually limited to the technically-savvy Web developers to preserve the stability and operation of the Web site. In such cases, even where only minimal changes to the content or information is contemplated, the SMEs typically still work with the Web developers to implement those information changes. However, this solution is quite expensive relative to the amount of changes contemplated.","Alternatively, eschewing the dangers, SMEs may be given access to the file transfer server to make information changes. Existing Web development environments, such as MACROMEDIA, INC.'S DREAMWEAVER\u2122, MICROSOFT CORPORATION'S FRONTPAGE\u2122, and the like, allow anyone, including SMEs, to edit and eventually publish Web pages by themselves. However, these Web development environments are typically created for the technically knowledgeable Web developers, and, therefore, may be too technically complicated for SMEs to use easily or successfully. The existing Web development environments generally assume that the users know (1) where the underlying Web files are located in the file structure of the Web site; (2) how to configure the various protocols, such as file transfer protocol (FTP), secure FTP (SFTP), local area network (LAN), and the like, typically used to store and access those Web files; and (3) how to manage the uploading and downloading of the Web files. SMEs and other non-technical users typically do not have the technical knowledge or skill to find or successfully use this information.","Interaction between the file transfer server and the Web server is not always a direct one-to-one correspondence. In non-dynamic Web sites, a one-to-one correspondence typically exists between files accessed through the file transfer server and the URLs accessed through the Web site. In dynamic Web sites, a uniform resource locator (URL) may map to a differently-named or located file on the file transfer server. The file transfer server is typically run using a specific transfer protocol, such as FTP, SFTP, LAN, or the like. While the Web server delivers HTML content to requesting browsers, it uses hypertext transfer protocol (HTTP) to transfer the requests and resulting HTML content between the user's browser and the Web server. Even though both FTP and HTTP are both transfer protocols, they are designed for different purposes and are not necessarily compatible.","For example, the file management system for HTTP will generally be different than that of FTP. HTTP is designed for more limited, yet ready access than FTP. HTTP communications revolve around establishing communication between a browser and a Web server in which HTML documents and any supporting documents that correspond to an HTTP request are transmitted from the Web server (sometimes called an HTTP server) to the browser to be rendered to the user. An example HTTP request is: http:\/\/www.macromedia.com\/index.html. The example request would likely be entered by a user into a Web browser. The http:\/\/ indicates the request is an HTTP request. The www.macromedia.com indicates the specific Web server domain to which the request is directed. Index.html is the specific file requested for display. Upon receiving this request, the Web server would typically communicate a read-only HTML file to the requesting browser for display. If a user were to enter a bare directory URL, such as http:\/\/www.macromedia.com\/, an HTTP server would resolve the directory to the index file.","In contrast, FTP includes functions for logging onto the network, listing directories, copying files, and the like. An example FTP command is: ftp:\/\/user:password@ftp.macromedia.com. When entered in a browser, the ftp:\/\/ indicates that the request is an FTP request. The ftp.macromedia.com is the name of the FTP domain that the user wishes to log onto, and the user:password section is the user's password entry for logging onto the FTP server. Once logged on, the user can download and store files, view directories of the files on the FTP server and the like, depending, in general, on the level of authorization the particular user has for that particular FTP server. However, if the user were looking for the index.html file from the HTTP example, it would likely not be found if the user attempted to access ftp.macromedia.com\/index.html. In actual use, the root directory of the file transfer server for www.macromedia.com would likely not be found in ftp:\/\/ftp.macromedia.com. For security reasons, the root directory would likely be found in a directory with a dissimilar name. The user would generally need to obtain the FTP path that corresponds to that particular Web site. Furthermore, if a bare directory address were entered, such as ftp:\/\/ftp.macromedia.com\/, an FTP server will usually not resolve the requested directory to access the index file, as with the HTTP server.","In order to access the FTP server, a Web designer or developer is generally prompted by the server access application to provide the FTP host name, the FTP login, the FTP password, and the FTP path. While the FTP host name, login, and password are usually the pieces of information that will get the user onto the FTP server, without the FTP root path name, a user will not likely find the location on the FTP server where the underlying Web files are located. For most experienced designers or developers all of this information is relatively easy to know and\/or obtain. A novice or non-technical user, such as a typical SME, may know the FTP host name, login, and password, but would generally not know the FTP root path; and, without the root path, the FTP server will generally not allow access to the appropriate file locations. Most novice users typically do not have even a basic knowledge of how URLs map to FTP paths. The Web master that manages the Web site could give this information to the SMEs. However, they are typically reluctant to do so since the possibilities for the SME to corrupt the Web site are usually great. Without knowledge of the FTP server system, it would be difficult for an SME to understand the location of the underlying Web files, and, thus, how to configure the various protocols or manage the uploading and downloading of the edited Web files. Having the Web developers assist in information updates or creating a customized system for updating information each offer expensive solutions to the Web development lifecycle.","In order to increase the ease of Web development and maintenance, Web development environments have advanced to automate or abstract some of the more technically oriented tasks involved in Web design and publishing. NETSCAPE COMMUNICATIONS CORPORATION's COMPOSER\u2122 implemented a browse-edit paradigm of Web maintenance. Most individuals are comfortable and experienced with the concept and act of browsing. Using COMPOSER\u2122, a user could browse to a particular Web page that he or she desired to edit and click an \u201cEdit Page\u201d button to edit the underlying Web source file. If all of the authorizations and addresses were previously set up, COMPOSER\u2122 would open a separate window with the underlying source file of that Web page. The user could then edit that file and save it locally for possible uploading back to the Web site through its FTP. MICROSOFT CORPORATION's INTERNET EXPLORER\u2122 also includes a version of the browse-edit paradigm. On selection of an \u201cEdit in FrontPage\u201d button, INTERNET EXPLORER\u2122 starts an instance of MICROSOFT CORPORATION's FRONTPAGE\u2122 in a separate window with the Web page file to be edited, again, if the authorizations and file addresses were already set up in advance. Both of these Web development environments allow the user to edit the Web page and store it locally for future action. However, in order to upload the modified Web page to the Web site, the file still needs to be communicated to the Web site through its file transfer server, typically by a Web developer. Therefore, while the browse-edit paradigm streamlines the editing process, the limited amount of editing available to the SME still needs to be uploaded by a Web professional.","Moreover, the browse-edit paradigm, of COMPOSER\u2122 and FRONTPAGE\u2122, provides a solution for simple Web pages that do not have complex dependencies and links. These development environments are not capable of automatically handling the complex document dependencies and links found in most Web pages. Furthermore, COMPOSER\u2122 and FRONTPAGE\u2122 typically may only edit existing pages in the browse-edit paradigm implementation. Because of their deficiencies in handling the links and dependencies, when pages are added or deleted to a Web site, COMPOSER\u2122 and FRONTPAGE\u2122 generally do not automatically update and amend the dependencies and links of the other related pages in the Web site that may need to be updated to either add the new page or delete references to the deleted page. The browse-edit paradigm practiced by COMPOSER\u2122 and FRONTPAGE\u2122 simply does not have the capability to modify Web pages other than the actual page being edited.","The limitations of the browse-edit paradigm are addressed by the Web site management lifecycle described herein. A page editing interface is provided to a user that allows the user to seamlessly browse to a Web page to be edited, edit that page, including any page-dependant files or links, and publish the edited Web page back through the file transfer server without requiring fore knowledge of the file transfer filing system. Each stage of the Web site management lifecycle is presented seamless to the user. The browser embedded in the page editor seamlessly morphs to the edit window, appearing to the user to be a single interface environment. Similarly, when the user publishes the edited content back to the Web site, the edit window seamlessly morphs back to the browser, which then displays the edited Web page to the user through the Web server.","Page-related dependencies, such as linked files and images, are maintained within the page editor in addition to the source code of the Web page to be edited. In this manner, the dependencies may be maintained throughout the edits. Also, the dependency management allows users to add and subtract entire Web pages or dependent files by implementing a process for the page editor to update the links to the new or deleted files.","The Web site management lifecycle includes at its core the ability to automatically map the edited files and their dependents to and from the user's local computer and between the Web server and file transfer server. This mapping allows the user to automatically download the source files for the Web site and its dependencies to be edited and then automatically publish the edited results back to the appropriated locations through the file transfer server associated with the Web site. By including each of the capabilities in the single, seamless page editor, each stage of the Web site management lifecycle is addressed.","The foregoing has outlined rather broadly the features and technical advantages of the present invention in order that the detailed description of the invention that follows may be better understood. Additional features and advantages of the invention will be described hereinafter which form the subject of the claims of the invention. It should be appreciated that the conception and specific embodiment disclosed may be readily utilized as a basis for modifying or designing other structures for carrying out the same purposes of the present invention. It should also be realized that such equivalent constructions do not depart from the invention as set forth in the appended claims. The novel features which are believed to be characteristic of the invention, both as to its organization and method of operation, together with further objects and advantages will be better understood from the following description when considered in connection with the accompanying figures. It is to be expressly understood, however, that each of the figures is provided for the purpose of illustration and description only and is not intended as a definition of the limits of the present invention.","The browse-edit paradigm may be greatly improved by adding an automated publish functionality. A browse-edit-publish paradigm solves the problem of mapping the edited Web page back to the Web site through the file transfer server. One method for solving this file transfer mapping involves technology developed by MACROMEDIA, INC. Automatic initial discovery of the file transfer root directory for a particular Web site is disclosed in concurrently-filed, commonly-owned U.S. patent application Ser. No. 10,689,870, entitled, \u201cAUTOMATIC SET UP FOR EDITING A WEB SITE,\u201d the disclosure of which is hereby incorporated herein by reference. The protocol mapping process between the source files as accessed through a Web server to the source files accessed through a file transfer server is disclosed in concurrently-filed, commonly-owned U.S. patent application Ser. No. 10\/689,860, entitled, \u201cCROSS-PROTOCOL URL MAPPING,\u201d the disclosure of which is hereby incorporated herein by reference. The browse-edit-publish paradigm is also enhanced by making the process seamless to the user and handling each of the dependencies for the edited Web pages. The creation of a seamless interface and dependent file-handling allows the user to maintain the familiarity with the browsing process, while controlling the whole process of Web site maintenance. Therefore, the embodiments of the present invention extend beyond a browse-edit-publish paradigm to a Web site management lifecycle.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1A","b":["10","100","101","100","103","102","102","102","100"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 1B","FIG. 1A"],"b":["10","102","100","104","103"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 1C","FIG. 1C"],"b":["10","105","100","105","100","105","100","105","108","107","105","106","107"]},"It should be noted that various embodiments of the present invention may safeguard the design and formatting of the Web site by restricting the editing ability of the user to only the content or textual information. Moreover, any new documents created by a user may be constrained to the formatting sequence or particular cascading style sheets (CSS). Thus, when a new document is created by the user, it automatically comes up pre-formatted to the specific formatting sequence of CSS used by the rest of the Web site, much like a template. One method for implementing these safeguard restrictions is disclosed in concurrently-filed, commonly-owned U.S. patent application Ser. No. 10\/690,980, entitled, \u201cCONTENT-RESTRICTED EDITING,\u201d the disclosure of which is hereby incorporated herein by reference.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1D","FIG. 1C"],"b":["10","100","107","10","100","104"]},"While previous Web development environments have included tools to assist in the publishing of the edited Web content, none have been capable of automatically browsing, editing, and then publishing the edited Web content in a seamless interface. Moreover, previous Web development environments have been incapable of handling the dependent file relationships of edited Web pages.  is a flowchart illustrating the core steps executed in the implementation of an embodiment of the present invention. In step , the user browses to the desired Web page to be edited in the same, well-understood manner used in typically Web browsers. In step , the user edits the Web page by activating the editing feature and making the modifications. In step , after the user is finished editing, he or she may publish the edited Web page and each of its dependencies through the file transfer server of the Web site.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3","b":["300","301","302"]},"Once the target Web page has been scanned, the underlying source file for the target Web page is downloaded via the file transfer server in step , along with any of the related, page-dependent files or links. The user may then edit the Web page in step . Once the edits have been complete, and the user indicates to publish the edited Web page, the edited file is scanned once again, in step , for any page-dependent files or links that may have been modified, added, or deleted during the editing process. In step , the source file for the edited Web page along with any of its dependencies that were modified or that are not already on the file transfer server are mapped to the filing system hierarchy of the Web site's file transfer server. This mapping includes modification of each of the local links that were made to new files during the editing process. Thus, a new image added to the Web page from the user's local disk drive would be remapped to the appropriate address for the file transfer server. In step , the edited Web page and all of the new or modified dependent files are uploaded to the Web site through the file transfer server.","As previously disclosed, the file mapping between the HTTP address methodology and the file transfer address methodology may be implemented by concurrently-filed, commonly-owned, U.S. patent application Ser. No. 10,689,870, entitled, \u201cAUTOMATIC SET UP FOR EDITING A WEB SITE;\u201d and U.S. patent application Ser. No. 10\/689,860, entitled, \u201cCROSS-PROTOCOL URL MAPPING,\u201d the disclosures of which are incorporated herein by reference.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 4","FIG. 4"]},"In step , the user browses to the desired Web page to be modified. As the user browses to the specific page, the Web server runs the server-side code which generates the HTML for the Web page and pulls the information that is inserted into the Web page from a related database. In step , the user activates the modify function. In response to the modify function activation, the system scans the generated Web page, in step , to identify the elements of that Web page that were generated from the database information. The generated Web page and its dependents are then downloaded in step  and modified according to the user's preferences in step .","After completing the modifications, the user activates the publish function in step . In response to the publish function, the modified Web page is again scanned, in step , to identify the elements generated from the related database that the user modified. These modified database elements are then extracted from the Web page in step , after which the system uses the file transfer information to modify the content of the database in step . Any Web page dependents or links that may also have been added are then also updated on the Web site in step .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 5","b":["50","500","500","502","501","502","500","503","504","502","503","505"]},"In relation to the present invention, computer  runs a page editor that has been configured consistent with an embodiment of the present invention. Upon initiation of the page editor, the editor discovers the root directory corresponding to the Web site on FTP server . One method for implementing this task is described in concurrently-filed, commonly-owned, U.S. patent application Ser. No. 10,689,870, entitled, \u201cAUTOMATIC SET UP FOR EDITING A WEB SITE.\u201d","For example, as noted in the '534 patent, a development environment can ask the user to supply a file transfer server host name, login, and password, in order to be able to access and log into the file transfer server. The development environment attempts to discover the Web server root directory name or path by heuristically attempting to write test or sample files to the file transfer server using a list or database of commonly used file transfer path or root directory names. Each time a sample file is written to a specific root directory, the development environment make a hypertext transfer protocol (HTTP) request to the Web server hosting the target Web site, to view the sample file.","If the file transfer path or root directory name used was correct the Web server will return a read-only copy the correct file to the browser at the computer where the development environment is being run. However, if the path or directory name used was not correct, either an error message or a different file will be returned to the browser. The development environment recognizes this incorrect file or error message and uses the next available file transfer path or root directory name on the list. Each available common path or directory name is attempted until either the correct path or root directory is found, or the web development environment runs out of common names. When no more names are available, the user interface of the development environment resorts to requesting the correct path or root directory name from the user.","As the user enters browse mode , the browser embedded within the page editor establishes a connection with Web server  through Internet  to view the desired Web site. The user may then browse, through Web server , to the specific page that he or she desires to edit. When the user selects to enter edit mode , the connection with Web server  is maintained. The page editor scans the source file of the selected Web page, which may be viewed from Web server , to determine the different dependencies, links, or database  elements contained within the Web page. A connection is then established between computer  and FTP server  through Internet  to access and download the underlying source files for the Web page and its page-dependent files, links, or database  elements. The connection with Web server  may be maintained or ended. However, only the connection to FTP server  will be visible to the user at computer .","Once the appropriate files have been downloaded to computer , the user may edit as desired. In some cases, the user may choose to add or delete dependent files or even entire Web pages. When such files or pages are added, they would be stored locally on local storage . As the user edits the Web pages, the links to the appropriate new files and pages would reference the URL to local storage . When the user is finished editing, he or she enters publish mode .","Upon entry of publish mode , the page editor again scans the edited file for modifications in the page-dependent files, links, and database  elements. In preparation for uploading the edited Web page, the page editor maps all of the new documents, whether they are modifications of the existing page-dependent files or whether they are wholly new Web pages or new page-dependent files, to the appropriated location addresses for the filing system of FTP server . A method for implementing this cross-protocol mapping is disclosed in concurrently-filed, commonly-owned U.S. patent application Ser. No. 10\/689,860, entitled, \u201cCROSS-PROTOCOL URL MAPPING.\u201d Moreover, any links within the modified Web page to files that had been added and stored locally during the editing process will be updated to reflect the appropriate file transfer addresses appropriated for those files, or their links would be removed if the associated file was also deleted. Once this mapping has occurred, computer  uploads the modified Web page to its appropriated location on host computer  and\/or database  through FTP server . This may include updating database  with modified, added, or deleted database elements in examples where the modified Web page is a dynamically-generated Web page. The completion of publish mode  returns the user automatically and seamlessly to browse mode , in which the connection with Web server  is either brought to the front again or reestablished.","For example, mapping of a URL for a Web file stored according to an HTTP server file system to the URL of that file as it is stored according to a file transfer server file system, such as an FTP server can be useful in maintaining and editing Web sites, and thus may be included as a feature in a Web development environment. The process begins with two pieces of information: the base URL of the underlying Web site and the base root directory name of that Web site on the FTP server. Both the base URL and the base root directory name may be obtained by a user, but preferred embodiments of the present invention may obtain the base URL from a user and the base root directory name automatically from a Web development environment.","As the user of the Web development environment enters the specific URL of the Web page desired to be edited, the mapping method compares the base Web site URL to the exact URL of the Web page. Any address elements that extend beyond that of the base Web site URL are stripped off as the relative address of that Web file. The address is then mapped into the file transfer URL by adding the relative address to the FTP base root directory associated with the Web site. The new address is the complete file transfer URL for the Web page file to be edited. The Web development environment may then use that file transfer URL to retrieve the appropriate file from the FTP server. Thus, the file transfer URL is determined automatically, without the user needing to have that specific information.","Although the present invention and its advantages have been described in detail, it should be understood that various changes, substitutions and alterations can be made herein without departing from the invention as defined by the appended claims. Moreover, the scope of the present application is not intended to be limited to the particular embodiments of the process, machine, manufacture, composition of matter, means, methods and steps described in the specification. As one will readily appreciate from the disclosure, processes, machines, manufacture, compositions of matter, means, methods, or steps, presently existing or later to be developed that perform substantially the same function or achieve substantially the same result as the corresponding embodiments described herein may be utilized. Accordingly, the appended claims are intended to include within their scope such processes, machines, manufacture, compositions of matter, means, methods, or steps."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present invention, reference is now made to the following descriptions taken in conjunction with the accompanying drawing, in which:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 1A-1D"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
