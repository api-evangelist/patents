---
title: Enhanced push notification services
abstract: A push notification server operates on a client device to manage push notifications that the client device receives from various push servers. In some embodiments, the push notification server may receive a notification message on behalf of an application and determine how to handle the notification message based on whether the application is operating on the client device. If the application is operating on the client device, the push notification server may deliver the notification message to the application. If the application is not operating on the client device, the push notification server may deregister the application from the push notification service, and/or display user information associated with the application in order to inform the user that the application is not operating.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08595345&OS=08595345&RS=08595345
owner: mFluent LLC
number: 08595345
owner_city: Algonquin
owner_country: US
publication_date: 20110526
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","OVERVIEW","DESCRIPTION","IV. CONCLUSION"],"p":["Traditional client-server communication is based on \u201cpull\u201d messaging. Under this paradigm, in order to access information at a server device, a client device transmits a request for the information to the server device. In response to this request, the server device may transmit a copy of the requested information. Pull messaging may be effective for some applications, such as file downloads and web browsing. However, it is typically inefficient for applications in which information for the client device arrives asynchronously, such as email and instant messaging applications.","An alternative approach, called \u201cpush\u201d messaging, has also been proposed. Using push messaging, a client device registers with a server device, and the server device transmits information to the client device as that information arrives at the server device. Nonetheless, despite exhibiting some advantages over pull messaging, push messaging can also be inefficient in many practical scenarios.","In order to overcome the inefficiencies of both pull and push messaging, the methods, devices, and systems herein may involve various enhancements to push messaging. Some of these enhancements may include aspects of pull messaging, thereby combining push and pull messaging when doing so is appropriate.","Wireless communication devices, such as mobile phones, tablet computers, and laptop computers, may operate as client devices. However, the network capacity available to wireless communication devices may be limited by a relatively low-speed wireless air interface link connecting them to other networks, such as the Internet. Further, some wireless service providers charge users of wireless communication devices based on minutes of use and\/or the volume of data communicated via these wireless air interface links. As a result, it may be desirable to minimize, or at least reduce, the communication between wireless communication devices and server devices.","In at least some embodiments, push messaging may be enhanced by employing a push notification server on a client device. The push notification server may, for example, receive push notifications on behalf of multiple applications capable of operating on the client device. Thus, the push notification server may receive email notifications from email servers, instant messaging notifications from instant messaging servers, and so on.","Additionally, the push notification server may communicate with a push notification gateway that could be located on a different network from the client device. The push notification gateway, in turn, may receive push notifications from the various push services (e.g., email, instant messaging, etc.) with which the client has subscribed. By aggregating push notifications on one or more communication sessions between the push notification server (which is operating on the client device) and the push notification gateway, push messaging between these devices can be more precisely managed and controlled.","An example of a possible enhancement to push messaging that this architecture allows involves management of connection termination messages. When an application operating on a client device subscribes to a push service from a particular push server, the application may be considered to have a \u201cconnection\u201d with this push server. For various reasons, a push server may transmit a notification to the client device indicating that the push server has terminated the client device's connection, thus ending the client device's ability to receive notifications from the push server.","For instance, if the push server is an instant messaging server, it may allow only one client device at a time to log in to a particular instant messaging account. If a user of a wireless communication device logs in to the instant messaging account via the wireless communication device, then logs into the instant messaging account via a desktop computer, the instant messaging server may transmit a connection termination message to the wireless communication device.","Accordingly, a push notification server that is operating on such a client device may receive such a connection termination message. The connection termination message may seek to terminate an application that is registered, via the push notification server, with a push notification service. Possibly in response to receiving the connection termination message, the push notification server may determine whether the application is operating on the client device.","If the application is operating on the client device, the push notification server may notify the application that the connection termination message was received (e.g., the push notification server may deliver the connection termination message, or a variation thereof, to the application). On the other hand, if the application is not operating on the client device, the push notification server may deregister the application from the push notification service. By deregistering the application in this fashion, the push notification server may no longer listen for and\/or react to notifications for the application.","Additionally, if after this deregistration takes place there are no more applications on the client device registered to receive push notifications, the push notification server may seek to prevent the client device from receiving any further push notifications. For example, the push notification server may inform the push notification gateway that the push notification gateway should not transmit push notifications to the client device. As a result, network capacity between the client device and the push notification gateway is conserved.","In another example embodiment, the push notification server operating on a client device may display user information on behalf of an application when the application is not operating on the client device. The user information may be related to an account that the user of the client device has established to use the application. To this end, the push notification server may obtain the user information. This user information may be a userid, an email address or some other information associated with a user. The application may be registered with a push notification service facilitated by the push notification server, and the application may be capable of operating on the client device.","Possibly in response to obtaining the user information, the push notification server may determine that the application is not operating on the client device. There are several potential scenarios in which an application that is not operating might remain registered with a push notification service. For instance, the application may have terminated but did not deregister with the push notification service prior to terminating. Alternatively, the application may have attempted to deregister with the push notification service prior to terminating, but failed to do so properly (e.g., a message indicating the deregistration may have been lost on the network between the client device and the push notification gateway). Regardless, the push notification server may display at least a portion of the user information on a user interface of the client device on behalf of the application. In this way, the user is notified regarding activity involving (or information regarding) their account with a push server, without the application having to be launched.","These and other aspects and advantages will become apparent to those of ordinary skill in the art by reading the following detailed description, with reference where appropriate to the accompanying drawings. Further, it should be understood that this overview and the description throughout this document is merely for purposes of example and is not intended to limit the scope of the invention as claimed.","I. Network Architecture",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","102","104","106"]},"Wireless network  may operate according to one or more wireless technologies, such as Code Division Multiple Access (CDMA), Worldwide Interoperability for Microwave Access (WIMAX\u00ae), Universal Mobile Telecommunications System (UMTS\u00ae), Long Term Evolution (LTE\u00ae), IDEN\u00ae, or 802.11 (Wifi). Thus, wireless network  may be a wide-area, metropolitan-area, local-area, or personal-area wireless network. However, in some embodiments, client devices  and  may not support wireless networking, and as a result wireless network  could be replaced with a wireline network.","Wireless network  may communicatively connect client devices  and  to email server , messaging server A , messaging server B , and possibly other servers as well. Client devices  and  may be able to communicate directly with each of email server , messaging server A , and messaging server B . Client devices  and  may also be able to communicate with these servers via push notification gateway .","Email server , messaging server A , messaging server B , and push notification gateway  may be located with one another in the same network, or in two or more different networks. For example email server , messaging server A , messaging server B , and push notification gateway  may each be located in a different private network, and these private networks may be connected to one another by a public network such as the Internet.","Email server  may operate according to one or more types of standard or proprietary email protocols, such as the Post Office Protocol (POP), the Internet Message Access Protocol (IMAP), MICROSOFT EXCHANGE\u00ae, or various types of web-based email protocols. Messaging servers A and B may operate according to one or more types of standard or proprietary messaging protocols. These messaging protocols may be instant messaging protocols, such as the eXtensible Messaging and Presence Protocol (XMPP), or other types of messaging protocols.","As shown in callout , client device  may contain various modules that supply client device  with functionality (client device  may contain similar modules that are not show for purposes of simplicity). These modules may be, for instance, software programs that work independently or in conjunction with one another to supply the functionality. In some cases, this functionality may include functionality for communicating with one or more of email server , messaging server A , and messaging server B . For example, an email application  (denoted as \u201cemail app\u201d), messaging application A  (denoted as \u201cmessaging app A\u201d), and messaging application B  (denoted \u201cmessaging app B\u201d) may be able to communicate with email server , messaging server A , and messaging server B , respectively.","Client device  may also include a registry  and a push notification server . Registry  may serve as a database in which one or more of email application , messaging application A , and messaging application B  store configuration information, run-time data, or anything else that needs to be shared between these applications and other programs operated on client device . In some embodiments, registry  can be a short message service (SMS) registry, a file, a file system, or a relational or object database.","As will be described in more detail below, push notification server  may communicate with push notification gateway  on behalf of email application , messaging application A , and\/or messaging application B  to facilitate enhanced push notification services. As part of this communication, push notification server  may, from time to time, store information in registry  and\/or access information stored in registry . Such information may relate to one or more of email application , messaging application A , and messaging application B .","In general, the communication system of  is illustrative. In such a communication system, there could be more or fewer of each element than is shown, and some elements may be omitted altogether. Additionally, other types of elements not shown may be present. Further, any of these elements may be combined with one another, physically or logically, or distributed across multiple physical devices. Thus, the particular arrangements shown in  should not be viewed as limiting with respect to the present embodiments.","For example, in addition to email and messaging applications, client device  may be capable of operating other types of applications that benefit from enhanced push notification services. These applications may include location-based applications, telematics applications, sensor-based applications, multimedia applications, and some types of web-based applications.","II. Client Device Functionality",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2","b":["102","102","102","102","102"]},"Client device  may include a processor , a data storage , a network interface , and an input\/output function , all of which may be coupled by a system bus  or a similar mechanism. Processor  may include one or more CPUs, such as one or more general purpose processors and\/or one or more dedicated processors (e.g., application specific integrated circuits (ASICs) or digital signal processors (DSPs), etc.)","Data storage , in turn, may comprise volatile and\/or non-volatile data storage and can be integrated in whole or in part with processor . Data storage  may store program instructions, executable by processor , and data that is manipulated by these instructions to carry out the various methods, processes, or functions described herein. Alternatively, these methods, processes, or functions can be defined by hardware, firmware, and\/or any combination of hardware, firmware and software. Therefore, data storage  may be a non-transitory computer-readable medium, having stored thereon program instructions that, if executed by client device, cause the client device to carry out any of the methods, processes, or functions disclosed in this specification or the accompanying drawings.","Network interface  may be an interface for a wireline connection, such as an Ethernet, Token Ring, or T-carrier connection. Alternatively or additionally, network interface  may be an interface for a wireless connection, such as IEEE 802.11 (Wifi), BLUETOOTH\u00ae, or a wide-area wireless connection. However, network interface  may support other forms of physical layer connections and other types of standard or proprietary communication protocols. Furthermore, network interface  may comprise multiple physical communication interfaces.","Input\/output function  may facilitate user interaction with example client device . Input\/output function  may comprise one or more of any type of input device, such as a keypad, a keyboard, a mouse, a scroll wheel, a microphone, a joystick, a touch screen, a switch, a button, etc. Similarly, input\/output function  may comprise one or more of any type of output device, such as a video screen, a monitor, a printer, a speaker, a light emitting diode (LED), etc. Additionally or alternatively, example client device  may support remote access from another device, via network interface  or via another interface (not shown), such an RS-232 or Universal Serial Bus (USB) port.","III. Push Messaging","In an example embodiment, push messaging involves a server device initiating a transmission to a client device without the client device requesting the specific information that is transmitted. This is in contrast to traditional pull messaging, in which a client device requests the specific information from the server device and the server device transmits that specific information to the client device in response to the request. However, push messaging may involve the client device transmitting a request to the server device to identify the general type of information that the client device is seeking When the server device determines that information of this general type is available, the server device may asynchronously transmit the information to the client device.","Push messaging may be facilitated by a \u201csubscribe\/notify\u201d arrangement. The client device may subscribe to receive information that may subsequently become available to the server device. If and when this information becomes available to the server device, the server device may transmit a notification to the client device at some point thereafter, indicating the availability of the information. In some cases, the notification may include a copy of at least some of the information.","One example of how push messaging can facilitate efficient communication is with email protocols. For instance, an email user may have an account with an email service that is hosted on an email server. Email messages sent to the user arrive at the email server and are stored therein. When the user accesses the email server via a client device, the email server may transmit copies of these email messages to the client device. Due to the asynchronous nature of email, email protocols may not be efficiently handled by pull messaging. For example, email message arrivals may be bursty, resulting in many email messages arriving in a short period of time, and then minutes or hours passing before further email messages arrive. If the client device periodically accesses the email server, or if the user manually accesses the email server from time to time, processing capacity at the client device and the server device, as well as network capacity in between these devices could be wasted.","As an alternative, the client device may subscribe to the email server. Then, when email messages arrive for the user, the email server may notify the client device of the arrival of the email messages. Once notified, the client device may request copies of the email messages from the email server. In this way, processing capacity and network capacity used to handle these email messages are conserved. Additionally, the email server may be configured to transmit no more than one notification per n seconds to any given client device. This allows multiple email messages to arrive at the email server before the email server transmits a notification to the client device, conserving further processing power and network capacity.","Another example of how push messaging can facilitate efficient communication is with messaging protocols. In particular, instant messaging protocols may include support for substantially real-time text communication between two or more users. Some instant messaging protocols also support file sharing and audio and\/or video conferencing.","For example, an instant messaging user may have an account with an instant messaging service that is hosted on an instant messaging server. Instant messages sent to the user arrive at the instant messaging server. If the user is logged on to the instant messaging server, the instant messaging server may transmit these instant messages to an instant messaging application on the user's client device.","Alternatively, instant messaging services may use a subscribe\/notify arrangement. For example, the client device may subscribe to the instant messaging server. Then, when instant messages arrive for the user, the instant messaging server may notify the client device of the arrival of the instant messages. Once notified, the client device may request copies of the instant messages from the instant messaging server. In this way, instant messages are delivered in a timely fashion while processing capacity and network capacity are conserved.","In some cases the notifications discussed herein may share the same communication channel as the information that a server device transmits to a client device. This arrangement will be referred to as in-band communication. Alternatively, the server device may transmit this information on a different communication channel. This alternate arrangement will be referred to as out-of-band communication. Instant messaging services may use in-band communication for notifications, because the type of communication used with many instant messaging protocols comprises short strings of text. Thus, these strings of text can be delivered with the notification or may serve as the notification itself. On the other hand, email services may use out-of-band communication for notifications. Because email messages can be quite large, it may not be efficient to push entire email messages to the client device along with their respective notifications.","Turning back to , the use of push notification server  and push notification gateway  as a conduit for push notifications can increase the efficiency of push communications. For example, email server , messaging server A  and messaging server B  may be configured to transmit notifications to client device  via push notification gateway . Push notification gateway , in turn, may transmit these notifications in a multiplexed fashion over a push channel to client device . At client device , push notification server  may receive the multiplexed notifications, de-multiplex these notifications, and deliver them to the appropriate application operating on client device .","During any of these transactions, the format of the notifications may be changed. For instance, push notification gateway  may translate notifications received from email server , messaging server A , and\/or messaging server B  to a common format for transmission to client device . Push notification server  may further translate the notifications from the common format to formats supported by email application , messaging application A  and messaging application B , respectively.","IV. Example Message Flows","The message flows of , A, B, , , and  provide examples of how push notification server  and push notification gateway  may operate to enable efficient push communication. Each of these message flows depict possible sequences of messages and associated processing that may occur in the embodiments herein. It is to be understood, however, that the depicted sequences of messages may are merely illustrative, as additional or alternative messages could be used.","Further, the messages are named based on a general description of their functionality, but their names are not intended to be limiting. Thus, for instance, a message with a particular name might map to different types of messages employed by different communication protocols. Moreover, the contents of these messages, when included, are also for purposes of example. Embodiments incorporating the messages depicted in these figures may include more or less information of the same or of a different category than shown.","Also, each message depicted in these figures may relate to a form of communication over a packet-switched network, such as a private Internet Protocol (IP) network or the Internet. Thus, each message may be embodied by one or more packets, or streams of packets, transmitted between networked devices.","a. Device Registration","In , message flow  depicts client device  communicating with push notification gateway . As shown in , client device  may include a number of modules, such as email application , messaging application A , registry , and push notification server . Messaging application B  and messaging server B  are omitted from , as well as the remaining figures, for purposes of simplicity.","At step , client device  may initialize. This initialization process may include one or more steps, such as client device  booting, reading configuration files, and\/or initializing network interfaces. During or shortly after booting, client device  may launch push notification server . Email application  and\/or messaging application A  may also be launched at this point or later.","At step , push notification server  may determine one or more identifiers of client device . These identifiers may be, for example, an International Mobile Equipment Identity (IMEI), Electronic Serial Number (ESN), Mobile Equipment Identifier (MEID), Mobile Directory Number (MDN), or some form of data-link layer address, such as an IEEE 802 address (e.g., an address in the Ethernet or Wifi media-access (MAC) address format). Push notification server  may determine these addresses by querying an appropriate application programming interface (API) supported by client device , or by reading these addresses from memory. In some embodiments, push notification server  may primarily use the IMEI and MDN of client device . In these embodiments, the IMEI may be used as a hardware identifier to signify client device , while the MDN may be used as a user identifier, to signify the user of client device . The MDN may take the form of a phone number assigned to the user.","At step , push notification server  may transmit a REGISTER-DEVICE message to push notification gateway . This message may include one or more identifiers of client device  (e.g., the IMEI and MDN discussed above). Push notification server  may use the HyperText Transfer Protocol (HTTP) for communicating with push notification gateway . Thus, the REGISTER-DEVICE message could be formed based on an HTTP GET request to a uniform resource locator (URL). An example of such a URL may be:\n\n","In this example URL, the SERVER field may include a domain name system (DNS) address or IP address of push notification gateway . The PORT field may indicate a Transmission Control Protocol (TCP) or User Datagram Protocol (UDP) port at push notification gateway , on which push notification gateway  listens for REGISTER-DEVICE messages. The example URL also indicates that the IMEI of client device  is AB0937735DF, and that the MDN assigned to the user of client device  is 18475551212. In this example, the URL further includes an optional random number, 12778947674, that can be used as a \u201ccache buster.\u201d Use of such a random number may prevent one or more HTTP proxy devices between client device  and push notification gateway  from returning cached content.","At step , push notification gateway  may transmit a REGISTER-DEVICE-RESPONSE message to push notification server . The format of the REGISTER-DEVICE-RESPONSE message may be that of an HTTP response, such as an HTTP 200 OK message. An example payload of the REGISTER-DEVICE-RESPONSE message may include the following information.",{"@attributes":{"id":"p-0061","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Content-Type: application\/json;charset=utf-8"]},{"entry":[{},". . ."]},{"entry":[{},"\u201ctoken\u201d : \u201cQmFzZTY0W0JpbmFyeSBEYXRhXQ==\u201d,"]},{"entry":[{},"\u201cidleTimeout\u201d : \u201c36000\u201d"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this example, the Content-Type field indicates that the message is to be interpreted as a JavaScript Object Notation (JSON) message with the Universal Character Set Transformation Format 8-bit (UTF-8) character set. It should be appreciated that JSON is a standard for text-based, human-readable information exchange using data structures such as associative arrays. The data structure following the Content-Type field includes a token that has the value \u201cQmFzZTY0W0JpbmFyeSBEYXRhXQ==\u201d, and specifies an idle timeout with the value 36000. The token may be a locally or globally unique device identifier that push notification gateway  assigns to client device . The idle timeout may be the number of seconds that push notification gateway  will maintain an idle session between push notification server  and push notification gateway .","Thus, the HTTP GET request may establish a long-lived TCP\/IP socket between push notification server  and push notification gateway . A long-lived socket used for push communication may be based to some extent on technologies such as COMET, Asynchronous JavaScript and XML (AJAX), HyperText Markup Language 5 (HTML 5) server-sent events, or some other mechanism. This socket may be used for further communication between push notification server  and push notification gateway , such as notifications transmitted by push notification gateway . If the socket is idle for 36000 seconds, push notification gateway  may close the socket, rendering it unavailable for communication. In order to prevent the socket from being closed, push notification server  may periodically, or from time to time, poll push notification gateway  via the socket. This poll may be initiated by push notification server  transmitting an HTTP GET request on the open socket to a URL such as:\n\n","In this URL, the SERVER field may include a DNS address or IP address of push notification gateway , the PORT field may indicate a TCP or UDP port at push notification gateway  on which push notification gateway  listens for polling messages. The URL may also include the token assigned to client device  and a random number used as a cache buster. If for some reason push notification server  fails to poll push notification gateway  before push notification gateway  closes the socket, push notification server  may rapidly open a new socket to push notification gateway . Then, push notification server  and push notification gateway  may use this new socket for transmitting notifications and polls.","The number and\/or frequency of this polling may be configurable at push notification server . Thus, in some embodiments, the polling interval (i.e., the time transmission of between two sequential polling messages) may increase or decrease based on various considerations. One of these considerations may be the remaining battery life of client device . If client device  has ample remaining battery life, push notification server  may poll push notification gateway  more frequently. On the other hand, if client device  exhibits low battery life, push notification server  may poll push notification gateway  less frequently.","Since the transmission of each polling message requires processing at client device , the fewer polling messages that push notification server  transmits, the less battery power may be consumed. Thus, adjusting the polling interval in this fashion may conserve battery life. However, if client device  is being charged or otherwise using an external or non-battery power source, push notification server  may decrease the polling interval accordingly. It should be understood that push notification server  may determine the remaining battery life of client device  and\/or whether client device  is being charged by querying appropriate APIs, receiving an interrupt, reading the state of client device  from memory, or via some other mechanism.","b. Application Registration",{"@attributes":{"id":"p-0068","num":"0069"},"figref":"FIGS. 4A and 4B","b":["116","118","124","110","112"]},"In , message flow  includes step , in which email application  may launch. As noted above, email application  may launch during initialization of client device  (e.g., when client device  boots). Alternatively, email application  may launch manually (e.g., based on user intervention), or automatically (e.g., based on some other trigger).","After launching, at step , email application  may request a token from push notification server . The request may occur either before or after step , in which push notification server  receives the token. The request may involve email application  transmitting a GET-TOKEN message to push notification server . (It should be understood that even when an application and push notification server  are both operating on the client device , communication between these modules may be referred to as transmissions, despite this communication not necessarily leaving client device .) Alternatively, step  may involve email application  invoking a GET-TOKEN procedure call, or some other way of requesting the token from push notification server . If push notification server  does not yet have the token at step , email application  may pause until push notification server  is able to provide the token, or email application  may continue operating without the token.","At step , push notification server  may provide the requested token in a GET-TOKEN-RESPONSE message. If the token was requested via a procedure call, push notification server  may return the token to email application  via the procedure call. After receiving the token, email application  may store it for later use.","At step , email application  may transmit a REGISTER-APP message to push notification server . This request may seek to register email application  with push notification server  so that push notification server  receives notifications on behalf of email application . The REGISTER-APP message may include email user information (denoted \u201cemail userinfo\u201d in ), which could be one or more of an email address, userid, password, or some other identifier of the user of email application  or of the user's account with email server .","At step , push notification server  may transmit a REGISTER-APP-RESPONSE message to email application . As shown in , this message may indicate that the registration was a success. However, if the registration fails for some reason, this message may indicate that a failure occurred.","In some embodiments, steps , , , and  may be combined in some fashion. For instance, steps  and  may be combined so that email application  requests the token and registers in one message, and steps  and  may be combined so that push notification server  provides the token and indicates the outcome of the registration in one message.","At step , email application  may optionally register a port with registry . (The optional nature of some messages is denoted by the messages being depicted with dotted lines. However, messages denoted with solid lines may be optional as well.) Email application  may then use this port to receive notifications. For example, email application  may listen to this port for notifications from push notification server .","In step , the port is denoted \u201cemail port\u201d to indicate that email notifications may be delivered via this port. In some embodiments, registry  may be an SMS registry, and the port may be an SMS port. Thus, push notification server  may translate email notifications arriving at client device  to an SMS-compatible format before delivering them to email application . This SMS-compatible format may be, for example, a Wireless Messaging API (WMA) TextMessage object. It should be understood that WMA may provide a standard interface for accessing SMS based services, functions, and data on some client devices. It should also be understood that this port registration could occur at other times. For instance, email application  may register a port with registry  as email application  launches.","At step , email application  may subscribe to notifications from email server  by transmitting a SUBSCRIBE message to email server . This SUBSCRIBE message may include the email user information and the token. At step , email server  may store the email user information and token, and associate these data. In some embodiments, email server  may use the stored email user information and\/or token to determine where to deliver email notifications for the user of client device . At step , email server  may transmit a SUBSCRIBE-RESPONSE message to email application , indicating that email application  has successfully subscribed to the push email service.","Message flow  of , which involves messaging application A , is similar to message flow  of . Thus, message flow  will be described in slightly less detail than message flow . At step , messaging application A  may launch. Like email application , messaging application A  may launch during initialization of client device , manually, or automatically. After launching, at step  messaging application A  may request, from push notification server , the same token provided to email application  at step . Thus, messaging application A  may transmit a GET-TOKEN message to push notification server . At step , push notification server  may provide the requested token in a GET-TOKEN-RESPONSE message.","At step , messaging application A  may transmit a REGISTER-APP message to push notification server . The REGISTER-APP message may include messaging user information (denoted \u201cmessaging userinfo\u201d in ), which could be one or more of an email address, userid, or some other identifier of the user of messaging application A . At step , push notification server  may transmit a REGISTER-APP-RESPONSE message to messaging application A , indicating either success or failure of the registration. Similar to steps , , , and  of message flow , steps , , , and  may be combined in some fashion.","At step , messaging application A  may register a port with registry , and use this port to receive messaging notifications. At step , messaging application A  may subscribe to notifications from messaging server A  by transmitting a SUBSCRIBE message to messaging server A . This SUBSCRIBE message may include the messaging user information and the token. At step , messaging server A  may store the messaging user information and token, and associate these data. At step , messaging server A  may transmit a SUBSCRIBE-RESPONSE message to messaging application A , indicating that messaging application A  has successfully subscribed to the push messaging service.","c. Notification Delivery","Message flow  of  depicts examples of both email and messaging notifications being delivered to email application  and messaging application A  via push notification gateway  and push notification server . At step , email server  may transmit an EMAIL-NOTIFY message to push notification gateway . The transmission of this message may be triggered by an email message for the user of client device  arriving at email server , or some other state change occurring at email server . Email server  may be configured to transmit some or all notification messages for the user of client device  to push notification gateway . This configuration may be been manually established, or may have occurred automatically in response to receiving a SUBSCRIBE message from client device , such as the SUBSCRIBE message shown in step .","The EMAIL-NOTIFY message may contain a copy of the token, an AppID, and\/or additional content. The AppID may be a number, text string, or another type of indicator that denotes that the sender of the EMAIL-NOTIFY message operates according to a particular type of email service. For instance, some email services may use one AppID, while other email services may use a different AppID. Nonetheless, inclusion of an AppID in an EMAIL-NOTIFY message is optional, as push notification gateway  may be able to infer the AppID of the email service from other information in the EMAIL-NOTIFY message, such as the source IP address of the EMAIL-NOTIFY message.","The EMAIL-NOTIFY message may also contain additional content (denoted \u201ccontent1\u201d). The content may include one or more strings and\/or fields. These strings and\/or fields may be of human-readable text, non-human-readable text, or in a binary format. For example, the additional content may include a textual message that is to be displayed to the user of client device . An example of such a textual message may be \u201cYou have a new email message\u201d. Alternatively or additionally, the textual message may include information from one or more headers of a new email message, such as the sender's name or email address, and\/or at least part of the subject line. For instance, the textual message might include the text \u201cYou have a new email from Bob123@example.com\u201d, or \u201cBob123@example.com writes \u2018Re: Lunch today at noon?\u2019\u201d.","The additional content may also include opaque, application-specific data. This opaque data may have no particular meaning to any application or service aside from those operated by email application  and email server . Thus, the opaque data may be a status update, configuration parameter, command, or other information that email server  shares with email application . The opaque data may be in the form of human-readable text, binary, or some combination thereof.","At step , messaging server A  may transmit a MESSAGING-NOTIFY message to push notification gateway . The transmission of this message may be triggered by an instant message for the user of client device  arriving at messaging server A , or some other state change occurring at messaging server A. Like email server , messaging server A  may be configured to transmit some or all notification messages for the user of client device  to push notification gateway . Also like email server , this configuration may have been manually established, or may have occurred automatically in response to receiving a SUBSCRIBE message, such as the SUBSCRIBE message shown in step .","The MESSAGING-NOTIFY message may contain a copy of the token, an AppID, and additional content. The AppID may be a number, text string, or other type of indicator that denotes that the sender of the MESSAGING-NOTIFY message operates according to a particular type of messaging service. The AppID contained in this message may be different from an AppID contained in EMAIL-NOTIFY messages.","As the case for email services, some messaging services may use one AppID, while other messaging services may use a different AppID. Also as the case for EMAIL-NOTIFY messages, inclusion of an AppID in a MESSAGING-NOTIFY message is optional, as push notification gateway  may be able to infer the AppID of the messaging service from other information in the MESSAGING-NOTIFY message, such as the source IP address of the MESSAGING-NOTIFY message.","Similar to the EMAIL-NOTIFY message, a MESSAGING-NOTIFY message may also contain additional content (denoted \u201ccontent2\u201d). The additional content may include one or more strings and\/or fields, possibly of human-readable text, non-human-readable text, or in a binary format. For example, the content may include a textual message that is to be displayed to the user of client device . An example of such a textual message may be \u201cA new instant message has arrived\u201d. Alternatively or additionally, the textual message may include information from one or more headers of the new instant message, such as the sender's name or userid, and at least part of the instant message. For instance, the textual message might include the text \u201cNew message from Bob123@example.com\u201d, or \u201cFrom Bob123@example.com: Lunch today at noon?\u201d The additional content may also include opaque, application-specific data.","At step , push notification gateway  may transmit a NOTIFY message to push notification server . In some embodiments, this NOTIFY message may be transmitted in response to push notification gateway  receiving one or more notifications from various push servers. In such cases, the NOTIFY message of step  includes information from the notifications that push notification gateway  received at steps  and . However, instead of combining the notifications into a single NOTIFY message, push notification gateway  may instead transmit a separate NOTIFY message for each notification.","An example of the information contained in the NOTIFY message of step  is shown below. In this example, the information is encoded in an HTTP-based JSON format. Thus, the HTTP header indicates that the Content-Type of the NOTIFY message is JSON. Further, the body of the NOTIFY message encodes both notifications in associative arrays.",{"@attributes":{"id":"p-0092","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HTTP Header:"]},{"entry":[{},"Content-Type: application\/json;charset=utf-8HTTP"]},{"entry":[{},"Body:"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201cresponses\u201d : ["]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201ctype\u201d : \u201cnotification\u201d,"]},{"entry":[{},"\u201cappid\u201d : \u201c123\u201d,"]},{"entry":[{},"\u201ctimestamp\u201d : \u201c1234567890\u201d ,"]},{"entry":[{},"\u201calertText\u201d : \u201cYou have a new email\u201d,"]},{"entry":[{},"\u201cappContext\u201d : \u201cserverMessageid=1234\u201d },"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201ctype\u201d : \u201cnotification\u201d,"]},{"entry":[{},"\u201cappid\u201d : \u201c456\u201d,"]},{"entry":[{},"\u201ctimestamp\u201d : \u201c1234567890\u201d ,"]},{"entry":[{},"\u201calertText\u201d : \u201cYou have a new message\u201d,"]},{"entry":[{},"\u201cappContext\u201d : \u201cA1B2C3D4E5F6\u201d }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The notification from email server  is of type \u201cnotification.\u201d The AppID is 123, indicating that the notification originates from the email service operated by email server . The timestamp indicates the time at which push notification gateway  received the notification. The content of the notification (i.e., \u201ccontent1\u201d) includes an alert text (\u201calertText\u201d) of \u201cYou have a new email\u201d, and an application context (\u201cappContext\u201d) of \u201cserverMessageid=1234\u201d. This application context may be opaque data, and in this case may indicate an identification of a newly-arrived email message that triggered the sending of the notification.","The notification from messaging server A  is also of type \u201cnotification.\u201d The AppID is 456, indicating that the notification originates from the messaging service operated by messaging server A . The timestamp indicates the time at which push notification gateway  receives the notification. The content of the notification (i.e., \u201ccontent2\u201d) includes an alert text of \u201cYou have a new message\u201d, and an application context of \u201cA1B2C3D4E5F6\u201d. This application context may be opaque data indicating application-specific information.","At step , push notification server  may determine whether email application  is operating on client device . Push notification server  may make this determination by querying the operating system of client device  for a list of active applications, tasks, threads, or processes, or by some other mechanism. If email application  is operating, at step  push notification server  may transmit a NOTIFY message to email application . This NOTIFY may be of the same or different format as that of the NOTIFY message of step , and may be routed via the port on which email application  registered at step . Alternatively, push notification server  may use some form of inter-process communication, message passing, or shared memory to convey the NOTIFY message of step  to email application .","Upon receiving this NOTIFY message, email application  may either process the message or ignore it. For instance, if email application  processes the message, email application  may present in a pop-up window, dialog box, or some other type of display, with the alert text \u201cYou have a new email\u201d on the user interface of client device . Further, in response to receiving this NOTIFY message, email application  may communicate with email server  to download or otherwise acquire any new messages that have arrived at email server .","At step , push notification server  may determine whether messaging application A  is operating on client device . As in step , push notification server  may make this determination by querying the operating system of client device  for a list of active applications, tasks, threads, or processes, or by some other mechanism. If messaging application A  is operating, at step  push notification server  may transmit a NOTIFY message to messaging application A . This NOTIFY message may be of the same or a different format as that of the NOTIFY messages of steps  and , and may be routed via the port on which messaging application A  registered at step . Alternatively, push notification server  may use some form of inter-process communication, message passing, or shared memory to convey the NOTIFY message of step  to messaging application A .","Like email application , messaging application A  may either process or ignore this NOTIFY message. For instance, if messaging application A  processes the message, messaging application A  may present in a pop-up window, dialog box, or some other type of display, the alert text \u201cYou have a new message\u201d on the user interface of client device . Further, in response to receiving this NOTIFY message, messaging application A  may communicate with messaging server A  to download or otherwise acquire any new messages that have arrived at messaging server A . Alternatively, the NOTIFY message of step  may contain at least some of the information that triggered messaging server A  to transmit the MESSAGING-NOTIFY message.","d. Connection Termination",{"@attributes":{"id":"p-0100","num":"0101"},"figref":["FIGS. 6 and 7","FIGS. 6 and 7"],"b":["102","102","102","102","102","124"]},"At step  of , messaging server A  may transmit a MESSAGING-CONNECTION-TERM message to push notification gateway . The transmission of this message may be triggered by messaging server A  determining to terminate its association with client device , or by some other state change occurring at messaging server A . As noted above, messaging server A  may be configured to transmit some or all notification messages for the user of client device  to push notification gateway . The MESSAGING-CONNECTION-TERM message may include the token, the AppID of the messaging service used by messaging server A , and\/or application-specific content (e.g., \u201ccontent3\u201d).","At step , possibly in response to receiving the MESSAGING-CONNECTION-TERM message, push notification gateway  may transmit a NOTIFY message to push notification server . This NOTIFY message may use a different format than the MESSAGING-CONNECTION-TERM message. An example of possible content of this NOTIFY message is shown below.",{"@attributes":{"id":"p-0103","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HTTP Header:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Content-Type: application\/json;charset=utf-8HTTP"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Body:"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201cresponses\u201d : ["]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201ctype\u201d : \u201cnotification\u201d,"]},{"entry":[{},"\u201cappid\u201d : \u201c456\u201d,"]},{"entry":[{},"\u201ctimestamp\u201d : \u201c1234567890\u201d ,"]},{"entry":[{},"\u201calertText\u201d : \u201cYou have been logged in elsewhere\u201d,"]},{"entry":[{},"\u201cconnectionTerm\u201d : \u201ctrue\u201d,"]},{"entry":[{},"\u201cappContext\u201d : \u201cabc...xyz\u201d }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["506","102","102","112"]},"In response to receiving the NOTIFY message of step , at step  push notification server  may determine whether messaging application A  is operating on client device . As the case for step , push notification server  may make this determination by querying the operating system of client device  for a list of active applications, tasks, threads, or processes, or by some other mechanism.","If push notification server  determines that messaging application A  is operating on client device , at step  push notification server  may transmit a NOTIFY message to messaging application A . This NOTIFY may be of the same or a different format as that of the NOTIFY message of step , and may be routed via the port on which messaging application A  registered at step . Alternatively, push notification server  may use some form of inter-process communication, message passing, or shared memory to convey the NOTIFY message of step  to messaging application A ","In response to receiving the NOTIFY message of step , messaging application A  may display the alert text of this message and\/or conclude operation on client device . Alternatively, messaging application A  may ignore this message and\/or continue operating. In some embodiments, messaging application A  may ignore the message and\/or continue operating because a user is using messaging application A , or to provide a user with an opportunity to log in to the messaging service facilitated by messaging application A .",{"@attributes":{"id":"p-0107","num":"0108"},"figref":"FIG. 7","b":["118","102","124"]},"Steps  and  of  are similar to or the same as steps  and  of . At step , possibly in response to receiving the NOTIFY message of step , push notification server  may determine whether messaging application A  is operating on client device . As the case for steps  and , push notification server  may make this determination by querying the operating system of client device  for a list of active applications, tasks, threads, or processes, or by some other mechanism.","If push notification server  determines that messaging application A  is not operating on client device , at step  push notification server  may de-register messaging application A  from push notification server . This may involve push notification server  removing messaging application A  from a list of applications for which push notification server  forwards notifications. Alternatively or additionally, push notification server  may transmit a message to push notification gateway , instructing push notification gateway  not to forward any more notifications for messaging application A  to client device .","At step , push notification server  may optionally display an indication on the user interface of client device  on behalf of messaging application A . For example, this indication may include some or all of the alert text \u201cYou have been logged in elsewhere\u201d. Further, this indication may be personalized with the messaging user information that messaging application A  transmitted to push notification server  at step . For instance, push notification server  may insert a userid or email address from the messaging user information into the alert text, so that the alert text displays information such as \u201cAlice456 has been logged in elsewhere\u201d or \u201cAlice456@example.com has been logged in elsewhere\u201d. An advantage of displaying application-specific user information upon receiving the connection termination message is that it allows push notification server  to inform the user of client device  about the application to which the alert text pertains.","At step , push notification server  may optionally stop listening for notifications. As noted above, a potential advantage of push notification is reduced network usage and conservation of processing cycles at both the push client and the push server. The use of push notification server  and push notification gateway  in the manner described herein may result in these advantages for one or more push services. However, once there are no longer any push applications that are registered with push notification server  and operating on client device , there may be little reason for push notification server  to maintain a session with push notification gateway .","Thus, if at step  push notification server  determines that there are no applications operating on client device  that are subscribed to push notification services, push notification server  may close the socket with push notification gateway . Alternatively, push notification server  may keep the socket open, but ignore any notifications arriving from push notification gateway , and\/or no longer poll push notification gateway  to keep the socket open. Further, push notification server  may instruct push notification gateway  to stop sending notifications to client device .","After step , if email application  or messaging application A  launches, these applications may re-register with push notification server  and re-subscribe to notifications from their respective servers. Thus, in some embodiments, the push notification services facilitated by push notification server  only remain active when applications operating on client device  are capable of receiving notifications.","V. Example Flow Charts",{"@attributes":{"id":"p-0114","num":"0115"},"figref":["FIGS. 8 and 9","FIG. 1"],"b":["100","102"]},"Each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the method. The program code may be stored on any type of computer readable medium, for example, such as a storage device including a disk or hard drive. The computer readable medium may include non-transitory computer readable media, for example, such as computer-readable media that stores data for short or long periods of time like register memory, processor cache and Random Access Memory (RAM). The computer readable medium may also include secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example. The computer readable media may also be any other volatile or non-volatile storage systems. In addition, for the flow charts in , one or more blocks may represent circuitry that is wired to perform the specific logical functions.","At block  of , a push notification server may be operating on a client device. The push notification server may receive a connection termination message that seeks to terminate an application that is registered with a push notification service. In some embodiments, the push notification service may be facilitated by the push notification server, and\/or the application may be capable of operating on the client device. At block , possibly in response to receiving the connection termination message, the push notification server may determine whether the application is operating on the client device.","If the application is operating on the client device, then at block  the push notification server may notify the application that the connection termination message was received. However, if the application is not operating on the client device, then at block  the push notification server may deregister the application from the push notification service.","In some embodiments, the push notification server may receive the connection termination message from a push notification gateway that also facilitates the push notification service. Additionally, the push notification server may poll the push notification gateway from time to time in order to receive at least some messages from the push notification gateway.","If the application is not operating on the client device, then after deregistering the application from the push notification service, the push notification server may determine that no applications operating on the client device are registered with the push notification service. Possibly in response to determining that no applications operating on the client device are registered with the push notification service, the push notification server may stop the polling of the push notification gateway and\/or terminate the session between the push notification server and the push notification gateway.","Further, the client device may be capable of operating on battery power, and the interval at which the push notification server polls the push notification gateway may be based on the remaining battery life of the client device. For instance, suppose that the push notification server polls the push notification gateway at a polling interval. The push notification server may determine that a remaining battery life of the client device is below a battery life threshold (e.g., 50%, 30%, 20%, 10%, etc.) and that the client device is not being charged (e.g., the client device is not plugged in). In response to determining that the remaining battery life of the client device is below the battery life threshold and that the client device is not being charged, the push notification server may increasing the length of the polling interval, thus potentially conserving battery life of the client device.","In some embodiments, the application may register with a port of an SMS push registry on the client device. The push notification server may receive and store a reference to the port, and may use the port to deliver messages to the application. In scenarios where the application is operating on the client device, notifying the application that the connection termination message was received may involve translating at least part of the connection termination message to a format compatible with the SMS push registry, and forwarding the translated connection termination message to the application via the port.","Further, the connection termination message may contain an application identifier for the application and a data string (e.g., an opaque data string). Translating at least part of the connection termination message to the format compatible with the SMS push registry may involve using the application identifier to look up the port. Then, before forwarding the translated connection termination message to the application via the port, the push notification server may convert at least part of the data string in the connection termination message to a WMA TextMessage object in the translated connection termination message.","Additionally, the application may be configured with user information that the application uses to register with an application server associated with the application. The push notification server may store the user information. While the application is not operating on the client device, the push notification server may retrieve the stored user information and display at least some of the stored user information on a user interface of the client device.","Also, the application may determine whether the application is registered with the push notification service in order to select a dialog or window to display on the user interface of the client device. If the application is registered with the push notification service, the application may display a non-login dialog on a user interface of the client device. However, if the application is not registered with the push notification service, the application may display a login dialog on the user interface of the client device. In response to input received via the login dialog, the application may register with the push notification service via the push notification server. This received input may include user information, and registering with the push notification service may include the application providing the user information to the push notification server for the push notification server to store.","In addition, either serially or in parallel to the processing depicted in blocks , , , and , the push notification server may be able to perform similar or the same functions on behalf of a second application. Thus, the push notification server may receive a second connection termination message that seeks to terminate a second application that is registered with the push notification service. In response to receiving the second connection termination message, the push notification server may determine whether the second application is operating on the client device.","If the second application is operating on the client device, the push notification server may notify the second application that the second connection termination message was received. However, if the second application is not operating on the client device, the push notification server may deregister the second application from the push notification service.","At block  of , a push notification server may obtain user information that may be used by an application capable of operating on the client device. In some embodiments, the push notification server may also be operating on the client device, and the application may be registered with a push notification service facilitated by the push notification server. At block , the push notification server may determine that the application is not operating on the client device. At block , possibly in response to making this determination, the push notification server may display the user information on a user interface of the client device on behalf of the application.","Additionally, the push notification server may receive a connection termination message that seeks to terminate the application. Possibly in response to receiving the connection termination message, the push notification server may deregister the application from the push notification service.","It should be understood that  depict non-limiting embodiments. Thus, more or fewer steps than shown in  may be used without departing from the scope of the invention. Additionally, each of these steps may be repeated one or more times, or may be omitted altogether. Moreover, these steps may occur in a different order than shown in . Further, the flow charts of these figures may be combined with one another, in whole or in part, also without departing from the scope of the invention. For instance, any of the additional features discussed in the context of  may also be applied to .","It should be understood that arrangements described herein are for purposes of example only. As such, those skilled in the art will appreciate that other arrangements and other elements (e.g., machines, interfaces, functions, orders, and groupings of functions, etc.) can be used instead, and some elements may be omitted altogether according to the desired results. Further, many of the elements that are described are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, in any suitable combination and location.","While various aspects and embodiments have been disclosed herein, other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting, with the true scope being indicated by the following claims, along with the full scope of equivalents to which such claims are entitled. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only, and is not intended to be limiting. Since many modifications, variations, and changes in detail can be made to the described examples, it is intended that all matters in the preceding description and shown in the accompanying figures be interpreted as illustrative and not in a limiting sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
