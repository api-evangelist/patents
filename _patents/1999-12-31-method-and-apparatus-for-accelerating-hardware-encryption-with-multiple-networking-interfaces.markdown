---
title: Method and apparatus for accelerating hardware encryption with multiple networking interfaces
abstract: The invention provides for utilizing abilities of network interfaces, such as embedded encryption support, or access to such encryption support, so as to extend support for such abilities to network interfaces or other devices lacking such ability. In one configuration, a non-homogeneous team of network interfaces is presented to a protocol stack as being a homogeneous team, by having network interfaces lacking a particular ability be backed up by team member supporting the ability. Various methods may be applied to distribute the work load of backing up network interface according to an operation mode of the team. For example, when operating in load balancing mode, performing backup services is balanced across the team, whereas in a fault tolerant mode, processing may be first given to non-primary network interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07082530&OS=07082530&RS=07082530
owner: Intel Corporation
number: 07082530
owner_city: Santa Clara
owner_country: US
publication_date: 19991231
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The invention generally relates to secondary use of encryption devices, and more particularly to utilizing encryption hardware in network interface cards to provide encryption support for network interfaces lacking encryption support, and to provide parallel execution of encryption tasks by spreading such tasks across multiple network interface card encryption processors.","In conventional environments, encryption and decryption is usually performed by software. Due to the complexity involved with performing encryption, the host processor can be greatly burdened with this encryption task. This task burden is commensurate with the degree of security provided by the encryption. Unfortunately, availability of very fast computing hardware has allowed criminals to realistically apply brute-force decryption techniques to private data. Previously, typical encryption methods, such as the Data Encryption Standard (DES), used encryption key lengths of around 40\u201360 bits, and were considered secure.","But, as several well-publicized contests by RSA Data Security Inc. have shown, such key lengths can be compromised in a matter of days or hours. Thus, to compensate, longer key lengths (e.g., 1024 bits or higher) and more complex encryption schemes are required. This then increases the burden on the host processing system.","Such security concerns have driven efforts to provide secure networking protocols, such as Internet Protocol (IP) security, or IPSEC, promulgated by the Internet Engineering Task Force (IETF) (see IPSEC proposals at Internet location http:\/\/www.ietf.org\/ids.by.wg\/ipsec.html.) This modified IP protocol refers to encrypting IP data traffic with large key lengths and complex encryption algorithms. But, as noted above, such keys and algorithms burdens a host processor already responsible for general networking overhead, and overhead from executing other host processes.","The invention provides utilization of multiple network interfaces for primary and secondary use processing of network traffic. A driver is loaded for a team of network interfaces, and the team is configured to operate in adapter fault tolerance mode having a primary network interface and at least one secondary network interface. Data is received for processing and transmission by the team. If the data is for primary use processing, then the data is processed and transmitted by the primary network interface. If the data is for secondary use processing, then processing of the data is distributed across the secondary network interfaces.","In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be understood by those skilled in the art that the present invention may be practiced without these specific details. In other instances well known methods, procedures, components, and circuits have not been described in detail so as not to obscure the present invention.","The increasing burden of performing secured encryption with long keys and complex algorithms provides an opportunity for developers to provide a way to offload encryption burdens from a host's processor. In one embodiment, network interface developers couple an encryption processor with their network interfaces that can be used to encrypt\/decrypt network traffic, as well as to provide encryption services to external hardware and processes. In one embodiment, a driver for network interfaces provides access to the encryption hardware, so as to allow external hardware and processes to avoid replying on software encryption methods. Note that the encryption processor may be physically packaged with a network interface, e.g., by way of an encryption application specific integrated circuit (ASIC) (or equivalent) on a network interface, or packaged separately and communicatively thereto.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","102","100","102"]},"The intermediary layer is in communication with multiple network interface card base drivers \u2013. As shown, instances of a single base driver  can be managing multiple network interfaces (three such interfaces are illustrated as a stack of interfaces ). For presentation clarity, it is assumed each base driver communicates with a single network interface. Note that although network interface cards, or \u201cNICs\u201d, are shown, the term NIC is meant to include other input\/output interfaces for alternate network configurations, such networks effected over serial\/parallel port connections, Universal Serial Bus (USB) links, IEEE 1394 FireWire link, and the like.","In the illustrated configuration, the intermediary  appears to the stack  as a multiplexer to the different base drivers. The stack and base drivers are bound to the intermediary, resulting in network data received by the protocol stack being routed to the intermediary. The intermediary becomes responsible for forwarding the network data on to an appropriate base driver \u2013 which is then responsible for transfer of the data to the NIC hardware \u2013 for delivery over a network connection .","On data reception over the network , all NICs see the data, but only the NIC hardware with the appropriate matching MAC filter responds to the incoming data. If a NIC accepts network data, it is forwarded to its driver, which in turn forwards it to the intermediary layer which multiplexes the data to an appropriate protocol stack.","The intermediary layer is capable of accepting many upper-layer protocol stacks, in addition to multiple drivers below it. Although not provided by present networking environments, this ability of the intermediary layer provides an opportunity for allowing transparent fail-over, load-balancing, and support for new network protocols and features, without changing existing base drivers \u2013 for current network interfaces \u2013.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 3","FIG. 2","FIG. 2"],"b":["250","102","104","106","108","116","118","120"]},"In one embodiment, an augmentation layer  is implemented by \u201csurrounding\u201d an Intermediary layer  with a virtual protocol stack  and a virtual NIC driver . However, it will be appreciated by those skilled in the art that other configurations may be used to achieve a similar augmentation layer effect. (Note that this figure is highly abstracted to show general structure, and not implementation details.) A protocol stack , such as one typically provided by an operating system vendor (or by a network interface vendor supporting the network interface), is bound to the intermediary layer  in a conventional manner. The intermediary layer  is bound to the virtual NIC driver  instead of drivers , ,  as depicted in . From the perspective of protocol stack , the protocol stack is bound to a valid network interface.","The virtual driver  routes networking requests to the virtual protocol stack  which then repackages the network traffic for the different NIC drivers , , . It will be appreciated that in accord with typical networking practices, return data will follow an inverse data path, allowing decryption of encrypted return data before the decrypted payload is given to the protocol stack . However, before routing the networking traffic to NIC drivers , , , the virtual driver , the driver may make use of original driver capabilities (e.g., ability to ask a network interface to encrypt data) by way of communication links , , .","Assume, for example, that NIC   has an on-board encryption ASIC, but NIC   and NIC   do not. As will be discussed in more detail below, in such a circumstance, encryption for NIC   and NIC   can be supported by routing encryption requests through NIC   encryption hardware and then repackaging the resultant encrypted data for delivery to NIC   and\/or NIC   by way of the virtual protocol stack . That is, in one embodiment, network traffic to be encrypted would go from protocol stack , to the intermediary , to the virtual driver , which communicates with the NIC  driver  to have NIC   perform the encryption. The encrypted data is received by the virtual driver , given to the virtual protocol stack , which then re-sends the data for transmission by NIC   or NIC  .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4"},"Assume the team is performing adapter fault tolerance (AFT) or adaptive load balancing (ALB), such as provided by the Intel Advanced Networking Services (iANS), and that the team is to be presented as capable of homogeneously providing IPSEC encryption support even though one or more members of the team does not have encryption support.","The phrase \u201cAdapter Fault Tolerance\u201d means presenting, to protocol stacks, several network interfaces (working as a team) as one network interface. One of these network interfaces acts as an active, or primary, network interface for network communication. When a fault in one of the underlying network interfaces of the team is detected, iANS switches the faulty member network interface with another member network interface known to be functional. Using AFT, network communication will be resilient to failure in the member network interface in use when fail-over to another functional member network interface occurs.","The phrase \u201cAdaptive Load Balancing\u201d means presenting, to protocol stacks, several network interfaces (working as a team) as one network interface, using all of the network interfaces as an active network interface for network communication. Outband network traffic (transmit) is balanced between all team members comprising a fat channel capable to deliver high bandwidth. When a fault in one of the underlying network interfaces of the team is detected, iANS does not use the adapter, providing opportunity to replace the interface.","Note that IPSEC, AFT, and ALB are presented for exemplary purposes only, and that other encryption standards and networking capabilities are also intended to be supported as discussed herein.","In one embodiment, at least one of the network interfaces is based on an Intel 82559 or similar chipset providing IPSEC encryption support for a primary and a secondary use of the adapter. Primary use corresponds to use of a network interface to transmit and receive its own network traffic. Secondary use corresponds to use of a network interface to process data for an external entity, e.g., driver software for a different network interface, operating system component, API, or the like.","In secondary use, a network interface receives data from a requester to be encrypted or decrypted. In one embodiment, the received data is processed and returned to the requestor. In another embodiment, the processing adapter processes and then directly transmits the data to the network for the requester. For example, timing, throughput, or other considerations, may make direct transmission more efficient than returning the data for subsequent transmission. In one embodiment, the processing adapter is instructed to temporarily change its MAC address to the MAC address of the requestor's network interface lacking encryption support, so that responses to the transmitted network data will be received by the requestor's networking interface. Accordingly, network interfaces without IPSEC support may nonetheless process IPSEC network traffic by having the encryption processing handled by an IPSEC capable device.","The data to be secondarily processed can be stored in a host memory, such as in a main memory for a computing device housing the network interface, copied to a memory of the network interface, or stored in some other memory and made available to the network interface. It is assumed that Direct Memory Access, private or public bus, or some other communication pathway is available for receiving and returning data. Secondary use is intended to replace software encryption functions and consequently offload work from a host processor. When network interfaces having encryption support are present within a computing device, software encryption libraries can forward encryption tasks to the interfaces to be secondarily processed by the encryption hardware, interleaved with regular network traffic that goes out to the network.","Thus, to augment adaptive load balancing, adapter fault tolerance, or other networking functionality, a first operation is to identify  network interfaces bound to the augmentation layer  support IPSEC (or other functionality) to be shared. In one embodiment, the identification  operation confirms network interface identity data, such as vendor information and\/or revision version of the network interface, to ensure compatibility with the augmentation layer. In a further embodiment, the augmentation layer refuses to operate with network interfaces not having particular identity data. For example, in such configurations, the augmentation layer may choose to only operate with network interfaces provided by the developer of the augmentation layer software and\/or drivers.","A second operation is to verify  that at least one IPSEC capable interfaces provides secondary-use access to its encryption hardware. A single, fast, encryption component to an adapter may support encryption requirements for many other hardware devices. Alternatively, as discussed for , if multiple encryption-capable adapters are present, then all adapters can share task processing, e.g., operating as parallel processors.","If verification fails, then an adapter team cannot be heterogeneously shared, and sharing terminates . If verification succeeds, then the augmentation layer presents  itself to a protocol stack (e.g., protocol stack ) as a network interface supporting IPSEC (or other desired functionality) with support for secondary use of its encryption hardware. Additionally, the augmentation layer may announce itself to an operating system as supporting secondary-use encryption tasks, thus allowing operating system APIs (e.g., Microsoft Windows CryptoAPI) to utilize encryption capabilities of the network interfaces.","The protocol stack then delivers  packets for transmission to the network  in either plain mode or encrypt mode. If  plain packets are to be sent, then the packets can be presented to an appropriate network interface's driver for transmission  in a customary manner. (Or they can be routed through the augmentation layer without any augmentation.)","However, if the packets are to be encrypted, then for each adapter that is to receive data for transmission, a check  is made to determine whether the adapter supports IPSEC transmissions. Note that depending on how one tracks which adapters can perform IPSEC transmissions, this check may or may not be literally performed. For example, a transmission mask may be employed to control which adapters simply send traffic without further review. It will be appreciated that which adapters receive data depends on transmission mode; thus, for example, under load balancing, all adapters receive a distributed portion of network traffic for transmission.","If the destination adapter does not support IPSEC, then the data payload for the destination adapter is sent  to a backup adapter that does support IPSEC. The backup adapter receives the data payload, encrypts  it pursuant to IPSEC, and returns  the encrypted data for delivery by the destination adapter as regular data. This arrangement allows load balancing (or other teaming algorithms) of IPSEC or other network traffic across a non-heterogeneous adapter team.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 5","FIG. 4","FIG. 4"],"b":["322","324","326","328","330","332"]},"The augmentation layer identifies  the encrypted packets as being encrypted, and forwards  them for decryption (e.g., as a secondary task) by an available IPSEC-capable adapter. Decrypted packets are received  and forwarded  by the augmentation layer in accord with a current processing algorithm, e.g., traditional (direct), fault tolerant, load balancing, etc., for presentment as regular plain text packets for processing by upper layer protocol stacks.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6","b":"250"},"Secondary use encryption throughput is therefore scaled according to the number of members in the team and their availability. Secondary use in adaptive load balancing mode can be performed by distributing encryption tasks to team members according to their current workload. Secondary use in adapter fault tolerance mode favors distributing encryption tasks to network interface team members which are inactive and waiting on failure of a primary running network interface. Such idle network interfaces can be used as dedicated encryption devices.","Note that spreading processing of encryption using load balancing techniques is not limited only to using network interfaces as hardware accelerators, but also to using other hardware devices which are capable of performing encryption, such as other encryption-capable devices within a computing device hosting the network interfaces. Additionally, note that load balancing and fault tolerance are used as exemplary operations that respectively utilize all network interfaces, or a single interface of a team. It is contemplated that the present invention will be applied to other tasks.","Operations \u2013 correspond to operations \u2013 of , and are only briefly discussed for . Thus, a first operation is to identify  network interfaces bound to the augmentation layer  support IPSEC (or other functionality) to be shared, and a second operation is to verify  that multiple IPSEC capable interfaces provides secondary-use access to its encryption hardware. If verification fails, then encryption processing cannot be spread across the identified adapters, and spreading terminates . If verification succeeds, then the augmentation layer presents  itself to a protocol stack as a network interface supporting IPSEC with support for secondary use of its encryption hardware, and may announce itself to an operating system.","The protocol stack then delivers  packets for transmission to the network  in either plain mode, encrypt mode, or for secondary processing with loop back to a requestor (e.g., a protocol stack, encryption library or service, operating system, etc.). If  a network interface team is operating in adaptive load balance mode, the augmentation layer load balances  network traffic according to the network interface team's mode of operation.","If  a network interface team is operating in adapter fault tolerance mode, and if  regular network traffic, plain or encrypted is to be delivered to the primary (e.g., active) network interface, then the packets are delivered  to the primary adapter and transmitted to the network in a customary fashion.","If, however, non-regular traffic is received, e.g., secondary use data packets, then these packets are delivered to the backup network interface members such that they are balanced  across all available unused team members. If  the primary network interface has available resources, however, to process encryption tasks, then the primary adapter interleaves  secondary task processing with its primary transmission and receipt of network traffic. Remaining task processing is balanced  across all available unused team members. It is expected that appropriate queuing strategies will be employed to keep all adapters busy.","On receipt of network traffic, if the network interface team is operating in adaptive load balancing mode, or some other mode utilizing all network interfaces in the team, then if regular network traffic (plain or encrypted) is received, then it will be balanced across all team members as normal. If non-regular traffic is received, e.g., secondary use data packets, these packets are delivered to the all members of the network interface team such that they are balanced across all available team members.","Note that since encryption duties are separate from network transmission and reception, even if a network interface is defective or otherwise unable to process network transmissions, the network interface may still be functionally available for processing secondary use data. In one embodiment, when there are network interfaces that are not processing (or can not process) regular network traffic, these adapters will be first loaded with secondary use tasks to leave fully functional network interfaces available for processing regular network traffic. In addition, although not shown in these figures, processing accounts for the hot-swap removal and replacement of network interfaces. For example, if a defective network interface is replaced with a fully functional one, then the replacement interface should no longer receive a disproportionate amount of secondary use processing requests.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 7","b":["400","402","402","404","406","408","410","412","414","416"]},"The computing-device readable storage-media  includes all computing device readable media, and can provide storage of programs, data, and other instructions for the computing device  and components communicatively coupled thereto (e.g., a network interface card attached to the system bus ). Media  includes hard-drives, floppy-disks, optical storage, magnetic cassettes, tapes, flash memory cards, memory sticks, digital video disks, and the like.","The exemplary computing device  can store and execute a number of program modules within the memory , and computing-device readable storage-media . The executable instructions may be presented in terms of algorithms and\/or symbolic representations of operations on data bits within a computer memory, as such representation is commonly used by those skilled in data processing arts to most effectively convey the substance of their work to others skilled in the art. Here, and generally, an algorithm is conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities, and can take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. Appropriate physical quantities of these signals are commonly referred to as bits, values, elements, symbols, characters, terms, numbers, or the like.","The invention may therefore be described by reference to different high-level program constructs and\/or low-level hardware contexts, and may be part of single or multiprocessing host computing devices, such as personal computers, workstations, servers, etc., as well as hand-held devices and controllable consumer devices such as Personal Digital Assistants (PDAs), cellular telephones, or Internet television adapters. It will be appreciated that the invention can have its own processors, such as the Intel 82559 chipset providing IPSEC encryption support for network interfaces, and that these processors may operate asynchronously to, and possibly in conjunction with, host processors.","The computing device  is expected to operate in a networked environment  using logical connections to one or more remote computing devices , . In addition, the invention itself may operate in a distributed fashion across a network, where input and output, including user input and output (e.g., a graphical interface) may each occur at different networked locations. Thus, for example, assuming a perspective where computing device  utilizes a team of load balancing network interfaces, then remote computing devices ,  include routers, a peer devices, a web server or other program utilizing networking protocols such as TCP\/IP, IPSEC, IPX, hypertext transport protocol (HTTP), File Transfer Protocol (FTP), Gopher, Wide Area Information Server (WAIS), or the like.","It is understood that remote computing devices ,  can be configured like computing device , and therefore may include many or all of the elements discussed for computing device . It should also be appreciated that computing devices , ,  may be embodied as a single devices, or as a combination of separate devices; for example, a team of network interfaces may reside in a separate enclosure and be communicatively coupled to computing device  (e.g., by input\/output interface ports  or other communication medium).","Having described and illustrated the principles of the invention with reference to illustrated embodiments, it will be recognized that the illustrated embodiments can be modified in arrangement and detail without departing from such principles. For example, while the foregoing description focused, for expository convenience, on using encryption hardware present in network interfaces to emulate encryption in non-capable network interfaces, and on distributing encryption tasks among multiple network interfaces, it will be recognized that the same techniques and analyses discussed above can be applied to other protocols and services. In particular, the encryption support need not reside in network interfaces, and instead may be provided by other components within a computing device.","And, even though the foregoing discussion has focused on particular embodiments, it is understood that other configurations are contemplated. In particular, even though the expressions \u201cin one embodiment\u201d or \u201cin another embodiment\u201d are used herein, these phrases are meant to generally reference embodiment possibilities, and are not intended to limit the invention to those particular embodiment configurations. These terms may reference the same or different embodiments, and unless indicated otherwise, are combinable into aggregate embodiments. Consequently, in view of the wide variety of permutations to the above-described embodiments, the detailed description is intended to be illustrative only, and should not be taken as limiting the scope of the invention. Rather, what is claimed as the invention, is all such modifications as may come within the scope and spirit of the following claims and equivalents thereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Features and advantages of the invention will become apparent to one skilled in the art to which the invention pertains from review of the following detailed description and claimed embodiments of the invention, in conjunction with the drawings in which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
