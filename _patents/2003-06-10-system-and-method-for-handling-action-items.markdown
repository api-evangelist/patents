---
title: System and method for handling action items
abstract: A method and system for handling action items can determine the extent to which an action item can be processed using computer-based processing. Based on this determination, the present invention can complete the action item with a combination of automatic and manual processing. That is, the present invention can analyze an action item, initiate appropriate computer-based steps, and prompt human intervention to complete the action item. According to one exemplary aspect, the present invention can use a network connection to seek, identify, and utilize remote resources for processing an action item. According to another exemplary aspect, the present invention can derive action items from natural language, handwritten script entered into a tablet personal computer. According to another exemplary aspect, the present invention can process an action item list that includes both manual and automatic action items.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07571108&OS=07571108&RS=07571108
owner: Microsoft Corporation
number: 07571108
owner_city: Redmond
owner_country: US
publication_date: 20030610
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS","CONCLUSION"],"p":["The present invention relates to assessing and automatically processing action items, and more specifically, it relates to computer-based handling of action items entered by electronic ink.","A variety of approaches are conventionally taken for working with action items and other tasks. One of the most basic conventional approaches is a simple list of action items handwritten on a piece of paper and checked off as completed. Project management software is a contrasting example of a more sophisticated conventional approach that can facilitate the organization of projects entailing thousands of tasks and personnel. However, all of the conventional approaches have limitations related to their user interfaces and to their capabilities for intelligently assessing and automatically handling action items in an unconstrained environment.","Simple Lists","One of the simplest methods of recording and communicating a set of action items is listing them on a sheet of loose-leaf paper with a writing instrument such as a pen. Writing information by hand on a piece of paper is inexpensive and can be done quickly and easily with little preparation. The traditional method is also flexible in that a writer can generally write in any format anywhere on the paper. And, the completion of an action item can be indicated with a simple handwritten check mark. One of the limitations with handwritten work is that it is not easily manipulated or transferred to other contexts. In other words, modifying or transferring a piece of handwritten text typically requires rewriting the text on another medium.","Organizer Notebooks","Organizer notebooks provide a convenient alternative to loose-leaf paper for listing action items. An organizer notebook is a specially formatted notebook that aids in recording, organizing, and coordinating handwritten action items. To aid in scheduling action items, these notebooks typically incorporate a calendar. Although handy, bulk is one disadvantage for organizer notebooks. Like other traditional handwritten paper media, organizer notebooks do not easily provide for manipulating the information contained within.","Computerized Action Item Lists","As an alternative to using organizer notebooks, some people prefer to transfer handwritten action item lists from loose-leaf paper into personal computers. Specifically, with the widespread use of personal computers, textual information such as action item lists is readily recorded using word processing software running on a personal computer. The advantage of such electronic methods for recording information is that the information can be easily stored and transferred to other remote computing devices and electronic media. Such electronically recorded text can also be easily corrected, modified, and manipulated in a variety of ways.","Organizer Software","As an alternative approach to word processing software, conventional organizer software is available for personal computer systems to facilitate recording, organizing, and scheduling action items. Organizer software is analogous to an electronic version of the aforementioned, paper-based organizer notebook. Consequently, it facilitates manipulating action items following entry into a computer system. Organizer software is often included as a component of a larger software package, such as a project manager software package, a calendar software package, or an e-mail software package. Such software overcomes many of the limitations that are inherent both with recording action items on paper media and with converting action item lists into conventional electronic format via word processing software. However, conventional organizer software has substantial shortcomings related to its static nature and its lack of intelligent capabilities.","Being inherently static, conventional organizer software is limited in its capability to assess an action item to determine the potential for automatic completion and to automatically complete an action item. Consider the example of a user including \u2018send my wedding photograph to my niece\u2019 and \u2018get my teeth cleaned at the dentist\u2019 in an action item list. Conventional organizer software cannot differentiate between the potentially automatic nature of the former action item and the inherent manual nature of the latter. Conventional organizer software does not incorporate an intelligent feature to determine if the wedding photograph is available digitally and can be e-mailed directly to the niece, perhaps without human intervention. Thus, if the user wishes to consider automatically handling \u2018send my wedding photograph to my niece,\u2019 the user must manually determine: 1) the availability of a digital wedding photograph; 2) the location of the wedding photograph digital file, if it exists; and 3) the availability of sender and user e-mail resources.","Conventional organizer software has additional limitations related to assessing and processing action items. Conventional organizer software is limited in its capabilities to correlate an action item with resources required to complete the action item. Referring again to the wedding photograph example, conventional organizer software cannot automatically correlate the availability of the file, the location of the file, and the presence of e-mail capabilities to the action item. Furthermore, conventional organizer software is limited in its potential to dynamical track the availability of resources having potential utility for processing an action item.","In another area related to assessing action items, conventional organizer software also has limited capabilities to seek resources over a network for processing an action item. Continuing with the wedding photograph example, conventional organizer software cannot seek the digital file over a computer network, for example locating it on the hard drive of a second, networked computer.","After determining that sufficient resources are available, a user of conventional organizer software can manually complete an action item. To complete the wedding-photography action item, the user might go through the steps of: 1) closing the organizer software program; 2) opening an e-mail software program; 3) creating a new e-mail message; 4) pasting the digital photograph into the message; 5) pressing the \u2018send\u2019 button on the e-mail software's user interface to initiate a sequence of transmission steps culminating in transmitting the e-mail; 6) closing the e-mail program; 7) waiting; 8) receiving a reply that the photograph was successfully received by the niece; 9) opening the organizer software package; and 10) noting in the organizer software program that the task was successfully completed. The extent of manual steps in this example is representative of the limitations of conventional organizer software.","In addition to being inherently manual, conventional organizer systems have user-interface limitations. One of the limitations with the graphical user interface (GUI) systems of conventional software-based organizer systems is that a user must generally enter text by typing on a keyboard. For many people, entering text by keyboard typing is slower, more cumbersome, and less intuitive than handwriting. Although recent advances have been made in reducing the size of personal computers, they are still not as portable or accessible as traditional pen and paper. In contrast, traditional pen and paper provides the user with considerable flexibility for editing an action item and recording information in a personalized, intuitive format. Consequently, many people select conventional pen and paper over software-based organizer systems for maintaining action item lists.","To address the shortcomings of traditional keyboard and mouse interfaces, there have been various attempts to create an electronic tablet that can record handwriting for general computer utility. Such electronic tablets typically comprise a screen and a handheld stylus device that is similar to a pen. A user can manipulate the stylus to write on the electronic tablet in a manner similar to the use of traditional pen and paper. The electronic tablet can \u2018read\u2019 the strokes of the user's handwriting with the handheld device and render the handwriting in electronic form on the tablet's screen and\/or the computer's display as \u2018electronic ink.\u2019 This electronic tablet approach can be employed in a variety of ways including on a personal computer and on a handheld computing device. One of the limitations of conventional software-based organizer systems is the lack of a user interface that is adapted to facilitate entering and manipulating action items with electronic ink.","Whether entered with electronic ink based on handwriting gestures or with conventional keyboard typing, many people are predisposed to written expression in the format of natural language. Conventional organizer software is also limited in its user-interface capabilities to enter action items via free-form, natural language text. Conventional organizer software does not offer a user the option to enter descriptive, natural language text and does not provide processing capabilities to derive an action item from text so entered. Returning to the action item example \u2018send my wedding photograph to my niece,\u2019 a user might express the intent of the action item with a range of descriptive text entries. For example, a user might enter \u2018send Rachel my wedding picture\u2019 or \u2018send my June 2000 wedding photograph to niece.\u2019 Conventional organizer software has limited capabilities to recognize the relationship between these textual descriptions of the same action item.","Code Schedulers","While organizer systems represent conventional software intended to facilitate user interaction with a list of action items, another type of conventional software is intended to facilitate the processing of computer code. Conventional computer systems often include code scheduling modules, such as chrons, batch scripts, or the equivalent, that schedule the computer's processing of instructions to optimize the computer's utilization of computing resources. For example, if a first instruction can utilize the result of a second instruction, this type of computing module can schedule the second instruction to be executed before the first instruction. One shortcoming of these conventional modules is their limitation in scheduling action items. Another shortcoming is their limitation in assessing and processing action items. Rather than action items, conventional code scheduling modules are optimized to process lines or blocks of code in a highly structured computing environment. Other limitations are related to those described above in reference to the limitations of conventional organizer software.","Project Management Software","Another type of conventional software deals with the utilization of project resources. Sometimes called project management software or project planning software, this type of software is a tool that assists a manager in following the completion of a project. Conventional project management software can also aid in planning and executing a project; for example helping a project manager to quickly evaluate alternatives for deploying project resources.","For example, the manager of a bridge construction project might use project management software to evaluate the positive schedule impact and negative cost impact of moving the construction workers from a 40-hour work week to a 60-hour work week. This could entail the manager manually inputting various resource scenarios and the software predicting the outcome. The manager might also use the software as an off-line tool to aid in his or her tracking of the stage of project completion. To utilize this capability, the manager would need to manually estimate the stage of completion of the projects tasks and milestones. Then, the manager would periodically need to make corresponding manual entries into the software. From these manual entries, the software might generate an overall view of the project status.","In summary, conventional project management software is off-line, manual, and requires meticulously detailed user input. Conventional project management software cannot assess a project task to determine the extent to which it can be completed automatically; and, it can not automatically process tasks. While action items concern activities in an unrestricted environment that is not well-defined, project tasks concern activities in the narrow context of a well-defined project that can be accurately represented in a software model. Furthermore, other limitations with conventional project management software are similar to those described above in reference to the limitations of conventional organizer software.","Process Control Software","Whereas conventional project management tools are intended to be used off-line, process control software is a type of conventional software that is frequently deployed in the on-line environment of a manufacturing process. This operating environment sometimes includes a distributed computing implementation of the software. On-line process control software can be used for such things as: controlling adding chemicals to a tank; starting a tank-agitation cycle; scheduling a batch sequence; and providing an indication of the completion of a chemical reaction so that an operator can empty a tank. Consequently, conventional process control software can provide real-time control in an operating environment that includes dynamic conditions. For example, conventional process control software can, in respond to an operator's instruction to \u2018make a batch of blue paint,\u2019 produce a product by controlling paint manufacturing machinery in real time. The control can respond to and correct for dynamic conditions. For example, the software might automatically add blue pigment ingredient to compensate for a off-color feedstock, thereby keeping the end product's color within product specifications.","While conventional process control software is responsive to changing conditions in its operating environment, the operating environment must be highly constrained. In fact, the process under control is frequently mathematically modeled to provide the precise definition that is required for proper software operation. For example, process control software suited to controlling the blue paint process that is described above would need to undergo significant customization to be useful in another, seemingly related, manufacturing process. Consequently, conventional process control software is limited in its utility for processing action items. Unlike process control instructions, action items concern activities in an unrestricted environment that is not well-defined. Additionally, conventional process control software cannot assess an instruction to determine the extent to which it can be completed with manual verses automatic control. Other limitations are similar to those described above in reference to the limitations of conventional organizer software.","Background Closing","In many instances, it would be desirable for a user to enter an action item into a computer and for a computer program to intelligently assess and process the action item. It would be desirable for a computer program to determine if the action item can be completed automatically, manually, or with a combination thereof. If an automatic processing was determined, the program could initiate automatically processing the action item. Alternatively, a computer could inform a user as to the potential for automatic processing so that the user can accordingly dictate the processing of the action item. If a combination was determined, it would be useful for the program to parse the processing of the action item into computer and manual steps.","In addition to the desirability of computer-based assessing and processing of action item, it would be desirable for a computer program to have capabilities related to tracking, identifying, and timing resources. It would be desirable for a computer program to track the availability of resources and to provide notification when adequate resources become available for automatically processing the action item. By timing the processing of an action item with the optimum availability of resources, the action item could be processed more efficiently than would be otherwise possible. It would also be useful for a computer to proactively seek resources over a network, such as a LAN or the Internet, for processing an action item. With appropriate resources identified, a computer could automatically complete an otherwise manual action item or offer a user several processing options.","Turning from functionality to user interface, in many instances it would be desirable for a user to interact with a list of action items entered into a computer system, such as a tablet personal computer, through a user interface optimized to facilitate handling action items. It would also be useful for an action item user interface to provide for entering action items with electronic ink and\/or free form text.","Accordingly, there is a need in the art for a method and system for interacting with action items in an intuitive manner and for automatically and intelligently assessing and handling action items an inherently unstructured, unconstrained environment.","The present invention can include a method and system for handling action items. The system can include a computer system, such as a tablet personal computer and software, and a network connection to a LAN or to the Internet. Action items can include various tasks involving steps undertaken by one or more computers, one or more humans, or a combination thereof. Action items can also include steps undertaken by machines other than computers and the steps can be undertaken in conjunction with human and\/or machine involvement. Steps can be undertaken with resources available locally and\/or remotely over a computer network.","The present invention can include a method or system for assessing an action item to determine or predict the extent of human and automatic processing associated with its completion. The extent can be assessed in terms of a graduated level or one or more discrete levels. The discrete-level approach can include assigning a designation to an action item. As a non-limiting example, the designation can either correspond to or be chosen from the group of manual, semiautomatic, and automatic. The present invention can include a method or apparatus for processing an action item with a level of automatic processing or computer-based steps and manual processing or human intervention that is commensurate with the assessment. Action item processing can be initiated by a signal such as a prompt and can be based on parameters such as resource availability and user preference.","Multiple approaches are available to assess an action item to determine the extent of human and automatic handling. A first approach can include referencing an action item to a look up table. A second approach can include user assessment. A third approach can include comparing resources required to complete the action item with available resources. A fourth approach can include preliminarily processing an action item with automatic steps and then designating it as semiautomatic or manual if automatic processing becomes delayed. A fifth approach can include combining any of the above approaches.","According to one aspect of the invention, a computer can maintain a dynamically updated table of available resources with utility for processing action items. The table can include software resources, hardware resources, connectivity resources, external resources, data resources, and miscellaneous resources. The table can include local resources and resources available remotely via a network. The table can be updated periodically or by an event trigger such as system restart. Action item processing can be timed to coincide with the resource availability.","According to one aspect of the invention, an action item's resource requirements can be defined and recorded in a table. This table can be mapped to a table of available resources. An action item can be processed according to the map.","According to another aspect of the invention, text describing an action item can be entered by keystroke, electronic ink, or voice recognition. Deriving action items from the text can include natural-language processing or key-word extraction. Action items can also be selected from a defined list.","According to another aspect of the invention, a computer can prompt or otherwise signal a user for intervention or request status of completion of a manual step. Likewise, a user can initiate computer steps or receive status information from a computer regarding completion of an automatic step.","According to another aspect of the invention, screen displayed icons can represent action item parameters. An icon can indicate action item designation, for example manual, automatic, or semiautomatic. An icon can also indicate completion status of an action item, for example \u2018pending,\u2019 \u2018stopped,\u2019 \u2018complete,\u2019 \u2018manual step needed,\u2019 \u2018auto steps in progress,\u2019 or \u2018stalled.\u2019","The discussion of handling action items presented in this summary is for illustrative purposes only. The present invention can handle action items with a combination of automatic processing and human intervention that is commensurate with application requirements, action item characteristics, user preference, and available resources.","The present invention is suited for implementation in a computer system such as a tablet personal computer and can include a specially configured user interface with provisions for electronic-ink and natural language processing of free-form text. The present invention can provide a method and system for intelligently handling action items in a manner commensurate with application requirements, action item parameters, dynamic operating conditions, and user preferences. The present invention can assess action items based on parameters of an unconstrained operating environment to determine the extent to which action items can be completed automatically with computer-based processing steps, manually with human-intervention steps, or semi-automatically with both automatic and manual steps. The present invention can engage internal, local, remote, or networked resources to process the action item.","Exemplary Operating Environment","Exemplary embodiments of the present invention will hereinafter be described with reference to the drawings, in which like numerals represent like elements throughout the several figures.  illustrates an exemplary operating environment for implementation of the present invention.","The exemplary operating environment includes a general-purpose computing device in the form of a conventional personal computer , as exemplified by the architectural overview in the Figure. Generally, the personal computer  includes a processing unit , a system memory , and a system bus  that couples various system components including the system memory  to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes a read-only memory (ROM)  and a random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within personal computer , such as during start-up, is stored in ROM .","Personal computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD-ROM or other optical media. Hard disk drive , magnetic disk drive , and optical disk drive  are connected to system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively.","Although the exemplary environment described herein employs hard disk , removable magnetic disk , and removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, RAMs, ROMs, and the like, may also be used in the exemplary operating environment. The drives and their associated computer readable media provide nonvolatile storage of computer-executable instructions, data structures, program modules, and other data for personal computer .","A number of program modules may be stored on hard disk , magnetic disk , optical disk , ROM , or RAM , including an operating system , an ink processing module , a stylus and ink module , a document editing module , and an automatic action item processing module . Program modules include routines, sub-routines, programs, objects, components, data structures, etc., which perform particular tasks or implement particular abstract data types. Aspects of the present invention may be implemented in the form of a ink processing module  that can operate in concert with a stylus and ink module  to edit an electronic document .","A user may enter commands and information into personal computer  through input devices, such as a keyboard  and a pointing device . Pointing devices may include a mouse, a trackball, and an electronic pen that can be used in conjunction with an electronic tablet. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to processing unit  through a serial port interface  that is coupled to the system bus , but may be connected by other interfaces, such as a parallel port, game port, a universal serial bus (USB), or the like. A display device  may also be connected to system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers.","The personal computer  may operate in a networked environment using logical connections to one or more remote computers . Remote computer  may be another personal computer, a server, a client, a router, a network personal computer, a peer device, or other common network node. While a remote computer  typically includes many or all of the elements described above relative to the personal computer , only a memory storage device  has been illustrated in the Figure. The logical connections depicted in the Figure include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, the personal computer  is often connected to the local area network  through a network interface or adapter . When used in a WAN networking environment, the personal computer  typically includes a modem  or other apparatus for establishing communications over WAN , such as the Internet. Modem , which may be internal or external, is connected to system bus  via serial port interface . In a networked environment, program modules depicted relative to personal computer , or portions thereof, may be stored in the remote memory storage device . It will be appreciated that the network connections shown are exemplary and other provisions for establishing a communications link between the computers may be used.","In one exemplary embodiment of the present invention, a list of action items can be shared among multiple computer systems without a single computer being responsible for the entire list. The computer systems can be connected together in a networked or otherwise shared environment. In this embodiment, different computer systems and different people in different locations can implement different aspects of an action item list. For a single action item from the list, a computer in one location can implement one aspect of the action item and a person in a different location can implement another aspect of the action item. Moreover, a person and computer in one location can implement one action item from the list while another person and computer positioned together at a different location can implement another action item from the list.","Moreover, those skilled in the art will appreciate that the present invention may be implemented in other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor based or programmable consumer electronics, network person computers, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Referring now to , an overview of an exemplary network operating environment for one embodiment of the present invention is illustrated.  shows N computer systems linked together via a network . The computer systems can include tablet personal computer systems , personal organizer computer systems , and conventional personal computer systems . Other devices, not shown, such as printers, fax machines, special purpose computers, and telephonic equipment can also be included in the network.","The network  can include a LAN, an intranet, an enterprise network, a service area network, the Internet, and\/or another network. The network  can include various types of data links such as wireless data links, satellite data links, fiber optic data links, and electronic data links. The network  can be configured in a star, ring, or other topology. Using the network  to communicate with other devices, a computer A can seek resources for implementing the present invention from other computers and persons connected to the network . Alternatively, aspects of the present invention can be distributed among multiple computers and\/or persons on the network .","One of the computer systems A can provide the primary user interface . Whereas  provides an example of storing the automatic action item processing module  in a conventional personal computer  that can have electronic ink processing capabilities,  provides an example of storing the module in a tablet personal computer  with electronic ink capabilities accessed via a user interface display screen . Electronic ink capabilities can include capabilities for editing electronic ink. A tablet personal computer  can signal other networked computers to implement various aspects of the present invention.","Referring now to , the figure depicts an exemplary screen display of a user interface  of the primary user interface computer A. This screen display is related to a process  of  that is described below for assessing and processing action items. The screen display  includes a section  that lists action items such as \u2018get 2,000 mile service for car\u2019 , \u2018file year end tax return\u2019 , and \u2018get a haircut\u2019 . An entry can be selected, for example by highlighting the action item \u2018get a haircut\u2019  as indicated in the Figure.","After selecting the action item , the user interface  can provide information to the user regarding the action item. Such information can be displayed in one or more sections of the display , for example in a \u2018designation\u2019 section  and a \u2018status\u2019 section . For example, if a selected action item is designated as manual by the assessment process , , described below in reference to , the screen indicator MANUAL  can appear on the exemplary display section  to inform a user of the manual designation. Likewise, if a selected action item is designated as semiautomatic or automatic, the screen indicator SEMIAUTOMATIC  or AUTOMATIC  can appear. The exemplary designation section  of the exemplary screen display  can also include a graphical icon  that indicates the designation of the action item. The screen display can also provide a user with the option, not depicted, to input a user-defined designation, for example to override a system-defined designation.","The exemplary user interface screen display  also provides an exemplary section  for tracking the completion progress of processing an action item. The completion progress can be represented by a text block  and\/or by a graphical icon  that is updated during action item processing. After an action item is completed, the text block  or graphical icon  can also provide an indication of the processing used to complete the action item. For example, the graphical icon  can indicate that a completed action item was processed with manual, automatic, or semiautomatic processing. An exemplary process for updating status is described below.","Referring now to , an exemplary architecture  is illustrated for editing electronic ink in accordance with an embodiment of the present invention.  shows typical hardware and software components used in operating the invention from a functional perspective. Conventional input devices are represented by the keyboard  and the pointing device (mouse) . A user can enter commands and information into the computer , depicted back in , using the input devices. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, and scanner.","A conventional output device, such as monitor , is used to display information from the computer . Other output devices (not shown) can include a printer or speaker. Other hardware components shown in  include an electronic tablet  and an accompanying stylus . The tablet  and stylus  are used to input handwriting strokes which are converted to collections of data that can be represented as electronic ink. The electronic ink may be incorporated into an electronic document  and may be displayed on either the electronic tablet  or the monitor , or both.","Although the electronic tablet  and the monitor  are illustrated as being distinct, in a preferred and exemplary embodiment they are either coupled or form a single component. The joint tablet\/monitor component has the ability to display information and receive input from the stylus . Also shown among the hardware components is a conventional electronic storage device such as a hard drive  or RAM .","In the representative architecture , the hardware components are coupled to an ink processing software module . It should be understood by those skilled in the art that  is merely representative and that in practice the hardware components typically are coupled to the elements shown in . The ink processing module  is operable for receiving data from the electronic tablet  and\/or the stylus  and rendering that data as electronic ink. In a preferred and exemplary embodiment, the ink processing module  is a collection of software modules that perform different tasks for rendering handwriting strokes as electronic ink.","For example, the stylus and ink module  can receive data describing the positions and angles of the stylus  for a series of handwriting strokes. The stylus and ink module  can interpret the data for rendering electronic ink. Other software modules, such as a gesture recognizer  and word recognizer  can be designed to identify certain handwriting strokes and assign them a particular significance. For example, certain gestures such as a cross-out may be recognized and associated with other editing processes. The ink processing module  can also include an erasing functions module  for removing electronic ink that has been previously rendered.","The windows operating system  can comprise a graphical user interface (GUI) manager . The GUI manager  in combination with the document editing module  can link to the automatic action item user interface screen display  depicted in  so as to provide the display with capabilities for editing electronic ink.","The document editing module  can be operatively linked to the automatic action item processing module . The document editing module can use application programming interfaces (APIs), not shown, to form this link. With the APIs, the document editing module  can make calls to other application programs associated with implementing the present invention.","The document editing module  may further comprise a collection of software modules for controlling and manipulating electronic ink rendered on the monitor . For example, a parsing module  can be used to identify handwriting strokes that are selected by the user for editing. Selected strokes may by highlighted or shaded to assist the user in identifying which strokes are to be edited. A classifier module  can identify certain handwriting strokes as being part of a word or drawing. Software modules such as the layout module  and the insert space module  can be designed to control how electronic ink is rendered and moved. Other modules can include a selection manager , a context menu manager , a text input manager , and a user interface language input processor .","The selection manager  can monitor how converted text or electronic ink is selected for editing by the user. The context menu manager  can monitor the selection of a list of alternate words that can be displayed when a user edits a word in converted text. The text input manager  can operate as an interface for a user interface language input processor  that uses language rules to assist in the recognition of words through context.","Ink processing modules are known in the art and are useful for an electronic tablet to function. The modules shown in  are representative and those skilled in the art should understand that other modules may also be part of or coupled to the document editing module . For example, the document editing module  may work with a rich edit module  that provides added functionality such as monitoring and controlling the selection of text and word wrapping.","The present invention includes multiple computer programs which embody the functions described herein and illustrated in the exemplary display screens and the appended flow charts. However, it should be apparent that there could be many different ways of implementing the invention in computer programming, and the invention should not be construed as limited to any one set of computer program instructions. Further, a skilled programmer would be able to write such a computer program to implement the disclosed invention without difficulty based on the exemplary display screens and flow charts and associated description in the application text, for example.","Therefore, disclosure of a particular set of program code instructions is not considered necessary for an adequate understanding of how to make and use the invention. The inventive functionality of the claimed computer program will be explained in more detail in the following description in conjunction with the remaining Figures illustrating the functions and program flow.","Certain steps in the processes described below must naturally precede others for the present invention to function as described. However, the present invention is not limited to the order of the steps described if such order or sequence does not alter the functionality of the present invention. That is, it is recognized that some steps may be performed before or after other steps or in parallel with other steps without departing from the scope and spirit of the present invention.","Exemplary Subsystem for Entering Action Items","The present invention can include a user interface subsystem. Referring now to , these figures illustrate some exemplary aspects of a user interface subsystem related to entering action items.  depicts a functional block diagram overview of exemplary functional components for entering action items.  illustrates an exemplary screen display  of a user interface that provides for user interaction including entering action items.","Referring now to , this figure illustrates exemplary processing options to generate action item entry  from various forms of user input. The Figure depicts an exemplary relationship between components, each of which may include software routines, not depicted. A component  that provides natural language processing of free-form text is operative to derive an action item from text that is input by electronic ink or conventionally typed text, the input of which is described below in reference to . A component  that provides key-word processing of free-form text can also derive an action item from input text. A component  that provides menu driven input can select an action item from a list of action items as described below in reference to . A component  that provides voice recognition can derive an action item from spoken language that is input as described below in reference to . These processing options are described in more detail below in reference to .","Referring now to , the screen display  can include a window  that provides user access to a set or menu of defined action items. The screen display  can be responsive to electronic ink and can be a component in a tablet personal computer system , such as those illustrated in . An action item of the set can be selected by checking a box on the screen display using an electronic ink stylus , such as the one illustrated in . For example, the action items \u2018year-end tax return\u2019 A and \u2018get a haircut\u2019  can be selected as indicated in the Figure. In the example display , other listed action items, such as \u2018service automobile\u2019 A, remain unselected.","The set can be defined generically so that when a user acquires a system that embodies the present invention, the user has access to a predefined set of action items. The user can customize the predefined set, for example appending the set. Action items in the defined set can also be assessed to determine a subset that can be processed with available resources. This subset can be displayed in a user interface similar to .","To facilitate menu-driven processing  of action items, the defined set can be structured into a hierarchical format or divided into nested subsets having related characteristics. For example, a first subset can be made up of action items related to purchasing consumer goods. Within the first subset, a second subset can be made up of action items related to purchasing tickets. Within the second subset, a third subset can be made up of action items related to purchasing concert tickets.","When coupled to a hierarchical interface, the hierarchical set format can facilitate user access to a list of action items. For example, selecting the action item \u2018Buy _\u2019  can provide user interface to a first subset. Selecting the action item \u2018Buy tickets for _\u2019  can provide user interface to a second subset. \u2018Buy tickets for the season opening football game\u2019 is an example of an action item that can be included in the second set. \u2018Buy tickets for the fall concert series\u2019 is an example of an action item that can be included in the third subset","Menu-driven processing  can also be engaged through a tree-structure user interface, not illustrated. A tree-structure interface can access a database of action items that is not necessarily hierarchically structured. In addition to entering action items, menu-driven user interfaces can be used for general user interface with action item handling. For example, a menu-driven interface can be used to initiate processing steps to complete an action item.","The exemplary screen display  can also support entering action items by electronic-ink-based handwritten script . For example the action items \u2018service automobile next week\u2019 B and \u2018file year-end tax return\u2019 B can have equivalent meaning to the corresponding menu-driven entries A, A.","Handwritten script  can explicitly spell out an action item. In other words, handwritten script can recite, word-for-word, an action item. Handwritten script  can also be processed to identify an action item without a word-for-word recitation. For example, handwritten script gestures  can be processed with an ink processing module , as depicted in  and elsewhere, to convert the gestures into conventional, free-form word and sentence content based on ASCII text.","Although not illustrated in the , the screen display can also provide for keyboard-typed entry of free-form text. Free-form text, whether derived from electronic ink or from convention keyboard typing, can be processed with natural language processing  or key-word driven processing , as illustrated in , to generate an action item. Such processing can either select an action item from a defined list to facilitate or provide for the generation of a user-defined action item. The screen display  can include entry points, illustrated as buttons ,  in , for a user to select a preference for processing free-form text as illustrated in . In addition to entering action items, natural language processing of free-form text can be used for general user interface with action item handling. For example, natural language processing can be used to initiate processing steps to complete an action item, not illustrated.","Referring now back to , action items entered via spoken language do not necessarily require a visual user interface screen display . Spoken text can be processed by voice recognition processing . The voice recognition processing can generate free-form text that can be processed as described above, for example fed, not illustrated, into the natural language processing component . A voice-driven user interface can be based on a tree structure and can include an interactive voice response system. In addition to entering action items, spoken language can be used for general user interface with action item handling. For example, a spoken command can initiate processing steps to complete an action item.","Exemplary Components for Tracking Resource Availability","Referring now to , this figure illustrates an exemplary component of the present invention for tracking resources that have potential utility for processing action items. By tracking resource availability, the present invention can process action items according to the availability of resources. In a preferred and exemplary embodiment, resources are identified and tabulated  along with an indication of availability , . The exemplary table , titled Table of Available Resources in the Figure, can be a component of the Automatic Action Item Processing Module  and can be stored electronically in RAM, or in on a machine-readable medium such as a magnetic disk, hard drive or optical disk.","While the Figure depicts resources tabulated into a conventional table , those skilled in the computer arts will recognize that a wide range of information file structures can be used to track resource availability without departing from the intent of the present invention. The exemplary table  is segmented into categories; however, categorization is not required.","The illustrated table  offers resource examples. Software resources  can be software programs that are potentially useful for processing action items. For example, a tax preparation software package  could be useful to process the action item \u2018file year end tax return\u2019  that is checked in . The software's availability could dictate whether the return is filed manually or by computer.","As another example, a check registry software program, not illustrated, could be useful for processing an action item such as \u2018balance my checking account for November,\u2019 not illustrated. The availability of a check registry software program could dictate whether the action item is processed automatically or manually. If it is determined that the software is available, the present invention can initiate the software program to balance the checking account on December 1. If it is determined that the software is not available, the present invention can prompt a user to manually balance the checking account. In another scenario, the present invention can determine that, although the check registry software package is not currently available, availability is scheduled for the near future. Based on this determination, the present invention can delay processing to coincide with resource availability so that the action item can be processed automatically rather than manually.","Referring briefly back to , in yet another scenario the present invention can seek the check registry software over a network  such as a LAN or the Internet. In an exemplary scenario, the action item might have been entered into a tablet personal computer  that did not have the check registry software. When the tablet personal computer  is connected to a network , the present invention can seek the software, for example locating and accessing it off of a conventional personal computer . The tablet personal computer  can signal the conventional computer  to implement automatic processing steps needed by the action item. Alternatively, responsibility for processing the action item can be transferred to the conventional computer  which can complete the action item utilizing locally accessible resources. In this manner, the present invention can process a list of action items without a single computer being responsible for the entire list. The tablet personal computer  can be linked to the network  via a hard-wire connection or via a wireless connection.","Referring back to , the table  also includes a hardware resources category . This category can include resources such as a WAN interface  that can be useful for processing action items involving remote resources and a high-resolution printer . The printer resource  can be useful for processing action items related to presentations, graphics, and digital photographs.","The table  also includes a connectivity resources category . The resource \u2018link to the IRS\u2019  could be useful for processing the action item \u2018file year-end tax return\u2019  as illustrated in . The resource \u2018link to mechanic\u2019  could be useful for processing action items related to servicing automobiles.","The table  also includes an external resources category . This category exemplifies remote resources. For the example of automatically processing the action item \u2018file year-end tax return\u2019  of , IRS capabilities to process an electronically submitted tax return is a useful resource in addition to \u2018tax preparation software\u2019  and \u2018link to IRS\u2019 . Similarly, the resource \u2018mechanic Internet billing\u2019 capability  can be useful for processing action items related to servicing an automobile.","The table  also includes a data resources category . The resources \u2018yearly bank statements\u2019  and \u2018401K statements\u2019  can be useful for processing action items related to filing taxes and generating personal financial summaries.","The table  also includes a miscellaneous resources category . The resource \u2018surplus cash\u2019  could be useful for processing action items related to purchasing personal goods that are out-of-budget expenditures.","It should be understood that the foregoing examples are only illustrative and that the present invention provides for numerous variations and can accommodate a wide range of resources beyond those listed above without departing from the spirit and scope of the invention.","Exemplary Process for Tracking Resource Availability","In one embodiment of the present invention, the availability of resources is dynamically tracked so that action items can be processed according to changes in resource availability. To facilitate this, the Table of Available Resources  can be updated, either by adding or subtracting resources from the table or by setting an availability indication flag , .","Referring now to , this figure illustrates an overview of an exemplary process , referred to as Update Table of Available Resources, of the present invention for tracking resources that have potential utility for processing action items. In a preferred and exemplary embodiment, this process can be embodied in code that is a component of the Automatic Action Item Processing Module . The process provides for updating  the Table of Available Resources  that is exemplified in .","The table  can be updated either on an event- or a time-driven basis . Non-limiting examples of event triggers are 1) system restart, 2) loading new software, 3) connecting or disconnection a network connection, 4) user prompt, 5) prompt from an external computer, 6) entering a new action item. Using a time-driven update, the table  can be updated daily, hourly, monthly, or over any time period  that is user-specified, system-defined or otherwise determined.","Although not specifically outlined in the Figure, the update process  can provide for individual portions of the table  to be updated based on unique time and event parameters. For example, external resources  might be updated only when a network connection is established or disrupted, whereas the availability of a high-resolution printer  might be updated on an hour-by-hour basis. Such a network connection can include a hard-wire connection, a fiber optic connection, or a wireless connection. Routine  can include a sub-process for seeking resources over a network such as a LAN or the Internet. A schedule of availability can also be maintained so that the timing of handling an action item can be coordinated with the availability of resources.","Dynamic tracking of resource availability facilitates a downgrade in an action item's designation when warranted by changing conditions. For example, suppose a restaurant with web service for catering orders was routinely used for automatically processing action items related to ordering lunches. If the restaurant goes out of business and no backup restaurant is available, a downgrade from automatic to manual would be appropriate in most circumstances. If the restaurant is temporarily closed or too busy to take an order, the downgrade may only be temporary. Dynamic resource tracking provides up-to-date status of resource availability so that action items can be appropriately handled.","In one aspect of the present invention, dynamic resource tracking facilitates handling a list of action items by distributing the processing requirements for the list among a network of computers. For example, based on the availability of resources, each action item from the list can be handled by the network computer with the best resources for processing that action item. Alternatively, the processing steps required to complete a single action item from the list can be distributed among multiple networked computers; each network computer can process the steps for which its resources are best suited.","The logical flow of the routine Update Table of Available Resources  will now be described. Decision step  determines if a time-driven update or an event-driven update is appropriate. In a preferred and exemplary embodiment, the decision can be based on user input, not illustrated. If a time-driven update is determined, the process  flow is directed to a timer routine  that determines if sufficient time has lapsed to generate an updated table of available resources. In a preferred and exemplary embodiment, the timer is set by user input, not illustrated. When the timer routine  determines that sufficient time has lapsed, update routine \u2018generate an updated table of available resources\u2019  is engaged. In a preferred and exemplary embodiment, this update routine  includes specific instructions, not illustrated, to append the table  that is illustrated in  and\/or to set or reset exemplary resource flags , . Such resource flags ,  can be related to resource parameters such as current or predicted availability. After the update routine  is complete, flow returns to the top of the routine . Consequently, a user can switch from a time-driven update to an event-driven update.","If an event-driven update is determined by decision step  rather than a time-driven update, process flow is directed to a routine  that determines if the event has occurred. If a determination is made that the event has occurred, flow is directed to the update routine  described above. If the event has not occurred, the determination routine  is iterated until a positive determination is encountered. At that point, the table  is updated.","Exemplary Components and Processes for Mapping Resources to Action Items","Referring now to , this figure illustrates an overview of an exemplary resource map  for one embodiment of the present invention. The Resource Map  illustrates two action items ,  mapped  to resources  so that the resource requirements or needs of specific action items are specified. In a preferred and exemplary embodiment of the present invention, this mapping can be carried out in the Automatic Action Item Processing Module . Based on the availability of mapped resources, an action item can be processed automatically, semi-automatically or manually. And, if adequate resources are not available, processing the action item might be precluded. The availability flag ,  that is illustrated in , but not in , can indicate current availability.","The action item \u2018service an automobile\u2019  is mapped to connectivity resource \u2018link to auto mechanic\u2019 A and external resources \u2018mechanic timeslots\u2019 A and \u2018mechanic Internet billing\u2019 capabilities A. The action item \u2018file year-end tax return\u2019  is mapped to: 1) software resource \u2018tax prep software\u2019 A; 2) connectivity resources \u2018link to accountant\u2019 A and \u2018link to IRS\u2019 A; 3) external resource \u2018accountant timeslot\u2019 A; and 4) data resource \u2018401-K statement\u2019 A.","Referring now to ,  illustrates an overview of two exemplary tables ,  for specifying an action item's resource requirements.  illustrates an exemplary process  for generating the tables. Tables for specifying an action item's resource requirements are useful to generate the mapping  illustrated in .","Referring now to , this figure illustrates an exemplary Table of Resource Requirements  for the action item \u2018service an automobile\u2019 . The first exemplary table  includes three resource requirement entries: 1) \u2018link to auto mechanic\u2019 B; 2) \u2018mechanic timeslot\u2019 B; and 3) \u2018mechanic Internet billing\u2019 B. The second exemplary table  includes five resource requirement entries: 1) \u2018tax prep software\u2019 B 2) \u2018link to accountant\u2019 B; 3) \u2018link to IRS\u2019 B; 4) \u2018accountant timeslots\u2019 B; and 5) \u2018401K statements\u2019 B. These tables ,  facilitate the generation of the two exemplary maps  that are illustrated in  and described above.","A brief summary follows. A Table of Resource Requirements , , as depicted in , outlines the resource needs for processing an action item , . A Table of Available Resources , as depicted in , outlines resources having potential utility for processing action items. A Resource Map, as depicted in , maps  an action item's resource requirements into available resources. The mapped resources can be flagged , , as illustrated in  to indicate current resource availability. Based on the map  and the availability of the resources indicated by the map , the action item can be designated as automatic, manual, or semiautomatic and processed accordingly. The assessment and handling process is described below in reference to .","Referring now to , this figure illustrates an overview of an exemplary process  for generating resource requirement tables. The illustrated process  provides for a user to define resource requirements for circumstances in which the requirements are not otherwise defined. In a preferred and exemplary embodiment of the present invention, elements and processes representative of those depicted in  can be included in the Automatic Action Item Processing Module .","Following the start sequence for the exemplary process Generate Resource Requirement Table , an inquiry  is made to determine if the resource requirements are already defined for each action item entered, or selected, by a user. If the inquiry results in a negative determination, the user is prompted in routine  to define resource requirements for the action items that need definition. Although not illustrated in this process , the definition can come from a variety of sources other than the user; for example it can come by way of regular software updates that can be provided by a software supplier.","After the resource requirements are defined  for all the relevant action items, table-generation routine  generates a Table of Resource Requirements, as illustrated in the example tables ,  that are described above and depicted in , for each entered action item. If inquiry  results in a positive, rather than a negative determination, the next step subsequent to the inquiry  is the table-generation routine .","The next step following the generation of tables is to engage the Process Action Items routine . As described below, that routine  includes steps for assessing action items and for initiating processing steps in accordance with the assessment.","Those skilled in the computer arts will recognize that the present invention includes a wide range of possible embodiments and processes for specifying an action item's resource needs and for outlining available resources and for correlating needed resources to available resources.","Exemplary Processes for Assessing and Processing an Action Item","Referring now to , this figure illustrates a logic-flow-diagram overview of an exemplary process , labeled Process Action Item routine, for assessing an action item and for processing it in a manner commensurate with the assessment. The process  can be repeated for each action item in a set of entered action item. The assessing includes determining the extent to which an action item can be processed with manual or human intervention steps and automatic or computer-based steps. In a preferred and exemplary embodiment of the present invention, the logic flow diagram can be represented in code that is included in the Automatic Action Item Processing Module .","The process  will now be described following the path of logic flow. In step  the aforementioned mapping  between the Table of Available Resources  and the Table of Resource Requirements  is generated. Following the mapping step , an assessment is made in inquiry  to determine if the map  provides for automatic handling. If the inquiry results in a positive determination, a signal  is generated to initiate the automatic processing of the action item. However, before the positive-inquiry signal  can initiate automatic processing by engaging the routine Process Action Item Automatically , an inquiry is made  to determine if automatic processing is enabled for the action item that is being processed. If the inquiry  determines that automatic processing is enabled, the positive-inquiry signal  is interrupted and the action item is processed automatically.","If either automatic processing is not enabled as determined by inquiry routine  or inquiry routine  determines that the map  does not provide for automatic handling, process flow is transferred to inquiry routine . Inquiry routine  determines if the map  provides for semiautomatic handling of the action item. If the inquiry is positive, a signal  is generated to initiate the semiautomatic processing of the action item. However, before the positive-inquire signal  can initiate semiautomatic processing by engaging the routine Process Action Item Semi-automatically , an inquiry is made  to determine if semiautomatic processing is enabled for the action item that is being processed. If the inquiry  determines that semiautomatic processing is enabled, the positive-inquiry signal  is interrupted and the action item is not processed semi-automatically.","If either semi-automatic processing is not enabled as determined by inquiry routine  or inquiry routine  determines that the map  does not provide for semiautomatic handling, a signal  is generated to initiate the manual processing of the action item. This signal engages the routine Process Action Item Manually . The routine  is typically engaged for each action item in a list of action items.","Various aspects of the Process Action Item routine will now be described. Based on mapping , an action item is assessed ,  as to the extent of human intervention and automatic processing associated with its implementation. The exemplary process provides for classifying or associating a designation with an action item. The designation can be based on discrete levels such as automatic , semiautomatic , or manual . The designation can correspond to a threshold of human intervention and a threshold of automatic processing. Alternatively, an action item can be assessed in terms of a graduated level, not shown. The assessment can be exacting or it can be a prediction.","In the discrete classification approach that is illustrated in , automatic refers to an action item that can be completed with essentially fully automatic processing or computer-based steps. In other words, an automatic action item can be processed to completion using a level of manual processing that is essentially zero and a level of automatic processing that is greater than zero.","Semiautomatic refers to an action item that can be completed with a combination of automatic processing or computer-based steps and manual processing or human-intervention steps. In other words, a semiautomatic action item can be processed to completion using a level of automatic processing that is greater than zero and a level of manual processing that is also greater than zero.","Manual refers to an action item that can be completed with manual processing or human-intervention steps. In other words, a manual action item can be processed to completion using a level of automatic processing or computer-based steps that is essentially zero and a level of manual processing or human intervention steps that is greater than zero.","In summary, based on the circumstances and resources, the present invention can provide an assessment to determine if an action item should be handled automatically using computer-based processing, manually using human-intervention processing, or semi-automatically using a combination of human intervention and manual processing. Responsive to or commensurate with this determination, a signal , ,  that can include a prompt is generated to initiate processing of the action item in accordance with the determination.","Logic process steps  and  provide for user input to specify the extent of computer-based, or automatic processing, that is employed for processing an action item. A user can signal manual or semiautomatic processing of an action item for which automatic processing is available; this aspect allows a user to override a designation.","The process  provides for generating a signal , ,  to process , , and  an action item automatically , semi-automatically , or manually  commensurate with the assessment. The process  can also include processing the action item to completion. The processing steps can be completed in a single computer or in a plurality of networked computers.","Those skilled in the computer arts will recognize that the present invention includes a wide range of possible embodiments and processes for assessing an action item, for predicting the optimal combination of manual and automatic processing, and for outlining the resources available to process the action item. In one embodiment of the present invention, an action item can be referenced to a look-up table. In other aspect of the present invention, a user can assess an action item. In yet another aspect, an action item can be preliminarily processed with automatic steps and then designated as semiautomatic or manual based on processing progress or user intervention. For example, if processing is stalled or becomes delayed, the designation can be downgraded from automatic to semiautomatic or manual.","Assessment Examples","The present invention can assess action items in an unconstrained, dynamic operating environment. Consequently, the result of an action item's assessment is dependent on various parameters of the operating environment such as the availability of resources and the preference of a user. To provide a contextual overview of action item assessment, several action items are briefly described below. The description is neither exhaustive nor precise; it is illustrative. It should be understood that the present invention provides for numerous assessment variations and can accommodate a wide range of action items beyond those described below.","Manual Action Items","A manual designation can refer to an action item that can be primarily handled with human intervention processing. A manual designation can refer to action items such as \u2018get my teeth cleaned at the dentist,\u2019 not illustrated, \u2018get a haircut\u2019 , and \u2018service an automobile\u2019  as illustrated in , , and A. In these examples, the steps to complete the action item primarily include human activities entailing manual steps. A computer can remind the human, by a prompt or another signaling provision, to initiate steps associated with completing the steps. For example, a prompt or other signal can remind a user to pick up milk on the way home from work on Monday, to stop by the barber during Thursday's lunch, or drop off an automobile at the service center on Friday morning. In one aspect of the present invention, a reminder can be delivered via a computer that is not otherwise involved in processing the action item. For example, a stationary personal computer A can establish wireless communication to a personal organizer computer system , as illustrated in , that is carried on one's person. The stationary computer can send a reminder to the organizer for subsequent delivery to the person.","Semiautomatic Action Items","A semiautomatic designation can refer to an action item that can be handled with a combination of human intervention and automatic processing. A semiautomatic designation can refer to action items such as \u2018file year-end tax return\u2019  and \u2018service an automobile\u2019  as illustrated in , , and A. In these examples, both a computer and a human can take steps to complete the action item. In the example of \u2018service an automobile\u2019 , a semiautomatic designation can be appropriate rather than a manual designation if sufficient resources are available to process one or more steps of the action item using automatic processing rather than manual intervention.","A computer's automatic processing can include steps such as utilizing a WAN network connectivity link to the auto mechanic , as listed in , to coordinate the user's schedule of time availability with that of the service center's automobile mechanic . A human's manual intervention can include manual steps such as dropping the automobile off at the service center and filling out service center billing paperwork. In the example of \u2018file year-end tax return\u2019 , illustrated in , automatic processing might include steps implemented through tax prep software , illustrated in , such as compiling and assembling information to generate appropriate tax forms. Manual actions can include meeting with an accountant and physically mailing the tax return.","Automatic Action Items","An automatic designation can refer to an action item that is handled primarily with one or more computer systems, such as a personal computer or another machine capable of automatic processing. An automatic designation can refer to action items such as \u2018schedule a meeting\u2019 or \u2018service an automobile\u2019 , illustrated in . In these examples, a computer can take essentially all steps to complete the action item. In the example of \u2018service an automobile\u2019 , an automatic designation can be appropriate rather than a manual or a semiautomatic designation if sufficient resources are available to process essentially all steps associated with completing the action item using automatic processing. Exemplary computer-based automatic steps can include: 1) tracking the auto's mileage to determine need for oil change; 2) establishing a computer-to-computer connection with a service center; 3) scheduling for the service center to pick up the automobile, complete the oil change, and return the automobile; and 4) transacting the sale. Referring now to , resources to facilitate these automatic steps can include a connectivity link to the auto mechanic , a mechanic Internet billing system , and mechanic timeslots . Thus, an automatic verses semiautomatic designation can be based on the availability of external resources  related to a mechanic service center's resources to pickup and return an automobile and to complete transaction paperwork by computer .","Exemplary Process for Automatically Processing an Action Item","Referring briefly back to , the routine Process Action Item can initiate the automatic processing of an action item, for example engaging the exemplary routine Process Action Item Automatically . Referring now to , the figure illustrates a logic flow diagram that is an overview of the exemplary process for automatically processing action items. In a preferred and exemplary embodiment of the present invention, code representative of the logic flow diagram can be included in the Automatic Action Item Processing Module . Automatic processing of an action item can also be implemented in a computer that is networked to another computer that implements other aspects of the present invention such as mapping  and assessing ,  steps and generating signals , ,  to initiate action item processing.","The process  provides for a user to signal to stop the automatic processing  before an action item is completed. Once automatic processing is stopped, the user can signal  the action item to be processed manually by restarting the Process Action Item routine  that is described above and illustrated in . The process  also includes a stalling routine  that can include a timer, not illustrated, for testing for excess time lag between automatic steps. The process  also include provisions  for the user to engage semiautomatic processing  if completion progress is stalled. The process  also has provisions , ,  for tracking progress in completing an action item and provisions , , ,  for updating the status of the action item so that a user can monitor completion progress  from the screen display  depicted in .","The logic of the routine Process Action Item Automatically  will now be described according to the flow sequence. After initialization, the routine includes a step  to update the status of the action item. As indicated in , this status can be displayed  in the appropriate section  of a user interface screen display . After the status is updated, control is transferred to routine  whereby one or more automatic processing steps are implemented. Subsequently, an inquiry  is made to determine if the automatic processing is stalled. If automatic processing is not stalled, an inquiry  is made to determine if the process is complete. If the process is not complete, routines  and  are iterated. If the process is complete, the status of the action item is updated as COMPLETE by routine . Routine  can also provide an indication that the action item was completed with automatic processing. Following routine , the automatic processing routine  ends.","If inquiry  determines that the process is stalled, the status of the action item is updated as STALLED. Next, an inquiry  is made to determine if the user wants to stop processing the action item. If the inquiry  is positive, the status of the action item is updated as STOPPED by routine  and the automatic processing routine  ends. If inquiry  determines that a user does not want to stop processing the action item, an inquiry  is made to determine if the user wants to include manual steps in the processing of the action item. If the inquiry determines that the user wants to include manual steps, the routine Process Action Items Semi-automatically  is engaged. If the inquiry determines that the user does not want to include manual steps in processing the action item, the post initialization steps of the automatic processing routine  are iterated.","Exemplary Process for Semi-Automatically Processing an Action Item","Referring briefly back to , the routine Process Action Item can also initiate the semiautomatic processing of an action item, for example engaging the exemplary routine Process Action Item Semi-automatically . Referring now to , the figure illustrates a logic flow diagram that is an overview of the exemplary process for semi-automatically processing action items.","In a preferred and exemplary embodiment of the present invention, code representative of routine  can be included in the Automatic Action Item Processing Module . The logic flow diagram can also be implemented in a networked computer that is linked to a computer that implements other aspects of the present invention.","The exemplary process  parses action item processing into manual and computer steps by iterating  between generating a signal to initiate automatic processing steps  and prompting human intervention  for manual steps. The process  also provides for a user to initiate a signal to stop processing of the action item before the action item has been completed. This provision offers a user the option to stop semi-automatically processing the action item and take up manual processing. The process  updates the status of the action item , ,  so that a user can monitor the status  of processing progress from the screen display  depicted in .","The logic of the routine Process Action Item Semi-automatically  will now be described according to the flow sequence. After initialization, routine  implements any initial automatic processing steps needed to complete the action item. Next, routine  generates a prompt to signal a human to intervene and implement manual steps in accordance with the action item's processing requirements. Next, an inquiry  is made to determine if a user wants to stop processing the action item. If the determination is positive, update routine  updates the status as STOPPED and the semi-automatic processing routine  ends. If the determination is negative, the status is updated by update routine , for example defining the status as MANUAL STEP NEEDED. Following status update , the automatic processing routine  implements automatic processing steps in accordance with the action item's processing requirements. Next, inquiry routine  makes a determination if the action item has been completed. If the action item is complete, update routine  updates the status as COMPLETE. Routine  can also provide an indication that the action item was completed with semiautomatic processing. Following routine , the semiautomatic processing routine  ends. If the action item is not complete the semiautomatic process  is iterated beginning with the step  for prompting for manual intervention. The iteration provides for implementing manual and automatic steps via routines  and  in a sequence that meets the action item's processing requirements.","Exemplary Process for Manually Processing an Action Item","Referring briefly back to , the routine Process Action Item can initiate the manual processing of an action item, for example engaging the exemplary routine Process Action Item Manually . Referring now to , the figure illustrates a logic flow diagram that is an overview of the exemplary process for manually processing action items.","In a preferred and exemplary embodiment of the present invention, code representing the logic flow diagram can be included in the Automatic Action Item Processing Module . The logic flow diagram can also be implemented in a network computer that is linked to another computer that implements other aspects of the present invention.","The process  includes iterating a step  that includes generating a signal to prompt a human to intervene and complete manual processing steps. Iteration continues until a determination is made that the action item is complete . The process  also provides for a user to signal to stop manually processing of the action item before processing is complete. After stopping manual processing, a user can generate a signal to initiate automatic or semiautomatic processing by restarting the Process Action Item Routine illustrated in  and described above. The process  updates the status of the action item ,  so that a user can monitor the status of processing progress  from the screen display  depicted in .","The logic of the routine Process Action Item Manually  will now be described according to the flow sequence. After initialization, routine  generates a signal to prompt a human to intervene and complete one or more manual steps. Next, an inquiry routine  determines if a user want to stop processing the action item. If the inquiry is positive, status routine  updates the status of the action item as STOPPED and the manual processing routine  ends. If the inquiry is negative, update routine  updates the status of the action, for example defining the status as MANUAL STEP NEEDED. After the status is updated, inquiry routine  determines if the action item is complete. If it is complete, update routine  defines the status as COMPLETE. Routine  can also provide an indication that the action item was completed with manual processing. Following routine , the manual processing routine  is ended. If it is not complete, the manual processing routine  is iterated beginning with prompting step .","Accordingly, the present invention can provide a method and system for intelligently handling action items in a manner commensurate with application requirements, action item parameters, dynamic resource conditions, and user preferences. The present invention can assess action items based on parameters of the operating environment and determine the extent to which action items can be completed automatically with computer-based processing steps, manually with human-intervention steps, or semi-automatically with both automatic and manual steps. The present invention can generate a signal to process action items in a manner commensurate with the assessment. Responsive to the signal, the present invention can engage internal, local, remote, or networked resources to process the action item. The present invention can also provide a user interface specially configured for intelligently handled action items and includes electronic-ink and natural language processing capabilities.","It should be understood that the foregoing relates only to illustrative embodiments of the present invention, and that numerous changes may be made therein without departing from the spirit and scope of the invention as defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIGS. 2A-2B"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIGS. 4A-4B"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIGS. 8A-8B"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 11","FIG. 9"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 12","FIG. 9"]}]},"DETDESC":[{},{}]}
