---
title: Console redirection system for remotely controlling operation of devices on a host computer if data packet has been received during a time interval
abstract: A technique for providing communication between two computers through a network in a way to allow one computer to control the other.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06999995&OS=06999995&RS=06999995
owner: Intel Corporation
number: 06999995
owner_city: Santa Clara
owner_country: US
publication_date: 20030401
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a continuation (and claims the benefit of priority under 35 USC 120) of U.S. application Ser. No. 09\/387,614, filed Aug. 31, 1999 now U.S. Pat. No. 6,609,151. The disclosure of the prior application is considered part of (and is incorporated by reference in) the disclosure of this application.","This disclosure generally relates to communication among linked computers, and more specifically, to access and control of one computer by a remote computer.","Computers, their peripherals, and other information processing devices can be connected to one another by communication channels to form computer networks. The communication channels may be wired links such as electrical cables and optic fibers, or wireless links by radio waves, or a combination of both. Linked computers can communicate with one another to exchange data and share various hardware and software resources over the network.","A computer connects to a network by using a network interface card (\u201cNIC\u201d). Other information processing devices may also use a NIC to communicate with a network. The NIC essentially operates as an agent to provide communication between the computer and the network. Each NIC can have a hardwired identification number known as medium access control (\u201cMAC\u201d) address so that an associated computer can be uniquely identified by other computers in the network.","Computers in a network, e.g., a local network (\u201cLAN\u201d), may have different properties from one another, such as hardware configurations, NIC specifications, and operating systems. Communication protocols can encode the data in a way that different computers can \u201cunderstand\u201d one another regardless their differences. In addition, different networks within a wide area network (\u201cWAN\u201d) may use different protocols. Hence, additional protocols may be used to allow communication between different networks. For example, the Internet uses TCP\/IP protocols as its WAN communication protocols and a computer is assigned with an Internet protocol (IP) address in order to be uniquely identified and recognized over the Internet.","One trend in network computing is to increase the accessibility, manageability, and control of hardware, software, or data in the network by a user from a different location where a link to the network is available. For example, a networked computer may implement instrumentation to allow remote access of its internal system contents (e.g., hardware and software components, static and dynamic data in its memory units) from an authorized computer via the network. As another example, a computer may be booted by first downloading system software from a remote server across a network and then executing the boot routine. This preboot operation can be implemented by using the Preboot Execution Environment (PXE) technology (Wired For Management 2.0, Intel, 1998).","The present specification provides a technique for exchanging data between two networked computers to allow one computer to control the other and to share the hardware and software resources. One embodiment of the technique uses a basic input and output system (BIOS) of a first computer to control a network interface card (NIC) to communicate with a second computer in a network. A timer interrupt is generated based on a timing signal in the first computer. The BIOS of the first computer is configured to communicate with the second computer according to the timer interrupt to allow the second computer to control the first computer both when the first computer has a running operating system, and when the first computer does not have a running operating system.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1","b":["100","120","130","100","100","130","100","130","100","130","130","120"]},"In one embodiment, the computer  includes a processor  (e.g., an Intel microprocessor), a system bus , and a NIC  connected to the system bus . The system bus  also connects other computer devices within the computer , among which only I\/O devices  (e.g., keyboard and monitor), a read-only memory (\u201cROM\u201d) , a random-access memory (\u201cRAM\u201d) , an interrupt controller , and a timer logic circuit  are shown as examples. A basic input and output system (\u201cBIOS\u201d), i.e., a set of operating routines or instructions that control data communication between different devices within a computer, is stored in the ROM . When the computer  is turned on, the BIOS instructions are executed by the computer processor  to initialize and establish communication of the devices connected to the system bus  (including the NIC ). Then, an operating system is launched to control the operations of the computer . The operating system may be installed locally within the computer  or in a remote device connected to the network .","At least a portion of the RAM  is allocated to buffer data received through the NIC  from the network  and data generated by other devices in the computer  that is to be sent to the network . A data packet from the network  is first stored in the RAM  and then the BIOS unpacketizes the data and sends it to a respective device. Similarly, the outgoing data is first captured and stored in the RAM  and is then transmitted to the network  in a packet form based on a protocol used by the BIOS.","The NIC  may include a network controller, NIC memory units, a system interface to the computer system bus , and a communication port that connects to the network  through at least one communication channel. The network controller is a logic circuit that controls the NIC operations including communication between the NIC  and the BIOS of the computer through the system interface and communication between the NIC  and the network  through the communication port. The NIC memory units may include a RAM and a ROM. The RAM may function as a memory buffer to temporarily store data that either is sent to or received from the network . The ROM, which may be implemented by an electronically erasable programmable ROM (\u201cEEPROM\u201d), may store NIC application programs such as communication programs to control the network controller and the NIC operations. Although only one NIC  is shown, the computer  may include two or more NICs.","The network  uses a given set of communication protocols to control and organize the communication among different computers. A part of the BIOS in the ROM  of the computer  implements these protocols to translate or interpret data generated by the computer  in a way that is independent of its computer hardware and software configurations. Hence, the computer  and other computers \u201cspeak\u201d the same language at the network level, i.e., they use a common data format for data packets that are exchanged through the network .","Another function of the protocols is network addressing. When the computer  is connected to the network  through its NIC , a router, i.e., a computer connected in the network  to control the network communication, assigns a network address to the computer  (e.g., the IP address in the TCP\/IP). The data sent out by the computer  is packaged with the assigned network address and other information in the packet header according to the given protocols. Hence, any computer in the network  (e.g., the remote computer ) can recognize that the data is from the computer . Conversely, another computer, when sending data specifically to the computer , also adds the network address of the computer  to its data packet header so the network  can properly route the data to the computer .","The computer  is controlled so that the remote computer  can access and execute its BIOS in the ROM  through the NIC  and the network  regardless of the operating status of the computer . This access can include, e.g., before or after the computer  is booted, when it experiences a failure, or it is under a power management mode such as hibernation. In particular, the present console redirection allows communication between the computer  and the remote computer  when the computer  does not have a locally-running operating system (\u201cOS\u201d), e.g., before the OS is launched, when the computer  has failed to boot for some reason or does not have an OS installed locally. Hence, the console redirection may be implemented by operations of software and hardware components at the BIOS level of the computer  in order to perform certain operations in absence of a local OS and to operate by running an OS in the remote computer .","This OS-independent console redirection may be implemented from at least two different aspects. First, the BIOS stored in the ROM  includes special routines and instructions that control and coordinate the console redirection from the computer  to the remote computer . These special BIOS routines and instructions control operations of the NIC  and direct data for the console redirection to a desired destination. For example, the incoming data from the NIC  may be directed by the BIOS to respective devices in the computer  for further processing or executing certain actions such as the processor , the I\/O devices , etc. In addition, these special BIOS routines and instructions packetize data generated by the computer  and send the data packets to the NIC  for transmission to the network  based on the communication protocols.","In another aspect, an NIC hardware layer interface may be implemented to make the communication between the computer  and the network  (to the remote computer ) independent of the specific hardware configuration of the NIC . This is desirable because the different NICs may have different hardware configurations due to different standards used by different NIC manufacturers and therefore communication with different NICs is in general configuration-specific, specially during the communication between the computer  and the network  prior to boot of the computer . This NIC interface simplifies the console redirection by minimizing or removing the dependence on the NIC configuration. It can make different NICs communicate to the network  in a uniform manner. Both hardware and software implementations or a combination of both may be used.","In a software implementation, the NIC interface is an application programming interface (\u201cAPI\u201d) having a set of NIC routines. These NIC routines include initialization routines to obtain information on the hardware configuration of the NIC , including its MAC address and data structure, and then convert the obtained NIC information into a format based on a standard protocol. The converted NIC information is transferred to the RAM  to be used by the BIOS in the ROM  for communicating with the network . The NIC routines also establish a communication link between the NIC  and the network  for receiving or transmitting data based on the standard protocol under control of the BIOS.","At least two different types of interrupt service routines (\u201cISRs\u201d) are involved in the present console redirection. The first type of interrupts is a timer interrupt service routine. The interrupt controller  periodically generates this timer ISR at periodic timer ticks of a clock signal produced by the timer logic circuit . The BIOS in the ROM  can execute an operation for the console redirection only at a timer ISR. Hence, the frequency of this clock signal partially determines the speed at which the data is sent or received through the NIC  by the computer . In operation, if there is received data from the network  or data to be sent out to the network , the BIOS directs the received data to a respective device within the computer  or sends the data to the NIC  for transmission to the network  at a timer tick. For example, the interrupt controller  can indicate a timer interrupt to the processor  which looks at a timer interrupt address to execute a program. When there is no new data received or to be sent at a timer tick, the BIOS exits the timer ISR and performs other tasks.","A second type of interrupt is an asynchronous interrupt generated by the interrupt controller  whenever the NIC  receives a data packet from the network . The NIC  sends the received data packet to the RAM  and the interrupt controller  directs the BIOS to process the received data as a timer ISR. Such interrupts are asynchronous because data packets from the network  arrive at unexpected times depending on the network conditions such as communication traffic.","The BIOS of the computer  may control the timer logic circuit  to adjust the frequency of the clock signal from which the timer interrupt is generated according to the data flow rate between the computer  and the network . This mechanism allows the computer  to handle the communication with the remote computer  more efficiently, by dynamically allocating sufficient amount of computing power of the computer  to the communication with the network . Ideally, the frequency of the clock signal matches the data flow rate between the computer  and the network . At each and every timer tick, a timer interrupt command the BIOS to either send or receive a data packet, and little or no data is buffered in the RAM . In an actual implementation, the frequency of the clock signal should match the data flow rate as close as possible.","A set of BIOS routines may be implemented to increase the frequency of the clock signal as the data flow rate increases and to reduce the frequency of the clock signal as the data flow rate decreases. One or more monitoring routines may be included in the BIOS to monitor the flow rate. For example, the BIOS may include routines to monitor the flow rate of data into the allocated area in the RAM  for buffering the communication data, or count the rate of asynchronous interrupts generated by the NIC . The information on the flow rate is then used to adjust the frequency of the timer ticks.","In general, any data that is available to the BIOS can be made accessible for the remote computer , including data packets for the display from the video memory on the status of the system or a device, security information, I\/O information, and handshaking information of the computer . The remote computer  can remotely control the computer  by sending data and commands via the network  and the BIOS of the computer  would process these data and commands as if they were generated locally. The data and commands may include the keyboard data (e.g., a keystroke or a combination of keystrokes), data from a pointing device (e.g., the mouse), and instructions generated by one or more application programs running on the remote computer . In this context, the console of the computer  is redirected to the remote computer . In addition, this console redirection allows an operation in the computer  to use hardware or software resources residing in the remote computer  or vice versa.","The above console redirection is achieved at least in part by configuring and operating the NIC  to send desired data from the BIOS of the computer  to the remote computer  and to receive data from the remote computer , all through operations of the BIOS of the computer . The BIOS of the computer  has routines for capturing and packetizing the data in the computer  with headings according to communication protocols so that the data can be routed to the remote computer  through the network . In addition, the BIOS has routines for unpacketizing received data packets by the NIC  and directing the data to respective devices in the computer .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["200","210","230","116","116","116","120","210","116","108","100","116","112","120","220","116","120","100","230"]},"Computers  and  need to know each other's network addresses (e.g., IP addresses) in order to communicate. The address of the remote computer  may be stored in the ROM  in advance or communicated to the computer . The BIOS in the computer  may include the routines to inform the remote computer  of the network address for the computer  upon completion of the step . For example, the BIOS of the computer  may include an electronic mail routine (e.g., the Simple Mail Transfer Protocol for the Internet) to send the newly-assigned network address via email to the remote computer .","At step , a timer interrupt is issued at a timer tick when the BIOS controls the NIC  to send data to or receive data from the remote computer . The BIOS packetizes the data to send the first data packet to the remote computer . After sending the first data packet, the BIOS controls the NIC  to wait for an acknowledgment from the remote computer  for receiving a previous data packet sent by the computer  (step ). When the acknowledgment is received by the NIC , the BIOS then determines whether a data packet intended for the computer  is received from the network . If no data is received, the BIOS opens a network link between the NIC  and the network  at a timer tick to packetize data from the BIOS and sends the data packet according to an accepted communication protocol, i.e., a timer ISR is executed (step ). If data packet for the computer  is received, the BIOS first unpacketizes the received data packet at a timer tick and sends the respective data to intended devices in the computer  (step ). The operation to send data to the network  is then executed in a later timer ISR.","The remote computer  may generate an acknowledgment signal each time it receives a data packet from the computer . Alternatively, the remote computer  may generate an acknowledgment signal after receiving two or more data packets from the computer . This latter method may be used to increase the speed and throughput of the communication between the computers  and . In particular, the remote computer  may adjust its frequency of acknowledgement based on the network conditions (e.g., data traffic). When the delay between computers  and  is relatively short, the computer  can send an acknowledgement signal to the computer  upon receiving one data packet therefrom. The computer  may reduce its frequency of acknowledgement when the delay increases, e.g., sending one acknowledgement signal to the computer  after every two or more data packets are received. The sliding window protocol is one example of such an adjustable acknowledgement mechanism.","If the acknowledgment for receiving a previously-sent data is pending (i.e., not received), the NIC  exits the timer ISR and waits to act upon the next timer interrupt. The NIC  resumes the timer ISR to execute steps , , or  to send data at a timer tick whenever the acknowledgment is received. In one aspect, the above BIOS routine of the computer  ensures that the computer  has the most current status of the computer  by executing any new command from the remote computer  or sending out any data only after the acknowledgment is received.","The remote computer  also uses the above acknowledgment-and-sending sequence to send data and commands to the computer . For example, the remote computer  receives console data such as display data from the computer  that indicates the current operating state. To control the computer  to perform a task, the remote computer  sends out data which may include a keystroke, a command, or a cursor action of a pointing device in the remote computer . The NIC  of the computer  receives and copies the data to the RAM . At a timer tick when a timer ISR is generated, the BIOS decodes the received data to determine its intended device in the computer  (e.g., processor  or a peripheral). The intended device then executes the command. The execution result is captured and stored in the buffer of the NIC  and the routine shown in  is performed to send the result to the remote computer . The remote computer  may then send another command to control the computer .","One implementation of the above console redirection technique of  uses instructions associated with the physical layer of the Preboot Execution Environment (\u201cPXE\u201d) protocols. PXE instructions are stored in the NIC ROM as firmware to download an executable program from a server and to run the program locally in the client machine such as installing an operating system, booting the client, or the changing the configurations of the client. The PXE resides in the NIC ROM and includes a set of Universal Network Device Interface (\u201cUNDI\u201d) instructions as the physical layer of network communication. This embodiment of console redirection uses this part of PXE as a physical layer driver for the NIC  to send data to the network  according to the User Datagram Protocol (\u201cUDP\u201d).",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["310","100","116","110"]},"At steps  and , the interrupt controller  is linked to the NIC  to handle the asynchronous ISR generated by the NIC . This is done by using UNDI instruction \u201cISR\u201d within the PXE. At step , the NIC  is connected to an available IRQ link to the interrupt controller  based on information of the NIC  obtained from \u201cGET INFORMATION\u201d. Then the IRQ pointer is set to the address of the ISR retrieved from the ROM of the NIC .","The above operations prepare the hardware configurations of the NIC  for communication with the remote computer  through the network . Subsequent operations establish a communication link between the computers  and  and perform data transmission.","At step , the Dynamic Host Configuration Protocol (\u201cDHCP\u201d) is used to get an IP address for the computer . First, the BIOS of the computer  broadcasts a DHCP request for an IP address and IP configuration parameters to DHCP servers in the network  through the NIC . One or more DHCP servers may respond to the request by sending their proposed IP addresses and configurations to the BIOS. The BIOS of the computer selects an IP address from a DHCP with desired configuration parameters. At this point, the computer  is ready to communicate with the remote computer .","Next, the BIOS of the computer  initializes a timer interrupt at a timer tick for sending data to the remote computer . First, the BIOS checks whether an acknowledgment from the remote computer  (step ) is pending. If an acknowledgment is still pending at the next timer tick, the timer ISR is terminated and no data is sent until the acknowledgment is received (step ).","If the acknowledgment from the remote computer  is received, a timer ISR is executed as follows. First, the BIOS determines whether is any received data in the RAM . If no new data is received, the BIOS packetizes the outgoing data in its RAM  and executes UDP OPEN to open a UDP connection to the network  at the next timer tick. Then, the BIOS uses UDP WRITE to write a data packet to the UDP connection which is sent to its intended receiver  over the network . Next, the UDP CLOSE is executed to terminate the link (step ). If there's received data buffered in the RAM , BIOS executes UDP OPEN, UDP READ, and UDP CLOSE to retrieve the received data. The BIOS then unpacketizes the received data and send the data to one or more intended devices for execution (step ).","One application of the above console redirection is to service and boot the computer  from the remote computer . Since data can be sent from the remote computer  to the computer , the computer  may boot by directly using the operating system stored in the remote computer  without downloading the operating system files. The execution routines of the operating system running in the remote computer  are sent to the computer  in form of data packets through the network . In another application, a user at the remote computer  may also use the resources in the computer  to run applications by simply redirecting the console of the computer  to the remote computer .","Furthermore, the console redirection may allow the remote computer  to performing certain operations in the computer  by remotely running one or more applications in the remote computer . For example, the remote computer  can diagnose software errors in the computer  and execute commands to fix the errors by running a diagnosis application in the remote computer . Alternatively, the remote computer  can send certain software components to update the application software installed in the computer  and hence to correct the errors.","Although only a few embodiments have been described, various modifications and enhancements may be made without departing from the scope of the following claims."],"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
