---
title: Method and apparatus for inter-zone restoration
abstract: A method and system is provided to reduce the time to restore links in a communication system. The method and system employ a preplanned backbone zone to eliminate downtime searches for alternate paths. Efficient use of restoration techniques assures that inter-zone routes are properly allocated. Alternate paths are chosen by calculating shortest paths from a root node to a target node. The shortest paths are placed in a table for lookup whenever a communication failure occurs. Considerations as to cost and length are taken into account in determining the alternative routes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762568&OS=08762568&RS=08762568
owner: Cisco Technology, Inc.
number: 08762568
owner_city: San Jose
owner_country: US
publication_date: 20010706
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCES TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application relates to the following commonly assigned applications:","1. Patent application Ser. No. 09\/751,763; filed Dec. 30, 2001, entitled, \u201cA METHOD FOR ROUTING INFORMATION OVER A NETWORK EMPLOYING CENTRALIZED CONTROL,\u201d now U.S. Pat. No. 6,973,023, issued Dec. 6, 2005).","2. Patent application Ser. No. 09\/859,166; filed May 16, 2001, entitled, \u201cA METHOD FOR RESTORING A VIRTUAL PATH IN AN OPTICAL NETWORK USING 1+1 PROTECTION\u201d.","The above mentioned applications are assigned to Cisco Technology, Inc., the assignee of the present invention, and are hereby incorporated by reference in their entirety and for all purposes.","1. Field of the Invention","This invention relates to the field of communication networks, in particular to a method and apparatus to re-establish communication links after communication links experience a failure.","2. Description of the Related Art","Today's networks carry vast amounts of information. High bandwidth applications supported by these networks include streaming video, streaming audio, and large aggregations of voice traffic. In the future, these bandwidth demands are certain to increase. To meet such demands, an increasingly popular alternative is the use of light wave communications carried over fiber-optic cables. The use of light wave communications provides several benefits, including high bandwidth, ease of installation, and capacity for future growth.","Optical infrastructures are capable of transmission speeds in the gigabit range, which helps address the ever-increasing need for bandwidth mentioned above. Such infrastructures employ various topologies, including ring and mesh topologies. In order to provide fault protection, ring topologies normally reserve a large portion (e.g., 50% or more) of the network's available bandwidth for use in restoring failed circuits. However, ring topologies are capable of quickly restoring failed circuits. This capability is important in providing reliable service to customers, and is particularly important in telephony applications, where a failure can result in alarms, dropped calls, and, ultimately, customer dissatisfaction and lost revenue. In a similar vein, because of bandwidth demands, protocol overhead related to provisioning, restoration, and other functions should be kept to a minimum in order to make the maximum amount of bandwidth available for use by customers.","An alternative to the ring topology, the mesh topology reduces the amount of bandwidth needed for protection. The mesh topology is a point-to-point topology, with each node in the network connected to one or more other nodes. Because a circuit may be routed through various combinations of the network's nodes and over the various links which connect them, excess capacity through a given node or over a given link can serve to protect several circuits. The restoration of a circuit following a failure in a mesh topology can consume a relatively large amount of time.","Therefore, there is the tradeoff in ring topologies that can restore communication quickly but take up a great deal of bandwidth, and mesh topologies that do not take up as much bandwidth but are much slower in restoring communications. Current communication networks provide continuous, and as users have become accustomed to, uninterrupted transmission. A need therefore has been felt for a method and apparatus that allows for rapid restoration of communication in the event of the failure of a link.","What is needed and is disclosed herein is an invention that provides for restoration of paths between zones, where the zones include a number of nodes. A zone can have a source node or the zone can have a destination node. Border nodes connect to other border nodes of other zones. The zones connected with one another make up a higher hierarchical zone referred to herein as a backbone zone.","In some embodiments, in order to reduce the time to restoration of failed links between a source and a destination node, a determination is made as to alternative routes that may exist between nodes. Some embodiments can employ metrics such as class of service, which are used to determine the allocation of resources (i.e. links, bandwidth, or the like) between source and destination nodes. Further, the backbone zone can be preplanned which provides further reduction of the time of restoration of failed links.","The foregoing is a summary and thus contains, by necessity, simplifications, generalizations and omissions of detail; consequently, those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting. Other aspects, inventive features, and advantages of the present invention, as defined solely by the claims, will become apparent in the non-limiting detailed description set forth below.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail, it should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the scope of the present invention as defined by the appended claims.","A topology database can be used to provide information to nodes in a network regarding connectivity of those nodes to other of those nodes and zones. Broadcast packets are sent by nodes whenever a failure occurs, effectively requesting the availability of other nodes to connect and establish a communication path. To limit the size of the topology database and the scope of broadcast packets, networks employing the protocol described herein can be divided into smaller logical groups called \u201czones.\u201d Each zone executes a separate copy of the topology distribution algorithm, and typically nodes within each zone are only required to maintain information about their own zone. There is no need for a zone's topology to be known outside that zone's boundaries, and nodes within a zone need not be aware of the network's topology external to their respective zones. A network includes a number of nodes.","Nodes that attach to multiple zones are referred to herein as border nodes. Each zone has at least one border node, and that border node is coupled to at least one other border node of another zone. Border nodes are typically required to maintain a separate topological database, also called link-state or connectivity database, for each of the zones to which they are attached. Border nodes use the connectivity database for intra-zone routing. Border nodes are also required to maintain a separate database that describes the connectivity of the zones themselves. This database, which is referred to herein as the network database, is used for inter-zone routing. The network database describes the topology of a special zone, referred to herein as the backbone zone. In certain embodiments, the backbone zone is always assigned a hierarchical identification (ID) of 0. The backbone has the characteristics of a zone. There is no need for a backbone's topology to be known outside the backbone, and a zone's border nodes need not be aware of the topologies of other zones.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["100","110","120","100","110","120","100","110","130"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["240","250","260","210","220","200","230","205","215","225","235","245","255","265","275","285"]},"Within a zone, nodes can be distinguished by the attributes they possess. In one embodiment, the location of the node can determine the attributes of the node. A master node is defined as the endpoint of a link with numerically lower node ID. A master border node is defined as the end-node of an inter-zone link that is also a source node or proxy source node of one or more virtual paths (VP) that use that inter-zone link. A VP is an end-to-end connection with which is associated certain information such as a path bandwidth, class of service (CoS), quality of service (QoS) level, and the like. An inter-zone VP is one that traverses two or more zones. As described in the previously referenced patent application entitled \u201cA METHOD FOR ROUTING INFORMATION OVER A NETWORK EMPLOYING CENTRALIZED CONTROL,\u201d the wavelength routing protocol (WaRP\u2122) protocol describes a master border node as generating a Create Path request when the inter-zone link fails. A slave border node is the end-node of an inter-zone link that is also the destination or proxy destination node of one or more VPs that use that link. An entry border node is a border node that receives the Create Path request from an adjacent zone. An exit border node is a border node that forwards the Create Path request to an adjacent zone. An origin node is the origin of a WaRP\u2122 packet (e.g. Restore Path, Delete Path, and Test Path packets). An origin node is either the source node of the VP or a proxy border node. In the case of an intra-zone failure, an origin border node is a border node that assumes the role of a source node during a path restoration attempt, and is responsible for generating the Restore Path request on behalf of the source node. The ID of the origin border node is carried in the origin field of the Request Path request.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3","b":["100","100","110","300","240","100","300","310","110","240","100","310","110"]},"In this particular example, inter-zone link \u201cLink 0\u201d  fails. When an inter-zone link fails, or one of its two end nodes fail, the WaRP\u2122 protocol uses a combination of broadcast and source-routed packets to reroute traffic around the failure.","In certain implementations, the WaRP\u2122 protocol allows a single inter-zone failure to be restored within 50 milliseconds (ms) or less. In one embodiment, timely restoration (within 50 ms) during a second inter-zone failure can be affected by the WaRP\u2122 protocol algorithm using information contained in the topology database of the backbone zone, or in this example Zone 0, to compute new inter-zone routes for the failed VPs. Source routed packets are used to request and establish the new routes. In other words, no flooding or broadcasting of packets is ever attempted nor allowed between zones, only within zones or intra-zone. One of the two nodes on either end of the failed link that node being a master node computes a shortest path first alternative for each failed route, and places the newly calculated routes into a Create Path packet, and sends the Create Path packet to the next backbone node along the path. Tandem border nodes then use the computed route to forward the packet toward its ultimate destination. Routes within each zone are established using the same flooding mechanism as described earlier. The basic flooding mechanism involves each packet being sent to all active neighbors except the one from which the packet was received.","Intra-zone restoration activities preferably occur in parallel and proceed independently of one another. While routes are established, a second failure along an inter-zone link results in a negative response generated by one of the tandem border nodes. That negative response is propagated all the way to the master border node, and causes the master border node to compute a new route for the VP and retry the operation or link. In most cases, this process increases the restoration time of the VP to over 100 ms (or the time required for 2 attempts). This lengthy restoration time can be avoided, and restoration times limited to 50 ms or less by pre-planning the backbone route for all inter-zone link failures. Only the backbone route, the backbone route being made up entirely of inter-zone links, needs to be pre-planned. The one or more intra-zone sub-paths of the end-to-end route are still established dynamically using the Restore Path packet\/request.","The 1+1 restoration method is typically assigned to mission critical data paths with higher CoS. In a 1+1 restoration method, two distinct physical paths are provisioned and assigned to a VP. Each provisioned physical path is preferably completely node and link disjoint, although the 1+1 restoration method described herein can be limited to only a section of a given path. The VP is provisioned by using two separate Add Path requests for two distinct physical paths. The provisioning of the VP is not considered successful unless two distinct physical paths are provisioned and assigned to the VP. One of the two assigned physical paths is designated as the primary path and the other physical path is designated as the secondary path. During the provisioning, each tandem node allocates specific ports at input and output links for each path. For 1+1 restoration scheme, these ports are not shared by any other VP. In case of a path failure, tandem nodes do not release these ports.","After the provisioning of a VP using a 1+1 restoration method, the reserved ports and the bandwidth of the secondary path are not used by any other VP in the network. The secondary path is dedicated to the VP for restoration purposes. The primary path and the secondary path stay active during the data transmission. However, one path is used as the transmission path and the other path is used as standby path in case of a failure.","Restoration times can also be limited by eliminating any possibility of back-to-back inter-zone link failures. One way to deal with inter-zone link failures is to use traditional protection schemes like diverse routing (the use of physically dissimilar cabling and hardware) and self-healing rings (SHR). This is also known as providing redundant paths. Protecting inter-zone links can be justified because inter-zone links make up a very small percentage of the overall fiber capacity. Moreover, in some situations, there is not enough connectivity among zones to make mesh restoration in the backbone zone any more efficient than diverse routing and SHR.","One of the attributes that makes mesh restoration superior to other traditional schemes is mesh restoration's ability to allow for sharing capacity. The amount of capacity sharing, however, is highly dependent on the topology of the network, the richness of its connectivity, and the end-to-end demand requirements. For a sparsely connected network, such as may be the case in a backbone zone, capacity sharing is minimal. For such topologies, where connectivity is limited and a hop-count is small), the additional cost of using traditional restoration methods can be justified (a hop is the path between two network nodes, and the hop-count is the number of hops between a given pair of nodes. For example, a \u201ctwo hop\u201d route involves three nodes and two links.","SHR provides very fast restoration of failed links by using redundant links between the nodes of each ring. Each ring consists of two rings, a ring supporting information transfer in a \u201cclockwise\u201d direction and a ring supporting information transfer in a \u201ccounter-clockwise\u201d direction. The terms \u201ceast\u201d and \u201cwest\u201d are also commonly used in this regard. Each direction employs its own set of fiber optic cables, with traffic between nodes assigned a certain direction (either clockwise or counter clockwise). If a cable in one of these sub-rings is damaged, the ring \u201cheals\u201d itself by changing the direction of information flow from the direction taken by the information transferred over the failed link to the sub-ring having information flow in the opposite direction.","The detection of such faults and the restoration of information flow thus occur very quickly, on the order of 10 ms for detection, and 50 ms for restoration for most ring implementations. The short restoration time is critical in supporting applications, such as telephone networks, that are sensitive to QoS. Other applications that may be QoS sensitive include systems that require short restoration times to prevent old digital terminals and switches from generating and initiating alarms, such as carrier group alarms. Alarms are undesirable because such alarms usually result in dropped calls, causing users down time and aggravation.","The protection bandwidth can be a user-configurable parameter, attaching a QoS metric to configured connections and links. The QoS parameter allows the amount of required spare capacity to be reduced even further, while maintaining the same quality of service for those connections that need it and, more importantly, can afford such treatment. In other words, high availability is mapped into a cost metric and only made available to users who can justify the cost.","It will be noted that, typically, restoration times that exceed 10 seconds can lead to timeouts at higher protocol layers, while those that exceed one minute can lead to disastrous results for the entire network. However, the price of such quickly-restored information flow is the high bandwidth requirements of such systems. By maintaining completely redundant sub-rings, an SHR topology requires 100% excess bandwidth. As noted, an alternative to the SHR topology is the mesh topology.","Networks based on mesh-type restoration are inherently more capacity-efficient than ring-based designs, mainly because each network link can potentially provide protection for fiber cuts on several different links. By sharing the capacity between links, a network using a mesh topology can provide redundancy for failure restoration at less than 100% of the bandwidth capacity originally required. Such networks are even more efficient when traffic transits several links. Using the described approaches, however, result in restoration times ranging from several minutes to several months.","Once the user has defined the topology of the network, the user can configure one or more connections between nodes. Each configured connection defines a virtual path between the two end points, which are not required to be direct neighbors or even belong to the same zone. Similar to a physical point-to-point connection, the resulting VP has an associated capacity and an operational state.","The two end points of a VP can be designated as having a master\/slave relationship. The master node is also referred to herein as the source node of the VP, and the slave node is referred to herein as the destination node. The source node typically assumes recovery responsibilities for the VP and originates Restore Path requests. The destination node waits for a message from the source node informing the destination node of the new path to use for the connection.","The method in which VPs are restored is the same regardless of how backbone routes are obtained. If 1:1 protection is used in the backbone zone, the alternate route is simply the protection channel assigned to the failed span. For description of 1:1 and 1:N protection, see the above-referenced patent application entitled \u201cA METHOD FOR RESTORING A VIRTUAL PATH IN AN OPTICAL NETWORK USING 1+1 PROTECTION.\u201d.","When mesh restoration is used, however, the route is computed automatically by running an shortest path first (SPF) algorithm on the backbone zone to find the shortest path between the two border nodes. The alternate route, regardless of how it is computed, is then placed in the Create Path request and sent to the target node.","Shortest Path First (SPF) Algorithm","Routes can be computed using a QoS-based shortest-path algorithm or the SPF algorithm. The route selection process relies on configured metrics and an up-to-date view of the topology to find the shortest paths between any two nodes. The topology database contains information about all network nodes, their links, and available capacity.","All nodes are assigned globally unique IDs. This gives the user control over the master\/slave relationship between nodes. The network detects duplicate IDs when node adjacency is established. All nodes found with a duplicate ID are disabled by the protocol. An appropriate alarm can be generated to provide notification of the problem so that proper action can be taken.","The SPF algorithm uses the following variables:\n\n","In certain embodiments, network nodes use a protocol such as that referred to herein as the Hello Protocol in order to establish and maintain neighbor relationships, and to learn and distribute link-state information throughout the network. The protocol relies on the periodic exchange of bi-directional packets, known as Hello packets, between neighbors. During the adjacency establishment phase of the protocol, which involves the exchange of NIT packets, nodes learn information about their neighbors, such as that listed in Table 1.",{"@attributes":{"id":"p-0052","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Usage"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Node ID","Node ID of the sending node, which is preferably, "]},{"entry":[{},"from 8 bits to 32 bits."]},{"entry":["HelloInterval","How often Hello packets should be sent by the "]},{"entry":[{},"receiving node"]},{"entry":["HelloDeadInterval","The time interval, in seconds, after which the sending "]},{"entry":[{},"node will consider its neighbor dead if a valid Hello "]},{"entry":[{},"packets is not received."]},{"entry":["LinkCost","Cost of the link between the two neighbors. This may "]},{"entry":[{},"represent distance, delay or any other metric."]},{"entry":["LinkCapacity","Total link capacity"]},{"entry":["QoS3Capacity","Link capacity reserved for QoS 3 connections"]},{"entry":["QoSnCapacity","Link capacity reserved for QoS 0-2 connections"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Every WaRP\u2122 protocol node is required to establish an adjacency with its immediate neighbors. The adjacencies are used to exchange WaRP\u2122 protocol packets with those neighbors and to determine their operational status. Each adjacency is represented by a neighbor data structure that contains all information needed to establish and maintain the adjacency. Table 2 illustrates a minimum number of fields to establish neighbor data relationship.",{"@attributes":{"id":"p-0054","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["State","The state of the adjacency"]},{"entry":["NodeID","Node ID of the neighbor"]},{"entry":["InactivityTimer","A one-shot timer whose expiration indicates"]},{"entry":[{},"that no Hello packet has been seen from this"]},{"entry":[{},"neighbor since the last HelloDeadInterval"]},{"entry":[{},"seconds."]},{"entry":["HelloInterval","This is how often the neighbor wants us to"]},{"entry":[{},"send Hello packets."]},{"entry":["HelloDeadInterval","This is how long the neighbor wants us to wait"]},{"entry":[{},"before declaring it is dead when it stops"]},{"entry":[{},"sending Hello packets."]},{"entry":["LinkControlBlocks","A list of all links that exist between the two"]},{"entry":[{},"neighbors."]},{"entry":["Advertised LSAs","A list of LSAs received from this neighbor"]},{"entry":["LSAsToBeSent","A list of LSAs that need to be sent to this"]},{"entry":[{},"neighbor"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The link state advertisement (LSA) contains a list of the node's neighbors, links, the capacity of those links, the QoS available over the links, one or more costs associated with each of the links, and other pertinent information.\n\n",{"@attributes":{"id":"p-0056","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Cost","Cost of the path from R to n"]},{"entry":[{},"NextHop","Next node along the path from R to n"]},{"entry":[{},"PrevHop","Previous node along the path from n to R"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Now referring to  illustrated is a flowchart that creates the SPF two-dimensional array. The flowchart begins with R, the root node . The root node is the node that computes the routes. Initially, column 1 of the array is filled . For each node n that is known to R, entry Path[n][1] is initialized . A decision is made to determine if n is a neighbor of R . If n is not a neighbor of R then the entry Path[n][1] is set to the following values :\n\n","If n is a neighbor of R filling the two-dimensional array proceeds as follows. The entry Path[n][1] is set to the following values :\n\n","The node n is then placed in the Ready queue . The process then continues to fill the remaining columns [2] to [H] . A determination is made to see if the Ready queue is empty . If the Ready queue is empty, the process follows by setting the variable LastHop to equal the column value h  and then ending the process .","If the Ready queue is not empty the process continues. The column [h\u22121] is copied to the current column [h] . The process continues for each node that is in the Ready queue , and for each neighbor node m of n according to n's LSA. The variable ComputedCost is calculated as the cost of the Path R to n plus the cost of the link between n and m. A determination is then made as to whether ComputedCost is less than the cost of the Path of R to m. If the ComputedCost is not less than the cost of the Path of R to m then the process follows by setting the variable LastHop to equal the column value h  and then ending the process .","If ComputedCost is less than the cost of the Path of R to m, the following values are set for entry Path[m][n] .\n\n","The node m is then added to the Ready queue . The variable LastHop is set to equal the column value h  and the process is ended , if all nodes in the Ready queue are completed , and for all neighbor m nodes of n .","When the two-dimensional array is filled, for any given hop-count (1 through LastHop), the entry Path[ ][ ] contains the best route from R to all other nodes in the network. To find the shortest hop path from R to n, row n is searched until an entry with a cost not equal to the value of variable MAX_COST is found. To find the least-cost path between R and n, regardless of the hop count, entries 1 through LastHop of row n are scanned, and the entry with the lowest cost is selected.","Now referring to , shown is a flow chart that illustrates how to determine the shortest route to a given node. The target node is set to node n, and the root node is set to R; route[ ] is the route between R (root) and n . A column is selected from row n of PathH[ ][ ], for example column h is chosen. A determination is made as to whether the column is greater than \u201c1\u201d . If the column is not greater than \u201c1\u201d the process is ended . If the column is greater than \u201c1\u201d the following values are set :\n\n","Process  continues until the column value is not greater than 1.","An alternative embodiment to the above mentioned algorithm replaces the 2-dimensional array with a single column that contains the best path, regardless of hop count, to any given node. The basic algorithm remains the same except setting Route[h\u22122] to n is eliminated. All references to Path[node] [hop] are replaced with Path[node]. The modified algorithm executes about eight times faster but provides a single route to each destination. The multi-hop result of the original algorithm can be emulated by calling the modified algorithm multiple times, once for each desired route. This requires that certain arcs and vertices be removed from the topology table prior to each call. Otherwise, the SPF algorithm would return the same path every time. Deciding which arcs and\/or vertices to remove from the database depends on the objective being achieved. If the intent is to obtain two or more link-disjoint routes, then all arcs present in the first N routes should be disqualified prior to making the (N+1)call. If the intent, however, is to obtain K distinct routes, then disqualifying one link from each computed route is sufficient to achieve the desired result.","The Create Path packet is used to restore VPs disabled by inter-zone failures. The Create Path packet carries in its body a route that consists of a list of border nodes along the path between the source and destination nodes of the VP. The Create Path packet is generated by one of the two border nodes that share the failed link. The Create Path packet is terminated by the border node of the last zone that the old and new paths have in common.","Now referring back to , the two end-points of the failed inter-zone link, which are border nodes \u201cNode 1.1\u201d  and \u201cNode 2.2\u201d , detect the failure on \u201cLink 0\u201d  and send one or more Link Down indications to all end-nodes affected by the failure. An end-node is any node that terminates a VP within that zone, including proxy source and destination nodes. In this example, the two end nodes are \u201cNode 1.6\u201d  and \u201cNode 2.3\u201d .","\u201cNode 2.2\u201d , a master border node realizes that the failed link has a pre-planned alternate path, so it formats the following Create Path request of Table 4 and sends it to \u201cNode 2.6\u201d :",{"@attributes":{"id":"p-0070","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field","Contents"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Origin","2.2"]},{"entry":[{},"Target","2.6"]},{"entry":[{},"VPID","0x20060001"]},{"entry":[{},"PathIndex","0"]},{"entry":[{},"Path","2.6, 1.7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"When the Create Path request arrives at node \u201cNode 2.6\u201d , it simply increments the PathIndex field and forwards the modified request to \u201cNode 1.7\u201d , the next node along the path. The Create Path request also initiates path establishment within its zone by sending a Restore Path request to node 2.3, the Destination node of the VP.","Failure Restoration","Once a node has detected a failure on one of its links, either through a local loss of signal defect or a received alarm indication signal, the node scans its VP table looking for entries that have the failed link in their path. When the node finds such an entry, the node releases all link bandwidth used by the VP. Then, if the node happened to be the source node of the VP, or a proxy border node, the node changes its state to \u201crestoring\u201d and places the nodes VP on a list of VPs to be restored. Otherwise if the node is not the source node or a proxy border node the state of the VP is changed to \u201cdown,\u201d and a timer is started to delete the node from the database. If a corresponding Restore Path request is not received from the origin node within a certain timeout period the timer is started.","The VP list that was created in the previous step is rank-ordered by QoS, ensuring that VPs with a higher QoS are restored first. Each entry in the list contains, among other things, the ID of the VP, Source and Destination nodes of the VP, configured QoS level, and required bandwidth.","When the Create Path request arrives at node  (Node 1.7), the last node in the specified path, Node 1.7 sends a Change Target request to node  (Node 1.6), node  (Node 1.6) being the source node of the VP. \u201cNode 1.7\u201d  does not forward the Create Path request since there are no other entries in the path. Upon receiving the Change Target request from node  (Node 1.7), node  (Node 1.6) formats and sends a Restore Path request to node  (Node 1.7).","Once an acceptable instance of the Restore Path request has reached node  (Node 1.7) , node  (Node 1.7) sends a Create Path response to node  (Node 2.6). The response, as illustrated in Table 5, contains a list of ports allocated for the VP on the inter-zone link. In this example, node  (Node 1.7) allocates port 4 and port 6.",{"@attributes":{"id":"p-0076","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field","Contents"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Origin","1.7"]},{"entry":[{},"Target","2.6"]},{"entry":[{},"VPID","0x20060001"]},{"entry":[{},"PathIndex","0"]},{"entry":[{},"Path","2.6, 1.7"]},{"entry":[{},"Ports","4, 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"When the positive response reaches node  (Node 2.6), the sub-path in \u201cZone 2\u201d  connects to the ports specified in the response. Node  (Node 2.6) then forwards the response to Node  (Node 2.2). Node  (Node 2.2) is the master border node that generated the Create Path request.","Two Hop Inter-Zone Alternate Path","In this example, the preplanned alternate path passes through a transit zone. The transit zone  is also referred to as Zone 3. A transit zone is defined as a zone that contains one or more tandem nodes used by a particular VP, with the transit node neither originating nor terminating that VP. The first two steps are the same as described in the previous example, except for the path shown in the Create Path message. The alternate path in this example is:","Node  (Node 2.1)\u2192Node  (Node 3.5)\u2192Node  (Node 3.1)\u2192Node  (Node 1.3)","When the Create Path message arrives at a transit zone  (Zone 3), the entry border node  (Node 3.5) forwards the request to the exit border node  (Node 3.1). When the Create Path message reaches node  (Node 3.1), path establishment is initiated within the zone by sending a Restore Path request to node  (Node 3.5). Node  (Node 3.1) forwards the Create Path request to node  (Node 1.3), the next node along the specified path. When the message finally reaches node  (Node 1.3) in the target zone, node  (Node 1.6) receives a Change Target request. Node  (Node 1.6) being the source node of the VP. If zone  (Zone 1) were a transit zone, the Change Target request would be sent to a proxy source node instead.","The Change Target request triggers node  (Node 1.6) to send a Restore Path request to node  (Node 1.3). When an acceptable instance of the Restore Path request arrives at node  (Node 1.3), node  (Node 1.3) formats and sends a Create Path response to node  (Node 3.1). The response, illustrated in Table 6, contains a list of ports allocated for the path on link  (Link 2). In this particular example, link  (Link 2) includes a port 3 and a port 6.",{"@attributes":{"id":"p-0081","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field","Contents"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Origin","1.3"]},{"entry":[{},"Target","3.1"]},{"entry":[{},"VPID","0x20060001"]},{"entry":[{},"Pathlndex","2"]},{"entry":[{},"Path","2.1, 3.5, 3.1, 1.3"]},{"entry":[{},"Ports","3, 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"When the Create Path response reaches node  (Node 3.1), the create path response allocates the specified ports on link  (Link 2) and forwards a modified version of the response to node 3.5 (Node 3.5), as illustrated in Table 7.",{"@attributes":{"id":"p-0083","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field","Contents"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Origin","3.1"]},{"entry":[{},"Target","3.5"]},{"entry":[{},"VPID","0x20060001"]},{"entry":[{},"PathIndex","1"]},{"entry":[{},"Path","2.1, 3.5, 3.1, 1.3"]},{"entry":[{},"Ports","Not used on "]},{"entry":[{},{},"intra-zone links"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Node  (Node 3.5), upon receiving the above response, allocates the required number of ports on \u201cLink 3\u201d , appends the required number of ports to the response, and sends the response to node  (Node 2.1), as illustrated in Table 8.",{"@attributes":{"id":"p-0085","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 8"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field","Contents"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Origin","3.5"]},{"entry":[{},"Target","2.1"]},{"entry":[{},"VPID","0x20060001"]},{"entry":[{},"PathIndex","0"]},{"entry":[{},"Path","2.1, 3.5, 3.1, 1.3"]},{"entry":[{},"Ports","7, 9"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Node  (Node 2.1), upon receiving the response from node  (Node 3.5), allocates the specified port 7 and port 9 on link  (Link 3) and connects them to the sub-path in \u201cZone 2\u201d . \u201cNode 2.1\u201d  also forwards the response to \u201cNode 2.2\u201d  which is the master border node, and thus completing the loop.","An Example Computing and Network Environment",{"@attributes":{"id":"p-0087","num":"0102"},"figref":["FIG. 6","FIG. 6"],"b":["600","610","1","620","1","620","1","610","1","620","1","610","1","620","1"]},"One or more of client computers ()-(N) and\/or one or more of servers ()-(N) may be, for example, a computer system of any appropriate design, in general, including a mainframe, a mini-computer or a personal computer system. Such a computer system typically includes a system unit having a system processor and associated volatile and non-volatile memory, one or more display monitors and keyboards, one or more diskette drives, one or more fixed disk storage devices and one or more printers. These computer systems are typically information handling systems which are designed to provide computing power to one or more users, either locally or remotely. Such a computer system may also include one or a plurality of I\/O devices (i.e., peripheral devices) which are coupled to the system processor and which perform specialized functions. Examples of I\/O devices include modems, sound and video devices and specialized communication devices. Mass storage devices such as hard disks, CD-ROM drives and magneto-optical drives may also be provided, either as an integrated or peripheral device. One such example computer system, discussed in terms of client computers ()-(N) is shown in detail in .",{"@attributes":{"id":"p-0089","num":"0104"},"figref":"FIG. 7","b":["710","620","1","710","712","710","714","716","718","720","722","724","726","728","730","732","733","734","736","738","740","742","746","712","728","747","712","730","748","712"]},"Bus  allows data communication between central processor  and system memory , which may include both read only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded and typically affords at least 66 megabytes of memory space. The ROM or flash memory may contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system  are generally stored on and accessed via a computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., CD-ROM drive ), floppy disk unit  or other storage medium. Additionally, applications may be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via network modem  or interface .","Storage interface , as with the other storage interfaces of computer system , may connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems. Many other devices can be connected such as a mouse  connected to bus  via serial port , a modem  connected to bus  via serial port  and a network interface  connected directly to bus . Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., bar code readers, document scanners, digital cameras and so on). Conversely, it is not necessary for all of the devices shown in  to be present to practice the present invention. The devices and subsystems may be interconnected in different ways from that shown in . The operation of a computer system such as that shown in  is readily known in the art and is not discussed in detail in this application. Code to implement the present invention may be stored in computer-readable storage media such as one or more of system memory , fixed disk , CD-ROM , or floppy disk . Additionally, computer system  may be any kind of computing device, and so includes personal data assistants (PDAs), network appliance, X-window terminal or other such computing device. The operating system provided on computer system  may be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, UNIX\u00ae, Linux\u00ae or other known operating system. Computer system  also supports a number of Internet access tools, including, for example, an HTTP-compliant web browser having a JavaScript interpreter, such as Netscape Navigator\u00ae 8.0, Microsoft Explorer\u00ae 8.0 and the like.","Moreover, regarding the signals described herein, those skilled in the art will recognize that a signal may be directly transmitted from a first block to a second block, or a signal may be modified (e.g., amplified, attenuated, delayed, latched, buffered, inverted, filtered or otherwise modified) between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next, other embodiments of the present invention may include modified signals in place of such directly transmitted signals as long as the informational and\/or functional aspect of the signal is transmitted between blocks. To some extent, a signal input at a second block may be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved (e.g., there will inevitably be some attenuation and delay). Therefore, as used herein, a second signal derived from a first signal includes the first signal or any modifications to the first signal, whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and\/or final functional aspect of the first signal.","The foregoing described embodiment wherein the different components are contained within different other components (e.g., the various elements shown as components of computer system ). It is to be understood that such depicted architectures are merely examples, and that in fact many other architectures can be implemented which achieve the same functionality. In an abstract, but still definite sense, any arrangement of components to achieve the same functionality is effectively \u201cassociated\u201d such that the desired functionality is achieved. Hence, any two components herein combined to achieve a particular functionality can be seen as \u201cassociated with\u201d each other such that the desired functionality is achieved, irrespective of architectures or intermediate components. Likewise, any two components so associated can also be viewed as being \u201coperably connected\u201d, or \u201coperably coupled\u201d, to each other to achieve the desired functionality.",{"@attributes":{"id":"p-0095","num":"0110"},"figref":["FIG. 8","FIG. 8"],"b":["800","710","810","820","830","840","810","820","830","840","710","847","848","810","810","710","820","830","840","710","820","830","840","840"]},"Referring to ,  and , a browser running on computer system  employs a TCP\/IP connection to pass a request to server , which can run an HTTP \u201cservice\u201d (e.g., under the WINDOWS\u00ae operating system) or a \u201cdaemon\u201d (e.g., under the UNIX\u00ae operating system), for example. Such a request can be processed, for example, by contacting an HTTP server employing a protocol that can be used to communicate between the HTTP server and the client computer. The HTTP server then responds to the protocol, typically by sending a \u201cweb page\u201d formatted as an HTML file. The browser interprets the HTML file and may form a visual representation of the same using local resources (e.g., fonts and colors).","Although the present invention has been described in connection with several embodiments, the invention is not intended to be limited to the specific forms set forth herein, but on the contrary, it is intended to cover such alternatives, modifications, and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention may be better understood, and it's numerous objects, features and advantages made apparent to those skilled in the art by referencing the accompanying drawings. The use of the same reference number throughout the figures designates a like or similar element.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 8","FIG. 7"]}]},"DETDESC":[{},{}]}
