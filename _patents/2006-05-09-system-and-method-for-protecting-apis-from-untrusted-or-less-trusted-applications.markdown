---
title: System and method for protecting APIs from untrusted or less trusted applications
abstract: In accordance with embodiments, there are provided mechanisms and methods for securing execution of untrusted applications. These mechanisms and methods for securing execution of untrusted applications can enable embodiments to provide a “sandbox” environment in which applications that are less than trusted may execute. The ability of embodiments to provide such a protected environment for executing these untrusted applications can enable systems designers and system programmers to provide additional applications from third parties to users without being overly concerned about system security issues.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07814556&OS=07814556&RS=07814556
owner: Bea Systems, Inc.
number: 07814556
owner_city: Redwood Shores
owner_country: US
publication_date: 20060509
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND","DETAILED DESCRIPTION"],"p":["A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyrights whatsoever.","The following commonly owned, co-pending United States Patent Application is related to the present application, and is incorporated by reference herein in its entirety:","U.S. patent application Ser. No. 11\/430,720 entitled METHOD AND SYSTEM FOR SECURING EXECUTION OF UNTRUSTED APPLICATIONS, by Neil Smithline, filed on May 9, 2006.","The current invention relates generally to application servers, and more particularly to a mechanism for securing execution of untrusted applications.","In an application server model, an application server provides access to a variety of applications to users throughout an Enterprise Information System (EIS), essentially the data processing power of an enterprise, as well as to users connecting with the application server from remote locations. Java\u2122, an interpreted language, enables the creation of applications that could be run on a wide variety of platforms. This ability to function across a variety of different client platforms, i.e., platform independence, and Java's relatively easy implementation of network applications has resulted in the use of Java, as well as other programming languages that provide platform independence, in conjunction with application servers to provide processing power in endeavors as basic as personal web pages to endeavors as complex as large business-to-business enterprise systems.","One key component of application server technology is security. However, conventional security models are designed to provide access to all internal Application Programming Interfaces (APIs) to any installed application. Thus, such conventional security models are capable of securing execution only of trusted applications. Such applications include exclusively trusted code, i.e., code provided by a trusted provider under agreement. Accordingly, conventional approaches are restricted to the use of trusted applications installed on conventional application servers.","What is needed is an improved mechanism for securing execution of other than trusted applications.","The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. References to embodiments in this disclosure are not necessarily to the same embodiment, and such references mean at least one. While specific implementations are discussed, it is understood that this is done for illustrative purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without departing from the scope and spirit of the invention.","In the following description, numerous specific details are set forth to provide a thorough description of the invention. However, it will be apparent to those skilled in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail so as not to obscure the invention.","Although a diagram may depict components as logically separate, such depiction is merely for illustrative purposes. It can be apparent to those skilled in the art that the components portrayed can be combined or divided into separate software, firmware and\/or hardware components. For example, one or more of the embodiments described herein can be implemented in a network accessible device\/appliance such as a router. Furthermore, it can also be apparent to those skilled in the art that such components, regardless of how they are combined or divided, can execute on the same computing device or can be distributed among different computing devices connected by one or more networks or other suitable communication means.","In accordance with embodiments, there are provided mechanisms and methods for securing execution of untrusted applications. These mechanisms and methods for securing execution of untrusted applications can enable embodiments to provide a \u201csandbox\u201d environment in which applications that are less than trusted may execute. The ability of embodiments to provide such a protected environment for executing these untrusted applications can enable systems designers and system programmers to provide additional applications from third parties to users without being overly concerned about system security issues.","In an embodiment and by way of example, a method for interoperable management of application servers is provided. The method embodiment includes receiving, from an untrusted application, a request to access a class. The method embodiment includes determining whether the class is permitted to be accessed by untrusted applications. The untrusted application may be permitted to access the class when the class is one that is permitted to be accessed by untrusted applications.","In another embodiment and by way of example, a method for securing execution of untrusted applications is provided. The method embodiment includes sending, from an untrusted application, a request to an application server to access a class maintained by the application server with an internal API separate from a public API of the application server. Permission to access the class may be received when the application server has determined that the class is permitted to be accessed by untrusted applications.","As used herein, the term untrusted application refers to any application that falls short in some way of meeting the requirements of a trusted application. While trusted applications include exclusively trusted code, i.e., code provided by a trusted provider under agreement or tested to a specification, untrusted applications can include applications or other code provided by third parties not bound, contractually or otherwise, to meet standards or interface requirements of software executing on the application server. Some examples of instances where use of untrusted applications would be desirable include without limitation:","Deploying a partner's application in a secured domain","An Application Service Provider (ASP) deploying a client's application","Deploying a simple utility written by a less trusted developer (e.g.: a mortgage rate calculator on a banks loan site).","While the present invention is described with reference to an embodiment in which techniques for protecting APIs from untrusted or less trusted applications are implemented in an application server in conformance with the J2EE Management Framework using executable programs written in the Java\u2122 programming language, the present invention is not limited to the J2EE Management Framework nor the Java\u2122 programming language. Embodiments may be practiced using other interconnectivity specifications or programming languages, i.e., JSP and the like without departing from the scope of the embodiments claimed. (Java\u2122 is a trademark of Sun Microsystems, Inc.).",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIGS. 1A-1B"},"As shown in , an application server  that employs a J2EE management framework provides a mechanism in which one or more applications  can execute using resources available on the application server . In one embodiment, the application server  utilize an application server product, such as WebLogic\u00ae Server by BEA systems of San Jose, Calif.","In an embodiment, an application server's internal APIs may be maintained in separate classes than public APIs to facilitate protecting these APIs. While application specific exceptions can exist, such separation is generally enforced. Once internal APIs are in separate classes from public APIs, embodiments can protect internal classes (i.e.: classes that have only internal methods on them) from accesses by untrusted applications. Embodiments may protect internal classes either by using a modified existing application classloader or adding a new classloader for applications that, by default, denies access to internal methods. A method embodiment for protecting the internal classes will be described with reference to .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 2A","FIG. 2A","FIGS. 1A-1B","FIG. 2A"],"b":["102","202","204","206"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIGS. 2B-2C","FIG. 2B","FIG. 2C"],"b":["212","214","216","218","220","222","224","222","226","228","230","232"]},"If the classloader is configured to lookup in application last (block ), then lookup class in the parent (application server) classloader prior to looking up the class in the local (application) classloader and return if found (blocks B-).",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2D","FIG. 2D","FIGS. 1A-1B","FIG. 2D"],"b":["102","252","254"]},"In an embodiment, the filter list contains exactly the classes that are documented in javadoc. The weblogic*.xml files will allow appending to the filter list for that unit (e.g.: weblogic-ejb-jar.xml adds to the filter list for the ejb.jar file, weblogic-application.jar for the entire ear).","Integration for layered products can comprise two facets. The first facet includes allowing layered products to co-exist with the filtering classloader and still be able to call APIs familiar to the layered product. Certain extensions to weblogic*.xml files could be used to handle this case. The second facet of layered product integration includes allowing layered products to extend this solution to protect the layered product's internal APIs from application code.","In another embodiment, access to secured JDK APIs may be closed by integrating application server components with J2SE security. To demonstrate the advantages of such integration, an overview of J2SE security in general is provided. A more detailed description can be found at http:\/\/j ava. sun.com\/j2se\/1.5.0\/docs\/guide\/security\/spec\/security-specTOC.fm.html.","Each class in Java has associated with it a \u201ccodebase\u201d. This roughly corresponds to the element of the classpath from which the class was loaded. There is a policy file that contains mappings of permissions to codebases. For example:",{"@attributes":{"id":"p-0034","num":"0033"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"grant codeBase \u201c\/mylib.jar\u201d {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"permission java.io.FilePermission \u201c\/foo\/bar\u201d, \u201cread\u201d; }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"This gives any class loaded from mylib.jar permission to read the file\/foo\/bar. Many operations within the JVM are secured including file I\/O, network operations, JVM property system operations, classloader operations, and the like. When a program tries to execute a secured operation, an access check occurs. Consider the following call stack with associated set of permissions (the notation of the method name and relevant parameters on the left and any relevant permissions on the right is used throughout):",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["j ava.io.File.read(\u201c\/foo\/bar\u201d)",{}]},{"entry":["mylib.j ar.MyClass.main( )","java.io.FilePermission(\u201c\/foo\/bar\u201d, \u201cread\u201d)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"(Note that pseudocode is used throughout for clarity. For example, there is no method File.read( ), it is clear to the ordinary skilled person what it would do if it existed.) When the read call executes, it begins to walk the stack and intersects the permissions for its callers. In this case there is only a single caller. Once it is done and has obtained the intersected set of permissions, it sees if the intersected set of permissions implies the desired set of permissions and, if so, permits the operation.","For the sake of this example, consider a method in an application server, updateLogFile( ), that writes to a log file. Now consider this simplified snippet from an embodiment's policy file:",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"grant codeBase \u201c\/weblogic.jar\u201d { permission"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"java.security.AllPermission; }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"\u201cAllPermission\u201d means all permissions. When intersected with any set of permissions X, it results in the initial set of permissions X. So consider this pseudo-realistic call stack:",{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["j ava. Io.File.write(\u201clogFile\u201d)",{}]},{"entry":["weblogic.jar.MyClass.updateLogFile( )","java.security.AllPermission"]},{"entry":["weblogic.jar.JmsSomethingOrOther( )","java.security.AllPermission"]},{"entry":["userApplication.war.Main( )","Some small set of privileges"]},{"entry":[{},"only relevant to the"]},{"entry":[{},"application"]},{"entry":["weblogic.j ar. ServletDispatcher( )","java.security.AllPermission"]},{"entry":"Other weblogic jar stack frames"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"When J2SE security is enabled, this call will fail because the userApplication.war does not have write permission to logFile and this frame is on the stack and will be included in the intersection of permissions. So, one solution is to tell customers to grant a whole slew of permissions to all applications thereby watering down J2SE security to no real protection at all. J2SE does provide for a much better solution that involves code modification. This involves using a marker class called PrivilegedAction that is like Runnable but with a different name. To use this, one would need to replace:",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"AccessController.doPrivileged(new"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PrivilegedAction ( ) {"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"With",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public Object run( ) { File.write(\u201clogFile\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"While this does not change the logic of the execution, it does act as a marker to the J2SE security. When the intersection algorithm runs into a call to AccessController.doPrivileged( ) it proceeds to intersect one more frame's permission and then stops. So, in the new call stack:",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["j ava. io.File.write(\u201clogFile\u201d)",{}]},{"entry":["weblogic.jar.MyClass.updateLogFile( )","java.security.AllPermission"]},{"entry":"j ava.security.AccessController."},{"entry":"doPrivileged( )"},{"entry":"weblogic.jar.JmsSomethingOrOther( )"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The user's code is not included in the intersection and hence the write operation succeeds.","The work required to protect the secured JDK operations is to wrap calls to secure JDK APIs that are occurring on behalf of the application server in doPrivileged( ) calls. By \u201con behalf of the application server\u201d, it is intended to mean that the user has not asked the server to execute a secure JDK operation explicitly for them. Rather, as in the case of the logging example above, the user has performed some application server operation and one or more secure JDK operations must happen during the execution of the application server operation. In an embodiment, some PrivilegedAction pooling mechanism can be put in place to ensure that there is not a performance degradation by object creation.","Layered products need very little integration with such a solution. One component that layered products need to do is to be able to escalate their own privileges, which layered products could achieve via deployment descriptor attributes.","In other aspects, the invention encompasses in some embodiments, computer apparatus, computing systems and machine-readable media configured to carry out the foregoing methods. In addition to an embodiment consisting of specifically designed integrated circuits or other electronics, the present invention may be conveniently implemented using a conventional general purpose or a specialized digital computer or microprocessor programmed according to the teachings of the present disclosure, as will be apparent to those skilled in the computer art.","Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure, as will be apparent to those skilled in the software art. The invention may also be implemented by the preparation of application specific integrated circuits or by interconnecting an appropriate network of conventional component circuits, as will be readily apparent to those skilled in the art.","The present invention includes a computer program product which is a storage medium (media) having instructions stored thereon\/in which can be used to program a computer to perform any of the processes of the present invention. The storage medium can include, but is not limited to, any type of rotating media including floppy disks, optical discs, DVD, CD-ROMs, microdrive, and magneto-optical disks, and magnetic or optical cards, nanosystems (including molecular memory ICs), or any type of media or device suitable for storing instructions and\/or data.","Stored on any one of the machine readable medium (media), the present invention includes software for controlling both the hardware of the general purpose\/specialized computer or microprocessor, and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the present invention. Such software may include, but is not limited to, device drivers, operating systems, and user applications.","Included in the programming (software) of the general\/specialized computer or microprocessor are software modules for implementing the teachings of the present invention, including, but not limited to providing mechanisms and methods for securing execution of untrusted applications as discussed herein.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 3","FIGS. 1A and 1B","FIG. 3","FIGS. 1A and 1B","FIGS. 1A and 1B"],"b":"300"},"Computing system  comprises components coupled via one or more communication channels (e.g., bus ) including one or more general or special purpose processors , such as a Pentium\u00ae, Centrino\u00ae, Power PC\u00ae, digital signal processor (\u201cDSP\u201d), and so on. System  components also include one or more input devices  (such as a mouse, keyboard, microphone, pen, and so on), and one or more output devices , such as a suitable display, speakers, actuators, and so on, in accordance with a particular application. (It will be appreciated that input or output devices can also similarly include more specialized devices or hardware\/software device enhancements suitable for use by the mentally or physically challenged.)","System  also includes a machine readable storage media reader  coupled to a machine readable storage medium , such as a storage\/memory device or hard or removable storage\/memory media; such devices or media are further indicated separately as storage  and memory , which may include hard disk variants, floppy\/compact disk variants, digital versatile disk (\u201cDVD\u201d) variants, smart cards, read only memory, random access memory, cache memory, and so on, in accordance with the requirements of a particular application. One or more suitable communication interfaces  may also be included, such as a modem, DSL, infrared, RF or other suitable transceiver, and so on for providing inter-device communication directly or via one or more suitable private or public networks or other components that may include but are not limited to those already discussed.","Working memory  further includes operating system (\u201cOS\u201d)  elements and other programs , such as one or more of application programs, mobile code, data, and so on for implementing system  components that might be stored or loaded therein during use. The particular OS or OSs may vary in accordance with a particular device, features or other aspects in accordance with a particular application (e.g. Windows\u00ae, WindowsCE\u2122, Mac\u2122, Linux, Unix or Palm\u2122 OS variants, a cell phone OS, a proprietary OS, Symbian\u2122, and so on). Various programming languages or other tools can also be utilized, such as those compatible with C variants (e.g., C++, C#), the Java\u2122 2 Platform, Enterprise Edition (\u201cJ2EE\u201d) or other programming languages in accordance with the requirements of a particular application. Other programs  may further, for example, include one or more of activity systems, education managers, education integrators, or interface, security, other synchronization, other browser or groupware code, and so on, including but not limited to those discussed elsewhere herein.","When implemented in software (e.g. as an application program, object, agent, downloadable, servlet, and so on in whole or part), a learning integration system or other component may be communicated transitionally or more persistently from local or remote storage to memory (SRAM, cache memory, etc.) for execution, or another suitable mechanism can be utilized, and components may be implemented in compiled or interpretive form. Input, intermediate or resulting data or functional elements may further reside more transitionally or more persistently in a storage media, cache or other volatile or non-volatile memory, (e.g., storage device  or memory ) in accordance with a particular application.","Other features, aspects and objects of the invention can be obtained from a review of the figures and the claims. It is to be understood that other embodiments of the invention can be developed and fall within the spirit and scope of the invention and claims. The foregoing description of preferred embodiments of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations will be apparent to the practitioner skilled in the art. The embodiments were chosen and described in order to best explain the principles of the invention and its practical application, thereby enabling others skilled in the art to understand the invention for various embodiments and with various modifications that are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalence."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 1A-1B"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 2A-2D"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
