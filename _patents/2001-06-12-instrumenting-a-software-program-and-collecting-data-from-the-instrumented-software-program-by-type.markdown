---
title: Instrumenting a software program and collecting data from the instrumented software program by type
abstract: The XAM architecture that specifies a software program instrumentation and data collection method and system is disclosed. The XAM architecture includes definition of a measurement type hierarchy, the definition of an XAM API that adapts an application program to a local XAM library, and a message protocol, based on XML, through which the XAM library is configured by, and sends collected data to, an XAM services process. Predefined measurement types include primitive measurement types and aggregate measurement types, the latter allowing for significant decrease in data transmission overheads between the XAM library and the XAM services process because of data filtering and processing by XAM library routines.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07111282&OS=07111282&RS=07111282
owner: Hewlett-Packard Development Company, L.P.
number: 07111282
owner_city: Houston
owner_country: US
publication_date: 20010612
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Overview","Documentation of XAM Measurement Types and Information Models"],"p":["The present invention is related to the run-time analysis of software programs and, in particular, to a method and system for instrumenting a software program in order to collect data from the software program, locally filter and process the collected data, and package the collected data into the reports that are forwarded to a data analysis program.","A wide variety of sophisticated software debugging and analysis tools have been developed during the past forty years to facilitate design, testing, and analysis of software programs. Generally, a software program is developed through an iterative process, each stage of which consists of program design or modification followed by testing and analysis of the program. A commonly encountered technique for analyzing software programs is to embed instrumentation within the program for collecting various types of data while the program is running. Data can be collected and processed in various ways to provide a basis for analyzing the program. Often, embedded instrumentation provides the only practical approach to understanding the real-time behavior of complex programs and automated systems. For example, a running web site may field requests for hypertext markup language (\u201cHTML\u201d) documents at a very high rate, and may concurrently store information provided by remote users in a database, conduct commercial transactions with remote users, and perform other such tasks. Although the web site programs may be well tested and understood, the real-time, dynamic environment in which they operate may not be. By instrumenting the web site, web site developers and managers can determine temporal patterns of HTML-page-request reception, statistics on requests received for the HTML pages served, statistics on transactions carried out, and other such information. The collected data can be used to configure the web site to more efficiently handle requests and transactions, to discover program errors, to undertake directed marketing campaigns to advertise underutilized features of the website, and to exploit discovered relationships within purchasing behaviors of different categories of website users for targeted cross-marketing campaigns.","The application response measurement (\u201cARM\u201d) standard was developed as a measurement standard for instrumenting software programs. The ARM standard specifies the semantics of six ARM routines that allow a program developer to embed instrumentation, in the form of transactions, within a program. These transactions can be used to record data and transmit the recorded data to a data processing routine or system for analysis. The ARM standard is relatively simple and easy to use. It allows programmers to construct transaction types suitable for their instrumentation needs, and is therefore adaptable to different measurement tasks, and is widely available.","As a result of its simplicity, the ARM standard suffers from notable deficiencies. First, although many different types of instrumentation might be desirable for inclusion within a program, the ARM standard provides only a transaction measurement type. Second, the ARM standard does not specify many details with regard to encoding and transportation of data, collected via embedded instrumentation from a program, to a data processing and analysis program or system. Third, the ARM standard lacks convenient facilities for locally filtering and partitioning of collected data in order to decrease the data transmission overhead between the running program and a data processing or data analysis program or system and in order to decrease data collection and data processing overhead within the instrumented program and analysis system, respectively. Thus, although the ARM standard has proved to be a valuable and widely used improvement over the various ad hoc instrumentation techniques that preceded the ARM standard, software program developers have recognized the need for a standard, but more completely defined and more flexible software program instrumentation method and system for embedding instrumentation within software programs, collecting data via the embedded instrumentation, packaging the data, and transmitting the packaged data to a data processing and\/or data analysis routine.","One embodiment of the present invention is a well defined and flexible method and system for instrumenting a software program in order to collect various types of data from the running software program. A method and system that represents one embodiment of the present invention, based partly on the Extensible Markup Language (\u201cXML\u201d), are together embodied in an XML Application Response Measurement (\u201cXAM\u201d) architecture.","The XAM architecture specifies a fundamental instrumentation entity known as a measurement type. A measurement type is analogous to a class definition in an object-oriented language such as C++ or JAVA. User-defined measurement types, derived from predefined measurement types are defined and instantiated within a software program as a fundamental unit for data collection. The XAM architecture specifies a small number of predefined, primitive measurement types, all hierarchically derived from a single parent measurement type. A measurement type includes variables of predefined variable types.","An application program may assign values to the variables associated with a user-defined measurement-type instance at run time, and may transmit one or more data states representing the values of all variables associated with a user-defined measurement-type instance to an XAM library via an XAM-API interface. The data collected via user-defined measurement types instantiated within an instrumented software program is collected during execution of a software program, filtered, and processed locally by XAM library routines, and packaged into reports that are transmitted by XAM library routines to an XAM service process which analyzes the filtered, processed, and packaged data periodically received from the instrumented software program via the XAM library routines. In one embodiment, reports are XML documents. A simple protocol for configuring data collection and transmitting filtered, processed, and packaged data is defined as part of the XAM architecture. Measurement types include primitive measurement types, such as atomic measurement types, simple transaction measurement types, and polling-based measurement types.","Measurement types also include system-defined aggregate measurement types hierarchically derived from a number of predefined aggregate measurement types that are, in turn, derived from the single parent measurement type, which represent filtering and processing of data collected via primitive measurement types. The XAM library routines automatically derive a set of aggregate measurement types for each user-defined measurement type.","The predefined measurement types provide a rich base for construction of application-program-specific, user-defined measurement types suitable for application-program-specific instrumentation needs. System-defined aggregate measurement types associated with user-defined measurement types, in particular, facilitate local filtering and processing of collected data in order to greatly decrease the data collection, data transmission, and data processing overheads for the data processing and analysis routine or system that collects and analyzes data from an instrumented application program. Use of XML for packaging the data provides a well-defined, flexible, and extensible data transmission methodology.","One embodiment of the present invention is a method and system for instrumenting a software program, particularly an application program, and for collecting data generated during running of the application program via embedded instrumentation. The method and system are based on an XML Application Response Measurement (\u201cXAM\u201d) architecture. As with any software architecture, there are almost a limitless number of possible XAM architecture implementations. In fact, the XAM architecture may be implemented on top of an ARM implementation, using an existing ARM API. Similarly, an ARM API may be implemented over an XAM implementation. Portions of an example implementation are included, without external annotation or textual description, in Appendix A, while the following discussion is directed to a detailed explanation and description of fundamental XAM architecture concepts. This detailed explanation and description is provided in two subsections that follow: (1) an overview of the XAM architecture with references to ; and (2) a detailed, table-based documentation of XAM measurement types and information models.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["102","104","102","104","106"]},"The application program defines one or more user-defined measurement types and includes a number of user-defined-measurement-type instances \u2013 for run-time data collection. Definition of a user-defined measurement type, derived from a predefined, primitive measurement type, involves application program calls to XAM library routines via an XAM application programming interface (\u201cAPI\u201d) . The XAM API serves as an adaptor component for interfacing the application program  to an XAM library . Although it is convenient to assume that the application program , XAM API , and XAM library  reside on a local computer, and the XAM service  component resides on a remote computer, all four components may alternatively reside on a single computer system. The XAM library routines may execute within the same process context as the application program , or a separate process may execute XAM library routines. Thus, the components of the XAM system illustrates in  may be mapped in various ways onto process contexts within one or more computer systems.","The XAM library  stores data structures containing the definitions of the user-defined measurement types, as well as configuration data related to the measurement types. That configuration data may be specified by the XAM services component  in an XML-based document  transmitted from the XAM services component  to the XAM library . Data produced by the application program is funneled through the user-defined measurement type instances \u2013 to XAM library routines which store and process the data and report the processed data in XML-based reports \u2013 transmitted at regular intervals from the XAM library  to the XAM service component . The XAM service component  then processes received reports from the XAM library in order to analyze execution of the application program . A number of instrumented application programs may concurrently execute and furnish streams of reports to a single XAM services component. In one implementation of the XAM architecture, a single XAM library is resident within a given computer, and is shared by all concurrently executing instrumented application programs.","The fundamental instrumentation entity of the XAM architecture is a measurement type.  shows a generalized measurement type. A measurement type includes measurement-type-specific information  and a number of associated variables \u2013. Each user-defined measurement type is derived from a small number of predefined measurement types. An application program defines a user-defined measurement type by selecting one of the predefined measurement types from which to derive the user-defined measurement type, providing a unique name for the user-defined measurement type, and by associating a number of uniquely named variables with the user-defined measurement type. Descriptions of user-defined measurement types are stored in data structures managed by the XAM library. Instances of user-defined measurement types represent embedded instrumentation within an application program. An application program may, at run-time, set and update the values of variables associated with a measurement-type instance, thereby changing the data state of the measurement-type instance, and may transmit the data state of a measurement-type instance one or more times, via the XAM API interface, to the XAM library. The XAM library associates a data state received from the application program with the user-defined measurement type instance corresponding to the data state, and processes the received data state according to processing steps defined for, and associated with, the user-defined measurement type.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3","FIG. 3"],"b":["302","304"]},"All measurement types are derived from the top-level, abstract type \u201cmeasurement\u201d . Two predefined, abstract measurement types are derived from the top-level measurement type \u201cmeasurement:\u201d (1) the measurement type \u201caggregate\u201d ; and (2) the measurement type \u201cprimitive\u201d . The measurement type \u201cprimitive\u201d  is a basic measurement type that provides, at various times during running of an instrumented program, discrete data states comprising the current values of the variables associated with the primitive data type. The primitive measurement type is further divided into subtypes: (1) the abstract measurement type \u201coccurrence\u201d  that provide data states that are transferred to the XAM library by the application program at points in time chosen by the application program; and (2) the measurement type \u201cpolling,\u201d which is a measurement type defined by a user that is interrogated, at regular intervals, for data states by the XAM library. The measurement type \u201coccurrence\u201d is further divided into two subtypes: (1) the measurement type \u201catomic\u201d , data states for which are supplied to the XAM library by the application program at points in time arbitrarily chosen by the application program during the course of execution of the application program; and (2) the measurement type \u201ctransaction\u201d , an instance of which is started at an arbitrary point in time by the application program and that is ended by the application program at some arbitrary time subsequent to the starting point by the application program, at which point the data state for the transaction measurement type instance is transferred to the XAM library. The XAM library updates a predefined variable \u201cduration\u201d associated with the transaction measurement type instance to a value equal to the elapsed time between starting of the transaction measurement type instance and ending of the transaction measurement type instance by the application program.","Each system-defined aggregate measurement type that inherits from the abstract measurement type \u201caggregate\u201d  is based on a primitive, user-defined measurement type or, in other words, is based on a user-defined measurement type derived from predefined concrete measurement types \u201catomic,\u201d \u201ctransaction,\u201d or \u201cpolling.\u201d An aggregate measurement type accumulates data with regard to the primitive measurement type on which it is based for intervals of time defined by configuration parameters transmitted to the XAM library by the XAM service. Aggregate measurement types are not explicitly defined by users. Instead, the XAM library automatically derives aggregate measurement types based on user-defined measurement types. There are four different measurement types, derived from measurement type \u201caggregate,\u201d from which the XAM library automatically derives aggregate measurement types: (1) a measurement type \u201cthreshold\u201d  that is configured with a threshold test that accepts or rejects data states produced for the primitive measurement type on which the threshold aggregate measurement type is based, and that accumulates the number of data states produced for the primitive measurement type on which the threshold aggregate measurement type is based that are accepted; (2) an aggregate measurement type \u201csum\u201d  that is used to accumulate statistical quantities, such as the sum, average, and standard deviation, of the data states of a variable of the primitive measurement type on which the sum measurement type is based; (3) an aggregate measurement type \u201cgroup\u201d  that counts the number of data states provided by a group of occurrence measurement types; and (4) an aggregate measurement type \u201ccount\u201d  that counts the number of data states provided by a primitive measurement type during running of an application program. The measurement types illustrated in  are described in greater detail in the following subsection.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIGS. 4A\u2013I","FIGS. 4A\u2013I","FIG. 4A","FIG. 4A","FIG. 4A"],"b":["402","404","406"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4A","b":["408","402"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 4B","FIG. 4B","FIG. 3","FIGS. 4A\u2013I","FIG. 4B","FIG. 4B"],"b":["412","412","414","416","414","412","406","412","414","416","412","418","420","422","424","412","412","410"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 4C","FIGS. 4A\u2013I"],"b":["402","426","428","412"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 4D","FIG. 4D","FIG. 4C","FIG. 4C","FIG. 4E"],"b":["406","430","404","428","430","404","410","428","406","432"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 4F","FIG. 4F","FIG. 4E"],"b":["433","434","408","414","416","418","420","422","424","402","412","434"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4G","FIG. 4F"],"b":["434","406","436","438","412","414","436","406"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 4H","b":["440","443"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 4I","FIG. 4I"],"b":["402","406","444","406"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 5","FIG. 5"],"b":["502","504","506","508","510","512","514","502","512","514"]},"An instance of a user-defined measurement type derived from an atomic measurement type may provide data states to the XAM library at arbitrary times during execution of the application program. The application program calls an XAM library routine, via the measurement-type instance, to transfer a data state of the measurement-type instance at points in time deemed appropriate by the application program.","Data states are provided via instances of user-defined measurement types derived from transaction measurement types from a running application program to the XAM library at points in time determined by the application program. However, unlike atomic measurement type instances, data collection from an instance of a user-defined measurement type derived from the transaction measurement type instantiation is started by the application program at a first point in time, after which the application program may alter the value of one or more variables associated with the measurement-type instance, and data collection is then ended at a second point in time by the application program via a call to an XAM library routine. At the point in time that data collection from the transaction measurement type instance is ended by the application program, a data state is transferred from the application program to the XAM library. The XAM library computes a duration, or lapsed time, between the time that data collection from the transaction measurement type instance is started by the application program and the time that data collection from the transaction measurement type is ended by the transaction program, and sets a duration variable automatically associated by the XAM library with the transaction measurement type instance to that computed value.","Data states are obtained by the XAM library from a user-defined measurement type derived from the polling measurement type within an application program at regular intervals. In the case of a user-defined measurement type derived from the polling measurement type, it is the XAM library, rather than the application program, that initiates transfer of the data state from the application program to the XAM library. The polling interval is a configurable parameter configured by the XAM services process.","The processing of data states received and obtained from a running application program is carried out by XAM library routines  in order to generate output data to the output queue . First, XAM library routines  filter the data states according to the variable values that they contain. The XAM services process may configure an almost limitless number of different filters based on variable values in order to partition received data sets into a sub-partition of accepted data sets and a sub-partition of rejected data sets. This initial filtering is an important feature of the XAM architecture, allowing data of interest to be winnowed from a larger amount of data produced by the application program at an early stage, without taxing computational and communications resources by processing the data at later stages.","After filtering the data sets extracted from the input queue , the XAM library routines process the accepted data sets according to the measurement-types and configurations of instances from which they are received. It should be noted that a data set may be not only received form a primitive, user-defined measurement type instance, but may also be concurrently associated with an XAM-library-defined aggregate measurement type based on the primitive, user-defined measurement type instance. Thus, each data set may be ultimately associated with multiple measurement type instances. Data sets received from atomic measurement type instances, after filtering, are queued to the output queue as well as used for data processing associated with any aggregate measurement types based on the atomic measurement type. Data sets received from transaction measurement type instances, after filtering, are updated with a computed duration value, and may be queued to the output queue and\/or used for data processing associated with aggregate measurement types. Data sets received via polling measurement type instantiations, after filtering, may also be queued to the output queue and\/or used for data processing associated with aggregate measurement types based on the polling measurement type.","Aggregate measurement type instances represent an accumulation mechanism for computing derived values from a number of data sets provided by a user-defined measurement type instance on which the aggregate measurement type instance is based. The computed results are output, at regular intervals, by XAM library routines  to the output queue . Additional levels of filtering may also be accomplished via aggregate measurement type instances, including threshold filtering and TopN filtering. Aggregate measurement types represent a second important feature of the XAM architecture. By configuring an aggregate measurement type, the XAM services process may offload a significant amount of data processing and significantly decrease communications overheads by arranging for the XAM library routines, running locally with the application program, to filter data sets and compute derived results. Thus, for example, if the XAM services process may obtain the accumulated sum of an integer variable associated with a user-defined measurement type instance by using an aggregate measurement type based on that user-defined measurement type instance, allowing the XAM services process to receive incremental sums computed from a larger number of data sets at regular intervals, rather than receiving the larger number of data sets.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"b":["602","602","604","606","608","610","608","612","614","618","606","620","624","612"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIGS. 7A\u2013C","FIGS. 7A\u2013C","FIG. 5","FIG. 7A","FIGS. 7A\u2013C","FIG. 7A"],"b":["516","702","512","512","704","704","706","708","710"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 7B","FIG. 7A","FIG. 7B"],"b":["712","716","514","718","514","720","716","718","720","722","724","726","728","726"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 7C","FIG. 7C"],"b":"730"},"The XAM services process may configure an aggregate measurement type instance to partition the accumulation of data for a particular aggregate measurement type instance into some number of separately accumulated values, using key variable values as partitioning dimensions Thus, for example, if a key variable associated with an aggregate measurement type is a string variable representing the address of an entity requesting a webpage from a web server application, and another key variable for the aggregate measurement type is a string variable representing the requested webpage, then a sum aggregate measurement type may be used to separately count requests from each requesting entity for each webpage served by the web server application. In other words, each key variable may be used to partition the data accumulated for an aggregate measurement type along a single dimension, and the partitioning may be n-dimensional, when n key variables are configured for a particular aggregate measurement type instance. In , key-variable-based partitioning is shown as 2-dimensional, forming a 2-dimensional grid with vertical axis  and horizontal axis . A particular data set, such as data set , can be used for processing with respect to one of many possible different accumulations maintained by the XAM library for the aggregate measurement type instance with which the measurement type is associated. For example, in , the key variables associated with the aggregate measurement type instance with which data set  is associated has values x and y, and therefore, the non-key value of data set  will be processed and accumulated within accumulation  designated by the key variable values x  and y .","Although only a single 2-dimensional partitioning is shown in , for clarity of illustration, a different n-dimentional partitioning may exist for each configured aggregation measurement type instance. An aggregation measurement type instance can be configured to be partitioned according to any number of key variables, or not partitioned, by the XAM services process.","At regular intervals, one or more output data entries  containing accumulated and processed data corresponding to an aggregation measurement type instance, based on data sets received for the aggregation measurement type instance, is output to the output queue . For an n-dimensionally partitioned aggregation measurement type instance, multiple data entries are queued to the output queue, one data entry for each accumulation in the n-dimensional accumulation space for that aggregation measurement type instance for which some minimum number of data sets were received during the collection interval. If TopN filtering is configured for the measurement type instance, then data entries are generated for the n partitions for which the most number of data sets were received.","Thus, key-variable-based partitioning provides a way to partition a single accumulated value associated with an aggregate measurement type instance over an n-dimensional accumulation value space, and to report only those slots, or grid-points within the n-dimensional accumulation value space populated by data received in data sets during a collection interval. It is, in effect, analogous to generating an array of data points from multiple numbers, and then compressing the non-zero elements from the array, a well-known technique in computer science applied to sparse arrays. Thus, a total number of data sets received for an aggregate measurement type instance can be filtered by an initial filtering process, shown in , can be subsequently filtered by a threshold test, in the case of a threshold aggregate measurement type, and can be then partitioned for separate processing by key-variable-based partitioning, and, finally, the partitions can be filtered by TopN filtering. The entire filtering and partitioning mechanism provided by aggregate measurement types thus provides exquisite configurable control over the amount of data generated from a user-defined measurement-type instance embedded in an application program.","As an introduction to the detailed descriptions in the following subsection, the relationships between data structures maintained by the XAM library and application programs and instantiated measurement types are illustrated in . In , six threads \u2013 of an application program  are concurrently running. Each thread of the application program employs instances of two user-defined measurement types: user-defined measurement type \u201cA\u201d \u2013 and user-defined measurement type \u201cB\u201d. \u2013. The XAM library contains a measurement type information model  that contains data structures describing user-defined measurement type \u201cA\u201d , aggregate measurement types based on user-defined measurement type \u201cA\u201d \u2013, user-defined measurement type \u201cB\u201d , and an aggregate measurement type based on user-defined measurement type \u201cB\u201d . Thus, there is a many-to-one relationship between user-defined measurement type instances within threads of an application program and the data structure maintained within the measurement type information model  that represents the user-defined measurement type. The XAM library maintains a measurement system information model  that contains a data structure representing the application program . Thus, there is a one-to-one relationship between application programs and data structures within the measurement system information models. The XAM library maintains a measurement request information model  that may contain an arbitrary number of data structures representing separate configurations made by the XAM services component for each user-defined measurement type. Thus, there is a one-to-many relationship between measurement type information model data structures and measurement request information model data structures. The XAM services component can configure a particular user-defined measurement type multiple times to generate multiple data state streams, each stream subject to different filtering and other configurable parameters. Finally, data sets collected by the XAM library are stored in data structures within the measurement instance information model . Thus, there is generally a one-to-many relationship between each separate configuration stored in a data structure within the measurement request information model and data structures within the measurement instance information model . The detailed description of these data structures follows, along with additional detailed information.","In this subsection, a table-oriented, detailed description of XAM architecture components, introduced in the previous subsection, is provided. Further details are described textually, where appropriate. The table-based presentation is employed to provide a concise, easily accessed reference for XAM architecture details.","Table 1, below, describe the various pre-defined abstract and concrete measurement types discussed in the previous subsection with reference to :",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Category","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Measurement","The root of the category hierarchy."]},{"entry":["Primitive","The root of the measurements that are supplied by the"]},{"entry":[{},"application."]},{"entry":["Occurrence","Measurements of incidents that happen asynchronously,"]},{"entry":[{},"i.e. some action performed by the application that"]},{"entry":[{},"could occur at any time."]},{"entry":["Aggregate","Measurements over time period, which collate or sample"]},{"entry":[{},"the primitive measurements. The primitive measurements"]},{"entry":[{},"are Polling and Occurrence and their subcategories. All"]},{"entry":[{},"subcategories of Aggregate can be configured to either"]},{"entry":[{},"report all data over the time period or to report the"]},{"entry":[{},"TopN of the data over the time period (see description of"]},{"entry":[{},"TopN below)."]},{"entry":["Polling","Measurements of things that either are changing too"]},{"entry":[{},"rapidly which must be sampled at some rate to create"]},{"entry":[{},"an aggregate measurement, e.g. free memory, or"]},{"entry":[{},"measurement data, which is available upon request but"]},{"entry":[{},"cannot, for some reason, be asynchronously supplied to"]},{"entry":[{},"the library."]},{"entry":["Atomic","The concrete subcategory of Occurrence. Can be used to"]},{"entry":[{},"report application actions or measurable events."]},{"entry":["Transaction","A specialization of Occurrence, which includes a time"]},{"entry":[{},"duration which is calculated by the XAM library."]},{"entry":["Count","A concrete subcategory of Aggregate. Can be used to"]},{"entry":[{},"report things such as counts of instances of an"]},{"entry":[{},"Occurrence measurement type."]},{"entry":["Group","A concrete subcategory of Aggregate which reports the"]},{"entry":[{},"frequency of a group of Occurrence measurement types."]},{"entry":[{},"Each Occurrence type in the group has its own"]},{"entry":[{},"frequency."]},{"entry":["Sum","A concrete subcategory of Aggregate. Can be used to"]},{"entry":[{},"report summations of variable values from Occurrence"]},{"entry":[{},"instances. Can be used to report the average, minimum,"]},{"entry":[{},"maximum and standard deviation of the variable values."]},{"entry":["Threshold","A concrete subcategory of Aggregate. It is used to"]},{"entry":[{},"differentiate between good and bad data and count in"]},{"entry":[{},"which case each instance of a value falls."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 2, provided below, lists the type of information that an application program provides via the XAM API in order to define a variable associated with a user-defined measurement type:",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field","Possible Values","Comment"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Name","Any combination of alphanumeric","\u2018:\u2019 is reserved for"]},{"entry":[{},"characters and \u2018-\u2018, \u2018.\u2019, \u2018_\u2019, \u2018:.\u2019 Must","use by the XAM"]},{"entry":[{},"start with a letter, e.g. \u201cuser_name.\u201d","system and may not"]},{"entry":[{},{},"be used in type"]},{"entry":[{},{},"names specified"]},{"entry":[{},{},"by the application."]},{"entry":[{},{},"Alphanumeric in-"]},{"entry":[{},{},"cludes Unicode"]},{"entry":[{},{},"characters not in"]},{"entry":[{},{},"the ASCII format."]},{"entry":["Class","One of string, long or double"]},{"entry":["IsKey","Either true or false","Default false."]},{"entry":[{},{},"Variables of"]},{"entry":[{},{},"class double may"]},{"entry":[{},{},"not be keys."]},{"entry":["Alphabet","Either an enumeration of the valid","Optional"]},{"entry":[{},"string values or a range list for the"]},{"entry":[{},"long or double, e.g."]},{"entry":[{},"Enum = {\u201cready,\u201d \u201crunning,\u201d"]},{"entry":[{},"\u201cstopped\u201d}"]},{"entry":[{},"Range = {\u201c11,\u201d \u201c12,\u201d \u201c15,\u201d \u201c32 ..."]},{"entry":[{},"126\u201d}"]},{"entry":["Unit","A string describing the unit of the","Optional. If"]},{"entry":[{},"variable, e.g. \u201ckilos,\u201d sessions,\u201d","unspecified, the"]},{"entry":[{},"\u201crequests,\u201d \u201cseconds\u201d","name field is used."]},{"entry":["Descrip-","Can contain any string. Might contain","Optional."]},{"entry":["tion","a URL to a localization service and a"]},{"entry":[{},"message ID, e.g. \u201cthe number of"]},{"entry":[{},"users logged in\u201d \u201chttp:\/\/www.locals-"]},{"entry":[{},"are-us.com\/msgId324432432\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The information contained within a measurement type information data structure that is part of the measurement type information model is described in Table 3, below:",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Category","Name","Class","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Measure-","Type Identifier","String","A unique name with which"]},{"entry":["ment",{},{},"the application identifies a"]},{"entry":[{},{},{},"measurement types. Same"]},{"entry":[{},{},{},"rules as for the"]},{"entry":[{},{},{},"measurement variable"]},{"entry":[{},{},{},"name field."]},{"entry":[{},"Description","String","A human readable"]},{"entry":[{},{},{},"description of the"]},{"entry":[{},{},{},"measurement (optional)."]},{"entry":[{},"Variable Spec","Set of specs as","A set of variable"]},{"entry":[{},{},"defined in","specifications as described"]},{"entry":[{},{},"section 0","in the previous section."]},{"entry":[{},{},{},"No two variables may have"]},{"entry":[{},{},{},"the same name within one"]},{"entry":[{},{},{},"type."]},{"entry":["Aggregate","Derived type","String","The Type Identifier of the"]},{"entry":[{},"ID",{},"type which this"]},{"entry":[{},{},{},"measurement uses for"]},{"entry":[{},{},{},"source data."]},{"entry":[{},"Derived","String","The variable within the"]},{"entry":[{},"variable name",{},"type which is used as"]},{"entry":[{},{},{},"source data for this"]},{"entry":[{},{},{},"measurement type. May be"]},{"entry":[{},{},{},"empty for certain"]},{"entry":[{},{},{},"aggregate categories."]},{"entry":["Group","Member type","String[]","An array of Type Identifier"]},{"entry":[{},"Ids",{},"names one for each"]},{"entry":[{},{},{},"member of the group."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The information contained within data structures of the measurement request information model is provided in Tables 4, below:",{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Category","Name","Class","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Measure-","Type Identifier","String","A unique name with which"]},{"entry":["ment",{},{},"the application identifies a"]},{"entry":[{},{},{},"measurement type"]},{"entry":[{},"Handle","String","A handle set by the XAM"]},{"entry":[{},{},{},"service and which is set along"]},{"entry":[{},{},{},"with the measurement results"]},{"entry":[{},"Restriction","String[]","For each variable there may"]},{"entry":[{},{},{},"be a restriction. For definition"]},{"entry":[{},{},{},"of restriction see below"]},{"entry":["Aggregate","Collapse","Boolean[]","Indicate to the XAM library if"]},{"entry":[{},"Dimension",{},"the key field in question is to"]},{"entry":[{},{},{},"be used when cutting the data."]},{"entry":[{},{},{},"Default true. See 0 for"]},{"entry":[{},{},{},"example of usage."]},{"entry":[{},"Aggregate","Double","The time over which this"]},{"entry":[{},"Interval",{},"aggregate measurement is to"]},{"entry":[{},{},{},"be taken before the aggregate"]},{"entry":[{},{},{},"result is calculated."]},{"entry":[{},"TopN Size","Long","The maximum number of"]},{"entry":[{},{},{},"measurements results to be"]},{"entry":[{},{},{},"returned in anyone reporting"]},{"entry":[{},{},{},"interval. Range = \u22121.1 ... 200"]},{"entry":["Group","Ignore","Boolean[]","Indicates whether the each of"]},{"entry":[{},"Members",{},"the types that make up the"]},{"entry":[{},{},{},"group should be included in"]},{"entry":[{},{},{},"the group for reporting"]},{"entry":[{},{},{},"purposes."]},{"entry":["Threshold","Threshold Test","A restriction","The test which discriminates"]},{"entry":[{},{},{},"the values."]},{"entry":["Polling","Sample In-","Double","Seconds between samples."]},{"entry":[{},"terval"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"The information contained within data structures of the measurement instance information model is provided in Table 5, below:",{"@attributes":{"id":"p-0070","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Category","Name","Class","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Measurement","Type Identifier","String","This field is defined as part"]},{"entry":[{},{},{},"of the measurement type"]},{"entry":[{},{},{},"information model and is"]},{"entry":[{},{},{},"sent along with every report."]},{"entry":[{},"Time Base","Time","The time when this"]},{"entry":[{},{},{},"measurement happened. For"]},{"entry":[{},{},{},"a transaction this"]},{"entry":[{},{},{},"corresponds to the start"]},{"entry":[{},{},{},"time. For a polling value it"]},{"entry":[{},{},{},"will correspond to the time"]},{"entry":[{},{},{},"when the callback method is"]},{"entry":[{},{},{},"called. [UTC time string]"]},{"entry":[{},"Variable Value","Value[]","Either a String Long or a"]},{"entry":[{},{},{},"Double"]},{"entry":["Occurrence","Parent","String","A field which links several"]},{"entry":[{},"Correlator",{},"different transactions"]},{"entry":[{},{},{},"together. Can be used to"]},{"entry":[{},{},{},"link up transactions which"]},{"entry":[{},{},{},"occur on different entities"]},{"entry":[{},{},{},"but which are initiated by"]},{"entry":[{},{},{},"the same source. This field"]},{"entry":[{},{},{},"may be empty."]},{"entry":["Transaction","Type Instance","String","This field is created by the"]},{"entry":[{},"Identifier",{},"XAM library and may be"]},{"entry":[{},{},{},"used as a valid value for part"]},{"entry":[{},{},{},"of the parent Correlator"]},{"entry":[{},{},{},"field. Any Unicode"]},{"entry":[{},{},{},"character is valid except \u2018!.\u2019"]},{"entry":[{},{},{},"Should be world and time"]},{"entry":[{},{},{},"unique."]},{"entry":[{},"Duration","Double","The time between the call to"]},{"entry":[{},{},{},"start() and the call to end()."]},{"entry":[{},{},{},"This value is calculated by"]},{"entry":[{},{},{},"the XAM library."]},{"entry":[{},"Status","String","Whether the transaction was"]},{"entry":[{},{},{},"completed successfully on"]},{"entry":[{},{},{},"not valid values are \u201cok\u201d or"]},{"entry":[{},{},{},"\u201cfailed.\u201d"]},{"entry":["Count","Frequency","Long","The number of instances of"]},{"entry":[{},{},{},"the occurrence type"]},{"entry":[{},{},{},"delivered by the application"]},{"entry":[{},{},{},"during the reporting period."]},{"entry":["Group","Frequency","Long[]","As above for the type within"]},{"entry":[{},{},{},"the group."]},{"entry":[{},"Identifiers","String[]","The type Identifiers that go"]},{"entry":[{},{},{},"with the frequencies above."]},{"entry":["Sum","Ex","Long","The summation of value of"]},{"entry":[{},{},{},"the variable over the"]},{"entry":[{},{},{},"reporting period."]},{"entry":[{},"Ex2","Long","The sum of the squares of"]},{"entry":[{},{},{},"the variable over the"]},{"entry":[{},{},{},"reporting period."]},{"entry":[{},"N","Long","The number of variables"]},{"entry":[{},{},{},"summed over the reporting"]},{"entry":[{},{},{},"period."]},{"entry":[{},"Max","Long","The highest variable during"]},{"entry":[{},{},{},"the reporting period."]},{"entry":[{},"Min","Long","The lowest variable during"]},{"entry":[{},{},{},"the reporting period"]},{"entry":["Threshold","NumberPass","Long","The number of instances in"]},{"entry":[{},{},{},"which the value passed the"]},{"entry":[{},{},{},"threshold test."]},{"entry":[{},"Total Pop","Long","The number of instances of"]},{"entry":[{},{},{},"the value that were tested."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The threshold aggregate measurement type may include a configurable restriction which partitions data sets into accepted data sets and rejected data sets. In other words, the restriction represents a threshold test. Types of restrictions, based on variables associated with the primitive measurement type on which the threshold aggregate measurement type is based, are provided below in Table 6:",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Class of",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Variable","Restriction","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["String","Enumeration","The value of the variable must match one"]},{"entry":[{},{},"of the elements in the enumeration, e.g."]},{"entry":[{},{},"{\u2018ready,\u2019 \u2018running,\u2019 \u2018stopped\u2019}"]},{"entry":[{},"Prefix","The first characters of the value of the"]},{"entry":[{},{},"variable must match the complete prefix"]},{"entry":[{},{},"string."]},{"entry":[{},"Postfix","The last characters of the value of the"]},{"entry":[{},{},"variable must match the complete postfix"]},{"entry":[{},{},"string."]},{"entry":["Long or","Range set","The value of the variable must lie"]},{"entry":["Double",{},"within the ranges specified."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Note that a parent transaction measurement type may be correlated to a child transaction measurement type via a correlator, allowing for creation of additional aggregate measurement types. The correlator contains fields that identify the parent transaction measurement type, including: (1) a system identifier; (2) a system instance identifier; (3) a type identifier; and (4) a type instance identifier. These fields are encoded within a Unicode string that identifies the parent transaction to the XAM library when the child transaction is started. The notion of transaction correlators occurs in the ARM standard.","The information stored within a data structure of the measurement system information model is provided below in Table 7:",{"@attributes":{"id":"p-0075","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["System",{},{},"Change-"]},{"entry":["field name","Description","Class","able"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Enable","Boolean field, which controls if","Boolean","Yes"]},{"entry":[{},"any measurement reports are"]},{"entry":[{},"generated by the application."]},{"entry":[{},"Default is true."]},{"entry":["Service Identifier","The name of the application or","String","No"]},{"entry":[{},"service will be the same for all"]},{"entry":[{},"instances of the service that ever"]},{"entry":[{},"run, e.g. \u201cvirtual file system"]},{"entry":[{},"version 1.5.4.\u201d Any Unicode"]},{"entry":[{},"character is valid except \u2018!.\u2019"]},{"entry":["Service Instance","A string that will uniquely identify","String","No"]},{"entry":["Identifier","the instance of the application or"]},{"entry":[{},"service, e.g."]},{"entry":[{},"\u201c15.144.69.2:pid + 1234.\u201d Any"]},{"entry":[{},"Unicode character is valid except"]},{"entry":[{},"\u2018!.\u2019"]},{"entry":["Service","A description of the service or","String","No"]},{"entry":["Description","application or a URL to a"]},{"entry":[{},"localization service and a message"]},{"entry":[{},"ID."]},{"entry":["Clock Resolution","The smallest period of time that","Double","No"]},{"entry":[{},"the library can measure in seconds."]},{"entry":["MinReportIn-","Time is seconds between the","Long","Yes"]},{"entry":["terval","application sending measurement"]},{"entry":[{},"reports. If this is set to zero, then"]},{"entry":[{},"a report will be sent as soon as"]},{"entry":[{},"measurement data is available."]},{"entry":[{},"Values above zero allow the"]},{"entry":[{},"application to bundle up several"]},{"entry":[{},"measurements into a single XML"]},{"entry":[{},"report documents. Default is 5"]},{"entry":[{},"seconds."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"As described in the overview subsection, the XAM library automatically creates aggregation measurement types corresponding to each user-defined primitive measurement type. Pseudocode expressing automatic aggregation measurement type creation by the XAM library is provided below:",{"@attributes":{"id":"p-0077","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For all concrete, primitive measurement types (T) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Register a measurement type of category Count"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"with TypeID = \u2018T-Count\u2019"]},{"entry":[{},"with Variables = key variables from T"]},{"entry":[{},"with DerivedTypeID = T"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Register a measurement type of category Threshold"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"with TypeId = \u2018T-Threshold\u2019"]},{"entry":[{},"with Variables = key variables from T"]},{"entry":[{},"with DerivedTypeID = T"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Within T For each non key non string variable (V): {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Register a measurement type of category Sum"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"with TypeId = \u2018T-Sum-V\u2019"]},{"entry":[{},"with Variables = key variables from T"]},{"entry":[{},"with DerivedTypeID = T"]},{"entry":[{},"with Derived VariableName = V"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"For all transaction measurement types (T) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Within T For each calculated variable (V): {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Register a measurement type of category Sum"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"with TypeId = \u2018T-Sum-V\u2019"]},{"entry":[{},"with Variables = key variables from T"]},{"entry":[{},"with DerivedTypeID = T"]},{"entry":[{},"with Derived VariableName = V"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In Table 8, below, an example set of user-defined primitive measurement types is provided:",{"@attributes":{"id":"p-0079","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"center"}}],"thead":{"row":{"entry":[{},"TABLE 8"]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"Variables"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Category","Type name","Name","Class","IsKey","Alphabet","Unit"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}},{"entry":["Polling","Disk_utilization","Utilization","Double","No","0 . . . 100","percent"]},{"entry":[{},{},"Disk","Long","Yes","1 . . . i"]},{"entry":[{},{},"User","String","Yes"]},{"entry":["Transaction","Download_file","File_name","String","No"]},{"entry":[{},{},"File_type","String","Yes"]},{"entry":[{},{},"Size","Long","No"]},{"entry":[{},{},"Invoker_ID","String","Yes"]},{"entry":[{},{},"Duration","Double","No","0 . . . i","second"]},{"entry":[{},{},{"u":"Size_by_duration"},{"u":"Double"},{"u":"No"},{},{"u":"Bytes\/second"}]},{"entry":["Atomic","Security_Authorization_failure","Conversation_","String","Yes"]},{"entry":[{},{},"type"]},{"entry":[{},{},"Document_type","String","Yes"]},{"entry":[{},{},"Invoker_ID","String","Yes"]},{"entry":[{},{},"Recipient_ID","String","Yes"]},{"entry":[{},{},"Reason","String","Yes"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}]}}},"Table 9, below, shows the aggregate measurement types automatically generated by the XAM library for the primitive measurement types shown in Table 8, above:",{"@attributes":{"id":"p-0081","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"center"}}],"thead":{"row":{"entry":[{},"TABLE 9"]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"Variables"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Category","Type name","Name","Class","IsKey","Alphabet","Unit"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}},{"entry":["Sum","Disk_utilization:Sum:Utilization","Disk","Long","Yes","1 . . . i",{}]},{"entry":[{},{},"User","String","Yes"]},{"entry":["Threshold","Disk_utilization:Threshold","Disk","Long","Yes","1 . . . i"]},{"entry":[{},{},"User","String","Yes"]},{"entry":["Count","Disk_utilization:Count","Disk","Long","Yes","1 . . . i"]},{"entry":[{},{},"User","String","Yes"]},{"entry":["Count","Download_file:Count","File type","String","Yes"]},{"entry":[{},{},"Invoker ID","String","Yes"]},{"entry":["Sum","Download_file:Sum:","File type","String","Yes"]},{"entry":[{},"Duration","Invoker ID","String","Yes"]},{"entry":["Sum","Download_file:Sum:size","File type","String","Yes"]},{"entry":[{},{},"Invoker ID","String","Yes"]},{"entry":["Sum","Download_file:Sum:","File type","String","Yes"]},{"entry":[{},"Size_by_duration","Invoker ID","String","Yes"]},{"entry":["Threshold","Download_file:Threshold:","File type","String","Yes"]},{"entry":[{},{},"Invoker ID","String","Yes"]},{"entry":["Count","Security_Authorization_","Conversation","String","Yes"]},{"entry":[{},"failure:Count","type"]},{"entry":[{},{},"Document","String","Yes"]},{"entry":[{},{},"type"]},{"entry":[{},{},"Invoker ID","String","Yes"]},{"entry":[{},{},"Recipient ID","String","Yes"]},{"entry":[{},{},"Reason","String","Yes"]},{"entry":["Threshold","Security_Authorization_","Conversation","String","Yes"]},{"entry":[{},"failure:Threshold","type"]},{"entry":[{},{},"Document","String","Yes"]},{"entry":[{},{},"type"]},{"entry":[{},{},"Invoker ID","String","Yes"]},{"entry":[{},{},"Recipient ID","String","Yes"]},{"entry":[{},{},"Reason","String","Yes"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}]}}},"An example XAM implementation is provided below in Appendix A. This example implementation includes explanatory internal comments, but is not further externally annotated. The example implementation is provided in Appendix A for the sake of completeness, as an additional XAM architecture reference, and as a guide for XAM architecture implementation.","Although the present invention has been described in terms of a particular embodiment, it is not intended that the invention be limited to this embodiment. Modifications within the spirit of the invention will be apparent to those skilled in the art. For example, an almost limitless number of XAM implementations are possible, using any number of programming languages, modular organizations, data structures, and software design strategies. A large number of implementation strategies may be employed, including full de novo implementation and implementation based on an existing ARM API. As discussed above, many different mappings of XAM functionality onto computers and operating-system services are possible. The predefined measurement type hierarchy can be easily extended to include additional abstract and concrete measurement types in order to provide additional types of measurement collection and processing. The description of one embodiment of the XAM architecture, above, is based on instrumentation of application software programs, but XAM systems can be developed to instrument virtually any type of software program.","The foregoing description, for purposes of explanation, used specific nomenclature to provide a thorough understanding of the invention. However, it will be apparent to one skilled in the art that the specific details are not required in order to practice the invention. The foregoing descriptions of specific embodiments of the present invention are presented for purpose of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously, many modifications and variations are possible in view of the above teachings. The embodiments are shown and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalents: \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4D"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4E"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4F"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4G"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4H"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4I"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 7A\u2013C"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
