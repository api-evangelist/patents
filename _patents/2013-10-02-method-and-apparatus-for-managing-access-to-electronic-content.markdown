---
title: Method and apparatus for managing access to electronic content
abstract: According to at least one example embodiment, a method and corresponding content protection server for managing access to electronic content comprise retrieving access policies, or permissions, associated with a content item from a corresponding content sharing application, or rights issuer. The access policies are translated into a format recognizable by a digital rights management (DRM) engine, and forwarded to the DRM engine. The translated access policies are then provided by the DRM engine to a client device where the translated access policies are enforced in managing any potential access to the content item.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09356936&OS=09356936&RS=09356936
owner: Intralinks, Inc.
number: 09356936
owner_city: New York
owner_country: US
publication_date: 20131002
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["Digital content sharing is a convenient and easy way to exchange information between people, organizations, companies, or any other entities. However, sharing content over digital media, such as the Internet, may expose the content to un-trusted users. Many digital rights management (DRM) technologies provide solutions to limit access to shared content to trusted users.","A typical digital rights management (DRM) system includes a rights issuer configured to create and provide access policies, or permissions, associated with corresponding content items, and a DRM engine that typically encrypts content items and manages users and access policies. The typical DRM system also includes DRM clients, or agents, for enforcing access policies, associated with content items, within a client device. Within each DRM system, the corresponding rights issuer, DRM engine, and DRM agents are expected to comply with proprietary, or standardized, specification requirements that are specific to the DRM system. As such, DRM systems employing distinct DRM technologies are not interoperable.","Also, once access policies are provided to a DRM client device, management of the access policies is handled by the DRM engine. Dynamically modifying the rights policies once they are delivered to a client device is either impossible, or calls for an active role by the rights issuer to synchronize with the DRM engine and\/or the DRM agents in order to revoke previous access policies and provide new ones.","In the following embodiments of a DRM system with a middle layer enabling support of, and interoperability between, different DRM technologies are presented by applicants. In the DRM system presented, DRM engines do not perform encryption, user management, nor access policies' management. Each time, a protected content item is opened on a client device, corresponding access policies are requested from a corresponding DRM engine. The DRM engine forwards the request to a content protection server. The content protection server retrieves the access policies from the rights issuer, and provides the retrieved access policies to the DRM engine in a format readable by the DRM engine. The access policies are then provided to the DRM client, or agent, to be enforced in the client device. As such, the rights issuer is enabled to dynamically modify access policies at any time. At each attempt to access the content item, the most recent access policies are retrieved from the rights issuer and enforced at the client device.","According to at least one example embodiment, a method and corresponding content protection server for managing access to electronic content comprise retrieving access policies, or permissions, associated with a content item from a corresponding content sharing application, or rights issuer. The access policies are translated into a format recognizable by a digital rights management (DRM) engine, and forwarded to the DRM engine. The translated access policies are then provided by the DRM engine to a client device where the translated access policies are enforced in managing any potential access to the content item.","In order to retrieve the access policies, the content protection server receives information identifying the content item from the client device. The content server then requests from the corresponding content sharing application, or rights issuer, the access policies associated with the content item based on the received information identifying the content item. In response to the request, the rights issuer, or the content sharing application, sends the requested access policies to the content protection server.","Retrieving the access policies includes receiving the access policies in a format recognizable by the content protection server. The access policies are translated into the format recognizable by the content protection server by an interface associated with the content sharing application, or rights issuer. The access policies in the format recognizable by the content protection server are then translated, by the content protection server, into a format readable, or recognizable, by the DRM engine.","Prior to retrieving the access policies, the content protection server receives, from the DRM engine, user credentials for authentication. The content protection server may handle the authentication of user credentials locally. Alternatively, the content protection server forwards the user credentials to the content sharing application for authentication. Once user credential are successfully authenticated, the content protection server receives information identifying the content item. The content sharing application, or system, is identified based on the received information identifying the content item.","Also, prior to retrieving the access policies, the content item is encrypted by the content protection server. Encrypting the content item includes receiving the content item from the content sharing application. An encryption protocol is then determined based on a type of the received content item. The received content item may be pre-processed based on the content item format. The content item is then encrypted based on the determined encryption protocol. The content item may further be post-processed based on the content item format. The encrypted content item is provided the to the user\/client device. The content protection server also causes the encrypted content item to be registered at the DRM engine.","The access policies are dynamic. That is, on a subsequent attempt to access the content item at user device, the access policies are automatically retrieved again from the content sharing application, translated and provided to the DRM engine by the content protection server. So, any modification of the access policies by the content sharing application, or rights issuer, are included in the access policies retrieved by the content protection server upon a subsequent attempt to access the content item.","According to at least one example implementation, the content protection server is coupled to two or more DRM engines. The content protection server is also coupled to two or more content sharing applications, or systems.","A description of example embodiments of the invention follows.","Digital rights management (DRM) technologies provide solutions for secure content sharing, electronic content protection, and user access control to electronic content. With such solutions, an entity may be able to manage who has the right to access content circulated over the Internet or other digital media, and what kind of rights are granted to each potential user. Electronic content herein refers to one or more media objects, such as, music files, images, video files, text documents, or the like.","In a typical DRM system, a rights issuer issues access rights, or permissions, associated with a content item, or object, and provides the access rights to a user device. The DRM rights are enforced at the receiving user device through a DRM client, or agent. A DRM engine coupled to the DRM clients is configured to encrypt content items and manage users and access policies. Each DRM engine typically has proprietary, or standardized, architecture, protocols, encryption methods, policy management and processing methods. The corresponding DRM agents and Rights issuer are expected to be compliant with the specificities of the DRM engine and the DRM technology employed by the DRM system in general. As such, DRM system employing distinct DRM technologies are not interoperable. In order for a user device to consume protected content by a given DRM system, the user device is expected to have a complying DRM agent.","Some typical DRM systems do not enable dynamic access policies, and, as such, access policies may not be modified once they are distributed to DRM agents. Other DRM systems require synchronization between the rights issuer and the DRM engine.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","100","110","150","160","1","160","180","110","115","185","180","150","160","1","160","2","160"],"i":["n","n. "]},"The content sharing system, or application,  is configured to act as a content issuer and a rights issuer. For example, the content sharing system  includes a content issuer module  and a rights issuer module . The content issuer module  is configured to circulate content  over the Internet, or any other communications medium, for sharing with potential users. The rights issuer module  is configured to issue permissions, or access rights, in association with content  for sharing by the content issuer module  with client users. The content issuer module  may include, or be coupled to, a content repository containing content  for sharing. The content issuer module  and the rights issuer module  may reside on the same device, e.g., enterprise server, personal computer, or the like, or on different devices.","According to at least one example embodiment, the content protection server  is coupled to one or more content sharing systems  and one or more RMS servers, or DRM engines, e.g., ---. The content protection server  represents an intermediate layer, between the DRM engines ---and the content sharing system(s) , that is agnostic to the DRM engines ---and the content sharing system(s) . The middle layer is configured to normalize content processing, irrespective of the content type, and handle content encryption instead of the DRM engines ---. Specifically, during a publishing phase, the content protection server  is configured to encrypt the content , irrespective of the corresponding content type, and provide a corresponding protected, or encrypted, copy  of the content to the content sharing system . The content sharing system  may then share the encrypted content  with client users.","Also, when the client user attempts to access the encrypted content , the content protection server  acts as an inter-operability layer between a RMS server, or a DRM engine, e.g., -, -, . . . , or -, and the content sharing system  associated with the protected content . In other words, during a consumption phase of the protected content , the content protection server  translates policy objects received from the content sharing system , or the rights issuer module , into a format, or language, recognizable by the DRM engine, e.g., -, -, . . . , or -","According to at least one example embodiment, the content protection server  provides an interoperability interface between fundamentally different DRM technologies, at the protection layer. That is, the format and\/or language employed in creating the access rights, or permissions, by the rights issuer  and the DRM technologies supported by a given DRM engine may be fundamentally different and non-compliant to each other's requirements, yet, the content protection server  provides an interface that enables interoperability between the given content sharing system  and a given DRM engine.","The content protection server  is configured to support multiple DRM technologies and corresponding DRM engines ---. For example, the RMS servers, or DRM engines, ---include a \u201cLiveCycle\u201d server from Adobe, a Microsoft RMS server, and\/or other proprietary or standardized DRM engines. The content protection server  is also configured to support multiple content sharing systems .","According to at least one example embodiment, the DRM engines ---are used to register documents and reroute access requests from client devices to the content protection server . The DRM engines ---do not perform content encryption, user management, nor policy management. However, the content protection server  may employ software development kits (SDKs) to match the particular DRM technology for that DRM engine. Encryption is done at the content protection server side, yet the employed encryption techniques are expected to be compliant with the techniques supported by the DRM engines. When a client user attempts to open the protected content , the user device  sends a request for corresponding DRM policies, or permissions, is sent to a corresponding DRM engine. The DRM engine forwards the request to the content protection server , which requests the DRM policies, or permissions, from the content sharing system , e.g., from the policy issuer . Upon receiving the requested access policies, the content server  provides the access policies to the DRM engine, which provides them to the user device to be enforced. In response to each subsequent attempt to open the content item again, the same process is repeated and access policies are obtained again from the content sharing application , or the rights issuer . Such scheme enables the content sharing application , or the rights issuer  to dynamically manage and control the access policies with the certainty that the latest updated version of the access policies is employed by a user device attempting to access the content item. For example, the content sharing application , or rights issuer , may update access policies associated with content items once the content items and the corresponding policies have been distributed. The access to already distributed content items may also be revoked by the content sharing application , or rights issuer .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["100","115","205","210","150","150","115","150","215","185","220","115","115","150","230","185","110","240","110","112","185","180","110","185","180","110","185","180","185"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["185","305","180","185","310","160","160","185","185","160","180","320","185","185"]},"At , the user device  provides an authentication window or session for the user, and the user is requested to enter his user credentials. The user credentials are then sent to the content protection server  for authentication. According to one example implementation, the content protection server  may handle the authentication locally if, for example, the content protection server  maintains a database of authentic user credentials for each user. Alternatively, the user credentials received by the content protection server are sent to the content sharing application  for authentication. Once user credentials are authenticated, an indication of successful authentication is sent to the user device . Once the user credentials are authenticated at , the user device  sends, at , the information identifying the encrypted content item  to the DRM engine  again. The user device  may also send a notification to the DRM engine  indicating that user credentials are successfully authenticated.","At , the DRM engine  forwards the information identifying the encrypted content item  to the content protection server . The content protection server  sends a request, at , to the content sharing application  requesting access policies, or permissions, based on the information identifying the encrypted content item . The content protection server  stores, for example, a database mapping information identifying content items to corresponding content sharing applications , rights issuers, or corresponding plug-in modules . At  the plug-in module  translates the requested access policies into a format, or language, recognizable by the content protection server , and the translated access policies are sent at  to content protection server . Alternatively, the translation to a format, or language, recognizable by the content protection server  may be performed by a translation module within, or associated with, the content protection server .","The plug-in module  resides at the content sharing application . The plug-in module  is implemented, for example, as an application on top, a plug-in, an extension of the content sharing application , or the like. The plug-in module  translates  permissions, or DRM policies, specific to the content sharing application , or the corresponding rights issuer , into a format, or language, recognizable by the content protection server . The content protection server  stores information that enables mapping the encrypted content item  to a corresponding content sharing application , or plug-in module . Upon receiving the be able to identify what content sharing application or plug-in to call for a specific document in the authorization phase","The content protection server  translates, at , the access policies into a format, or language, recognizable by the DRM engine , and sends  the access policies in the format, or language, recognizable by the DRM engine  to the DRM engine . The DRM engine forwards  the access policies received to the user device . The access policies are enforced  in the user device , for example, by a corresponding DRM agent.","The process described with respect to  is performed again with each subsequent attempt to access the encrypted content item  in the user device , and each time, the latest version of the access policies is obtained from the content sharing application and enforced at the user device , therefore enabling dynamic access policies that are managed by the content sharing application , or the rights issuer.","The content protection server  includes a set of application programming interfaces (APIs), which provide to third parties a public interface for accessing functionalities associated with the content protection server. Such APIs include analytics APIs, policy management APIs, document management APIs, and user management APIs. Analytics APIs provide third parties with access to a set of functions that upon use by a developer of a content sharing application  return a set of data which represents the information that a user device conveyed to a DRM system regarding usage of a content item. Policy management APIs provide a third party with access to a set of functions that enables the developer of a content sharing application to manage local policies or access rights. Document management APIs provide access to a third party to a set of functions that enables a developer of a content sharing application through a customization module to encrypt content items. The user management APIs provide access to the a third party to a set of functions that helps a developer of a content sharing application to implement functionality related to managing users in a DRM system .","The content protection server  has queuing services built-in that enable processing one or more content items, received for encryption, asynchronously and in a scalable fashion. The content protection server  also provides encryption services including algorithms and DRM specific protocols for encrypting content items received by the content protection server . The content protection server  is also configured to process documents. Specifically, the content protection server  is configured to provide logic and algorithms to pre-process or post-process content items that are received by the content protection server  before or after encryption.","According to at least one example embodiment, the content protection server  is computer cloud server. Alternatively, the content protection server  is computer server residing on the same network as the content sharing application . According to yet another example embodiment, some modules of the content protection server, e.g., an encryption module for performing encryption, is implemented within the same computer network as the content sharing application , while other modules are implemented on a cloud computer server.","It should be understood that the example embodiments described above may be implemented in many different ways. In some instances, the various methods and machines described herein may each be implemented by a physical, virtual or hybrid general purpose or application specific computer having a central processor, memory, disk or other mass storage, communication interface(s), input\/output (I\/O) device(s), and other peripherals. The general purpose or application specific computer is transformed into the machines that execute the methods described above, for example, by loading software instructions into a data processor, and then causing execution of the instructions to carry out the functions described, herein.","As is known in the art, such a computer may contain a system bus, where a bus is a set of hardware lines used for data transfer among the components of a computer or processing system. The bus or busses are essentially shared conduit(s) that connect different elements of the computer system, e.g., processor, disk storage, memory, input\/output ports, network ports, etc., that enables the transfer of information between the elements. One or more central processor units are attached to the system bus and provide for the execution of computer instructions. Also attached to the system bus are typically I\/O device interfaces for connecting various input and output devices, e.g., keyboard, mouse, displays, printers, speakers, etc., to the computer. Network interface(s) allow the computer to connect to various other devices attached to a network. Memory provides volatile storage for computer software instructions and data used to implement an embodiment. Disk or other mass storage provides non-volatile storage for computer software instructions and data used to implement, for example, the various procedures described herein.","Embodiments may therefore typically be implemented in hardware, firmware, software, or any combination thereof.","In certain embodiments, the procedures, devices, and processes described herein constitute a computer program product, including a computer readable medium, e.g., a removable storage medium such as one or more DVD-ROM's, CD-ROM's, diskettes, tapes, etc., that provides at least a portion of the software instructions for the system. Such a computer program product can be installed by any suitable software installation procedure, as is well known in the art. In another embodiment, at least a portion of the software instructions may also be downloaded over a cable, communication and\/or wireless connection.","Embodiments may also be implemented as instructions stored on a non-transitory machine-readable medium, which may be read and executed by one or more processors. A non-transient machine-readable medium may include any mechanism for storing or transmitting information in a form readable by a machine, e.g., a computing device. For example, a non-transient machine-readable medium may include read only memory (ROM); random access memory (RAM); magnetic disk storage media; optical storage media; flash memory devices; and others.","Further, firmware, software, routines, or instructions may be described herein as performing certain actions and\/or functions of the data processors. However, it should be appreciated that such descriptions contained herein are merely for convenience and that such actions in fact result from computing devices, processors, controllers, or other devices executing the firmware, software, routines, instructions, etc.","It also should be understood that the flow diagrams, block diagrams, and network diagrams may include more or fewer elements, be arranged differently, or be represented differently. But it further should be understood that certain implementations may dictate the block and network diagrams and the number of block and network diagrams illustrating the execution of the embodiments be implemented in a particular way.","Accordingly, further embodiments may also be implemented in a variety of computer architectures, physical, virtual, cloud computers, and\/or some combination thereof, and, thus, the data processors described herein are intended for purposes of illustration only and not as a limitation of the embodiments.","While this invention has been particularly shown and described with references to example embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the invention encompassed by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing will be apparent from the following more particular description of example embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating embodiments of the present invention.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":"100"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
