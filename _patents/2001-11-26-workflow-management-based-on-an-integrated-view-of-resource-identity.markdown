---
title: Workflow management based on an integrated view of resource identity
abstract: The described arrangements and procedures use a directory, with its integrated view of resource identity across a distributed system to dynamically execute and manage workflow solutions responsive to changes in the directory. Specifically, a state change to an object in a directory is detected. Responsive to detecting the state change, the state change is mapped to a corresponding workflow, which includes sequences of tasks. The identified sequences of tasks are then executed to achieve a desired state in the directory. The desired state is based on the detected state change.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07389335&OS=07389335&RS=07389335
owner: Microsoft Corporation
number: 07389335
owner_city: Redmond
owner_country: US
publication_date: 20011126
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","A Directory Schema with Flexible Objects and Attributes","The Provisioning Status Attribute ","The Provisioning Status XML Attribute ","The Provisioning Configuration Attribute ","The Provisioning Configuration Private Attribute ","The Provisioning Status Binary Attribute ","The Provisioning Link Attribute ","The Provisioning Backlink Attribute ","The Workflow Structural Class ","The Provisioning Status Structural Class ","The Provisioning Service History Structural Class ","The Service Connection Point Structural Class ","The Provisioning Service Structural Class ","The Event Association Structural Class ","Convergence of Workflow to a Desired Directory State"],"p":["The following subject matter pertains to workflow management. More particularly, the described arrangements and procedures pertain to dynamically executing and managing workflow management in response to state changes in a directory.","All large corporations, and many small to medium sized organizations, face significant challenges in coordinating the provisioning of resources for employees and contractors. Every time a new application is installed or a new employee is hired, administrators must create multiple directory entries to match (e.g., grant or authorize access) users to the proper resources. Thus, simple events such as a new hire can turn into a laborious exercise, requiring enrollment in e-mail systems, intranet systems, remote-access systems, computers and corresponding peripheral hardware may need to be ordered, telephones provisioned, office space allocated, and the like. Similarly, if an employee leaves the company, you must judiciously remove the user from all these systems and resources.","In light of this, promotions, transfers, mergers, acquisitions, divestitures, marriage, divorce, name changes, and so on, can cause substantial logistical problems that can not typically be solved with a simple drag and drop of directory objects from one domain to another. Instead, users or resources must generally be deleted from one domain and then completely re-created in another domain; not to mention the logistical problems caused by moving entire groups of users and\/or resources between domains. Thus, in today's fast-paced world of mergers, acquisitions, divestitures, and reorganizations, ensuring that employees have proper access to company resources can be a full-time job for an army of information technology workers.","These resource provisioning activities traditionally occur within organizations in an uncoordinated and decentralized fashion, and often result in delays, duplication of administrative effort, and unnecessary expense. For example, the costs show up with an increasing number of calls to a help desk because directories aren't synchronized or because users can't access physical resources or applications. However, it's not just about cost and replication of effort; it's also about risk. The risks of provisioning in an uncoordinated and decentralized fashion become evident when users who are no longer with a company still exist in some of the directories and can access the company's valuable resources.","Many organizations have developed their own jury-rigged solutions to the problems of automating the provisioning process by using a workflow, which is a series of predefined actions or procedures to coordinate complex sequences of actions. Workflows have always been expensive to produce, inflexible, and difficult to maintain. For example, one problem with conventional procedures to implement workflows is that workflows are typically based on a \u201cfire and forget\u201d paradigm. The \u201cfire\u201d aspect means an individual such as a network administrator is generally required to manually identify and execute a particular workflow sequence to implement a predefined policy in response to a specific event. This is a problem because there can be any number of workflows used to implement policies within an organization. Locating a proper workflow to implement in a timely manner is not always a simple procedure and it is susceptible to human error.","The \u201cforget\u201d aspect of the fire-and-forget paradigm of conventional workflow implementation means that even though group policies are typically based on a domain or unit within an organization, no one particular entity such as a network administrator (typically has an easy way to predict which machines or resources will be affected by a workflow. This is especially true in a distributed networking environment, where peripheral devices may be added and removed from the network at any time. Additionally, because a workflow may consist of any number of long running operations that can take hours, weeks, or longer to complete, there is no easy way for an administrator to coordinate transactions and\/or monitor statuses such as the success or failure of the tasks that are implemented by the workflow.","Moreover, once workflows have been implemented, it is typically not a simple task for an administrator to determine which particular workflow of multiple workflows was used to implement a particular policy that affected machines and\/or resources.","For instance, consider that a particular workflow is executed to implement a policy granting one or more computers or users on a network access to specific network resources or physical facility resources to which the computers\/users previously had no access. Afterward the workflow has been implemented, it is determined that one or more machines or users were erroneously granted access to those network resources or physical facilities. It may be crucial to organizational interests (e.g., security) to determine exactly which machines, users, and\/or resources were affected by the workflow. However, to accomplish this it will be necessary to identify the particular workflow that resulted in the erroneous grant of resources. Unfortunately, traditional workflow systems and procedures do not typically provide an easy way for an administrator to identify such information.","These types of problems also arise within \u201chire-and-fire\u201d scenarios within an organization. For instance, after a person leaves an organization, an administrator must typically coordinate the inverse of any provisioning that occurred from when the person was hired to the time that the person left the company's employment. The organization's provisioning may have been implemented by any number of various workflows. Unfortunately, traditional workflow systems and procedures do not typically provide an easy way for an administrator to identify the one or more workflows that may have been used to provision the person. Thus, any modification to the person's network and physical resource access, and any modification to associated business operations to reflect the persons new non-employee status is typically performed in an uncoordinated and decentralized fashion, possibly resulting in delays, duplication of administrative effort, unnecessary expense, and increased risk.","Yet another problem with traditional workflow implementations are that they are not typically \u201cself-healing\u201d, or self-correcting. This means that if a particular operation of a workflow fails in some manner, one or more corrective actions may not be taken in response to the failed operation. In other words, if a computer that is executing one or more aspects of a workflow malfunctions or for some other reason becomes unavailable, there is typically no mechanism to ensure that conditional aspects of a workflow that may have depended on un-implemented or failed aspects of the workflow have been satisfied. Additionally there is not mechanism to ensure that the un-implemented (or failed) aspects of the workflow are eventually implemented. This lack of a self-correcting behavior is especially important to consider in a distributed computing environment, wherein more than one computer, and possibly dozens, hundreds, or even thousands of computers may be involved in executing any one task or operation of a workflow.","The following arrangements and procedures address these and additional problems of traditional systems and procedures to define and implement workflows.","The described arrangements and procedures use a directory, with its integrated view of resource identity across a distributed system to dynamically execute and manage workflow solutions responsive to changes in the directory. Specifically, a state change to an object in a directory is detected. Responsive to detecting the state change, the state change is mapped to a corresponding workflow, which includes sequences of tasks. The identified sequences of tasks are then executed to achieve a desired state in the directory. The desired state is based on the detected state change.","The description sets forth an exemplary implementation to dynamically execute and manage a workflow using directory-based technology. The implementation incorporates elements recited in the appended claims. The implementation is described with specificity in order to meet statutory requirements. However, the description itself is not intended to limit the scope of this patent. Rather, the inventors have contemplated that the claimed invention might also be embodied in other ways, to include different elements or combinations of elements similar to the ones described in this document, in conjunction with other present or future technologies.","Overview","The described subject matter uses a directory, with its integrated view of resource identity across a distributed system to implement workflow solutions. By using the directory to coordinate the execution of tasks in a defined sequence, and to track the status of tasks within the directory until the tasks converge onto a desired directory state, the described subject matter provides a completely new way of approaching, implementing, coordinating and monitoring workflow tasks.","Because semantics of the described arrangements and procedures to implement a workflow are based on a workflow enabled directory schema, a schema including workflow base content classes that can be extended independent of any modification to the schema is first described. Additionally, procedures to extend the data providing and\/or operational characteristics of object instances based on a directory schema independent of schema modification are described. Furthermore, a \u201cprovisioning\u201d enabled directory schema, a system, and a procedure to integrate workflow with a directory are described.","A Schema","A schema is a collection of content classes and associations that abstract items, or \u201cobjects\u201d that tangibly or intangibly exist in the real world. A content class models a set of items that have similar properties and fulfill similar purposes. A content class defines the purpose or content of an item by containing as its elements a list of properties appropriate for that purpose or content. Content classes imply a set of semantic requirements for the item. Content classes follow a hierarchical structure.","Classes can have subclasses, also referred to as specialization classes. The parent class of a subclass is referred to as a superclass or a generalization class. A class that does not have a superclass is referred to as a base class. A subclass inherits properties of its superclass. All properties and methods of a superclass apply to the subclass.","A class  is represented by a rectangle containing the name of the class.  shows an example. A class with attributes is represented by a rectangle divided into two regions as in , one region containing the name of the class  and the other region including a list of properties  such as what attributes are mandatory, what attributes are optional, and other properties such as what content class can be a parent of the current content class.","Class inheritance represents a subclass\/superclass relationship between two or more classes. Most content classes will extend (\u201cinherit\u201d) an existing content class. To extend a content class means that all of the properties on instances of the extended (derived) content class also exist on instances of the extending (base) content class. The act of creating an object of a particular class (or \u201cdata type\u201d) is called \u201cinstantiation\u201d of the particular class, thereby creating an \u201cobject instance\u201d of the class. An object instance is a collection of values, or attributes that conform to the type established by the class definition. Hereinafter, the term \u201cobject\u201d may be used to refer to either an instance or a class.","Class inheritance can be within a namespace or across namespaces. A namespace is simply any bounded area in which standardized names can be used to symbolically represent some type of information (e.g., an object in a directory or an Internet Protocol [IP] address) that can be resolved to the object itself. Inheritance is typically represented by a line drawn between a subclass and a superclass, with an arrow adjacent to the superclass indicating the superclass. Lines representing inheritance from a base class are indicated by reference numeral . Associations are conventionally shown as a line between two classes, as indicated by reference number .","A Directory Schema","Directory schemas are typically very carefully designed to provide content classes to meet present and future requirements of a directory. However, directory schemas are often extended to meet needs of the directory that were not foreseeable at the time that the schema was designed. For instance, just because one version of a product works with the directory schema, does not mean that other or new product versions or different products will properly function with the schema. Specifically, any variation of the type information required by a product or product versions over time generally results in the need to extend the directory schema to specifically represent each piece of interesting information that a new product or a new version of the product requires to properly operate. Because of this, third parties typically extend directory schemas to create new content classes and attributes.","Conventional practice, however, is to strictly control directory schema updates because modifying a directory schema requires specialized knowledge and can have complex, serious, and far-reaching consequences for customers. For example, extending directory schemas to support specific products and product versions means that these different products and product versions will have mutually exclusive schemas. Thus, a product that was usable with one schema may become unusable with a different schema.","For instance, suppose object X is an instance of class Y. Class Y has an attribute, Z. Therefore, because object X is an instance of class Y, object X can have this attribute defined on it. Assume that X does indeed have this attribute currently defined in it. Now a schema update is performed that modifies class Y by deactivating attribute Z. Note that this change makes the instance of object X invalid because X now has an attribute, Z, which X is not allowed to have according to the class definition of Y (of which object X is an instance).","Additionally, directory schema extensions or additions are not reversible and always add to the size of the schema. In other words, once a class or attribute has been added to the schema it cannot simply be removed from the schema once it is no longer required. Continuous schema growth due to schema extension results in a problem that is generally referred to as \u201cschema bloat\u201d.","The size of a directory schema or schema bloat becomes relevant when considering that schema changes are global to a distributed computing environment. An extended schema needs to be globally replicated to every domain server on the network. I.e., a distributed directory shares a common directory schema for the entire forest of directory trees that are organized as peers and connected by two-way transitive trust relationships between the root domains of each tree; when the directory schema is extended, the forest is extended.","The collection of data that must be copied across multiple servers (i.e., the unit of replication) during schema replication is the domain. A single domain may contain a tremendous number or objects (e.g., millions of objects). Thus, schema extensions typically result in a substantial amount of replication traffic across the globe on multiple servers\u2014and the larger the schema, the larger the amount of replication traffic.","Moreover, schema replication procedures may result in replication latencies across servers in the distributed environment, causing temporary inconsistencies between various server versions of the schema. For example, consider that a new class A is created at server X, and then an instance of this class B is created at the same server X. However, when the changes are replicated to another server Y, the object B is replicated out before the object A. When the change arrives at server Y, the replication of B fails because server Y's copy of the schema still does not contain the object A. Hence, Y does not know about the existence of A.","In light of these considerations, it is apparent that schema extensions typically require a substantial amount of computing resources and data bandwidth as well as coordination between network administers to ensure that legacy applications in various domains properly operate with the updated schema. Accordingly, installing products on organizational networks that require directory schema changes can be risky, potentially politically difficult, and a time-consuming process.","The following arrangements and procedures address these and other problems that are associated with schema extensions by providing a workflow enabled schema with content classes that can be extended independent of schema modifications.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 4","b":["400","400","410","412","414","400"]},"All directory schema  structural objects (other than \u201ctop\u201d) inherit properties from the class schema class . Structural content classes (with the exception of the \u201ctop\u201d content class) include only those attributes that are defined by the attribute schema class  or those attributes defined by content classes that have been derived from the attribute schema class . We now describe properties of the attribute schema content class.","The Attribute Schema Content Class","The attribute schema class  provides for a number of properties . Any attribute class  is derived from the attribute content class  will inherit these properties.","The properties  include:\n\n","A flexible attribute  class is derived from the attribute schema content class . Thus, the flexible attribute inherits the properties . Table 1 provides an example of the values of the flexible attribute  class.",{"@attributes":{"id":"p-0047","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE OF FLEXIBLE ATTRIBUTE KEY PROPERTIES"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Properties 416 of",{}]},{"entry":["Flexible Attribute 418","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Cn","String"]},{"entry":["LDAPDisplayName","String"]},{"entry":["Description","This attribute contains XML"]},{"entry":[{},"information used by a service"]},{"entry":["AdminDisplayName","String"]},{"entry":["adminDescription","Directory ServiceInternal Use"]},{"entry":[{},"Only"]},{"entry":["is SingleValued","TRUE"]},{"entry":["SearchFlags","0x0"]},{"entry":["isMemberOfPartialAttributeSet","FALSE"]},{"entry":["Systemflags","Not Replicated"]},{"entry":["SystemOnly","FALSE"]},{"entry":["ObjectClass","Attribute Schema 414 of FIG. 4"]},{"entry":["attributeSyntax","String (e.g., XML)"]},{"entry":["OMSyntax","64"]},{"entry":"oMObjectClass"},{"entry":["AttributeID","TBD"]},{"entry":["schemaIDGUID","TBD"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Although this example describes the flexible attribute  with respect to the use of XML, any other data format could be used rather than XML. For example, the attribute - could include a string in ASCII text format, or in a Hypertext Markup Language (HTML) document format, and\/or the like. Significantly, the data type (e.g., \u201cattributeSyntax\u201d) of the flexible attribute is a text string data type. An application using an object instance that includes the flexible attribute can store, for example, an XML string on the flexible attribute property \u201cattributeSyntax\u201d. In this manner, the application can assign any type of information such as declarative conditions, operations, values, operational statuses, and so on, on the flexible attribute .","Accordingly, and in contrast to operational and data providing properties of conventional attributes that cannot be modified without modifying the directory schema, the operational and data providing properties of the flexile attribute  can be changed without requiring the directory schema to be modified. To illustrate this, we now describe an object class  that is designed to utilize the flexible attribute class .","An Exemplary Flexible Structural Content Class","The class schema content class  includes object class definitions for objects . There can be any number of content classes  that are derived from class schema . Flexible content class  is derived from class schema  and includes the flexible attribute . Any class that is derived from the extensible content class will inherit the flexible attribute.","An application using an object instance of a content class  can put, for example, an XML string on the flexible attribute . Thus, the application can assign any type of information such as data value, declarative conditions, operations, operational statuses, and\/or the like, on the flexible attribute . This ability for an application to modify the operational and\/or data providing nature of a directory object that includes the flexible attribute is accomplished without needing to modify the directory schema to create new structural object classes or attributes to include these various data and\/or operational characteristics.","Accordingly, the described subject matter takes a new and more flexible approach to \u201cextending\u201d the capability of content classes that are defined in a directory schema. This is a substantial benefit over the inflexible structural content classes and attributes of conventional directory schemas.","An Exemplary Procedure to Extend a Schema",{"@attributes":{"id":"p-0053","num":"0070"},"figref":"FIG. 5","b":["500","510","422"]},"At block , the procedure assigns a first data string (e.g., XML) to a flexible attribute  in the first flexible object instance (block ), the first data string defines any combination of a first operational and a data providing nature of the first object instance. Specifically, an application that has instantiated or that is using the first object instance knows of the first object instance's interface and how to unpack and use the first data string.","At block , independent of any modification to the directory schema , the procedure generates a second object instance of the same content class  that was used to create the first object instance (block ). At block , the procedure puts a second data string onto the second object instance. The second data string defines a second operational and\/or data providing nature of the second object instance. The first and second operational and\/or data providing natures do not need to be the same. Indeed, they can be completely different in all respects other than that they are represented in a text string. The application using the second object instance knows of the second object instance's interface and how to unpack and use the second data string.","For instance, consider that an application can assign the flexible attribute in the first instantiated object to have any combination of one or more data types (e.g., integer, real, string, floating, character, and so on), or operational properties (e.g., an operation can be defined to do just about anything imaginable such as to send an e-mail message, to report statistics, to manage a rocket launch, and so on). Whereas the flexible attribute in the second instance of the object can be assigned completely different properties that are independent of any characteristics of the data types or operations that correspond to the flexible attribute of the first instance of the object.","In yet another example, consider the following XML string shown in Table 2.",{"@attributes":{"id":"p-0058","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE OF A FIRST STRING TO BE APPLIED TO A"},{"entry":"FIRST INSTANCE OF THE FLEXIBLE OBJECT"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<data>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<dataType>integer<\/dataType>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<value>2<\/value>"]},{"entry":[{},"<name>integerValue<\/name>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<DataType>Real<\/DataType>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<value>512.6<\/value>"]},{"entry":[{},"<name>realValue<\/name>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<dataType>integer<\/datatype>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<name>result<\/name>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/data>"]},{"entry":[{},"<operation>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<integerVal + abs(realValue) = result>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/operation>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An application can assign the string of Table 2 to a flexible attribute  of type string in a first instance of a flexible object . In this case, the string of Table 2 provides both data and operational properties to the flexible attribute. Specifically: (a) an integer variable \u201cintegervalue\u201d is defined with a value of two (2); (b) a real variable \u201crealValue\u201d is defined with a value of 512.6; and (c) an addition operation that adds integerValue to the absolute (\u201cabs\u201d) value of realValue is defined. Thus, the XML string of Table 1 provides specific data and operations to the first instance of the object.","Now consider the following XML string of Table 3.",{"@attributes":{"id":"p-0061","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE OF A SECOND STRING TO BE APPLIED TO A"},{"entry":"SECOND INSTANCE OF THE FLEXIBLE OBJECT"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<application>www.somedestination.org\/"]},{"entry":[{},"applicationname.exe<\/application>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Independent of any modification to the directory schema, the application can assign the string of Table 3 to a flexible attribute  of type string in a second instance of a flexible object . In this case, the string of Table provides data. Specifically, the string identifies a Universal Resource Location (URL) of a computer program application.","In contrast to conventional schemas (wherein once an attribute is assigned a particular data type, only data of that predetermined data type can be represented by that attribute), a flexible attribute  can take on multiple values (e.g., integers, real numbers, operations, and so on) independent of the attributes  actual data type. Specifically, as the previous examples show, the described arrangements and procedures accomplish this independent of modifications to the directory schema to create corresponding content classes.","This multi-valued aspect of a single attribute of multiple object instances of the same base content class in a directory schema, allows a directory schema to be \u201cversioning aware\u201d. Specifically, this is because application providers can upgrade and provide new products that utilize flexible attributes  without extending the directory schema. This allows third parties to provide products and product upgrades without extending directory schemas to take into consideration the specific needs of the products and product upgrades. Accordingly, a directory that is based on a directory schema  comprising object classes  with flexible attributes  is a \u201cversioning aware\u201d directory.","For example, consider the first XML string or document \u201c<a>Data<\/a>\u201d. A first version of a product understands and extracts this first string. A third party or user can simply extend the first document to support additional product versions or a new product by appending new data to the original data. For example, the following information: \u201c<b>Data2<\/b>\u201d can be appended to the first document to obtain the following: \u201c<a>Data<\/a><b>Data2<\/b>\u201d. In this case, the original data format of the first string is maintained and the first product versions (e.g., legacy applications) are able to continue operations using the original data format. New applications or product upgrades that are aware of new data (e.g., \u201c<b>\u201d) can obtain the new data from the document.","Accordingly, while extending the data characteristics and\/or operational functionalities of various object instances of a same directory schema base content class, the described arrangements and procedures completely avoid schema bloat as well as the complex and serious consequences of procedures to extend and replicate a directory schema because the directory schema is not modified.","An Exemplary Workflow Enabled Directory Schema",{"@attributes":{"id":"p-0067","num":"0084"},"figref":"FIG. 6","b":["600","612","620","600","410","412","414","600"]},"All directory schema  structural objects (other than \u201ctop\u201d) inherit properties from class schema class . For instance, provisioning structural content classes  derive from flexible base content class  and class schema . These novel classes  are used to execute and manage provisioning in a distributed computing environment based on the dynamic detection of state changes in directory objects. These provisioning content classes are described in greater detail below in reference to .","Structural content classes can only include attributes (with the exception of \u201ctop\u201d ) that are defined by attribute schema class  or by classes derived from the attribute schema class. The attribute schema base content class  includes a number of properties . This attribute base content class  and these properties  have been described in detail above. Any attributed classes  derived from the attribute schema base content class  inherit these properties . For instance, provisioning attributes  derive from flexible attribute base content class , which in turn derives from the base attribute schema content class .","Provisioning Attribute Classes ","The provisioning attribute content classes  include the provisioning status attribute , the provisioning XML status attribute , the provisioning configuration attribute , the provisioning configuration private attribute , the provisioning status binary attribute , the provisioning link attribute , and the provisioning back link attribute . Provisioning attribute  content class characteristics allow declarative conditions, operations, operational statuses, and so on, to be stored on object instances at any time to obtain various different behaviors and data types according to an application's needs. Thus, individuals can store various data type information onto a provisioning object instances (i.e., object instances provisioning classes ) which include a flexible attribute. Although we show each of these attributes  as being derived from the flexible attribute, not all need to be. For instance, one or more of these provisioning attribute content classes may not be derived from the flexible attribute .","An instance of the provisioning status attribute  stores the status information that corresponds to a workflow object  of . This storage is optional because there may be a policy about retaining this information (e.g., the information may not be retained because of a data storage issue). This status information is stored in an internal structure that contains the current execution status of the provisioning rules associated with this entry. The provisioning status attribute  is not indexed, replicated or included in a global catalog, and is only stored on the domain controller that the directory service instance is running on.","For example, an object instance that includes the provisioning status attribute is an XML document that includes the status of a provisioning policy for an entry in a directory. Although this example and some of the following examples describe the use of XML, any other document format could be used as well as than XML. For example, an instance object that includes the provisioning status attribute could store a document in ASCII text format, the Hypertext Markup Language (HTML) document format, and\/or the like, on the attribute.","The Provisioning-Status XML attribute  is one or more documents that store workflow based status information. This information is represented in a text string such as an XML representation of the status of a workflow, and will be stored on structural object instances of class provisioning status  of . This attribute is not indexed, replicated or included in the global catalog. It is only stored on the domain controller that the directory service instance is running on.","An instance of the provisioning configuration attribute  content class stores one or more provisioning policies, or rules in a document data format such as in an XML data format. An instance of the provisioning configuration attribute  stores the provisioning policies as a document such as an XML document. This attribute is not indexed, replicated or included in the global catalog. It is only stored on the domain controller that the MMS service instance is running on.","An instance of the provisioning configuration private attribute  content class provides an option to store private provisioning status information. In this implementation, the information is encrypted and only accessible by administrators by default. This attribute is not indexed, replicated or included in the global catalog, and is only stored on the domain controller that the directory service instance is running on.","The provisioning status binary attribute  is an octet string that stores a summary of status of executing workflows in the directory. This information is stored in an internal structure and consists of the object's globally unique ID (GUID) of the workflow, the GUID of the workflow step, and the status of the associated task. Whenever a new workflow object  of  is assigned to a provisioning status object , the information is added to the attribute and modified according responsive to changes in status. This attribute is not indexed, replicated or included in the global catalog.","An instance of the provisioning link attribute  resides on a metadirectory object and indicates or references instances of the provisioning status structural content class  of , which is described in greater detail below. The provisioning link is a single-valued domain name (DN) that points to the associated entry in a directory partition that is being used to track the status of workflow (i.e., that is being used to store instances of the provisioning objects  through ). An instance of the provisioning service structural class  of  writes this value to each user, group or organizational unit (OU) under the control of directory enabled workflow. In this manner, the attribute provides a backlink to automatically maintain inter-object relationships in the directory.","The provisioning link attribute  is not indexed, replicated or included in the global catalog. It is only stored on the domain controller that the directory service instance is running on.","The provisioning backlink attribute  resides in the status object and provides a backlink that helps track an object that a provisioning agent  of has performed work on (e.g., executing one or more operations that corresponds to of a workflow object). The provisioning agent writes this value to each user, group or organizational unit (OU) under the control of directory enabled workflow. This attribute is not indexed, replicated or included in the global catalog. It is stored on the domain controller that the directory service instance is running on.","The Class Schema Structural Object Class",{"@attributes":{"id":"p-0080","num":"0097"},"figref":["FIG. 7","FIG. 6"],"b":["614","612","710","712","714","716","718","720"]},"Instance objects that correspond to these provisioning classes  can be stored in a domain-naming context (DNC) or in an application-naming context (ANC). However, in this implementation the provisioning instance objects are stored in a directory partition such as the ANC that is not necessarily, but rather optionally replicated to other domain controllers in a forest. Instances of workflow objects  and provisioning status objects  are stored in a connector space in a directory partition such as the ANC.","We now describe exemplary aspects and attributes of these classes.","The workflow structural class  is used to store data format representations (e.g., XML representations) of workflows in a connector space such as the described ANC space. An instance of the workflow class  indicates a sequence of actions that correspond to a workflow. A workflow's sequences of actions are implemented and persisted within a system (i.e., a system  of  by a corresponding workflow process  that is based on class ).","Table 4 illustrates an example of a workflow. In this implementation, a workflow is represented using XML.",{"@attributes":{"id":"p-0085","num":"0102"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE OF A WORKFLOW REPRESENTATION"},{"entry":"WITH A PRECEDENCE CONSTRAINT"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d?>"]},{"entry":[{},"<Workflow>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<WorkflowStep name=\u201cNotifyStart\u201d ID=\u201c1\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<task type=\u201cprocess\u201d> . . . <\/task>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/WorkflowStep>"]},{"entry":[{},"<WorkflowStep name=\u201cIWorkflow1\u201d ID=\u201c2\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<task type=\u201cCOM\u201d> . . . <\/task>"]},{"entry":[{},"<PrecedenceConstraints>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<constraint ID=\u201c1\u201d type=\u201csuccess\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/PrecedenceConstraints>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/WorkflowStep>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Workflow>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The elements that comprise the workflow of Table 4 include a series of steps (\u201cWorkflowStep\u201d) that identify two tasks, the \u201cNotifyStart\u201d task and the \u201cIworkflow1\u201d task. The \u201cNotifyStart\u201d task has a \u201ctask type\u201d that is a \u201cprocess\u201d. The \u201cIWorkflow1\u201d task has a task type\u201d that is a COM-based task. The workflow indicates that the \u201cIworkflow1\u201d task has a precedence constraint (\u201cPrecedenceConstraints\u201d) that requires the \u201cNotifyStart\u201d task to return with a status of \u201csuccess\u201d before the workflow will invoke the \u201cIWorkflow1\u201d task. This provides for the representation of any arbitrary sequence of steps in a workflow as a directed a-cyclic graph-any complex series of task based relationships, task status enumerations, and the like, can be represented. Such relationships include, for example, a task finish-start relationship, a parallel task execution relationship, simple and complex precedence constraint relationships, task priority relationships, and the like. Precedence or scheduling constraints are based on provisioning task success, failure, and completion determinations.","A workflow schema (i.e., the workflow schema  of ) enforces the semantics of a workflow indicated by an instance of the workflow class .","Traditional techniques to implement a workflow typically require a workflow to schedule a \u201cconstrained\u201d and\/or \u201cprioritized\u201d task by looking forward to determine whether such constraints\/priorities have been met. This means that a traditional workflow typically looks forward to analyze task constraint\/priority relationships to determine if tasks should be executed. This is a problem because the complexity of a workflow increases at a rate that is substantially proportional to a square-root of the number of tasks that the workflow is coordinating.","In contrast to a traditional workflow implementations that typically require a workflow task to manage a constrained and\/or prioritized task(s) by looking forward to determine the status of a condition, a workflow object  represents semantics of task precedence constraints and\/or priorities by looking backwards, rather than looking forward. A task looks backward to determine if any constraints, conditions, priorities, and so on, have been satisfied prior to implementing its portion of the workflow. This substantially simplifies the complexity of representing, determining, and implementing task precedence\/priority relationships. For example, task D looks back at task C to determine of C completed successfully before task D executes.","Moreover, a workflow object  provides for the representation of a substantial range of workflow task types and information. For example, a task can be a process, a Component Object Model (COM) object, identified with a Universal Resource Locator (URL), a Simple Object Access Protocol (SOAP) object, a message queue, an Microsoft Transaction Server\u00ae (MTS) transaction, and so on. (COM is a well-known binary code developed by Microsoft Corporation of Redmond, Wash. (SOAP is a well-known protocol that provides a way for applications to communicate with each other over the Internet, independent of platform).","A provisioning status structural class  instance tracks statuses of long-running workflows that may be executing on any number of different computers. This tracking is done from a centralized location in a distributed directory. To track workflow statuses, the object  may contain instances of the described provisioning link attribute  of , the provisioning status attribute , and\/or the provisioning status binary attribute . These attributes allow a provisioning status structural object to store information such as XML and binary representations of workflow statuses.","An instance of the provisioning status object  is generated and used by an instance of the provisioning service\/agent class  (see also, the provisioning service  of ) to monitor a workflow's status, and to reflect the current and past conditions within a directory that are attributed to the workflow (e.g., as any directory resources affected by the workflow). The properties of this class indicate the sequences of actions that makeup a workflow along with status information that corresponds to the sequences. Detailed examples of how the provisioning service uses one or more provisioning status objects to track workflow are provided below in reference to .","An instance object of the provisioning service history structural class  is used by an instance object of the provisioning service\/agent class  (see also, the provisioning service  of ) to store the history of provisioning policies for an organization. This class does not contain any security principal attributes.","In one implementation, an object instance of the provisioning service history class  is stored in a container of a specified directory partition in the directory such as a container named \u201cProvisioning Agent History\u201d.","Such organizational provisioning history status can be used by a data transformation service to record the history of package execution and data transformations (i.e., data lineage) for in the status information.","An instance of the service connection point structural class  represents an instance of a service object running on one or more computers on a network. (A service object is a program, routine, or process that performs a specific system function to support other programs). The class  provides for a service object to explicitly publish itself in a directory such as Active Directory\u00ae, thereby facilitating service-centric administration and usage.","The provisioning service\/agent class  inherits from the connection point class . An instance object of the service\/agent class  is a service object that executes on one or more computers on a network. Specifically, the provisioning service is a program module that coordinates and tracks workflow\/provisioning policies in a distributed computing environment using directory-base technology.","To accomplish this, the service  monitors directory-based events as well as other events across the network and maps the detected events to defined workflows. An enumerated list of directory-based events is substantial because it includes all events that are propagated by a modification not only to the directory schema, but also to any objects or attributes defined by the directory schema. For example, directory-based events include creating a new directory object, deleting a directory object, renaming a directory object, synchronizing a directory object with an offline directory object, replicating a directory schema, and\/or the like. (Detailed examples of how the provisioning service uses one or more provisioning status objects to track workflow are provided below in reference to ).","The provisioning service also keeps track of all the attributes and locations of shared provisioning objects (i.e., instances of provisioning content classes  through ) across the distributed computing environment through its directory-based integrated view of resource identity.","The service\/agent  explicitly publishes itself in a directory (via a corresponding connection point object ) such as Active Directory\u00ae to facilitate service-centric administration of workflows in an organization.","A user that wants to communicate with an object instance of the provisioning service  may interrogate the \u201cexplicitly published\u201d provisioning service using namespace syntax (e.g., \u201c\/\/workstation\/provisioning agent\u201d). Or, the provisioning service  may provides an abstraction layer (e.g., a dynamic-link library (DLL)) to hide the particular service location details within the distributed computing environment from client applications. The abstraction could query the directory service for a connection point object  representing the provisioning service\/agent and use the binding information from that object to connect the client application to the provisioning service.","The Event-Association structural class  is used to map declarative workflow conditions to particular instances of workflow objects . These provisioning-rule objects are stored in a container named after a provisioning service in the domain partition.","An instance object of the event association class  indicates an XML representation of directory events and maps them to already defined (although not necessarily instantiated) workflow (i.e., see workflow objects  of ) based on a set of categorization rules that indicate declarative conditions (the categorization rules map an event to a particular workflow). A second property of the event association attribute indicates a distinguished name (DN) of the particular workflow that is associated to the detected event. The DN also identifies the workflow object's location in a directory tree of a distributed directory.","An event association object's  declarative conditions are based on a type of event (e.g., an add event, a delete event, a rename event, and the like), a scope of the event (what portion of the directory tree the event occurred in), any filtering criteria (such as the structural content classes  through  of  or attribute values that are pertinent to the event), and the like.","To illustrate such event categorization rules, consider the following example, wherein an XML script is used to determine if a detected event (a directory-based event or otherwise) maps to a defined workflow (i.e., an instantiated workflow object ) is shown in Table 5.",{"@attributes":{"id":"p-0106","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE OF EVENT EVALUATION TO DETERMINE"},{"entry":"A DEFINED WORKFLOW"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d?>"]},{"entry":[{},"<!-- Fire if: it is an ADD event and the objectClass is PERSON"]},{"entry":[{},"AND the title attribute is EITHER PROGRAM MANAGER OR"]},{"entry":[{},"PRODUCT MANAGER-->"]},{"entry":[{},"<eventAssociationDoc>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<expression>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<logicalop optype=\u201cand\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<event>add<\/event>"]},{"entry":[{},"<objectClass>person<\/objectClass>"]},{"entry":[{},"<logicalop optype=\u201cor\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<attrConstraint name=\u201ctitle\u201d comparator="]},{"entry":[{},"\u201cequals\u201d>Program Manager"]},{"entry":[{},"<\/attrConstraint>"]},{"entry":[{},"<attrConstraint name=\u201ctitle\u201d comparator="]},{"entry":[{},"\u201cequals\u201d>Product Manager"]},{"entry":[{},"<\/attrConstraint>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/logicalop>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/logicalop>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/expression>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/eventAssociationDoc>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The script's declarative conditions first identify the detected event's type to determine if it is an \u201cadd\u201d event. (The scope of the event (the portion of the directory tree the event occurred in and which directory objects are\/were effected by the event) is provided by the directory service  of ). If the event is an \u201cadd\u201d event, the script determines whether an object associated with the add event has a corresponding content class of \u201cperson\u201d. If so, the script determine if the object having a class of person has a corresponding \u201ctitle\u201d attribute of either \u201cprogram manager\u201d or \u201cproduct manager\u201d.","In this example, if these declarative conditions are met, then a corresponding workflow (indicated by the workflow indication attribute) is executed. (The workflow structural content class  and workflow semantics are described above (see, also the workflow schema  and workflow processes  of ).","The semantics of an event association object's declarative conditions (e.g., the conditions shown in Table 5) are enforced by a schema such as an event association schema  of , which is based on the World Wide Web Consortium (\u201cW3C\u201d) schema standard.","In yet another example of an event association object's  corresponding event categorization rules, consider the XML script shown in Table 6, which determines if a detected \u201cdirectory modification\u201d event maps to a defined workflow object .",{"@attributes":{"id":"p-0111","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE OF EVENT EVALUATION TO DETERMINE IF A"},{"entry":"PARTICULAR WORKFLOW IS TO BE IMPLEMENTED"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d?>"]},{"entry":[{},"<!-- Fire if:"]},{"entry":[{},"it is a MODIFY event and"]},{"entry":[{},"the employeeType attribute is REGULAR FULL TIME"]},{"entry":[{},"AND the startDate attribute is less than July 6, 1998"]},{"entry":[{},"-->"]},{"entry":[{},"<eventAssociationDoc>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<expression>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<logicalop optype=\u201cand\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<event>modify<\/event>"]},{"entry":[{},"<attrConstraint name=\u201cemployeeType\u201d"]},{"entry":[{},"comparator=\u201cequals\u201d>Regular Full Time"]},{"entry":[{},"<\/attrConstraint>"]},{"entry":[{},"<attrConstraint name=\u201cstartDate\u201d"]},{"entry":[{},"comparator=\u201c1t\u201d>1998-07-01<\/attrConstraint>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/logicalop>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/expression>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/eventAssociationDoc>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The declarative conditions shown in Table 6 first identify the detected event's type to determine if it is a \u201cmodify\u201d event. If so, the script determines whether an object that corresponds to the modify event has an employee type attribute (\u201cemployeeType\u201d) indicating a regular, full time employee status (\u201cRegular Full Time\u201d). If so, the script determines if the object has an attribute that indicates a hire, or start date (\u201cstartDate\u201d) before a predetermined starting date (i.e., \u201c1997-08-01\u201d). In this example, if these declarative conditions are met, then a corresponding workflow identified by an associated workflow attribute (not shown) of the event association object is executed.","In this implementation, an event association's  declarative conditions are represented in XML and stored in a directory partition that is optionally replicated to other domain controllers. In yet another implementation, event association objects are represented as special structures in memory such as random access memory (RAM) for system performance reasons.","An Exemplary System",{"@attributes":{"id":"p-0114","num":"0131"},"figref":"FIG. 8","b":"800"},"For example, in response to detected changes in a directory infrastructure, the system  automatically executes workflow tasks based on any precedence constraints and\/or priorities between workflow tasks, provides workflow task status, identifies resources affected by a workflow, and\/or provides for automatic implementation of corrective action in response to a workflow task failure. Thus, the system dramatically simplifies procedures to provision machines and resources such as user accounts, software configuration and updates, resource allocation, and the like.","Additionally, the system  executes a workflow until the convergence of a desired state of a number of objects in the directory is achieved (e.g., with respect to a group of directory objects representing tangible and intangible objects). For instance, each task in the workflow has one or more operations to implement. Upon failure of any operation, the task may retry the operation until the desired state is achieved.","To accomplish this, the system  includes a provisioning computer , which is turn is a domain controller for managing user access to distributed directory resources. The provisioning server streamlines internal organizational processes by distributing a workflow between other servers  and expediting computing processes by harnessing the power of the other servers. The provisioning server  is operatively coupled over a network  to the other servers  and one or more databases . One or more of the other servers  are also respective domain controllers for managing user access to directory resources.","In one implementation, the provisioning server  is operatively coupled to the network through one or more server appliances (not shown) located on the extreme outside of a server farm  such as a Web server farm, a corporate portal, or the like.","The provisioning server  includes a processor coupled to a memory. (Exemplary aspects of the processor and memory are described in greater detail in reference to processing unit  and system memory  in reference to ). The processor is configured to fetch execute computer-executable instructions from application programs  and configured to fetch data from program data . The application programs include a directory service , a provisioning service , and other applications  such as an operating system and text string editing application (e.g., an XML editor).","The directory service  stores information about objects such as computers and resources on a network  and makes this information available to users and network administrators in a directory that ties disparate databases , or \u201cdirectories\u201d of data together into a single, logical directory, or \u201cmetadirectory\u201d. The only objects that can be represented in the distributed directory are those that meet the content class qualifications specified by the directory schema . Such databases  or directories include, for example, directories of enterprise users, resources, financial information, corporate e-mail systems, network operating systems, and the like. A database is an object-oriented database such as an XML database, a Hypertext Markup Language (HTML) database, an SQL server database, and so on.","The provisioning service  is an instance object of the provisioning service  class of . The provisioning service interacts with the directory service  to coordinate and manage workflows based on an integrated view of directory resource identity. One aspect of the directory service\/provisioning service interaction is the respective propagation (i.e., the directory service) and corresponding receipt (i.e., the provisioning service) of directory-based events that correspond to directory object status changes. (An exemplary procedure  performed by the provisioning service is described in greater detail below in reference to ).","The provisioning service instantiates one or more workflow objects (based on content class ), provisioning status objects (based on content class ), service history objects (based on content class ), provisioning service class objects (based on content class ) based on a state change to an object in the directory. To monitor or detect directory-based events, the provisioning service  of  can be a Win32 service that monitors Lightweight Data Access Protocol (LDAP) directory synchronization (\u201cDirsync\u201d) control associated with an Active Directory\u00ae naming context to detect directory based events. (Win32 is a well-known WINDOWS\u00ae application programming interface (API). Techniques to interface with the LDAP directory synchronization control are well-known in the art of computer programming.)","Program data  includes the provisioning enabled directory schema , one or more workflow documents , a workflow schema , one or more event association documents , an event association schema , and one or more status monitoring documents  (for recording workflow status).","The particular workflows  to execute is\/are determined by mapping the status change to one or more workflows using event association objects (based on content class ) stored in the directory. Respective logic of the event association objects are represented by event association documents , the semantics of which are regulated by the event association schema . An event evaluation object indicates a set of declarative conditions that categorize\/map a detected event to a defined workflow object . The declarative conditions are based on a type of event (e.g., an add event, a delete event, a rename event, and the like), a scope of the event (what portion of the directory tree the event occurred in), any filtering criteria (such as the structural content classes  through  of  or attribute values that are pertinent to the event), and\/or the like.","An administrator defines the event\/workflow mapping  as a text string such as an XML string. (See, for example, the XML event evaluation strings of Tables 2 and 3). Such a text string is \u201cassigned to\u201d a particular event evaluation object instance, which in turn is represented in the directory as an object\/resource. Any number of various event evaluation objects can be defined and persisted in the directory. The semantics of event evaluation (e.g., such as the semantics expressed in Tables 2 and 3) are based on the event evaluation schema , which defines a number of allowable declarative conditions and\/or sequences that can be used to determine if an event maps to a particular workflow. Thus, the event evaluation schema is used as part of event evaluation text string validation that determines if a defined event evaluation includes pre-defined elements\/tags.","The sequences of tasks and information corresponding to the mapped workflows are represented by workflow documents . A workflow object indicates a set of declarative conditions and\/or sequence of actions that correspond to the identified workflow. An administrator defines the conditions and\/or sequences of actions that correspond to a workflow. As discussed, this workflow definition is a text string such as an XML string. (See, for example, the XML workflow string of Table 4). This text string is \u201cassigned to\u201d a particular workflow object instance, which is a directory object\/resource. Any number of various workflow definitions can be defined and persisted in the directory.","The semantics of a workflow are based on the workflow schema , which defines a number of allowable declarative conditions and\/or sequences that can be defined in a workflow string that is put on a corresponding workflow object . Thus, the workflow schema is used as part of workflow validation that determines if a defined workflow includes pre-defined elements\/tags.","Once a particular workflow has been mapped to the directory object's status change, an object instance of the workflow base content class  can be generated with the corresponding sequence of tasks and data place onto the object's corresponding flexible attribute(s).","A provisioning status monitoring object  is an instance object of the status monitoring structural class  of . An instance of the provisioning status object  is generated and used by the provisioning service\/agent  to monitor a workflow's  status, and to reflect the current and past conditions within a directory that are attributed to the workflow  (e.g., as any directory resources affected by the workflow). The properties of this class indicate the sequences of actions that makeup a workflow along with status information that corresponds to the sequences.","The generation of provisioning status objects, service history objects, and so on, is policy based.","The system  provides a mechanism to converge the results of a sequence of tasks that define a workflow to obtain a desired directory state. Specifically, the provisioning agent  identifies each workflow that executes and the identity of the directory resource(s) that have been affected by a workflow. Additionally, any conditional aspects of a workflow that may depend on any un-implemented aspects of the workflow can be satisfied because if a computer or other resource used in workflow execution is not available (e.g., malfunctions, is taken off-line, etc.), the provisioning agent  records the unavailability and non-occurrence of the corresponding workflow operation(s) in the associated workflow status monitoring object . The provisioning service  can continuously retry failed or otherwise incomplete tasks of a workflow. If an unavailable resource becomes again available (e.g., back on-line) after its unavailability, the appropriate declarative conditions and operational sequences defined on the workflow object can ensure that the previously failed operation completes.","In light of this, the described provisioning system  provides a substantial level of self-correcting behavior while implementing organizational policies. This is especially important to consider in a distributed computing environment, wherein more than one computer, and possibly dozens, hundreds, or even thousands of computers may be involved in executing any one operation of the workflow.","Exemplary Procedure to Coordinate and Manage Provisioning",{"@attributes":{"id":"p-0133","num":"0150"},"figref":["FIG. 9","FIG. 7","FIG. 7"],"b":["910","826","710","912","828","720"]},"At block , the procedure, receives an event that corresponds to a status change of a directory object. Specifically, the provisioning service  interacts with the directory service  to monitor events that occur in the directory such as events that occur in any one of a number of different naming contexts (e.g., a DNC, an ANC, and\/or the like) in a metadirectory. Such events include directory-based events such as the addition, modification, deletion, or renaming of a directory object. The provisioning service also detects events other than directory-based events such as time-based events, user actions (e.g., clicking a mouse button or pressing a key), system occurrences (e.g., running out of memory), and the like. Accordingly, the types of events monitored by the provisioning service are customizable and extensible.","Responsive to receiving the event, at block , the procedure evaluates the event to map it to a workflow. To accomplish this, the provisioning service (or \u201cprovisioning agent\u201d)  categorizes the event to determine if there is an associated workflow that needs to be executed in response to the event. At block , the procedure determines if the event corresponds to a defined workflow based on the evaluation of block . If so, at block , the procedure determines if an instance of the workflow object based on the scope of the event (i.e., those directory resources affected or that will be affected by the event) is already implemented. If an instance of the workflow based on the scope of the event has already been instantiated (block ), the procedure continues at block .","Otherwise, at block , the procedure  having determined that an instance of the workflow  based on the scope of the event has not yet been instantiated (block ), generates an instance of the workflow object and places the identified workflow  onto the flexible attribute of the object. And, at block , the procedure optionally generates a corresponding provisioning status monitoring object  of  to monitor the status of the newly instantiated workflow (block ). The procedure continues at block  of .",{"@attributes":{"id":"p-0137","num":"0154"},"figref":["FIG. 10","FIG. 9","FIG. 9","FIG. 9"],"b":["1010","920","922","924","914"]},"At block , the procedure receives a second event. This second event corresponds to the provisioning agent's update of the provisioning status monitoring object (block ). At block , the procedure re-evaluates sequence of operations and\/or declarative conditions that make-up the workflow to determine the next step of the workflow to implement. In this manner, the provisioning service dynamically executes a workflow in response to directory events and coordinates and manages the provisioning process.","Exemplary Computing Environment",{"@attributes":{"id":"p-0139","num":"0156"},"figref":"FIG. 11","b":["1120","1160","462","1158","1120","1120","1120"]},"The exemplary provisioning service is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with an exemplary provisioning service include, but are not limited to, personal computers, server computers, thin clients, thick clients, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments such as server farms and corporate intranets, and the like, that include any of the above systems or devices.","An exemplary provisioning service may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc., that performs particular tasks or implement particular abstract data types. An exemplary provisioning service may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","As shown in , the computing environment  includes a general-purpose computing device in the form of a computer . Computer  is a suitable device for the implementation of the provisioning computer  of . The components of computer  may include, by are not limited to, one or more processors or processing units , a system memory , and a bus  that couples various system components including the system memory  to the processor .","Bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Such media may be any available media that is accessible by computer , and it includes both volatile and non-volatile media, removable and non-removable media. In , the system memory includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and\/or non-volatile memory, such as read only memory (ROM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently be operated on by processor .","Computer  may further include other removable\/non-removable, volatile\/non-volatile computer storage media. By way of example only,  illustrates a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown and typically called a \u201chard drive\u201d), a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disk drive  for reading from or writing to a removable, non-volatile optical disk  such as a CD-ROM, DVD-ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are each connected to bus  by one or more interfaces .","The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions (e.g., the application programs  of ), data structures, program modules, and other data (e.g., the program data  of ) for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including, by way of example, and not limitation, an operating system , one or more application programs , other program modules  (e.g., a directory service  and a provisioning service agent ), and program data  (e.g., a provisioning enabled directory schema , a workflow document , a workflow schema , an event association document , an event association schema , and a status monitoring document ).","Each of such operating system , one or more application programs , other program modules , and program data  (or some combination thereof) may include an embodiment of an exemplary provisioning service. More specifically, each may include an embodiment of a provisioning service , and a directory schema  that includes a plurality of provisioning objects for managing a workflow instantiated by the provisioning service. The provisioning service includes a number of services such as an event association service, a workflow process, a workflow status-monitoring process, and the like. The provisioning objects in the directory schema include event association objects, workflow objects, status-monitoring objects, and the like.","A user may enter commands and information into computer  through input devices such as keyboard  and pointing device  (such as a \u201cmouse\u201d). Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, or the like. These and other input devices are connected to the processing unit  through a user input interface  that is coupled to bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","A monitor  or other type of display device is also connected to bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers, which may be connected through output peripheral interface .","Computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . Remote computer  may include many or all of the elements and features described herein relative to computer . Logical connections include a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, the computer  is connected to LAN  via network interface or adapter . When used in a WAN networking environment, the computer typically includes a modem  or other means for establishing communications over the WAN . The modem , which may be internal or external, may be connected to the system bus  via the user input interface  or other appropriate mechanism.","Depicted in , is a specific implementation of a WAN via the Internet. Computer  typically includes a modem  or other means for establishing communications over the Internet . Modem , which may be internal or external, is connected to bus  via interface .","In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in a remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on a memory device of remote computer . It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used.","Computer-Executable Instructions","An implementation of an exemplary provisioning service may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available media that can be accessed by a computer. By way of example, and not limitation, computer readable media may comprise \u201ccomputer storage media\u201d and \u201ccommunications media.\u201d","\u201cComputer storage media\u201d include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computer.","\u201cCommunication media\u201d typically embodies computer readable instructions, data structures, program modules, or other data in a modulated data is signal, such as carrier wave or other transport mechanism. Communication media also includes any information delivery media.","The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.","CONCLUSION","Although the provisioning service based on directory technology has been described in language specific to structural features and\/or methodological steps, it is to be understood that the provisioning service based on directory technology defined in the appended claims is not necessarily limited to the specific features or steps described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed present invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
