---
title: Media protection notification for serial interface mass storage devices
abstract: One embodiment of the present invention sets forth a technique for reducing the latency associated with media protection notification for serial interface mass storage devices, such as serial AT attachment (SATA) hard disk drives. A new link layer primitive, referred to as hold-emergency (HOLDE), incorporates the flow-control behavior of the existing HOLD command, with the additional new action of notifying the hard disk drive to take emergency steps to prepare for impact. The HOLDE link layer primitive operates in conjunction with the existing hold-acknowledge (HOLDA) primitive and is semantically similar to the existing HOLD primitive. The HOLDE mechanism is preferably implemented directly in hardware in the SATA link layer state machines within the host and the hard disk drive.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07752351&OS=07752351&RS=07752351
owner: NVIDIA Corporation
number: 07752351
owner_city: Santa Clara
owner_country: US
publication_date: 20061215
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application claims the priority benefit of United States provisional patent application titled \u201cMEDIA PROTECTION NOTIFICATION FOR SERIAL INTERFACE MASS STORAGE DEVICES,\u201d having U.S. provisional application No. 60\/822,632, and filed Aug. 16, 2006.","1. Field of the Invention","Embodiments of the present invention relate generally to mass storage systems and, more specifically, to media protection notification for serial interface mass storage devices.","2. Description of the Related Art","Modern computer systems commonly include a mass storage device, such as a hard disk drive, that is used to store operating system images, application programs and user data. Hard disk drives are electromechanical devices that include one or more disk-shaped platters used to store data in concentric tracks on a magnetically readable and writeable surface. Each hard disk drive typically has an actuator that positions a set of one or more read\/write heads above a selected track. The spinning motion of the disk allows the read\/write head to access any data stored on the selected track by \u201cflying\u201d above the track until the desired data passes under the read\/write head. In normal use, the read\/write head is continually positioned above the platter, providing constant read\/write access to the data stored thereon. However, if the hard disk drive is subjected to a mechanical shock (a \u201chigh-g\u201d event) while the read\/write head is positioned above the spinning platter, damage may occur to the hard disk drive. Such damage may range in severity from minor surface damage and localized loss of data through a catastrophic head failure that renders the hard disk drive inoperable. Hard disk drives that are used within mobile computing devices, such as laptop computers and personal digital assistants (PDAs), are especially prone to mechanical shock damage from high-g events because the whole mobile computing device spends a great deal of time being carried about, which places the entire device at risk.","Fortunately, hard disk drives are significantly less susceptible to damage when the read\/write head is safely positioned away from the spinning platter in a state referred to as \u201cparked.\u201d In order to exploit a more robust parked state, the hard disk drive needs to be able to transition from an active state to the parked state before an impact occurs. AT attachment (ATA) hard disk drives include a transport layer command, referred to as \u201cIDLE IMMEDIATE,\u201d that attempts to idle the hard disk drive as quickly as possible when a high-g event occurs. The hope in using the IDLE IMMEDIATE command is that hard disk drive may be able to park the read\/write heads before impact. The IDLE IMMEDIATE command parks the read\/write heads and aborts any ATA commands that are in progress.","Current generation ATA drives use a serial link interface, referred to as serial ATA (SATA). The SATA interface uses two high-speed serial links to communicate with a host controller. ATA commands are encapsulated within sequential frames of serial data that are transmitted over the first of the two serial links. The second serial link carries data transmitted from the hard disk drive back to the host controller. The SATA standard uses a well-known physical link layer protocol, known as \u201c8b\/10b\u201d that encodes eight bits of payload using ten bits of transmitted code. Thus, a SATA hard disk drive may receive a transport layer IDLE IMMEDIATE command over the first serial link and respond by parking the read\/write heads and aborting any ATA commands that are in progress.","One approach to averting damage from a high-g event involves using a multi-axis accelerometer, such as a three-axis accelerometer, to sense a transition to zero-gravity (free fall) or a transition to high-gravity about an axis (spinning fall) and then to notify management software within the computing device to issue an IDLE IMMEDIATE command to any spinning hard disk drives. For example, when a laptop flips over the edge of a desk, the accelerometer detects a likely high-g event from a spinning fall and the accelerometer generates a notification to management software within the computing device. In response, the management software issues an IDLE IMMEDIATE command to the hard disk drive over the SATA physical link, causing the hard disk drive to abort any pending commands and to park the read\/write heads as soon as possible. If the computing device is falling far enough to allow the accelerometer notification enough time to travel through the notification software path to the SATA host controller and then to the hard disk drive, the hard disk drive may be able to park its read\/write heads in time. After issuing the IDLE IMMEDIATE command, the management software initiates a recovery process whereby aborted commands are discovered and re-issued before processing continues.","One drawback of the current solution is that the IDLE IMMEDIATE command is issued in sequence with other transport layer commands and, therefore, must wait for the current ATA transport layer command to complete before being transmitted to the hard disk drive over the SATA serial link. If the current ATA transport layer command involves transmitting a large block of data, a significant time delay may be introduced between the time software generates the IDLE IMMEDIATE command and when the hard disk drive actually receives the command. Additional delay is introduced in the software path leading from the accelerometer notification to the actual generation of the IDLE IMMEDIATE command. The substantial delay from when the accelerometer senses a possible high-g event to when the hard disk drive is actually able to act on this information through the IDLE IMMEDIATE command decreases the probability that the hard disk drive will be able to remove the read\/write heads in time to avoid data loss. A second drawback of the current solution is the inefficiency and additional processing complexity imposed by aborting ATA commands that are already in progress. While the process of aborting ATA commands typically does not lead to user data loss in a properly functioning system, the process of recovering from aborted ATA commands can be time consuming and represents significant implementation and processing complexity.","As the foregoing illustrates, what is needed in the art is a mechanism to remove the read\/write heads from disk media more quickly and with less processing disruption when the conditions leading to a high-g event are detected.","One embodiment of the present invention sets forth a method for protecting a storage device during a high-gravity event. The method includes the steps of receiving a high-gravity event warning signal, stopping data transmissions to the storage device over a serial data stream in response to the high-gravity event warning signal, transmitting a first HOLDE primitive to the storage device over the serial data stream, and determining whether the high-gravity event is finished.","One advantage of the disclosed method is that by providing emergency impact notification and response at a very low level in the SATA protocol stack (the SATA link layer), extremely low notification latencies are achieved. Consequently, the probability that the hard disk drive can successfully prepare for impact prior to the actual impact is increased. Furthermore, with the impact notification and response mechanism acting within the SATA link layer, software is relieved of the complex and time consuming task of discovering and re-issuing SATA commands that were aborted.","The following discussion should be read in conjunction with the Serial ATA International Organization Serial ATA Revision 2.5 Specification.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","100","110","120","140","160","180","110","110","120","140","160","110","140"]},"The system memory  includes an application program  and software modules that form an operating system . The operating system  includes, without limitation, a file input\/output (I\/O) application programming interface (API) , a file system  and a SATA host driver . The file I\/O API  exposes a set of high-level access methods used by the application program  to access files stored on the hard disk drive . The file system  implements the high-level access methods exposed by the file I\/O API . Many different file systems may coexist within the operating system , however each file system consistently presents the set of access methods to the application program  via the file I\/O API . The SATA host driver  implements the host-side portion of the well-known SATA protocol. The SATA host driver  manages data transfers between system memory  and the hard disk drive  and provides the file system  with a read\/write block device view of the hard disk .","The host controller  includes, without limitation, a host CPU interface  and a SATA host interface . The host CPU interface  bridges communication between the CPU  and the modules within the host controller , such as the SATA host interface . The SATA host interface  includes a SATA host transport controller  and a SATA host link controller . The SATA host transport controller  implements aspects of the well-known SATA host transport protocol related to SATA transport layer protocol processing. The SATA host link controller  implements the well-known SATA link layer functionality and includes extensions to the host link layer state machine, described in greater detail below. The host link controller  includes physical layer functionality for transmitting parallel data in the form of a serial stream to the hard disk drive  and for receiving data that is formatted as a serial stream from the hard disk drive , in accordance with the SATA 2.5 specification.","Outbound parallel data (i.e., data transmitted to the hard disk drive ) is configured in groups of bytes. A group of four bytes (bytes \u201c0\u201d to \u201c3\u201d) is known as a \u201cD-word.\u201d The basic unit of data transmission within SATA is a D-word. The data bytes within a D-word are passed through a conversion known in the art as \u201c8b\/10b\u201d to encode each eight-bit byte into ten-bit characters. The properties of the ten-bit character stream are highly optimal for serial transmission, enabling efficient serial transmission of data. The host-to-device serial data stream  is a serialized version of the ten-bit 8b\/10b characters. An additional property of the 8b\/10b code is the ability to send control characters that are out of band relative to the data bytes. This property enables SATA link controllers to send control information intermingled with payload data. SATA D-words that convey control information are referred to as link layer primitives, or simply \u201cprimitives.\u201d This invention introduces a new SATA link layer primitive, referred to as hold-emergency (HOLDE). The HOLDE primitive incorporates the flow-control behavior of the existing HOLD command with additional new behavior described in greater detail herein. TABLE 1 summarizes the SATA primitive table entry for the HOLDE primitive.",{"@attributes":{"id":"p-0023","num":"0022"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Primitive","Byte 3","Byte 2","Byte 1","Byte 0"]},{"entry":["Name","Contents","Contents","Contents","Contents"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HOLDE","D21.5","D21.5","D10.5","K28.3"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"The HOLDE primitive is generated within the host-to-device serial data stream  when a high-g event warning signal  is received by the SATA host link controller . From a data flow perspective, relative to the SATA host interface , the HOLDE primitive acts similarly to the existing HOLD primitive. However, the HOLDE primitive is transmitted in response to an active indication on the high-g event warning signal  rather than in response to a data flow issue, which normally triggers the transmission of a HOLD primitive. Inbound serial data (i.e., data transmitted from the hard disk drive ) on the device-to-host serial data stream  is decoded from 8b\/10b format into D-words of data. A HOLDA (hold acknowledge) is normally received in response to the SATA host link controller  transmitting either a HOLDE or HOLD on the host-to-device serial data stream . TABLE 2 summarizes the description of the HOLDA and HOLDE primitives.",{"@attributes":{"id":"p-0025","num":"0024"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Primitive","Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HOLDA","Hold acknowledge","This primitive is sent by a transmitter"]},{"entry":[{},{},"as long the HOLD or HOLDE primitive"]},{"entry":[{},{},"is received by its companion receiver."]},{"entry":["HOLDE","Emergency","HOLDE is transmitted in place of pay-"]},{"entry":[{},"Protection","load data within and a frame when the"]},{"entry":[{},"hold data","host detects that an event is imminent"]},{"entry":[{},"transmission","that requires that the device take"]},{"entry":[{},{},"protective action."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The hard disk drive  includes, without limitation, a SATA device interface , an actuator control  and an actuator . The SATA device interface  includes a SATA device transport controller  and a SATA device link controller . The SATA device transport controller  implements aspects of the well-known SATA host transport protocol related to SATA transport layer protocol processing. The SATA device link controller  implements the well-known SATA link layer functionality and includes extensions to the device link layer state machine, described in greater detail below. The device link controller  includes physical layer functionality for transmitting parallel data in the form of a serial stream to the host controller  and for receiving data that is formatted as a serial stream from the host controller , in accordance with the SATA 2.5 specification. When the SATA device link controller  receives a HOLDE primitive in the host-to-device serial data stream , the SATA device link controller  transmits an active signal over the emergency hold signal  to the actuator control . The SATA device link controller  also transmits a HOLDA primitive back to the host via the device-to-host serial data stream  to acknowledge reception of the HOLDE primitive.","In one embodiment of the present invention, a computer-readable medium includes a set of instructions that when executed by a processing device causes the processing device to protect a storage device during a high-gravity event, by performing the steps of receiving a first HOLDE primitive transmitted over a serial data stream in response to the high-gravity event, wherein the first HOLDE primitive is configured to cause a read\/write head to be removed from a storage medium in the storage device and to cause a host link controller to stop transmitting data to the storage devices, signaling an actuator controller in the storage device to enter a protected state in preparation for the high-gravity event in response to receiving the first HOLDE primitive, and transmitting a first HOLDA primitive over the serial data stream to acknowledge receipt of the first HOLDE primitive.","In normal operation, the actuator control  generates control signals to the actuator  to precisely position read\/write heads within the hard disk drive  over a specifically selected track of the magnetic media. The actuator  physically moves the read\/write heads according to signals generated by the actuator control . When the emergency hold signal  is active, the actuator control  generates the appropriate signals to the actuator  to quickly move the read\/write heads off the spinning magnetic media and into a safe parked position in preparation for a high-g event. Importantly, the preparation conducted by the hard disk drive  prior to a high-g event is not limited to parking the read\/write heads. For example, spinning down the media spindle is another example action that may be taken in response to an active emergency hold signal .","The motion sensor  detects when the computing device  is likely to experience a high-g event. An example motion sensor  may include a three-axis accelerometer. If the motion sensor detects a state of zero-gravity, as would be the case in a non-spinning free fall, then a high-g event is likely. In another scenario, the motion sensor  may detect excessive force about a three-space axis, as would be the case in a spinning fall prior to a high-g event. When a high-g event is likely, the motion sensor  activates the high-g event warning signal .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2","FIG. 1"]},"The method of a SATA host link controller transmitting a high-g event warning to a SATA device link controller using the HOLDE primitive begins in step , where the motion sensor  detects that the computing device  is experiencing a high-g event. The method then proceeds to step , where the motion sensor  signals the SATA host link controller  within the SATA host interface  to initiate an emergency hold. In step , the SATA host link controller  within the SATA host interface  inserts a HOLDE primitive in the SATA command stream, halting further transmission of data other than HOLDE primitives. For the purpose of data flow control, the SATA host link controller  is in a flow control HOLD state. In step , if no HOLDA primitive is received by the SATA host link controller  to acknowledge the transmitted HOLDE primitive, then the method proceeds to step , where a device error is processed. After step  the method terminates in step .","If, however, in step , the SATA host link controller  receives a HOLDA primitive, then the method proceeds to step . In step , if the high-g event is not finished, then the method returns to step , where the SATA host link controller  inserts another HOLDE primitive in the SATA command stream. In step , if the high-g event is finished, then the method proceeds to step , where the SATA host link controller  within the SATA host interface resumes sending data normally in the SATA command stream. The high-g event may be determined to be finished using any technically feasible means, including a basic time out or count down procedure. The method then terminates in step .","TABLE 3 illustrates additions to the existing \u201clink idle\u201d state diagram. The newly added state transitions, labeled \u201c1\u201d and \u201c2,\u201d are underlined. If the link state controller state machine is operating on the host side, then arc \u201c1,\u201d specified in TABLE 3, is followed by the SATA host link controller . Note that prior to moving to the LH_HOLDE state, the SATA host link controller  saves the current link layer state in a register referred to as the LH_HOLDE_PREV_STATE register. If the link state controller state machine is operating on the device side, then arc \u201c2,\u201d specified in TABLE 3, is followed by the SATA device link controller . Note that prior to moving to the LH_HOLDE state, the SATA device link controller  saves the current link layer state in a register referred to as the LD_HOLDE_PREV_STATE register.",{"@attributes":{"id":"p-0034","num":"0033"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["L1: L_IDLE","Transmit SYNCP"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{"u":"1.\u2009Host\u2009indication\u2009of\u2009potential\u2009high-G\u2009impact"},{"u":"\u2192"},{"u":"LH_HOLDE"}]},{"entry":{"u":"event\u2009and\u2009HOLDE\u2009enabled\u2009and\u2009PHYRDY"}},{"entry":[{"u":"2.\u2009Drive\u2009phy\u2009layer\u2009forwards\u2009HOLDE\u2009and"},{"u":"\u2192"},{"u":"LD_HOLDE"}]},{"entry":{"u":"PHYRDY"}},{"entry":["3. Transport layer requests frame trans-","\u2192","HL_SendChkRdy or"]},{"entry":["mission and PHYRDY",{},"DL_SendChkRdy"]},{"entry":["4. Transport layer requests transition to","\u2192","L_TPMPartial"]},{"entry":"Partial and PHYRDY"},{"entry":["5. Transport layer requests transition to","\u2192","L_TPMSlumber"]},{"entry":"Slumber and PHYRDY"},{"entry":["6. X_RDYP received from Phy","\u2192","L_RcvWaitFifo"]},{"entry":["7. Phy layer forwards ( PMREQ_PP or","\u2192","L_PMOff"]},{"entry":"PMREQ_SP ) and power modes are enabled"},{"entry":"and acceptable"},{"entry":["8. Phy layer forwards ( PMREQ_PP or","\u2192","L_PMDeny"]},{"entry":"PMREQ_SP ) and power modes are not"},{"entry":"enabled or are unacceptable"},{"entry":["9. Phy layer forwards AnyDword other than","\u2192","L_IDLE"]},{"entry":"( X_RDYP or PMREQ_PP or"},{"entry":"PMREQ_SP ) and no transmit request from"},{"entry":"Transport layer"},{"entry":["10. PHYRDYn","\u2192","L_NoCommErr"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"TABLE 4 illustrates the state transitions used by the SATA host link controller  while in the LH_HOLDE state. The SATA host link controller  may enter the LH_HOLDE state from any link state when the SATA host link controller  receives an active high-g event warning signal . Again, newly added state transitions are underlined.",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{"u":"L3:\u2009LH_HOLDE"},{"u":"Transmit\u2009HOLDE"}]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{"u":"1.\u2009Host\u2009indication\u2009of\u2009potential\u2009high-G\u2009impact"},{"u":"\u2192"},{"u":"LH_HOLDE"}]},{"entry":{"u":"event\u2009and\u2009PHYRDY"}},{"entry":[{"u":"2.\u2009Potential\u2009or\u2009High-G\u2009impact\u2009event\u2009no\u2009longer"},{"u":"\u2192"},{"u":"LH_HOLDE"}]},{"entry":[{"u":"exists\u2009and\u2009PHYRDY\u2009and\u2009the\u2009previous\u2009state"},{},{"u":"PREV_STATE"}]},{"entry":{"u":"was\u2009not\u2009L_SEND_SATA\u2009or"}},{"entry":{"u":"L_SEND_HOLD"}},{"entry":[{"u":"3.\u2009Potential\u2009or\u2009High-G\u2009impact\u2009event\u2009no\u2009longer"},{"u":"\u2192"},{"u":"LH_SEND\u2009HOLDS"}]},{"entry":{"u":"exists\u2009and\u2009PHYRDY"}},{"entry":[{"u":"4.\u2009PHYRDYn"},{"u":"\u2192"},{"u":"L_NoCommErr"}]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The SATA host link controller  alternates state between the LH_HOLDE state and the LH_SEND_HOLDS state, according to the transitions specified in TABLE 4 and in TABLE 5, set forth below. TABLE 5 illustrates the LH_SEND_HOLDE state transitions used by the SATA host link controller . As with the other tables, newly added state transitions are underlined.",{"@attributes":{"id":"p-0038","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{"u":"L4:"},{}]},{"entry":[{"u":"LH_SEND_HOLDS"},{"u":"Transmit\u2009HOLD"}]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{"u":"1.\u2009Host\u2009indication\u2009of\u2009potential\u2009high-G\u2009impact"},{"u":"\u2192"},{"u":"LH_HOLDE"}]},{"entry":{"u":"event\u2009and\u2009PHYRDY"}},{"entry":[{"u":"2.\u2009Less\u2009than\u200960\u2009HOLD\u2009primitives\u2009transmitted"},{"u":"\u2192"},{"u":"LH_SEND_HOLDS"}]},{"entry":{"u":"in\u2009this\u2009state\u2009and\u2009PHYRDY"}},{"entry":[{"u":"3.\u200960\u2009HOLD\u2009primitives\u2009transmitted\u2009in\u2009this"},{"u":"\u2192"},{"u":"LH_HOLDE"}]},{"entry":[{"u":"state\u2009and\u2009PHYRDY"},{},{"u":"PREV_STATE"}]},{"entry":[{"u":"4.\u2009HOLD\u2009detected\u2009from\u2009the\u2009drive\u2009and"},{"u":"\u2192"},{"u":"LH_HOLDE"}]},{"entry":[{"u":"PHYRDY"},{},{"u":"PREV_STATE"}]},{"entry":[{"u":"5.\u2009PHYRDYn"},{"u":"\u2192"},{"u":"L_NoCommErr"}]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3","FIG. 1"]},"The method of a SATA device link controller receiving a high-g event warning using the HOLDE primitive begins in step , where SATA device link controller  within the hard disk drive  receives a HOLDE primitive transmitted by the SATA host link controller . The method proceeds to step , where the SATA device link controller  signals the hard disk drive  to prepare for a high-g event. More specifically, the actuator controller  receives the preparation signal from SATA device link controller  and then causes the actuator  to remove all read\/write heads from storage media within the hard disk drive . The actuator controller  may also cause any spinning storage media to spin down. During this protected state, the SATA device link controller  is said to be in a HOLDE state. In step , the SATA device link controller  transmits a HOLDA primitive to acknowledge the received HOLDE primitive. In step , if the SATA device link controller  determines that it should continue to stay in the HOLDE state, according to the state transition rules set forth below in TABLE 6, then the method proceeds to step .","If, however, in step , the SATA device link controller  determines that it should not continue to stay in the HOLDE state, according to the state transition rules set forth below in TABLE 6, then the method proceeds to step . In step , the SATA device link controller  signals the hard disk drive  to exit the protected state and continue operating. In step , a wait cycle is implemented until the hard disk drive  is ready to resume normal operation. In step , the SATA device link controller  resumes receiving data, and the hard disk drive  resumes normal operation. The method then terminates in step .","TABLE 6 sets forth the state transition properties of SATA device link controller  with respect to the LD_HOLDE state. The SATA device link controller  enters the LD_HOLDE state when the SATA device link controller  receives a HOLDE primitive. So long as the SATA device link controller  continues to receive sequential HOLDE primitives, the SATA device link controller  stays in the HOLDE state. Once again, newly added transitions are underlined",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},{"u":"Take\u2009vendor-specific\u2009protection"}]},{"entry":[{"u":"L5:"},{"u":"actions\u2009to\u2009prevent\u2009damage\u2009from\u2009a"}]},{"entry":[{"u":"LD_HOLDE"},{"u":"high-G\u2009or\u2009shock\u2009event\u2009and\u2009transmit\u2009HOLDA."}]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{"u":"1.\u2009Phy\u2009layer\u2009forwards\u2009HOLDE\u2009or\u2009less\u2009than\u20093"},{"u":"\u2192"},{"u":"LD"}]},{"entry":[{"u":"consecutive\u2009non-HOLDE\u2009have\u2009been\u2009received."},{},{"u":"HOLDE"}]},{"entry":{"u":"And\u2009PHYRDY"}},{"entry":[{"u":"2.\u2009More\u2009than\u20093\u2009consecutive\u2009HOLD\u2009detected\u2009and"},{"u":"\u2192"},{"u":"L_HOLD"}]},{"entry":{"u":"PHYRDY\u2009and\u2009insufficient\u2009FIFO\u2009space"}},{"entry":[{"u":"3.\u2009More\u2009than\u20093\u2009consecutive\u2009non-HOLDE"},{"u":"\u2192"},{"u":"LD"}]},{"entry":[{"u":"detected\u2009and\u2009PHYRDY"},{},{"u":"PREV"}]},{"entry":[{},{},{"u":"STATE"}]},{"entry":[{"u":"4.\u2009PHYRDYn"},{"u":"\u2192"},{"u":"L_"}]},{"entry":[{},{},{"u":"NoCommErr"}]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"In sum, a new SATA link layer primitive, referred to as hold-emergency (HOLDE), is added to the well-known SATA protocol. The HOLDE primitive incorporates the flow-control behavior of the existing HOLD command with the additional new behavior of notifying the hard disk drive to take emergency steps to prepare for impact when a high-g event occurs. A SATA host generates a HOLDE primitive when an accelerometer or other motion sensor predicts a high-g impact event. From a data flow standpoint, the HOLDE primitive acts similarly to the existing HOLD command, however, a SATA device, such as a hard disk drive, responds to a HOLDE primitive by preparing for impact. Such preparation may include parking the read\/write heads and spinning down any spinning media. A new state, LH_HOLDE, is added to the SATA host link controller link state machine to extend the host side protocol behavior to accommodate the emergency hold condition. A new state, LD_HOLDE, is also added to the SATA device link controller link state machine to extend the device side behavior to accommodate the emergency hold condition.","By providing emergency impact notification and response at a very low level in the SATA protocol stack (the SATA link layer), extremely low notification latencies are achieved, thus increasing the probability that the hard disk drive can successfully prepare for impact prior to the actual impact. Furthermore, with the impact notification and response mechanism acting within the SATA link layer, software is relieved of the complex and time consuming task of discovering and re-issuing SATA commands that were aborted.","While the forgoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features of the present invention can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to embodiments, some of which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
