---
title: System and method of identifying the source of an attack on a computer network
abstract: The present invention provides a system and method of tracing the spread of computer malware in a communication network. One aspect of the present invention is a method that traces the spread of computer malware in a communication network. When suspicious data characteristic of malware is identified in a computing device connected to the communication network, the method causes data that describes the state of the computing device to be stored in a database. After a specific attack against the communication network is confirmed, computing devices that are infected with the malware are identified. Then, the spread of the malware between computing devices in the communication network is traced back to a source.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07434261&OS=07434261&RS=07434261
owner: Microsoft Corporation
number: 07434261
owner_city: Redmond
owner_country: US
publication_date: 20040927
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to computing devices and more particularly to protection of computing devices against malware.","As more and more computers, and other computing devices, are inter-connected through various networks, such as the Internet, computer security has become increasingly more important, particularly from invasions or attacks delivered over a network or over an information stream. As those skilled in the art will recognize, these attacks come in many different forms, including, but certainly not limited to, computer viruses, computer worms, system component replacements, denial of service attacks, even misuse\/abuse of legitimate computer system features, all of which exploit one or more computer system vulnerabilities for illegitimate purposes. While those skilled in the art will realize that the various computer attacks are technically distinct from one another, for purposes of the present invention and for simplicity in description, all malicious computer programs that spread on computer networks, such as the Internet, will be generally referred to hereinafter as computer malware, or more simply, malware.","When a computer system is attacked or \u201cinfected\u201d by computer malware, the adverse results are varied, including disabling system devices; erasing or corrupting firmware, applications, or data files; transmitting potentially sensitive data to another location on the network; shutting down the computer system; or causing the computer system to crash. Yet another pernicious aspect of many, though not all, computer malware is that an infected computer system is used to infect other systems.","A traditional defense against computer malware, and particularly computer viruses and worms, is anti-virus software. Generally, anti-virus software scans incoming data, arriving over a network, looking for identifiable patterns associated with known computer malware. Upon detecting a pattern associated with a known computer malware, the anti-virus software may respond by removing the computer virus from the infected data, quarantining the data, or deleting the infected incoming data. Unfortunately, anti-virus software typically works with known, identifiable computer malware. Frequently, this is done by matching patterns within the data to what is referred to as a \u201csignature\u201d of the malware. One of the core deficiencies in this malware detection model is that an unknown computer malware may propagate unchecked in a network until a computer's anti-virus software is updated to identify and respond to the malware.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","102","108","110","110","102","112","112","104","114","104","106","116","108","118","112"]},"In light of the above-identified problems, it would be beneficial to law enforcement organizations, anti-virus vendors, and other entities to have a system and method of tracing the release of malware in a communication network.","The present invention is generally directed to tracing the spread of computer malware from computing devices that are infected to a computing device where the infection originated. One aspect of the present invention is a method that traces the spread of computer malware in a communication network. When suspicious data characteristic of malware is identified in a computing device connected to the communication network, the method causes data that describes the state of the computing device to be stored in a database. After a specific attack against the communication network is confirmed, computing devices that are infected with the malware are identified. Then, the spread of the malware between computing devices in the communication network is traced back to a source.","In accordance with further aspects of the present invention, a method for collecting the memory state of a client computing device when anti-virus software identifies suspicious data characteristic of malware on the client computing device is disclosed. The anti-virus software may report the suspicious data using a call to an application programming interface (\u201cAPI\u201d). The API call may cause the memory contents of the client computing device, typically in the form of a crash dump file, to be transmitted to a server computing device. The server computing device is configured to maintain a database designed to collect crash dump files from a plurality of client computing devices. Also, the API call may cause additional information to be transmitted to the server computing device including information used to confirm the spread of malware in a communication network.","In yet another aspect of the present invention, a computer-readable medium may be provided with contents that cause a computing system to operate in accordance with the methods described herein.","The present invention provides a system and method of tracing the spread of computer malware in a communication network. When suspicious data characteristic of malware is identified in a computing device connected to the communication network, the present invention causes data that describes the state of the computing device to be stored in a database. After a specific attack against the communication network is confirmed, computing devices that are infected with the malware are identified through an analysis of the data stored in the database. Then, the spread of the malware between computing devices is traced back to the source.","Although the present invention will primarily be described in the context of tracing malware released on the Internet, those skilled in the relevant art and others will appreciate that the present invention is also applicable in other areas of computer networking and software engineering. The following description first provides an overview of a system in which the present invention may be implemented. Then a method is described that traces the spread of malware from computing devices that are infected to a computing device where the infection originated. The illustrative examples provided herein are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Similarly, any steps described herein may be interchangeable with other steps, or combinations of steps, in order to achieve the same result.","Referring to , the following is intended to provide an exemplary overview of one suitable computer environment in which the present invention may be implemented. The illustrated environment comprises a plurality of client computing devices , , and , anti-virus server , anti-virus server , and memory collection server . As illustrated, the client computing devices , , and , may be communicatively connected to the anti-virus servers  and  and the memory collection server  via the Internet . As known to those skilled in the art and others, the computing devices illustrated in  may be configured to exchange documents, commands, and other types of data.","As illustrated in , the memory collection server  is shown associated with the memory collection database . As known to those skilled in the art and others, existing systems are able to obtain \u201ccrash dumps\u201d (sometimes referred to as memory dumps or core dumps) when a failure occurs in a computing device such as client computing devices , , and . Generally described, a crash dump is a record of the memory state of a computing device saved to a file which provides developers with access to data and other information that captures the state of different system components at the time of a crash or failure. A detailed description of one system suitable to obtain a crash dump from a client computing device in response to a failure may be found in commonly assigned U.S. Pat. No. 6,629,267, titled METHOD AND SYSTEM FOR REPORTING A PROGRAM FAILURE, issued Sep. 30, 2003, the content of which is expressly incorporated herein by reference. As known to those skilled in the art and others, after a crash dump is obtained at a database, such as the memory collection database , additional data may be requested regarding the state of the client computing device.","The large size of a complete crash dump makes it cumbersome to isolate the computer code that caused the failure because a vast amount of system information must be read. Also, transmission of large files over a network such as the Internet  consumes resources and time, reducing the convenience of these types of systems. Therefore, mechanisms have been developed to generate a minidump file, which is an abbreviated record of a crash dump. A detailed description of a system for creating a minidump file from a crash dump is found in commonly assigned U.S. Pat. No. 6,681,348, titled CREATION OF MINI DUMP FILES FROM FULL DUMP FILES, issued Jan. 20, 2004, the content of which is expressly incorporated herein by reference.","As known to those skilled in the art and others, many different software vendors produce anti-virus software. Typically, modern anti-virus software is configured to issue a report when suspicious data characteristic of malware is detected on a client computing device. The report is transmitted from a client computing device to a server computing device such as anti-virus servers  and  that are associated with anti-virus software vendors. Unfortunately, anti-virus software typically works best with \u201cknown,\u201d identifiable computer malware. Frequently, identifying known malware is done by matching patterns in reports obtained from client computing devices to a \u201csignature\u201d of the malware. As described in further detail below with reference to , software formed in accordance with the present invention establishes a triggering event other than a failure for transmitting a minidump file from a client computing device to a database that stores data collected from a plurality of client computing devices. For example, anti-virus software may indicate that suspicious data characteristic of malware is stored on a client computing device. In conjunction with the present invention, the anti-virus software may cause a minidump file to be transmitted to the memory collection server  which is stored in the memory collection database . Also, the anti-virus software may cause additional information to be transmitted to the memory collection server  including information that will confirm the spread of malware in the communication network and information that will assist developers in preventing the malware from propagating.","Now, with reference to , components of the client computing device  shown in  will be described. In general, client computing devices such as client computing device  serve as collection areas where data that describes malware propagating \u201cin the wild\u201d may be obtained. Software executing on the client computing device  that is formed in accordance with the present invention provides an interface for transmitting information about malware to the memory collection server . As illustrated in  and described in further detail below, the client computing device  includes an operating system , anti-virus software , and an interface .","As illustrated in , the client computing device  stores an operating system  for controlling the general operation of the computing device  and providing services and resources requested by application programs such as the anti-virus software . The operating system  may be a general-purpose operating system that is commercially available such as a Microsoft\u00ae operating system, UNIX\u00ae operating system, or Linux\u00ae operating system. As known to those skilled in the art and others, a general purpose operating system performs basic tasks, such as managing the I\/O (input and output) of a computing device and tracking data stored in memory. With regard to the present invention, the operating system  generates a minidump file in response to a call that is made to the interface . Also, the operating system  transmits the minidump file to a remote computing device such as memory collection server  that may be used to track the spread of malware in the communication network.","The client computing device  also includes anti-virus software  designed to detect malware on the client computing device  and provide information about the malware to the memory collection server . As known to those skilled in the art and others, any one of a number of commercially available anti-virus software packages may be installed on the client computing device . As described previously, anti-virus software is most successful when a signature for the malware was previously obtained. For new or otherwise unknown malware, available anti-virus software packages perform heuristic scans designed to detect suspicious data characteristic of malware on a client computing device. In any event, when the anti-virus software  indicates that a client computing device is either known to be infected or potentially infected with malware, the anti-virus software provides information to the memory collection server  that describes the memory state of the client computing device .","As illustrated in , the client computing device  also includes an interface  that provides a mechanism for application programs such as the anti-virus software  to cause a minidump file to be transmitted to the memory collection server . On one side, the interface  interacts with the anti-virus software  and on the other side, the interface  interacts with the operating system . For example, the anti-virus software  may perform a heuristic scan that identifies suspicious data on the client computing device . When the scan is complete, the anti-virus software may make a call to the interface  to send a minidump file to the memory collection server . When the call is received, the interface  may issue a command to the operating system  that causes the minidump file to be generated and transmitted to the memory collection server .","As illustrated in , each component of the client computing device , e.g., the operating system , the anti-virus software , and the interface  are interconnected and able to communicate with other components. As known to those skilled in the art,  is a highly simplified example of one computing device  capable of performing aspects of the present invention. Actual embodiments of the client computing device  will have additional components not illustrated in  or described in the accompanying text. Also,  shows one component architecture for the client computing device , but other component architectures are possible. Thus,  should be construed as exemplary and not limiting.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 4","FIGS. 1-3","FIG. 4"],"b":["400","400","400","400"]},"At block  the method  remains idle and waits for an event that triggers the collection of data from a computing device such as client computing devices , , and . When anti-virus software detects data characteristic of malware on a client computing device, the method  receives notice of the detection. In one embodiment of the present invention, the anti-virus software indicates that suspicious data has been detected by issuing an API call to the operating system executing on a client computing device. As known to those skilled in the art and others, anti-virus software is able to pass information to the operating system when making an API call.","At block , the method  transmits data to a computer system designed to assist developers trace the spread of malware such as memory collection server  (). As described previously with reference to , a plurality of client computing devices may be connected to a communication network. Data that allows developers to track the spread of the malware throughout the communication network is aggregated at a single location. For example, the collection event that occurred at block  may cause a minidump file to be transmitted from the client computing device where the suspicious data was detected to a remote computer system designed to assist developers trace the spread of malware (i.e., memory collection server ).","The anti-virus software may cause additional data in addition to a mini-dump file to be transmitted to a computer system designed to assist developers trace the spread of malware. As known to those skilled in the art and others, each anti-virus software vendor uses independent standards for identifying and\/or publishing software updates to prevent the spread of malware. For example, one anti-virus software vendor may be the first to identify a new malware propagating on the Internet and assign the malware a descriptive name (e.g. \u201cSasser\u201d). The descriptive name that identifies the malware may be publicized to computer users who obtain a software update designed to neutralize the effects of the malware. Subsequently, additional anti-virus software vendors may identify the same malware. However, since standards do not exist between anti-virus software vendors for identifying and\/or publishing software updates to neutralize malware, the newly discovered malware may be given a different name by the subsequent anti-virus software vendors. Obviously, when the same malware has different names, users could face problems trying to identify whether they are protected against the malware. Thus, at block , anti-virus software executing on a client computing device may cause additional information to be transmitted to the memory collection server  which may include information that assists in confirming the spread of a specific piece of malware regardless of the descriptive names assigned to identify the malware.","In general terms describing one exemplary embodiment of the present invention, the additional information transmitted at block  may include data that places the malware into one or several categories. As described previously, many different kinds of malware are created by malicious computer users, including, but certainly not limited to computer viruses, computer worms, Trojan horses, logic bombs, etc. When anti-virus software detects malware on a client computing device, the method  receives notice of the detection. Event data may be included in the notice that places the malware into one or several different categories. For example, the event data may indicate that the malware (1) is a virus (i.e. attaches itself to benign program code), (2) is spread as an attachment to an email message and (3) attempts to send additional email messages using an address book associated with an email application program. Each of these characteristics may be used to place the malware into categories which collectively serve to identify the malware.","In one embodiment of the present invention, the additional information transmitted at block  may include actual program code identified as being the suspicious data. For any one of a number of reasons, anti-virus software may not categorize characteristics of the malware. In this instance, a manual or automated process may analyze the program code identified as being the suspicious data in order to categorize the program code.","At decision block , a test is conducted to determine whether the information collected in the memory collection database  indicates that a previously unknown malware attack is targeted at a communication network such as the Internet . As known to those skilled in the art and others, malware is becoming more sophisticated and progressively more difficult to detect. To combat new, more sophisticated malware, modern anti-virus software aggressively identifies suspicious data. As a consequence, anti-virus software may generate false positives e.g. instances where data is reported as being suspicious data that is not malware. However, if the memory collection server  receives multiple instances where program code exhibits the same characteristics, this provides a strong heuristic indicator that a previously unknown malware attack is targeting computing devices connected to the communication network. For example if the memory collection server  receives a significant number (i.e. a thousand or more) reports which categorizes suspicious data in the same way, a previously unknown attack against the communication network is probably occurring.","In an alternative embodiment of the present invention, a specific malware attack on a communication network is identified by an anti-virus software developer that analyzes data received at the memory collection server . An experienced anti-virus software developer may identify a malware attack on a communication network by analyzing information previously unavailable to anti-software developers such as minidump files. As described previously, a minidump file captures the memory state of a client computing device when suspicious data is detected. The memory state of the client computing devices as recorded in minidump files may be used for determining whether suspicious data detected by anti-virus software is malware. In any event, if a previously unidentified attack against a communication network such as the Internet  is discovered, the method  proceeds to block  described below. Alternatively, if a previously unidentified attack is not discovered, the method  proceeds back to block  and blocks  through  repeat until an attack is discovered.","At block , the method  obtains program code that implements the attack identified at block . As described previously, in one embodiment of the present invention, suspicious data was transmitted to a system that traces the spread of malware in a communication network such as the memory collection server  at block . In this embodiment, suspicious data now identified as malware was previously obtained by the method . However, in other embodiments of the present invention, the program code identified as malware is obtained at block . Since existing systems are able to obtain malware program code that is released on a communication network, description of this process is not described in further detail here.","At block , a sample data set that describes characteristics of the malware is obtained. In one embodiment of the present invention, the malware program code received at block  is used to infect one or more sample computing devices. From these sample computing devices, a set of malware characteristics may be identified. For example, minidump files may be generated from the infected computing devices. In this instance, the minidump files may indicate that the malware (1) is a virus (i.e., attaches itself to benign program code), (2) is spread as an attachment to an email message and (3) attempts to send additional email messages using an address book associated with an email application program.","At block , computing devices in a communication network infected with the malware are identified. After the sample data set is obtained at block , the method  identifies computing devices infected with a specific piece of malware by performing a search of a database. As described previously, software formed in accordance with the present invention maintains a memory collection database  () that stores data associated with client computing devices. The memory collection database  may include data that describes the memory state of client computing devices connected to a communication network when suspicious data is detected. In one embodiment of the present invention, the memory collection database  is searched for data that is characteristic of the malware. For example, the data set obtained at block  that captures the memory state of sample computing devices known to be infected with the malware may be used as key to search the memory collection database . Computing devices associated with data characteristic of the malware are identified as being infected. Since a search of a database may be performed using any one of a number of searching techniques generally known in the art, further description of these techniques is not provided here.","As known to those skilled in the art and others, an address such as an Internet Protocol (\u201cIP\u201d) address is typically used to identify computing devices connected to a communication network. In the context of the present invention, IP addresses associated with client computing devices are recorded in the memory collection database . For example, the IP address of a client computing device may be recorded when data is transmitted to the memory collection database  at block  in response to receiving notice of suspicious data. At block , computing devices in a communication network infected with the malware are identified by their IP address.","At block , the spread of malware between client computing devices connected to a communication network is mapped in order to identify the source of the malware. If the time when client computing devices were infected with the malware is known, mapping the spread of the malware may be performed using a sorting algorithm. For example, in one embodiment of the present invention each client computing device identified as being infected with the malware transmits a minidump file to the memory collection database  at block . The time (i.e. date, hour, minute, second, etc.) when the minidump file was transmitted is recorded. The spread of the malware in a communication network may be traced by sorting when data indicative of an infection was received from each client computing device. For example, minidump files associated with client computing devices and stored in the memory collection database  may be sorted based on when the minidump files were received. After the data is sorted, the computing device that was the first to be infected with the malware is easily identified. When the computing device that was the first to be infected is known, the method  proceeds to block  where it terminates.","The information generated by the method  may include the IP addresses of one or more computing devices that were the earliest to be infected with new malware released on a communication network. The IP addresses may be used to identify the malware creator. For example, when the IP address of one or more computing devices that were the earliest to be infected with the malware is known, law enforcement officials may perform an investigation on how these computing devices became infected.","The method  as described above has a discrete beginning and end. However, in an actual embodiment of the present invention, the collection of data performed by the memory collection server  is a continuous process. Stated differently, the present invention continually obtains data such as minidump files from client computing devices connected to a communication network. When sufficient data exists to believe that a previously unknown malware compromises the security of the communication network, the source of the malware may be identified.","While various aspects of the invention have been illustrated and described, it will be appreciated that various changes can be made therein without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated as the same become better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
