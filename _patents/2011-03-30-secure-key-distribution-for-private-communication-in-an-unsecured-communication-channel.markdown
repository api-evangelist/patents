---
title: Secure key distribution for private communication in an unsecured communication channel
abstract: A method to enable the secure distribution of encryption keys so as to facilitate private communication between users in an unsecured communication network is provided. Such a method may also provide a way to detect an unauthorized access of an encryption key so as to mitigate or prevent any loss of confidential information during communication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08379857&OS=08379857&RS=08379857
owner: Google Inc.
number: 08379857
owner_city: Mountain View
owner_country: US
publication_date: 20110330
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","I. Introduction","II. System Overview","III. Sending Private Messages in an Unsecured Communication Channel","IV. Method","V. Example Computer System Implementation","VI. Variations","VII. Conclusion"],"p":["1. Field","Embodiments relate generally to digital communications.","2. Background","Digital communications systems have become pervasive in recent years. Users increasing rely on email, instant messaging, Voice over Internet Protocol (VOIP), video conferencing and other similar types of network based communication channels for exchanging information, including private and confidential information. In general, information transmitted over, for example, the Internet can be intercepted or tapped at various points, such as ISP routers and WIFI access points. As a result, end-to-end encryption is important for protecting confidentiality of digital communication. To use encryption, the communicating parties need to share a secret encryption key first. This is a challenging task because the communicating parties generally do not have secure communication channels among them.","In theory, the public key infrastructure (PKI) provides a solution for this: the communicating parties can publish their public keys, and one party can create a new encryption key and send the key to other parties securely by encrypting the key with public keys of other parties. However, in practice, the usability of PKI is low for individual users because it is difficult for them to manage their private key properly. For example, a user may need to put his private key on every device he might want to use for secure communication, and that makes the key more likely to be leaked. In addition, the damage of a leaked private key is very severe, which means the confidentiality of all the previous private communications derived from the private key may be compromised.","The capability to securely distribute encryption keys so as to enable private communication between users in an unsecured communication network is provided. Such a capability may also provide a way for communicating parties to detect an unauthorized access of an encryption key so as to mitigate or preclude any loss of confidential information during communication.","Embodiments relate to sending private messages in an unsecured communication network. In an embodiment, a share request for a private message associated with one or more recipients is transmitted to a trusted third-party. The share request includes an encryption key and a share value. The share value is based on the number of recipients of an encrypted private message. In addition, the encryption key is distributed by the trusted third party according to the share value. A key identifier is received from the trusted third party based on the transmitted share request. The trusted third party generates a new key identifier for each share request it may receive. The key identifier from the trusted third party is then sent to the recipients of the private message. The key identifier is used by the recipients to request the encryption key from the trusted third party while the encryption key is used by the recipients to decrypt the encrypted private message. Next, it is verified that a receipt notification is received from each recipient. The receipt notification is sent by each recipient only in response to successfully obtaining the encryption key from the trusted third party. If the receipt notification is not received from each intended recipient of the private message, the encryption key is discarded and the steps discussed above are repeated for a new encryption key. However, if the receipt notification is received from each intended recipient, the encrypted private message is sent to these intended recipients.","Embodiments may be implemented using hardware, firmware, software, or a combination thereof and may be implemented in one or more computer systems or other processing systems.","Further embodiments, features, and advantages of the present invention, as well as the structure and operation of the various embodiments, are described in detail below with reference to the accompanying drawings. It is noted that the invention is not limited to the specific embodiments described herein. Such embodiments are presented herein for illustrative purposes only. Additional embodiments will be apparent to persons skilled in the relevant art(s) based on the information contained herein.","The accompanying drawings, which are incorporated herein and form part of the specification, illustrate the embodiments of present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the relevant art(s) to make and use the invention.","Embodiments relate to enabling private communication between users in an unsecured communication network. A secure way of distributing encryption keys is needed to implement secure communication channels. However, secure communication channels are generally needed to ensure the key distribution process remains secure. Such a causality problem may be resolved with the assumption that it may actually be acceptable that an encryption key is compromised during the distribution process so long as the compromise or security leak can be detected. For example, if a leak is detected in a relatively short period of time, communicating parties may be able to take necessary precautions to mitigate any further loss of confidential information. Further, if a leaked encryption key is detected, the communicating parties can simply recreate a new key and try to distribute the new key. As will be described in further detail below, embodiments leverage the above-noted assumption to enable private communication between users even in an unsecured communication network.","While the present invention is described herein with reference to illustrative embodiments for particular applications, it should be understood that embodiments are not limited thereto. Other embodiments are possible, and modifications can be made to the embodiments within the spirit and scope of the teachings herein and additional fields in which the embodiments would be of significant utility. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the relevant art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","It would also be apparent to one of skill in the relevant art that the embodiments, as described herein, can be implemented in many different embodiments of software, hardware, firmware, and\/or the entities illustrated in the figures. Any actual software code with the specialized control of hardware to implement embodiments is not limiting of the detailed description. Thus, the operational behavior of embodiments will be described with the understanding that modifications and variations of the embodiments are possible, given the level of detail presented herein.","In the detailed description herein, references to \u201cone embodiment,\u201d \u201can embodiment,\u201d \u201can example embodiment,\u201d etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","The term \u201ctrusted third party\u201d is used herein to refer broadly and inclusively to any entity that facilitates communications between two or more users over a network, who both trust the entity with the users' confidential information. Such a trusted third party may use any number of well known methods to secure user interactions and network communications to and from each user. Further, such a trusted third party may provide a trusted third party service or applications interface that can be accessed by a client application executed at a client device corresponding to each user. Additional characteristics and operational aspects of trusted third parties would be apparent to a person skilled in the relevant art given this description.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","100","110","110","110","120","130","140","150","160","110","115","130","135","110","110"]},"Similarly, although servers , , and  are shown in , more or fewer servers may be used as necessary. For example, key distribution service  may be implemented in a single server (e.g., server ) or across a plurality of servers (e.g., servers , , and ). In this regard, servers , , and  may be implemented as a clustered computing environment utilizing one or more computing devices.","In an embodiment, server(s)  are operated by a trusted third party and key distribution service  is a trusted third party service, as described above. In an embodiment, clients A-C communicate with server(s)  and with each other over network . Clients A-C can be any type of computing device with at least one processor, local memory, display, and one or more input devices (e.g., a mouse, QWERTY keyboard, touch-screen, microphone, or a T9 keyboard). Such a computing device can include, but is not limited to, a mobile phone, a personal digital assistant (PDA), a computer, a cluster of computers, a set-top box, or other similar type of device capable of processing instructions. Similarly, server(s)  can be implemented using any type of computing device capable of serving data to clients A-C.","In an embodiment, server(s)  are communicatively coupled to database . Database  may be any type of data storage known to those of skill in the art. In an example, the data storage may be a database management system, such as a relational database or any other type of database known to those skilled in the relevant art given this description. Database  may store any type of data accessible by server(s) . Although only database  is shown, more databases may be used as necessary.","Network  can be any network or combination of networks that can carry data communication. Such a network can include, but is not limited to, a wired (e.g., Ethernet) or a wireless (e.g., Wi-Fi and 3G) network. In addition, network  can include, but is not limited to, a local area network, medium area network, and\/or wide area network such as the Internet. Network  can support protocols and technology including, but not limited to, Internet or World Wide Web protocols and\/or services. Intermediate network routers, gateways, or servers may be provided between components of communication system  depending upon a particular application or environment.","In an embodiment, client A executes a client application . In an embodiment, client application  may be implemented in client A as a standalone application or integrated within another application executable at client A such as, for example and without limitation, a web browser. For example, client application  may be implemented as a web service within a web browser implemented in client device A. Such a web service may be any one of various web services and applications executed by a web server (e.g., server(s) ). Web services and applications may also include computer software applications that are hosted in the web browser. For example, such services and applications may be implemented as a Java applet or using a browser-supported language including, but not limited to, JavaScript, VBScript, Hyper Text Markup Language (HTML), or any other type of language for writing web services and\/or applications.","In an embodiment, key distribution service  can provide one or more service application programming interfaces (APIs), which can be used by client application  to send and receive messages to and from key distribution service  over network . Although not shown in , client B and client C may also include client applications of their own to enable communication with, for example and without limitation, client application  and key distribution service  over network . The client applications of client B and client C may also utilize a programming interface of key distribution service  for purposes of communication over network , according to an embodiment. Client application  and key distribution service  are described in further detail below with respect to  and , respectively.","A. Client Application",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2","FIG. 1"],"b":["115","115","210","230","240","115","220","210","230","240"]},"In an embodiment, message interface  enables a user to select an option to electronically send a private message to one or more recipients. For ease of explanation, the one or more recipients may be described with respect to client B and client C shown in . However, it is noted that embodiments are not limited to clients B and C. Further, client A may send private messages to additional client devices or alternatively, to only one of either client B or client C if, for example, only one recipient is selected to receive the private message.","In an example, message interface  may be integrated with an email client application. Such an email client application may be, for example, a standalone email client or implemented as a web service within a web browser, as described above. Further, a control selector (e.g., a button, a link, etc.) may be displayed within message interface  that can be selected by the user in order to designate a particular email message be sent as an encrypted private message. A person skilled in the relevant art would appreciate that email is provided for illustrative purposes and embodiments are not limited thereto. Further, embodiments are not limited to text-based communications and can therefore be implemented to send and receive encrypted audio and video communications. Accordingly, embodiments can be implemented in any type of application suitable for sending and\/or receiving electronic communications. Such applications include, but are not limited to, client applications or services related to instant messaging, text messaging, and audio and\/or video teleconferencing.","In the example above, the user may select the control selector and initiate the transmission of the private message from the user to the one or more recipients (e.g., to clients B and C) via a user input device coupled to client device A. Message interface  can be configured to receive the user input and the corresponding selected option to electronically send the private message. It is noted that once the user input is received, the operations of message interface , key generator , share request generator , and verification unit  can occur automatically, without any further user intervention, in accordance with embodiments. In response to receiving the selected option at message interface , share request generator  generates a share value for the private message, according to an embodiment. The share value generated by share request generator  is based on the number of recipients to which the user wishes to send the private message.","In an embodiment, share request generator  uses key generator  to generate an encryption key. A person skilled in the relevant art given this description would appreciate that the encryption key for the private message may be generated using any of a number of well-known methods for generating encryption keys. In an embodiment, share request generator  encrypts the private message using the generated encryption key. It would be apparent to a person skilled in the relevant art given this description that the encryption key may instead be generated in a separate application from client application  either at the same or different location from client device A.","For example, share request generator  may send a request via network  to key distribution service , described in further detail below, to generate an encryption key based on receiving the option to send a private message from the user. Key distribution service  may then generate and send the encryption key back to share request generator  in response. In a different example, share request generator  may send the message in addition to a request to encrypt the user's message to key distribution service . In this example, key distribution service  may then generate the encryption key, encrypt the message using the generated key, and send the encrypted message back to share request generator  in response.","In an embodiment, one or more recipients of the encrypted private message may be determined from information within the message itself. For example, the user may specify the recipients in a recipient field of the message (e.g., a \u201cTo\u201d field in an email message). In an embodiment, share request generator  may determine the identity and number of recipients by extracting the information from the message. A person skilled in the relevant art given this description would appreciate that any number of well-known methods may be used to extract such recipient information from the message.","In an embodiment, share request generator  generates a share value based on the number of recipients specified by the user to receive the private message. In an embodiment, share request generator  transmits a share request, which includes the generated share value and the encryption key, to key distribution service  over network . As will be described in further detail below, the share value will be used by key distribution service  to determine the number of times the encryption key may be distributed. As noted above and as will be described further below, key distribution service  may be a trusted third party service configured to securely distribute encryption keys so as to facilitate private communications between clients A-C, according to an embodiment. Further, a secure communication channel or protocol such as, for example, Hypertext Transfer Protocol Secure (HTTPS) is used by client application  and key distribution service  to communicate over network . Such a secure communication channel can also be used between the recipients (e.g., clients B and C) of the private message and key distribution service .","In an embodiment, share request generator  receives a key identifier from key distribution service  based on the transmitted share request. As will be described further below, the key identifier received from key distribution service  is a unique identifier corresponding to the specific share request transmitted by share request generator . In an embodiment, verification unit  sends the key identifier received from key distribution service  to the one or more recipients (e.g., clients B and C). In order to decrypt the encrypted private message, the recipients of the message will need the encryption key. To obtain the encryption key, the recipients make a request to the key distribution service  with the corresponding key identifier. For example, if the recipients client B and client C are each able to successfully obtain the encryption key from key distribution service , client B and client C can each send a receipt notification to client A over network .","In an embodiment, verification unit  verifies that a receipt notification is received from each intended recipient of the private message before sending the encrypted version of the private message to these recipients. By sending or broadcasting the receipt notification, the communicating parties (e.g., the message sender, client A, and the one or more recipients of the private message, clients B and C) are able to reach a consensus that an unauthorized access of the encryption key has not occurred. Moreover, sending the private message only after the receipt notifications have been received from the recipients helps to further minimize any risk of loss to any confidential information that may be within the private message. If verification unit  does not receive a receipt notification from each of the intended recipients, the encryption key can be discarded. In an embodiment, verification unit  waits a predetermined duration of time to receive the receipt notification after the key identifier is sent to the recipients.","For example, if the receipt notification has not been received before the predetermined period of time has elapsed, the encryption key and the encrypted version of the private message can be discarded. Verification unit  can then send its own notification to share request generator  in order to have a new encryption key generated and the message from the user encrypted again using the newly generated key. Further, the new key along with the same share value can be sent to key distribution service  in order to repeat the process for securely distributing the key to the recipients.","B. Key Distribution Service",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 3","FIG. 1"],"b":["135","135","310","330","340","135","320"]},"In an embodiment, share request manager  is configured to receive a share request from client A. As described above, the share request from client A includes a share value based on the number of recipients to which the user at client A wishes to send a private message. The share value is also used by key distribution manager  to determine the number of times the encryption key may be distributed. As noted above, the share request may also include an encryption key, generated at client A (e.g., by key generator ), as described above. In an embodiment, share request manager  initially receives a request to generate an encryption key for the private message as well. For example, share request manager  may use key generator  to generate an encryption key and then send the generated encryption key back to client A over network  in response to the request.","In a further embodiment, share request manager  may receive the message to be encrypted along with the share request. In this embodiment, share request manager  can use key generator  to generate the encryption key, encrypt the received message using the key generated by key generator  and send the encrypted message back to client A. As noted above, client A may then send the encrypted message it receives from share request manager  to the intended recipients (e.g., clients B and C) over network  only after client A (e.g., verification unit  of , as described above) has verified that the encryption key has been distributed to all intended recipients of the private message.","In an embodiment, encryption key manager  generates a unique key identifier for the encryption key. For example, encryption key manager  may use a random number generator to generate the key identifier. It is noted that in an embodiment, a new key identifier is generated for each share request received from client A. Encryption key manager  can then create an association including the encryption key, the key identifier, and the share value received from client A. The association of the encryption key, key identifier, and share value can then be stored by encryption key manager  in memory. For example, encryption key manager  may store the association in database  of system , shown in  and described above. In an embodiment, encryption key manager  transmits the generated key identifier to client A over network .","In an embodiment, key distribution manager  receives a key access request over network  from a requestor. The key access request from the requestor generally includes a key identifier related to an encryption key stored in memory (and associated with a share value). For example, the intended recipients of the private message (e.g., clients B and client C) may send such a key access request to key distribution service  over network . Key distribution manager  can retrieve the encryption key associated with the key identifier from memory or storage (e.g., database  of system , shown in  and described above). If the corresponding key exists in memory, it is retrieved and distributed by key distribution manger  to the requestor over network . Assuming the requestor who sent the key access request is an intended recipient of the encrypted private message, the encryption key can be used by the requestor to decrypt the encrypted private message, which may be sent by client A.","In an embodiment, if the corresponding key does not exist in memory, key distribution manager  may send an error message to the key access requestor. A message relating to a potential unauthorized access of the encryption key can also be sent to the sender of the private message who is also the encryption key share requestor (e.g., client A). If the requestor is an intended recipient (e.g., client B or client C), the error message would be an indication to the recipient that an unauthorized access of the encryption key has occurred. In this case, the recipient can send a message confirming that an unauthorized access of the encryption key has taken place to the original sender\/share requestor.","In a case where the key access requestor may be an unintended or unauthorized recipient, it would be unlikely that such an unintended recipient would also have access to the encrypted private message, as the private message is sent separately to the intended recipients, and only after the intended recipients have each sent a receipt notification, as described above.","To minimize the probability of unauthorized access of the encryption key, encryption key manager  may delete the stored encryption key, share value, and key identifier from memory after a predetermined duration of time. The length of the duration of time may be predetermined by, for example, the user\/sender who is sending the private message or by the particular trusted third party providing key distribution service . It should be noted that the information stored by key distribution service  may be for any arbitrary user. This makes key distribution service  potentially vulnerable to distributed denial-of-service (DDoS) attacks. For example, an attacker may flood key distribution service  with a large number of fake \u201cshare\u201d requests, which may result in key distribution service  having to devote computing resources to the storage of unnecessary garbage information. To mitigate such an attack, key distribution service  can choose to delete the information stored after a certain duration (e.g., one hour) has elapsed regardless of whether the information is accessed or not.","In an embodiment, key distribution manager  uses the share value to control the number of times the encryption key is accessed. For example, if the share value is only two (e.g., corresponding to two recipients, client B and client C), encryption key manager  will delete the information corresponding to the share request, including the encryption key and key identifier, from memory once the encryption key has been accessed or distributed by key distribution manager  to each of two requestors. For example, encryption key manager  may decrement the share value after each time the encryption key is distributed to a requestor by key distribution manager . Further, encryption key manager  may check the share value for each share access request in order to determine whether the current value of the share value is equivalent to zero. A zero share value signifies that the encryption key has been distributed as many times as was specified in the initial share request from the message sender, e.g., client A. Therefore, encryption key manager  can delete the encryption key and key identifier corresponding to a zero share value.","A person skilled in the relevant art given this description would appreciate that any of well-known methods may be used to track the number of times the encryption key has been distributed by key distribution manager . For example, encryption key manager  may use a separate counter value also associated with the share request (including the encryption key, key identifier, and share value). In an embodiment, the counter value may be initialized to zero upon receiving the share request and incremented by one each time the encryption key is distributed in response to a key access request.","In an embodiment, encryption key manager  can be configured to compare the stored share value with the associated counter value and further configured to send an appropriate response based on the comparison. Key distribution manager  may distribute the encryption key to the requestor only when the counter value is less than the share value. In a further embodiment, encryption key manager may delete the stored association of the share value, encryption key, key identifier, and counter value when the counter value is equivalent to the share value.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 4","FIG. 1","FIGS. 1 and 2"],"b":["400","400","100","115"]},"Method  begins in step , in which a new encryption key is generated. The encryption key may be generated in response to a request from a user to send a private message or communication to one or more recipients, as described above. Step  may be performed by, for example, key generator  of , as described above. The generated encryption key may be used to encrypt the private message. Method  then proceeds to step , which includes generating a share value corresponding to the number of recipients of the private communication\/message.","In step , a share request including the generated encryption key (step ) and the generated share value (step ) is transmitted to a trusted third party. As described above, the share value may be used by the trusted third party to control the number of times the encryption key is distributed to various requestors, who should be the recipients of the private message who need to decrypt the encrypted private message. In step , a key identifier is received from the trusted third party based on the share request transmitted in step . Steps , , and  may be performed by, for example, share request generator  of , as described above.","In step , the key identifier that was received from the trusted third party (step ) is sent to the intended recipients of the private message (and the encryption key). Method  then proceeds to step , which includes waiting for notification of receipt of the encryption key from the intended recipients of the message and encryption key. In step , it is determined whether such notification has been received from all of the intended recipients. For example, the waiting in step  may occur only for a predetermined duration of time. If the notification has been received, method  can proceed to step , in which the encrypted private message is sent to the intended recipients. Method  concludes after step . Otherwise, if the notification has not been received, method  proceeds to step  in which the encryption key is discarded and method  proceeds back to step , in which a new encryption key is generated. The steps of method  can therefore be repeated if the notification has not been received from each of the intended recipients of the private message (e.g., within a predetermined period of time). These steps may also be repeated if an error message or unauthorized access notification is received from any of the recipients instead of the receipt notification. Steps , , , , and  may be performed by, for example, verification unit  of , as described above.","An advantage of method  is that it provides a way for the sender and recipients to verify whether an unauthorized access has occurred and\/or whether the encryption key has been leaked. The parties to the transaction can then take the necessary precautionary measures to ensure that any further unauthorized accesses and\/or loss of confidential information does not occur.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 1","FIGS. 1 and 3"],"b":["500","500","100","135"]},"In an example, the steps of method  may be performed by a trusted third party service (e.g., key distribution service  of , as described above). Method  begins in step , in which a share request is received from a share requestor. The share requestor is the party that wishes to send the private message (e.g., client A of , as described above). The share request may include an encryption key and a share value. The share value specifies the number of times the encryption key may be distributed. Step  may be performed by, for example, share request manager  of , as described above. Method  then proceeds to step , which includes generating a unique key identifier for the encryption key. In step , the generated key identifier is associated with the encryption key and the share value corresponding to the received share request. The association including the encryption key, the share value, and key identifier are stored in memory. Steps  and  may be performed by, for example, encryption key manager  of , as described above.","Method  then proceeds to step  in which the generated key identifier is sent to the share requestor (the sender of the private message). Step  may be performed by, for example, share request manager  of , as described above. Once the steps of method  have been performed by the trusted third party service (e.g., key distribution service  of , as described above), the trusted third party service may then proceed to method  of , as described below.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 6","FIG. 1","FIGS. 1 and 3"],"b":["600","600","100","135"]},"Method  begins in step , which includes receiving a key access request from a key requestor. The key access request may include a key identifier (e.g., the key identifier generated in step  of method , as described above). The key requestor may be a recipient of the private message who, in response to receiving the key identifier from the sender of the private message, sends the key access request to the trusted third party key distribution service (e.g., key distribution service  of , described above). Step  may be performed by, for example, share request manager  of , as described above. Method  then proceeds to step , which includes checking for the encryption key associated with the key identifier in memory (e.g., in database  of system , shown in  and described above).","In step , if it is determined that the key exists in memory, method  proceeds to step . However, if it is determined in step  that the key does not exist in memory, method  proceeds to step , in which an error message for the non-existent key is sent to the key requestor (from step ). For example, the encryption key may not be in memory because it was deleted from memory after being distributed a number of times equivalent to the share value (as in step  of method , discussed below).","If the encryption key is present in memory, the stored encryption key and the share value associated with the key identifier are retrieved from memory in step . Step  may be performed by, for example, encryption key manager  of , as described above. In step , the retrieved encryption key is sent to the key requestor. Step , , , and  may be performed by, for example, key distribution manager  of , as described above. After step  is performed, method  proceeds to step  of method  of , discussed below.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 7","FIG. 3","FIG. 1","FIGS. 1 and 3"],"b":["700","700","135","700","100","135","700"]},"Method  begins after step  of method , discussed above, in step , which includes decrementing the retrieved share value (step ). In step , it is determined whether the new share value after being decremented is equivalent to zero. If the new share value is not equivalent to zero, method  proceeds to step , which includes storing the new share value in memory (thereby replacing the old share value associated with the encryption key and key identifier in memory). If it is determined in step  that the new share value is equivalent to zero, then method  proceeds to step , which includes deleting the key and the share value associated with the initial share request (sent from the original share requestor, i.e., sender of the private message) from memory. Steps , , , and  may be performed by, for example, encryption key manager  of , as described above.","A person skilled in the relevant art given this description would appreciate that another method may be used by the trusted third party service to track the number of times the encryption key has been distributed in place of method . For example, a separate counter value also associated with the share request (including the encryption key, key identifier, and share value) may be used, as described above. In an embodiment, the counter value may be initialized to zero upon receiving the share request and incremented by one each time the encryption key is distributed in response to a key access request. In an embodiment, the counter value can be compared to the stored share value and an appropriate response may be sent based on the comparison. For example, the encryption key may be distributed to the key access requestor only when the counter value is less than the share value. Alternatively, if the counter value is equivalent to the stored share value associated with a key identifier and encryption key, the stored encryption key and any associated information, including the share value, the key identifier, and counter value may be deleted from memory. The advantage of using the alternative method may be that the original share value remains unchanged, as only the counter value is changed after each time the encryption key is distributed.","Embodiments shown in , or any part(s) or function(s) thereof, may be implemented using hardware, software modules, firmware, tangible computer readable media having instructions stored thereon, or a combination thereof and may be implemented in one or more computer systems or other processing systems.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 8","FIGS. 1 and 2","FIGS. 1-7"],"b":["800","110","800"]},"If programmable logic is used, such logic may execute on a commercially available processing platform or a special purpose device. One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations, including multi-core multiprocessor systems, minicomputers, mainframe computers, computer linked or clustered with distributed functions, as well as pervasive or miniature computers that may be embedded into virtually any device.","For instance, at least one processor device and a memory may be used to implement the above described embodiments. A processor device may be a single processor, a plurality of processors, or combinations thereof. Processor devices may have one or more processor \u201ccores.\u201d","Various embodiments of the invention are described in terms of this example computer system . After reading this description, it will become apparent to a person skilled in the relevant art how to implement embodiments of the present invention using other computer systems and\/or computer architectures. Although operations may be described as a sequential process, some of the operations may in fact be performed in parallel, concurrently, and\/or in a distributed environment, and with program code stored locally or remotely for access by single or multi-processor machines. In addition, in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.","Processor device  may be a special purpose or a general purpose processor device. As will be appreciated by persons skilled in the relevant art, processor device  may also be a single processor in a multi-core\/multiprocessor system, such system operating alone, or in a cluster of computing devices operating in a cluster or server farm. Processor device  is connected to a communication infrastructure , for example, a bus, message queue, network, or multi-core message-passing scheme.","Computer system  also includes a main memory , for example, random access memory (RAM), and may also include a secondary memory . Secondary memory  may include, for example, a hard disk drive , removable storage drive . Removable storage drive  may comprise a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash memory, or the like. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well known manner. Removable storage unit  may comprise a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art, removable storage unit  includes a computer usable storage medium having stored therein computer software and\/or data.","In alternative implementations, secondary memory  may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include, for example, a removable storage unit  and an interface . Examples of such means may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  may also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Communications interface  may include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card, or the like. Software and data transferred via communications interface  may be in the form of signals, which may be electronic, electromagnetic, optical, or other signals capable of being received by communications interface . These signals may be provided to communications interface  via a communications path . Communications path  carries signals and may be implemented using wire or cable, fiber optics, a phone line, a cellular phone link, an RF link or other communications channels.","In this document, the terms \u201ccomputer program medium\u201d and \u201ccomputer usable medium\u201d are used to generally refer to storage media such as removable storage unit , removable storage unit , and a hard disk installed in hard disk drive . Computer program medium and computer usable medium may also refer to memories, such as main memory  and secondary memory , which may be memory semiconductors (e.g. DRAMs, etc.).","Computer programs (also called computer control logic) are stored in main memory  and\/or secondary memory . Computer programs may also be received via communications interface . Such computer programs, when executed, enable computer system  to implement embodiments as discussed herein. In particular, the computer programs, when executed, enable processor device  to implement the processes of embodiments of the present invention, such as the stages in the methods illustrated by flowcharts , , , and  of , , , and , respectively, discussed above. Accordingly, such computer programs represent controllers of the computer system . Where embodiments are implemented using software, the software may be stored in a computer program product and loaded into computer system  using removable storage drive , interface , and hard disk drive , or communications interface .","Embodiments of the invention also may be directed to computer program products comprising software stored on any computer useable medium. Such software, when executed in one or more data processing devices, causes a data processing device(s) to operate as described herein. Embodiments of the invention employ any computer useable or readable medium. Examples of computer useable mediums include, but are not limited to, primary storage devices (e.g., any type of random access memory), secondary storage devices (e.g., hard drives, floppy disks, CD ROMS, ZIP disks, tapes, magnetic storage devices, and optical storage devices, MEMS, nano-technological storage device, etc.), and communication mediums (e.g., wired and wireless communications networks, local area networks, wide area networks, intranets, etc.).","As would be understood by a person skilled in the art based on the teachings herein, several variations of the above described features of sending private messages in an unsecured communication network can be envisioned. These variations are within the scope of embodiments of the present invention. For example, one skilled in the art can envision several variations to the generation and distribution of encryption keys as described in methods , , , and  of , , , and , respectively (e.g., using share request manager , key generator , encryption key manager , and key distribution manager  of key distribution service , shown in  and described above). For the purpose of illustration only and not limitation, one variation is provided herein.","For example, a variation may include using multiple key distribution service providers to distribute the encryption key as specified by the sender of a private message or communication. Each service provider may be a separate and distinct trusted third party. As described above, the sender of the private message (e.g., client A, particularly client application  of client A, shown in  and described above with respect to ) also sends the original request to share the encryption key to one or more recipients of the private message.","In an example, three different encryption keys (e.g., keys K, K and K) may be generated (e.g., either by key generator  of client application  of  or by a key generator  of key distribution service , as described above). The sender can use a first trusted third party key distribution service to distribute K, a second trusted third party key distribution service to distribute K, and a third trusted third party key distribution service to distribute K. As will be described further below, the multiple service providers can be combined to essentially form a single trusted third party. The sender (or one of the trusted third party services) may then encrypt the private message using an encryption key K derived by combining the three encryption keys. For example, the single encryption key K may be derived using the following formula: K=K\u2295K\u2295K.","The intended recipients of the message can request each encryption key (K, K and K) from the appropriate trusted third party (as occurs in step  of method  of , described above). Once the recipient(s) receive all three encryption keys, each recipient can construct the encryption key K by computing the XOR of the three keys, as in the above-noted formula. Thus, as long as at least one of the trusted third parties follows the key distribution protocol (e.g., as described in methods , ,  and  of , , , and , respectively), then at least one key among K, K and K is safely distributed to the intended recipients without being leaked. In this regard, an attacker would not be able to construct K even if the attacker obtained the other two keys. This significantly minimizes the risk of unauthorized access. To minimize the risk even further while increasing the trustworthiness of the combined third party, additional service providers may be used to distribute different encryption keys as necessary.","It is noted that the formula described above, including the use of the XOR operation, to combine the different encryption keys is provided for illustrative purposes only and embodiments are not limited thereto. It would be apparent to a person skilled in the relevant art given this description that other well-known methods may be used to combine different encryption keys in order to generate the single key.","The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way.","Embodiments of the present invention have been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.","The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can, by applying knowledge within the skill of the art, readily modify and\/or adapt for various applications such specific embodiments, without undue experimentation, without departing from the general concept of the present invention. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.","The breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["Embodiments are described, by way of example only, with reference to the accompanying drawings. In the drawings, like reference numbers may indicate identical or functionally similar elements. The drawing in which an element first appears is typically indicated by the leftmost digit or digits in the corresponding reference number.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
