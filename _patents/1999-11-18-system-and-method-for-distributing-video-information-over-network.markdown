---
title: System and method for distributing video information over network
abstract: A system and method to adaptively control a process of distributing video information over a network. Each client data terminal subscribing to video services has a performance level reporting unit which sends a performance level message Da indicating what resources and computing power the terminal has. Each terminal also has an error status monitor which sends an error status message De. A video coder produces coded data Dc by coding source video signals, based on the received performance level messages Da and error status messages De. The traffic of this coded data Dc is dynamically varied by a dynamic traffic controller, and a distribution unit transmits the resultant video stream Di over the network, using IP multicasting techniques. A video decoder in each client terminal adaptively decodes the received video stream Di.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06986158&OS=06986158&RS=06986158
owner: Fujitsu Limited
number: 06986158
owner_city: Kawasaki
owner_country: JP
publication_date: 19991118
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates to a video data distribution system and method, and more particularly to a system and method for distributing video information to a plurality of client data terminals over a network.","2. Description of the Related Art","Remote video monitoring systems have been used to continuously watch one or more objects of interest for certain purposes, e.g., to protect environments or to detect a sign of natural disasters. Typically, dedicated central monitoring facilities equipped with multiple video monitor units are provided to enable centralized monitoring of target objects under observation.","On the other hand, there are such demands that video images of remote objects be accessed through a network from locations other than the dedicated central facilities. This is motivated by the recent advancement of high-performance personal computers (PCs), which has made it possible for general users to enjoy high-speed computing (including video processing) with extremely powerful CPUs and rich memory resources. An increasingly large number of PCs are used today, many of which are linked to each other as Intranet or local area network (LAN) clients. Such a PC network may serve as a suitable infrastructure for sharing remote video information by many users. With appropriate video distribution capabilities implemented on LAN environments, it would be possible for PC users to conveniently make access to remote object images at any time, without using dedicated monitoring facilities.","However, most existing LANs are not suitable for the above-described usage because they are designed basically to transfer computer programs and data files, rather than to convey multimedia traffic which requires much wider bandwidths. In addition, the existing PCs vary greatly in processing power, depending on the date of their deployment.","To deliver video information over a LAN, conventional transmission systems use point to point connections established between a video server and a plurality of client PCs. Intraframe coding algorithms such as Motion JPEG are mainly employed in those conventional systems, along with simple frame subsampling techniques to reduce bitrates. These conventional video transmission techniques, however, have several drawbacks as described below.","First, conventional techniques use connection-oriented communication services, the performance of which depends on total message traffic on the LAN being used. For this reason, only a limited number of client PCs can make simultaneous access to the video source.","Another drawback is that intraframe coding provides too low video compression ratios. In a network environment with a limited transmission bandwidth, insufficient compression would cause unnatural visual effects on the reproduced video, particularly in such a scene that includes rapid motions. Because of this drawback, the conventional systems may not be able to satisfy the user requirements concerning picture quality.","Still another problem with the conventional systems may become apparent in such a situation where both high-performance PCs and low-performance PCs coexist on a single LAN environment. High-performance PCs can decode and display video pictures at a high frame rate, taking advantage of their powerful CPUs, whereas low-performance PCs can only do the same job at limited rates because of their less-capable CPUs. If a high rate video bitstream is broadcast to such non-uniform clients over the network, the low-performance PCs would only be able to reproduce poor video images, or in extreme cases, they would yield nothing. Broadcasting a low rate video bitstream, on the other hand, may not disrupt the decoding operation of low-performance PCs. However, this certainly shuts the high-performance PCs out of the chance to demonstrate their advantages.","In addition to indifference toward the above-described heterogeneity of PC clients in terms of video processing performance, the conventional video broadcasting techniques fail to provide effective measures to deal with transmission errors, which a client PC may encounter during the reception of a coded video stream.","Taking the above into consideration, an object of the present invention is to provide a system which adaptively controls a process of delivering video information.","To accomplish the above object, according to the present invention, there is provided a system for delivering video information over a network. This system comprises a video data distribution unit and a plurality of data terminals. The video data distribution unit comprises the following elements: a video coder which produces coded data by encoding source video signals based on performance level messages and error status messages; a dynamic traffic controller which dynamically controls traffic of the coded data, thereby producing a video stream for distribution; and a video distribution unit which distributes the produced video stream over the network. On the other hand, each of the data terminals comprises the following elements: a performance level reporting unit which evaluates the performance of the data terminal itself and sends a performance report message to indicate the performance; an error status monitor which monitors error status of the data terminal and sends an error status message to the video data distribution unit when an error is detected; and a video decoder which adaptively decodes the video stream delivered thereto.","Another object of the present invention is to provide a method which adaptively controls a process of delivering video information.","To accomplish this second object, according to the present invention, there is provided a method of delivering video information to a plurality of data terminals over a network. This method comprises the following steps: (a) sending a performance level message from each data terminal to indicate performance of the sending data terminal itself; (b) sending an error status message from each data terminal when the sending data terminal encounters an error; (c) producing coded data by encoding source video signals, based on information contained in the performance level messages and error status messages received from the data terminals; (d) producing a video stream by dynamically controlling traffic of the coded data; (e) distributing the produced video stream to the data terminals over the network; and (f) adaptively decoding the received video stream at the data terminals.","The above and other objects, features and advantages of the present invention will become apparent from the following description when taken in conjunction with the accompanying drawings which illustrate preferred embodiments of the present invention by way of example.","Preferred embodiments of the present invention will be described below with reference to the accompanying drawings.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 1","b":["1","10","20","20","1"],"i":["a ","n"]},"The video data distribution unit  comprises: a video coder , a dynamic traffic controller , and a distribution unit . The video coder  produces coded data Dc by coding given source video signals on the basis of performance level messages Da and error status messages De sent from the data terminal to . The video coder  actually uses high compression coding algorithms such as H.261, an ITU-T recommendation for video coding. The dynamic traffic controller  dynamically varies the traffic of coded data Dc, as will be described in detail later. The distribution unit  distributes the resultant video stream Di over the network N, using IP multicasting techniques.","For simplicity, the plurality of data terminals to are collectively referred to by a simple reference numeral \u201c20\u201d with no suffix. Each data terminal  comprises a performance level reporting unit , an error status monitor , and a video decoder . The performance level reporting unit  evaluates the performance of the data terminal  itself, and produces a performance level message Da for notification. More specifically, this performance level message Da carries system information regarding what resources the data terminal  actually has. Optionally, it may include the result report of appropriate benchmark tests.","The error status monitor  monitors error status of the data terminal . When an error is detected during the reception of a video stream Di, the error status monitor  sends an error status message De to the video data distribution unit . The video decoder  is a software decoder which adaptively reproduce video pictures from the received video stream Di. The decoded video signal is then fed to a monitor of the data terminal , allowing the terminal user to view the reproduced video pictures.","Although  does not explicitly shows it, the video data distribution unit  further comprises a program data sending unit which provides information on what video program is being distributed or will be distributed. Upon power-up, every data terminal  obtains this information from the program data sending unit.","The video coder  has two operation modes: interframe coding mode and intraframe coding mode. Normally, the video coder  operates in interframe coding mode, in which it extracts and encodes only the difference between frames to provide higher frame refresh rates within a given transmission bandwidth. The video coder  switches its operation mode from interframe coding to intraframe coding, when there is a performance level message Da or error status message De that prompts the video coder  to do so. Intraframe coding is a coding technique which encodes a picture with no reference to any past or future frames, and the resulting frame is called an \u201cintra-coded frame.\u201d On the other hand, the term \u201cintraframe coding mode\u201d is used here to mean such an operation mode where an intra-coded frame is inserted into an interframe-coded video stream at predefined regular intervals.","Coding mode transitions may be initiated by some events, based on a predetermined mode selection strategy. One example of such events is when the performance level messages Da received from the data terminals  have revealed that there are less capable terminals whose processor performance is inferior to others. Upon detection of this specific situation, the video coder  switches its control to intraframe coding mode and then begins to insert intra-coded frames into its output video stream. While receiving both inter- and intra-coded frames, the video decoders  in the less-capable terminals selectively decode the intra-coded frames, thereby yielding a subsampled video stream. This subsampled frame decoding scheme only requires average computing power, allowing less-capable data terminals to reproduce the supplied video stream at a lower frame rate that is suitable for their performance levels. Simultaneously, the other data terminals decode all the frames contained in the received video stream Di because they have sufficient computing power to achieve this. They can display the video at the intended frame rate.","As explained above, the data terminals to on the network N may not necessarily be uniform in performance. The present invention, however, still allows them to decode the same video stream in different ways, taking full advantage of their computing power.","The coding mode also changes when the video data distribution unit  is informed of a particular class of errors including those related to the network N or data terminals . For instance, launching some additional applications in a data terminal  may cause temporary shortage of CPU resources, which sometimes leads to a program execution error. The video coder  is designed to change its operation mode from interframe coding mode to intraframe coding mode, if it is informed of intolerably frequent errors regardless of their individual causes.","In a typical implementation, all the data terminals  on the network N would migrate to the aforementioned subsampled frame decoding scheme, if the coding mode was changed due to error events. Alternatively, the subsampled frame decoding scheme may be applied only to a specific data terminal that identifies itself as the origin of the errors in question. Suppose, for example, that data reception errors are frequently observed only in the data terminal . The data terminal then changes its decoding mode, while the other terminals continue to decode all the provided frames as usual.","To summarize the above discussion, the proposed video data distribution system  is designed to perform video coding based on performance level messages Da and error status messages De received from the data terminals to . The output video stream Di is produced and distributed through a video traffic channel whose bitrate is determined dynamically. The video data distribution system  uses connectionless, IP multicasting techniques to distribute video information to multiple destinations, and for this reason, the number of destinations is less likely to be limited by the LAN traffic. While IP multicast services in general do not guarantee the quality of data transport, the video data distribution system  of the present invention compensates for this disadvantage by introducing the above-mentioned mechanism of adaptively controlling video data traffic in accordance with the performance levels and error status of individual data terminals to . In addition, the present invention makes it possible for the receiving data terminals to to choose a suitable decoding method, depending on their performance levels. Accordingly, high-performance terminals can reproduce quality pictures, making full use of their capabilities, while less capable terminals are still allowed to decode the same video stream by extracting intra-coded frames.","The next section will present a more specific system in which the video data distribution system  is implemented.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 2","FIG. 1","FIG. 1","FIG. 2"],"b":["100","101","102","11","12","101","13","102","101","30","30","1","30","30","101","30","30"],"i":["a ","n ","a ","n ","a ","n "]},"The video switching & coding unit  is also connected to another network n (e.g., I.431 network with a bandwidth of 1.5 Mbps) to communicate with another group of codecs to (e.g., H.320 codecs for videoconferencing) available on it. Alternatively, those codecs to may be linked directly to the video switching & coding unit . As with the aforementioned codecs to , the codecs to may also be coupled to video cameras and monitor units, although  does not show them.","The video switching & coding unit  performs switching and coding of source video data received through the networks n and n, and passes the resultant video streams to the video distribution server  via the high-speed bus. The video distribution server  is linked to the routers to and PCs to through a still another network N, which is typically a local area network (LAN). The routers to used in this system are dialup routers which connect the LAN N with a telephone network N. This telephone network N may be an ISDN network or a wireless personal communications network, including cellular and cordless telephone systems, for example.  illustrates a few pieces of subscriber equipment on the network N, which include a desktop PC with a modem and a cellular handset -, while not showing, for simplicity, base stations and other equipment necessary for mobile radio communications. The cellular handset - serves here as a radio link interface allowing a mobile PC to make access to the network N.","With the above system configuration, the video switching & coding unit  encodes source video signals, and the video distribution server  distributes the resultant video streams to their ultimate destinations, i.e., the home PC and mobile PC . It should be noted, however, that a bottleneck can be found somewhere on the network paths from the video switching & coding unit  to the client PCs. The routers to , for instance, may be a dominant factor in system performance. If the presence of such a bottleneck is known in advance, the dynamic traffic controller  makes a necessary adjustment not to direct too much traffic to that particular path.","As described above, the dynamic traffic controller  dynamically changes the video data traffic on each transmission path to distribute video information derived from a single video source. With this dynamic traffic control, the proposed system can distribute each single video stream to remote clients via a plurality of transmission paths having different bandwidths.","Referring now to , the next section will describe the transmission data format of coded data Dc, which is supplied from the video coder  to the dynamic traffic controller  and then to the distribution unit . As  shows, eight consecutive transmission data frames form a single unit of video stream, starting with a frame S and ending with a frame S. Note that the labels \u201cS\u201d to \u201cS\u201d actually refer to the framing bits, while the same labels are used here to distinguish between individual transmission frames. That is, framing bits S to S are the first bits of the eight consecutive transmission frames, and the following particular bit pattern of S to S indicates a valid frame alignment.\n\n","Each transmission frame consists of the following fields: a single framing bit Sn (n=1, 2, . . . 8) for frame synchronization; a 493-bit data field, including a single flag bit; and a 18-bit error correction parity information field. The first bit of the data field is allocated to a flag that indicates whether the data field contains true coded data or fill-bit stuffing. More specifically, when the flag is set to one, the remaining 492-bit data field contains a part of the coded data Dc. When the flag is set to zero, the remaining data bits are filled with ones, hence \u201cfill bits.\u201d The recipients use the 18-bit error correction parity information to make sure the validity of the received bitstream, as well as correct errors if detected.","Referring now to , the next section will describe dynamic traffic control functions provided by the dynamic traffic controller . The dynamic traffic controller  determines a rate multiplier for varying the effective transfer rate of coded data Dc to dynamically control the video data traffic which will spend some network bandwidth.  present several different patterns of coded data Dc processed by the dynamic traffic controller  with successively smaller rate multipliers. More specifically,  shows a case where the rate multiplier is set to \u00bd;  shows a case where the rate multiplier is set to \u00bc;  shows a case where the rate multiplier is set to \u215b.","Referring first to , the dynamic traffic controller  uses four transmission frames S, S, S, and S to convey the coded data Dc, while stuffing fill bits into the other four transmission frames S, S, S, and S. This interleaved pattern reduces the effective transfer rate to one half the original rate.","Referring next to , the dynamic traffic controller  uses only two transmission frames S and S to convey the coded data Dc, while stuffing fill bits into the other six transmission frames S, S, S, S, S, and S. This reduces the effective transfer rate to one quarter the original rate.","Referring now to , the dynamic traffic controller  uses only the first transmission frame S to carry the coded data Dc, while stuffing fill bits into all the remaining transmission frames S, S, S, S, S, S, and S. This reduces the effective transfer rate to one eighth the original rate.","In the way described above, the dynamic traffic controller  varies the effective transfer rate of coded data Dc to dynamically control the video data traffic. With this capability, the proposed system efficiently manages the usage of available network bandwidth. There are several possible factors that may affect the rate multiplier. They are: supervisory events sent from the supervisor's console, network events sent from network monitoring facilities, and client events sent from data terminals. The rate multiplier is derived from one or more of those external events as will be described later.",{"@attributes":{"id":"p-0065","num":"0065"},"figref":"FIG. 7","b":"12","ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["(S) The dynamic traffic controller  checks whether the rate multiplier has been changed. If a new rate multiplier is given, the process advances to step S. Otherwise, the process proceeds to step S.","(S) The dynamic traffic controller  obtains two count parameters corresponding to the new rate multiplier value. These parameters are integers to be preset to two down counters called a \u201cgenuine data counter\u201d and a \u201cfill-bit data counter.\u201d","(S) The dynamic traffic controller  loads the counter preset values to the genuine data counter and fill-bit data counter.","(S) If the genuine data counter value is still greater than zero, the process advances to step S. If it has reached zero, the process proceeds to step S.","(S) When a transmission frame containing coded data Dc is sent out to the distribution unit , the dynamic traffic controller  decrements the genuine data counter by one. The process then returns to step S.","(S) If the fill-bit data count value is still greater than zero, the process advances to step S. If it has reached zero, the process returns to step S.","(S) When a transmission frame containing fill bits is sent out to the distribution unit , the dynamic traffic controller  decrements the fill-bit data counter by one. The process then returns to step S."]}}}},"Repeating the above-described steps, the dynamic traffic controller  produces a series of transmission frames, in which the coded data Dc is interleaved with as many fill-bit frames as specified by a given rate multiplier. The produced signal is then supplied to the distribution unit .","Referring now to , the operation of the distribution unit  will be described below. In short, the distribution unit  removes fill bits from the received video stream and distributes the resultant video stream Di over the network.  is a flowchart showing this video distribution process, which comprises the following steps.\n\n","As described in , the dynamic traffic controller  is designed to insert fill-bit frames into coded data Dc to vary its effective transfer rate, and the distribution unit  is configured to remove the fill-bit frames and distribute the resultant video stream Di. This arrangement adaptively controls video data traffic, making it possible to deliver video services more efficiently.","Referring next to , the following section will describe the performance level reporting unit  implemented in each data terminal .","The performance level reporting unit  is responsible for reporting what computing resources the data terminal  owns and\/or how high benchmark scores it achieves with them. This information is to be sent to the video data distribution unit  in the form of performance level messages Da. Appropriate benchmark tests indicate the total performance of the data terminal , reflecting the ability of individual, and combinations of, computing resources.  is a flowchart which explains a process to report what computing resources the data terminal  has. The performance level reporting unit  executes this process according to the following steps.\n\n",{"@attributes":{"id":"p-0071","num":"0088"},"figref":"FIG. 10","b":"21","ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":{"@attributes":{"id":"ul0009-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":["(S) The process advances to step S if benchmark scores are found in the database, and if they are appropriate for performance level messages Da. Otherwise, the process proceeds to step S.","(S) The performance level reporting unit  retrieves the benchmark scores from the database. The process then skips to step S.","(S) The performance level reporting unit  initiates a predetermined set of benchmark tests. The tests include, for example, such a program that replays locally a fixed-length video clip file stored in a hard disk. The execution time is measured and saved as a benchmark score.","(S) The test results are entered to the database.","(S) The performance level reporting unit  sends to the video data distribution unit  a performance level message Da containing the benchmark scores."]}}}},"The next section will describe the error status monitor  implemented in each data terminal .  is a flowchart which shows a process to send error status information. The error status monitor  executes this process according to the following steps.\n\n","In the above process, the error status monitor  sends an error status message De when it encounters intolerably frequent errors. Alternatively, it can be configured to send an error status message De every time it finds an error. In this case, the video data distribution unit  would count errors and determine whether to take action or just wait and see the situation.","The next section will provide explanation of a video coding process.  is a flowchart which shows a video coding process programmed to insert an intra-coded frame every two seconds. The video coder  executes this process according to the following steps.\n\n","The next section will describe the operation of the video decoder  implemented in each data terminal .  is a flowchart showing a video decoding process, which comprises the following steps.\n\n","The next section will describe the details of events which may affect the decision of rate multiplier values in dynamic traffic control.  shows that events are categorized into the following three groups: supervisor events E, network events E, and client events E. The following provides more about these event classes.","Supervisor events E occur when a specific request is received from the supervisor's remote console (not shown), which is coupled to the video data distribution unit . This event group specifies how to operate the video data distribution unit , such as \u201cOperate with initial setup,\u201d \u201cOperate with remote console intervention,\u201d \u201cOperate with adaptive control scheme.\u201d The first event \u201cOperate with initial setup\u201d directs the video data distribution unit  to control video data traffic in a fixed manner, on the basis of an initially given bitrate (e.g., 10 Mbps). The second event \u201cOperate with remote console intervention\u201d requests the video data distribution unit  to vary video data traffic according to instructions from the remote console. The third event \u201cOperate with adaptive control scheme\u201d permits the dynamic traffic controller  to autonomously determines the rate multiplier to control video data traffic.","Network events E direct the video data distribution unit  to control traffic such that the current status of the network N () be reflected. This event group includes \u201cUse network monitor information\u201d and \u201cUse error statistics,\u201d for example. The first event \u201cUse network monitor information\u201d requests the video data distribution unit  to use the information about the network N provided from a network monitor, if available. The second event \u201cUse error statistics\u201d requests the video data distribution unit  to operate on the basis of statistical analysis on error instances, or error status messages De.","Client events E are related to the policy of handling requests from client PCs, or data terminals . This class of events include: \u201cFollow first-enrolled client PC,\u201d \u201cFollow last-enrolled client PC,\u201d \u201cFollow highest-performance client PC,\u201d and \u201cFollow minimum-requirement client PC.\u201d The first event \u201cFollow first-enrolled client PC\u201d directs the dynamic traffic controller  to control in accordance with the performance of a specific client PC that has enrolled earlier than any other clients. Likewise, the second event \u201cFollow last-enrolled client PC\u201d directs the dynamic traffic controller  to follow the performance of the last-enrolled client PC. The third event \u201cFollow highest-performance client PC\u201d directs the dynamic traffic controller  to follow a specific client PC that has the powerful CPU. The fourth event \u201cFollow minimum-requirement client PC\u201d requests the dynamic traffic controller  to set the video data traffic according to the lowest bitrate among those specified by client PCs. It should be noted here that the above events also affect the coding mode selection strategies.",{"@attributes":{"id":"p-0080","num":"0116"},"figref":["FIGS. 15 and 16","FIG. 15","FIG. 16"],"b":["10","10","10","10"]},{"@attributes":{"id":"p-0081","num":"0117"},"figref":["FIG. 17","FIGS. 3 to 6","FIG. 17"]},"Referring now to a flowchart of , the following section will describe how the video data traffic and coding mode are determined on the basis of various events notified. This process comprises the following steps.\n\n","Referring next to , the dynamic traffic control of step S will be described below by way of example.  illustrates how the dynamic traffic controller  responds to detected errors, in which the vertical axis shows the traffic level and the horizontal axis the time. The video data distribution unit  starts with the initial traffic level Tr. At time t, it experiences a burst of errors which strike more than 50 percents of client PCs. In response to this burst, the dynamic traffic controller  reduces the traffic level to the second level Tr. At time t, the video data distribution unit  is informed of another error burst from more than 50 percents of client PCs, and accordingly, the dynamic traffic controller  further reduces the traffic level from Tr to Tr.","Meanwhile, the dynamic traffic controller  has a recovery timer to determine whether to restore the former traffic level. This recovery timer, having a time constant Rt, is triggered at time t, and its first expiration at time (t+Rt) allows the dynamic traffic controller  to raise the traffic level from Tr to Tr. In a similar manner, the second expiration of the recovery timer brings the traffic level back to the initial level Tr at time (t+2Rt).","Referring next to , the details of the dynamic traffic control called at step S () will be described below.  is a flowchart of a traffic control process when the dynamic traffic controller  is directed to follow the first-enrolled client PC. This process comprises the following steps.\n\n","Referring next to , the details of the dynamic traffic control called at step S () will be described below.  is a flowchart of a traffic control process when the dynamic traffic controller  is directed to follow the highest-performance client PC. This process comprises the following steps.\n\n","Referring next to , the details of the dynamic traffic control called at step S () will be described below.  is a flowchart of a traffic control process when the dynamic traffic controller  is directed to follow the client with a minimum traffic requirement. This process comprises the following steps.\n\n","Referring next to a flowchart of , a video distribution method of the present invention will be described below. The proposed method comprises the following steps.\n\n","Preferably, the coding of video data at this step S is performed in either of two operation modes. One is interframe coding mode, in which differences between video frames are detected and encoded. The other is intraframe coding mode, in which an intra-coded frame is periodically inserted into an interframe coded video stream.","If the received performance level messages indicate that there is a member data terminal with insufficient performance, the coding will be performed preferably in intraframe coding mode.","Also, when the error status messages indicate intolerably frequent errors, the coding will be performed preferably in intraframe coding mode.\n\n","The above discussion will now be summarized as follows. According to the present invention, the proposed system and method are designed to perform video coding based on performance level messages Da and error status messages received from data terminals. The output video stream is distributed through a dynamically assigned video traffic channel. The receiving data terminals reproduce video pictures by decoding the delivered video stream adaptively to their own performance levels and error status. This permits the video data distribution unit to deliver video information in a more flexible manner, taking into consideration the clients' performance levels and error statistics, along with network traffic suitable for the environment.","Although the above description of the preferred embodiment have been focused on the distribution of video information, it is not intended to limit the invention to this particular data type. Rather, it should be appreciated that the invention can apply to multimedia communications, including distribution of video, voice, data, and any combinations of them.","The foregoing is considered as illustrative only of the principles of the present invention. Further, since numerous modifications and changes will readily occur to those skilled in the art, it is not desired to limit the invention to the exact construction and applications shown and described, and accordingly, all suitable modifications and equivalents may be regarded as falling within the scope of the invention in the appended claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIGS. 15 and 16"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 18 to 20"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 25"}]},"DETDESC":[{},{}]}
