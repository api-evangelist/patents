---
title: Method and system for content conversion of hypertext data using data mining
abstract: Method and system for content conversion of electronic data using data mining. A user is able select one or more hypertext elements from one or more hypertext electronic document for conversion based on user conversion preferences. For example, a user selects one or more display elements from one or more “web-pages” from the World-Wide-Web on the Internet or an intranet. The hypertext elements are extracted from one or more hypertext electronic documents and converted into a format suitable for display on a user device based on user conversion preferences. Selected hypertext elements are extracted and converted using data mining conversion operations. The data mining conversion operations allow a user to extract only desired display information displayed from a hypertext element and convert the display information into a format different than that defined for the original electronic document. The converted display information is appropriate for a user device such as hand-held, wireless phone, personal digital assistant, or other device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06925595&OS=06925595&RS=06925595
owner: Spyglass, Inc.
number: 06925595
owner_city: Naperville
owner_country: US
publication_date: 19980805
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT AUTHORIZATION","FIELD OF INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["A portion of the disclosure of this patent document contains material, which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever.","This invention relates to computer networks. More specifically, it relates to a method and system for converting the content of electronic data for a desired network device using data mining.","The Internet is a world-wide network of interconnected computers. The World-Wide-Web is an information system on the Internet designed for electronic document interchange. Electronic documents on the World-Wide-Web are typically stored in files that include text, hypertext, references to graphics, animation, audio, video and other electronic data. The structure of hypertext documents is defined by document markup languages such as Standard Generalized Markup Language (\u201cSGML\u201d), Hyper Text Markup Language (\u201cHTML\u201d), eXtensible Markup Language (\u201cXML\u201d), Virtual Reality Markup Language (\u201cVRML\u201d) and others.","As is known in the art, a hypertext document includes markup codes called \u201ctags.\u201d Tags define the structure of a hypertext document and typically includes at least a \u201cbegin\u201d tag name enclosed by a delimiter and, in many instances, an \u201cend\u201d tag name enclosed by a delimiter. For example, the markup tag \u201c<H1>\u201d signifies the beginning of a Hyper Text Markup Language first level header, and the markup tag \u201c<\/H1>\u201d signifies the end of a Hyper Text Markup Language first level header. However, the Hyper Text Markup Language image tag \u201c<IMG . . . >\u201d ends with the closing tag delimiter \u201c>\u201d and does not use an end tag in the format \u201c<\\IMG>\u201d. Other markup languages have similar tags used to create hypertext documents.","Markup languages allow references to additional content besides text including graphics, animation, audio, video and other electronic data. The Hyper Text Markup Language allows use of graphical images in a hypertext document with an image \u201c<IMG>\u201d tag. For example, an exemplary Hyper Text Markup Language image tag <IMG SRC=\u201clogo.jpg\u201d> allows a graphical logo image stored in a Joint Pictures Expert Group file \u201clogo.jpg\u201d to be displayed.","Hypertext documents from the World-Wide-Web are typically displayed for a user with a software application called a \u201cbrowser\u201d such as Internet Explorer, by Microsoft Corporation of Redmond Wash., or Netscape Navigator, by Netscape Communications of Mountain View, Calif., and others. A browser typically parses a hypertext document and converts hypertext, including markup tags, into a visual display of text, graphics, animation, audio, video, etc., for display on a device such as a personal computer display.","Additional content is retrieved in a hypertext document from other sources using \u201chyperlink\u201d references within hypertext documents. For example, an exemplary Hyper Text Markup Language hyperlink tag \u201c<A HREF=\u201chttp:\/\/www.spyglass.com\/logo.mov\u201d>\u201d provides a hyperlink to a movie file \u201clogo.mov.\u201d When a user selects the link (e.g., with a mouse click) in a hypertext document, the movie file \u201clogo.mov\u201d is located using a Uniform Resource Locator (\u201cURL\u201d) from the location \u201cwww.spyglass.com.\u201d Hyper Text Transfer Protocol (e.g., \u201cHTTP\u201d) is used as the transfer protocol.","Transfer protocols such as Hyper Text Transfer Protocol (\u201cHTTP\u201d), File Transfer Protocol (\u201cFTP\u201d), Gopher, and others provide a means for transferring hypertext documents or additional content from other locations on the World-Wide-Web. Hyper Text Transfer Protocol is one primary protocol used to transfer information on the World-Wide-Web. Hyper Text Transfer Protocol is a protocol that allows users to connect to a server, make a hypertext request, get a response, and then disconnect from the server. File Transfer Protocol is a protocol that provides access to files on remote systems. Using File Transfer Protocol, a user logs onto a system, searches a directory structure and downloads or uploads a file. Gopher is a protocol similar to File Transfer Protocol. Gopher provides a series of menus linked to files containing actual hypertext.","Content providers on the World-Wide-Web provide custom content using attributes from markup language tags. For example, the Hyper Text Markup Language IMG tag includes the following attributes: ISMAP, a selectable image map; SRC, a source Uniform Resource Locator of an image; ALT, a text string used instead of an image; ALIGN, for alignment of an image (e.g., left, middle, right); VSPACE, the space between an image and the text above and below it; HSPACE, the space between and image and the text to its left or right; WIDTH, the width in pixels of an image; HEIGHT, the height in pixels of an image; and a few other attributes depending on the browser being used (e.g., BORDER and LOWSRC in a Netscape browser). In addition, other content attributes can be modified such as one of 256 colors (e.g., TEXT=\u201cblue,\u201d or TEXT=\u201c0xa6caf0\u201d for sky blue), font face (e.g., FONT FACE=\u201cTimes Roman\u201d), character formatting, (e.g., <B>text<\/B> for bold text), etc.","Most of the electronic documents developed for the World-Wide-Web assume that users will view the content of the electronic document with a browser on a desktop computer screen with a standard \u201cSuperVGA\u201d resolution (e.g., 800\u00d7600 pixel resolution with 256 or more available colors). A user can alter display of selected electronic  document content by changing browser attributes (e.g., color of text, size of text). However, the changeable content is limited by changeable attributes in a browser being used.","There are a number of problems with using electronic documents developed for the World-Wide-Web based on the assumption of viewing with standard \u201cSuperVGA\u201d resolution. A user with a hand-held computer, personal digital assistant (\u201cPDA\u201d) or other hand-held device, such as wireless phone, may desire to view electronic documents from the World-Wide-Web. However, most hand-held devices have a display with a resolution that is less than SuperVGA (e.g., less than 800\u00d7600 pixel resolution and less than 256 colors) and typically do not support color. Thus, the content of electronic documents will not be properly displayed and may be difficult to view based on the original hypertext content.","One solution is to store several versions of an electronic document for different devices. However, this often makes administration of the electronic documents very difficult. Multiple copies of electronic documents also waste a tremendous amount of storage space on electronic document servers on the World-Wide-Web. The dynamic nature of the World-Wide-Web also means that new content types are constantly being introduced. Multiple copies of existing electronic documents must be constantly manipulated.","Another solution is to provide content conversion applications to convert electronic documents to match the capabilities of a device or the preferences of a user. One purpose of converting electronic documents is to provide information to users in a format different from that provided by the initial electronic document provider. Examples include scaling images for a specific device with a small display or converting text to speech for a visually impaired user. Most content conversion applications depend on a user-device to render the electronic document being displayed. As a result, each hand-held device is required to have a copy of a desired content conversion application.","There have been attempts to provide content conversion applications for electronic documents for the World-Wide-Web. QuickWeb Technology, by Intel Corporation of Santa Clara, Calif., analyzes a hypertext document for graphic images and then compresses bits of image data so that the images can be transmitted faster to a user's device. QuickWeb Technology also caches images. After a user's first request, an image is cached by QuickWeb. Subsequent requests for the same image are delivered from the cached source instead of a remote content server. QuickWeb Technology is limited to converting images and currently does not allow conversion of other content information.","TranSend, by the University of California at Berkeley, Calif., provides a conversion proxy that converts images in an electronic document by reducing image quality. Although the resulting images are of a lower quality, an original image can also be recovered. The TranSend Proxy distills images for faster electronic document display from the World-Wide-Web. TranSend limits user configurations to turning the proxy on and off and reducing image quality for faster transmission. TranSend is also currently limited to converting images only and does not allow conversion of other information.","One aspect of content conversion of hypertext electronic documents allows one or more parts of a first hypertext electronic document to be selected for display in a second hypertext electronic document. For example, the Microsoft Network, by Microsoft Corporation of Redmond, Wash., allows a user to create a customized home page by selecting display items such as news, stock quotes, sports, weather and other information. The display items are retrieved from other hypertext electronic documents on the World-Wide-Web on the Internet and displayed by a browser in a pre-determined format on a customized home page.","However, to select hypertext content, short lists of display items that can be used to customize a home page are provided. For example, on a given network, a list of sports information sites may only include ESPN and MSNBC sports related sites. If it is desired to receive information from a Sports Illustrated sports information site and the site was not in the short list of display items provided to customize a home page, then information from the Sports Illustrated site could not be included on the customized home page.","To display selected customized content, browsers known in the art typically create a Document Object Model (\u201cDOM\u201d) representing elements in a hypertext electronic document (e.g., Hyper Text Markup Language elements). A hypertext element is a fundamental component of a structure of a hypertext electronic document. Hypertext elements typically are marked by selected start tags and end tags as was described above. Selected custom content is typically included in one or more hypertext elements.","Browsers known in the art typically do not create an entirely new hypertext electronic document when hypertext elements representing desired content are selected. Instead such browsers manipulate the selected hypertext elements obtained from another hypertext electronic document using Visual Basic Script (\u201cVBScript\u201d), JavaScript, or other scripting languages as the hypertext elements are displayed for a user. Dynamic Hypertext Markup Language (\u201cDHTML\u201d) by Microsoft has also been used to allow manipulation of selected hypertext elements. More information on Microsoft products can be obtained at the URL \u201cwww.microsoft.com.\u201d","Browser manipulation of hypertext elements typically requires additional processing power, memory, display capabilities for SuperVGA resolution and one or more script languages to display selected hypertext elements. As a result, browser manipulation of selected hypertext elements may not be appropriate for a hand-held device or other small device with limited processing power, limited memory or display capabilities of less than SuperVGA resolution. In addition, a hand-held device may only be capable of using a striped down version of a browser without enough functionality to properly manipulate selected hypertext elements.","Thus, it is desirable to provide selected hypertext elements in a format suitable for display on a user network device. The hypertext elements should be selectable from virtually any electronic document server on the World-Wide-Web on the Internet, an intranet or other network and converted for display on a user network device based on conversion preferences selected by a user.","In accordance with preferred embodiment of the present invention, some of the problems associated with display of selected hypertext elements are overcome. A method and system of content conversion using data mining is presented. In one preferred embodiment of the present invention, the content conversion method includes receiving a first hypertext electronic document on a second network device (e.g., a content converter) on a first network, from a third network device (e.g., an electronic document server) on a second network (e.g., World-Wide-Web on the Internet, or an intranet). A document object model is created from the first hypertext electronic document. One or more selected hypertext elements are extracted from the document object model using one or more data mining expressions from a data mining conversion language. One or more of the extracted hypertext elements are converted using one or more data mining operations from the data mining conversion language. A second hypertext electronic document is created on the second network device including one or more converted hypertext elements.","In one preferred embodiment of the present invention, the content conversion system includes a content converter, a document object model, a proxy server, and a data mining conversion language. The content converter converts a first hypertext electronic document into a second hypertext electronic document using a data mining conversion language. The document object model stores hypertext elements of a first hypertext electronic document. The proxy server communicates with multiple network devices making requests for first hypertext electronic documents, communicates with a content converter and with multiple electronic document servers on a network providing first hypertext electronic documents. The data mining conversion language with multiple data mining conversion expressions and multiple data mining conversion operations converts original hypertext elements into converted hypertext elements.","The method and system of a preferred embodiment of the present invention may allow virtually any hypertext elements to be selected from a hypertext electronic document. Selected hypertext elements are extracted and converted into a desired format suitable for display on a user device based on conversion preferences selected by a user and not generic conversion preferences provided to all users (e.g., one or more display items are selected from a \u201cweb-page,\u201d and the components are extracted and converted into a new display format based on conversion preferences specifically selected by a user).","The foregoing and other features and advantages of a preferred embodiment of the present invention will be more readily apparent from the following detailed description, which proceeds with references to the accompanying drawings.","Content Conversion System",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1","b":["10","10","12","12"]},"As is known in the art and is described above, an electronic document includes text, hypertext, graphical data or references to graphical data images, audio, video and other content. A hypertext document includes markup codes called \u201ctags.\u201d The structure of hypertext documents is defined by document markup languages such as Standard Generalized Markup Language (\u201cSGML\u201d), Hyper Text Markup Language (\u201cHTML\u201d), eXtensible Markup Language (\u201cXML\u201d), Virtual Reality Markup Language (\u201cVRML\u201d) and others. Markup languages also allow references to additional content besides text including graphics, animation, audio, video and other electronic data.","Also described above, electronic documents are typically displayed for a user with a software application called a \u201cbrowser.\u201d A browser on a hand-held device may be a sub-set of a larger browser, and not capable of displaying complete content of a requested electronic document as stored on an electronic document server. A browser typically reads an electronic document and renders the electronic document content into a visual display of text, graphics, animation, audio, video, etc., for display on a device such as a personal computer. Most electronic documents developed assume that users will view the content of the electronic document with a browser on a desktop computer screen with a standard \u201cSuperVGA\u201d resolution (e.g., 800\u00d7600 pixel resolution with 256 or more available colors). A user can alter display of selected content by changing browser attributes. However, the custom content for a user is limited by changeable attributes in the browser being used.","Returning to , a proxy server  services requests for electronic documents from the first network device  and sends converted electronic documents back to the first network device . A content converter  converts content of an electronic document to a format usable on the first network device  (e.g., a device with a smaller display). A database  stores conversion preferences.  illustrates a single database . However, multiple database components can also be used. A computer network  provides one or more electronic document servers for supplying electronic documents.","In a preferred embodiment of the present invention, the computer network  is the World-Wide-Web on the Internet. As is known in the art, the Internet is a world-wide network of interconnected computers. The World-Wide-Web is an information system on the Internet designed for electronic document interchange. However, other computer networks with electronic document servers could also be used (e.g., an intranet).  illustrates the content converter  as an individual component. However, the content converter  can also be integral to the proxy server  (not illustrated in FIG. ). A preferred embodiment of the present invention is not limited to the network components shown in the content conversion system  and more or fewer network components may also be used. In a preferred embodiment of the present invention, the proxy server  and the content converter  are software components. In addition, the functionality of components from  can also be provided with a combination of hardware and software components, or hardware components.","In a preferred embodiment of the present invention, the functionality of components from  is provided with software using object-oriented programming techniques and the C++ programming language. However, other object-oriented programming languages besides C++ could also be used. In addition, in a preferred embodiment of the present invention, the functionality of components of  can also be provided with non-object oriented programming languages (e.g., C programming language).","As is known in the art, object-oriented programming is used to design computer software including object-oriented objects that are easy to create, cost effective to modify, and reusable. Object-oriented objects include \u201cobject data\u201d and \u201cobject services.\u201d Object services are provided through \u201cobject methods\u201d (also called \u201cobject operations\u201d or \u201cobject functions\u201d). Object methods typically operate on private data such as \u201cinstance data\u201d or \u201cobject state data\u201d that an object owns. A collection of objects is called an \u201cobject class\u201d which is sometimes called an \u201cobject type.\u201d An object class acts as a template that describes the behavior of sets of objects. An object's implementation is typically encapsulated, and is hidden from public view. Object private instance data can only be accessed by object methods of an object class. Object public instance data is accessed through a public \u201cobject interface.\u201d","An operating environment for components of content conversion system  of a preferred embodiment the present invention includes a processing system with at least one high speed Central Processing Unit (\u201cCPU\u201d) and a memory system. In accordance with the practices of persons skilled in the art of computer programming, the present invention is described below with reference to acts and symbolic representations of operations that are performed by the processing system, unless indicated otherwise. Such acts and operations are referred to as being \u201ccomputer-executed\u201d or \u201cCPU executed.\u201d Although described with one CPU, alternatively multiple CPUs may be used for a preferred embodiment of the present invention.","The memory system may include main memory and secondary storage. The main memory is high-speed random access memory (\u201cRAM\u201d). Main memory can include any additional or alternative high-speed memory device or memory circuitry. Secondary storage takes the form of persistent long term storage, such as Read Only Memory (\u201cROM\u201d), optical or magnetic disks, organic memory or any other volatile or non-volatile mass storage system. Those skilled in the art will recognize that the memory system can comprise a variety and\/or combination of alternative components.","Acts and symbolically represented operations include the manipulation of electrical signals by the CPU. The electrical signals cause transformation of data bits. The maintenance of data bits at memory locations in a memory system thereby reconfigures or otherwise alters the CPU's operation. The memory locations where data bits are maintained are physical locations that have particular electrical, magnetic, optical, or organic properties corresponding to the data bits.","The data bits may also be maintained on a computer readable medium including magnetic disks, optical disks, organic disks and any other volatile or non-volatile mass storage system readable by the CPU. The computer readable medium includes cooperating or interconnected computer readable medium, which exist exclusively on the processing system or may be distributed among multiple interconnected processing systems that may be local or remote to the processing system.","Components of content conversion system  allow content conversion based on one or more sets of conversion preferences. An electronic document converted by the content conversion system  is suitable for display on a device with a smaller display and less than SuperVGA resolution or on a display with SuperVGA resolution.","Content Conversion",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 2","b":["22","24","16","12","14","26","16","18","12","12","28","16","14","14","20"]},"At Step , the content converter  receives the requested original electronic document from the proxy server . At Step , content converter  converts the original requested electronic document into a converted electronic document based on conversion preferences (e.g., using a conversion directive or content conversion script) obtained at Step . Text, images and other hypertext content (e.g., audio, video, etc.) are converted based on one or more sets of preferences. At Step , the content converter  sends a converted electronic document to the proxy server . The proxy server  sends the converted electronic document to the first network device  in response to the request made by the first network device  for the original electronic document. The first network device  receives a converted electronic document based on one or more conversion preferences. Method  can also be practiced with the content converter  integral to the proxy server .","Method  allows a network device to receive a converted electronic document based on user-conversion preferences, device-conversion preferences, site-specific conversion preferences, or other preferences. Method  allows a personal digital assistant, hand-held computer, wireless phone, or other small or hand-held devices to receive a converted electronic document. The converted electronic document is appropriate for viewing on a smaller display with a lower resolution even though the original electronic document retrieved was written for a display in a higher resolution SuperVGA format. Method  can also be used for providing a converted electronic document for a display with SuperVGA resolution (e.g., by changing display characteristics based on one or more sets of conversion preferences).","Exemplary Content Conversion System","In one exemplary preferred embodiment of the present invention, the functionality of one or more components of the content conversion system  is split into multiple component modules and may include additional optional component modules (e.g., administrative modules, filter modules). Such an exemplary preferred embodiment is used to distribute functionality and provide additional conversion functionality to the content conversion system .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 3","FIG. 3","FIG. 1","FIG. 1"],"b":["36","10","3","3"]},"An optional administrative interface  is used by system administrators with a second network device  to configure the conversion system  and to maintain the database . An optional administrative server  is a server used to modify configuration files used by the proxy server  and the database . A transaction manager  queries the database  for user-conversion preferences, device-preferences, site-specific conversion preferences, and other preferences during a request transaction.","A converter  communicates with client components , the content converter , and a cache , depending on the content type of an electronic document being converted. The converter  may also include a document production module (not illustrated in FIG. ). The document production module can be use to help the converter  convert an electronic document comprising a metadata object and a datapipe object into a converted electronic document.","The client components  include network components that retrieve electronic document content from the computer network . The cache  stores Uniform Resource Locators (\u201cURLs\u201d), request headers, response headers, converted data, unconverted data, and\/or a conversion signature for request transactions. As is known in the art, a URL is used to locate an electronic document on the World-Wide-Web. Content conversion functionality provided by the proxy server  and the content converter  () is distributed among additional component modules in the content conversion system  (FIG. ). However, a preferred embodiment of the present invention can be practiced without distributing conversion functionality among the multiple modules illustrated in FIG. .","In a preferred embodiment of the present invention, the functionality of component modules from  are implemented with software using object-oriented programming techniques and the C++ programming language. However, other object-oriented programming languages and other non-object oriented programming languages could also be used. In addition, functionality of component modules from  can also be implemented as a combination of hardware and software components, or as hardware components.","Exemplary Content Conversion",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIGS. 4A","FIG. 4A"],"b":["4","4","52","36","3","54","14","12","2068"]},"Returning to  at Step , the proxy server  which logs the request in a request log. At Step , a test is conducted by the proxy server  to determine if the first network device  is allowed to use content conversion functionality without login information. In a preferred embodiment of the present invention, the proxy server  uses network addresses (e.g., Internet Protocol (\u201cIP\u201d)) addresses) for the test at Step . As is known in the art, IP is an addressing protocol designed to route traffic within a network or between networks. IP is described in RFC-791, incorporated herein by reference. However, other tests could also be used to determine if a network device is allowed to use content conversion without login information.","If a network device is not allowed to use content conversion without login information, at Step  the proxy server  prompts the first network device  for login information and logs a network address (e.g., IP address) for the first network device . If the first network device  is allowed to use content conversion functionality without login information at Step , or login information was obtained at Step , at Step  the proxy server  creates a object-oriented data structure called a \u201cmetadata\u201d object and a \u201cdatapipe\u201d object.","In an exemplary preferred embodiment of the present invention, a metadata object is a C++ object that conveys information such as request\/response headers, conversion preferences and other information about a \u201cdatabody\u201d stored in a datapipe object. The datapipe object is also a C++ object. However, metadata objects and datapipe objects other than C++ objects could also be used. A databody is electronic document content such as hypertext markup languages (e.g., SGML, HTML, XML, VRML, etc.), text, graphical data, or graphics, animation, audio, video or other content that is stored in a datapipe object.","Table 1 illustrates an exemplary metadata object-oriented interface for a metadata object and an exemplary data structure for the metadata object. In an exemplary preferred embodiment of the present invention, object interfaces are Common Object Request Broker Architecture (\u201cCORBA\u201d) interfaces. As is known in the art, CORBA is an architecture for creating, distributing and managing distributed program objects. However, other object architectures could also be used (e.g., Component Object Model (\u201cCOM\u201d) or Distributed Component Object Model (\u201cDCOM\u201d) interfaces). Other object-oriented data structures could also be used and the present invention is not limited to the metadata object data structure illustrated in Table 1.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u00a9\u2009by Spyglass, Inc."},{"entry":"\/\/ CORBA object interface for metadata object"},{"entry":"typedef sequence<octect> CCMDSEQ;"},{"entry":"interface CCMetaData"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void set (in string Category, in string Name, in string Value) \/\/creates a new CCMetaData record"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException); \/\/error message in case of error"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void replace(in string Category, in string Name, in string Value) \/\/replaces a value of a specified"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);","\/\/ CCMetaData record"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void get(in string Category, in string Name, out string Value) \/\/Gets a value of 1occurrence of a"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);","\/\/ specified CCMetaDataRecord"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"boolean exists(in string Category, in string Name)\/\/Checks if a specified record exists"]},{"entry":[{},"void del (in string Category, in string Name) \/\/Deletes 1occurrence of a CCMetaData record"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void getByRank(out string Category, in string Name, out string Value)\/\/Gets a value of 1occurrence"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);","\/\/of a CCMetaData record"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void resetRank( ); \/\/clears category rank settings and frees associated memory"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void appendRank(in string Category)\/\/Adds a specified request category to end of a rank list"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException); \/\/The 1category appended has highest rank"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void signset(in string Category, in string Name, in string Value)\/\/Adds a specified record to a"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException); \/\/conversion signature data object"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"boolean SignatureValidate( ) \/\/validate cache hits for a conversion signature"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void serializedRequestMD(out CCMDSEQ serializedConvertedMD)\/\/reserved for future use"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void serializedSignatureMD(out CCMDSEQ SerializedSignatureMD)\/\/reserved for future use"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void debugRequestMD(in string FileName)\/\/Outputs request-related metadata records"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void debugResponseMD(in string FileName)\/\/(Outputs response-related metadata records"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void debugSignatureMD(in string FileName)\/Outputs signature-related metadata records"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (MDException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"void impl_release( ); \/\/release a ccmetadata record"]},{"entry":[{},"void impl_duplicate( ); \/\/duplicate a ccmetadata record"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Table 2 illustrates an exemplary object-oriented interface for a databody and an exemplary data structure for the databody. However, other object interfaces and data structures could also be used and the present invention is not limited to the databody interface and data structures illustrated in Table 2.",{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u00a9\u2009by Spyglass, Inc."},{"entry":"\/\/CORBA object interface for databody"},{"entry":"typedef sequence <octect> CCDATASEQ;"},{"entry":"interface CCOpData"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"void impl_release( );"]},{"entry":[{},"void impl_duplicate( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"interface CCOpDataRaw:CCOpData"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"attribute string name; \/\/ name of the object"]},{"entry":[{},"attribute string type; \/\/ type of the object"]},{"entry":[{},"attribute CCDATASEQ data; \/\/CORBA sequence data for databody"]},{"entry":[{},"(e.g., hypertext)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"\/\/databody data structure"},{"entry":"typedef struct_DATABODY"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char*pData;","\/* Pointer to data *\/"]},{"entry":[{},"size_t nSize;","\/* Size of body buffer *\/"]},{"entry":[{},"size_t nUsed;","\/* Bytes in use *\/"]},{"entry":[{},"size_t nMinGrow;","\/* Minimum growth size *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}DATABODY;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Returning to  at Step , the proxy server  also creates a \u201cdatapipe\u201d object-oriented object. The datapipe is an object-oriented object that can be read by multiple readers, but written to by only one writer. In one preferred embodiment of the present invention, the datapipe object holds a databody including electronic document content.","Table 3 illustrates an exemplary object-oriented datapipe interface. However, other object interfaces could also be used and the present invention is not limited to the datapipe object illustrated in Table 3.",{"@attributes":{"id":"p-0071","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u00a9\u2009by Spyglass, Inc."},{"entry":"\/\/ Datapipe buffer"},{"entry":"typedef sequence<octet> dpBuf;"},{"entry":"\/\/ Datapipe reader interface"},{"entry":"\/\/ Not thread safe"},{"entry":"\/\/ \u2003Threads should not share a reader, but have their own readers"},{"entry":"interface dpReader"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Release datapipe reader implementation"]},{"entry":[{},"void impl_release( ):"]},{"entry":[{},"\/\/ Read from datapipe asynchronously"]},{"entry":[{},"\/\/ Returns immediately with octets currently available up to sizeDesired"]},{"entry":[{},"\/\/ Returns TRUE until EOF read"]},{"entry":[{},"\/\/ Caller must free returned dpBuf"]},{"entry":[{},"\/\/ dpBuf only valid while datapipe or dpReader reference held by caller"]},{"entry":[{},"boolean readAsync(out dpBuf output, in unsigned long sizeDesired)"]},{"entry":[{},"raises(dpError);"]},{"entry":[{},"\/\/ Read from datapipe synchronously"]},{"entry":[{},"\/\/ Blocks until sizeDesired octets read, EOF read, or abort signaled"]},{"entry":[{},"\/\/ Returns TRUE until EOF read"]},{"entry":[{},"\/\/ Caller must free returned dpBuf"]},{"entry":[{},"\/\/ dpBuf only valid while datapipe or dpReader reference held by caller"]},{"entry":[{},"boolean read(out dpBuf output, in unsigned long sizeDesired)"]},{"entry":[{},"raises(dpError);"]},{"entry":[{},"\/\/ Read entire datapipe synchronously"]},{"entry":[{},"\/\/ Blocks until all data available (EOF read), or abort signaled"]},{"entry":[{},"\/\/ Caller must free returned dpBuf"]},{"entry":[{},"\/\/ dpBuf only valid while datapipe or dpReader reference held by caller"]},{"entry":[{},"dpBuf readAll( )"]},{"entry":[{},"raises(dpError);"]},{"entry":[{},"\/\/ Seek reader to new absolute file position"]},{"entry":[{},"\/\/ Returns immediately"]},{"entry":[{},"\/\/ Callers can seek to a desire file position before data is available"]},{"entry":[{},"\/\/ Seeking past the EOF will cause an exception to be thrown on reading"]},{"entry":[{},"void seekAbs(in unsigned long filePos);"]},{"entry":[{},"\/\/ Seek reader to new relative file position"]},{"entry":[{},"\/\/ Returns immediately"]},{"entry":[{},"\/\/ \u2003Returns new file position"]},{"entry":[{},"\/\/ Callers can seek to a desire file position before data is available"]},{"entry":[{},"\/\/ Seeking past the EOF will cause an exception to be thrown on reading"]},{"entry":[{},"unsigned long seekRel(in long offset);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"\/\/ Datapipe interface"},{"entry":"interface datapipe"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Duplicate datapipe"]},{"entry":[{},"\/\/ Increments implementation reference count"]},{"entry":[{},"void impl_duplicate( );"]},{"entry":[{},"\/\/ Release reference to datapipe"]},{"entry":[{},"\/\/ Decrements implementation reference count"]},{"entry":[{},"\/\/ The datapipe will be destroyed when the reference count reaches 0"]},{"entry":[{},"void impl_release( );"]},{"entry":[{},"\/\/ Create a datapipe reader"]},{"entry":[{},"\/\/ File position = 0"]},{"entry":[{},"dpReader createReader( )"]},{"entry":[{},"raises(dpError);"]},{"entry":[{},"\/\/ Write input data to the end of the datapipe"]},{"entry":[{},"\/\/ Data written is immediately available to all readers"]},{"entry":[{},"void write(in dpBuf input)"]},{"entry":[{},"raises(dpError);"]},{"entry":[{},"\/\/ Write end of file to datapipe"]},{"entry":[{},"\/\/ Releases any unused datapipe memory"]},{"entry":[{},"\/\/ All subsequent write operations will generate an exception"]},{"entry":[{},"void terminate( );"]},{"entry":[{},"\/\/ Set abort signal on datapipe"]},{"entry":[{},"\/\/ All subsequent read\/write operations will generate an exception"]},{"entry":[{},"void abort( );"]},{"entry":[{},"\/\/ Get bytes available for reading in datapipe"]},{"entry":[{},"unsigned long getAvailable( );"]},{"entry":[{},"\/\/ Set datapipe size"]},{"entry":[{},"\/\/ Changes the size of pipe after creation"]},{"entry":[{},"\/\/ Intended for use when pipe initially sized to 0"]},{"entry":[{},"\/\/ \u2003Note: will not size the pipe smaller than existing used size"]},{"entry":[{},"\/\/ \u2003\u2003does not affect file position"]},{"entry":[{},"void setSize(in unsigned long newSize)"]},{"entry":[{},"raises(dpError);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"\/\/ Datapipe factory interface"},{"entry":"interface dpFactory"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Create a new datapipe object"]},{"entry":[{},"\/\/ Initial implementation reference count = 1"]},{"entry":[{},"\/\/ Specifying a minGrow of 0 causes the datapipe size to double for"]},{"entry":[{},"each grow datapipe create(in unsigned long initialSize,"]},{"entry":[{},"in unsigned long minGrow)"]},{"entry":[{},"raises(dpError);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"interface CCOpDataPipe:CCOpData"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"attribute string","name;"]},{"entry":[{},"attribute datapipe","pipe;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"After creating the conversion objects, the proxy server  passes request\/response data objects. For example, the proxy server  passes the request including the metadata object and the datapipe object to the transaction manager .","At Step , the transaction manager  adds user, device, site-specific, or other conversion preferences from the database  to the request metadata object. In a preferred embodiment of the present invention, the transaction manager  uses transfer protocol request headers to identify devices and an IP address and a user-name to identify a user. However, other identification methods could also be used. The transfer protocol request headers may include HTTP headers or Multipurpose Internet Mail Extension (\u201cMIME\u201d) headers defined in RFC-2046, incorporated herein by reference.","At Step , the transaction manger  passes the request metadata object and datapipe object to the converter . At Step , the converter  creates a one or more conversion keys derived from the metadata object including user and device-identifiers and a site-identifier using a request URL. A first conversion key is used to query the cache  for a converted or unconverted databody that will satisfy the request. However, other information could also be used to create the conversion key. A second conversion key is used to obtain conversion preferences from the database .","In a preferred embodiment of the present invention, the first and second conversion keys do not include the same information. The first conversion key used to query the cache  includes a URL plus additional information from the metadata object. The second conversion key used to query the database  may include a user-agent name, a user-name, or a URL may be used to query a database other than database .","At Step  of , a test is conducted by the converter  to determine if a \u201csuitable\u201d version of a converted databody for the request is already in the cache . In a preferred embodiment of the present invention, a suitable version of a converted databody is one that is not older than a predetermined date or time. However, other criteria could also be used to determine a suitable converted databody (e.g., criteria included in a conversion signature). If a suitable version of a converted databody exists in the cache , the converter  sends a datapipe object including the converted databody from the cache  to the transaction manager  at Step . If a suitable converted version of a databody for the request is not already in the cache  at Step , a test is conducted at Step  to determine if an original unconverted databody is already stored in the cache . If so, at Step  converter  sends a datapipe object including the unconverted databody from the cache  to the content converter  for conversion.","If an original unconverted databody is not stored in the cache  at Step , (i.e., the cache  does not contain any databody matching the request), the converter  sends the metadata object and datapipe object associated with the request to the content converter  at Step . The content converter  converts the request metadata object and datapipe object if necessary, and returns it to the converter  at Step .","At Step  of , the converter  invokes the client components  to send the request to a desired electronic document server on the computer network  (e.g., World-Wide-Web server on the Internet). At Step , the desired electronic document server on the computer network  returns an original electronic document to the converter  that is converted into a response databody in a response datapipe object and a response metatdata object (e.g., including response headers) by the client components .","At Step , the converter  saves the response databody as raw data and response metadata object including respsonse headers in the cache . Storing an unconverted response in the cache  may save transmission time when a network device makes a second request for an original electronic document, but with new conversion preferences. The unconverted response can then be used to create a converted response with new conversion preferences without contacting an electronic document again on the computer network .","At Step , the converter  sends the response databody stored in the response datapipe object to the content converter  for conversion. At Step , the content converter  performs any necessary conversions on the response metadata object and response databody in the response datapipe object and returns a converted response to the converter . At Step , the converter  sends a converted response including a converted databody in a datapipe object and a converted response metadata object to the cache  and to the transaction manager . Storing a converted response in the cache  saves processing time when a network device makes a second request for the same original electronic document with the same conversion preferences. A converted response can be returned without contacting an electronic document server again on the computer network .","At Step , the transaction manager  sends the converted response to the proxy server . At Step , the proxy server  sends the converted response to the first network device  via the user agent .","Exemplary Method  () illustrates content conversion using the content conversion system  from FIG. . However, more or fewer steps can also be used with exemplary Method  and different content conversion system components could also be used. The exemplary preferred embodiment of the present invention is not limited to exemplary Method  or the content conversion system .","Exemplary Content Converter","In one exemplary preferred embodiment of the present invention, the content converter  is split into multiple component modules.  is a block diagram illustrating multiple components  of content converter . Content converter  includes a content conversion interface , a content conversion director , an operations module , an operation sequencer , a conversion script , a content conversion trader  and multiple conversion operations , , , three of which are illustrated. However, the content converter  can also be split into more or fewer component modules, and the exemplary preferred embodiment of the content converter  is not limited to the components illustrated in FIG. .","Content conversion interface  provides an interface between the content converter  and other components from the content conversion system  or the content conversion system . The content conversion director  directs content conversions. The operations module  is a library (e.g., a Dynamic Link Library) of functions that includes conversion operations. The operation sequencer  controls conversion operations including those listed in a conversion script . The conversion script  is a file that specifies which conversion operations should be executed for a selected content types (but not all content types) and in what order. The conversion script  includes a conversion directive. The content conversion trader  is a data reference registry for available conversion operations. A first conversion operation can locate a second conversion operation by importing an object reference from the content conversion trader . The content conversion operations , ,  include multiple conversion operations and reside in the operations module .","Tables 4 and 5 illustrate exemplary content conversion operations for the content conversion operators , , . However, more or fewer content conversion operations or conversions for other content types (e.g., VRML) could also be used. For example, another set of conversion operations may be used to convert HTML to an audio format (e.g., a wave format \u201c*.WAV\u201d), or convert an audio format to HTML).","Table 4 illustrates exemplary HTML conversion operations. However, more or fewer HTML conversion operations could also be used, and the conversion operations can also include other hypertext conversion operations (e.g., XML, SGML, VRML, etc.).",{"@attributes":{"id":"p-0087","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["HTML",{}]},{"entry":["Conversion Operation","Description "]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DOM_CREATE","Creates a Document Object Model (\u201cDOM\u201d)"]},{"entry":[{},"from an HTML document.."]},{"entry":["DOM_EVAL","Evaluates one or more expressions that select"]},{"entry":[{},"one or more hypertext elements from a DOM."]},{"entry":["DOM_TEMPLATE","Creates a new HTML document by inserting"]},{"entry":[{},"hypertext elements (e.g., selected by"]},{"entry":[{},"DOM_EVAL) into an HTML template."]},{"entry":["DOM_IMPORT","Import hypertext elements from other hypertext"]},{"entry":[{},"documents."]},{"entry":["HTML_ATTRIBUTE","Adds a specified attribute and value to"]},{"entry":["ADD","instances of a specified tag."]},{"entry":["HTML_ATTRIBUTE","Changes a value of a specified attribute to a"]},{"entry":["MAX","maximum value in instances of a specified tag."]},{"entry":["HTML_ATTRIBUTE","Changes a value of a specified attribute to a"]},{"entry":["MIN","minimum value in instances of a specified tag."]},{"entry":["HTML_ATTRIBUTE","Removes a specified attribute from instances"]},{"entry":["REMOVE","of specified tag."]},{"entry":["HTML_ATTRIBUTE","Replaces a value for instances of a specified"]},{"entry":["REPLACE","tag."]},{"entry":["HTML_ATTRIBUTE","Scales a value for instances of a specified tag."]},{"entry":"SCALE"},{"entry":["HTML_COMMENT","Remove comments from an HTML document."]},{"entry":"REMOVE"},{"entry":["HTML_ELEMENT","Removes instances of a specified HTML tag"]},{"entry":["REMOVE","element."]},{"entry":["HTML_IMAGE","Scales width and height attributes of instances"]},{"entry":["ATTR_SCALE","of an HTML IMG tag."]},{"entry":["HTML_IMAGE","Removes an image from an HTML document"]},{"entry":["TO_LINK","and creates a link to the image."]},{"entry":["HTML_IMAGEMAP","Scales instances of HTML image maps."]},{"entry":"SCALE"},{"entry":["HTML_SCALE","Scales an image to reduce its data size without"]},{"entry":["IMAGE_QUALITY","changing the size of the image presented in an"]},{"entry":[{},"HTML document."]},{"entry":["HTML_TABLE","Removes instances of table tags and reformats"]},{"entry":["TRANSLATE","the contents of tables."]},{"entry":["HTML_TAG","Removes instances of a specified tag."]},{"entry":"REMOVE"},{"entry":["HMTL_TAG","Replaces instances of a specified tag with a"]},{"entry":["REPLACE","new tag."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 5 illustrates exemplary image conversion operations. However, more or fewer image conversion operations could also be used, and the conversion operations can also include other image conversion operations. The content converter  uses exemplary image conversion operators to convert images into an internal \u201craw image\u201d format. The internal raw image format is used to quickly reduce and scale images, as well as convert one image format into another image format. However, the present invention is not limited to using a raw image format and other internal image formats could also be used.",{"@attributes":{"id":"p-0089","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Image",{}]},{"entry":["Conversion Operation","Description "]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PI_REDUCE","Reduce an image to a specified color depth."]},{"entry":["PI_SCALE","Scale an image."]},{"entry":["PI_CONVERT_TO","Convert a color image to a gray scale image."]},{"entry":"GRAY"},{"entry":["BMP_TO_PI","Convert a Bit-MaPed (\u201cBMP\u201d) image format"]},{"entry":[{},"to a raw image format."]},{"entry":["JPEG_TO_PI","Convert a Joint Pictures Expert Group"]},{"entry":[{},"(\u201cJPEG\u201d) image format to a raw image"]},{"entry":[{},"format."]},{"entry":["PI_TO_BMP","Convert a raw image format to a BMP image"]},{"entry":[{},"format."]},{"entry":["PI_TO_JPEG","Convert a raw image format to a JPEG"]},{"entry":[{},"image format."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 6","FIG. 4C","FIG. 2"],"b":["128","16","108","5","130","16","46","88","14","30","110","132","110","122","124","126","110"]},{"@attributes":{"id":"p-0091","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u00a9\u2009by Spyglass, Inc."},{"entry":"\/\/Content Conversion Interface - Interface Design Language"},{"entry":"interface (\u201cIDL\u201d)"},{"entry":"module ContConv {"},{"entry":"\/\/ Operation exception reason codes"},{"entry":"enum opReason"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OP_FAILED,"," \/\/ Operation failed."]},{"entry":[{},"OP_MEMERR,","\/\/ Out of virtual memory."]},{"entry":[{},"BAD_DATA,","\/\/ CCOpData was wrong type, or had bad data."]},{"entry":[{},"BAD_METADATA,","\/\/ CCMetaData contained missing or bad data."]},{"entry":[{},"BAD_ARG","\/\/ Argument string was incomplete or"]},{"entry":[{},{},"\u2003 bad format."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"\/\/ Operation exception"},{"entry":"exception opError"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"opReason","reason;","\/\/ Reason code"]},{"entry":[{},"string","message;","\/\/ Descriptive message."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"interface CCOperation"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void Do(inout CCOpData data,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"inout CCMetaDataNS::CCMetaData metadata,"]},{"entry":[{},"in string arg) raises (opError);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void Restart( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"After supplying the object interface content conversion interface, the content conversion interface  sends the conversion request to the content conversion director .","At Step , the content conversion director  calls the operation sequencer . In another embodiment of the present invention, a starting conversion component can also be specified in the request metadata object. By default, the operation sequencer  is the conversion component called to handle the conversion request. However, other content converter  components  can also be used. At Step , the operation sequencer  reads the request metadata object and creates one or more conversion keys to determine a list of conversion operations that need to be called and a sequence order in which the conversion operations should be executed. In one preferred embodiment of the present invention, the list is a \u201cconversion directive\u201d with a \u201cconversion precedence.\u201d In another embodiment of the present invention the conversion directive is stored in the conversion script . The list and sequences can also be obtained from information in the database .","In a sequence beginning at Step , for operations in the list of conversion operations, the operation sequencer  obtains an object address of a selected conversion operation (e.g., , , ) from the content conversion trader . At Step , the selected conversion operation is executed. The executed conversion operation modifies the request databody stored in a datapipe object and request metadata object, if necessary and returns control to the object sequencer . The sequence including Steps  and  is repeated until all conversions desired by the conversion request are completed when control is returned to the content conversion director .","Table 7 illustrates exemplary source code to obtain an address for an object-oriented conversion method from the content conversion trader  and illustrates a generic object-oriented class for conversion operations. However, object-oriented methods code and other object-oriented classes could also be used. A name for a desired conversion operation is substituted for OpName in Table 7 (e.g., OpName=HTML_COMMENT_REMOVE, for removing comments from an HTML document).",{"@attributes":{"id":"p-0096","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u00a9\u2009by Spyglass, Inc."},{"entry":"\/\/ creates an instance of Content Conversion Trader 120 (\u201cCCTrader\u201d)"},{"entry":"CCTrader *pCCTrader = CCTrader::Instance( );"},{"entry":"ContConv::CCOperation_var pOperation ="}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"PCCTrader\u2212>ImportOperation(\u201coperation_name\u201d); \/\/e.g., HTML_COMMENT_REMOVE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"if(!CORBA::is_nil(pOperation))"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"POperation\u2212>Do(data, metadata, arg);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/generic object-oriented class for a conversion operation"},{"entry":"class OpName:public CCOperationIPL \/\/ e.g., class HMTL_COMMENT_REMOVE"},{"entry":"("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"301pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OpName(const char *OpName = \u201cInternal_OpName\u201d); \/\/e.g., *OpName=\u201cspyga-comment-remove\u201d"]},{"entry":[{},"Virtual \u02dcOpName( ) {};"]},{"entry":[{},"Void Do(ContConv::CCOpData, *&data, CCMetaDataNS::CCMetaData *&metadata,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Const char *arg);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"At Step , the content conversion director  sends a converted metadata object and a converted databody in a datapipe object to the content conversion interface . At Step , content conversion interface returns the converted metadata object and converted databody in the datapipe object to the converter  (e.g., Step , ) or to the proxy server  (e.g., Step  of FIG. ).","FIG.  and  illustrate one exemplary preferred embodiment of the present invention for content conversion in which the content converter  has been split into multiple components . However, this one exemplary preferred embodiment of the present invention is not limited to the multiple components illustrated in  or the steps illustrated with Method  of FIG.  and more or fewer conversion steps could also be used. In addition, the multiple content converter  components  of  can also be used for content converter  in content conversion system  illustrated in , or content conversion system illustrated in FIG. .","Content Conversion Using Conversion Preferences","In a preferred embodiment of the present invention, content conversion of an original electronic document is based on one or more conversion preferences. The conversion preferences are organized into multiple categories including user-conversion preferences, device-conversion preferences or site-specific conversion preferences or other conversion preferences. However, more or fewer conversion preferences could also be used.","After a network device with a smaller display requests an electronic document, the content converter  uses one or more sets of conversion preferences to determine how to convert the original electronic document into a converted electronic document usable by the network device.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 7","b":["146","148","16","12","14","1","150","12"]},"At Step , content converter  creates one or more conversion keys from the extracted conversion information to access one or more conversion preferences stored in the database . In one exemplary preferred embodiment of the present invention multiple conversion keys are created from a user-identifier, a device-identifier and site-identifier based on a request URL. However, other conversions keys could also be created (e.g., a user-identifier and device-identifier, a user-identifier and a site-identifier, or device-identifier and a site-identifier, etc.). In addition, access to the one or more conversion preferences could also be from a source other than the database  (e.g., obtained from another server on another network or from another network device).","At Step , the conversion key to is used to obtain one or more conversion preferences for the request. In one exemplary preferred embodiment or the present invention user, device and site-specific (i.e., a URL) conversion preferences are obtained. However, more or fewer preferences could also be obtained. At Step , a conversion directive is created with conversion precedence from the obtained conversion preferences. In one preferred embodiment of the present invention, the conversion directive is stored in a metadata object. However, other conversion directive types and storage can also be used. The conversion directive is stored in persistent storage (e.g., the database , a user's hard drive, etc.) for later use. A number of different conversion directives can be created at Step , dependent on the conversion preferences being used including those from conversion script . Thus, a number of permutations are typically available to create a conversion directive since at least three types of conversion preferences are typically used (e.g., user, device and site-specific). Using more than three types of conversion preferences provides additional conversion permutations from which a conversion directive can be created.","The conversion directive based on selectable conversion preferences can be used to instruct the content converter  to convert an electronic document differently for different devices (e.g., a first device has a color display while a second device has a monochrome display; convert an electronic document differently for different users (e.g., a first user prefers to view images in a low resolution display mode, while another user desires to view images in a high resolution display mode); and convert an electronic document different for different sites (e.g., a first site may include electronic documents with a large number of images, while a second site may include only HTML documents with text and a few images. The first site may require a user's device set one or more viewing parameters to view the images to be displayed).","At Step , the content converter  applies the conversion directive to convert an electronic document retrieved from an electronic document server on the computer network . The conversion precedence in the conversion directive provides a precedence hierarchy for content conversion.","In one exemplary embodiment of the present invention, user-conversion preferences are at a highest level in the precedence hierarchy, followed by device-conversion preferences, followed by site-specific conversion preferences. If user-conversion preferences are available, then they are used before device-conversion preferences or site-specific conversion preferences based on the exemplary hierarchy. If no user-conversion preferences are available, device-conversion preferences are used before site-specific conversion preferences based on the exemplary hierarchy. In another embodiment of the present invention, the precedence hierarchy includes different preference precedence (e.g., site-specific conversion preferences may have a higher precedence than user-conversion preferences based on the characteristics of a network site). In one preferred embodiment of the present invention, a preference hierarchy is statically assigned by a system administrator and cannot be changed by a user. In another embodiment of the present invention, the preference hierarchy may be dynamically changed by a user.","In cases where there is a conversion preference conflict, the content converter  determines which preferences have priority. An HTML site may require that a user's device set display resolution to high resolution mode to allow images to be adequately displayed. A site-specific conversion preference is then provided by the HTML site to set display resolution to high resolution. However, a user may not like the high resolution mode to be used on the device, and provide a user-conversion preference for medium resolution mode. A conflict results, and the content converter  resolves the conflict. If user-conversion preferences have higher precedence, then the user-conversion preference (i.e., medium resolution) is used over the site-specific conversion preference. If site-specific conversion preferences have higher precedence, then the site-specific conversion preferences would be used over the user conversion preferences (i.e., high resolution).","As an example of the use of Method , the first network device , a Personal Digital Assistant (\u201cPDA\u201d), with an IP address of 128.10.20.30, requests a hypertext document with the URL \u201chttp:\/\/www.spyglass.com\/info.html.\u201d Using Method , at Step  the content converter  receives a request for an original electronic document from the first network device  (e.g., via the proxy server  or the converter ). The metadata object includes one or more request headers (e.g., HTTP or MIME) including an IP address of 128.10.20.30, a device-identifier of \u201cPDA\u201d and a URL component of \u201cwww.spyglass.com\/info.html\u201d and a datapipe object for a databody. At Step , conversion information is extracted from the request. A user-identifier of 128.10.20.30, a device-identifier of PDA and a site-identifier including request URL of \u201cwww.spyglass.com\u201d is extracted from the request headers.","At Step , one or more conversion keys are created from the extracted information to access one or more conversion preferences stored in the database . In one exemplary preferred embodiment of the present invention, a first conversion key is created from the user-identifier 128.10.20.30 mapped to a user-name (e.g., \u201ckenc\u201d). A 20 second conversion key is created from a device-identifier of PDA. A third conversion key is created with a site-identifier request URL \u201cwww.spyglass.com.\u201d However, more or fewer conversion keys could also be created.","At Step , the one or more conversion keys are used to obtain one or more conversion preferences for the request from the database . Table 8 illustrates exemplary preferences extracted from the database  for the request.",{"@attributes":{"id":"p-0111","num":"0110"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Type of Conversion Preference","Preferences"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User","Remove comments in hypertext"]},{"entry":["ID = 128.10.20.30,kenc","documents."]},{"entry":[{},"Change a display font to \u201cArial\u201d in"]},{"entry":[{},"hypertext documents."]},{"entry":["Site-Specific","None."]},{"entry":"ID = www.spyglass.com"},{"entry":["Device","Convert images to grayscale."]},{"entry":["ID = PDA","Scale images to 50% of original size."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 8 lists exemplary conversion preferences stored in non-precedence order in the database  so conversion precedence must be determined (i.e., user-converson preferences have highest precedence, device-conversion preferences have next highest preferences and site-specific conversion preferences have lowest precedence). However, in another preferred embodiment of the present invention, conversion preferences are stored in precedence order.","At Step , a conversion directive is created with conversion precedence from the obtained conversion preferences. An exemplary conversion directive for the conversion preferences shown in Table 8 is illustrated in Table 9. There are no conflicts to resolve in this example.",{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u00a9 by Spyglass, Inc."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"spyga_remove_comments:yes"]},{"entry":[{},"spyga_change_attribute:font=arial"]},{"entry":[{},"spyga_convert_to_gray:yes"]},{"entry":[{},"spyga_scale_image:scale=50%"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Table 9 illustrates an exemplary conversion directive in precedence order. The user preferences are first (spyga_remove_comments, spyga_change_attribute:font=\u201carial\u201d), followed by the device preferences (spyga_convert_to_gray:yes, spyga_scale_image:scale=\u201c50%), followed by site-specific conversion preferences (i.e., none). The user preference to remove comments is executed before the user preference to change the display font to \u201cArial.\u201d","The conversion directive (e.g., Table 8) created at Step  of  is applied to an exemplary original electronic document at Step . An exemplary original HTML hypertext document is illustrated in Table 10. However, a conversion directive including the exemplary conversion directive from Table 9 can also be applied to other hypertext document types (e.g., XML, SGML or VRML).",{"@attributes":{"id":"p-0117","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 10"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!Example.html>"]},{"entry":[{},"<HTML>"]},{"entry":[{},"<! This is an HTML comment>"]},{"entry":[{},"<TITLE>Example<\/TITLE>"]},{"entry":[{},"<BODY>"]},{"entry":[{},"This is a conversion example."]},{"entry":[{},"<BR><!new line>"]},{"entry":[{},"<! Display a sample image>"]},{"entry":[{},"<IMG src=\u2033http:\/\/www.spyglass.com\/glasses.jpg\u2033>"]},{"entry":[{},"<BR>"]},{"entry":[{},"This is a sample image."]},{"entry":[{},"<\/BODY>"]},{"entry":[{},"<\/HMTL>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The first network device  requests the hypertext document called \u201cexample.html\u201d illustrated in Table 10 from the World-Wide-Web site \u201cwww.spyglass.com. Table 11 illustrates an exemplary converted electronic document after application of Step  of Method  (FIG. ). HTML comments have been removed from the HTML document in Table 10 based on the first user preference illustrated in Table 9 (i.e., remove_comments).",{"@attributes":{"id":"p-0119","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 11"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<HTML>"]},{"entry":[{},"<TITLE>Example<\/TITLE>"]},{"entry":[{},"<FONT FACE=\u2033Arial\u2033>"]},{"entry":[{},"<BODY>"]},{"entry":[{},"This is a conversion example."]},{"entry":[{},"<BR>"]},{"entry":[{},"<IMG src=\u2033http:\/\/www.spyglass.com\/glasses.jpg\u2033>"]},{"entry":[{},"<BR>"]},{"entry":[{},"This is a sample image."]},{"entry":[{},"<\/BODY>"]},{"entry":[{},"<\/HTML>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"On line 3 of Table 11, the display font face has been changed to Arial with the HTML tag \u201c<FONT FACE=\u201cArial\u201d>\u201d. Note that this tag does not exist in Table 10. The image in Table 11, \u201cglasses.jpg,\u201d is converted by the content converter  when the image is requested using conversion preferences store in the database . The conversion of the image is \u201cinvisible\u201d to the user.",{"@attributes":{"id":"p-0121","num":"0120"},"figref":["FIGS. 8A and 8B","FIG. 8A","FIG. 8A"],"b":["160","162","160","146"]},{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 8B","FIG. 8A","FIG. 8B"],"b":["162","12","146","8","16","12","16","18","12","14","14","12"]},"If the requested \u201cglasses image\u201d was part of an image map, a converted HTML tag \u201c<IMG src=\u201chttp:\/\/www.spyglass.com\/glasses_spyg$(spyga-image-attr-scale=50).jpg\u201d>\u201d as a \u201cvirtual URL\u201d is added to the HTML document in Table 11. For example, the virtual URL \u201cglasses spyg$(spyga-image-attr-scale=50)\u201d within the HTML image tag allows an original image from an image map to be scaled to 50% of its original size with the virtual URL. The conversion information within the virtual URL text \u201cimage-name_spyg$( . . . ).image_type\u201d is used to scale the image to match the converted image map.","In a preferred embodiment of the present invention, the content converter  is closely associated with the proxy server . The proxy server  acts as an intermediary between a network device requesting an original electronic document and an electronic document server on a network providing an original electronic document. The proxy server  intercepts requests for hypertext documents and for hyperlinks within hypertext documents. As a result, when a browser on a user device parses the HTML image tag \u201c<IMG src=\u201chttp:\/\/www.spyglass.com\/glasses.jpg\u201d>\u201d, the proxy server  provides a converted grayscale image reduce in size by 50% instead of the original image referenced in the original electronic document with the HTML by calling the content converter .","In a preferred embodiment of the present invention, a user sets desired user-conversion preferences by creating a user-conversion preference file on the proxy server . In another embodiment of the present invention, a user-conversion preference file is stored on a user device and retrieved by the content converter  or the proxy server . In yet another embodiment of the present invention, a user-conversion preference file may be stored on a specific site (e.g., on an Internet Service Provider site) and retrieved by the content converter  or the proxy server . Device-conversion preferences and site-specific preference files are typically created by a system administrator and not by user (e.g. with the administrative interface  of FIG. ).","However, a user may override the device and site-specific conversion preferences as was discussed above, provided user-conversion preferences have the highest precedence in the conversion precedence scheme. In another embodiment of the present invention, a user is allowed to provide device-conversion preferences or site-specific conversion preferences.","Content Conversion Using Data Mining","In a preferred embodiment of the present invention, hypertext electronic document content can be selected from one or more hypertext electronic documents and converted into a format appropriate for display on a user device (e.g., a hand-held device). \u201cData mining\u201d is used to create a converted hypertext electronic document using selected hypertext elements from one or more other hypertext electronic documents.",{"@attributes":{"id":"p-0128","num":"0127"},"figref":"FIG. 9","b":["164","166","16","20"]},"At Step , a document object model is created from the first hypertext electronic document. In one preferred embodiment of the present invention, creating the document object model includes parsing the first hypertext electronic document to collect hypertext elements present in the first hypertext electronic document. The collected hypertext elements are saved in a hierarchical model used to represent the first hypertext electronic document.","At step , one or more selected hypertext elements are extracted from the document object model using one or more data mining expressions. The one or more selected hypertext elements are selected, for example, by a user from one or more electronic document servers on the network  (e.g., World-Wide-Web servers on the Internet or an intranet). References to the selected hypertext elements are saved in a symbol table so they can be used in other expressions and\/or a document template.","For example, a user may select a first hypertext element (e.g., a table) from a first hypertext electronic document, and a second hypertext element (e.g., a frame) from, a second hypertext electronic document, etc. A user is not limited to selecting hypertext elements from one hypertext electronic document, but can select hypertext elements from virtually any hypertext electronic document on the World-Wide-Web on the Internet or an intranet. In another preferred embodiment of the present invention, the one or more selected hypertext elements are extracted from the document object model using one or more data mining operations included in a conversion script (e.g., a conversion script ).","At step , one or more of the extracted hypertext elements are converted using one or more data mining operations. In one preferred embodiment of the present invention, one or more extracted hypertext elements are combined with a hypertext template to create a second hypertext electronic document.","At step , a second hypertext electronic document is created on the second network device including one or more converted hypertext elements. In one preferred embodiment of the present invention, the second hypertext electronic document is in an appropriate format for display on a network device (e.g., the first network device ) that has a display with less than SuperVGA resolution. In another preferred embodiment of the present invention, the second hypertext electronic document is in an appropriate format for display on a network device that has a display with SuperVGA resolution.",{"@attributes":{"id":"p-0134","num":"0133"},"figref":"FIG. 10","b":"176"},"The general document object model of  comprises components including a document , a document type , multiple elements , , two of which are illustrated, and text for elements ,  including sub-elements and attribute values for elements or sub-elements (not illustrated in FIG. ).",{"@attributes":{"id":"p-0136","num":"0135"},"figref":"FIG. 11","b":"190"},"The Document Object Model is an Application Programming Interface (\u201cAPI\u201d) for HTML, XML and other hypertext electronic documents. It defines the logical structure of hypertext electronic documents and how hypertext electronic documents are accessed and manipulated.","With the Document Object Model, programmers can create and build documents, navigate their structure, and add, modify, or delete elements and content. Elements, sub-elements, text, etc. in an HTML or other hypertext electronic documents can be accessed, changed, deleted, or added using the Document Object Model.","Returning to , the exemplary DOM  for HTML includes a document type of HTML , an HTML element HEAD , a HTML HEAD sub-element TITLE , and a sub-element text  for the sub-element TITLE. HTML element BODY  includes sub-element HEADING  and text . The BODY  sub-element PARAGRAPH  includes text . The BODY  sub-element TABLE  includes sub-elements ROWS , . Sub-element ROW  includes sub-element CELL . Sub-element CELL  includes text . Additional HTML BODY  sub-elements are included in the DOM  beginning at . Other HTML elements, sub-elements attributes and text are also added to the DOM  for HTML, but are not illustrated in FIG. .",{"@attributes":{"id":"p-0140","num":"0139"},"figref":["FIG. 12","FIG. 9. A","FIG. 12","FIG. 12","FIG. 11","FIG. 12","FIG. 9","FIG. 12","FIG. 12","FIG. 12"],"b":["222","224","166","9","226","168","9","176","190","10","228","224","170","228","230","172","9","174","9","232","230","174"]},"Table 12 illustrates a data structure for an exemplary abject-oriented class data structure for a HTML DOM. However, other data structures could also be used.",{"@attributes":{"id":"p-0142","num":"0141"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 12"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u00a9 by Spyglass, Inc."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/Define the implementation class for HtmlObjModel."},{"entry":"Class HtmlObjModelImp : public HtmlObjModel"},{"entry":"{"},{"entry":"public:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HtmlObjModelImp(siParsedData* pd);"]},{"entry":[{},"dpBuf_ptr eval(const char *expr):"]},{"entry":[{},"dpBuf_ptr fill_template(const char* filename);"]},{"entry":[{},"virtual \u02dcHtmlObjModelImp(\u2009);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"private:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"7pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DOM::DocumentContext_ptr","_documentContext;",{}]},{"entry":[{},"DOM::Evaluator_ptr","_evaluator;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In one exemplary preferred embodiment of the present invention, the HTML conversion operation DOM_CREATE (e.g., Table 4) is used to create a Document Object Model for a HTML hypertext electronic document at Step  of method  (FIG. ). At Step , the HTML conversion operation DOM_EVAL (e.g., Table 4) evaluates one or more expressions that select one or more hypertext elements from HTML DOM . At Step , the HTML conversion operation DOM_TEMPLATE creates a new HTML document by inserting hypertext elements selected by DOM_EVAL into an template used to create the second hypertext electronic document. The HTML conversion operation DOM_IMPORT is used to import hypertext elements from one or more other hypertext documents. However, other conversion operations could also be used and other conversion operations could also be used to build document object models for other hypertext languages (e.g., SGML, VRML, and XML).","In one preferred embodiment of the present invention, an additional conversion operation called \u201cDATAMINE\u201d performs the combined functionality of DOM_CREATE, DOM_EVAL and DOM_TEMPLATE. Table 13 illustrates an exemplary DATAMINE conversion operation class object-oriented data structure. However, other data structures could also be used.",{"@attributes":{"id":"p-0145","num":"0144"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 13"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"\u00a9 Spyglass, Inc."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/CORBA Implementation server for CCOpDataDOM class."},{"entry":"Class CCOpDataDOMImpl : public_sk_CCOpDataDOM"},{"entry":"{"},{"entry":"public:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CCOpDataDOMImpl(\u2009);"]},{"entry":[{},"virtual \u02dcCCOpDataDOMImpl(\u2009) {\u2009};"]},{"entry":[{},"\/\/ Attribute Methods"]},{"entry":[{},"char* name(\u2009);"]},{"entry":[{},"void name(const char*);"]},{"entry":[{},"\/\/ Conversion Methods"]},{"entry":[{},"void Create(datapipe_ptr pipe);"]},{"entry":[{},"void Eval(const char* expression, dpBuf*& buf);"]},{"entry":[{},"void FillTemplate(const char* filename, datapipe_ptr& pipe);"]},{"entry":[{},"\/\/ OpData Methods"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"void","impl_release(\u2009)","{_reaper_info->"]},{"entry":[{},{},{},"impl_release(\u2009); };"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"void","impl_duplicate(\u2009){_reaper_info->"]},{"entry":[{},{},"impl_duplicate(\u2009); };"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"private:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CORBA::String_var","_name;"]},{"entry":[{},"HtmlObjMode_ptr","_html_obj_model;"]},{"entry":[{},"REAPER_INFO","_reaper_info;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"At Step  of , one or more selected elements are extracted from the DOM. For example, suppose a user is a baseball fan and desires to see only a box score for his\/her favorite team on a day-to-day basis. In one preferred embodiment of the present invention, a user can select a desired box score from a sports page on an electronic document server on the World-Wide-Web (e.g., from a newspaper sports page) for daily display on a user device. An exemplary baseball box score format from an exemplary sports page is illustrated in Table 14.",{"@attributes":{"id":"p-0147","num":"0146"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 14"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Final: Fri. Apr. 17, 1998"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"13"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","2","3","4","5","6","7","8","9","R","H","E"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"12","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"13"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"13","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Chicago-C","0","0","0","0","0","0","0","2","0","2","5","0"]},{"entry":["New York-M","0","1","0","0","0","0","0","0","0","1","3","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"13","align":"center","rowsep":"1"}}}]}}]}}},"Exemplary HTML source code to create the baseball box score shown in Table 14 from a portion (e.g., a HTML table) of a first HTML document is illustrated in Table 15. In one exemplary preferred embodiment of the present invention, the baseball box score is stored in an HMTL TABLE sub-element  (i.e., a sub-element of the HTML element BODY ) in the HTML DOM . At Step  of , the desired table element is located in the DOM  from  (e.g., at TABLE 210) and extracted with one or more data mining expressions.",{"@attributes":{"id":"p-0149","num":"0148"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 15"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<TABLE><TR>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<TD width = \u2033129\u2033><FONT size=\u2033\u22121\u2033>Final: Fri. Apr. 17, 1998<\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>1<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>2<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>3<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>4<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>5<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>6<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>7<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>8<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>9<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>R<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>H<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033><B>E<\/B><\/FONT><\/TD>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/TR><TR>"},{"entry":"<TD width=\u2033129\u2033><FONT size=\u2033\u22121\u2033 face=\u2033arial\u2033><B>Chicago-C<\/B><\/FONT><\/TD>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>2<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>5<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<\/TR><TR>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<TD width=\u2033129\u2033><FONT size=\u2033\u22121\u2033 face=\u2033arial\u2033><B>New York-M<\/B><\/FONT><\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>1<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>0<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>1<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>3<\/TD>"]},{"entry":[{},"<TD WIDTH=\u203330 ALIGN=\u2033CENTER\u2033>1<\/TD>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<TR><TABLE>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"A preferred embodiment of the present invention allows a user the capability not only to select one or more desired hypertext elements to use in a customized hypertext electronic document, but also the capability to alter the content to a format suitable for the user. For example, a user may desire to see the baseball box score illustrated in Table 14 on a Personal Digital Assistant (\u201cPDA\u201d). However, the PDA has a small display that is not capable of displaying the box score in Table 13 without wrapping the display text over several lines making the box score difficult to read. In a preferred embodiment of the present invention, the selected box score can also be converted into a format suitable for display on the PDA.","Suppose the user only desires to determine if his\/her favorite team has won or lost a game. Table 16 illustrates a desired box score format suitable for a smaller display on a user's PDA. Table 16 illustrates an abbreviated summary of the original baseball box score suitable for display on the user's PDA.",{"@attributes":{"id":"p-0152","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 16"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Final: Fri. Apr. 17, 1998"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Runs","Hits","Errors"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Chicago-C","2","5","0"]},{"entry":[{},"New York-M","1","3","1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"A preferred embodiment of the present invention allows the selected hypertext element (e.g., the box score table) to be converted into a format suitable for display on the PDA (e.g., summary of runs, hits and errors from the original box score).","In one preferred embodiment of the present invention, the data mining expressions and operations are from a data mining conversion language. The data mining conversion language is a set of object-oriented methods that can be used to identify one or more hypertext elements in a hypertext electronic document. They can also be used to obtain text and change attribute values for the hypertext elements.","Table 17 illustrates exemplary data mining object-oriented methods for an exemplary data mining conversion language. However, more or fewer object-oriented methods could also be used in the exemplary data mining conversion language. The object-oriented methods provide component names used to create data mining expressions.",{"@attributes":{"id":"p-0156","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 17"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Hypertext Element Desired","Method"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["A hypertext electronic document.","document"]},{"entry":["All hypertext elements in a","all"]},{"entry":"hypertext electronic document."},{"entry":["The n-th hypertext element in","item (n\u22121)"]},{"entry":["a list.","(Since zero based indexes are used,"]},{"entry":[{},"n\u22121 returns the nth item)"]},{"entry":["Hypertext elements with a","tags (\u201ctag\u201d)"]},{"entry":"specified tag."},{"entry":["Hypertext elements that contain","attributeMatch"]},{"entry":["an attribute name\/value pair.","(name=value[,name=value])"]},{"entry":["Search for elements with the","grep(\u201ctext\u201d)"]},{"entry":"specified text."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table 18 illustrates exemplary object-oriented methods used for sub-elements for an exemplary data mining conversion language. However, more or fewer object-oriented methods could also be used. Depending on a current level in a document object model, a sub-element at one level, may be an element at another level. An element at one-level may also be a sub-element at another level. Thus, the object-oriented methods for sub-elements in Table 18 may also be used for elements at some levels in a document object model.",{"@attributes":{"id":"p-0158","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Element","Sub-Element","method"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["table","One or all rows of a table.","rows(m) or rows"]},{"entry":["table row","One or all cells in a table row.","cells(m) or cells"]},{"entry":["image map","One or all areas defined in an","areas(m) or areas"]},{"entry":[{},"image map."]},{"entry":["form","One or all elements in a form.","elements(m) or elements"]},{"entry":["form select","One or all options in a select","options(m) or options"]},{"entry":[{},"list."]},{"entry":["other","One or all sub-elements of an","children(m) or children"]},{"entry":["(e.g., lists","element."]},{"entry":"and frames)"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The data mining conversion language also includes, for example, methods for getting the text of a hypertext element, getting a value of an attribute for an element, and for searching for text of an element. Exemplary object-oriented methods for getting the text of an element are illustrated with exemplary data mining expressions in Table 19.",{"@attributes":{"id":"p-0160","num":"0159"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 19"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Task","Sample data mining expression"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Get the text of a","document.all.tags(\u201cBL\u201d).item.(n).children"]},{"entry":["bullet list item.","(m).text"]},{"entry":["Get the text from","document.all.tags(\u201cTABLE\u201d).item(n).rows"]},{"entry":["a table cell.","(rownum).cells(colnum).text"]},{"entry":["Get the text from","document.all.tags(\u201cTABLE\u201d).item(n).rows"]},{"entry":["all cells in a row.","(rownum).text"]},{"entry":"The text is concatenated"},{"entry":"into one string."},{"entry":["Get the text from","document.all.tags(\u201cTABLE\u201d).item(n).rows."]},{"entry":["all cells in a column.","cells(cellnum).text"]},{"entry":"The text is concatenated"},{"entry":"into one string."},{"entry":["Get options from a","document.all.tags(\u201cFORM\u201d).item(n)."]},{"entry":["SELECT element. Text","elements.tags(\u201cSELECT\u201d).item(n).options.text"]},{"entry":"is concatenated"},{"entry":"into one string."},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"As an example, to get the text of a bullet list item with the exemplary data mining expression \u201cdocument.all.tags(\u201cBL\u201d).item(n).children(m).text,\u201d the object-oriented method \u201cdocument\u201d (Table 17) is combined with the methods \u201call\u201d (Table 17), \u201ctags\u201d (Table 17), for the HTML bullet list tag \u201cBL,\u201d \u201citem\u201d (Table 17), \u201cchildren\u201d (Table 18) and \u201ctext\u201d (Table 18). The data mining language expression (e.g., Table 19) obtains text from all HTML bullet list tags, including nested tags in a HTML document. The other data mining expressions in Table 19 are created in a similar manner to obtain text from HTML tables and forms.","Object-oriented methods for getting a value for an attribute of hypertext element using data mining expressions are illustrated with exemplary data mining expressions in Table 20. The exemplary data mining expressions combine object-oriented methods from Table 17 and Table 18.",{"@attributes":{"id":"p-0163","num":"0162"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 20"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Task","Sample data mining expression"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Get the color of","document.all.tags(\u201cBODY\u201d).getAttribute"]},{"entry":["visited hyperlinks","(\u201cvlink\u201d)"]},{"entry":["Get the URL of an anchor","document..all.tags(\u201cA\u201d).item(n).get-"]},{"entry":[{},"Attribute(\u201chref\u201d)"]},{"entry":["Get the URL associated","document.all.tags(\u201cMAP\u201d).areas(area-"]},{"entry":["with an area in an image map","num).getAttirbute(\u201chref\u201d)"]},{"entry":["Get the URL of a form","document.all.tags(\u201cFORM\u201d).item(n).get-"]},{"entry":[{},"Attribute(\u201caction\u201d)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"One object-oriented method for searching for text of a hypertext element using data mining expressions are illustrated with an exemplary data mining expression in Table 21. The text search method searches for a specified string and returns all elements that contain it. As a result, duplicate text information may be returned if the text search method is not used at the bottom of the element hierarchy in the DOM.",{"@attributes":{"id":"p-0165","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 21"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Task","Sample data mining expression"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Search in a frame for","Document.all.tags(\u201cFRAME\u201d).grep"]},{"entry":[{},"an element containing","(\u201cCONTENTS\u201d)"]},{"entry":[{},"the text \u201cContents.\u201d"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"In one preferred embodiment of the present invention, data mining expressions are created automatically when a user or other application program selects desired hypertext elements from one or more hypertext electronic documents. A user is provided a data mining conversion interface that allows a user to format a hypertext element with an input device (e.g., with a Graphical User Interface (\u201cGUI\u201d) and a mouse). In such an embodiment, a user selects, and\/or \u201ccuts and pastes\u201d desired hypertext elements.","In another preferred embodiment of the present invention, a user creates the data mining expression manually and stores them in a file that is used to create a converted electronic document appropriate for displaying on the user device (e.g., a PDA). In such an embodiment, a user may have additional flexibility and can create appropriate customized data mining expressions.","Exemplary data mining expressions used to converted the exemplary box score from Table 14 into the converted box score in Table 16 is illustrated in Table 22.",{"@attributes":{"id":"p-0169","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 22"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Date=document.all.tags(\u201cTABLE\u201d).item(2).rows(0).cells;"},{"entry":"Team1=document.all.tags(\u201cTABLE\u201d).item(2).rows(1).cells(0).text;"},{"entry":"Team1_runs=document.all.tags(\u201cTABLE\u201d).item(2).rows(1).cells(10).text;"},{"entry":"Team1_hits=document.all.tags(\u201cTABLE\u201d).item(2).rows(1).cells(11).text;"},{"entry":"Team1_errors=document.all.tags(\u201cTABLE\u201d).item"},{"entry":"(2).rows(1).cells(12).text;"},{"entry":"Team2=document.all.tags(\u201cTABLE\u201d).item(2).rows(2).cells(0).text;"},{"entry":"Team2_runs=document.all.tags(\u201cTABLE\u201d).item(2).rows(2).cells(10).text;"},{"entry":"Team2_hits=document.all.tags(\u201cTABLE\u201d).item(2).rows(2).cells(11).text;"},{"entry":"Team2_errors=document.all.tags(\u201cTABLE\u201d).item"},{"entry":"(2).rows(2).cells(12).text;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Table 22 illustrates data mining conversion variables including Date, Team1, Team1_runs, Team1_hits, Team1_errors, Team2, Team2_runs, Team2_hits, and Team2_errors. These variables are used to indicate data mining substitutions obtained from data mining conversion expressions.","Table 23 illustrates exemplary source code for a portion of a HTML document template using the data mining conversion expressions in Table 22. One or more data mining conversion operations will be applied to the portion of the HTML document template illustrated in Table 23 to convert the data mining conversion variables illustrated with the characters \u201c&%.\u201d",{"@attributes":{"id":"p-0172","num":"0171"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 23"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<TABLE><TR>"},{"entry":"<TD colspan=\u201c4\u201d align=\u201ccenter\u201d."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<FONT size=3 face=\u201cArial\u201d><B>Final: &%Date;<\/B><\/FONT><\/TD>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<\/TR><TR>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<TD width=\u2033100\u2033><\/TD."]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033><B>Runs<\/B><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033><B>Hits<\/B><\/TD>"]},{"entry":[{},"<TD width=\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033><B>Errors<\/B><\/TD>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/TR><TR>"},{"entry":"<TD width=\u2033100\u2033><FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team1;<\/TD>"},{"entry":"<TD width=\u203330\u2033 align=\u2033center\u2033>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team1_runs;<\/TD>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<TD width =\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team1_hits;>\/TD>"},{"entry":"<TD width=\u203330\u2033 align=\u2033center\u2033>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team1_errors;<\/TD>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/TR><TR>"},{"entry":"<TD width=\u2033100\u2033><FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team2;<\/TD>"},{"entry":"<TD width=\u203330\u2033 align=\u2033center\u2033>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team2_runs;<\/TD>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<TD width =\u203330\u2033 align=\u2033center\u2033><FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team2_hits;>\/TD>"},{"entry":"<TD width=\u203330\u2033 align=\u2033center\u2033>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FONT size=\u2033\u22121\u2033 face=\u2033Arial\u2033>&%Team2_errors;<\/TD>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/TR><TABLE>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The format of the hypertext elements (i.e., the HTML table) is changed to reflect the desired display output illustrated in Table 14 by a data mining conversion operation. The characters \u201c&%\u201d are used to indicate data mining conversion variables referenced from the data mining expressions in Table 23.","Additional data mining conversion operations are used to convert the data mining conversion variables back into hypertext data that can be displayed by a browser. For example, the data mining conversion variable \u201c&% Date;\u201d is used to return date information (e.g., Final: Fri. Apr. 17, 1998) from a portion of the first hypertext electronic document illustrated in Table 15.","In one preferred embodiment of the present invention, exemplary data mining conversion operations include reformatting a hypertext element, locating data mining conversion variables, obtaining a replacement hypertext element for a data mining conversion variable and replacing data mining conversion variables with replacement hypertext elements. However, more or fewer data mining operations can also be used and the present invention is not limited to the data mining conversion operations listed.","Data mining conversion variables with a prefix of \u201c&%\u201d are replaced with values obtained from hypertext elements from the first hypertext electronic document using the exemplary data mining conversion expressions. For example, as the HTML line <TD width=\u201c100\u201d><FONT size=\u201c\u22121\u201d face=\u201cArial\u201d>&%Team1;<\/TD> (e.g., Table 23) is converted, the data mining conversion variable \u201c%&Team1;\u201d is replaced with an original hypertext element for the \u201c&%Team1;\u201d data mining conversion variable (e.g., \u201cChicago-C\u201d) obtained from the first hypertext electronic document using the exemplary data mining conversion expressions.","The converted HTML line <TD width=\u201c100\u201d><FONT size=\u201c\u22121\u201d face=\u201cArial\u201d>Chicago-C;<\/TD> is saved in the second hypertext electronic document. Other data mining data mining conversion variables are serviced in a similar manner by Method  and saved in the second hypertext electronic document to produce the box score in converted format whose output is illustrated in Table 16. The first network device  is sent the second hypertext electronic document in response to the request for the first hypertext electronic document. The second hypertext electronic document includes one or more converted hypertext elements.","In one preferred embodiment of the present invention, the second hypertext electronic document generated is a \u201cdynamic\u201d template. Data mining conversion variables (e.g., \u201c&%variable;\u201d) provide dynamic hypertext elements that are obtained by Method .","In another preferred embodiment of the present invention, method  of  is used in conjunction with other content conversion methods discussed above (method  of FIG. ). In such an embodiment, a user is able to select one or more hypertext elements from one or more hypertext electronic documents and convert the one or more hypertext elements using data mining conversion operations. In addition, a user can apply one or more conversion operations based on user-conversion preferences, device-conversion preferences or site-specific conversion preferences to further alter selected hypertext elements.","Preferred embodiments of the present invention allow a user to select one or more hypertext elements from one or more hypertext electronic documents. A user is allowed to select desired display information defined by a hypertext element, extract and convert the display information in a format appropriate for display a user device such as a hand-held device, wireless phone, or other device. Data mining is used to extract and convert the selected hypertext information.","Mining data from hypertext electronic documents may allow faster display of hypertext electronic documents for hand-held devices and other devices with less memory, less processing power, or a display with less than SuperVGA resolution. However, data mining can also be used for display with SuperVGA resolution. Thus, the methods of systems of preferred embodiments of the present invention may provide improved user satisfaction for viewing hypertext electronic documents from hand-held devices or other devices.","In view of the wide variety of embodiments to which the principles of the present invention can be applied, it should be understood that the illustrated embodiments are exemplary only, and should not be taken as limiting the scope of the present invention. For example, the steps of the flow diagrams may be taken in sequences other than those described, and more or fewer elements may be used in the block diagrams.","The claims should not be read as limited to the described order or elements unless stated to that effect. Therefore, all embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A preferred embodiment of the present invention is described with reference to the following drawings, wherein:",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIGS. 4A","FIG. 3"],"b":["4","4"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIGS. 8A and 8B"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 12","b":"9"}]},"DETDESC":[{},{}]}
