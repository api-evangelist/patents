---
title: Method and apparatus for defining and instrumenting reusable Java server page code snippets for website testing and production
abstract: Reusable JSP code snippets are defined and instrumented for Website testing and production. A user may define tile definitions in a markup language file for a number of JSP code snippets to be included in a store page. Upon receiving store inputs comprising tile definitions and jar files for the features, tables may be generated that map features to stores and features dependencies to features. Based on the tables, the store inputs may be validated. If no error occurs, run time files may be generated and JSP code snippets may be instrumented to the appropriate location for Website testing and production.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08661416&OS=08661416&RS=08661416
owner: International Business Machines Corporation
number: 08661416
owner_city: Armonk
owner_country: US
publication_date: 20090105
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a Divisional of U.S. application Ser. No. 11\/004,284, filed Dec. 3, 2004, entitled \u201cMETHOD AND APPARATUS FOR DEFINING AND INSTRUMENTING REUSABLE JAVA SERVER PAGE CODE SNIPPETS FOR WEBSITE TESTING AND PRODUCTION,\u201d which is incorporated herein by reference in its entirety.","1. Field of the Invention","The present invention relates to an improved data processing system. In particular, the present invention relates to Java\u2122 server pages in a data processing system. Still more particularly, the present invention relates to defining and instrumenting Java server pages code snippets for website testing and production in a data processing system.","2. Description of the Related Art","In a typical electronic business cycle, Website production involves multiple development groups, including page designers and Java developers. Page designers design individual Web pages for the Website, while Java developers develop application logic behind the Web pages. Both groups execute test cases or scenarios using Web pages from the page designers and application logic from the Java developers before deploying the Website into production.","When developing Web pages, page designers often require references to other types of resources. These resources include J2EE enterprise JavaBeans\u2122 and Java application programming interface (API) developed by the Java developers (Java and all Java-related marks are trademarks of Sun Microsystems, Inc. in the United States, other countries, or both). J2EE enterprise JavaBeans are reusable components that perform specific business functions. Java APIs are interfaces that are developed using the Java programming language of Java 2 Standard Edition. J2EE enterprise JavaBeans and Java APIs provide application logic behind Web pages that are developed by the page designers.","On the other hand, Java developers also need certain Web pages created by the page designers in order to verify their application logic. However, not all of the application features provided by the Java developers are needed by the page designers to create Web pages. Some features may be needed by one store, while other features may be needed by another store. In addition, when Java developers test their application logic, they create many alternatives and exception conditions in the test environment that may not be necessary in the Website, depending on the requirements. Thus, the page designers and Java developers each have their own set of test requirements for the Website.","The present invention provides a method, apparatus, and computer program product for defining and instrumenting Java Server Page code snippets for Website testing and production. A user may define tile definitions of desirable JSP code snippets to be included in a skeleton of store pages in a markup language file. Upon receiving store inputs comprising tile definitions and jar files, tables are generated that map features for each store and feature dependencies for each feature. The jar file includes a set of definitions and required snippets for each feature that is defined.","A number of validations may be performed to determine if all the required JSP files are included in the jar file, if selected features conflict with each other, if all dependent features are included in the stores, and if the store identifiers and store directories have conflicts. If any of the validations fails, the present invention logs the error. Otherwise, runtime files may be generated and the JSP code snippets may be deployed to the appropriate location.","As will be appreciated by one of skill in the art, the present invention may be embodied as a method, system, or computer program product. Accordingly, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects all generally referred to herein as a \u201ccircuit\u201d or \u201cmodule.\u201d Furthermore, the present invention may take the form of a computer program product on a computer-usable storage medium having computer-usable program code embodied in the medium.","Any suitable computer readable medium may be utilized. The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific examples (a nonexhaustive list) of the computer-readable medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a transmission media such as those supporting the Internet or an intranet, or a magnetic storage device. Note that the computer-usable or computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium, then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory. In the context of this document, a computer-usable or computer-readable medium may be any medium that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device.","Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java7, Smalltalk or C++. However, the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages, such as the \u201cC\u201d programming language. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer. In the latter scenario, the remote computer may be connected to the user's computer through a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","The present invention is described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","With reference now to the figures,  depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network data processing system  is a network of computers in which the present invention may be implemented. Network data processing system  contains a network , which is the medium used to provide communications links between various devices and computers connected together within network data processing system . Network  may include connections, such as wire, wireless communication links, or fiber optic cables.","In the depicted example, server  is connected to network  along with storage unit . In addition, clients , , and  are connected to network . These clients , , and  may be, for example, personal computers or network computers. In the depicted example, server  provides data, such as boot files, operating system images, and applications to clients -. Clients , , and  are clients to server . Network data processing system  may include additional servers, clients, and other devices not shown. In the depicted example, network data processing system  is the Internet with network  representing a worldwide collection of networks and gateways that use the Transmission Control Protocol\/Internet Protocol (TCP\/IP) suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational and other computer systems that route data and messages. Of course, network data processing system  also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN).  is intended as an example, and not as an architectural limitation for the present invention.","Referring to , a block diagram of a data processing system that may be implemented as a server, such as server  in , is depicted in accordance with an aspect of the present invention. Data processing system  may be a symmetric multiprocessor (SMP) system including a plurality of processors  and  connected to system bus . Alternatively, a single processor system may be employed. Also connected to system bus  is memory controller\/cache , which provides an interface to local memory . I\/O bus bridge  is connected to system bus  and provides an interface to I\/O bus . Memory controller\/cache  and I\/O bus bridge  may be integrated as depicted.","Peripheral component interconnect (PCI) bus bridge  connected to I\/O bus  provides an interface to PCI local bus . A number of modems may be connected to PCI local bus . Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to clients - in  may be provided through modem  and network adapter  connected to PCI local bus  through add-in connectors.","Additional PCI bus bridges  and  provide interfaces for additional PCI local buses  and , from which additional modems or network adapters may be supported. In this manner, data processing system  allows connections to multiple network computers. A memory-mapped graphics adapter  and hard disk  may also be connected to I\/O bus  as depicted, either directly or indirectly.","Those of ordinary skill in the art will appreciate that the hardware depicted in  may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention.","The data processing system depicted in  may be, for example, an IBM\u00ae eServer\u2122 pseries\u00ae computer system, running the Advanced Interactive Executive (AIX\u00ae) operating system or LINUX operating system (IBM, eServer, pSeries and AIX are trademarks of International Business Machines Corporation in the United States, other countries, or both while Linux is a trademark of Linus Torvalds in the United States, other countries, or both).","With reference now to , a block diagram illustrating a data processing system is depicted in which the present invention may be implemented. Data processing system  is an example of a client computer. Data processing system  employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Accelerated Graphics Port (AGP) and Industry Standard Architecture (ISA) may be used. Processor  and main memory  are connected to PCI local bus  through PCI bridge . PCI bridge  also may include an integrated memory controller and cache memory for processor . Additional connections to PCI local bus  may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN) adapter , SCSI host bus adapter , and expansion bus interface  are connected to PCI local bus  by direct component connection. In contrast, audio adapter , graphics adapter , and audio\/video adapter  are connected to PCI local bus  by add-in boards inserted into expansion slots. Expansion bus interface  provides a connection for a keyboard and mouse adapter , modem , and additional memory . Small computer system interface (SCSI) host bus adapter  provides a connection for hard disk drive , tape drive , and CD-ROM drive . Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors.","An operating system runs on processor  and is used to coordinate and provide control of various components within data processing system  in . The operating system may be a commercially available operating system, such as Windows XP, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on data processing system . Instructions for the operating system, the object-oriented programming system, and applications or programs are located on storage devices, such as hard disk drive , and may be loaded into main memory  for execution by processor .","Those of ordinary skill in the art will appreciate that the hardware in  may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash read-only memory (ROM), equivalent nonvolatile memory, or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in . Also, the processes of the present invention may be applied to a multiprocessor data processing system.","As another example, data processing system  may be a stand-alone system configured to be bootable without relying on some type of network communication interfaces. As a further example, data processing system  may be a personal digital assistant (PDA) device, which is configured with ROM and\/or flash ROM in order to provide non-volatile memory for storing operating system files and\/or user-generated data.","The depicted example in  and above-described examples are not meant to imply architectural limitations. For example, data processing system  also may be a notebook computer or hand held computer in addition to taking the form of a PDA. Data processing system  also may be a kiosk or a Web appliance.","A method, apparatus, and computer program product for defining and instrumenting reusable Java Server pages code snippets for Website testing and production is provided. Reusable Java server pages code snippets in a markup language file are defined and the defined code snippets are instrumented into a skeleton of store pages, such that functionalities of a Website may be implemented in a pluggable manner for testing and production.","A Java server page (JSP) is a dynamic Web page that includes a set of functionalities. A Java server page code snippet is a fragment of the JSP that provides a subset of the functionalities or a feature, such as, a promotion feature of an online retail store. In an aspect of the present invention, a searchable library of functions as a set of JSP code snippets is provided. Page designers and Java developers may assemble a set of JSP codes snippets in the searchable library as building blocks for constructing a Web site. Thus, page designers and Java developers may add different functionalities to the Web site using different JSP code snippet.","A way to plug in desirable JSP code snippets into a skeleton of a basic business flow is provided. A skeleton includes a number of store pages that form a business flow for the Website. For example, a retail store skeleton may include a category display page, which allows customers to choose a list of products; a product display page, which lists each of the products; and a shopping cart page, which allows a customer to check out the chosen products.","In order to accommodate a variety of functional testing requirements and a need of different features for different business models, a set of JSP code snippets are instrumented into the skeleton. Each JSP code snippet is self sufficient, and does not rely on other setup or variables defined in the skeleton store pages. Instrumentation of JSP code snippets to the store pages with standard JSP syntax may be allowed. Since the JSP code snippets are fragments of a JSP page, the JSP code snippets do not include certain HTML tags, for example, the head tag and the body tag.","In an aspect of the present invention, a store definition file is taken as an input for a Website or a store, which defines a set of feature definitions desired by the user. For each feature, a jar file is included. The jar file includes a set of definitions and required snippets for the feature that is defined.","Once the inputs are received, a table is generated that maps features that are defined in the input file to the corresponding store. In addition to a mapping of features and stores, a tables of features and feature dependencies is also generated. Feature dependencies are other features that a feature depends, for example, a bundle feature may depend on a category browsing feature in order to display a list of products to the on-line shopper.","After the mapping tables are generated, all the inputs are validated. The validations include checking the jar file to see if it contains all the JSP files as defined in feature definitions, checking if the features conflict with one another, checking if a store includes all the dependent features, and checking if the store directories have conflicts. If an error is found in any one of the validations, a text report is generated for any failure that occurs to a log directory.","Once the validations are performed, run time files that are necessary for the store are generated, for example, struts-config.xml file, and the run time files including the JSP code snippets to the appropriate location are deployed. At the same time, other required Web assets, such as layout files, are also deployed. Thus, after the run time files are deployed, the JSP code snippets are now instrumented.","At run time, an on-line shopper may click on a link or a button of a JSP code snippet displayed in a store page. The system either displays another skeleton store page, which in turn may include another JSP code snippet, or displays another store page in which the main content is obtained from a JSP code snippet.","Since users may pick and choose reusable JSP code snippets to be included in store pages, efforts required to develop store pages are minimized and overall development costs are reduced. Also, a user may pick and choose desirable features based on the business model by instrumenting desired JSP code snippets.","Turning now to , a diagram illustrating interaction between components for defining and instrumenting JSP codes snippets is depicted in accordance with an aspect of the present invention. As shown in , Website  may be implemented on a Web server using a server, such as data processing system  in . In this example, Website  includes skeleton store pages , , and  and JSP code snippets ,  and . Skeleton store pages , , and  describe a business flow for the Website.","In a first scenario, Java developers instrumented JSP code snippets  in store page . Store page  may be one of the Web pages designed by the page designer. At run time, since JSP code snippet  is included in skeleton store page , the displayed store page is composed of both the skeleton and the snippet. In this case, JSP code snippets  include application logic developed by Java developers that are used for testing purposes or provide a specific feature. After a shopper clicks a button or a link in store page , the system displays another skeleton store page , which in turn may include another set of JSP code snippets.","In a second scenario, Java developers instrumented JSP code snippets  in store page . The store page displays the content of both skeleton store page  and JSP code snippet . At run time, when a shopper clicks on a button or link in the snippet , the shopper is directed to another JSP code snippet , which are not included in any skeleton store page . In this case, the snippet itself becomes the store page and the main content of the page is obtained from a JSP code snippet. This scenario occurs usually when skeleton pages do not provide the features in JSP codes snippets  and . When JSP code snippets  and  are displayed, some of the links or buttons in JSP code snippets  and  direct the shopper to the next store page .","Turning now to , a diagram illustrating an exemplary instrumentation of JSP code snippets in an online retail store is depicted in accordance with an aspect of the present invention. As depicted in , online retail store  is a Website with a skeleton of store pages, such as Website  in . Online retail store  currently does not support a bundle feature, which is a set of products. Therefore, Java developers attempt to instrument the bundle feature to skeleton store pages  in online retail store  using JSP code snippets bundle display .","In this example implementation, new category JSP code snippet  with bundle support is appended to the bottom of skeleton store page category display  in order to add functionality to the store. When a shopper clicks on a bundle link in category JSP code snippet , the bundle display JSP code snippet  is displayed. If a shopper selects an \u2018Add to Order\u2019 button in bundle display JSP code snippet , the shopper is directed to shopping cart skeleton store page .","In addition to selecting JSP code snippets from a searchable library, page designers and Java developers may be allowed to instrument JSP code snippets using eXtensible Markup Language (XML) tile definitions. As a person of ordinary skill in the art would appreciate, content of a JSP page may be divided into a number of tiles. Each tile represents a specific functionality and presentation for the JSP page. XML tile definition is a way of defining each tile of a JSP page in XML configuration file. By using XML tile definitions, developers may insert different content to a JSP file.","In order to compose a store using a set of JSP code snippets, a XML tile definition configuration file may be used to include the new snippets. In addition, a flexible snippet inclusion may be provided by preparing a number of templates to adapt different JSP code snippets.","Turning now to , a diagram illustrating an exemplary XML tile definition configuration file for JSP code snippets inclusion is depicted in accordance with an aspect of the present invention. As depicted in , in this example implementation, in XML tile definition configuration file , a definition name of TestStoreDefinition  is defined for pages that only include one skeleton page or one snippet. The tile layout JSP used for this definition is TestStoreLayout.jsp .","In order to include JSP code snippet in skeleton page of the test store, such as SkeletonPage.jsp , the definition of TestStoreSnippetDefinition  and TestStore.SkeletonPage  extends the TestStoreSnippetDefinition  using the \u201cextends\u201d attribute  and specifies the location of the JSP file for the JSP code snippet using \u201csnippet\u201d attribute . In this example, the location of JSP code snippet is \u201c\/Snippets\/Components\/Feature\/JSPCodeSnippet.jsp\u201d .","TestStoreSnippetDefinition  is a parent definition that uses TestStoreSnippetLayout.jsp  to insert a body page and JSPCodeSnippet , which was previously defined in \u201csnippet\u201d attribute . Any store page that needs to include one snippet may extend from TestStoreSnippetDefinition .","Similarly, TestStoreSnippetDefinition  uses TestStoreSnippetLayout.jsp  to include two JSP code snippets to the TestStore.SkeletonPage . An extension of the tile definition is defined from TestStoreSnippetDefinition  and specifies the location of the two JSP files for the JSP code snippets by using \u201csnippet\u201d  and \u201csnippet\u201d  attributes. The location of JSP code snippet for \u201csnippet\u201d is \u201c\/Snippets\/Component\/Feature\/JSPCodeSnippet.jsp\u201d  and the location of snippet is \u201c\/Snippets\/Component\/Feature\/JSPCodeSnippet.jsp\u201d . Thus, developers may explicitly define one or more JSP code snippets to be included in a store page in the XML tile definition configuration file. In addition, the same layout page may be used for more than one definition.","Turning now to , a diagram illustrating an exemplary XML store definition for a test store is depicted in accordance with an aspect of the present invention. As depicted in , in XML store definition , a test store name, TestStore  is defined, which includes four features: CatalogBrowsing feature , Bundle feature , Checkout feature , and UserAccount feature .","Turning now to , a diagram illustrating an exemplary XML feature definition for a catalog browsing feature is depicted in accordance with an aspect of the present invention. As depicted in , in XML feature definition configuration file , feature name catalogBrowsing feature  is defined. XML feature definition of CatalogBrowsing feature  includes 2 sections: a list of dependences on other features  and all the forward features with their corresponding tiles definitions .","In this example, CatalogBrowsing feature  depends on one Checkout feature . CatalogBrowsing feature  has three main forwards: TopCategoriesDisplay , CategoriesDisplay , and ProductDisplay . A main forward is used to define a JSP page to be displayed responsive to an action received in a user request. Typically, main forwards are used to help generate a Struts configuration file, which determines the routing of a business flow. More information regarding the manner by which main forwards are used in the context of a Struts framework may be obtained from the Struts project, version 1.2.6, available from the Apache Software Foundation, which is hereby incorporated by reference.","While tiles definitions ProductDisplay , TopCategoriesDisplay  and CategoryDisplay  are all included in the same template, regular_template.jsp , the content of ProductDisplay  feature, TopCategoriesDisplay , and CategoryDisplay  are located in ProductDisplay.jsp , TopCategoriesDisplay.jsp , and CategoryDisplay.jsp , respectively.","Turning now to , a diagram illustrating an exemplary XML feature definition for a checkout feature is depicted in accordance with an aspect of the present invention. As shown in , similar to CatalogBrowsing feature  in , XML feature definition configuration file  includes name definition of checkout feature . Checkout feature  depends on a UserAccount feature .","Also similar to CatalogBrowsing feature  in , Checkout feature  includes five forward features with their tiles definitions . These forward features are OrderItemDisplay , BillingAddress , MultipleShippingAddress , OrderDisplayPending , and OrderOK . Just like the tiles definitions in , forward features - are included in the same template, the content of each forward feature is located in different JSP files.","Turning now to , a diagram illustrating an exemplary XML feature definition for a bundle feature is depicted in accordance with an aspect of the present invention. As shown in , XML feature definition configuration file  includes name definition for bundle feature . Feature definition of Bundle feature  includes 3 sections: a list of dependencies on other features  and feature forwards with their corresponding tiles definitions , and a list of JSP code snippets that are included in feature .","Bundle feature  includes a forward feature of BundleDisplay , which provides a display of details for each product in the bundle. JSP code snippet section  defines where to include the JSP code snippet to a page. The inclusion definition entry  defines that the JSP code snippet should be included in CategoryDisplay page of the Catalog Browsing feature  in . The inclusion definition section defines the location of the JSP code snippet  with name \u201csnippet\u201d . The location of the JSP code snippet is located in \u201c\/Snippets\/Catalog\/BundleListDisplay.jsp\u201d . BundleListDisplay.jsp  provides a display of a list of bundles.","Turning now to , a flowchart of an exemplary process for defining and instrumenting reusable JSP code snippet for Website testing and production is depicted in accordance with an aspect of the present invention. As shown in , the process begins with the reception of store inputs and jar files from a user request (step ).","Store inputs are store definition files, such as TestStore  in . Store definition files include information such as the store directory and the store identifier. A jar file is defined for each feature. The jar file includes a set of JSP files that defines the logic of the JSP code snippets that are defined for the feature, as well as a set of properties files for the respective JSP code snippets. The jar file also includes a feature definition file, such as XML feature definition configuration file , which defines catalogBrowsing feature  in .","Next, a table is generated that maps a number of stores to a number of features (step ). The table provides an interpretation of what features are available for which store. In addition, a table is generated that maps a number of features to a number of feature dependencies (step ). For example, in , a bundle feature may require a catalog browsing feature so that a listing of bundles can be displayed. Thus, feature dependencies are determined and all dependent features are included in the stores prior to deploying the Website.","Once the tables are generated, the inputs are validated to determine errors. The first validation is to determine if the jar file received includes all the JSP files that are listed in the feature definition file (step ). If the jar file does not include all the JSP files listed in the feature tile definition file, the process continues to step .","Otherwise, the second validation is performed to determine if features that are listed in the feature definition file conflict with each other (step ). This step includes determining if two jar files may have the same feature names, which means the features conflict with each other. If the features conflict with each other, the process continues to step .","If the features do not conflict with each other, the third validation is performed to determine if dependent features are included in requested stores (step ). This step is performed based on the table of features and features dependencies generated in step . This step includes determining if the stores include all of their dependencies, since the stores should not have any broken link. If the dependent features are not included in the stores, the process continues to step .","If the dependent features are included in the stores, a fourth validation is performed to determine if the store identifiers and the store directories from the mapping tables or environment have conflicts (step ). This step is performed to ensure that two stores may not have the same store directory or store identifier. If the store identifiers and the store directories have conflicts, the process continues to step . At step , a text report of the failure that occurred to a log directory is generated, and the process terminates thereafter.","If the store identifiers and the store directories do not have conflicts, necessary run time files (step ) for the Website are generated, including struts-config.xml file, which describes routing of the business flow for the Website. All JSP code snippets to the appropriate location (step ) are then deployed by copying the JSP code snippets and their corresponding properties files from the jar files.","In addition, other required Web assets are also deployed to the appropriate location (step ). These Web assets include the layout JSP files and cascade style sheet files that describe the page layout. If necessary, extension points are also provided to support additional processing for customization (step ). Once the stores are generated, the process terminates thereafter.","In summary, a method and apparatus is provided to instrument reusable JSP code snippets into a skeleton of store pages, such that functionalities of a Website may be implemented in a pluggable manner for testing and production. In addition, existing Struts and Tiles technologies is leveraged and a method for defining tiles definitions for different features of a store is provided.","The flowcharts and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems which perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The description of the present invention has been presented for purposes of illustration and description, and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
