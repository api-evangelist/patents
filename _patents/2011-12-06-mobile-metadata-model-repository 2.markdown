---
title: Mobile metadata model repository
abstract: A system includes creation of a first data structure defining a generic business object model in a storage medium of a first device, creation of a second data structure defining a specific business object model in the storage medium of the first device, where the specific business object model being an instance of the generic business object model, reception of the second data structure defining the specific business object model at a mobile device, and storage of the second data structure in a storage medium of the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09633107&OS=09633107&RS=09633107
owner: SAP SE
number: 09633107
owner_city: Walldorf
owner_country: DE
publication_date: 20111206
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["Some embodiments relate to enterprise applications based on metadata models and supported by a backend application platform. More specifically, some embodiments relate to development and consumption of mobile-specific metadata models.","Some business application platforms advantageously provide model-driven development of business applications. For example, instead of writing lines of program code, a developer may develop an application by defining business-oriented semantic models and their process flow. These \u201cdesign time\u201d entities are then transformed to executable coding (i.e., \u201cruntime artifacts\u201d), and the runtime artifacts are processed via appropriate runtime engines (e.g., an Enterprise Service Framework (ESF) for business object runtime artifacts or a user interface framework for floor plan runtime artifacts).","Commonly-assigned and co-pending U.S. application Ser. No. 12\/339,339, filed Dec. 19, 2008 and entitled \u201cMetadata Model Repository\u201d, describes a system which provides consistent and consolidated model-driven development of desktop business applications. Such a system is not suitable for the development of mobile versions of business applications, so mobile versions, if desired, must be hard-coded. Systems are desired to facilitate model-driven development of mobile device-tailored business applications for consumption by mobile devices.","Some embodiments support meta-data centric development of mobile business applications. Metadata models and object models are created or modified within a backend metadata model repository, which shares the same meta-metadata model as a metadata model repository located on a mobile device. The metadata models and object models may then be transferred to the mobile device and made available for model consumers on the mobile device.","By allowing reuse of already-available backend design time tools instead of requiring mobile-specific design time tools, some embodiments facilitate development and integration of online and offline mobile business applications which are consistent with corresponding desktop business applications. Some embodiments may also eliminate the need for model checks and validation on mobile devices, which are particularly resource-consuming.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","110","120","130","140","150","160"]},"Application platform  may execute applications conforming to objects defined by metadata of repository . The applications may retrieve, create, modify and\/or delete the data of object instances stored in datastore . Datastore  may comprise any one or more systems to store business data. Such systems include, but are not limited to, relational database systems, Online Analytical Processing (OLAP) database systems, data warehouses, application servers, and flat files.","Metadata repository  includes metadata models, each of which describes the structure and behavior of an object. The metadata models may be embodied in any type of data structure, including but not limited to eXtensible Markup Language files. The metadata models may describe, for example, a generic view, a generic floorplan (i.e., a user interface layout), a generic business object, a generic work center, generic UI texts, and generic process components, but embodiments are not limited thereto. These generic metadata models may be collectively referred to as metaobjects.","The business object metadata model represents real-world entities involved in business transactions. For example, an instance of the business object metadata model may represent a specific business document such as a sales order, a purchase order, or an invoice. An instance of the business object metadata model may also represent specific master data objects such as a product, a business partner, or a piece of equipment. Actual documents and master data objects (e.g., SalesOrder 504711, ACME corporation) are represented by instances of their representing specific business object (e.g., SalesOrder, Corporation), which in turn is an instance of a corresponding generic metadata model (e.g., Business Object).","Metadata repository  may also include metadata models (i.e., \u201cgeneric\u201d object models) and instances thereof (i.e., \u201cspecific\u201d object models) which are particularly suited for consumption by a mobile device. For example, metadata repository  may include data defining a Mobile Floorplan metaobject as well as a Floorplan metaobject. Moreover, metadata repository  may include data defining a Mobile SalesOrder object model as well as a SalesOrder object model. The term \u201cmobile\u201d may refer to any device suitable for mobile usage, such as but not limited to a smartphone, a tablet computer, a dedicated device, and an e-reader, as well as any device including a display having a 10-in or smaller diagonal dimension and\/or a touchscreen, whether or not the device is suited for mobile use.","Each of the metadata models of metadata repository  may comprise an instance of a same meta-metadata model. The meta-metadata model may consist of nodes, composite associations, associations, elements structure and attribute properties. The development of any metaobjects or object models of metadata repository  may therefore proceed using the same development technologies, thereby facilitating integration of the various specific object models. According to some embodiments, the above-mentioned meta-metadata model is identical to the business object metadata model. In other words, the business object metadata model may comprise an instance of itself.","Metadata designer  may be operated by a developer to design metaobjects, object models and business applications based thereon. These business applications may be consumed by large format client  and mobile format client . Large format client  and mobile format client  may each comprise an application and\/or computing device for communicating with application platform . Accordingly, a user may operate large format client  or mobile format client  to view, edit or otherwise interact with data of datastore  as provided by application platform .","As will be described in more detail below, such operation by mobile format client  may comprise consumption of metadata models defined within metadata repository . In some embodiments, this consumption is facilitated by the provision of a mobile metadata model repository residing on mobile format client .",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["200","200","150","200"]},"Metadata model layer  includes metadata models as described above, and illustrates logical dependencies between the metadata models. As also described above, each metadata model may comprise an instance of a meta-metadata model. Metadata implementation layer  includes a business object processing framework (BOPF) to implement specific object models derived from the metadata models of layer . Layer  may manage model instance persistencies as well as a lifecycle thereof. The BOPF may also implement model consistency constraints as is known.","The BOPF of metadata implementation layer  may generate appropriate database tables in persistency layer  to store data structures comprising object models (e.g., SalesOrder) derived from the metadata models of layer . Available database tables (e.g., optimized database tables or proxy data) may also be used and connected to the BOPF business object implementation. A persisted repository object model may also include unstructured data that may be referenced. Architecture  may therefore provide the capability to create, change and store different object models (as opposed to only the instances thereof) and to support their lifecycle management (e.g., shipment, change management, versioning).","ABAP services  represent a generic connection to ABAP services provided for all instances (i.e., object models) derived from the repository metadata models. Such services may include transport and correction tools and an ABAP development workbench. ABAP services  may be similar to corresponding ABAP services currently provided for business object instances.","Access layer  provides uniform mechanisms to access repository object models. For example, Business Query Language\/BSA++ may be used to access design time aspects of the object models. During runtime, access layer may provide specific performance-optimized application programming interfaces and buffering facilities.","Architecture  therefore provides and supports functionality for creating and administrating metaobjects of metadata model layer  and corresponding object models defined by data structures stored in persistency layer . More specifically, some embodiments of architecture  provide generic facilities and frameworks to create define and edit metadata models (e.g., a UI entity metadata model or a process component entity metadata model) and associated object models, to integrate metadata models from different domains (e.g., UI, BO, BI Report), to create cross-model references and build relationships between metadata models and object models, to propagate metadata model and object model changes to different consumers, to perform live constraint checking during model creation, to support a model query language, to provide versioning and lifecycle management of metadata models and object models, and\/or to extend metadata models in multi-client environments.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["300","140","300","200","140"]},"Architecture  does not include a metadata model implementation layer as shown in architecture , under the assumption that the metadata models and object models are created and administrated on application platform . Embodiments of architecture  may, of course, include all or a portion of such an implementation layer.","Metadata repository engine  includes Model Access APIs and Synchronization Services. The Model Access APIs may include generic APIs for standardized retrieval and access of metadata models and object models. Accordingly, any model consumers located on mobile format device  (e.g., model runtime engines or model runtime generators) may use the Model Access APIs to retrieve and access the locally-stored metadata models and object models.","The Synchronization Services offer a set of Web Services that are used to synchronize the metadata models and object models on mobile format device  with the corresponding active versions of the models within metadata repository . Therefore, changes to relevant metadata models and object models within metadata repository  are registered by the corresponding Synchronization Service of repository engine . Synchronization may be triggered explicitly on mobile format device  in order to transfer the active versions of metadata models and object models registered within repository architecture  from platform  to device , and to store the active versions in repository architecture . The Synchronization Service may also inform all registered model consumers of mobile format device  of changes to the stored model. For example, based on changes to relevant models, a model consumer may invalidate any runtime artifacts which were generated based on the prior versions of the relevant models.","Metadata model and persistency layer  includes metadata models and object models as described with respect to architecture . Again, all metadata models of architecture  (and of architecture ) may comprise instances of a same meta-metamodel. The database schema of layer  contains separate tables for the different elements of the meta-metamodel such as nodes, node structures or associations. Therefore, data defining a specific metadata model or object model is accessed by retrieving the corresponding element instances from the different tables.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4","b":["400","100","400"]},"All processes mentioned herein may be embodied in processor-executable program code stored on one or more of non-transitory computer-readable media, such as a fixed disk, a floppy disk, a CD-ROM, a DVD-ROM, a Flash drive, and a magnetic tape. In some embodiments, hard-wired circuitry may be used in place of, or in combination with, program code for implementation of processes according to some embodiments. Embodiments are therefore not limited to any specific combination of hardware and software.","Initially, at S, a first metaobject (i.e., \u201cM2 model\u201d) is created in a metadata repository of a backend system. As described above, the M2 model is an instance of a particular meta-metadata model (i.e., \u201cM3 model\u201d). In one example of S, a data structure defining a generic object model (e.g., a Floorplan metaobject) is created by executing program code of metadata designer  and metadata repository  and stored in a persistent storage of metadata repository . The data structure defines a structure and a set of determination and validation rules (i.e., the behavior) of the generic object model.","Next, at S, a first object model (i.e., \u201cM1 model\u201d) is created in the metadata repository based on the first M2 model. The M1 model may comprise an instance of the M2 model, and creation thereof may comprise executing program code of metadata designer  and metadata repository  to create a data structure defining the M1 model and to store the data structure in the persistent storage of metadata repository  (e.g., in persistency layer ).","A second M2 model is created in the metadata repository of the backend system at S. The second M2 model is also an instance of the particular M3 model of which the first M2 model is an instance. According to an example, the second M2 model is a mobile implementation first M2 model (e.g., a Mobile Floorplan metaobject), a data structure defining the second M2 object is created, and the data structure is stored in the persistent storage of metadata repository .","A second M1 model is created in the metadata repository at S based on the second M2 model. The second M1 model is an instance of the M2 model, and program code of metadata designer  and metadata repository  is executed to create a data structure defining the second M1 model and to store the data structure in the persistent storage of metadata repository  (e.g., in persistency layer ).","Next, at S, the second M2 model and the second M1 model are synchronized with a metadata repository of a mobile device. According to one example, the Synchronization Services of architecture  are invoked to receive the data structures defining the second M2 model and the second M1 model, and the Model Access APIs are of architecture  are used to store the data structures in a persistent storage of the mobile device (e.g., in layer ). Consequently, the second M2 model and the second M1 model may be consumed by model consumers executed by the mobile device.","According to some embodiments, metadata repository architecture  is used to perform checks for validation, consistency and cross-references of the created M2 and M1 models. Mobile repository architecture  therefore does not require services to perform these functions. Rather, it is assumed that the M2 and M1 models which are synchronized to architecture  have already satisfied the relevant checks.","Some metadata models might not require a mobile-specific variant. That is, the same M2 model and corresponding M1 models may be created and consumed by application platform  and also persisted in layer  for consumption by a mobile device.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 5","FIG. 6"],"b":["500","500","420","500","130","600","610","610","440","600","600"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 7","b":["700","700","700","110","150","160","700"]},"Apparatus  includes processor  operatively coupled to communication device , data storage device , one or more input devices , one or more output devices  and memory . Communication device  may facilitate communication with external devices, such as a reporting client or a data storage device. Input device(s)  may comprise, for example, a keyboard, a keypad, a mouse or other pointing device, a microphone, knob or a switch, an infra-red (IR) port, a docking station, and\/or a touch screen. Input device(s)  may be used, for example, to enter information into apparatus . Output device(s)  may comprise, for example, a display (e.g., a display screen) a speaker, and\/or a printer.","Data storage device  may comprise any appropriate persistent storage device, including combinations of magnetic storage devices (e.g., magnetic tape, hard disk drives and flash memory), optical storage devices, Read Only Memory (ROM) devices, etc., while memory  may comprise Random Access Memory (RAM).","Program code of metadata designer  and application platform  may be executed by processor  to cause apparatus  to perform any one or more of the processes described herein. Embodiments are not limited to execution of these processes by a single apparatus. Metadata repository  is also stored in data storage device , and may include program code as well as database tables and other elements as described with respect to architecture .","Data storage device  may also store data and other program code for providing additional functionality and\/or which are necessary for operation thereof, such as device drivers, operating system files, etc.","Apparatus  of  may comprise an implementation of mobile device  according to some embodiments. Apparatus  may therefore perform any of the processes attributed herein to mobile device .","Apparatus  may include memory interface , one or more microcontrollers, image processors and\/or central processing units , and peripherals interface . Memory interface , one or more processors  and\/or peripherals interface  may comprise separate components or can be integrated in one or more integrated circuits. The various components in apparatus  may be coupled to one another by one or more communication buses or signal lines.","Sensors, devices and subsystems can be coupled to peripherals interface  to facilitate multiple functionalities. For example, location sensor , camera , compass , wireless device , and audio device  may be provided to facilitate the collection, use and interaction with data and information and to achieve the functionality described herein. Some embodiments may provide additional peripheral devices, including but not limited to an accelerometer, a photoelectric device, and a proximity sensor.","Location sensor  may include circuitry and sensors for supporting a location determining capability, such as that provided by the Global Positioning System or other positioning system (e.g., systems using Wi-Fi access points, television signals, cellular grids, Uniform Resource Locators (URLs)). In some implementations, any peripheral (e.g., a Global Positioning System receiver) can be integrated into apparatus  or provided as a separate device that can be coupled to apparatus  through peripherals interface  to provide desired functions.","Camera  may be located on a back surface of apparatus . Camera  may capture still images and\/or video. Compass  may determine an orientation of apparatus  with respect to compass headings, and wireless device  may include one or more wireless communication subsystems, such as an 802.11b\/g communication device, and\/or a Bluetooth\u00ae communication device. Other communication protocols can also be supported, including other 802.x communication protocols (e.g., WiMax, Wi-Fi), code division multiple access (CDMA), global system for mobile communications (GSM), Enhanced Data GSM Environment (EDGE), 3G (e.g., EV-DO, UMTS, HSDPA), etc.","Audio unit  may include a speaker and a microphone to facilitate voice-enabled functionalities, such as phone and voice mail functions. In some implementations, additional sensors or subsystems may be coupled to the peripherals interface  via connectors such as, for example a Universal Serial Bus (USB) port, or a docking port, or some other wired port connection.","I\/O subsystem  may include touch screen controller  and\/or other input controller(s) . Touch-screen controller  may be coupled to touch screen . Touch screen  and touch screen controller  may, for example, detect contact (i.e., touch input), movement (i.e., drag input) and release thereof using any of a plurality of touch-sensitivity technologies, including but not limited to capacitive, resistive, infrared, and surface acoustic wave technologies, as well as other proximity sensor arrays or other elements for determining one or more points of contact with touch screen . Other input controller(s)  may be coupled to other input\/control devices , such as one or more buttons, rocker switches, thumb-wheel, infrared port, USB port, and\/or a pointer device such as a stylus.","Memory interface  is coupled to memory . Memory  can include high-speed random access memory and\/or non-volatile memory, such as one or more magnetic disk storage devices, one or more optical storage devices, and\/or flash memory (e.g., NAND, NOR). Memory  may store program code of model consumer  and repository engine , which may be executed by processors  to cause apparatus  to perform the functions described herein. Memory  also stores metadata models  and object models  of persistency layer .","Memory  may store an operating system, such as Android, Darwin, RTXC, LINUX, UNIX, OS X, WINDOWS, or an embedded operating system such as VxWorks. The operating system may include instructions for handling basic system services and for performing hardware dependent tasks. In some embodiments, the operating system can be a kernel (e.g., UNIX kernel). Memory  may also store data, including but not limited to documents, images, video files, audio files, and other data.","The diagrams described herein represent logical architectures for describing processes according to some embodiments, and actual implementations may include more or different components arranged in other manners. Other topologies may be used in conjunction with other embodiments. Moreover, each system described herein may be implemented by any number of devices in communication via any number of other public and\/or private networks. Two or more of such computing devices may be located remote from one another and may communicate with one another via any known manner of network(s) and\/or a dedicated connection. Each device may comprise any number of hardware and\/or software elements suitable to provide the functions described herein as well as any other functions. For example, any computing device used in an implementation of system  may include a processor to execute program code such that the computing device operates as described herein.","Elements described herein as communicating with one another are directly or indirectly capable of communicating over any number of different systems for transferring data, including but not limited to shared memory communication, a local area network, a wide area network, a telephone network, a cellular network, a fiber-optic network, a satellite network, an infrared network, a radio frequency network, and any other type of network that may be used to transmit information between devices.","Moreover, communication between systems may proceed over any one or more transmission protocols that are or become known, such as Asynchronous Transfer Mode (ATM), Internet Protocol (IP), Hypertext Transfer Protocol (HTTP) and Wireless Application Protocol (WAP).","The embodiments described herein are solely for the purpose of illustration. Those in the art will recognize other embodiments may be practiced with modifications and alterations limited only by the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
