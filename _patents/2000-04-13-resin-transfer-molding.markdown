---
title: Resin transfer molding
abstract: A sensor placement algorithm uses process data to determine the optimal distribution of sensors in a distributed parameter manufacturing system. An automatic classification procedure maps any problems in the process to a predetermined set of process disturbances. A control procedure uses process data to determine the best control action that will ensure good system response. Methods for sensor placement, automatic decision tree classification, corrective action control and the apparatus to effectuate these respective methods are integrated into a design methodology.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06856856&OS=06856856&RS=06856856
owner: Honeywell International Inc.
number: 06856856
owner_city: Morristown
owner_country: US
publication_date: 20000413
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","GOVERNMENT INTEREST","TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Optimal Sensor Location","Decision Trees","Control Actions","A System","Conclusion"],"p":["This application is related to application Ser. No. 09\/548,537, entitled \u201cSensor Placement and Control Design for Distributed Parameter Systems\u201d filed on even date herewith.","This invention was made with United States Government support under contract F05242 of the Office of Naval Research. The Government may have certain rights in the invention.","The present invention relates in general to methods and apparatus for the automatic control of manufacturing processes, and particularly to improve sensing and control methodologies for resin transfer molding.","Resin transfer molding (RTM} is a technique of liquid composite molding (LCM) wherein a thermosetting resin is injected into a closed mold into which a fiber preform has been placed. The fiber preform (typically composed of fiberglass, carbon or graphite) imparts tensile strength, stiffness, toughness and mechanical reinforcement to the part. The thermoset resins (typically epoxies, polyamides, polyesters and phenolics) help in binding the fibers together, and impart compressive strength, dimensional and thermal stability and good fatigue properties to the part.","In the RTM process, a fiber is placed in a mold and the mold is closed. A polymer resin is injected into the mold and the fiber preform is impregnated with the resin. Once the filling of the mold is completed, the part is cured by subjecting it to a temperature-pressure recipe over time. During curing, a polymerization reaction occurs where the resin monomers are cross-linked to produce higher molecular weight polymers. Once the part is cured, the mold is opened, and the part is removed.","RTM is gaining popularity because of its net-shape forming capability, easy tailoring of final part properties, ease of use, and lower molding costs and time relative to other techniques like hand-layup and filament winding. RTM has been used to manufacture ship hulls, wheel bases for armored vehicles, and freight car panels, and numerous parts on military aircraft.","The mold filling stage and the resin curing stage of the RTM process are of particular importance because these stages are often particularly sensitive, thus errors often occur. For example, if resin injection and mold filling are not ideal, the fiber perform may not be completely impregnated and hence, voids or \u201cdry spots\u201d can occur in part. Voids can cause local areas of decreased strength in the part.","The control of resin transfer molding (RTM) is essentially a disturbance rejection problem in a batch setting. The main objective of RTM is to successfully fill a given mold without any dry spots. However, permeability changes within the mold and presence of air channels inducing racetracking scenarios cause major disturbances to the above objective.","Furthermore, current techniques to automatically control manufacturing processes have not adequately overcome a major challenge when developing a control strategy, which is to identify the disturbances for a batch and then implement the control action depending upon the type of disturbance. Indeed, many distributed parameter-manufacturing processes, like RTM mold filling, still rely on operator experience and heuristics. Other control strategies developed in the past have tried to generate a good recipe for filling the mold. The process inputs are specified a priori during the off-line design of this recipe. However, the issue of how a disturbance can be detected in the mold during on-line operation, and how to generate a corrective control action once it is detected, has not been addressed thus far.","For the reasons stated above, and for other reasons stated below which will become apparent to those skilled in the art upon reading and understanding the present specification, there is a need in the art for means and methods for detecting and identifying disturbances during on-line manufacturing operations and for automatically generating a corrective control action once a disturbance is detected in a distributed parameter manufacturing system.","The above mentioned problems with resin transfer molding processes and other problems are addressed by the present invention, which will be understood by reading and studying the following specification. Apparatus and methods are described which permit the detection of disturbances in a mold during system operation, and the generation of a corrective action control upon detection of the disturbance.","Briefly, the invention provides a computer-implemented method of controlling a resin transfer molding process, including identifying a set of possible disturbances in the process, determining locations within the process for a set of sensors such that the data for particular disturbances are significantly different from the sensor data for other disturbances, and constructing a set of one or more decision trees. Each of the trees has inputs from multiple ones of the sensors and has an output indicating one of the disturbances. The invention then determines at least one of a plurality of control actions, each control action ameliorating the disturbance indicated by the output of each terminal node of the decision tree.","In the following detailed description of the preferred embodiments, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration specific illustrative embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized and that logical, mechanical and electrical changes may be made without departing from the spirit and scope of the present invention. In particular, terms such as \u201coptimum\u201d and \u201coptimize\u201d are sometimes used here, as frequently in the art, to mean an improvement in one or more factors and not in the mathematical sense of a single best value of a parameter. The following detailed description is, therefore, not to be taken in a limiting sense.","When utilizing the RTM process, a mold geometry must be identified and fixed. Then various disturbances that might effect mold filling are to be identified. Once the various disturbance scenarios are identified, in addition to the case with no disturbances, then these scenarios are simulated using a simulation software. The next step is to locate the sensors in the mold so that a decision tree can be constructed. A sensor location algorithm is developed to place the sensors at optimal (with respect to construction of a decision tree) points in the mold. In cases where there is no flexibility in placing the sensors, for example, in the case where sensor locations are already fixed in the mold, the decision tree has to be built based on these sensors. It is not necessary to perform an optimization so as to pick points among the fixed sensor locations. Optimization, or to optimize, means to improve the characteristics of one or more parameters within a given process. Furthermore, optimization is not limited to merely meaning to change these characteristics to a mathematically best value. A decision tree algorithm then generates a decision tree which provides a systematic way to detect the disturbance when a batch is running so that effective control action can be taken. The decision tree is built using relative trip-times or wetting times of sensors located in the mold.","The sensor location algorithm picks points that are optimal for the construction of a decision tree. The decision tree algorithm constructs a decision tree based on the measurements of sensors for the various disturbance scenarios. It is not necessary that the sensor locations, which are the inputs to decision tree algorithm, are those generated by the sensor location algorithm. These two algorithms are independent of each other and could, for example, be used in succession.","Finally, a corrective control action is designed for each of the disturbances. Once the disturbance for a batch is detected, using the decision tree, its corresponding control action is to be implemented. This control methodology presented above can be implemented on various mold geometries.","The control of resin transfer molding can be thought of as a disturbance rejection problem in a batch setting. The main objective is to successfully fill a given mold without any voids or dry spots. However, permeability changes within the mold and presence of air channels inducing racetracking scenarios cause major disturbances to the above objective. a challenge in developing a control strategy is to identify the disturbances for a batch and the implement the control action depending upon the type of disturbance.",{"@attributes":{"id":"P-00024","num":"00024"},"figref":"FIG. 1","b":["100","110","120","130","140","150"]},"A decision tree can be constructed when the data for a particular type of disturbance is significantly different from the data for other types. In other words, it is best suited to pick those points in the mold for which the time of wetting is different for different disturbance scenarios. This algorithm searches through the entire set of points that are obtained from the simulations and picks those points for which the deviations are maximum.","Also, it is very important to place sensors at locations where the disturbance can be detected as early as possible. The algorithm provides this facility where the user can specify the maximum time allowed for detection of the disturbance. The sensors are placed only at those points where the wetting time is less than the specified time. The user can also specify the minimum distance between two sensors. This will help in distributing the sensors over the mold. The procedure can be performed as follows.\n\n","The data about sensor location is an input for the decision tree development stage (). At this point, the previously identified disturbances are classified and, with sensor location data, a decision tree is created. In other embodiments, a particular decision tree is selected from a previously-specified list. A decision tree provides a systematic way to detect the disturbance when a batch is running, so that effective control action can be taken. A decision tree can be built using times when the sensors in the mold are tripped. In another embodiment, a decision tree is constructed using the sequence of sensor trips (e.g., \u201cSensor A trips before sensors B and C\u201d). The decision tree algorithm constructs a decision tree based on the measurements of sensors for the various disturbance scenarios. It is not necessary that the sensor locations which are the inputs to the decision tree algorithm are those generated by the sensor location algorithm.","Given a set of measurements on an object, a decision tree is a systematic way of predicting what class the set belongs to. If x, x, xare the measurement variables, then\n\n{overscore (x)}=[x, x, . . . , x]\n\nis called the measurement vector and x \u03b5 is called the measurement space. If there are J classes, then the set of these classes can be represented as\n\nC={1, 2, . . . , J}\n\nwhere each of the j classes is identified by a number 1 to J.\n","A decision tree can be mathematically described as a function d({overscore (X)}): \u2192C so that for every {overscore (x)} \u03b5 x, d({overscore (x)})=j j \u03b5 C. In other words, the decision tree can be partitioned into J subsets \u2212A, A, . . . , A, such that","\u2003(","The subspaces A, A, . . . , Aare disjoint and \n\n","The classifier is constructed from learning samples, which form a set of measurement vectors L, or for which the class is known. Therefore, L is defined on the Cartesian product (\u201c,\u201d)of X and C.\n\n={(), (), . . . , )}\n","The decision tree is obtained by repeated splitting of subsets of L starting with L itself. The goal is to select each split of a subset so that the data in each of the descendant subsets are purer than the data in the parent subset. Splitting is continued until a particular class can be assigned to a subset. Such a subset is called a terminal subset. The splits are formed by conditions on the coordinates of the measurement space.","In a binary tree terminology, the measurement space is a root node t. The first split results in two nodes (subsets) tand t. Once a good split of tis found, a search is made for good splits of tand t. This process is repeated until terminal nodes are formed when the results are good enough, according to a conventionally selected condition. Hence the construction of a tree consists of these three main tasks: the selection of splits, the rule for declaring a node as terminal, and assigning a class to a terminal node.","This procedure can be performed as follows.\n\n","One example of an impurity function is: \n\n\nTherefore, I(t) ensures that the node impurity is largest when all the cases are equally mixed together in the node and smallest when the node contains only one class.\n",{"@attributes":{"id":"P-00052","num":"00052"},"figref":["FIG. 2","FIG. 2"],"b":["200","210","220","230","240","210","220","230","240","230","240","2"],"sub":["L ","L","R ","R","L ","R","L ","L ","R ","R "],"ul":{"@attributes":{"id":"ul200003","list-style":"none"},"li":["4) The goodness of the split is defined as the decrease in impurity due to a particular split s (),\n\n\u0394()=()\u2212()\u2212()\n","\u2003Define a candidate set S of binary splits s () at each node. Generally, one can conceive the set as a set of questions of the form\n\n\u03b5(\u2212\u221e, \u221e)\n","\u2003Then the associated split s sends {overscore (x)} in t that answers \u201cyes\u201d to t() and all {overscore (x)} in t () that answer \u201cno\u201d to t().","5) To select the split that is most \u201coptimal,\u201d we need a criterion that maximizes the decrease in impurity.\n\n\u0394()=max(\u0394())\n","\u2003Then it is split into tand tusing the split (s*) and the same procedure for best s is repeated on both t() and t().","6) The other important issue is to determine when to stop splitting. This can be done in at least two ways."]}},"One approach is to continue splitting until one reaches a point where there is no significant decrease in the impurity; i.e., if\n\n\u0394()<\u03b2\n\nthen t () is a terminal node.\n","In another embodiment, terminal nodes can be obtained by continuing to split nodes until reaching a pre-specified number of cases per terminal node; i.e., stop when\n\n()<\n\nThen a search is performed to combine some terminal nodes of the same class and get a pruned tree. This method makes the value of \u03b2 depend upon the measurement space.\n\n","Within the control action stage (), a corrective control action is designed for each of the disturbances. Once the disturbance for a batch is detected, using the decision tree, its corresponding control action is to be implemented.","There are many possible actions to reject a disturbance once it is detected in the mold. One can change the flow rate or injection pressure of the resin at a gate, change locations of the gate and add more gates. A good search for an optimal control strategy employs genetic algorithms, because of the difficulty of evaluating a function appropriate for gradient-descent algorithms. Other strategies can be employed, however.",{"@attributes":{"id":"P-00073","num":"00073"},"figref":"FIG. 3","b":["300","310","320","370","330","340","350"]},"Once the mutation occurs, the child population is evaluated for saturation (), and, once the child population is full or saturated, the population is classified as the new generation (). The new generation () is evaluated for fitness (), similar to the previous fitness evaluation stage (). The generation is evaluated for optimal fitness (). If that new generation is not fit, the process beings again at the reproduction phase (), and the algorithm is repeated. Successive generations will produce more fit chromosomes, thereby leading to an optimal solution. When an optimal solution is found, the process stops ().","The following references provide further background to genetic algorithms and are hereby incorporated by reference: Koza, John R., GENETIC PROGRAMMING: ON THE PROGRAMMING OF COMPUTERS BY MEANS OF NATURAL SELECTION (MIT Press, 1992); and Banzhaf, Wolfgang et al., GENETIC PROGRAMMING\u2014AN INTRODUCTION (Morgan Kaufman, 1998).","To apply the genetic algorithm to control of RTM, the gate locations and gate pressures are encoded into a bit string (chromosome). A fitness function, F, is selected based on the percentage of voids and the fill time of the mold; for example,\n\n()\u2212()\n\nwhere a and b are relative weights for time of fill and percentage voids respectively and A is sufficiently large number to make F positive. Variables tand trepresent time to fill and maximum time to fill; Vand Vmax represent void fraction and maximum void fraction.\n",{"@attributes":{"id":"P-00079","num":"00079"},"figref":"FIG. 4","b":["400","410","411","420","430","440","460","460","480","480","450","470","460","460","470","450","420","440","440","460","480","480","480","470"]},"The processor () manipulates a set of decision trees, each having inputs from the sensors (-I through -N) and having an output indicating one of the disturbances. The processor () also generates a plurality of control actions, each ameliorating the one disturbance indicated by the output of one decision tree.","In another embodiment of processor (), the sensor placement module () manipulates the location of sensors (-I through -N) to optimize process performance and minimize errors according to present invention. The sensor placement module () sends various data, including disturbance data, to the disturbance classification module (). The disturbance classification module () receives data as to sensor locations and creates or selects a decision tree in response to this data. In one embodiment, the disturbance classification module () receives data as to sensor locations directly from a sensor location algorithm present in the sensor placement module (). Once the disturbance for a particular batch in the process () is detected, using the decision tree output within the disturbance classification module, the control action module () implements a control action that corresponds to the disturbance.","The sensor placement, decision tree generator, and control action formulation are done off-line, as part of the design engineer's task of improving process operation. The output of the decision trees and the control actions for each disturbance are encoded in machine-readable code at the end of the off-line design phase.",{"@attributes":{"id":"P-00083","num":"00083"},"figref":"FIG. 5","b":["500","510","520","521","530","540","510","540","510","510","510","520","530"]},"On-line operation, when the process is actually running, employs a computer, data acquisition devices, and control devices to read sensor data, to walk down the decision trees generated in the design phase, to determine which disturbance is occurring in the system, and to output a control action for minimizing the disturbance.","Although specific embodiments have been illustrated and described herein, it will be appreciated by those of ordinary skill in the art that any arrangement which is calculated to achieve the same purpose may be substituted for the specific embodiment shown. This application is intended to cover any adaptations or variations of the present invention."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"P-00014","num":"00014"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00015","num":"00015"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 4"},{"@attributes":{"id":"P-00018","num":"00018"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
