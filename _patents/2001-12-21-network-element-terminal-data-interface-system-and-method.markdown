---
title: Network element terminal data interface system and method
abstract: A NETWORK ELEMENT TERMINAL DATA INTERFACE (NETDI) system and method incorporating a terminal user interface which permits manipulation of network elements using a hardware-specific control language is disclosed. The present invention teaches automatic generation of on-line help directly from I/O manual specifications and translation of operator commands into network element specific protocols via the use of a network element database and associated XML repository. Various preferred embodiments of the present invention incorporate the use of TL1 composer/parsers to permit the automatic generation of Translation Language 1 interfaces between an operator console and a wide variety of telecommunication network elements. The present invention operates over a wide variety of communication media and permits a significant reduction of software maintenance with respect to on-line help generation directly from I/O manual specifications as well as automated incorporation of new network element features into existing operator console environmental controls, resulting in a drastic reduction in the required network element control language proficiency of network operators in any given telecommunications environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07127527&OS=07127527&RS=07127527
owner: Alcatel
number: 07127527
owner_city: Paris
owner_country: FR
publication_date: 20011221
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","PARTIAL WAIVER OF COPYRIGHT","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","REFERENCE TO A MICROFICHE APPENDIX","FIELD OF THE INVENTION","BACKGROUND AND DESCRIPTION OF THE PRIOR ART","Overview ()","Best Existing Solutions","Prior Art System Deficiencies ()","Prior Art Method Deficiencies ()","OBJECTIVES OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","System Overview ()","Method Overview ()","DESCRIPTION OF THE PRESENTLY PREFERRED EXEMPLARY EMBODIMENTS","Definitions","Exemplary System Overview ()","Communications ()","Administration ()","HTML-to-XML Conversion","<NE Type><NE Stream><NE Version>.xml.","<NE Type><NE Stream><NE Version>M.xml.","Exemplary Update Method ()","Exemplary TL1DAT Operator\/User Interface (, , )","PREFERRED SYSTEM CONTEXT OF THE PRESENT INVENTION","Overview","Terminology","Generalized System Specifications (TL1DAT)","Generalized NE I\/O Manual Content Extension ()","Generalized NE I\/O Manual Content Distribution ()","CONCLUSION"],"p":["Not Applicable","All of the material in this patent application is subject to copyright protection under the copyright laws of the United States and of other countries. As of the first effective filing date of the present application, this material is protected as unpublished material.","However, permission to copy this material is hereby granted to the extent that the copyright owner has no objection to the facsimile reproduction by anyone of the patent documentation or patent disclosure, as it appears in the United States Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","Not Applicable","Not Applicable","The present invention is related to the general area of distributed Element Management Systems (EMS) that are utilized to control network elements (NEs) in a telecommunications network. While the scope of the present invention is wider than application to telecommunication systems, the present invention has particular application to this network model.","Referring to  (), within the context of modern telecommunications networks it is often necessary for operators () to interface with one or more computer systems () having element manger software () embodied on a variety of media (, ) to communicate across a distributed network () to control a variety of network element (NE) (, ) telecommunication devices such as switches, routers, and the like.","Within this environment, it is often necessary to add additional network elements into the network. This requires the ability to add new network elements to the element manager and upgrade the element managers in response to changes in the network elements as well as support software bug fixes, etc. Additionally, operators and customers in this environment would prefer the use of a generalized craft interface to permit communication with the network elements using a generalized hardware language such as TL1 (Transaction Language 1) or some other general purpose hardware command\/control language.","The prior art teaches that the best solution to this operator communication interface is one in which the I\/O manuals () for a particular network element are converted by a \u201ctoolkit\u201d () to create an \u201cadapter\u201d database (). This adapter database () is then installed on the customer's terminal\/PC () to interface with the element manager (). When new network elements (, ) are to be added or software updated in this configuration, it is particularly difficult for the customer () to upgrade the adapter. This upgrade generally required the equipment vendor () to send a new adapter database () to the customer.","The difficulty in this architecture () is in the logistical problems associated with updating the adapter database (). This database update must be done by the equipment vendor () and sent to the customer as a new adapter database (). In addition, the TL1 command interfaces supported by the network elements (, ) required that the customer be very proficient and knowledgeable in the TL1 command language to communicate with the range of network elements (, ) supported by the network.","Associated with the prior art system illustrated in  () and its associated deficiencies is the prior art operator help\/interface method of  (). The prior art teaches that a generalized operator interface having a help interface must first start with the generation of vendor-specific network element I\/O manuals (). These are then converted to an adapter database via a toolkit supplied by the vendor (). This adapter database is then released to the customer (), who then installs the adapter database on the customer terminal\/PC (). The operator must then manually enter network element commands using some command language (TL1, etc.) () with essentially no automated help or prompting from the system. This requires a proficiency in the network element command language that is beyond the capability of many operators. Finally, as the network elements are updated, changes to the system () require that the entire process be repeated, resulting in a significant software maintenance burden for both the vendor and the customer\/operator.","Additionally, the prior art generally taught the requirement for a unique command conversion method for a group of NE types, or alternatively the requirement that a human enter the TL1 command structure formats by hand to produce TL1 command information. The present invention circumvents this significant drawback by permitting TL1 information to be extracted directly from HTML text pages if these pages are properly formatted or contain properly tagged embedded data supplied by the I\/O manual document preparer.","Accordingly, the objectives of the present invention are (among others) to circumvent the deficiencies in the prior art and affect the following:\n\n","As illustrated in  (), the present invention as embodied in a system comprises a software driven () user interface () that an operator () uses to control a variety of network elements (, ) via a communications network () under the direction of a TL1 composer\/parser (). The TL1 composer\/parser () processes commands from the user interface ().","While there is a part of TL1DAT composer\/parser () that takes a full TL1 command and populates all the parameter fields with the appropriate data (a \u201cparser\u201d) and another part of the application that takes all the data in the parameter fields to create a full TL1 command (a \u201ccomposer\u201d), neither of these parts are utilized when sending TL1 commands from a batch\/log file (). Commands from a batch file () are sent as is by a batch processor () to the network elements (, ) without any checking or parsing. While batch commands are sent to network elements (, ) without additional processing in the described preferred embodiment, one skilled in the art will recognize that there may be advantages to having the batch processor () communicate directly with the TL1 composer\/parser () to communicate batch commands over the communication network interface () to the network elements (, ). In this context the TL1 composer\/parser () would function more generally as a communication module.","The system as presented () additionally permits administration of automation of on-line help via the integration of HTML network element I\/O Manuals () into on-line help subsystems (, ) that may be dialog-driven or menu-driven and are well known in the art. This administration () function also permits maintenance of an XML repository () and an associated network element database ().","The HTML NE I\/O Manuals () are actually used, as is, as a type of on-line help for the TL1 commands that can be displayed to the user in a browser by means of a menu command or window button. Additionally, there are also on-line HTML help files for the application itself. The I\/O Manual HTML files are also used to create an XML file () that contains all the data about each TL1 command. It is this XML file () that allows the parameter fields to be displayed for a TL1 command (), thus providing parameter-specific on-line help.","The present invention may be embodied as a TL1 Direct Access Terminal (TL1DAT). This application is designed to utilize a TL1 element's I\/O manual to provide a user with additional help sending commands to TL1 network elements. An exemplary method implementing this application is described by the flowchart illustrated in  ().","In this exemplary application, the connection method, network address, user identifier and password are provided by the user operator (). TL1DAT then makes a connection and logs the user on (). An NE specific command is used to retrieve the NE type and version (). This command may in many cases be \u201cRTRV-PRMTR-NE\u201d or an equivalent NE specific command. TL1DAT then opens and reads the appropriate XML file to create a command tree for this NE ().","Once the user selects a command code (), TL1DAT obtains all of the command's parameters from the XML file (). It then creates an editable field for each parameter in the command (). As the user fills in values, the TL1 command will be created (). When the user presses the \u201cSend\u201d button, the command is sent to the NE, and written into the command window (). Once the response is received, it is displayed in the response window.","While this invention is susceptible of embodiment in many different forms, there is shown in the drawings, and will herein be described in detail, various preferred embodiments of the invention with the understanding that the present disclosure is to be considered as an exemplification of the principles of the invention and is not intended to limit the broad aspect of the invention to the embodiment illustrated.","The numerous innovative teachings of the present application will be described with particular reference to the presently preferred embodiment, wherein these innovative teachings are advantageously applied to the particular problems of a NETWORK ELEMENT TERMINAL DATA INTERFACE SYSTEM AND METHOD. However, it should be understood that this embodiment is only one example of the many advantageous uses of the innovative teachings herein. In general, statements made in the specification of the present application do not necessarily limit any of the various claimed inventions. Moreover, some statements may apply to some inventive features but not to others.","Throughout the discussion in this document the following definitions will be utilized:","System Blocks\/Procedural Steps not Limitive","The present invention may be aptly described in terms of exemplary system block diagrams and procedural flowcharts. While these items are sufficient to instruct one of ordinary skill in the art of the teachings of the present invention, they should not be strictly construed as limiting the scope of the present invention. One skilled in the art will be aware that system block diagrams may be combined and rearranged with no loss of generality, and procedural steps may be added or subtracted, and rearranged in order to achieve the same effect with no loss of teaching generality. Thus, it should be understood that the present invention as depicted in the attached exemplary system block diagrams and procedural flowcharts is for teaching purposes only and may be reworked by one skilled in the art depending on the intended target application.","Personal Computer not Limitive","Throughout the discussion herein there will be examples provided that utilize personal computer (PC) technologies to illustrate the teachings of the present invention. The term \u2018personal computer\u2019 should be given a broad meaning in this regard, as in general any computing device may be utilized to implement the teachings of the present invention, and the scope of the invention is not limited just to personal computer applications.","Internet\/Intranet not Limitive","Throughout the discussion herein the terms Internet and Intranet will be used generally to denote any network communication system or environment. Generally the term Intranet will denote communications that are local to a given system or user, and Internet will describe communications in a more distant locale. One skilled in the art will recognize that these terms are arbitrary within the contexts of modern communication networks and in no way limitive of the scope of the present invention.","The present invention specifically anticipates that in some implementations the GUI development framework (and\/or its runtime component) will communicate with the data used to drive the GUI over the Internet. Thus, the application driving the user interface may reside on one computer system and the data used for presentation and control may be contained somewhere else on another computer system and be accessed via any number of networking protocols. The physical medium used to affect this communication may be any number of network interfaces, including but not limited to the use of serial ports to communicate with various network elements and the like. Data residency may be in any number of forms well known in the art, including but not limited to hard disk drives, CDROMs, DVDs, etc.","Application Programming Interface (API) not Limitive","While the present invention may be in part implemented using standard Application Programming Interfaces (APIs) such as Software Development Kits (SDKs) and the like, there is no requirement that the present invention be implemented using these tools. Note also that the framework of the present invention may be incorporated into standard toolkits and the like which may or may not be integrated into an API framework for use in standard software development frameworks.","Graphical User Interface (GUI) not Limitive","While the present invention may be in part implemented using a standard Graphical User Interface (GUI) such as that available in Microsoft\u00ae and Linux\u00ae Operating systems, there is no requirement that the present invention be implemented using these tools. The GUI presented herein may be rearranged to have a different order, different labels, colors, types of controls, and other ergonomic features without loss of generality in the teachings of the present invention.","Operating System not Limitive","Additionally, while the present invention may be implemented to advantage using a variety of Microsoft\u00ae operating systems (including a variety of Windows\u2122 variants), nothing should be construed to limit the scope of the invention to these particular software components. In particular, the system and method as taught herein may be widely implemented in a variety of systems, some of which may incorporate a graphical user interface. Some examples of these include HP-UX\u2122, LINUX\u2122, SOLARIS, and UNIX\u2122 (and its variants), among others.","Data Files\/Structures not Limitive","The present invention may be embodied in a variety of data files\/structures in some preferred embodiments. However, the form of such data files\/structures as described herein is only exemplary. One skilled in the art would quickly realize that a wide variety of other data files\/structures could be used equivalently in this application. Therefore, no data file\/structure contained herein should be interpreted as limiting the scope of the present invention.","TL1 Commands not Limitive","The present invention may employ the use of a wide variety of TL1 commands to communicate with a wide variety of network elements. None of the TL1 commands and\/or other NE specific commands described herein should be construed as to limit the scope of the present invention. In fact, both the TL1 language and the NE specific commands used to implement the present invention are completely arbitrary and do not limit the teachings of the present invention. For example, the RTRV-PRMTR-NE command used to determine NE characteristics is an example of a NE command that can be implemented in a wide variety of ways on a wide variety of network elements.","Acronyms","Within this context, the following acronyms will be used to describe the exemplary system context for the present invention application:\n\n","As illustrated in  (), the present invention incorporates a \u201ctoolkit\u201d () into the terminal data interface system software () installed by the customer () on the EML terminal (). The I\/O manuals () for a network element are converted into an HTML format () and saved on a CDROM (). The CDROM () is delivered to the customer () who merely uses a command on a pulldown menu of the terminal data interface system software () to direct the software () to create an adapter database () for that network element. Other network elements can easily be added by merely delivering the CDROM () to the customer who can use this same command to create directly the adapter database (). The customer can then choose to communicate with either network element. To upgrade or update the network element(s), other CDROM(s) (, ) for the network element(s) (, ) with revisions are sent to the customer who merely has to execute a software command to create an updated adapter database for that particular network element. Note that to upgrade the TL1DAT application, the CDROM would not be network element specific and would generally be a different command than that used to upgrade the element manager.","By creating the adapter database () via installation of a network element (, ), an easy-to-use interface (called \u201cEnhanced Mode\u201d) for entering TL1 commands and receiving responses is created for that network element. In Enhanced Mode, the application provides an area in the command window () where TL1 commands can be constructed by filling in fields for each command parameter. The application is standalone and portable. Information about the TL1 commands resides in the adapter database () and is used by the terminal data interface system () in constructing the command window ().","If there is no adapter database for a network element, the customer can still directly communicate with the network element in \u201cBasic Mode\u201d using TL1 commands that are typed in manually.","The present invention provides the customer\/operator a portable, general purpose TL1 solution that is easily extensible to immediately support new network elements and bug fixes with no code changes. The system as detailed herein may be connected to a network element in a variety of networking configurations. The system provides the customer with immediate access to fully hyperlinked vendor documentation and helps navigate the operator to the proper TL1 command, and facilitates syntactically correct composition of the TL1 commands. Thus, the invention as described increases customer productivity and ease of use while reducing customer error.","The communications subsystem is used to establish a connection between TL1DAT and the NE. It also takes care of logging in and out of the NE. TL1DAT is capable of connecting to an NE using a serial port, TCP\/IP port, and\/or telnet port.","NE Connection User Interface ()","There are two windows used to obtain information needed to connect to the NE. The SerialPortDialog class is used to collect baud rate, flow control in, flow control out, data bits, stop bits and parity values for serial port connections. TL1DataLoginDialog () collects user identifier, password, connection type, hostname and port ID. All of this information, except password, is stored in the connect.dat file or an equivalent mechanism. This file is used to initialize the window when it is displayed.","Gateway","The Gateway interface is used to hide the details of connecting, reading and writing to the connection stream. The DefaultGateway class implements the Gateway interface and defines methods for startup, shutdown and reading messages from the input stream. TCPGateway, SerialGateway and TelnetGateway all extend DefaultGateway and implement the actions that are specific to the connection type. Any changes in the gateway's state invoke the TL1DataAgent.propertyChange method.","The gateway forwards responses to whichever TL1ObjectHandler class is currently registered. Only one class is allowed to receive responses at a time. Once a class is registered, all messages that are received from the gateway are sent to the handleTL1Object method. TL1DAT uses three TL1ObjectHandlers: TL1DataLoginHandler, TL1DataLogoutHandler and TL1DataAgent.","Login Handler\u2014TL1DataLoginHandler","The login handler receives all responses until the responses to the ACT-USER and RTRV-PRMTR-NE (or equivalent NE specific) TL1 commands are received. Any messages received other than ACT-USER or RTRV-PRMTR-NE is written into the User Interface's response window. If the ACT-USER was successful, the RTRV-PRMTR-NE is issued. If the ACT-USER command was denied or timed-out, the connection is terminated and the login window is displayed. If the RTRV-PRMTR-NE command was successful, TL1DAT is displayed in enhanced mode (if the correct XML files exist). If the RTRV-PRMTR-NE command was denied or timed-out, TL1DAT is displayed in basic mode. The last action that the login handler executes is registering TL1DataAgent Handler as the new response listener.","Logout Handler\u2014TL1DataLogoutHandler","The Logout Handler is used whenever a request to terminate the connection is received. It sends a CANC-USER command to the NE. When a response to the CANC-USER command is received, or the command times-out, gateway.disconnect( ) is called; if the user was not exiting the application, the login window is displayed.","DataAgent Handler\u2014TL1DataAgent","TL1DataAgent receives all responses between the login and logout procedures. It writes everything it receives to TL1DAT's User Interface's response window. No correlation between commands and their responses is performed and the responses are not parsed or processed.","Writing Commands","TL1 commands are sent to the NE using BackgroundCommandHandler. BackgroundCommandHandler runs in a separate thread. Requests to send a command to the NE are sent to BackgroundCommandHandler via the handleTL1Command method. This method queues the request into a synchronous queue. When a request is entered into BackgroundCommandHandler's queue, it wakes up, reads the queue and sends the command.","The Administration subsystem () is responsible for adding and deleting NE types\/versions from the NE database (). Before TL1DAT can work in enhanced mode for a NE type\/version the I\/O manual to be referenced has to be specified. Support can only be added for the type\/version of NE to which the TL1DAT is currently connected.","The user interface for the administration subsystem is viewed by selecting the \u201cInstall NE\u201d item under the \u201cFile\u201d menu. The TL1DAT Administration User Interface displays a table of currently supported NE types\/versions. It also provides buttons to add and delete support for an NE type\/version.","The \u201cAdd\u201d button adds support for the NE to which TL1DAT is currently connected. When the \u201cAdd\u201d button is pressed, a file browser is displayed to enter the directory location of the correct I\/O manual. No check is performed to verify that the I\/O manual matches the type\/version of NE to which the TL1DAT is connected. Since there are usually not many changes in the I\/O manual from one release to the next, an old I\/O manual can be used to provide support for all of the unchanged commands.","The \u201cDelete\u201d button deletes support for the NE type\/version that is selected in the table.","Overview (, )","An integral improvement in many embodiments of the present invention is the ability to automatically generate on-line help files (via an XML repository and\/or adapter database) from network element documentation. This process is generalized by the data flow illustrated in  () and the generalized flowchart in  ().","In this generalized exemplary embodiment, a TL1Direct Access Terminal (TL1DAT) retrieves the command information from two XML files (, ) comprising the adapter database (). The XML files are typically stored in an Application\/xml directory. These files are created from parsing the HTML I\/O Manuals () (an example of which is illustrated in  ()) using the PERL scripts I\/OManual.pl () and I\/OManualMenu.pl (). These PERL scripts are typically stored in an Application\/tools directory. Note that these HTML I\/O Manuals may originate from a variety of sources, including Interleaf I\/O documents () that may be converted () to HTML via a variety of processes well known in the art and not specifically limited to the use of PERL scripts.","Script I\/OManual.pl () retrieves all the information about the TL1 commands and stores it in an XML file () using the following naming convention:","An exemplary translation of the HTML I\/O manual listed in  () by the I\/OManual.pl () PERL script is provided for reference in  (). One skilled in the art will quickly recognize how this translation via PERL scripts or other equivalent mechanisms can be affected.","Script I\/OManualMenu.pl () uses the Command Entry Menus Appendix of the I\/O manual and retrieves a list of all the TL1 command codes, grouped by functionality. This information is stored in an XML file using the following naming convention:","Thus, the generalized method associated with the data flow illustrated in  () can be given by the flowchart of  () wherein the major process steps associated with generation of the adapter database () comprise:\n\n",{"@attributes":{"id":"p-0082","num":"0119"},"figref":"FIG. 7","b":"0700"},{"@attributes":{"id":"p-0083","num":"0120"},"figref":["FIG. 8","FIG. 7"],"b":["0800","0700","0604"]},"1. NE product name (e.g., 1631SX),","2. NE stream name (e.g., LMC-APS),","3. NE release\/version number (e.g., R10.00), and\/or","4. filenames to process.","One skilled in the art will recognize that other parameter combinations are possible. Items 1\u20133 are what are retrieved from the RTRV-PRMTR-NE command at login and are provided to the PERL script by TL1DAT; the location of the files to process are specified by the user when installing the NE (location of the I\/O Manual). The name of the resulting XML file is generally a concatenation of items 1\u20133. There is more content within an actual XML file (DTD information at the top, header-type elements, etc.), which will be well known to one skilled in the art.\n\nGeneralized Translation Method (, )\n","The translation of NE I\/O manuals to corresponding adapter databases used to construct network element terminal interfaces is a specific example of the more generalized method taught by the present invention which involves the use of XML files as a source repository for all information necessary to describe a network element or some other equipment function. From this XML description, the present invention teaches that a wide variety of documentation and software interfaces can be readily generated automatically given the right filtering paradigm.","This generalized process in terms of data flow is illustrated in  (). In this generalized paradigm, a user () who is typically a network element specialist, uses some data interface () to generate an XML file () that is the essential I\/O manual for the network element. This I\/O manual file () may have several components (chapters, sections, etc.) that contain specific information related to NE specific features such as TL1 syntax (), on-line help (), or any other type of use information specific or generic to a particular network element.","By the use of any number of filters () that can be implemented in a wide variety of ways, the I\/O manual file () can be filtered to extract information necessary to construct the normal I\/O manual reference (), adapter database (), on-line help subsystem (), and any number of other functions and\/or features that are normally associated with a software interface necessary to support the network element.","This approach greatly reduces the development and maintenance effort associated with network element support and terminal interface software by permitting a generic XML file () to incorporate all information associated with and important to the network element. The I\/O manual () can then be expanded at will to incorporate new network element features without a need to redeploy software to all existing network element installations. This data-driven approach also drastically reduces the complexity of terminal data interface software associated with network elements, as the complexity of command syntax and associated parameter variations is buried within the XML I\/O manual file () rather than being incorporated in terminal interface software.","Thus, the present invention teaches the use of an XML I\/O manual file () to fully define the feature set and command syntax of a given network element and the subsequent use of filters () to extract necessary information in the form of I\/O manuals (), adapter databases (), on-line help () and the like from the I\/O manual file (). This paradigm isolates the extraction of information (TL1 syntax, etc.) from some I\/O manual source description from the usage of this information by an application, permitting a disconnection of the target application from a particular source for extracting the target information.","An exemplary method applying the data flow illustrated in  () is illustrated in  () and contains the following steps:\n\n","Within each XML file as illustrated in  () there may exist a number of Document Type Definitions (DTDs) used in the translation\/filtering process. Examples of these DTDs are illustrated in  () (from an autogenerated XML file of TL1 commands) and  () (for an exemplary menu hierarchy). One skilled in the art will recognize that the data-driven document structure disclosed within the present invention permit a wide variety of DTDs to be incorporated to permit a wide range of data extraction processes to occur with respect to the I\/O manual source documentation.","The present invention presents a significant opportunity to provide for improved software distribution and maintenance functions involving network element terminal interfaces. Specifically, as illustrated in  (), the present invention may incorporate an update methodology comprising:\n\n","The TL1DAT Operator\/User Interface is divided into four main parts: menubar (), command window (), response window (), and the command creation panel (). Exemplary implementations of this user interface are illustrated in  () (unannotated) and  () (annotated). An abstraction of this concept is illustrated in  ().","Menu ()","As illustrated in  (), the Menubar () contains all of the possible activities a user can perform. The activities may include the following:","File\n\n","Preferences\n\n","The command window () displays all of the commands sent to the network element. The commands are displayed in a scroll pane so that the user can view past commands by scrolling up.","Response Window ()","The Response Panel () displays all of the responses received from the network element. The responses are displayed in a scroll pane so that the user can view past responses by scrolling up.","Command Creation Panel (, )","The Command Creation Panel (, ) is made up of three parts: Command Code Tree (), Command Parameters Panel (), and the Command String Panel (). All the information needed for these panels is retrieved from the XML files comprising the adapter database.\n\n","The \u201cHelp\u201d menu () from the TL1DAT main window provides on-line help information about the TL1DAT application and the currently connected NE (provided the NE has been installed). A Netscape or Internet Explorer browser may be used to display the NE's I\/O manual and TL1DAT on-line help.","About","This displays copyright and version information about the TL1DAT application.","Browser","If the \u201cHelp-I\/O Manual\u201d menu option is selected, the home page for the current NE's I\/O manual will be displayed. If the I\/O Manual button on the \u201cParameter Help\u201d window is pressed, the browser will be brought up with the current command's page showing.","Parameter Help (, , )","As illustrated in  (, , ), the \u201cParameter Help\u201d window is accessed through the \u201cHelp-Parameter Help\u201d menu option. It displays information about the selected parameter in the Command Parameters panel. The information about the parameter is retrieved from the XML file.","User's Guide","The user's guide displays information about using the TL1DAT application. It is accessed from the \u201cHelp-User's Guide\u201d menu option. When this option is selected, the user's guide will be displayed in the browser.","Operator\/User Interface Abstraction ()","An abstracted Operator\/User Interface is illustrated in  () and comprises a Menubar (), Command Window (), Response Window (), and Command Creation Panel () that may optionally further comprise a Command Code Tree (), Command Parameters Panel (), and\/or a Command String Panel (). One skilled in the art will recognize that there innumerable ways to implement this Operator\/User Interface.","While the present invention may be implemented with a wide variety of system contexts, several exemplary embodiments will incorporate one or more specific characteristics that are advantageous when applied to telecommunication networks.","Within this context, the following terminology will be used to describe the exemplary system context for the present invention application:","Basic Mode No on-line help is available for TL1 commands","EDD Electronic Document Distribution","Enhanced Mode On-line help available for TL1 commands","GUI Graphical User Interface","HLD High Level Design","HTML Hyper Text Markup Language","NE Network Element","PFD Product Feature Document","TL1DAT TL1Direct Access Terminal","TRS Technical Requirements Specification","The following proposed application implements a Graphical User Interface for entering in TL1 commands. This application will be generic in scope as to allow portability of this application across several operating systems.","Currently, telecommunication network elements do not have a graphical user interface for users to enter in TL1 commands. The users must be very proficient and knowledgeable in the TL1 command language or have an I\/O manual available to look up commands.","Also, network elements do not have the ability to set up scripts for ease of provisioning of the different shelf configurations or just to save a group of commands that are frequently used.","The features provided by the present invention provide a technician\/user a graphical user interface for entering TL1 commands. This application provides a command window which displays the command and highlights required parameters. An on-line I\/O manual may also be available. The implementation of this exemplary TL1 interface may include one or more of the following specific requirements in the context of a TL1 Direct Access Terminal application (TL1DAT):\n\n","As illustrated in  (), the present invention permits dynamic NE content extension by multiple users (, ) using various data editing means (, ) to create NE content (, ) within an XML NE I\/O manual (). A given XML file () can thus contain a variety of independent content describing specifics of the particular network element.","This content (, ) may then be filtered () by a variety of filtering means to produce terminal interface content (, , ) for use with a wide variety of network element terminal data interfaces. A significant feature of the present invention is that by integrating the network element content within the framework of an XML file, this information can be updated and augmented with other function types without the need for major software updates with respect to the terminal data interfaces.","As illustrated in  (), the present invention permits distribution of network element I\/O manuals () via a distributed network () to a terminal data interface system () for the dynamic creation of adapter database(s) (). The terminal data interface system () as embodied on various computer readable media (, ) generally operates on a PC or other computer hardware () in response to operator input () and communicates with a variety of network elements (, ) over some distributed network ().","The advantage to this generalized distributed network system as compared to the prior art is that the NE I\/O manuals () need only be distributed via some means to the user who applies the terminal data interface system () to this information to generate a dynamic adapter database () that is then used to provide a fully functional operator interface available for use by the terminal data operator (). This methodology prevents the need for massive software distributions in the event of NE software updates and\/or NE equipment upgrades\/replacements. Since the system as described is data-driven, the natural procedures associated with generating on-line NE system documentation are leveraged to generate the actual software (, ) used to control the network elements (, ) by the operator ().","A NETWORK ELEMENT TERMINAL DATA INTERFACE (NETDI) system and method incorporating a terminal user interface which permits manipulation of network elements using a hardware-specific control language has been disclosed. The present invention teaches automatic generation of on-line help directly from I\/O manual specifications and translation of operator commands into network element specific protocols via the use of a network element database and associated XML repository. Various preferred embodiments of the present invention incorporate the use of TL1 composer\/parsers to permit the automatic generation of Translation Language 1 interfaces between an operator console and a wide variety of telecommunication network elements.","The present invention operates over a wide variety of communication media and permits a significant reduction of software maintenance with respect to on-line help generation directly from I\/O manual specifications as well as automated incorporation of new network element features into existing operator console environmental controls, resulting in a drastic reduction in the required network element control language proficiency of network operators in any given telecommunications environment."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a fuller understanding of the advantages provided by the invention, reference should be made to the following detailed description together with the accompanying drawings wherein:",{"@attributes":{"id":"p-0023","num":"0028"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0029"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0030"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0031"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0027","num":"0032"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0028","num":"0033"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0029","num":"0034"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0030","num":"0035"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0031","num":"0036"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0032","num":"0037"},"figref":["FIG. 10","FIG. 8"]},{"@attributes":{"id":"p-0033","num":"0038"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0034","num":"0039"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0035","num":"0040"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0036","num":"0041"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0037","num":"0042"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0038","num":"0043"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0039","num":"0044"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0040","num":"0045"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0041","num":"0046"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0042","num":"0047"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0043","num":"0048"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0044","num":"0049"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0045","num":"0050"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0046","num":"0051"},"figref":"FIG. 24"}]},"DETDESC":[{},{}]}
