---
title: Systems and methods for a protocol gateway
abstract: A protocol management system is capable of detecting certain message protocols and applying policy rules to the detected message protocols that prevent intrusion, or abuse, of a network's resources. In one aspect, a protocol message gateway is configured to apply policy rules to high level message protocols, such as those that reside at layer 7 of the ISO protocol stack.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707401&OS=07707401&RS=07707401
owner: Quest Software, Inc.
number: 07707401
owner_city: Aliso Viejo
owner_country: US
publication_date: 20030610
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS INFORMATION","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application claims priority under 35 USC \u00a7119 to U.S. Provisional Application Ser. No. 60\/387,761, entitled \u201cPROXY ENFORCER FOR ROGUE PROTOCOL MESSAGES,\u201d filed on Jun. 10, 2002 and to U.S. Provisional Application Ser. No. 60\/445,648, entitled \u201cDETECTION AND REPORTING OF USER PRESENCE,\u201d filed on Feb. 7, 2003, which are both incorporated herein by reference as though set forth in full. This application also claims priority as a continuation-in-part under 35 U.S.C. \u00a7120 to U.S. patent application Ser. No. 10\/167,228, entitled \u201cEXTENDIBLE GATEWAYS FOR PROTECTION AGAINST ROGUE PROTOCOLS,\u201d filed on Jun. 10, 2002 now abandoned, which is incorporated herein by reference as though set in full.","1. Field of the Inventions","The field of the invention relates generally to digital communications networks and more particularly to the management of a plurality of protocols over such networks including dynamic protocols such as \u201cInstant Message\u201d protocols.","2. Background Information","When a local computing device coupled to a local, or proprietary, network communicates with a remote computing device outside the network, the network can become subject to attempts at intrusion. Intrusion can, for example, be defined as someone trying to wrongfully access the network. Intrusion can also be defined as a program, such as a computer virus, attempting to wrongfully access resources available on the network. For example, a computer virus can be sent from a remote computing device to the local computing device, and if allowed to operate oh the local computing device, can commandeer resources at the local computing device as well as other local resources, such as those available to the local computing device on the network or otherwise. For another example, a remote computing device can generate a set of messages in an attempt to deny service to, or otherwise have an effect on service at, the local computing device, such as preventing access by that local computing device to proper resources, or by preventing access by others to that local computing device.","In some cases, intrusion can be caused by messages directed at the network, while in other cases, intrusion can be caused by messages from inside the network, such as from a computing device within the network under the control of a computer virus or an employee using the network improperly. For example, a computing device within the network can be corrupted by a malicious user of that computing device, i.e., a user who is attempting to access local resources in a way that is not desired. A computing device can also be corrupted in a relatively innocent way, such as when a program is otherwise innocently introduced into a device having access to local resources, but where the program itself includes functions that attempt to access local resources in a way that is not desired.","It is therefore sometimes desirable to apply policy rules for handling messages in the network, particularly when those messages use a message protocol that might not be directed to business aspects of the network. For example, a number of message protocols have been developed recently that are primarily for personal use, but which often make their way into proprietary networks, such as enterprise networks, and which are subject to possible abuses. These message protocols include, for example, instant message (IM) protocols, peer-to-peer (P2P) and other file sharing protocols, interactive game protocols, distributed computing protocols, HTTP Tunneling, and \u201c.NET\u201d or \u201cSOAP\u201d methods of computer program interaction. Some of the possible abuses that can result from these message protocols entering the enterprise network include accidental delivery of a computer virus to a client device within the enterprise network, communication of sensitive or proprietary information between client devices within the enterprise network and client devices outside the enterprise network, and other unauthorized user behavior within the enterprise network.","Conventional methods of applying policy rules to messages in an enterprise network are directed primarily to relatively low-level message protocols such as TCP (transmission control protocol) and IP (Internet protocol). The protocols just described, however, typically are implemented at the higher levels of the TCP\/IP protocol stack, as represented in the International Organization for Standardization (ISO) model. Often, in the interest of speed and finality, firewall servers, for example, are not very effective against message protocols that involve higher levels in the ISO model, or against message protocols that are relatively new to the enterprise network and therefore not anticipated by the firewall server. Moreover, many such protocols are being rapidly developed and modified, often more quickly than it is feasible to deploy new systems and methods for recognizing and intercepting those message protocols, and for enforcing policy rules thereto.","A protocol management system is capable of detecting certain message protocols and applying policy rules to the detected message protocols that prevent intrusion, or abuse, of a network's resources. In one aspect, a protocol message gateway is configured to apply policy rules to high level message protocols, such as those that reside at layer 7 of the ISO protocol stack.","In another aspect, the protocol management system is configured to intercept messages flowing into and out of the network and inspect the message protocol associated with the messages. If the message protocol matches a defined protocol template, then the message is forced to use the protocol message gateway so that policy rules for the message protocol can be applied.","In another aspect, the destination of a message heading out of the network to an external server, where the external server is configured to redirect the message to the destination, can be determined. If it is determined that the destination is within the network, then the message can simply be redirected to the destination.","These and other features, aspects, and embodiments of the invention are described below in the section entitled \u201cDetailed Description of the Preferred Embodiments.\u201d",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 1","FIG. 1"],"b":["110","100","110","130","120","110","170","172","110","120","130","110"]},"As can be seen in , system  can comprise a protocol message gateway , a proxy enforcer , and an authentication module . Embodiments, deployments, and applications of protocol message gateway , proxy enforcer , and authentication module  are described below in greater detail.","As described herein, enterprise network  can include one or more internal networks such as a LAN (local area network), WAN (wide area network), locally switched network, or public switched network, some other communication technique, or some combination thereof, by which devices locally coupled to enterprise network  can communicate with each other. Although one embodiment is described herein in which enterprise network  includes a LAN, there is no particular requirement that enterprise network  include a LAN, or that any particular network configuration be employed.","External network  can include the Internet; however, in other embodiments external network  can also include an intranet, extranet, virtual private network (VPN), LAN, WAN, locally switched network or public switched network, some other communication technique, or some combination thereof. Although an embodiment is described herein where external network  including the Internet, there is no particular requirement that external network  use the Internet or any other specific type of network.","Firewall  can include a conventional device for recognizing and intercepting messages formatted at selected levels of the ISO layered protocol model, and meeting selected filtering criteria by which firewall  might determine whether those messages carry information intended to be received in a certain message protocol format.","In one embodiment of system , protocol message gateway , proxy enforcer , and authentication module  can be coupled to an administration console  that can be configured for use by a system administrator to set parameters and polices regarding certain protocols that are defined to be targets of system .","In addition, protocol message gateway , and proxy enforcer  in certain embodiments, can be coupled to a corporate database , which can be used to associate user screen names, or aliases, with a specific user within enterprise network . Protocol message gateway , and proxy enforcer , in certain embodiments, can also be coupled to a logging and archiving subsystem that comprises a data transport service . Data transport service  can be configured to convert protocol message logs into a relational model for reporting and, to record the logs into a report database  from which a report  can be generated. In certain other embodiments, such a report can even be converted to electronic mail that can be mailed to an administrator  or archived by an electronic mail archive service .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2","b":["200","250","200","210","220","230","240","250","260"]},"As will be explained below, protocol message gateway  can be configured to recognize messages that are using certain target protocols and implement policy rules associated with the target protocols. These target protocols can be high level, e.g., ISO level , protocols that would otherwise often escape detection while entering and exiting enterprise network . For example, these message protocols can often find un-monitored communication connections into and out of enterprise network , allowing the messages to escape detection. Proxy enforcer  can, however, be configured to intercept all messages traveling into and out of enterprise network  and force them to pass through defined communication connections, e.g., defined ports on protocol message gateway . This way, proxy enforcer  can ensure that all messages flowing into and out of enterprise network  are handled by protocol message gateway , as required, so that the appropriate protocol rule can be applied to the messages.","Thus, in one embodiment, proxy enforcer  can be coupled to firewall  and disposed so as to be able to passively listen to messages, including individual packets, flowing through firewall  into or out of enterprise network . Proxy enforcer  can include a set of enforcement rules  that are based on a set of protocol definition files . Each protocol definition file  can be a piece of executable code with intelligent heuristics that can recognize target protocols and manage state across multiple connections. For example, there can be an individual definition file  for every class or subtype of target protocol. An individual protocol definition file  can be different from other protocol definition files . Moreover, the set of enforcement rules  and protocol definitions files  can be expanded as necessary in response to different target protocols and different ways of handling target protocols. In one embodiment, additional enforcement rules  and protocol definition files  can be downloaded from a server interfaced with enterprise network . Thus, a system administrator, for example, can define new enforcement rules  and\/or protocol definitions  and update proxy enforcer  as required.","The protocol definition files  act as a protocol template. Proxy enforcer  can be configured, therefore, to intercept messages in enterprise network  and to then compare them to the protocol template as defined by the protocol definition files . If a match occurs, proxy enforcer  can be configured to then implement the corresponding enforcement rule, or rules, . Unlike traditional virus recognition software that relies entirely upon matching patterns, proxy enforcer  can correlate two different messages or two different blocks within the same message, such as when a target protocol uses multiple ports and\/or streams. This can be accomplished, for example, because even protocol definition file  can be configured to create it's own data structures and tables to store information relating to other ports, packets, and data streams.","A protocol definition file  can be configured to identify a target protocol in terms of a source IP address for the message; a destination IP address for the message; a port number associated with the message; a header string or other set of data values embedded in the message; or some combination thereof. Proxy enforcer  can also be configured to detect protocols of interest in response to a persistent state maintained by the proxy enforcer  in response to sequences of messages.","In operation, a remote server  coupled to external network  and can be configured to send and receive messages using a target protocol to and from client devices . For example, remote server  can be configured to communicate IM messages with a client device .","Proxy enforcer  can be configured to then passively listen to messages as they flow, e.g., through firewall . Proxy enforcer  can comprise a set of proxy enforcement rules , e.g., maintained in an enforcement rules database . When proxy enforcer  intercepts an IM message, i.e., a message that uses a target protocol, proxy enforcer will match the IM message using the proxy definition files . Proxy enforcer  can then execute the associated enforcement rule . The enforcement rule  can be configured to override aspects of the IM protocol associated with the intercepted IM message. For example, proxy enforcement rules  can require that IM messages pass through the protocol message gateway , which can be configured to act as a proxy for all IM messages.","Proxy enforcer  can be configured to then prevent the message from being effective if it does not adhere to proxy enforcement rules . One way proxy enforcer  can prevent a message  from being effective is to kill the communication connection between the service of the message and the destination, whether or not the message originates in enterprise network  or in external network . In alternative embodiments, proxy enforcer  can be configured to reset the communication connection associated with the message. In other embodiments, enforcement rule  can cause proxy enforcer  to record information related to the message. The recorded information can then be used to generate logs and\/or reports as described below.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 3","b":["210","250","0","302","250","304","250","306","306","306","250","306","254","303","250","252","250","302"]},"Protocol definition files  can define a pattern of values associated with a message that uses a target protocol. Thus, proxy enforcer  can be configured to match (step ) a pattern of values with data maintained in a message traffic database . Possible examples, e.g., include matching all traffic on port , all traffic on port  and including the string \u201c?ymessage=\u201d, all traffic on port  and including a string \u201c?pword=%1\u201d, where, e.g., %1 is a value maintained in the message traffic database , and all traffic on  that includes a string of five characters in incoming packet header, where the five characters as are, e.g., a signature of an instant message used in an IM protocol.","In certain embodiments, depending upon the type of enforcement rule  and type of match, further analysis of a message can be performed. This is particularly useful, for example, if the initial analysis suggests that the message is an IM masquerading as HTTP traffic.","In step , the proxy enforcer  performs the action associated with one of a plurality of triggered enforcement rules . In one embodiment, only the action associated with the first triggered enforcement rule  is performed; however, in alternative embodiments, more than one action may be performed, with the order of performance being responsive to an order in which enforcement rules  are maintained in enforcement rule database .","In certain embodiments, enforcement rules  include specific actions to take regarding the intercepted message, including possibly recording values in message traffic database . As explained above, possible examples of actions to be taken in response to enforcement rules  include killing the connection associated with the message, resetting the socket connections, recording the value %1 in message traffic database , where %1 is found in the string \u201c?pword=%1 \u201d when matched and\/or store the value %1 in a log so that the value can be recognized in the future, and parsing out the message text and storing the messages in a log associated with one or more individual users so that the messages and message text can be reviewed at a future point in time. This can be used, for example, to generate a record of unauthorized uses of a network, such as, employees downloading music files.","Thus, proxy enforcer , or similarly proxy enforcer , can be configured to ensure messages that use a target protocol pass through protocol message gateway . As can be seen in , firewall  can also include memory  configured to store a set of recognition patterns , which can also be referred to as \u201cinspect scripts.\u201d Recognition patterns  can, for example, be selected by an administrator of firewall  and can include information sufficient to describe to firewall  messages using a target protocol.","Firewall  can be configured to then redirect, in response to recognition patterns , at least some of the messages it processes to protocol message gateway . In one embodiment, for example, messages can be redirected using a conventional content vectoring protocol (CVP) technique, in which, after processing the message and determining that it should be further processed by protocol message gateway , firewall  delivers the message to protocol message gateway . Redirection using CVP is described in more detail in conjunction with . Once protocol message gateway  receives a message, it can ensure that policy rules for the target protocol are employed to handle the message.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 4","b":["122","122","410","420","430","440","450","460"]},"In one embodiment, protocol message parser  is coupled to firewall  using a conventional CVP technique, as described above. Protocol message parser  can thus receive a target message from firewall . Protocol message parser  parses the received message and determines which of the set of protocol adapters  is appropriate for processing the received message. Protocol message parser can be configured to then forward the message to gateway manager . In certain embodiments, protocol message gateway  can include more than one protocol message parser . Inclusion of a plurality of protocol message parsers allows for relatively easy and efficient scaling of the ability for protocol message gateway  to receive large numbers of target messages, and to both parse and distribute those messages to gateway manager  without substantial degradation in either accuracy or response time.","Gateway manager  receives the parsed message and creates any necessary data structures  associated with the message. Among these data structures , gateway manager  can be configured to create a new message event , which it can publish to protocol adapters  and module adapters  that indicate an interest in receiving message event . When publishing message event , gateway manager  can include information relevant to the parsed message, such as the appropriate protocol adapter  to handle the message, and any other identifying information regarding the message, such as a user, user name, screen name associated with the message, etc.","In one embodiment, gateway manager  determines which protocol adapter  is the appropriate one to handle the message. The appropriate protocol adapter  can then receive the message and its associated message event , and can determine how the message fits into the processing paradigm for the associated message protocol. For example, if the message initiates a session between a sender and receiver, such as a sender and receiver of an IM message, protocol adapter  can determine that a new session should be created, and generate a new session event . In this example, data structures  generated and used by the gateway manager  would include a session data structure as part of data structures ; the session data structure would include information relevant to the communication session between a sending client device  and a receiving client device using the associated message protocol.","Protocol adapter  assigned to handle the message can be configured to send any new events  it generates to gateway manager  for publishing to any protocol adapters  or module adapters  that have indicated interest in that particular message or message event .","Inclusion of more than one protocol adapter  in protocol message gateway  allows for relatively easy and efficient scaling of protocol message gateway  to receive large numbers of messages, and to individually process those messages within protocol message gateway  without substantial degradation in either accuracy or response time. Further, the use of multiple protocol adapters , each specifically designed for a different variant of a set of similar target protocols, allows client devices  to communicate using the different variants, without any need for special translation on the part of protocol message gateway  and without any need for alteration of client devices .","Again, gateway manager  can be configured to publish any message events  to any protocol adapters  or module adapters  that indicate interest the message events . Among the protocol adapters  or module adapters  that can indicate interest are, for example, policy enforcement module , authentication module , and selected other additional module adapters .","Authentication module  can be configured to receive any session events  so that authentication module  can authenticate any screen names associated with the associated message. As described in more detail below, authentication module  can be configured to uniquely identify an actual user associated with any such screen name, record that identifying information in a user database  associated with authentication module , and send that identifying information to gateway manager  for inclusion in any data structure  maintained by gateway manager  for the session event .","Protocol message gateway  can also include a logging module  that can be configured to provide capability for logging messages as they are received by protocol message gateway  from a sending client devices , and as they are forwarded by protocol message gateway  to receiving client device , or to a client device on external network . In other words, logging module  provides a capability for maintaining a persistent log of all messages exchanged across protocol message gateway . In one embodiment, logging module  can be configured to output a log to a logging database  from which database searches can be conducted and reports generated. In another embodiment, logging module  can be configured to output log information to logging database  in an encrypted format, so as to restrict access to information in logging database  to those devices  associated with logging module , or possibly those devices  associated with gateway , that have been assigned access to logging database . Access can, depending on the embodiment, be assigned using appropriate keys for the encrypted format used to encrypt the information.","Logging module  provides a way to record messages comprising what is otherwise evanescent communication between sending client devices  and receiving client devices. Such persistent recording allows for forensic investigation of communication between those client devices. Similarly, such persistent recording also allows for compliance with any regulatory requirements or other administrative rules requiring maintenance of records of communications between such client devices. For example, a sending client device  and a receiving client device may be controlled by users in disparate departments of a financial institution. Regulatory requirements can demand that communications between such users avoid certain topics, such as communication regarding analysis or recommendation of selected securities. Logging such communications can help ensure that any such requirements are adhered to.","Protocol message gateway  can, depending on the embodiment, also include a policy enforcement module . Policy enforcement module  can be configured to receive information regarding each message, and to determine whether or not a specific message should be forwarded in unaltered form from sending client device . Policy enforcement module  can have access to a policy rules database  that includes specific policy rules responsive to at least one of certain classes of information including: the nature of sending client device ; the nature of the receiving client device; the nature of the message; any information, including keywords, included within the message; the day of the week, or a time of day, at which the message was sent or is intended to be received; the size of the message, including whether or not the message includes an attachment, an executable file attachment, an executable file attachment including a virus, and the like; the amount of traffic already sent by sending client device , or already received by the receiving client device, within a selected duration of time; or any other classes of information deemed relevant by administrators of enterprise network .","In certain embodiments, protocol message gateway  can be administrated from one or more logically remote administrator consoles , which can be coupled to enterprise network , to another network that is coupled to external network , or to external network  itself. The use of remote administrator consoles  can allow various modules and adaptors included in protocol message gateway  to be dynamically updated from a remote location. For example, dynamic policy rules database  can be dynamically altered from a administrator console  in substantially real-time, which can allow real-time updates concerning target protocols. Given how quickly dangerous, or harmful, protocols can pop up, and the need to deal with such protocols as quickly as possible, such dynamic update capability can be invaluable. Further, the fact that dynamic updates can be performed remotely, even through external network , can be even more invaluable since network administrators cannot always be present to protect their enterprise networks .",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 5","b":["122","110","502","122","410","504","430","504","410","420"]},"In step , gateway manager  can receive the parsed message and create any necessary data structures  associated with the message. As noted above, among these data structures , gateway manager  can be configured to create a new message event , which it can publish to those protocol adapters  and those module adapters  that have indicated interest in receiving message event . As noted further above, when publishing message event , gateway manager  can include information relevant to the message, such as the appropriate protocol adapter  to handle the message, and any other identifying information regarding the message, such as a user, user name, or screen name associated with the message.","In step , at least one protocol adapter  recognizes the message and determines how the message fits into the processing paradigm for an associated message protocol in step . In step , the protocol adapter  can be configured to generate any new events  it deems appropriate in response to how the message fits into the processing paradigm for the associated protocol. Any such new events  generated by the protocol adapter  can then be sent to gateway manager  in step .","In step , gateway manager  can publish new events  to protocol adapters  or any other module adapters that have indicated interest in those classes of events .","Authentication module adapter  can then receive any new session event , in step , and authenticate any screen name associated with the associated message.","In step , logging module adapter  can generate a logging entry for the message and output a log to a logging database  from which database searches can be conducted and reports can be generated. As noted above, logging module adapter  can output the log information for logging database  in an encrypted format.","In step , policy enforcement module  can receive information regarding each message, and determine whether or not a specific message should be forwarded in unaltered form from sending client device  to the receiving client device. As noted above, policy enforcement module  can have access to a policy rules database , including specific policy rules responsive to at least one of, and possibly more than one of, a number of classes of policy information.","There are several deployment options that can be used when implementing a protocol message gateway . For example,  is a block diagram illustrating the deployment of a protocol message gateway  using the CVP method discussed above. Thus, firewall  can comprise a CVP API , which can be coupled to protocol message gateway . Firewall  can then be configured to have a CVP interface mechanism through which an external server can be coupled, which in this case is protocol message gateway . Firewall  can direct messages from, e.g., communication port  or from communication port , to protocol message gateway  through the CVP interface mechanism using CVP API .","Alternatively,  is a block diagram illustrating the deployment of a protocol message gateway using a gateway proxy method in accordance with another embodiment of the systems and methods described herein. In the example of , protocol message gateway  comprises a proxy module . In general, a proxy can be a server, or component of a server, configured to relay a message comprising any protocol to and from a client, such as local client device  to a server, such as remote server . Proxies can be used to shield a client device  from intrusion from external network . Proxies can also be used as a controlled portal through a firewall  or gateway, such as protocol message gateway . Thus, a protocol message gateway  equipped with a proxy module  can be configured to permit protocol message gateway  to act as a proxy and examine any messages within network .","Each client application on each local client device  should, however, be configured to use protocol message gateway  as a proxy. Without such configuration, local client device  can communicate with remote server  by traversing enterprise network , the firewall , and external network  as shown by path . Thus, an uncooperative, or uneducated user could willingly, or unknowingly bypass the protocol message gateway  and a direct path, such as path , to communicate with remote server . To help avoid this possibility, the firewall  can be configured to block all communications except those originating from proxy . Unfortunately, conventional firewalls  are not equipped to detect some more elusive protocols such as certain IM protocols. Accordingly, a proxy enforcer  can be used to ensure that messages traveling within network  use protocol message gateway  as described above.","Thus, with the unauthorized paths blocked, a user can only connected to remote server  via proxy  by path , as allowed by protocol message gateway . With all, communication traffic flowing through proxy module  protocol message gateway  can monitor all traffic for target protocols and enforce any policies for said protocols as described above.","For convenience, scripts can be executed on a local client device , each time a user logs on. The scripts ensure that all client applications running on device  have protocol message gateway  as a proxy. The scripts give an added convenience to the users in that they do not have to manually configure their proxies. Moreover, the scripts can be updated remotely using administrator workstations , for example.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 8","FIG. 9","FIGS. 8 and 9"],"b":["122","122"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 8","b":["890","890","830","840","870","890","850","820","122","870","842","122","870","122","880","122","880","122","890","844","870","890"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 9","b":["920","970","910","920","910","970","950","960","942","990","930","122","940","960"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 8","FIG. 9"],"b":"122"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 10","FIG. 10"],"b":["122","1020","1020","1010","1060","1060","1010","1070","1060","122","1050","1020"]},"HTTP tunnel module  also can be configured as a standalone module or it can be incorporated into protocol message gateway  depending on the embodiment. If fact, HTTP tunnel module  can reside anywhere with the enterprise network, including within firewall , as long as it is configured to perform the functions described herein.","Once HTTP tunnel module  has formatted the message, it can be passed through firewall  to, e.g., a web proxy , which can, for example, be included as part of DMZ host . Web proxy  can be configured to forward the message to a relay , which can be configured to undo the HTTP formatting, as required, and forward the message out to external network .",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 11","b":["122","1120","1110","122"]},"Thus, protocol message gateway  configured to adapt and enforce message protocols associated with messages within an enterprise network, or within some other local network, can be deployed in a variety of ways including those described in the preceding paragraphs. Further, a proxy enforcer, such as proxy enforcer , can be deployed within the enterprise network to force messages traveling within the network to pass through such protocol message gateway . Proxy enforcer  can also be configured to terminate a communication connection when it is unable to force a message to pass through protocol message gateway . Alternatively, proxy enforcer  can be configured to reset a communication connection associated with a message that cannot be forced through protocol message gateway , to log information associated within messages being forced through protocol message gateway , and\/or to generate reports related to any messages being forced through protocol message gateway .","As can be seen in , protocol management system  can also include an authentication module . Authentication module  can be configured to identify the identity of users within enterprise network  from screen names, or aliases, being used by target protocols for associated messages being passed into and out of enterprise network . For example, IM applications often use a screen name as an alias for a user. Messages generated by the IM application then comprise the screen name. It can be useful when adapting or enforcing policies using protocol message gateway  to identify the actual user associated with a screen name. Authentication module  can be configured to perform such identifications. Moreover, authentication module  can be configured to store the identifying information so that it can be retrieved later when handling, e.g., IM messages generated by the same user using already identified screen names.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 12","FIG. 12","FIG. 1"],"b":["160","160","122","160","122","160","110","122","1250","1252","1250","1252","122","1252","110"]},"In one embodiment, as described above, protocol message gateway  can include a session manager , capable of receiving messages intercepted from client devices . Session manager  can be configured to parse intercepted messages, and determining the message protocol associated therewith. Session manager  can also be configured to send the message, or information equivalent thereto, to local server , which can be configured to generate a new-session event , indicating the receipt of a message. In certain embodiments a plurality of local servers  can be included, e.g., each adapted for processing of a different type of target protocol.","Session manager  can be configured to then distribute session event  to one or more other modules within protocol message gateway , such as authentication module . Authentication module  can be configured to receive session event  and send a name-request message  to an authorization server  and receive a name-response message  from authorization server .","For example, name-request message  sent by authentication module  to authorization server  can include an IP address for the client device  sending the message. The name-response message  sent by authorization server  to authentication module  can then include a unique user name associated with the client device  sending the message. Once name-response message  is received, authentication module  can be configured to first determine if the session associated with session event  is still active. If it is, then authorization module  can associate the unique user name with a screen name associated with the message and store the association in user database . When subsequent messages are received that comprise the same screen name, authentication module  can simply access the association information from user database  in order to identify the actual user sending the message.","A policy enforcement module , protocol adapter , and logging module  can then process the message based on the identification of the user. For example, policy enforcement module  can determine whether to allow the message to be forwarded to its originally intended destination based on the identification of the user sending the message.","Multiple screen names can be associated with a single user. Thus, the identification information stored in user database  can comprise a complete association of all screen names, or aliases, used by a particular user.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 13","b":["1302","122","1309","122","1250","1306","130","1308","1250","1244","1312"]},"In step , local server  within protocol message gateway  can determine if the user sending the message is known to local server , i.e. is the user name associated with a screen name in the user database  maintained by local server ? If the user sending a message is known to local server , then nothing needs to be done and the message can be handled accordingly in step . If the user sending the message is not known to local server , then, in step , local server  can be configured to create a guest session, i.e., a new session with a new user initiating the session. Then, in step , local server  can be configured to send a message to authorization server , requesting authorization server  obtain a unique user name for the user. Again, in one embodiment the message from server  to authorization server  can include an IP address associated with the sender of the message.","In step , authorization server  can identify a client device  associated, e.g., with the IP address sent received from local server , and can interrogate a registry at that client device  to determine a global user ID (GUID) for the client device . Because authorization server  can directly interrogates the registry at the client device , the local server  can obtain information uniquely identifying users without any requirement for cooperation by those users, and without any requirement for cooperation of client devices under control of those users. In cases where an individual user using an IM protocol, for example, has a plurality of screen names, local server  can still associate all of those screen names with the unique user.","Next, in step , authorization server  can request, from a domain controller , a unique user name associated with the GUID obtained above. Domain controller  can be configured to respond by sending the unique user name.","Authorization server  can be configured to then send the unique user name to local server  in step .","In step , local server  can be configured to check the to determine if the session associated with the message is still in progress. If the session is not still in progress, e.g., the session was dropped by the sender of the message, then the process can conclude. If the session is still in progress, then, in step , local server  can record the unique user name, and its association with the screen name, in user database .","Protocol message gateway  can be adapted to aggregate its treatment of messages with actual users, regardless of the screen names those actual users select for their communications. Thus, if an individual user has two separate screen names, the protocol message gateway  can still enforce policy rules with regard to the actual user, notwithstanding that user's separation of his messages into messages comprising two separate screen names. For example, if a particular policy rule restricts users from sending or receiving more than 100 IM messages each hour, protocol message gateway  can still restrict an individual actual user, operating under any one or more screen names, from sending or receiving more than 100 IM messages each hour for all screen names combined.","The screen name association information stored in user database  can also be used to identify when a message generated by a user within enterprise network  is intended for destination that is also within enterprise network . For example, one user  within enterprise network  can send an IM message to another user  within enterprise network . In a conventional system, the IM message sent from the first user would have to pass out of network  through external network  to a remote server configured to determine the destination of the IM message. The remote server would then forward that message, in this case, back to the second user within enterprise network . A protocol message gateway  configured in accordance with the systems and methods described herein, however, can recognize, using a screen name associated with the destination, that the second user is within enterprise network  and simply reflect the message to the second user as opposed to allowing it to exit enterprise network  and reach the remote server.","Thus, when protocol message gateway  receives a new message it can not only determine if a screen name associated with the source of the message has been associated with a unique user name in user database . But it can also be configured to determine if a screen name associated with the destination of the message has been associated with a unique user name in user database . If the user name associated with the source of the message has been associated with the unique user name in user database , then the policy enforcement rules of that message can be implemented as described above. If the screen name associated with the source of the message has not been associated with a unique user name, then the process described above for associating a unique user name with a screen name can be implemented to generate such an association, which can then be stored in user database .","Similarly, if the session name associated with the destination of the message has been associated with a unique user name and user database , then protocol message gateway  can be configured to simply reflect the message to a client device  associated with the unique user name. In this way, protocol message gateway  can prevent the message from traversing out of enterprise network , external network , to a remote server, and back. Not only can this speed communications between users  within enterprise network , but it can also avoid any of the problems associated with communicating outside of enterprise network .","If a screen name associated with the destination is not associated with a unique user name in user name database , then a similar process for associating a-screen name with a unique user name can be implemented; however, in this case authorization server  may not be able to make the association, because the destination can still be outside of enterprise network . If such is the case, then the message is not reflected and whatever policy enforcement rules are in place for the message can be implemented.","It should be noted that the systems and methods described herein can apply across a plurality of gateways interfaced via external network , for example. In other words, an enterprise can implement multiple protocol message gateways, with each gateway  having information related to the other gateways  and client devices  associated. Thus, the association information stored in user database  can, in certain embodiments, comprise information related to users associated with another protocol message gateway . In this case, when a first protocol message gateway  determines that a screen name or destination associated with the received message is associated with a unique user name that is in turn associated with a related protocol message gateway , the first protocol message gateway  can be configured to simply forward the message directly to the destination, e.g., though external network  and the related protocol message gateway , but still bypassing the remote server.","In another embodiment of the systems and methods described herein, protocol message gateway  can be configured to construct a privacy tunnel between a local client device  and a remote client device. The process of devising a privacy tunnel is somewhat similar to the process of reflecting a message when multiple protocol message gateways are involved; however, in this case, the remote client device is not necessarily associated with a protocol message gateway that is in turn associated with protocol message gateway . Protocol message gateway  does however need to know information related to the remote client device and\/or a protocol message gateway associated therewith. When a local client device  generates a message intended for the remote client device, protocol message gateway  can be configured to set up a direct communication link with the remote client device and\/or its associated protocol message gateway. In other words, a remote, or local, server can be bypassed when protocol message gateway  recognizes that the message generated by local client device  is intended for a remote client device about which it possesses direct connection information. Moreover, the communication link between the local client device  and the remote client device can be made secure even when communication via a remote server would not be.","A flow chart illustrating an exemplary embodiment for generating a privacy tunnel in accordance with the systems and methods described herein is illustrated in . First, in step , a local user, or a remote user, can invoke a secure communications session by submitting a signal to protocol message gateway . In one implementation, the user invokes a secure session by transmitting a specified string such as \u201c<SECURE>\u201d. Protocol message gateway  observes the request, in step , and invokes a secure communications channel by downloading a secure thin client to the remote client device in step . The remote client device can then invoke, in step , the thin client. Protocol message gateway  can then establish a secure communications channel through the external network  in step .","When protocol client device sends a message to the remote client device, protocol message gateway  can intercept the message, in step , and forward it to the thin client running on the remote client device in step .","When either user desires to terminate the secure communication, their client device can send a signal indicated to protocol message gateway  in step . In one embodiment, the termination of the secure such session is specified using a string such as \u201c<ENDSECURE>\u201d. Protocol message gateway  received the request in step  and terminates the secure communications channel. Upon terminate, the thin client terminates its execution and the remote client device releases all resources used by the thin client in step . The remote client device can then can delete the thin client device in step .","In certain embodiments, protocol message gateway  can intercept messages from a local client and translate then from one message protocol to another before sending them to the remote client device. This is useful, for example, where the remote client device and local client device are using different message protocols.",{"@attributes":{"id":"p-0110","num":"0109"},"figref":["FIG. 15","FIG. 15"],"b":["1500","110","1500","1510","1520","1510","170","110","110","130","1510"]},"Usage database  can include a set of database tables, including a user table  and an inverted user table . Although usage database  is described herein with regard to detecting and reporting user presence it will be apparent that usage database  is capable of very general extension to detecting and reporting the presence or absence of other resources, and of detecting and reporting other types of events. Usage database  also includes a set of database codes, including a set of SQL instructions  and a set of SQL extensions . It will be understood, of course, that although usage database  is described herein with regard to SQL as an individual instance of a database manipulation and querying language, usage database  can also be configured for other types of database manipulation and querying, and to other types of databases or data sources in general.","In one embodiment, user table  includes a set of entries , sometimes referred to as \u201crows\u201d, each of which includes information for a selected user . In such embodiments, user table  includes a set of fields , sometimes referred to as \u201ccolumns\u201d for each entry , each of which includes a selected data item, or list of data items, for the user associated with that entry . For example, user table  can include a first field that can comprise a user name associated with a selected user, a second field that can comprise a contact list associated with the selected user, and a third field that can comprise an online\/offline status associated with the selected user.","Field can, depending on the embodiment, comprise a multidimensional column, i.e., the value associated with field  can itself be a list. SQL extensions  include functions capable of generating a list, e.g., of multiple rows from a multidimensional column , and functions capable of generating a multidimensional column  from a list. This has the effect that a database query otherwise involving linking multiple database tables is capable of being performed using operations on a single database table. For example, without using multidimensional columns, associating a contact list with a selected user might involve a separate linking table, indicating for each pair of users, e.g., user A and user B, whether user B is on user A's contact list. Thus, conducting a contact list query would involve at least one search of the linking table and at least two searches of the user table. By using multidimensional columns, however, associating a contact list with a selected user involves only a single search of the user table itself and the use of a SQL extensions  to generate a list from the multidimensional column used for the contact list.","In one embodiment, inverted user table , similar to user table , includes a set of entries , each of which includes information for a selected user . Inverted user table , similar to the user table , can include a set of fields  for each entry , each of which includes a selected data item, or list of data items, for the user associated with that entry . In one embodiment, inverted user table  includes a first field including a user name associated with a selected user, and a second field including an inverted contact list associated with the selected user. The inverted contact list associated with that selected user in this case can be used to indicate those other users who have listed the selected user on their contact lists. Accordingly, when a newly logged-in user is detected, it is relatively easy to search for the set of other users who wish to be informed of the presence of that newly logged-in user.","In one embodiment, SQL extensions  can also include functions capable of specifying a set of database queries expected to be performed frequently, and for which it is desirable to construct an inverted table in response to the original table, similar to the relationship between inverted user table  and user table . In such embodiments, SQL extensions  can, for example, include. one or more of the following functions: a function allowing a designer to specify if an inverted table should be automatically constructed in response to an original table, similar to the relationship between inverted user table  and user table , and if so, how fields  of the inverted table relate to any corresponding fields  of the original table; a function allowing a designer to specify if a query relating to the original table should be translated into a query to be performed relating to the inverted table, and if so, how fields  of the inverted table should be tested in correspondence to any testing of fields  of the original table; a function allowing a designer to specify if a query, relating to either an original table or an inverted table, should have its results cashed for later use, and if so, upon what triggers should that query and\/or later use be performed.","For example, a query relating to which users on contact lists are logged-in might be performed in response to one or more of the following triggers: (1) when a user logs in, (2) when a user logs out, (3) after a selected period of time expires, (4) after protocol message gateway  is rebooted or reset, and (5) after a selected number of messages have been processed.","SQL extensions  can also include a function allowing a designer to specify if a query, relating to either an original table or an inverted table, should be performed and its results calculated before any actual requests therefore, and if so, upon what triggers should that query be performed.","SQL extensions  can also include a function allowing a designer to specify whether a table should include a multidimensional column, and if so, how that multidimensional column should be treated in response to query results. For example, a query relating to which users on contact lists are logged-in might include a multidimensional column relating to the contact list for each user, and upon performance of a query, results from that multidimensional column might be aggregated and then separated into individual row responses for specific users that are one the content list of the queried user.","Thus protocol message gateway  can be configured to allow efficient, time saving detection of user's present on network  and logged on to an application also being used by the user. This can save processing and other resources within network . This functionality can be extended by allowing, e.g., a network administrator, to define multidimensional columns, and multidimensional column associations, for other types of databases and database searches.",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 16","b":["1602","172","170","1604","170","122","1606","122","170","1608","122","170"]},"For example, protocol message gateway  can be configured to have available cached information from an external server indicating which internal users  and which external users are presently authorized to login to use the application. In such an embodiment, use of the application can be associated with access to the external server. Thus, the login can actually be an attempt to login to a server, e.g., the external server, associated with the application.","In another implementation, protocol message gateway  can be configured to have available a known procedure by which it can determine if the login message is valid, such as for example by reference to a public-key cryptosystem or other trusted server.","In step , if the login is successful, then the process can continue to step . If, however, the login is not successful, then protocol message gateway  can deny the attempt and wait for another message (step ). In step , protocol message gateway  can be configured to perform any SQL instructions  associated with the login. SQL instructions  can, for example, call upon a set of SQL extensions , such as, for example, when using multiple dimensional columns.","In one embodiment, a SQL instructions  associated with the login message can include detecting if any other user, whether an internal user  or an external user, on the contact list for the newly. logged-in user, is also logged in. For example, SQL instructions  can include a query to be performed against a user table , searching for the contact list associated with the newly logged-in user, and determining if any users on that contact list are already logged in. Thus, the newly logged-in user can be informed of any associated users already logged in.","In another embodiment, SQL instructions  associated with the login can also include detecting if the newly logged-in user is on any contact list for any users already logged in. Thus, users already logged in can be informed of the presence of the newly logged-in user, if that newly logged-in user were on any contact lists for any users already logged in.","Accordingly, performing SQL instructions , in step , can direct usage database  to search an inverted user table  for a newly logged-in user. In one embodiment, SQL instructions  associated with the login calls upon a set of SQL extensions  to search an inverted user table  for the newly logged-in user. For example, in one embodiment, the set of users listing the newly logged-in user on their contact lists can be specified by the SQL extensions  to include a multidimensional column, with the effect that performing the search provides a list of such users. In this example, a multidimensional column can be specified by SQL extensions  to be expanded out to a set of rows, each indicating a single user listing the newly logged-in user on their contact list. Thus, SQL instructions , or some other instruction, can be employed to so inform each of those users of the user presence of the newly logged-in user. Protocol message gateway  can be configured to then inform each of the set of users listing the newly logged-in user on their contact lists of the user's presence.","It should be apparent that similar steps might be performed by protocol message gateway  in response to other actions having an effect on status of user presence including, for examples, when a new user is registered with protocol message gateway , when a user of a selected type, such as a system administrator or chat room facilitator changes the status of their user presence, or when a user logs out.","While certain embodiments of the inventions have been described above, it will be understood that the embodiments described are by way of example only. Accordingly, the inventions should not be limited based on the described embodiments. Rather, the scope of the inventions described herein should only be limited in light of the claims that follow when taken in conjunction with the above description and accompanying drawings."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Features, aspects, and embodiments of the inventions are described in conjunction with the attached drawings, in which:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
