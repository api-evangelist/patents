---
title: Hierarchical event filtering for storage server
abstract: A technique for reducing the number of events that are transmitted by a server to a client in a client/server application programming interface (API). At the server host, each of different event messages is associated with at least one event category in a hierarchy of event categories. Each client host sends a registration request to the server host to inform the server host that the client host wants to receive only event messages that are associated with a specified event category. The server host associates the specified event category with each client host, and communicates only the event messages that are descendants of the specified event category.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07437735&OS=07437735&RS=07437735
owner: International Business Machines Corporation
number: 07437735
owner_city: Armonk
owner_country: US
publication_date: 20040227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The invention relates generally to the field of computer systems and, more specifically, to a technique for reducing the number of events that are transmitted by a server host, e.g., in a client\/server application programming interface (API).","2. Description of the Related Art","Computer systems include host computers that communicate with one another via a network to run network applications. Typically, software is distributed and run on two or more hosts to realize the applications. The network applications have application-layer protocols that define the format and order of the messages that are exchanged between the hosts, and what actions to take when a message is transmitted or received. In particular, a network application typically includes a client side and a server side. In this case, the application may be referred to as a client\/server application. A client side on one host may communicate with a server side on another host. The client is usually the host that initiates a communication or session with another host.","Moreover, in a client\/server application programming interface (API), the server generates events and transmits them over a network to the client. The API includes a portion run on the server and a corresponding portion run on the client. An event generally refers to an occurrence of significance to a task, such as the opening of a window or the completion of an asynchronous operation. An event may involve any significant change in the state of a system resource, network resource, or network application. An event can be generated, e.g., for a problem, for the resolution of a problem, or for the successful completion of a task. Examples of events include the normal starting and stopping of a process, the abnormal termination of a process, and the malfunctioning of a server. For instance, a storage system such as a storage server may run software that generates and communicates such events to clients that store data on the server. The IBM\u00ae Enterprise Storage Server (ESS) is an example of such a storage system.","However, performance can be reduced when many events are transmitted due to the use of processing, storage and transmission resources.","To overcome these and other deficiencies in the prior art, the present invention provides a technique for reducing the number of events that are transmitted by a server in a client-server API. To achieve this, an end application running at the client is allowed to register for only those events that it requires, and not all events that are generated by the server.","In a particular aspect of the invention, a method is provided for use at a server host in controlling the communication of different event messages to at least one client host. The method includes associating each of the different event messages with at least one event category in a hierarchy of event categories, associating a particular one of the event categories with the at least one client host, and communicating a particular one of the different event messages to the at least one client host when the particular one of the different event messages is a descendant of the particular one of the event categories.","In another aspect of the invention, a method is provided for use at a client host in controlling the communication of different event messages thereto from a server host. The method includes communicating a registration request to the server host, wherein, at the server host, each of the different event messages is associated with at least one event category in a hierarchy of event categories, the registration request indicating a particular one of the different event categories to be associated with the client host, and responsive to the communicating, receiving event messages from the server host that are descendants of the particular one of the different event categories.","A related apparatus and program storage device are also provided.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","150","100","110","105","115","150","160","155","165","115","165","130","100","150"]},"The general operation and configuration of the processors , , memories ,  and network interfaces ,  is well known in the art and is therefore not described in detail. The components illustrated are provided to assist in understanding the invention. The hosts ,  may be general-purpose computers, workstations, servers, portable devices such as PDAs, or other computer devices. The functionality described herein can be achieved by configuring the hosts  and  with appropriate software. In one approach, the software comprises an object-oriented software such as Java code that is stored in the memories , . Any type of programming language may be used. In one approach, the memories ,  are program storage devices that store executable software instructions for execution by the processors ,  in a known manner.","As indicated, the present invention provides a technique for reducing the number of events that are transmitted from the server host  to one or more client hosts  in a client-server API. This invention solves the problem by maintaining an event category hierarchy and allowing the end application to register at any point in the hierarchy. When registering for events of a particular event category in the hierarchy, the effect is the same as registering for all events at that level down. In other words, the clients register for all the leaf or descendant events of a specified event category. In one approach, only the leaf nodes of the hierarchy, which are the lowest level nodes, match to real events that can be generated. The invention addresses both event registration and event distribution. The various events that may be generated may be arranged in a hierarchy according to various approaches. In one possible approach, an object-oriented hierarchy is used. This approach can be illustrated conceptually by the following example.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2","b":["200","210","220","225","220","225","210","230","232","234","210","236","238","225","210","210","220","225","230","232","234","236","238"]},"For example, a client that has registered for the Orange Event  would only get Orange events and not Lemon Events. In this case, the client receives the event message for which the client registered. A client that has registered for the category of Citrus Events  would receive the Orange Event , Lemon Event , and the Grapefruit Event , but would not receive the Strawberry Event  or the Blueberry Event . A client that has registered for the category of Fruit Events  would receive the Orange, Lemon, Grapefruit, Strawberry and Blueberry events. In these cases, the client receives event messages for nodes that are descendants of the particular node or event category that is associated with the client. The hierarchy can have one or more levels of event categories.","In another possibility, the event hierarchy represents an importance or priority hierarchy. For example:","All events at a top level;","Subcategories of All events would be high, medium, and low importance;","High has subcategories X, Y, Z;","Medium has subcategories A, B, C; and","Low has subcategories , , .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["300","310","320","300","310","330"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4","b":["400","410","420","430","440","410","420","430"]},"The invention has been described herein with reference to particular exemplary embodiments. Certain alterations and modifications may be apparent to those skilled in the art, without departing from the scope of the invention. The exemplary embodiments are meant to be illustrative, not limiting of the scope of the invention, which is defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other features, benefits and advantages of the present invention will become apparent by reference to the following text and figures, with like reference numbers referring to like structures across the views, wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
