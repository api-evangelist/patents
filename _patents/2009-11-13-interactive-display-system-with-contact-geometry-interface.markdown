---
title: Interactive display system with contact geometry interface
abstract: An interactive display system with a contact geometry interface is disclosed. The interactive display system may include a multi-touch display, a touch detection system configured to detect a touch input on the multi-touch display and to generate contact geometry for a contact region of the touch input, and an application programming interface executed on a processor of the interactive display system. The application programming interface may be configured to receive the contact geometry and to send the contact geometry to a requesting application program for application-level processing. Further, the application programming interface may be configured to receive from the application program a display command based on the application level-processing. The application programming interface may be configured to send the display command to the multi-touch display to adjust a display of a graphical element on the multi-touch display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08390600&OS=08390600&RS=08390600
owner: Microsoft Corporation
number: 08390600
owner_city: Redmond
owner_country: US
publication_date: 20091113
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Computing devices with touch screens are capable of detecting objects in contact with the screen. Multi-touch displays are configured to sense and identify multiple contacts concurrently. Managing data about these contacts may be difficult for application programs executed on the computing devices. It may be difficult for an application program to ascertain a shape of a contact and to track changes in the shape of the contact over time. For example, if the contact is manipulated by a user, the contact location may change and the contact shape may change. As a result, the application program may consume significant processing resources acquiring and processing an image of the contact on the screen, and tracking changes to the image of the shape of the contact. For systems that track multiple contacts simultaneously, even greater processor resources can be consumed.","As a result of these challenges, developers may experience technical hurdles, delays, and cost overruns in developing application programs that are compatible with multi-touch screens, creating a barrier to market entry for new application programs. The quality and user experience of the resulting application programs may also vary. With such product development barriers, and potential varying quality of the resulting application programs, users may be reticent to adopt such touch screen devices in the future.","An interactive display system with a contact geometry interface is disclosed. The interactive display system may include a multi-touch display, a touch detection system configured to detect a touch input on the multi-touch display and to generate contact geometry for a contact region of the touch input, and an application programming interface executed on a processor of the interactive display system. The application programming interface may be configured to receive the contact geometry and to send the contact geometry to a requesting application program for application-level processing. Further, the application programming interface may be configured to receive from the application program a display command based on the application level-processing. The application programming interface may be configured to send the display command to the multi-touch display to adjust a display of a graphical element on the multi-touch display.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","106","108","128","110","112"]},"Multi-touch display  is configured to receive multiple concurrent touch inputs  and to display one or more graphical elements  for viewing. In some embodiments, multi-touch display  may include a multi-touch input device and an output display positioned adjacent each other in an integrated unit, for example, an overlapping capacitive or resistive layer and liquid crystal display mounted in a shared housing. Alternatively, multi-touch display  may include a multi-touch input device and an output display that are housed in physically separate devices, such as a depth camera and a display in separate housings. As yet another alternative, the multi-touch input device and the output display may be housed in separate regions of a shared housing, for example, a display may be provided in a housing of an electronic device, with a multi-touch input device that only partially overlaps the display.","Touch detection system  is configured to detect a touch input  on multi-touch display . In , touch input  is schematically depicted as being made by an object , here shown as an adjustable ruler. It will be appreciated that object  may be another suitable object on or near multi-touch display , such as a drinking glass, a toy car, etc. Touch detection system  may be configured to detect touch input  using a suitable touch sensor , such as a resistive, capacitive, optical, or infrared touch sensor, for example.","Touch detection system  is also configured to generate a contact geometry  for a contact region A of touch input . Contact geometry  may include data indicating a perimeter of touch input . The perimeter may be approximated, for example, by a polyline. Contact geometry  also may include data indicating other aspects of touch input , such as a geometric center of the contact region, a vector or vector field associated with the contact region, etc.","According to one exemplary implementation, the touch detection system  may include one or more optical touch sensors, each configured to capture an image of contact region A associated with touch input  on multi-touch display . The captured image may be processed by an algorithm of touch detection system , which determines a path of pixels forming a contour of contact region A. The path may be converted by touch detection system  from pixel data to structured data in the form of contact geometry . In one example, contact geometry  may include an ordered list of points describing the path that forms the bounds of contact region A and\/or an ordered list of two-dimensional geometric segments describing the path that forms the bounds of contact region A. It will be appreciated that such an ordered list of points and\/or segments may be referred to as a polyline.","Application programming interface  is configured to receive contact geometry  from touch detection system  and to send contact geometry  associated with contact region A for touch input  to application program  for application-level processing. Application-level processing by application program  may be contrasted to operating-system-level processing by touch detection system , and may take several forms. For example, the contact geometry may be used by an application program to compute a use mode of the touch input so that the application program may generate a command for transmission via application programming interface  to touch detection system  to display content relevant to the use mode.","It will be appreciated that in the depicted embodiment the software components of the touch detection system  are operating-system-level components. The application programming interface  provides a software mechanism for the application program  to communicate with these operating system level software components. Thus, in one example, application programming interface  provides a convenient mechanism to send contact geometry  from the operating system software components of touch detection system  to application program .","In addition to sending contact geometry  to application program , application programming interface  may also receive commands generated by application program  responsive to application-level processing of contact geometry  to be forwarded to touch detection system . Thus, application programming interface  is further configured to receive from application program  a display command  based on the application-level processing, and to send display command  to multi-touch display  to adjust a display of a graphical element  on multi-touch display . In this manner, the application program may be informed of the specific contact geometry associated with a touch input, perform application-specific routines based on that contact geometry, and display output based on the result of those routines. This enables application programs to have greater awareness of touch input shapes, and flexibility to alter graphical user interface elements based on those shapes. As one specific example, the application program may use the results of application-level processing of the contact geometry to send a display command to the application programming interface such that graphical elements are not displayed in a way that would be obscured by the touch input. Thus, application program  may send a display command  to application programming interface  to display graphical element  to a side of object  so that graphical element  is not obscured by object .","As another example, if a 4\u00d76 inch rectangle is placed on the touch display, the application program may recognize the object as a printed photograph and send a display command to draw an outline around the photograph, for example. As another example, the application program may recognize the object as a user's hand engaged in a gesture input, and may send a display command to display a graphical element that is manipulated during the gesture input, such as a slider, a dial, a keypad, etc.","Turning now to details of the process by which touch input is communicated from the multi-touch display to the application program, touch detection system  further comprises a surface input module  for receiving a touch input event  from touch sensor  associated with multi-touch display . Touch sensor  is configured to detect a touch input , which may be an initial touch, a movement of a touch, or a removal of a touch, for example. In response, the touch sensor  is configured to send a touch input event  indicating that the touch input  was detected, to the surface input module . It will be appreciated that touch input  may be detected by any suitable type of touch sensor , as described above.","Surface input module  is also configured to generate a contact identifier  that identifies touch input  touching multi-touch display  at contact region A responsive to touch input event . Contact identifier  may be a suitable distinctive identifier configured to identify touch input  and contact region A, and thereby enable the surface input module  and other software components to differentiate multiple concurrent touch inputs . In this manner, touch detection system  is configured to track changes to the contact geometry  of contact region A based on the associated contact identifier .","The touch detection system  may be configured to associate a plurality of contact regions with one touch input, which may be useful to identify multiple fingers of a user's hand as one touch input, or two separate portions of an object as one touch input, etc. Thus, contact region A may be one of a plurality of contact regions associated with a global contact identifier  shared by the regions, so that the plurality of contact regions may be tracked by touch detection system  based on global contact identifier . For example,  shows contact region A and contact region B of object  disposed on multi-touch display  and linked by an undetected portion C of object . Touch detection system  may track both contact regions A and B together through global contact identifier . Thus, contact regions A and B may be grouped as a one touch input even as manipulations to object  cause the shapes and orientations of contact regions A and B change.","The surface input module  may be configured to generate a data structure for contact data  about the corresponding contact region for each contact identifier. The contact data  data structure may include not only the contact ID, but also the touch event  (e.g., initial touch, movement, removal), spatial coordinates (e.g., x, y) for contact region A, an area of contact region A, and a bounding ellipse of contact region A. The contact data  data structure may be passed from the surface input module  and stored temporarily in a multi-process queue , for later retrieval by other processes, such as the application programming interface .","By associating contact data  with contact identifier , touch detection system  is configured to track changes to contact data  of contact region A based on contact identifier . If contact region A is one of a plurality of contact regions grouped with a global contact identifier , touch detection system  may associate contact data about each contact region of the plurality of contact regions with global contact identifier  as well.","Touch detection system  is also configured to detect interactions among the plurality of contact regions based on the respective contact identifiers. For example, if object  is an adjustable ruler, as one arm of the adjustable ruler is swiveled toward the other arm, contact region B and contact region A approach each other. Thus, touch detection system  may detect a change in an angle between adjacent boundaries of each contact and may display a graphical representation of the angle on multi-touch display . Further, a warning may be displayed indicating a potential collision between object  and another object disposed on multi-touch display  based on interactions detected between contact regions A and\/or B and a contact region of the other object.","As indicated above, multi-process queue  is configured to relay contact data  and associated contact identifier  to contact geometry application programming interface , in the following manner. First, when an initial touch input event is detected, the multi-process queue  is configured to initially send contact data  to contact geometry application programming interface , which receives the contact data  and in turn sends the contact data  to application program .","Once the application program  has received the contact data , it may make a decision that it would like to receive the contact geometry  for the associated touch input. Thus, the application program may send a request for contact geometry  to the contact geometry application programming interface , which may receive the request for contact geometry  from application program . In turn the contact geometry application programming interface  may send the request for contact geometry  to the surface input module , which passes the request on to the multi-process queue . In response to receipt of the request for contact geometry , the multi-process queue  forwards the contact geometry  to the contact geometry application programming interface .","Request for contact geometry  may include touch input metadata  defining properties of touch input . In some embodiments, the touch input metadata may include one or more parameters  providing instructions on how the application program may receive the contact geometry. For example, contact geometry application programming interface  may be configured to send contact geometry  to application program  according to an update frequency parameter and\/or to a contact geometry output format parameter included in touch input metadata .","Touch input metadata  may also include a global physical definition parameter of touch input  enabling touch detection system  to identify a physical characteristic of touch input  based on contact identifier  of contact region A. For example, the global physical definition parameter for object  may be an overall shape of object  (e.g., in the form of a two dimensional polyline or a three dimensional polygonal mesh), including a proxy contact geometry of undetected portion C. Thus, even though touch detection system  is unable to directly detect undetected portion C via touch sensor , touch detection system  may still be able to provide collision warnings and display graphical elements in a way that is not obscured by undetected portions of touch inputs. For example, touch detection system  may be able to calculate a center of geometry for contact region A of object  and, in combination with data about undetected portion C included in touch input metadata , determine whether it is likely that object  will fall off of multi-touch display .","Further, where contact region A is one of a plurality of contact regions associated with global contact identifier , the plurality of contact regions may be tracked by touch detection system  based on the global physical definition parameter of touch input metadata . For example, the global physical definition parameter may describe a size, shape, or configuration of object  may be available to the touch detection system via association with global contact identifier . Other types of global physical definition parameters may be included in the touch input metadata as well.","With such a global physical definition, touch detection system  may detect an interaction between portions of an object  such as the depicted adjustable ruler, which are not detected by touch detection system  and other detected touch inputs. For example, in the case that touch input metadata  includes a global physical definition parameter for the adjustable ruler describing a 3-D volume of the adjustable ruler, the touch detection system  may be able to detect the presence of an undetected portion C of the adjustable rule in the form of a pivot joint. Further, the touch detection system may be able to detect a collision between such an undetected portion C and another object, even though contact regions A and B may otherwise be remote from a contact region of the other object.","In some embodiments, a global physical definition parameter of touch input metadata  may describe a total physical area of object . For example, in the case that touch input metadata  includes a global physical definition parameter for the adjustable ruler describing a total physical area of the ruler, application program  may perform different application-level processing depending on whether a touch input is detected inside of or outside of the total physical area of the ruler, as projected onto the display. Thus, in one scenario, a touch input between contact regions A and B of the adjustable ruler, which may be included in the total physical area for the purposes of this example, may be ignored by application program . Further, in a second scenario, display command  may include a different message  depending on whether a concurrent touch input is detected inside of or outside of the total physical area. For example, a touch input between contact regions A and B of the adjustable ruler may lead to a presentation of a ruler setting user interface at multi-touch display  which enables a user to set the ruler units, markings, transparency, etc., on a graphically displayed ruler associated with the ruler object. Conversely, a touch input outside of the total physical area may not cause the ruler setting user interface to be presented.","Touch input metadata  may also be associated with contact identifier  or with global contact identifier  based on a signature  recognizable to the touch detection system. The signature  may provide a reference code allowing the touch detection system to look up the touch input metadata in a look-up table. Additionally or alternatively, the signature may provide a portion of the touch input metadata directly to the touch input system. In , touch input  includes a touch input signature  registered to touch input  for use with a vision-based touch detection system.","Vision-based touch detection systems may be configured to include an infrared light source directed at a surface of the multi-touch display. Infrared-reflective objects, including infrared-reflective tags, reflect a portion of the infrared light toward one or more image captured devices included in the touch detection system, which interprets the reflections as touch inputs to the multi-touch display. It will be appreciated that other signatures may be employed. For example, a signature may be configured to be recognized by radio frequency identification or optical character recognition.","The touch input signature  may be, for example, an infrared-reflective tag having a data region  encoding data about touch input . Infrared-reflective tags may include one or more data regions encoding data associated with the object bearing the tag. For example, data region  may provide spatial orientation information about object . It will also be appreciated that data region  may also encode all or a portion of touch input metadata  for object .","The touch input metadata may also be retrieved from a library of touch input metadata located in computing device  or on a remote server.  shows that touch input metadata  is retrieved by application program  from a touch input definition library  of touch detection system . Alternatively, the touch definition library may be accessed by the touch detection system, for example, via a function call made by the surface input module, as indicated in dashed lines. Touch input definition library  may be configured to include touch input metadata for one or more types of touch inputs that may be utilized by the application program . Touch input definition library  may be received from installation software for application program , for software included with touch input , from a remote server over a network, etc.","Contact geometry application programming interface  is configured to send contact geometry  to application program  for application-level processing. Contact geometry application programming interface  is also configured to receive a display command  based on the application-level processing from application program  and send display command  to a display application programming interface .","Display command  may include one or more messages  to display graphical element  on multi-touch display  so that graphical element  will not be visually obscured by an undetected portion of touch input  based on the global physical definition parameter. For example, if object  is a toy car having four wheels forming touch inputs on display  and also having a front bumper which is not detected by touch detection system , display command  may include a message to display a web page about the toy car so that the web page is not hidden from view by the front bumper.","Turning now to , a method  is depicted for displaying an image on a multi-touch display of an interactive display system. Method  may be executed using the hardware and software components described above in reference to , or using other suitable hardware and software components.","Method  includes, at step , at an application programming interface, receiving contact data including a contact identifier for a contact region of a touch input on a multi-touch display, from a touch detection system. As described above, the touch detection system may be configured to detect the touch input on the display and to generate contact geometry of the contact region. Further, the contact identifier may be configured to identify the touch input touching or near the display at the contact region.","As indicated at , the contact identifier may be a global contact identifier associated with a plurality of contact regions, as described above. As shown at , the contact geometry may be in the form of an ordered list of points describing the bounds of the contact region and\/or an ordered list of two-dimensional geometric segments, or of another suitable format.","At step , the method may include sending contact data including the contact identifier associated with the touch input to the application program. At step , method  includes receiving a request for the contact geometry of the contact region based on the contact identifier from an application program, for application-level processing.","Continuing, method  includes, at , associating properties of the touch input with the contact identifier of the contact region based on touch input metadata that includes a global physical definition parameter of the touch input. Step  may further include, at , retrieving the touch input metadata from a touch input definition library based on a touch input signature registered to the touch input and detected by the touch detection system. Method  also includes, at , sending a request for the contact geometry to the touch detection system, and, at , receiving the contact geometry of the touch input to the multi-touch display from the touch detection system.","At , method  includes tracking changes to the contact geometry of the contact region based on the contact identifier. Step  may also include step , detecting an interaction between the contact region and a different contact region detected by the touch detection system based on the contact geometry of each contact region.","Continuing with method , at step , method  includes sending the contact geometry associated with the contact region for the touch input to a requesting application program for application-level processing.","Step  may also include, at step , sending the contact geometry to the application program according to an update frequency parameter or to a contact geometry output parameter included in the touch input metadata. Further, step  may also include, at step , sending proxy contact geometry of an undetected portion of the touch input based on the global physical definition parameter.","Method  also includes, at , receiving a display command from the application program based on the application-level processing and based on the touch input metadata. At , method  includes sending the display command to the multi-touch display to adjust a display of a graphical element on the multi-touch display. Step  may include, at step , sending a display command to display a graphical element on the multi-touch display so that the graphical element displayed will not be visually obscured by a portion of the touch input based on the global physical definition parameter.","It will be appreciated that the above described systems and methods may be used by application developers to provide awareness to application programs of contact geometries of touch inputs, and enable those application programs to adjust the display of graphical user interfaces in appropriate ways, by use of a convenient application programming interface. As a result, application programs that leverage such functionality may be more efficiently developed, and provide a user experience of enhanced quality.","It will be appreciated that the computing devices described herein may be any suitable computing device configured to execute the programs described herein. For example, the computing devices may be a mainframe computer, personal computer, laptop computer, portable data assistant (PDA), computer-enabled wireless telephone, networked computing device, or other suitable computing device, and may be connected to each other via computer networks, such as the Internet. These computing devices typically include a processor and associated volatile and non-volatile memory, and are configured to execute programs stored in non-volatile memory using portions of volatile memory and the processor. As used herein, the term \u201cprogram\u201d refers to software or firmware components that may be executed by, or utilized by, one or more computing devices described herein, and is meant to encompass individual or groups of executable files, data files, libraries, drivers, scripts, database records, etc. It will be appreciated that computer-readable media may be provided having program instructions stored thereon, which upon execution by a computing device, cause the computing device to execute the methods described above and cause operation of the systems described above.","It will be understood that the embodiments herein are illustrative and not restrictive, since the scope is defined by the appended claims rather than by the description preceding them, and all changes that fall within metes and bounds of the claims, or equivalence of such metes and bounds thereof are therefore intended to be embraced by the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 3","FIG. 2"]}]},"DETDESC":[{},{}]}
