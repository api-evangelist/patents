---
title: Indexing documents using internal index sets
abstract: Provided are techniques for retrieving a document that includes for each page an area that is ignored by applications that process the document and that includes a different internal index set associated with each subset of pages of the document, wherein each different internal index set is associated with an area and stores indexes, and wherein each of the indexes consists of a name-value pair. Then, for each page in the document, it is determined whether the page is associated with an internal index set; and, in response to determining that the page is associated with an internal index set, one or more name-value pairs from the internal index set are extracted, wherein each of the one or more name-value pairs provides specific information about the document for use in identifying the document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08572062&OS=08572062&RS=08572062
owner: International Business Machines Corporation
number: 08572062
owner_city: Armonk
owner_country: US
publication_date: 20091221
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","Additional Embodiment Details"],"p":["1. Field","Embodiments of the invention relate to indexing documents using internal index sets.","2. Description of the Related Art","Documents, such as WORD\u00ae documents and EXCEL\u00ae documents, may have associated document meta data (e.g., who created the document and a creation date) that may be used for indexing documents (WORD and EXCEL are trademarks of Microsoft Corporation in the United States, other countries, or both). However, the available meta data is limited, and it would be useful for a user to customize terms for indexing these documents.","In addition, ADOBE\u00ae Portable Document Format (PDF) is a document architecture from Adobe Systems Incorporated in 1993 (ADOBE is a trademark of Adobe Systems Incorporated in the United States, other countries, or both). Originally created for printing, PDF documents are now also found in great numbers on the internet. In fact, PDF has become the de facto standard for internet based documents.","Because of the internet explosion, companies are quickly moving away from their older proprietary print formats in favor of PDF. This move allows them to produce printed copies of statements (e.g., invoices) as well as host the same version of the statement for viewing on the Web (also known as the World Wide Web or WWW). Prior to this move, documents were converted from the proprietary data type to PDF. As part of this move, companies are uncovering architectural issues with the PDF format as it relates to massive, single PDF documents that include multiple statements. This type of PDF document is called a PDF report document.","For example, in order to access a single statement within a PDF report document, unique pieces of information (i.e., indexes, also sometimes called meta data) are extracted so that a user can search for a particular document. This technique of breaking up the PDF report document into individual documents and extracting indexes for each of the individual documents is called indexing. The typical technique for extracting indexes from a PDF report document is to search through the PDF report looking for text in certain predetermined locations of the PDF report document, and these predetermined locations are called the bounding boxes of the text in PDF documents.","In order to extract the text, each page of the PDF document is first graphically rendered. Then, each word of each PDF page is examined in order to determine if the word is inside a bounding box. This technique requires numerous graphic, font and floating point operations, which cause it to be slow, especially as PDF documents have become larger. That is, known indexers use graphical techniques to extract data, which is very resource intensive and prone to errors (i.e., due to font metrics, bounding boxes with rounding errors, etc.).","Thus, there is a need for indexing documents using internal index sets.","Provided are a method, computer program product, and system for retrieving a document that includes for each page an area that is ignored by applications that process the document and that includes a different internal index set associated with each subset of pages of the document, wherein each different internal index set is associated with an area and stores indexes, and wherein each of the indexes consists of a name-value pair. Then, for each page in the document, it is determined whether the page is associated with an internal index set; and, in response to determining that the page is associated with an internal index set, one or more name-value pairs from the internal index set are extracted, wherein each of the one or more name-value pairs provides specific information about the document for use in identifying the document.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments of the invention. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the invention.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","160","100","110","120","130","140","120","122","160","170","180","170","110"]},"In certain embodiments, the internal index sets reside in a predetermined structure. In certain embodiments, the internal index sets are non-graphical structures. In certain embodiments, each internal index set has the following characteristics for a document:","Characteristics\n\n","In certain embodiments in which the document  is a PDF document, an internal index set can be accessed without accessing a bounding box. In certain embodiments, indexes are stored in the internal index sets as well as being available in bounding boxes.",{"@attributes":{"id":"p-0026","num":"0028"},"figref":"FIG. 2","b":["200","200","110","170","202","110","170","160","170","120"]},"With embodiments, the indexes for the document  are stored in one or more areas inside the document  when the document  is created. Document producers know what data is useful within a document , and, therefore, can create one or more internal index sets containing indexes (i.e., name-value pairs) in one or more areas within the document , as well as placing the index values into the content stream of the document.",{"@attributes":{"id":"p-0028","num":"0030"},"figref":"FIG. 3","b":["300","120","170","170","170","302","122","122"]},"In block , the indexing system  stores the indexes (i.e., name-value pairs) in a table of the database . In certain embodiments, for each internal index set, there is one row in the database , and there are columns that correspond to the name of each index. That is, for a name-value pair, the index name corresponds to a column name in the table, and the index value corresponds to a value stored in a row for a column having the name. In certain embodiments, the index values are in character format, and the indexing system  uses mappings  to convert the index values to other formats as needed to store the index values in the database . For example, the indexing system  may convert an account number from character format to integer format and store the integer format in the database .","Thus, embodiments remove the need for searching for text, determining bounding boxes, and performing floating point calculations. The indexing system  also does not need to know how many name-value pairs are contained within the document . Without the need for these tasks, the indexing system  is less complex and performance in indexing the document  improves.","Moreover, for all types of documents, embodiments allow customizing terms for indexing these documents.","In certain embodiments, an internal index set that meets the three characteristics described above is a page-piece dictionary.","In embodiments in which the document  is a PDF document, a page-piece dictionary may be used to store indexes. That is, the page-piece dictionary is the structure storing one or more internal index sets.",{"@attributes":{"id":"p-0034","num":"0036"},"figref":"FIG. 4","b":"400"},"The key word PieceInfo identifies this object as a page-piece dictionary. In the example of , the key word ODIndexes identifies an entry containing the indexes for the document. The same key word is used by the indexing system  creating the indexes, and the internal index set extractor  that is extracting the indexes. The use of the same key word association enables the internal index set extractor  to locate the correct entry in the page-piece dictionary that contains the indexes.","In certain embodiments, the key words Private and LastModified are specified by the PDF architecture for the application data dictionary. The words \u201cAccountNo\u201d, \u201cName\u201d, and \u201cRunDate\u201d are the index names. The text \u201c7558-1\u201d, \u201cDavid Smith\u201d, and \u201c03 AUG 2004\u201d are the index values. The index names and index values are structured in such a way that it is clear which index name is associated with which index value. The key word \u201cAnotherEntry\u201d contains another entry in the page-piece dictionary that is not relevant to extracting indexes, but is shown to illustrate the fact that the page-piece dictionary can have multiple entries used by different applications for different purposes. For example, the indexing system  uses the internal index set, but another application may use the AnotherEntry data.","The page-piece dictionary can be created as part of a page object. Any page object can contain a single page-piece dictionary. A page object may be described as a dictionary specifying the attributes of a single page of a document.",{"@attributes":{"id":"p-0038","num":"0040"},"figref":["FIG. 5","FIG. 4"],"b":["122","500","122","170","502","122","504","506","502","122"]},"In block , the internal index set extractor  extracts name-value pairs from the internal index set. For example, the internal index set extractor  may use an API to retrieve each name-value pair and may then use APIs to extract the name and value of each name-value pair. For example, when the name-value pair \u201cAccountNo\u201d\/\u201c7558-1\u201d is retrieved, \u201cAccountNo\u201d, and \u201c7558-1\u201d are extracted. From block , processing continues to block .","In block , the internal index set extractor determines whether all pages of the document  have been selected. If so, processing is done, otherwise, processing loops back to block  to select another page of the document .","Thus, embodiments enable indexes to be associated with a page in a non-graphical location in a document . Embodiments extract text information from documents , to include but not to be limited to indexes. With embodiments, index values are embedded in documents .",{"@attributes":{"id":"p-0042","num":"0044"},"figref":["FIG. 6","FIG. 6","FIG. 4","FIG. 4"],"b":["600","180","600","600","170","170","600"]},{"@attributes":{"id":"p-0043","num":"0045"},"figref":"FIG. 7","b":["170","700","130","702","130","170","704","130","170"]},"Thus, certain embodiments provide a unique way to enable faster and more accurate indexing of documents . Certain embodiments combine several ideas to use internal index sets. One idea is to have the document producers duplicate the indexes in the form of internal index sets. That is, in addition to, or instead of, placing the indexes on the viewable page that is in a content stream, the indexes are copied to a pre-determined (e.g., known by the indexing system ) area on a page of a document  that does not require graphics operations to retrieve.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system that executes or runs instructions, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The code implementing the described operations may further be implemented in hardware logic or circuitry (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.",{"@attributes":{"id":"p-0054","num":"0056"},"figref":"FIG. 8","b":["800","100","800","800","802","804","820","804","804","805","806"]},"Input\/Output (I\/O) devices ,  (including but not limited to keyboards, displays, pointing devices, etc.) may be coupled to the system either directly or through intervening I\/O controllers .","Network adapters  may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters .","The computer architecture  may be coupled to storage  (e.g., a non-volatile storage area, such as magnetic disk drives, optical disk drives, a tape drive, etc.). The storage  may comprise an internal storage device or an attached or network accessible storage. Computer programs  in storage  may be loaded into the memory elements  and executed by a processor  in a manner known in the art.","The computer architecture  may include fewer components than illustrated, additional components not illustrated herein, or some combination of the components illustrated and additional components. The computer architecture  may comprise any computing device known in the art, such as a mainframe, server, personal computer, workstation, laptop, handheld computer, telephony device, network appliance, virtualization device, storage controller, etc.","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The foregoing description of embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Since many embodiments may be made without departing from the spirit and scope of the embodiments, the embodiments reside in the claims hereinafter appended or any subsequently-filed claims, and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
