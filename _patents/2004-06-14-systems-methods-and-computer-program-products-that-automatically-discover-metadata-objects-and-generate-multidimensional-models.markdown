---
title: Systems, methods, and computer program products that automatically discover metadata objects and generate multidimensional models
abstract: Systems, methods, and computer products that include an automated discovery process that discovers useful metadata objects from an intelligent starting point thereby generating at least one multidimensional model for OLAP analysis. Further, generation of the intelligent starting point may be derived by use of a multidimensional analysis program that analyzes the results of query mining and query analysis. The preferred embodiment of the present invention determines whether metadata useful for OLAP analysis exists by evaluating patterns found in the queries. In addition to using the starting point derived from the results of query mining and query analysis, the preferred embodiment of the present invention may also limit search parameters to narrow the scope of searching for an intelligent starting point and thereby both increase the probability of producing an accurate cube multidimensional model and increase the efficiency of determining the intelligent starting point.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707143&OS=07707143&RS=07707143
owner: International Business Machines Corporation
number: 07707143
owner_city: Armonk
owner_country: US
publication_date: 20040614
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["A portion of the disclosure of this patent document contains material, which is subject to copyright protection. The copyright owner has no object to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","In U.S. patent application, Ser. No. 10\/325,245 and entitled \u201cSystem and Method for Automatically Building an OLAP Model in a Relational Database and incorporated herein in its entirety by this reference, there is described a system and method for automatically creating OLAP (multidimensional) metadata objects from a relational database. Further, in US Publication 2003\/0212667, published Nov. 13, 2003, entitled \u201cSystems and Methods and Computer Program Products to Browse Database Query Information\u201d, incorporated herein in its entirety by this reference, there is described a system to browse query information. Further, in US Publication 2003\/0212676, published Nov. 13, 2003, entitled, \u201cSystem, Methods, and Computer Program Products to Determine Useful Relationships and Dimensions of a Database\u201d, there is described a system to determine useful relationships and dimensions of a database. US Publication 2003\/0212676 issued as U.S. Pat. No. 6,947,929 on Sep. 20, 2005, and a Statutory Disclaimer was filed for U.S. Pat. No. 6,947,929 on Jan. 10, 2007. Although not limited thereto, the present invention employs such methods in one of its preferred embodiments.","1. Field of the Invention","present invention is directed to the field of relational database browsing and information mining. It is more particularly directed to computer-implemented discovery of metadata, and generation of multidimensional models in a relational database.","2. Description of the Background Art","A computer-implemented database is a collection of data, organized in the form of tables. A table typically consists of columns that represent data of the same nature, and records that represent specific instances of data associated with the table. A relational database is a database that may be a set of tables containing information that is manipulated in accordance with the relational model associated with the data. For example, the product marketed under the trademarks IBM DB2 stores the data associated with the database in tables, and each table has a name. It will be appreciated that other vendors also provide relational databases.","On-Line Analytical Processing (OLAP) is a computing technique for summarizing, consolidating, viewing, analyzing, applying formulae to, and synthesizing data according to multiple dimensions. OLAP software enables users, such as analysts, managers, and executives, to gain insight into performance of an enterprise through rapid access to a wide variety of data dimensions that are organized to reflect the multidimensional nature of the enterprise performance data, typically be means of hypotheses about possible trends in the data. More particularly, OLAP may be used to analyze corporate data from different viewpoints by identifying interesting associations in the information in a relational database.","Data mining is a technique employing computer-based techniques to enable users to query structured data stored in computers in forms such as, multidimensional relational databases, conventional relational databases, or flat computer files. More particularly, data mining involves extracting computer-based information and enables a user to discover trends about the computer-based information. An increasingly popular data model for OLAP applications is the multidimensional database (MDDB). MDDBs are often used by a data analyst for interactive exploration of data, such as performance data, by techniques such as data mining.","Metadata is information that describes the characteristics of stored data. For instance, data in a relational database may be described by metadata such as the name of associated relational database tables and columns. More particularly, each relational database typically has a set of tables, such as system catalog tables, which are automatically maintained by the computer system and contain information about the tables and other objects that are stored in the relational database. Information about the relational database can be retrieved from the system catalog tables using structured query language (SQL) queries.","SQL is a standardized language for defining and manipulating data in a relational database and may be used during data mining. A query may be an expression whose result is a table, and may be embodied in software structures such as a query statement or a query object. A query searches the records stored in specified tables to find the answer to a question. A query is a request for information from the relational database based on specific conditions such as, which subset of the data should be retrieved and how the data is to be presented. For example, a request for a list of all departments in a DEPARTMENT table whose budget is greater than $10,000 is an example of a query. Further, the SQL query may require analysis of the metadata associated with a relational database.","A browser may be considered a text extender function that enables a user to display text on a computer monitor. Browsing is typically used to examine records in a file, such as a relational database. By means of example, a browser may operate on one computer, such as a client computer and initiate requests to a second computer, such as a server computer so that information from the second computer may be displayed via the first computer. When a user attempts to browse information during OLAP processing, the amount of information may be so large that it is difficult to determine useful information. For example, if a user attempts to browse a relational database and uses SQL queries it may be difficult to discover OLAP trends, such as OLAP cube models, that could be used to facilitate OLAP analysis.","The product marketed under the trademarks IBM DB2 Query Management Facility (QMF) is a multipurpose query program for reporting, data sharing, server resource protection, powerful application development, and native connectivity to DB2 platforms. QMF provides an interface to build queries and business reports by accessing DB2 information, such as information provided in a DB2 catalog. QMF may operate with a browser.","The creation of MDDBs typically requires a large volume of metadata objects that are used to generate OLAP cube multidimensional models when OLAP queries are initiated. A multidimensional model may be a set of rules or a formula for predicting the most-likely data-structure outcome based on existing data. An OLAP cube multidimensional model typically comprises a set of tables that represent facts and dimensions associated with a database, providing an optimized structured presentation of metadata associated with a relational database and thereby enabling efficient mining. In the past, creation of the OLAP multidimensional cube models via the creation of metadata objects required manual, user intervention. This required a user to be extremely knowledgeable of OLAP structures such as metadata. A QMF Query Object is an example of such a metadata object and is typically used to generate a software query, such as an SQL query. Further, user-created metadata objects may be incorrect, having errors such as non-conforming or malformed structures with respect to a particular relational database structure. In the past and to overcome the problems inherent in the use of possibly incorrect user-created metadata objects, the underlying relational database tables were examined during creation of an OLAP cube multidimensional model. This in turn, required that referential integrity constraints were defined for the underlying relational database tables. Referential integrity constraints may operate to ensure that one-to-many and many-to-many relationships, between multidimensional metadata and relational database structures, are enforced within the operation of a relational database schema. Executing such referential integrity constraints requires considerable computer resources.","To overcome such problems of the past, it would be advantageous to automatically discover metadata objects during query mining and query analysis. Further, it would be useful for such automatically discovered metadata objects to conform to the relational database structure.","An embodiment of the present invention relates to systems, methods, and computer program products that include an automated discovery process that discovers useful metadata objects from an intelligent starting point thereby generating at least one multidimensional model for OLAP analysis. Further, generation of the starting point may be derived by use of a multidimensional analysis program that analyzes the results of query mining and query analysis, including at least one query object in a relational database. Such an intelligent starting point used during the OLAP discovery process aids in generating, from at least one multidimensional metadata object, useful OLAP multidimensional models for multidimensional analysis. The preferred embodiment of the present invention determines whether metadata useful for OLAP analysis exists by evaluating patterns found in the queries. The present invention advantageously addresses the need for automated discovery of such useful metadata, used to generate multidimensional (or \u201ccube\u201d) models, when the relational database tables were not created with referential constraints. In addition to using the starting point derived from the results of query mining and query analysis, the preferred embodiment of the present invention may also limit search parameters to narrow the scope of searching for a starting point and thereby both increase the probability of producing an accurate cube multidimensional model and improve the efficiency of determining the starting point over previous techniques.","As shown in the drawings and for purposes of illustration, an embodiment of the invention relates to systems, methods, and computer program products that automatically discover metadata objects and generate multidimensional models during query mining and query analysis. Further, according to the preferred embodiment of the present invention, the automatically discovered metadata objects and generated multidimensional models advantageously conform to the relational database structure.","In the past, relational database users frequently executed relational database queries conforming to an OLAP structure by manually creating OLAP multidimensional models that could be used to facilitate OLAP analysis. For example, the product marketed under the trademarks IBM DB2 Query Management Facility (QMF) required users to manually create metadata objects for generation of multidimensional models. Other solutions that attempt to discover metadata objects and generate multidimensional models examine the actual tables in the related relational database, and do not examine the queries. Such other solutions require referential integrity constraints to be defined in the relational database tables. These solutions are not optimal for users with large relational databases that were not originally designed for optimal OLAP analysis.","More particularly, the preferred embodiment of the present invention advantageously solves the need for automated discovery of metadata and generation of multidimensional models when the associated relational database tables were not created with referential constraints. The preferred embodiment of the present invention novelly uses the results of query mining and query analysis, such as those available with QMF, to provide intelligent options for starting the process of discovering metadata objects, including at least one fact object, at least one dimension object, and at least one join object, that are used to define optimized OLAP cube multidimensional models.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104"]},"The Generate Multidimensional Model Code  operates in the client computer system  or the server computer system  to perform the present invention. For example, information may be communicated to either the server  or the client  via the user interface , such as an invocation to execute the Generate Multidimensional Model Code . According to the preferred embodiment of the present invention, the Generate Multidimensional Model Code  enables the relational database user to efficiently query and mine data in a relational database  by use of multidimensional models .","The user interface  may communicate with the preferred embodiment of the present invention, either via batch input  or user input . Further, the relational database  may be configured in the memory  of the client  or the server . Alternatively the relational database  may be configured in computer storage such as that of a disk . Element  is described with reference to .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2","b":["200","202","112","217","213","112"]},"Metadata objects are typically defined, in part, by use of information about a relational database  stored in a relational database catalog . Those skilled in the art will appreciate the operation of a relational database catalog . QMF  typically operates with a variety of objects, such as a query object , a form object, and a procedure object. QMF Query Objects  typically include SQL instructions. The preferred embodiment of the present invention advantageously uses multidimensional metadata objects  having at least one dimension object , at least one fact object , and at least one join object . Those skilled in the art will appreciate that a dimension object  typically includes actual data, such as names and addresses; and a fact object  typically includes aggregated data that is numerical. Multidimensional metadata objects  are typically associated with a particular multidimensional model  and reflect a particular view of the multidimensional metadata .","Those skilled in the art will appreciate that structured query language (SQL) is a standardized language for defining and manipulating data in a relational database . While SQL command lines are used herein by means of example it should not be viewed as limiting. Many other computer-accessible forms of program code may be used to implement embodiments of the present invention.","QMF Query Objects  also include a wide-variety of information in addition to the standard SQL query information, because they are stored in QMF Catalog Tables . For example, a QMF Query Object  typically contains the name of the owner of the query object , the type of the query object , and time stamp information about the last used and last modified times. This query information is novelly leveraged by the preferred embodiment of the present invention to generate Multidimensional Models . More particularly, at least one query object  is searched via the Generate Multidimensional Model Code , and patterns in the query information are identified that map to multidimensional metadata  and multidimensional metadata objects . Then the Generate Multidimensional Model Code  uses specific multidimensional metadata objects  to generate at least one Multidimensional Model  that conforms to the relational database querying and mining use pattern.","Information in the query object  is novelly used by an embodiment of the present invention to determine a starting point  and limit parameters  that narrow the scope of the searching and increase the probability of locating useful metadata objects  and thereby determining an accurate multidimensional model  that reflects the relational database querying and mining use patterns. Query mining may be facilitated by a feature of QMF , the Query Management Facility Miner (QMF Miner) . Query mining is based on at least one algorithm, which examines a set of query objects , searching for patterns, aggregations, and relationships that suggest a combination of certain groups of tables, columns, and joins to generate a multidimensional model . The Generate Multidimensional Model Code  typically includes a discovery filter  that makes recommendations on combinations of tables, columns, and joins of the relational database  that should be defined as dimensions, fact tables, or other constructs useful in discovering at least one metadata object  and thereby generating the multidimensional model .","The results of query mining may be presented to a user via a browser, such as the Query Management Facility Browser (Query Browser) , such as is discussed with reference to U.S. patent application, U.S. Publication 2003\/0212667, entitled \u201cSystems and Methods and Computer Program Products to Browse Database Query Information\u201d. Those skilled in the art will appreciate that a call from an SQL parser , typically implemented as a software code module, separates sections of an SQL statement into related information so that each section may be used to identify patterns, aggregations, and relationships of a relational database . The sections of an SQL statement are used by the QMF Miner  and by the Generate Multidimensional Model Code . It will be appreciated that, while the present embodiment of the invention describes a technique that advantageously works with features of QMF , other query management code may be used to practice the invention.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["120","112","110","120","214","204","314","316","204","314","215","204"]},"If the information is formatted to accommodate the constraints of a particular operating system, such as a mainframe operating system , the nickname-generating module  maps information for use by another operating system . For example, the mainframe operating system  may represent the product marketed under the trademarks IBM OS\/390. The nickname-generating module  may then use federated support  to map the information from the query objects  into a format that may be used by the another operating system , such as a personal-computer operating system. Then, the Generate Multidimensional Model Code  may use the metadata-generating module  to present information from the query objects  on a computer that operates with the another operating system .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 4A","FIG. 4B","FIG. 4C"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 4A","FIG. 4B","FIG. 2"],"b":["401","204","401","204","411","210","204","214","204","210","214"]},"Those skilled in the art will appreciate that a call from an SQL parser  separates sections of an SQL statement into related information that is novelly used by the preferred embodiment of the present invention. A query object  used in the preferred embodiment of the present invention is associated with a SELECT statement and returns results. Therefore and more particularly as shown in element , a query object  is analyzed by use of calls from the SQL parser . The following distinct information is analyzed: at least one column that is selected in at least one SELECT clause and any aggregate functions applied to each selected column, at least one table identified in the FROM clause, any join conditions or subset join conditions specified in the WHERE clause, any grouping conditions specified in the GROUP BY clause, and the order conditions specified in the ORDER BY clause such as ASC (ascending) or DESC (descending) order conditions. Element  is described with reference to .","Further, objects and other constructs may be created to reference and count instances of the various elements included in the query object . In the preferred embodiment of the present invention, the process of mapping SQL constructs to multidimensional metadata  will adhere to the techniques described in U.S. patent application Ser. No. 10\/325,245, entitled \u201cSystem and Method for Automatically Building an OLAP Model in a Relational Database\u201d. For example, data in a column maps to a WHERE statement or a measure, and data from a table maps to a dimension object  or a fact object . The preferred embodiment of the present invention will operate by use of a starting point  and certain thresholds or limit parameters . The limit parameters  define default values or user-specified values that are used to limit the operation of the Generate Multidimensional Model Code  thereby efficiently identifying at least one candidate for at least one OLAP multidimensional model . Element  is described with reference to , and elements , , , and  are described with reference to .","Also, the results of the operation of the discovery filter  may be generated from the results produced by the QMF Miner  operating with at least one QMF Catalog Table . More particularly, when QMF  is installed, at least one QMF Catalog Table  is generated. The QMF Miner  interacts with the QMF Catalog Table  to create query objects . According to the method of the preferred embodiment of the present invention, discovery filters  operate by use of heuristics associated with user-generated relational database querying and mining. Use of such heuristics limits the information accessed in a query object . Elements  and  are described with reference to .","Such heuristics may be based on user-specified attributes of a particular filter and whether the particular filter is applied to the information in a query object . For example, a user can choose to analyze only queries with the schema name \u201cQ\u201d and all nonconforming queries would be ignored. Therefore, a user can describe attributes of a particular filter. According to the preferred embodiment of the present invention, the description of filters can greatly affect the value of the queries that are produced. Therefore and as shown in element , the Generate Multidimensional Model Code  and the discovery filter  match patterns associated with the query objects .","As an alternative embodiment of the present invention, a visual reference related to a potential join may be provided to help the user chose a starting point  for use by the Generate Multidimensional Model Code . The join information may be obtained from a WHERE clause. This representation of a join condition may be determined during the operation of the QMF Miner  by comparing the table associated with each paired column during the operation of a WHERE clause.","Turning now to  that includes  and . FIG. SA illustrates the Filter Screen  and the user may elect to search in an unfiltered mode . As shown in  that illustrates the Creating a Filter Screen  and the user may elect to search in a filtered mode . By means of further example, the user may identify the parameters or limits  used by the discovery filter . For example the user may identify a constraint, \u201cDate Created\u201d is \u201cgreater than\u201d \u201cJan. 1, 2003\u201d, as shown in element .","Turning now to  and by means of further example, according to the preferred embodiment of the present invention upon completion of the execution of the Query Browser  and the QMF Miner , the user can chose a query object, as shown in element  in the Heuristics Filters Results Screen . Such a choice will enable the user execute the Generate Multidimensional Model Code  by initiating the \u201cRun Discover Wizard\u201d, as shown in element . The default starting point  selected will be the highest rated query object  in the result of the operation of the discovery filter . (The user can alternatively choose a query object  from the Query Browser Screen , as shown in .)","Returning to  and element , a starting point  is selected for generating the multidimensional model  from the analyzed Query Objects . Referring now to  the selecting a starting point  is illustrated in further detail. Due to the sheer number of multidimensional metadata objects  that may be uncovered, the method of the preferred embodiment of the present invention advantageously provides the user with the ability to chose a starting point  from which the Generate Multidimensional Model Code  may begin to search for useful metadata objects . More particularly, QMF  is designed to enable the selection of a starting point  based on user selection after execution of the Query Browser  and QMF Miner . The QMF Query Browser  enables queries, tables, and columns to be pivoted by allowing each to function as the root of a tree node in a pivot table. Those skilled in the art will appreciate the operation of a pivot table with respect to analyzing multidimensional metadata . Given that QMF Query Browser  identifies the tables that are referenced by a Query Object , this information may be used to provide a user-selected starting point  of either a table or a query object . Therefore, as shown in element , the starting point  may include at least one table associated with the relational database . Element  is described with reference to , and elements  and  are described with reference to .","Turning now to  and by means of further example, when starting to execute the Generate Multidimensional Model Code , the user can chose to switch to a table view, as shown in element . Alternatively, the user can chose a query object  and begin execution of the Discover Metadata Objects Code  directly from the Query Browser Screen  by initiating the \u201cRun Discover Wizard\u201d . When a table is the starting point , executing the Generate Multidimensional Model Code  will start from the table to discover metadata objects . When a query object  is the starting point , the Generate Multidimensional Model Code  begins with the tables referenced by the query object  to discover metadata objects . Any additional query objects  that reference these starting tables will be analyzed.","Returning to  and as shown in element  the starting point  includes at least one set of statements from at least one query object  and the query object  accesses at least one table from the relational database .","Returning to  and as shown in element , a maximum depth level from the starting query object  will be used to determine the extent of the operation of the Generate Multidimensional Model Code . More particularly, from either the table starting point  or the query object starting point , statistical information about potentially as many query objects  as are in the relational database  will be analyzed and recommendations will be formed as to the metadata objects  that should be created. During the discovery process, the potential exists for producing an indefinite, or a very large number of metadata objects , and creating too much data. In order to prevent this behavior and to limit the scope of the discovery of metadata objects , the user can also specify the maximum depth level (max_depth_level), which is defined by a join condition. For example and with respect to a table starting point , if the maximum depth level is ten, then the Generate Multidimensional Model Code  will continue for ten levels of depth (ten table joins across). When a depth of ten is reached, the Generate Multidimensional Model Code  will terminate the operation of looking for additional dimension objects or facts objects.","By means of further example, if a query object  is the starting point  and the maximum depth level is seven, the Generate Multidimensional Model Code  will continue for seven levels and across each table referenced in the starting query object . In this case, n*max_depth_level levels will be produced, with \u201cn\u201d denoting the number of tables referenced by the starting query object . Based upon test results, the optimal default maximum depth level will also be available for the user to select.","In a typical relational database  designed or utilized for OLAP, tables with a large number of measures are normally fact tables. Since the notion of a large number of measures could vary greatly by relational database , users will also have the ability to indicate as a limit parameter , the number of measures for a dimension table. Tables with measure columns above this limit will be considered fact tables. In the same manner, dimension tables will normally have less rows then fact tables in a typical OLAP environment. Since the notion of a large number of relational database rows could greatly vary by relational database , users will have the ability to specify a limit parameter  for number of rows for a dimension table. A table exceeding the row limit would be considered a fact table. Testing should provide optimal default values for these limit parameters .","Turning now to  and by means of further example, the Performing Analysis of QMF Queries Screen  includes: limiting the measures per table in a dimensional table ; limiting the number of rows in a dimensional table ; and selecting the maximum depth level limit parameter  from the starting object , as shown in element .","Returning to  and as shown in element , metadata associated with a multidimensional model  is generated that is initiated at the intelligent starting point . As shown in element , a test determines whether the multidimensional metadata , such as a multidimensional metadata object , is useful. If the starting point  references a query object  which does not lead to the discovery of meaningful OLAP multidimensional models  after the maximum depth level has been explored, then the Generate Multidimensional Model Code  will attempt a second pass using the second highest rated query object  and a new starting point , as shown by the return from element  to element . In this subsequent pass, any previously followed leads, such as tables that did not produce metadata in the previous pass, will be ignored. That is in the preferred embodiment of the present invention, the Generate Multidimensional Model Code  retains memory of the previous pass and does not need to analyze the same constructs twice. If no useful multidimensional metadata  is found after the present pass in one embodiment of the present invention, it can be stated with a high degree of certainty that no useful OLAP multidimensional model  exists based upon the data access patterns described by the user query patterns and user mining patterns as described in the query objects .","Alternatively and in the method of the preferred embodiment of the present invention, if the result of the test of element  is \u201cYES\u201d, then the metadata is presented to a user in a ordered list of OLAP multidimensional models  that are populated by the metadata in a user-chosen OLAP multidimensional model , as shown in element .","As shown in  the Selecting a Multidimensional Cube Model Screen  contains potential OLAP Multidimensional Models . When an OLAP Multidimensional Model  is selected, the additional metadata objects  will be listed in hierarchical form . More particularly, the Multidimensional Model  typically includes fact objects , such as DB2OLAP.FACT ; dimension objects , such as Dimensions ; and join objects , such as Joins .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 10","FIG. 1"],"b":["1000","1000","1000","1005","1010","1015","1020","1055","1050","122","1040","1035","1025","1000","1000","122","1045","104","102","1000","1045","102","104"]},"The RAM , the data storage device  and the ROM , are memory components  that store data and instructions for controlling the operation of the processor , which may be configured as a single processor or as a plurality of processors. The processor  executes a program , such as the Generate Multidimensional Model Code  to perform the methods of the present invention, as described herein. Element  is described with reference to .","While the program  is indicated as loaded into the RAM , it may be configured on a storage media  for subsequent loading into the data storage device , the ROM , or the RAM  via an appropriate storage media interface . Storage media  can be any conventional storage media such as a magnetic tape, an optical storage media, a compact disk, or a floppy disk. Alternatively, storage media  can be a random access memory , or other type of electronic storage, located on a remote storage system.","Generally, the computer programs and operating systems are all tangibly embodied in a computer usable device or medium, such as the memory , the data storage device , or the data transmission devices , thereby making an article of manufacture, such as a computer program product, according to the invention. As such, the terms \u201ccomputer program product\u201d as used herein are intended to encompass a computer program accessible from any computer usable device or medium.","Moreover, the computer programs  and operating systems are comprised of instructions which, when read and executed by the server computer system  and the client computer system , cause the server computer system  and the client computer system  to perform the steps necessary to implement and use the present invention. Under control of the operating system, the computer programs  may be loaded from the memory , the data storage device , or the data transmission devices  into the memories  of the server computer system  and the client computer system  for use during actual operations.","User interface  is an input device, such as a keyboard or speech recognition subsystem, for enabling a user to communicate information and command selections to the processor . The user can observe information generated by the system  via the display  or the printer . The user input device  is a device such as a mouse, track-ball, or joy stick that allows the user to manipulate a cursor on the display  for communicating additional information and command selections to the processor .","Those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope of the present invention. When operating in accordance with one embodiment of the present invention, the system efficiently automates the discovery process that allows the user to select an intelligent starting point  for OLAP analysis by discovering at least one metadata object . The processor  and the program  collectively operate as a module, such as the Generate Multidimensional Model Code . It will be appreciated that the present invention offers many advantages over prior art techniques. Elements  and  are described with reference to .","The present invention is typically implemented using one or more computer programs, each of which executes under the control of an operating system and causes the server computer system  and the client computer system  to perform the desired operations as described herein. Thus, using the present specification, the invention may be implemented as a machine, process, method, system, or article of manufacture by using standard programming and engineering techniques to produce software, firmware, hardware or any combination thereof. Thus the article of manufacture may comprise a computer program usable medium embodying one or more instructions executable by the computer.","It will be understood that various alternatives and modifications may be devised by those skilled in the art. However, these should not be viewed as limitations upon the practice of these teachings, as those skilled in the art, when guided by the foregoing teachings, may derive other suitable characteristics of a similar or different nature. The present invention is intended to embrace all such alternatives, modifications and variances that fall within the scope of the appended claims","IBM, DB2, OS\/390, and QMF are trademarks of International Business Machines Corporation in the United States, other countries, or both."],"heading":["CROSS-REFERENCE TO RELATED PATENT","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Trademarks"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIG. 4A","FIG. 4B","FIG. 4C"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 5","FIG. 5A","FIG. 5B"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 10"},"In the following detailed description and in the several figures of the drawings, like elements are identified with like reference numerals."]},"DETDESC":[{},{}]}
