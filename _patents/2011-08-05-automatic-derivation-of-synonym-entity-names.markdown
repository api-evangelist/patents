---
title: Automatic derivation of synonym entity names
abstract: A synonym module analyzes a set of names for entities, such as names of streets and cities within a geographic database, and adds synonym names to the entities based on the analysis. More specifically, based on adjacencies of words within the names, the synonym module formulates a set of synonym rules specifying permissible ways of spelling a single word as multiple words (or vice-versa). The synonym module applies the synonym rules to the names, and if one of the rules matches a name, the synonym module adds an associated synonym name based on the name and on the rule matching the name. User queries for named entities in the database may then take into account not only the original names of the entities, but also any added synonym names.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08688688&OS=08688688&RS=08688688
owner: Google Inc.
number: 08688688
owner_city: Mountain View
owner_country: US
publication_date: 20110805
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF ART","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["The application claims the benefit of Provisional Application No. 61\/508,025, filed on Jul. 14, 2011, which is incorporated herein by reference.","The present invention generally relates to the field of data processing, and more specifically, to methods of adding alternative spellings of entities in a database, such as geographic locations within a geographic information and mapping system.","Users of online systems frequently enter queries that include names of entities of interest. For example, users of geographic information and mapping systems enter queries for locations of interest. The queries may include names such as street names, city names, state names, and the like, which reference geographic entities stored within a geographic database of the system. In many instances, a particular portion of the query could plausibly be spelled both as a single word (\u201ccompounded form\u201d) and as multiple words (\u201cdecompounded form\u201d), where only one of these is correct for a given name. For these types of words users often use the incorrect form when spelling the query. For example, a particular street might actually have an original name \u201cGreen Wood Street\u201d within the geographic database but could very plausibly also be spelled \u201cGreenwood Street.\u201d However, a user entering a query with the spelling \u201cGreenwood Street\u201d would not be presented with the geographic entity for that particular street within the query results, since the compounded form of the name in the query (\u201cGreenwood Street\u201d) does not literally match the decompounded form of the name in the geographic database (\u201cGreen Wood Street\u201d). Thus, in these situations users would frequently fail to be provided with the information that they were seeking.","In one embodiment, a computer-implemented method comprises identifying a first geographic entity in a geographic database having an original name that includes a plurality of terms, and forming a name synonym rule by associating a sequence of adjacent terms in the original name of the first geographic entity with a single-word concatenation of the sequence of adjacent terms. The method further comprises validating the name synonym rule by matching the single-word concatenation with a word in a dictionary and using the single-word concatenation as a synonym for the original name of the first geographic entity.","In one embodiment, a computer-readable storage medium has executable computer program instructions embodied therein that when executed by a computer processor perform actions comprising identifying a first geographic entity in a geographic database having an original name that includes a plurality of terms, and forming a name synonym rule by associating a sequence of adjacent terms in the original name of the first geographic entity with a single-word concatenation of the sequence of adjacent terms. The actions additionally comprise validating the name synonym rule by matching the single-word concatenation with a word in a dictionary, and using the single-word concatenation as a synonym for the original name of the first geographic entity.","In one embodiment, a computer system comprises a computer processor and a computer-readable medium storing a computer program executable by the computer processor and performing actions comprising identifying a first geographic entity in a geographic database having an original name that includes a plurality of terms, and forming a name synonym rule by associating a sequence of adjacent terms in the original name of the first geographic entity with a single-word concatenation of the sequence of adjacent terms. The actions further comprise validating the name synonym rule by matching the single-word concatenation with a word in a dictionary, and using the single-word concatenation as a synonym for the original name of the first geographic entity.","The features and advantages described in the specification are not all inclusive and, in particular, many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter.","The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following description that other alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.","System Architecture",{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","150","140"]},"The client devices  are computing devices that execute client software, e.g., a web browser or built-in client application, to connect to the map server  of the map service  via a network  and to display map data. The client device  might be, for example, a personal computer, a personal digital assistant, a cellular, mobile, or smart phone, or a laptop computer.","The network  represents the communication pathways between the client devices  and the map service . In one embodiment, the network  uses standard Internet communications technologies and\/or protocols. Thus, the network  can include links using technologies such as Ethernet, IEEE 802.11, IEEE 806.16, WiMAX, 3GPP LTE, integrated services digital network (ISDN), asynchronous transfer mode (ATM), etc. Similarly, the networking protocols used on the network  can include the transmission control protocol\/Internet protocol (TCP\/IP), the hypertext transport protocol (HTTP), the simple mail transfer protocol (SMTP), the file transfer protocol (FTP), etc. The data exchanged over the network  can be represented using technologies and\/or formats including the hypertext markup language (HTML), the extensible markup language (XML), etc. In addition, all or some links can be encrypted using conventional encryption technologies such as the secure sockets layer (SSL), Secure HTTP (HTTPS) and\/or virtual private networks (VPNs). In another embodiment, the entities can use custom and\/or dedicated data communications technologies instead of, or in addition to, the ones described above.","The map service  includes a geographic database  that stores data for entities in the geographic domain, such as entities like countries, cities, streets, and the like. Entities are described in further detail below.","The map service  further includes a map server  that receives geographic queries from the clients  and in response provides appropriate data from the geographic database. A geographic query can be in the form of an entity name (e.g., \u201cEiffel Tower\u201d or \u201cLos Angeles\u201d), a complete or partial address (e.g., \u201c1600 Pennsylvania Avenue\u201d or \u201c1600 Pennsylvania Avenue, Washington D.C., United States\u201d), or a free text (e.g., \u201clake near Chicago\u201d), or other queries for which the relevant information is geographic in nature.","The map service  additionally includes a synonym module  that analyzes the entity data in the geographic database  and augments the original names of the entities within the database with additional synonym names in decompounded and\/or compounded forms that are different from the original entity names. This allows a user that is incorrectly searching for a synonym name of a given geographic entity to nonetheless find the entity corresponding to the original entity name. (For example, assume that a sample entity of type STREET were located in the city of London within the United Kingdom and had the original name \u201cGreen Wood Street\u201d and the derived synonym name \u201cGreenwood Street\u201d. The result set for a user query for \u201cGreenwood Street, London, UK\u201d would include the sample entity based on a match on the synonym name, but if synonym name matching were not employed, the sample entity would be excluded from the result set since the original name would not match the query.) Moreover, for any query that includes an entity name, whether an original entity name or a synonymous entity name, the query can be expanded to include the original and synonymous entity names. In another embodiment, the synonym module  is not part of the map service  itself, but instead is located remotely from the map service  and accesses data such as the geographic database  via the network , reading and updating the database. Alternatively, the synonym module  may expose an application programming interface (API) by which a service, such as the map service  or any other service can provide a query name, and receive the corresponding synonym names.","The geographic database  stores data on geographic entities A such as streets, cities, states, and countries, along with geographic features, such as bodies of water, parks, mountains, forests, deserts, and so forth.","Each entity A corresponds to a particular geographic region, such as that of a particular country, city, street, landmark, or the like; the geographic region may be specified (for example) by a geometric shape such as a polygon that describes the boundary of the region. Additionally, each entity A is associated with one or more original entity names. The original entity names represent authentic spellings of the entity, e.g., as recognized in official government records. The original names are known a priori rather than being derived from other data, and hence they can be associated with the entities at the time of initial creation of the entity data. The original entity name can be its official name such as \u201cNew York City\u201d, as well as shortened versions thereof, such as \u201cNew York\u201d as well as other informal names, such as \u201cBig Apple\u201d for New York, or \u201cTail of the Dragon\u201d for a very twisty 11 mile section of US 129 near Deals Gap, Tenn. The original entity names for one sample subset of the database  might include \u201cMountain View\u201d for a city entity, and \u201cCalifornia\u201d for a state entity, and the names may include one or more abbreviations (e.g., \u201cCA\u201d and \u201cCalif.\u201d, as well as \u201cCalifornia\u201d). The names may also include multiple variants, each of which can be in a different natural language (e.g., the French \u201cCalifornie\u201d and the German \u201cKaliformien\u201d, as well as the English \u201cCalifornia\u201d) and be associated with a language identifier to indicate the natural language that it represents, although this is not depicted in the sample subset. The names of one entity may be the same as the names of other entities, such as the abbreviation \u201cCA\u201d for both a state (e.g., \u201cCalifornia\u201d) and a country (e.g., Canada).","In addition to the original entity names, each entity A may optionally be associated with one or more synonym names. The synonym names represent alternative spellings of the entity that a user might enter when specifying a query, for example. For example, if a particular entity had an original name \u201cGreen Wood Street,\u201d the entity might also have a synonym name \u201cGreenwood Street,\u201d indicating that although \u201cGreen Wood Street\u201d is the original, actual (English) spelling of the name of that particular street, \u201cGreenwood Street\u201d is a very plausible compounded equivalent for which a user might very likely search. The synonym names are added to entities A by the synonym addition module , as described in more detail below with respect to .","Additionally, each geographic entity A may have a corresponding type, such as STATE, CITY, or the like. The types may be ordered and assigned ranks based on their levels of specificity or typical geographic scope, such as 5 for STREET (most specific, lowest typical geographic scope), 4 for CITY, 3 for STATE, 2 for COUNTRY, and 1 for CONTINENT.","For example, Table 1, below, represents a sample subset of the information in the geographic database , according to one embodiment. The information includes entity name and type information, a description of the particular region that the entity represents (e.g., a descriptor of a geometric shape bounding the region), and whether the name is an original name, as opposed to a synonym name. The sample subset in the below table indicates that there is a street located in London, United Kingdom with the original name \u201cGreen Wood Street\u201d (a decompounded spelling form) and the synonym name \u201cGreenwood Street\u201d (a compounded spelling form), and another, different street located in Oxford, United Kingdom with the original name \u201cGreenwood Street\u201d (a compounded spelling), and the synonym name \u201cGreen Wood Street\u201d (a decompounded spelling).",{"@attributes":{"id":"p-0024","num":"0023"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"ORIGINAL"]},{"entry":["NAME","TYPE","REGION","NAME?"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["North America","CONTINENT","<North America>","Y"]},{"entry":["Europe","CONTINENT","<Europe>","Y"]},{"entry":["United States","COUNTRY","<United States\u2192North","Y"]},{"entry":[{},{},"America>",{}]},{"entry":["United Kingdom","COUNTRY","<United","Y"]},{"entry":[{},{},"Kingdom\u2192Europe>",{}]},{"entry":["California","STATE","<California\u2192United","Y"]},{"entry":[{},{},"States\u2192North ",{}]},{"entry":[{},{},"America>",{}]},{"entry":["Mountain View","CITY","<Mountain View\u2192","Y"]},{"entry":[{},{},"California\u2192United",{}]},{"entry":[{},{},"States\u2192North ",{}]},{"entry":[{},{},"America>",{}]},{"entry":["London","CITY","<London\u2192United","Y"]},{"entry":[{},{},"Kingdom\u2192Europe>",{}]},{"entry":["Oxford","CITY","<Oxford\u2192United","Y"]},{"entry":[{},{},"Kingdom\u2192Europe>",{}]},{"entry":["Green Wood Street","STREET","<Green Wood","Y"]},{"entry":[{},{},"Street\u2192London\u2192UK>",{}]},{"entry":["Greenwood Street","STREET","<Green Wood","N"]},{"entry":[{},{},"Street\u2192London\u2192UK>",{}]},{"entry":["Greenwood Street","STREET","<Greenwood","Y"]},{"entry":[{},{},"Street\u2192Oxford\u2192UK>",{}]},{"entry":["Green Wood Street","STREET","<Green Wood ","N"]},{"entry":[{},{},"Street->Oxford->UK>"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"In practice, there would be a large number of entities A, such as thousands of cities and millions of entities such as streets and geographic features. The various types of information may be represented differently in practice, as would be known to one of ordinary skill in the art. For example, the entity type could be represented using an integer code, and a Boolean flag could be used to represent whether the name is original. Likewise, original and synonym names could be specified as separate fields within a single record for a given entity, rather than each original or synonym name having its own record.","The data in the geographic database  may be created from a variety of sources, such as feeds from various governmental or private geographic databases, or manual creation and\/or editing by employees of the organization responsible for the map service  or by users of the client devices .","The illustrated components of the map service  can be implemented as single or multiple components of software or hardware. In general, functions described in one embodiment as being performed by one component can also be performed by other components in other embodiments, or by a combination of components. Furthermore, functions described in one embodiment as being performed by components of the map service  can also be performed by one or more clients  in other embodiments if appropriate.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2","FIG. 1"],"b":["114","114","111","111","111"]},"The synonym module  includes a word identification module  for identifying all individual words  that are candidates for entity names, a rule formation module  for creating a set of name synonym rules , and a rule application module  that applies the created rules  to the various entities A to create and add synonym names for the entities in database , as well as a query execution module  that takes synonym names into account when executing a query.","The word identification module  identifies the set of all individual words that are candidate names in a dictionary of candidate names, and is one means for performing this function. Other means include commercial electronic dictionaries and words obtained from a corpus of documents such as a corpus of web documents. In one embodiment, the word identification module  more specifically identifies all words occurring at least once within the original names of all entities A, or some subset of entities A, listed in the geographic database . That is, the word identification module  iterates across all entities of interest, adding the individual words of each original name to form a set of unique words . (The phrase \u201cset of unique words\u201d means that each word in the set is unique\u2014not that each of the words occurs only once within the original names of the entities A.) Typically, individual words are those tokens in the original names of entities A that are separated by white spaces and punctuation, but other types of delimiters may be used as well, depending on the application domain. For example, in one embodiment in addition to being delimited by one or more spaces the words may also be delimited by other non-alphanumeric characters, such as hyphens. Thus, for example, for the name \u201cRunning-water Street\u201d, the word identification module \u2014as well as the other modules ,  that parse individual words out of name strings\u2014might identify three distinct words (\u201cRunning\u201d, \u201cwater\u201d, and \u201cStreet\u201d), or two distinct words (\u201cRunning-water\u201d and \u201cStreet\u201d), depending on the desired treatment of hyphens. In one embodiment, the rules used to parse words may vary based on the language and locale of the names.","In one embodiment, rather than examining all entities A when collecting the set of all individual words , the word identification module  only examines entities with given types previously determined to be useful for this purpose, such as streets or cities, but not states or countries.","The rule formation module  creates the set of name synonym rules  by examining the original names of entities A, and is one means for performing this function. In one embodiment, the rule formation module  first identifies candidate name synonym rules by forming sequences of N ordered adjacent words within the original names of each of the various entities A, for some integer N (e.g., 2). (In one embodiment, the operations are case-insensitive, and thus all names are preliminarily converted to lower-case, for example.) The sequences of adjacent words represent those that a user might potentially enter as a single, compounded word. The rule formation module  then creates a corresponding concatenated version for each sequence. Concatenation of a sequence of words comprises placing the characters of each word together in an ordered sequence, with no delimiting characters between the words. For example, for the entity \u201cGreen Wood Street\u201d listed in Table 1, the ordered two-word sequences {\u201cgreen\u201d, \u201cwood\u201d} and {\u201cwood\u201d, \u201cstreet\u201d} can be created. From the {\u201cgreen\u201d, \u201cwood\u201d} sequence, the concatenated version \u201cgreenwood\u201d can be formed, while from the {\u201cwood\u201d, \u201cstreet\u201d} sequence, the concatenated version \u201cwoodstreet\u201d can be formed.","The rule formation module  then creates a candidate compounding rule that associates the sequences with their corresponding single-word concatenations. A compounding rule can be represented in the form of {\u201cx\u201d, \u201cy\u201d\u2192\u201cxy\u201d}. The compounding rules can then be inverted to form corresponding decompounding rules in the form {\u201cxy\u201d\u2192\u201cx y\u201d}. For example, a decompounding rule for the preceding example would be {\u201cgreenwood\u201d\u2192\u201cgreen wood\u201d}, indicating that the single word \u201cgreenwood\u201d could alternatively be spelled as the two words \u201cgreen wood\u201d. In one embodiment, decompounding rules are formed only from candidate compounding rules that have been validated, as further explained below. The rule formation module  can form compounding rules, decompounding rules, or both, in different embodiments. Each rule has an original portion on the left-hand side, representing the original word or words, and a synonym portion on the right-hand side, representing the discovered synonym word or words that can be substituted for the original portion in an original name to form a synonym name.","To validate the candidate compounding rules (i.e., to obtain only the candidate rules that are likely to be valid substitutes for one another), the rule formation module  checks the single, concatenated word in each candidate compounding rule against the set of words in a dictionary, which may be the dictionary of words  identified by the word identification module . If the single word is found within the set of words , then the corresponding compounding rule is validated and retained in the set of rules . If it is not, the candidate compounding rule is discarded from the set of rules. For example, the candidate compounding rule \u201cgreen wood\u201d\u2192\u201cgreenwood\u201d is a valid compounding rule since the term \u201cgreenwood\u201d appears in the list of names in Table 1 (and would therefore appear in the derived word list  as explained above). By contrast, the candidate compounding rule \u201cwood street\u201d\u2192\u201cwoodstreet\u201d is not a valid compounding rule since the term \u201cwoodstreet\u201d does not appear in the list of names in Table 1.","Once a candidate compounding rule has been validated, a corresponding decompounding rule can be obtained by inverting it. For example, inversion of the validated compounding rule \u201cgreen wood\u2192greenwood,\u201d yields the decompounding rule \u201cgreenwood\u2192green wood.\u201d","In one embodiment, the check performed by the rule formation module  is not whether the single word is found at all within the set of words , but rather whether it is found at least some threshold number of times. In this embodiment, each word in the set of words  also has an associated count of the number of times that it occurred over all the original names.","The rule application module  applies the created rules  to the various entities A to add synonym names, and is one means for performing this function. Specifically, the rule application module  iterates over all, or some subset of, the entities A, determining whether the original name of an entity matches the (left-hand side) portion of the rule. If it does, in one embodiment the rule application module  uses the rule to add a synonym name for the entity A to the database . For example, for an entity with the original name \u201cGreenwood Street\u201d, rule application module  would use the decompounding rule {\u201cGreenwood\u201d\u2192\u201cGreen Wood\u201d}, to add the synonym \u201cGreen Wood Street\u201d for the name of the entity to database . Similarly, for an entity with the original name \u201cGreen Wood Street\u201d, rule application module  would use the compounding rule {\u201cGreen Wood\u201d\u2192\u201cGreenwood\u201d} to add the synonym \u201cGreenwood Street\u201d for the name of entity to database . The rule application module  may add the synonym in such a way that it can be distinguished from the original names, such as associating a flag to the synonym name, or storing it in a list of synonym names separate from the original names, for example.","In another embodiment, the rule application module  does not add synonyms to the names of entities A in the geographic database  itself, but rather adds them to an index for use with queries. For example, if an index generated from the geographic database  indicated that the query word \u201cGreenwood\u201d matches some set of entities A, then applying the rule {\u201cGreenwood\u201d\u2192\u201cGreen Wood\u201d} would modify the index to indicate that the query words \u201cGreen Wood\u201d also match that same set of entities, though perhaps with a lower match strength due to the fact that the match is only based on a synonym. For generality, the phrase \u201cassociating a synonym name with a geographic entity\u201d as used herein includes both direct addition of a synonym name to a name list of an entity A within the geographic database , and addition or modification of an entry in a query index to reflect the synonym name, as well as other similar techniques achieving the same effect.","The query execution module  identifies entities matching a given query by searching not only original entity names, but also synonym names, and is one means for performing this function. That is, in addition to searching the original names of the entities A for a match to query terms, the query execution module  also searches the synonym names added (either directly to the database , or to a query index) by the rule application module . In one embodiment, query matches to synonym names, as opposed to original names, are penalized to some degree relative to query matches to original names\u2014i.e., query matches to synonym names receive lower match scores\u2014to reflect the fact that they are not based on the true, original names.","In one embodiment, the various actions of the synonym module  are performed within names of a single natural language, rather than across all names regardless of the language. For example, the word identification module would separately identify the words  for English, for French, for Chinese, and the like. Likewise, the rule formation module  would form candidate rules for those same natural languages separately (e.g., English candidate rules based only on the English original names) and would validate the candidate rules using the words  for the corresponding language. Likewise, the rule application module  would apply rules  for a given natural language only to names in the same language.","In one embodiment, a separate list of words, instead of the words , is used to validate the rules  derived by the rule formation module . For example, the synonym module  could access a separate list of words derived from the web or obtained from a dictionary, and purge a rule from the candidate rules  if the compound word used in the rule is not found in the separate list of words. For example, a candidate rule {\u201cgreenwood\u201d\u2192\u201cgreen wood\u201d} in the rules  could be removed if a separate list of web-derived words or words obtained from a dictionary did not include the words \u201cgreenwood\u201d, \u201cgreen\u201d, and \u201cwood\u201d.","In one embodiment, the operations described above are implemented using parallel processing, e.g., via techniques such as map-reduce, which partitions the input (i.e., the different entities A) into smaller sets and distributes them to different computational units during a \u201cmap\u201d step, and reassembles them using a \u201creduce\u201d step.","An example of the operations of the components of  is now provided for an example set of entities comprising a country with an original name \u201cUnited Kingdom\u201d, two sub-entities for cities with original names \u201cLondon\u201d and \u201cOxford\u201d, and two street entities with original names \u201cGreen Wood Street\u201d and \u201cGreenwood Street\u201d, the former being located within London and the latter within Oxford. Although only one original name is listed for each entity in the example, in practice each could have any number of names.","The word identification module  iterates across each original name of each of the entities in the example, forming the set of unique name words  consisting of the words {\u201cunited\u201d, \u201ckingdom\u201d, \u201clondon\u201d, \u201coxford\u201d, \u201cgreen\u201d, \u201cwood\u201d, \u201cstreet\u201d, and \u201cgreenwood\u201d}.","The rule formation module  forms ordered pairs of adjacent words in the various original names. Thus, the name pairs from the above example set of entities are \u201cUnited Kingdom\u201d, \u201cGreen Wood\u201d, \u201cWood Street\u201d, and \u201cGreenwood Street\u201d. The rule formation module  forms candidate compounding rules by associating the ordered pairs with their compounded single-word versions. Thus, the candidate compounding rules would be:\n\n","The rule formation module  would then retain as the rules  only those candidate rules in which the single-word portion is found within the unique name words . Specifically, the rule formation module  would retain only the decompounding rule {\u201cgreenwood\u201d\u2192\u201cgreen wood\u201d} and the related compounding rule {\u201cgreen wood\u201d\u2192\u201cgreenwood, since the single word \u201cgreenwood\u201d is found within the set of unique name words , but the single words \u201cunitedkingdom\u201d, \u201cwoodstreet\u201d, and \u201cgreenwoodstreet\u201d are not.","The rule application module  would then apply the decompounding rule {\u201cgreenwood\u201d\u2192\u201cgreen wood\u201d} to any matching original names of the entities\u2014i.e., to any names having the word \u201cgreenwood\u201d\u2014to form synonyms for those original names. For example, since the entity with the original name \u201cGreenwood Street\u201d contains (case-insensitive) the word \u201cgreenwood\u201d, the rule application module  assigns to the entity the synonym name \u201cGreen Wood Street\u201d, which it obtained by substituting the pair of words \u201cGreen Wood\u201d for the single word \u201cGreenwood.\u201d Similarly, the rule application module  would apply the compounding rule {\u201cgreen wood\u201d\u2192\u201cgreenwood\u201d} to assign to the entity with the original name \u201cGreen Wood Street\u201d the synonym name \u201cGreenwood Street\u201d. This process is repeated until al the rules have been processed and all corresponding synonym names added to the appropriate entities A. The resulting synonym names are then available to be matched by queries.","As an example of the use of synonym names for matching queries, assume that the geographic database  includes an entity of type STREET located in London, United Kingdom and having the original name \u201cGreen Wood Street\u201d and the derived synonym name \u201cGreenwood Street,\u201d and that the geographic database does not include any entity located in London, United Kingdom having the original name \u201cGreenwood Street.\u201d In response to a query for a (non-existent) entity \u201cGreenwood Street, London, UK\u201d, for example, the query module  could identify the entity with original name \u201cGreen Wood Street\u201d and synonym name \u201cGreenwood Street.\u201d If the geographic database  additionally included an entity located in London, United Kingdom having the original name \u201cGreenwood Street\u201d, then in response to the query for \u201cGreenwood Street, London, UK\u201d, the query module  could identify both the entity with original name \u201cGreen Wood Street\u201d and synonym name \u201cGreenwood Street\u201d and the entity with the actual original name \u201cGreenwood Street.\u201d In this case, the former entity could be penalized to rank lower than the latter entity, due to the fact that the match is based on a synonym name, rather than an original name, and thus is presumably somewhat less likely to be what the user intended.",{"@attributes":{"id":"p-0049","num":"0056"},"figref":["FIG. 3","FIG. 1"],"b":["310","114","111","111","100","140"]},"In step , the synonym module  forms a set of possible name words based on original names of entities stored in the geographic database, as described above with respect to the word identification module .","In step , the synonym module  forms one or more candidate synonym rules that associate sequences of adjacent words in the original names of entities in the geographic database  with corresponding single-word concatenations of the sequences of adjacent words. In step , the synonym module retains those candidate synonym rules for which the single-word concatenations are found within the set of possible name words. These actions are described in more detail above with respect to the rule formation module .","In step , the synonym module  matches the names in the retained synonym rules against original names of the geographic entities. For example, a decompounding synonym rule matches an original name of an entity if the original name is a single compound word that can be decompounded according to the decompounding synonym rule. In step , the synonym module  determines synonym names based on the original name of the geographic entity and on the synonym rule. For example, for a decompounding synonym rule, the synonym module  substitutes, for the single compound word of the original name, the synonym name that consists of the sequence of adjacent words in the decompounding rule. In step , the synonym module  adds the synonym name to the entity having the matching original name, either directly by modifying the geographic database , or indirectly by modifying entry values in a query index based on the geographic database. These actions are described in more detail above with respect to the rule application module  of .","It is appreciated that although the embodiments have been described as relating to a geographic information and query system, specifically, the techniques illustrated above are equally applicable to other types of systems having a set of individual entities representing distinct concepts, each having a set of names. For example, the above-described techniques could likewise be employed as part of a video sharing service, where the entities are videos and the entity names are textual metadata such as video titles. Other domains of application would be readily appreciated by one of skill in the art.","The present invention has been described in particular detail with respect to one possible embodiment. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. First, the particular naming of the components and variables, capitalization of terms, the attributes, data structures, or any other programming or structural aspect is not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, formats, or protocols. Also, the particular division of functionality between the various system components described herein is merely for purposes of example, and not mandatory; functions performed by a single system component may instead be performed by multiple components, and functions performed by multiple components may instead performed by a single component.","Some portions of above description present the features of the present invention in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations, while described functionally or logically, are understood to be implemented by computer programs. Furthermore, it has also proven convenient at times, to refer to these arrangements of operations as modules or by functional names, without loss of generality.","Unless specifically stated otherwise as apparent from the above discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cdetermine\u201d refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.","Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, DVDs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of computer-readable storage medium suitable for storing electronic instructions, and each coupled to a computer system bus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.","The algorithms and operations presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will be apparent to those of skill in the art, along with equivalent variations. In addition, the present invention is not described with reference to any particular programming language. It is appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references to specific languages are provided for invention of enablement and best mode of the present invention.","The present invention is well suited to a wide variety of computer network systems over numerous topologies. Within this field, the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.","Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention, which is set forth in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
