---
title: Finding relevant documents
abstract: An embodiment includes a computer-implemented method. For one embodiment, the computer-implemented method includes displaying a plurality of first groups of words in a browser for display to a user, constructing a new combination of search terms using more than one user-selected word groups, wherein the user-selected word groups are selected by the user from the plurality of first groups of words displayed to the user; invoking a search service with the new combination of search terms, displaying results of the search service using the new combination of search terms in the browser, and storing the results in memory coupled to a processor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08606808&OS=08606808&RS=08606808
owner: Python4Fun, Inc.
number: 08606808
owner_city: San Mateo
owner_country: US
publication_date: 20120930
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This patent application is a continuation of U.S. patent application Ser. No. 12\/703,758, filed Feb. 10, 2010, having the title \u201cFinding Relevant Documents, which is herein incorporated by reference.","There are 1.3 billion people on the web and over 100 million active websites. The Internet's universe of information and people, both published and addressed to the user is growing every day. Published content includes web pages, news sources, RSS feeds, social networking profiles, blog postings, job sites, classified ads, and other user generated content like reviews. Email (both legitimate and spam), text messages, newspapers, subscriptions, etc. are addressed directly to the user. The growth of Internet users and competition among publishers is leading to a backlog or heap of hundreds or thousands of unread email, rss, and web content in user inboxes\/readers\u2014forcing users to settle somewhere between the extremes of either reading the all the items or starting fresh (as in \u201cemail bankruptcy\u201d).","Accordingly the inventors of the current patent application believe that use of a search engine (such as BING available from Microsoft Corporation or GOOGLE available from Google Inc) is not enough, because its use is like using a fishing line, useful for finding what you want right now. The current inventors have made an invention (described in the next paragraph) that can be used more like a fishing net, to help you capture content tailored to your interests, and for which it is either painful or inefficient to repeatedly use a conventional search engine. Google Inc. offers a service called Google Alerts which are email messages of the latest relevant Google results (web, news, etc.) based on the user's choice of a query or topic. Conventional uses of Google Alerts include monitoring a developing news story, keeping current on a competitor or industry, getting the latest on a celebrity or event, keeping tabs on your favorite sports teams. However, Google Alerts requires the user to enter one or more \u201csearch terms\u201d in order to initiate the service. Hence, relevance of documents identified by Google Alerts depends on the search term selected by the user. The current inventors believe that it is not easy for users to manually generate appropriate search terms, without using the invention as discussed below.","An embodiment includes a computer-implemented method. The computer-implemented method includes automatically extracting a plurality of groups of words from a set comprising a first document, wherein each group of the plurality of groups comprises a word. The computer-implemented method further includes automatically determining a plurality of first counts of a number of times said each of the groups of words in said plurality matches said set, automatically determining a plurality of second counts of the number of times said each group of words in said plurality matches a corpus of second documents, obtaining a weight of said each group of words based on the first counts and second counts, automatically ranking based on said weight, said at least one group of words relative to another group of words in said plurality of groups, and selecting a plurality of first groups of words from the plurality of groups, based on said weights. The computer-implemented method further includes displaying the plurality of first groups of words in a browser for display to a user, constructing a new combination of search terms using more than one user-selected word groups, wherein the user-selected word groups are selected by the user from the plurality of first groups of words displayed to the user; invoking a search service with the new combination of search terms, displaying results of the search service using the new combination of search terms in the browser, and storing the results in memory coupled to a processor.","One or more computers are programmed in accordance with the invention to implement a particular machine that receives as input one or more documents that contain text that is relevant to a user (\u201cinterest documents\u201d). As used herein the term \u201cdocument\u201d includes, but is not limited to any file stored in a computer-readable storage medium and from which text can be extracted and displayed to a user, such as a file produced by a word processor (e.g. an RTF file or an HTM file by Microsoft WORD), a file in a portable document format (PDF by e.g. Adobe ACROBAT), a file containing text in ASCII format (e.g. Microsoft NOTEPAD), a file produced by an audio editing program (e.g. a \u201cWAV\u201d file by Audacity), a file produced by an image editing program (e.g. a \u201cJPG file\u201d by Adobe PHOTOSHOP), a file produced by scanning a physical book, a file produced by typesetting a book, a magazine, or article by a publisher.","The computer(s) use the interest document(s) to automatically identify word groups that are then used in computerized filtering of documents in accordance with the invention. One illustrative embodiment of the just-described particular machine is illustrated by a server computer  () that communicates with a client computer , e.g. through the Internet. Although two computers  and  are used in several embodiments, certain other embodiments a single computer is used, while still other embodiments use more than two computers as will be apparent from this detailed description.","Unless otherwise described below, a user operates client computer  in the normal manner. For example, the user may use web browser  to conduct a search on the Internet, via a search engine  that returns identifiers  of documents that are responsive to the user's search terms. The user may then use computer  to retrieve one or more documents  from the Internet, e.g. obtain a copy of a document  from a website  in the normal manner. Additionally, the user may use computer  to access a web server  to subscribe to an RSS Feed to obtain document identifiers , and or read blogs thereon. The user may also use computer  to obtain email messages in the form of documents  from an email server . In a similar manner, the user may use computer  to obtain documents  that contain real-time social media, such as Tweets supplied by server  executing Twitter software. Also, the user may use computer  to obtain documents  that contain social networking profiles supplied by server  (e.g. at the website Facebook). Additionally, the user may use computer  to obtain from sever , one or more documents  containing professional networking profiles (e.g. on Linked-in).","Server computer  typically includes a web framework  that interacts with a web browser  in client computer , to supply thereto one or more web pages, e.g. in Hyper Text Markup Language (HTML) and\/or word groups. In some embodiments, several of the web pages supplied by web framework  contain one or more identifiers of documents that have been determined to be relevant to the user by software program instructions  (\u201crelevance engine\u201d) stored in a memory  of server computer  and executed by a processor  illustrated in . In some embodiments, relevance engine  provides a list of a predetermined number most relevant documents (e.g. 10 most relevant documents) to web framework . In certain variants of the just-described embodiments, relevance engine  groups similar documents and provides only one document identifier from the group although the single document identifier is provided in association with a hyperlink to remaining document identifiers in the group, and in this manner relevance engine  provides different but relevant document identifiers of the predetermined number (e.g. 10) in the list.","Depending on the embodiment, instead of or in addition to supplying identifiers of documents, relevance engine  supplies identifiers of one or more word groups to web framework , as illustrated in . In certain embodiments, web framework  in turn supplies to client computer , the one or more word groups identified by the relevance engine . In some embodiments, relevance engine  only supplies a ranked list of word groups to web framework  that in turn uses one or more highest word groups to query search service  to generate a list of document identifiers that are then supplied to web browser , In a few embodiments, a web browser plug-in directly retrieves web pages and interfaces with web framework  to obtain and display a a list of word groups for each web page currently being displayed by web browser . In one illustrative example, a web browser  displays the one or more word groups received from web framework  with or without a list of document identifiers. The word groups may be displayed by browser  with a control that is selectable by a user, e.g. as a hyperlink that when clicked causes the web browser  to display additional information selected based on the user-clicked word group. The additional information can be, for example, a list of document identifiers obtained by web browser  directly querying search service , e.g. using one or more word groups selected by the user.","In , although content in the text of documents , , ,  and  and documents identified by identifiers  is different relative to one another in terms of the subject matter, one or more such documents are also obtained by server computer  executing software  (\u201cdocument crawler\u201d), e.g. for use in determining relevance thereof by relevance engine . Specifically, document crawler  in server computer  of some embodiments fetches documents (or identifiers thereof) that are identified as being of interest to the user (\u201cinterest documents\u201d), or documents that have been identified as potentially being of interest but requiring filtering (\u201csubscription documents\u201d). Interest documents and\/or subscription documents may be identified manually by the user or automatically by a computer or some combination thereof depending on the embodiment.","In some embodiments (\u201cA\u201d), an interest document  (or a document identifier) is uploaded by a user via client computer , and subscription documents  are retrieved by document crawler  based on instructions thereto as described below. In other embodiments (\u201cB\u201d), a user submits as an interest document, a description of a job for which a person needs to be hired. In still other embodiments (\u201cC\u201d), a faculty member at a university submits as an interest document, a paper written by the faculty member.","Although in some embodiments, interest document  is explicitly identified by a user (e.g. in input box  as described in the next paragraph, in reference to ), in other embodiments the identity of interest document  is automatically identified by a computer without requiring any input from the user. Automatic identification of the interest document can be performed, for example, by user's computer  (e.g. programmed in web browser , or in a plugin therein), or server computer  (e.g. programmed in web framework  or in a widget therein), or document server  (e.g. programmed in any sequence of instructions identified by , , , , ,  and  in ).","In one embodiment (\u201cD\u201d), a web page that is currently displayed in web browser  is automatically identified by one of computers , ,  as an interest document for the user of web browser . In another illustrative embodiment (\u201cE\u201d), one or more documents identified by corresponding hyperlinks in the web page currently displayed in web browser  are automatically identified by one of computers , ,  as the interest document(s) for the user of web browser . In a still another embodiment (\u201cF\u201d), one or more documents identified as search results (e.g. by corresponding hyperlinks, titles and\/or snippets) in the web page currently displayed in web browser  are automatically identified by one of computers , ,  as the interest document(s) for the user of web browser . In yet another illustrative embodiment (\u201cG\u201d), a running transcription of an audio or video that is currently being played by computer  (e.g. in web browser ) is automatically identified by one of computers , ,  as an interest document for the user of web browser .","In one more illustrative embodiment (\u201cH\u201d), one or more books or documents described (e.g. by title and author) in the web page currently displayed in web browser  are automatically identified by computer  as the interest document(s) for the user of web browser . In another embodiment (\u201cI\u201d), a text transcript of an audio recording or audio stream or a video recording or a video stream is used as an interest document. Such a text transcript is generated in some embodiments (e.g. \u201cG\u201d and \u201cI\u201d described above) by text-to-speech recognition by a suitably programmed computer. Note that in the embodiments (\u201cA\u201d-\u201cI\u201d) described above, the interest documents may or may not be identified using a uniform resource locator (URL), depending on the implementation. For example although a URL is used in some implementations, in certain implementations a proprietary identifier is used to automatically identify the interest document.","The following TABLE 1 summarizes inputs in various embodiments.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["ILLUSTRATIVE",{},"SUBSCRIPTION","REFERENCE"]},{"entry":["USE CASES","INTEREST DOCUMENT(s)","CORPUS","CORPUS"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Embodiment \u201cA\u201d","User-supplied document","User-identified","World wide"]},{"entry":[{},"(e.g. 161, 162 in FIG. 1E","corpus of","web (e.g. 141"]},{"entry":[{},"and 127 in FIG. 1A)","documents (such","in FIG. 1A)"]},{"entry":[{},{},"as emails, RSS"]},{"entry":[{},{},"feeds, e.g. 165 in"]},{"entry":[{},{},"FIG. 1G to FIG."]},{"entry":[{},{},"1O)"]},{"entry":["Embodiment \u201cB\u201d","Job Description(e.g. 161,","Resumes (e.g.","Resumes (e.g."]},{"entry":["(head hunter)","162 in FIG. 1E and 127 in","117, 118 in FIG.","117, 118 in"]},{"entry":[{},"FIG. 1A)","1A)","FIG. 1A)"]},{"entry":["Embodiment \u201cC\u201d","Research paper (e.g. 161,","Journal articles in","World wide"]},{"entry":["(university","162 in FIG. 1E and 107, 108","archive ARXIV","web (e.g. 141"]},{"entry":["researcher)","in FIG. 1A)","(e.g. 128 in FIG.","in FIG. 1A)"]},{"entry":[{},{},"1A)"]},{"entry":["Embodiment \u201cD\u201d","Web page currently","World wide web","World wide"]},{"entry":["(web surfing)","displayed by web browser","(e.g. 140 in FIG.","web (e.g. 140"]},{"entry":[{},"(e.g. 103 in FIG. 8B, FIG.","8B)","in FIG. 8B)"]},{"entry":[{},"9E)"]},{"entry":["Embodiment \u201cE\u201d","Documents identified by","World wide web","World wide"]},{"entry":[{},"hyper links currently","(e.g. 140 in FIG.","web"]},{"entry":[{},"displayed in a webpage by","8B)","(e.g. 140 in"]},{"entry":[{},"web browser",{},"FIG. 8B)"]},{"entry":["Embodiment \u201cF\u201d","Documents identified as","World wide web","World wide"]},{"entry":[{},"search results currently","(e.g. 140 in FIG.","web"]},{"entry":[{},"displayed by web browser in","8B)","(e.g. 140 in"]},{"entry":[{},"response to a user's search",{},"FIG. 8B)"]},{"entry":[{},"(see FIG. 9H)"]},{"entry":["Embodiment \u201cG\u201d","Running transcription of","Set of","World wide"]},{"entry":[{},"audio\/video currently being","advertisements","web"]},{"entry":[{},"played in web browser","(e.g. see FIG. 9G","(e.g. 140 in"]},{"entry":[{},{},"and 840, 841 in","FIG. 8B)"]},{"entry":[{},{},"FIG. 8B)"]},{"entry":["Embodiment \u201cH\u201d","Book description currently","Books available","World wide"]},{"entry":["(On-line Retailer)","displayed by web browser","for sale (by an","web (e.g. 141"]},{"entry":[{},"(e.g. 103 in FIG. 8A, FIG.","on-line retailer","in FIG. 8A)"]},{"entry":[{},"9C, FIG. 9D)","such as"]},{"entry":[{},{},"Amazon, e.g. 108"]},{"entry":[{},{},"in FIG. 8A, FIG."]},{"entry":[{},{},"9C, FIG. 9D)"]},{"entry":["Embodiment \u201cI\u201d","Existing transcript of pre-","Transcripts of","World wide"]},{"entry":[{},"recorded audio\/video (e.g.","other","web"]},{"entry":[{},"103 in FIG. 8B)","audios\/videos","(e.g. 140 in"]},{"entry":[{},{},"available for","FIG. 8B)"]},{"entry":[{},{},"viewing"]},{"entry":["Embodiment \u201cK\u201d","Web page currently","Set of","Set of"]},{"entry":["(Advertisement","displayed by web browser","advertisements","advertisements"]},{"entry":["Server)","(e.g. 103 in FIG. 8B, see","(e.g. 840 in FIG.","(e.g. 840 in"]},{"entry":[{},"FIG. 9F)","8B, see FIG. 9G)","FIG. 8B, see"]},{"entry":[{},{},{},"FIG. 9G"]},{"entry":["Embodiment \u201cL\u201d","Web page currently","Set of","World wide"]},{"entry":["(Advertisement","displayed by web browser","advertisements","web"]},{"entry":["Server)","(e.g. 103 in FIG. 8B, see","(e.g. 840 in FIG.","(e.g. 140 in"]},{"entry":[{},"FIG. 9F)","8B, see FIG. 9G)","FIG. 8B)"]},{"entry":["Medical Research","User-supplied medical","Journal articles in","Journal articles"]},{"entry":["Server","article (see 161, 162 in FIG.","a subspeciality of","in all of"]},{"entry":[{},"1E)","Medicine","Medicine"]},{"entry":["Social Networking","User profile on social","User Profiles","User Profiles"]},{"entry":[{},"networking website","(e.g. 115, 116 in","(e.g. 115, 116"]},{"entry":[{},{},"FIG. 1A)","in FIG. 1A)"]},{"entry":["On-line Retailer","Book description currently","Books available","Books"]},{"entry":[{},"displayed by web browser","for sale (by an","available for"]},{"entry":[{},"(e.g. 103 in FIG. 8A, FIG.","on-line retailer","sale (by an on-"]},{"entry":[{},"9C, FIG. 9D)","such as","line retailer"]},{"entry":[{},{},"Amazon, e.g. 108","such as"]},{"entry":[{},{},"in FIG. 8A, FIG.","Amazon, e.g."]},{"entry":[{},{},"9C, FIG. 9D)","108 in FIG. 8A,"]},{"entry":[{},{},{},"FIG. 9C, FIG."]},{"entry":[{},{},{},"9D)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Search results used and\/or displayed in one or more of the embodiments described herein are obtained automatically by any of computers ,  and  using a search service  available on the Internet. Accordingly, for a given word group, the search results and the number of occurrences on the web for the given word group are obtained in one embodiment by using the search service Yahoo-BOSS API (which is an example of search service ) as described in reference to \u201cresultset_web\u201d, \u201ctotalhits\u201d and \u201cdeephits\u201d in Yahoo-BOSS API Guide available over the Internet at the link obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%developer=yahoo=com%search% boss%boss_guide%ch02s02=html. An example, of output received by computer  from the search service Yahoo-BOSS shown below, is retrieved from the Internet at the link obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string:",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"http:%%developer=yahoo=com%search %boss%boss_guide%Web_Search=html"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ysearchresponse responsecode=\u201c200\u201d>"]},{"entry":[{},"<nextpage><![CDATA[\/ysearch\/web\/v1\/foo?appid={yourBOSSappid}&format=xm"]},{"entry":[{},"l&start=10]]><\/nextpage>"]},{"entry":[{},"\u2003<resultset_web count=\u201c10\u201d start=\u201c0\u201d totalhits=\u201c29440998\u201d"]},{"entry":[{},"deephits=\u201c881000000\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<result>"]},{"entry":[{},"\u2003<abstract><![CDATA[World <b>soccer<\/b> coverage"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"from ESPN, including Premiership, Serie A, La Liga, and Major League"]},{"entry":[{},"<b>Soccer<\/b>. Get news headlines, live scores, stats, and"]},{"entry":[{},"tournament information.]]><\/abstract>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<date>2008\/06\/08<\/date>"]},{"entry":[{},"\u2003<dispurl><![CDATA[www.<b>soccernet.com<\/b>]]><\/dispurl>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<clickurl>http:\/\/us.lrd.yahoo.com\/_ylc=X3oDMTFkNXVldGJyBGFwcGlkA2Jvc3Nk"]},{"entry":[{},"ZW1vBHBvcwMwBHNlcnZpY2UDWVNIYXJjaARzcmNwdmlkAw--"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/SIG=10u3e8260\/**http%3A\/\/www.soccernet.com\/<\/clickurl>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<size>94650<\/size>"]},{"entry":[{},"\u2003<title>ESPN Soccernet<\/title>"]},{"entry":[{},"\u2003<url>http:\/\/www.soccernet.com\/<\/url>"]},{"entry":[{},"<\/result>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/resultset_web>"]},{"entry":[{},"<\/ysearchresponse>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"As illustrated in , in response to a list of URLs received in an act , document crawler  retrieves from the world wide web, each document identified in the list in an act . Depending on the embodiment, the list of one or more URLs may be generated by server computer  in different ways as noted above, e.g. executing web framework software  to generate and transmit to web browser , an HTML web page  () that prompts a user to input one or more document identifier(s)  (such as a URL) in an input box . In response to receipt of the user-supplied document identifier(s) , web framework  stores the document identifier(s) in a database  (stored in a storage device, such as a hard disk), and thereafter re-generates web page  as illustrated by file name  shown in , to notify the user that the URL of document  has been stored by server computer .","Depending on the operation being performed by server computer , the documents being fetched by document crawler  may be either interest documents for use by relevance engine  in automatically identifying word groups, or subscription documents  for use by relevance engine  in determining relevance thereof, based on word groups automatically identified from the interest document(s). An interest document  used by relevance engine  can be, for example, a research paper, or an article that the user wrote or any document that the user thinks is highly relevant. As noted above, an interest document  () can be supplied or identified to server computer  manually, for example by the user uploading one of documents  or typing a hyperlink to a document  published on a website  on the World Wide Web. Alternatively, server computer  may use document crawler  to automatically identify one or more interest documents, e.g. by initiating a search on the World Wide Web for documents  that have been published by the user, via a search engine  (e.g. by searching a URL of a blog, or a company, identified by the user). In other alternative embodiments, interest document(s) can be determined automatically as described above in an earlier paragraph, specifically in reference to the six (\u201cD\u201d-\u201cI\u201d) embodiments.","In one embodiment, subscription documents are identified in one or more streams that are preselected by a user, as illustrated in . Specifically, a user may enter into the input box  described above, a URL  of an RSS feed. In response, server computer  executes document crawler  to automatically retrieve the documents identified in the RSS feed, which form subscription documents  () that are to be filtered. Note that the web page shown in  displays multiple documents - that the user has identified to the server computer . In several embodiments, the multiple documents - are all interest documents which are in addition to interest document . In another embodiment, the subscription documents are identified (either manually by the user or automatically by one of computers ,  and ) to be a set of all documents available on the entire world wide web.","In yet another embodiment, the subscription documents are automatically identified to be any subset of the documents available on the world wide web. In a first example, documents available at a predetermined website, such as the Wall Street Journal are identified as the subscription documents. In a second example, documents available in a proprietary database, such as all books available for sale on Amazon are identified as the subscription documents. In a third example, documents available at a predetermined website, such as the ARXIV are identified as the subscription documents. In a fourth example, a set of documents containing advertisements are identified as the subscription documents in another embodiment (\u201cJ\u201d).","Depending on the embodiment, subscription documents are either identified via input box  of  or alternatively in another user interface of the type illustrated in . Specifically, in the web page illustrated in , the user supplies a user name or an email address in input box  and the password  (to be used to log into an email server). In response, server computer  executes web framework software  to request the user to identify a specific folder, such as folder  labeled in  as \u201cGoogle Alerts\u201d by clicking on hyperlink  () labeled as \u201cadd this.\u201d Hence, server computer  logs into the email server, using the user's email address and password, and then automatically uses email messages of the type shown in  identified in the email box feed as subscription documents that are to be filtered. Some embodiments use an interface of the type just-described (or even the same interface) to enable a user to identify to server computer  a folder of emails as a source of interest documents instead of or in addition to subscription documents.","Although individual screens are not further illustrated in the attached figures, as would be readily apparent from this current detailed description of the invention, subscription documents in several embodiments may include blogs or blog posts, incoming email or email folders, RSS feeds from websites or news sites, web search results bounded in a specified time (past hour, past day, past week, past month, past year, and all results), documents (links) or profiles appearing in social networks (Facebook, Linked-in) and real-time social media (Twitter). In another embodiment, the subscription corpus includes search results (or RSS feeds) queries using automatically selected word groups from a list of interest documents, independent of the user selection.","In addition to storing the user-supplied URL, web framework  invokes document crawler  with the user-supplied document identifier(s) . In response to receipt of a user-uploaded document, web framework  passes the received document to the document crawler  that in turn directly invokes document to text & hyperlink converter . As noted above, in response document crawler  uses the document identifier(s)  to retrieve the identified document(s). Thereafter, document crawler  supplies the retrieved documents to server computer  executing software  (\u201cdocument to text & hyperlink converter\u201d or \u201cdocument converter\u201d), described next.","Document to text & hyperlink converter  generates and stores in computer memory, text and hyperlinks from original documents , , ,  and  which may be originally in one of several document formats such as HTML, PDF, Microsoft WORD, PostScript, or plain text etc. In several embodiments, all documents are converted into an intermediate format, on which multiple tools of server computer  operate. In one illustrative embodiment, the intermediate format used by server computer  is HTML, and all documents not in HTML are first converted to HTML. For example, PDF documents are converted by server computer  to HTML using a tool called pdftohtml invoked with options \u2018-q\u2019, \u2018-i\u2019, \u2018-nodrm\u2019, \u2018-noframes\u2019, \u2018-stdout\u2019. The tool pdftohtml is available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%poppler=freedesktop=org%. For information on the just-described pdf2html tool, see the documentation \u201cpdftohtml version 0.10.7\u201d incorporated by reference herein in its entirety.","In another illustrative embodiment, the intermediate format is XML. Some embodiments avoid misleadingly high counts for word groups contained in page headers of a single document, by server computer  checking if the number of times an identical line (containing a specific word group) appears in a document is more than a predetermined number, such as 4 or 5 and if so discarding redundant lines (found to be identical) from the text generated as output by document to text & hyperlink converter .","Once a document is in the intermediate (e.g. HTML or XML) format, the text and hyperlinks are extracted in some embodiments by server computer  using an HTML and\/or XML parser to locate and extract text from elements of the document tree (Document Object Model). Some elements containing non-text are identified by server computer  based on the name of the surrounding HTML and XML tags, e.g. by use of another tool called BeautifulSoup available at the website address obtained from the following string in the above-described manner: http:%%www=crummy=com%software%BeautifulSoup%documentation=html. Documentation on the just-described tool from this website is incorporated by reference herein in its entirety.","Several HTML\/XML tags in a document are ignored by server computer  in some embodiments of the invention. In several embodiments, server computer  is programmed to review attributes of the tag <div> in an HTML document to check if any one of the following character strings (regardless of whether upper case or lower case) is present as a value of any <div> attribute, and if so the tagged section is ignored: hide, hidden, poll, comment, header, footer, extra, noscript, script, style, option, col4wide margin-left, reallywide clear-left, masterVideoCenter hidden, printSummary.","In addition to specific tag names, a text-to-tag ratio (TTR) is used in some embodiments of document to text & hyperlink converter  to extract from within a HTML document, the text of its body (discarding its advertisements and its headers), etc. Specifically, several of the just-described embodiments of server computer  remove script and remark tags as well as empty lines from the HTML document and then compute a ratio of a count of non-HTML-tag characters that are ASCII in a line of text, to a count of HTML-tags in that line, unless the count of HTML-tags is zero, and if so the TTR is simply set to the length of the line.","In several such embodiments, lines in the HTML document with a TTR that lies equal to or above two standard deviations is automatically determined by converter  to be content (e.g. HTML web page's body) and those lines whose TTR is less than two standard deviations are determined to be non-content (e.g. HTML web page's header and advertisements). For more detail on how converter  implements the calculation and use of TTR, see the following document that is incorporated by reference herein in its entirety: \u201cText Extraction from the Web via Text-to-Tag Ratio\u201d by Tim Weninger and William H. Hsu, published at pp. 23-28, 2008, in the 19th International Conference on Database and Expert Systems Application and available on the Internet at the website address obtained from the following string in the above-described manner: http:%%www=uni-weimar=de%medien%webis%research%workshopseries% tir-08%proceedings%18_paper652=pdf. The just-described paper is incorporated by reference herein in its entirety. In some embodiments, the text inside HTML\/XML tags used primarily for display formatting is retained and the tag itself is ignored in calculation of TTR. Examples of HTML\/XML tags whose text is retained, but tags are ignored are \u2018br\u2019, \u2018sub\u2019, \u2018sup\u2019, \u2018pre\u2019, \u2018plaintext\u2019, \u2018blockquote\u2019, \u2018q\u2019, \u2018cite\u2019, \u2018span\u2019. In such embodiments, other tags such as \u2018h1\u2019, \u201ch2\u2019, etc and \u2018p\u2019, \u2018hr\u2019, \u2018o:p\u2019 are replaced with a period \u2018.\u2019 to indicate the end of a sentence.","As noted above, server computer  is programmed to extract text and hyperlinks in each subscription document and each interest document by executing converter . Certain embodiments use search service  to access a subscription corpus (which equals the world wide web) and in these embodiments indexing may not be necessary. In other embodiments that do not use search service  to access a subscription corpus, the extracted text is thereafter stored in an index (\u201cinverted index\u201d) of words, by using software  (\u201ctext indexer\u201d), such as Sphinx available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=sphinxsearch=com. In certain embodiments interest document(s) and subscription document(s) are both indexed, with the indexed interest document(s) being used for snippet generation and the indexed subscription documents being used to find matches to word groups (identified from interest documents). In alternative embodiments, only the subscription documents are indexed for use in finding matches to word groups. In the alternative embodiments, the snippets are generated by matching the word groups against the text of the interest document stored in the database, using an SQL query to do the matching.","Note that the word \u201coccur\u201d is used herein whenever a word group is identically present in a document, whereas the word \u201cmatch\u201d is used more loosely herein, to mean presence of one or more words in a word group or a variant thereof based on stemming or even another word related thereto, e.g. depending on a mode as follows. In some embodiments, by server computer  using an inverted index with position information, one or more of the following modes of matching are supported: matching all words in the word group (default mode), matches any word in the word group, matching the word group identically, matching a word group as a boolean expression, proximity matching and matching a query as an expression in a query language Sphinx. Specifically, to implement matching of multi-word phrases, an index  is implemented (and stored) in server computer  of some embodiments, and configured to include position information, such as an offset of each word in a document from a beginning of that document.","Certain embodiments of server computer  implement only matching of a word group identically in the subscription document (\u201cphrase matching\u201d) to preserve the meaning of the word group and therefore improve relevance of the matching documents. Other embodiments of server computer  use proximity matching, wherein proximity distance is specified in words, adjusted for word count, and applied to all words within quotes. For instance, \u201clion dog tiger\u201d within a proximity distance of 5 means that there must be less than 8-word span which contains all 3 words. Still other embodiments of server computer  match stemmed versions of the word group and can be used with either phrase matching or proximity matching.","In one illustrative embodiment, text indexer  is configured to store each subscription document A with a field (\u201cin-link field\u201d) that contains a list of identifiers of subscription documents that hyperlink to that subscription document A (\u201cin-link identifiers\u201d) as shown in . Specifically, converter  of  identifies hyperlinks during conversion of a document and eventually supplies to indexer  the input data which include text and hyperlinks. As shown in , text  to be indexed is supplied by converter  to indexer , which in this illustrative example happens to be from an article entitled \u201cSPECIAL NUCLEAR MATERIAL DETECTION\u201d published by Nova Scientific Inc., available at the website address obtained from the following string in the above-described manner: http:%%www=novascientific=com%snm=html.","In addition to text , converter  also supplies to indexer  zero or more identifiers, such as identifiers  and  of two subscription documents that internally contain hyperlinks to the text . As noted above, these and other such hyperlinks are identified by converter  during document conversion (e.g. from PDF to HTML). In , identifiers  and  are integers that uniquely identify respective subscription documents, whose URLs are shown adjacent thereto for illustrative purposes. It is to be understood that in the illustrated embodiment shown in , URLs themselves are not being provided to indexer  because it is more efficient to use unique integers in index  constructed by indexer . Hence, server computer  stores the URLs and their corresponding unique integer identifiers in database . Alternative embodiments do use URLs as identifiers, instead of integer identifiers  and .","The just-described configuration of indexer , by using a document to be indexed as well as identifiers of incoming hyperlinks not only enables a match API  to match a word group to subscription document A, but also enables matching that word group to each subscription document B to which subscription document A points. Specifically, a relevance engine  in server computer  invokes match API  with the input illustrated in , which includes a field that holds a word group followed by pairs of fields, namely: (a) identifier of subscription corpus and (b) list of identifiers of subscription documents to be matched.","For example, in , the word group \u201clong dwell detection\u201d (in field ) is to be checked for match with subscription documents having integer identifiers ,  and  (in list field  of ) which are present in a subscription corpus identified by the address obtained from the following string in the above-described manner: http:%%online=wsj=com%xml%rss%37455=xml. Additionally, the word group \u201clong dwell detection\u201d (in field ) is also to be checked for match with subscription documents having integer identifiers , , ,  (in list field ) which are present in a subscription corpus identified by the folder INBOX in the email account \u201csri.devabhaktuni@gmail.com\u201d (in field ).","Also, the same word group \u201clong dwell detection\u201d (in field ) is to be further checked for match with subscription documents having integer identifiers , , ,  and  (in list field  of ) which are present in a subscription corpus identified by search results that are automatically generated by invoking a search engine to search the world wide web using the word group \u201cnuclear detection\u201d (in field  of ) which itself has been identified from an interest document. Note that the identifiers in list field  of  are typically of subscription documents  that result from searching the world wide web as shown in . Match API  returns a list of identifiers, such as identifiers  and  as illustrated in .","In one embodiment, the server computer  includes relevance engine , document crawler , document to text & hyperlink converter  that are implemented making use of both standard and supplemental libraries written in a programming language called Python which is available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=python=org, and described in the book \u201cLearning Python\u201d by Mark Lutz, published by O'Reilly Media (2009).","The list of supplemental libraries that are used in the just-described embodiment include a library to perform natural language processing functions such as sentence tokenization, word tokenization, part-of-speech classification, stop word filtering, stemming called NLTK which is available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=nltk=org and described in the book \u201cNatural Language Processing with Python\u2014Analyzing Text with the Natural Language Toolkit\u201d by Steven Bird, Ewan Klein, and Edward Loper published by O'Reilly Media, 2009. The list of supplemental libraries also includes a library to perform concurrent network downloads and access to email servers made use by the document crawler called Twisted which is available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=twistedmatrix=com and described in the book \u201cTwisted Network Programming Essentials\u201d by By Abe Fettig published by O'Rielly Media (2005).","In one illustrative embodiment, web framework  is implemented in server computer  by software called Pylons, which is available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=pylonshq=com, as well as described in \u201cThe Definitive Guide to Pylons by James Gardner, published by Apress (2008). The server computer  includes web server software  () called Apache which is available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=apache=org.","The web framework  used in server computer  of some embodiments consists of software libraries that operate in conjunction with the web server software  to enable user-interest display logic  () and feedback logic . The software libraries in such a web framework , include (1) user-controls such as check-boxes for phrases displayed inside the user's web-browser , and (2) automatic refresh of search results for a phrase in response to user clicks. Such software libraries are implemented in some embodiments based on asynchronous Javascript and XML (AJAX), HTML, and CSS. In addition to website management functions, such software libraries include user authentication and access control.","In the illustrative embodiment, database  is implemented in server computer  by relational database management software system called MySQL, which is available on the Internet, at the website address obtained as described above from the following string: http:%%www=mysql=com.","In addition to using standard SQL to access the relational database, in the illustrative embodiment, objects stored in the database  are accessed in software using Object Relational Mapper software called SQLAlchemy which is available on the Internet, at the website address obtained as described above from the following string: http:%%www=sqlalchemy=org. and a declarative layer on top of the SQLAlchemy called Elixir which is also available on the Internet, at the website address obtained as described above from the following string: http:%%elixir=ematia=de. Elixir and SQLAlchemy are used together to generate relational database schema and access methods to store, retrieve, and modify objects in the relational database.","Operation of relevance engine  of many embodiments is now described starting with receipt of an interest document  illustrated in . Relevance engine  automatically identifies one or more groups of one or more words (\u201cword groups\u201d) that match the interest document . Examples of word groups that are automatically identified by relevance engine  from the paragraph in document  illustrated in  include, word group  (\u201cnuclear detection systems\u201d), word group  (\u201cportals at borders\u201d), word group  (\u201chandheld detectors\u201d), word group  (\u201cnuclear terrorists\u201d), and word group  (\u201cpassive detection HEU\u201d). Note that although several additional word groups are illustrated in  with dotted boxes drawn around them, they are not individually labeled to improve clarity of the drawing. TABLE 2 identifies such word groups that are automatically identified by relevance engine  from an interest document which contains the paragraph illustrated in  are as follows.",{"@attributes":{"id":"p-0081","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"REFERENCE","INTEREST",{}]},{"entry":[{},"CORPUS","CORPUS"]},{"entry":["WORD GROUP","COUNT","COUNT","WEIGHT"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["budget for passive","25","1","0.04"]},{"entry":["portal at border","25","1","0.04"]},{"entry":["passive detection of heu","31","1","0.032258"]},{"entry":["uniform detection coverage","63","1","0.015873"]},{"entry":["plutonium show","100","1","0.01"]},{"entry":["detection technique need","100","1","0.01"]},{"entry":["x-ray interrogation","158","1","0.006329"]},{"entry":["detection of heu","158","1","0.006329"]},{"entry":["available detection technique","158","1","0.006329"]},{"entry":["interior nest","251","1","0.003984"]},{"entry":["light road vehicle","251","1","0.003984"]},{"entry":["border at border","316","1","0.003165"]},{"entry":["mode terrorist","398","1","0.002513"]},{"entry":["sharp attenuation","630","1","0.001587"]},{"entry":["vehicle from light","794","1","0.001259"]},{"entry":["garage door wide open","1000","1","0.001"]},{"entry":["nuclear detection system","1584","1","0.000631"]},{"entry":["uniform detection","1995","1","0.000501"]},{"entry":["active neutron","1995","1","0.000501"]},{"entry":["terrorist vehicle","3162","1","0.000316"]},{"entry":["border terrorist","5011","1","0.0002"]},{"entry":["number minutes","6309","1","0.000159"]},{"entry":["available detection","6309","1","0.000159"]},{"entry":["detection coverage","7943","1","0.000126"]},{"entry":["passive detection","12589","1","7.94E\u221205"]},{"entry":["border container","15848","1","6.31E\u221205"]},{"entry":["handheld detector","19952","1","5.01E\u221205"]},{"entry":["technique need","39810","1","2.51E\u221205"]},{"entry":["nuclear terrorist","39810","1","2.51E\u221205"]},{"entry":["nuclear detection","39810","1","2.51E\u221205"]},{"entry":["light road","50118","1","\u2003\u20092E\u221205"]},{"entry":["worldwide transportation","125892","1","7.94E\u221206"]},{"entry":["link budget","398107","1","2.51E\u221206"]},{"entry":["transportation mode","630957","1","1.58E\u221206"]},{"entry":["detection technique","630957","1","1.58E\u221206"]},{"entry":["door wide open","794328","1","1.26E\u221206"]},{"entry":["time detection","2511886","1","3.98E\u221207"]},{"entry":["type of vehicle","3162277","1","3.16E\u221207"]},{"entry":["national border","3162277","1","3.16E\u221207"]},{"entry":["road vehicle","5011872","1","\u2003\u20092E\u221207"]},{"entry":["sufficient number","5011872","1","\u2003\u20092E\u221207"]},{"entry":["heu","25118864","4","1.59E\u221207"]},{"entry":["air passenger","6309573","1","1.58E\u221207"]},{"entry":["gamma ray","7943282","1","1.26E\u221207"]},{"entry":["private jet","7943282","1","1.26E\u221207"]},{"entry":["detection system","7943282","1","1.26E\u221207"]},{"entry":["neutron","19952623","2","\u2003\u20091E\u221207"]},{"entry":["plutonium","10000000","1","\u2003\u20091E\u221207"]},{"entry":["attenuation","15848931","1","6.31E\u221208"]},{"entry":["garage door","19952623","1","5.01E\u221208"]},{"entry":["detector","79432823","3","3.78E\u221208"]},{"entry":["suffice","31622776","1","3.16E\u221208"]},{"entry":["terrorist","1.58E+08","4","2.52E\u221208"]},{"entry":["wide open","39810717","1","2.51E\u221208"]},{"entry":["tanker","39810717","1","2.51E\u221208"]},{"entry":["uranium","39810717","1","2.51E\u221208"]},{"entry":["interrogation","50118723","1","\u2003\u20092E\u221208"]},{"entry":["front door","50118723","1","\u2003\u20092E\u221208"]},{"entry":["deter","50118723","1","\u2003\u20092E\u221208"]},{"entry":["enrich","50118723","1","\u2003\u20092E\u221208"]},{"entry":["detection","2.51E+08","5","1.99E\u221208"]},{"entry":["detect","1.58E+08","2","1.26E\u221208"]},{"entry":["x-ray","79432823","1","1.26E\u221208"]},{"entry":["pu","\u2003\u20092E+08","2","\u2003\u20091E\u221208"]},{"entry":["gamma","\u2003\u20091E+08","1","\u2003\u20091E\u221208"]},{"entry":["livestock","\u2003\u20091E+08","1","\u2003\u20091E\u221208"]},{"entry":["passive","1.26E+08","1","7.94E\u221209"]},{"entry":["consist","1.26E+08","1","7.94E\u221209"]},{"entry":["nest","1.26E+08","1","7.94E\u221209"]},{"entry":["handheld","1.58E+08","1","6.31E\u221209"]},{"entry":["physically","1.58E+08","1","6.31E\u221209"]},{"entry":["shield","1.58E+08","1","6.31E\u221209"]},{"entry":["uniform","\u2003\u20092E+08","1","5.01E\u221209"]},{"entry":["exclusively","\u2003\u20092E+08","1","5.01E\u221209"]},{"entry":["passenger","\u2003\u20092E+08","1","5.01E\u221209"]},{"entry":["container","\u2003\u20092E+08","1","5.01E\u221209"]},{"entry":["sufficient","2.51E+08","1","3.98E\u221209"]},{"entry":["nationwide","3.16E+08","1","3.16E\u221209"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"As seen from the last several rows of TABLE-2 above, the word groups of many embodiments include groups of single words, such as \u201cnationwide\u201d, \u201csufficient\u201d, \u201ccontainer\u201d, \u201cpassenger\u201d, \u201cexclusively\u201d etc, as well as groups of multiple words. In several embodiments, the word groups of an interest document are identified by relevance engine  automatically classifying each word in the interest document into a part of speech in English grammar, such as noun, verb, adjective, adverb, pronoun, preposition, conjunction and interjection. Then one or more patterns of positions of parts of speech relative to one another are used by relevance engine  to automatically select multiple groups of words.","The current inventors believe that identification of word groups based on identification of a part of speech (POS) of each word in an interest document is a valuable aspect of many embodiments of relevance engine  for the following two reasons. Firstly, the current inventors have found that detection of word groups that relies on interest corpus statistics is unreliable, unpredictable, and produces irrelevant phrases and unrecognizable phrases. Secondly, the current inventors have further found that results of identifying a part of speech (POS) can be tested at the sentence level independent of the rest of the document or corpus, and better correlates with intuitive and natural understanding of the subject matter being discussed in the interest corpus.","In many embodiments, patterns that are used by relevance engine  include all word groups in which a noun is preceded by at least one of another noun, an adjective and a preposition. Such word groups (\u201cnoun phrases\u201d) improve the relevance of documents that are identified by relevance engine  because nouns describe subject matter and concepts, in contrast to subject-verb-object (SVO) phrases which describe actions and therefore produce irrelevant phrases and unrecognizable phrases. Hence this is a third reason for the current inventors' belief that identification of noun phrases based on user's interest document(s), and use of such identified noun phrases to select documents are valuable aspects of certain embodiments of relevance engine .","Note that neither identification of POS nor use of noun phrases is required in several alternate embodiments of relevance engine . Specifically, several alternative embodiments do identify word groups based on word count statistics within a document or set of documents to identify words appearing more often together than they would be expected to given random, independent occurrences of the words. Some such alternative embodiments of relevance engine  use a likelihood ratio and hypothesis testing (t-test, chi-square test) as described in pages 162-172 in Chapter 5 of the book entitled \u201cFoundations of Statistical Natural Language Processing\u201d by Christopher D. Manning and Hinrich Schutze, published by Massachussetts Institute of Technology, 1999 (sixth printing with corrections, 2003). Note that Chapter 5 of the just-described book is incorporated by reference herein in its entirety.","In many embodiments, relevance engine  automatically selects certain groups of words to be used in identifying subscription documents, based on how infrequently the word groups occur or match one or more corpus(es). For example in some embodiments, relevance engine  calculates a weight of each identified group of words that has been extracted from one or more interest document(s) as described above. Depending on the embodiment, the weight of a word group is a function of either one of or both of: an interest count of a number of times the group of words matches the interest documents and a reference count of the number of times the corresponding group of words matches a corpus of reference documents.","In a first example, an embodiment of relevance engine  ranks word groups , ,  and  () by sorting them in ascending order of the number of times each word group appears in a reference corpus such as the world wide web. In , the number of times each word appears in the reference corpus is identified by fields R, R, R, and R associated with the respective word groups , ,  and . The values of fields R, R, R, and R are 25, 27, 33 and 38, and accordingly word groups , ,  and  are illustrated in  in the sorted order, based on reference corpus counts","In a second example, another embodiment ranks word groups , ,  and  by sorting them in ascending order of an inverse of the number of times each word group appears in an interest corpus (including one or more interest documents identified by the user). In , the number of times each word appears in the interest corpus is identified by fields I, I, I, and I associated with the respective word groups , ,  and . The values of fields I, I, I, and I are 3, 2, 1 and 1, and accordingly word groups , ,  and  are again illustrated in  in the sorted order, based on interest corpus counts.","In a third example, yet another embodiment ranks word groups , ,  and  by sorting them in ascending order of a weight based on the ratio of the reference corpus count to the interest corpus count. The ratios for word groups , ,  and  are 25\/3, 27\/2, 33\/1, and 38\/1 and these word groups are again illustrated in  in the sorted order, based on the ratio.","One or more highest ranked word groups resulting from the above described ranking are used in accordance with the invention, either directly or indirectly depending on the embodiment, in computerized filtering or selection of documents that contain content of various types, such as results of searching the world wide web, social networking profiles (e.g. on Facebook), professional networking profiles (e.g. on Linked-in), blog postings, job sites, classified ads, and other user generated content like reviews. In some embodiments the documents being filtered or selected by server computer  occur in streams that change over time, such as news sources, RSS feeds, incoming email, and real-time social media (e.g. Twitter).","In certain embodiments (\u201cfirst embodiments\u201d), the automatically ranked word groups are supplied by server computer  via web browser  to the user who then manually submits them to a conventional service, such as Google Alerts. In other embodiments (\u201csecond embodiments\u201d), automatically ranked word groups are directly used automatically by server computer  that is further programmed in accordance with the invention, to eliminate the need for a user to manually generate and supply search terms for personalized filtering, as discussed next.","In some embodiments, relevance engine  automatically repeatedly uses the highest ranked group of words with match API  to identify from among a set of identifiers of subscription documents  (), a subset  that matches the identified group of words . In certain embodiments relevance engine  automatically uses the highest ranked word group to obtain search results (links to documents) by use of search service  and then the search results are supplied by web framework  in computer  to computer  for display of the document links in browser . In other embodiments, relevance engine  automatically uses the highest ranked word group to obtain a link to list of search results provided by search engine  and then the link to the list is supplied by web framework  in computer  to computer  for display of the list's link in browser . Relevance engine  then automatically ranks the identifier  of each subscription document in subset  relative to a complement  of the subset. Note that the complement  is formed in a group of subscription documents that have not been ranked so far. In the illustration shown in , initially none of the documents are ranked, and hence at this stage a group of not ranked subscription documents is the same as set . Note, however, that immediately after subset  is ranked, the group of not ranked subscription documents becomes complement .","In the illustration of , in the very first iteration of relevance engine , document identifier  is ranked, as identifying the most relevant document. As noted above, in the first iteration complement  excludes only the document identifier . In the next iteration, documents  and  are ranked by relevance engine , and at this stage a complement excludes not only documents  and  that are in a new subset identified by the group of words , but also excludes document identifier  in subset  of the first iteration because it has been already ranked. Relevance engine  of some embodiments is programmed to continue to iterate in this manner, until a predetermined condition is met, e.g. until a certain number of documents (e.g. 10 documents) are ranked. In some embodiments, even after the certain number of documents are identified, relevance engine  continues to iterate until identifying all documents on which a predetermined condition on weight is met, so as to compute the index count for each document found so far.","In some embodiments, relevance engine  automatically stores in the memory  of server computer , information about the ranked document identifiers to enable web framework  to generate the display illustrated in . Specifically, as illustrated in , a document  in the form of a webpage is created by web framework  (based on information stored to memory  by relevance engine ), to include a list of blocks, such as block  followed by block . Each block contains a document identifier, such as a URL and\/or a title and\/or a timestamp. For example, block  includes a title  of the document entitled \u201cThe Global Nuclear Detection Architecture: Issues for Congress . . . \u201d followed by a URL  identifying the document's location on the world wide web to be the address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=fas=org%sgp%crs%nuke%RL34564=pdf. Accordingly, relevance engine  stores in memory  a time stamp  showing that this document was obtained by server computer  on 2009-07-31 at 14:50:04.","Relevance engine  further stores in memory  a score  (e.g. of value \u221214.0833) showing that this document has the highest score. Relevance engine  also stores in memory , a group of words  (e.g. \u201cnuclear dhs's decision\u201d) that caused the document identifier  to be displayed, and corresponding thereto a flag  (shown as a check mark in a box control in ) identifying the user's input on whether or not the word group  is of interest to the user. Relevance engine  further stores in memory , one or more identifiers  and  (e.g. URLs) of interest documents, in which one of the displayed group of words also occurs, depending on the embodiment. In the web page illustrated in , the identifiers  and  are introduced using a common predetermined keyword  and  (e.g. the word \u201cmatches\u201d), so as to identify the relevance of subscription document identifier  to interest document identifiers  and .","Although only recordation by relevance engine  of one group of words  has been discussed above, relevance engine  actually records several such word groups in memory , e.g. in  a word group  is identified as also occurring in an interest document. In , this word group  (\u201cnuclear detection\u201d) also coincidentally occurs in the title of the subscription document identified by identifier  and its occurrence therein is brought to the user's attention by use of the bold attribute to highlight this word group in the title. Note that as described below, the web page  can be used by a user to uncheck a control  so that the corresponding word group  is no longer used by relevance engine .","In some embodiments of the invention, relevance engine  additionally stores in memory  one or more snippets of text in a subscription document that surround one or more word groups identified therewith. For example,  illustrates a display of the web page of  after the user clicks on word group  which causes snippet  to be displayed as shown in .","Some embodiments of a relevance engine  is implemented by five functional blocks , , ,  and  as illustrated in . As will be readily apparent to the skilled artisan in view of this detailed description, any one or more of functional blocks , , ,  and  may be combined with one another, and\/or divided up into additional pieces depending on the embodiment. Hence the following description is merely illustrative of one specific embodiment.","Several embodiments of relevance engine  include a word group extraction engine  () that receives text extracted from an interest document and generates word groups, of single words as well as multiple words. Specifically, in one embodiment, a sentence tokenization block  is used to break up the text into a list of sentences, as described in, for example, pages 134, 260 in Foundations of Natural Language Processing, by Christopher Manning and Hinrich Schutze, 1999. Pages 134 and 260 of the just-described book are incorporated by reference herein in their entirety. For additional detail, see an article entitled \u201cPunkt module for Sentence tokenization in NLTK\u201d available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%nltk=googlecode=com%svn%trunk%doc%api%nltk=tokenize=punkt-module=html. The just-described article is incorporated by reference herein in its entirety.","Thereafter, each word in each sentence is tokenized by word tokenization block  (), in the normal manner. Thereafter, single groups of words are passed to a stop word filtering block . Block  uses a predetermined list of stop words that are removed from the single groups of words received from block , e.g. the words \u201cthe\u201d, \u201ca\u201d, \u201csometimes\u201d, \u201cand\u201d, etc. are removed. The resulting groups of single words are thereafter supplied to stemming block . Stemming block  generates stemmed versions of word groups that it receives as described in, for example, pages 132, 194 and 534 in Foundations of Natural Language Processing, by Christopher Manning and Hinrich Schutze, 1999. Pages 132, 194 and 534 of the just-described book are incorporated by reference herein in their entirety. Note that stemming block  also receives groups of multiple words from block .","After word tokenization in block , the entire sentence is passed to block , wherein each word of the sentence is in turn tagged with its part if speech (noun, verb, adjective, etc), as described in, for example, pages 341-380 in Chapter 10 of the book entitled \u201cFoundations of Natural Language Processing\u201d by Christopher Manning and Hinrich Schutze, 1999. Pages 341-380 of the just-described book are incorporated by reference herein in their entirety. For additional detail see the article entitled \u201cTaggers in NLTK\u201d available on the Internet, at the website address obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%docs=huihoo=com%nltk%0=9=5%guides%tag=html. The just-described article is incorporated by reference herein in its entirety. In one embodiment, POS classification block  uses a Brill Tagger. In another embodiment, POS classification block  uses a Markov model Tagger.","Each sequence of words that matches a predetermined pattern  (such as adjective-noun or noun-noun or adjective-adjective-noun) is selected by multi-word group detection block  as a noun phrase, e.g. as described in pages 153-157 of the book entitled \u201cFoundations of Natural Language Processing\u201d by Christopher Manning and Hinrich Schutze, 1999, incorporated by reference herein in its entirety. There are several alternative embodiments for selecting phrases, based on word co-occurrence statistics and word proximity, e.g. as described in Chapter 5, of the book entitled \u201cFoundations of Natural Language Processing\u201d by Christopher Manning and Hinrich Schutze, 1999, which is incorporated by reference herein in its entirety. See also an article by Church and Hanks entitled \u201cWord Association Norms, Mutual Information, and Lexicography\u201d at the link obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=aclweb=org%anthology-new %J%J90% J90-1003=pdf that is also incorporated by reference herein in its entirety. Also see the article entitled \u201cUsing statistics in lexical analysis\u201d available on the Internet at the link obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c&\u201d with \u201c.\u201d in the following string: http:%%citeseerx&ist&psu&edu%viewdoc%summary?doi=10&1&1&136&6572 also incorporated by reference herein in its entirety.","In another embodiment, word groups are selected by block  based on matching to specific content headers such as fields in an email (from, to, subject, etc) or meta-data inside the document (such as HTML\/XML tags). In some embodiments, a word group relevance evaluator  in relevance engine  is implemented in two blocks  and , wherein block  is used to perform an operation on demand, e.g. in response to user upload of an interest document and block  is used to perform an operation periodically, e.g. every hour. Block  includes a block  that obtains a count (\u201creference corpus count\u2019) of each word group in a reference corpus, such as the world wide web.","In one illustrative embodiment, block  stores the reference corpus count of each looked up word group in database , for re-use in future. Hence block  first checks if the word group is found in the database first and thereafter issues a query to a count server  (in a search service  available on the Internet as noted above), and result is stored in the database. Depending on the implementation either the \u201ctotalhits\u201d or the \u201cdeephits\u201d returned by Yahoo-BOSS (used as search service ) may be used as the reference corpus counts. Some embodiments of relevance engine  directly use the reference corpus count as a weight while alternative embodiments additionally use an interest corpus count. In the alternative embodiments, block  additionally includes a block  that obtains a count of each word group in the interest corpus, by looking up index , and the looked up count is stored in the database .","In one such embodiment, in a block , periodic operation block  in relevance engine  computes as word group weight, a ratio where the denominator is equal to number of times the word group appears in the interest corpus and the numerator is equal to the number of times it appears in search results on the web or other reference corpus. Other embodiments use as weight an arbitrary function of the numerator and\/or denominator, i.e. any function of either the reference corpus count or the interest corpus count or both counts. In the just-described embodiment, periodic operation block  in relevance engine  also includes a block  that identifies word groups for use in selecting relevant documents, based at least partially on weight.","Accordingly, block  of several embodiments includes a block  that sorts all word groups identified from an interest document in ascending order of their weight, as computed in block . Also as noted above, in one embodiment the word group weight is the count of the number of times they appear in search results on the web or other reference corpus. All groups of words, in the sorted list are supplied to document relevance ranker block , for use in selection of relevant documents from a subscription corpus.","In one embodiment, to create a subscription corpus automatically, due to a large number of word groups from an interest corpus, relevance engine  does not use search results for all word groups generated from the interest corpus that result from block . Instead, in one embodiment, the word groups from one or more interest document(s) are automatically selected by first starting with the list of all word groups, eliminating those which have a reference corpus count less than some predetermined threshold (like 10^4), sorting the remaining word groups based on weight, and selecting the top N of the word groups remaining in the list (for example N=20). These top N word groups are then provided to block  for invoking a document crawler to perform N web searches using the N word groups, and the results of these searches (and optionally hyperlinked documents therefrom) are used to form a subscription corpus for use by document relevance ranker block .","Some embodiments automatically select the top N word groups by eliminating not only those word groups which have a reference corpus count less than a first predetermined threshold (like 10) as just described, but also additional word groups which have the reference corpus count greater than a second predetermined threshold (like 10), i.e. the top N word groups are selected for having their reference corpus counts within a predetermined range. Although some embodiments use a single range as just described, additional ranges may be used in other embodiments. For example one illustrative embodiment uses three ranges to select three lists of word groups as follows: a high list  () with reference corpus counts within range 1 to 10, a medium list  with reference corpus counts within range 1+10to 10and a low list  with reference corpus counts within range 1+10to 10and in this embodiment one or more word groups in each of the three lists - are stored in memory and transmitted by computer  to computer  for display to the user.","In some embodiments, in a list , word groups that satisfy a predetermined condition form a first set  () ranked higher than a second set  () of word groups that do not satisfy the predetermined condition. Within the just-described first set , the word groups are ranked relative to one another by weight. The just-described predetermined condition can be either interest corpus count greater than 1 or subscription corpus count greater than 0 or a combination thereof. In certain embodiments, a number is displayed adjacent to each word group in lists - (e.g. within parenthesis) denoting the number of subscription corpus documents that match that word group. For example, in an on-line retailer embodiment \u201cH\u201d described above, word groups that have a subscription corpus count of 0 are ranked lower than word groups whose subscription corpus count is greater than 0.","In some embodiments, one or more lists of word groups matching the interest document are supplied by word group relevance evaluator  (via branch ) to a database and stored therein. The word groups in the database are read by user interest display logic  that in turn supplies the word groups list(s) to web framework . In one such embodiment web framework  directly accesses a search service  on the Internet, to generate and store in computer memory, search results in the form of a list of documents, each item in the list identifying details of each document, such as a URL, a title and a snippet and then web framework  supplies this list to web browser  in client computer  for display to the user as shown in . In another such embodiment, the word groups list(s) is\/are supplied by web framework  to web browser  in client computer  that in turn accesses the search service  on the Internet, to generate search results in the form of a list of documents, for display to the user.","In the example illustrated above in reference to TABLE-2, the following seven word groups are used to form a subscription corpus: passive detection, border container, handheld detector, technique need, nuclear terrorist, nuclear detection, light road. Note that the first word group \u201cpassive detection\u201d is picked for having a reference corpus count of greater than 10,000. The remaining six word groups are picked sequentially thereafter based on weight. These seven word groups are thereafter used by a document crawler  to invoke seven searches by a search engine and the results are used as the subscription corpus in one embodiment. In another embodiment, the just-described results as well as documents hyperlinked therefrom together form the subscription corpus.","In some embodiments, a document relevance ranker block  initializes a document count to zero in act  and thereafter goes to act . In act , block  selects a group of words as the current group, from the top of sorted groups of words, excluding any word groups that have been eliminated by the user, e.g. by clicking on a check box control as described above. Next, in act , block  checks if a predetermined number (e.g. 10) of unique subscription documents have been found so far. If the answer is yes, then block  goes to act . In act , block  checks if the weight of the current word group (selected in act ) exceeds a limit on the largest value of the minimum matching word group weight among the subscription documents found so far. If the answer in act  is yes, block  goes to act  to sort the documents as illustrated in  or E. If the answer is no in either of acts  and , block  goes to act .","In some embodiments of act , block  invokes the match API block  using the current word group and document identifiers of all documents obtained from block . In other embodiments of act , block  invokes the match API block  using the current word group and document identifiers obtained from an RSS feed and\/or an email folder as described above. Next, in act , block  checks to see if a document has been found yet. If no document is found, block  returns to act  described above, to select another group of words as the current group from the sorted list (excluding user-eliminations). If the answer in act  is yes, then one or more documents have been found to be relevant, and block  goes to act  to perform document ranking.","Specifically, in act , block  decides whether to enter a ranking block  depending on whether any documents are currently unranked (i.e. their score is not fully computed, including a tie-breaker for identically ranked documents). If there are no unranked documents in act , then block  returns to act  described above. While there are any unranked documents in act , block  enters block  with an unranked document as the current document. In an act , block  checks if this is the first time that a document is found while traversing the list of word groups in acts -. In act , block  further checks if the document count is less than a predetermined number. If both conditions are met, then block  goes to act , else it goes to act .","In act , block  records the weight of the current word group as a minimum matching word group weight for this current document, and initializes the accumulated detection count for this document to 1 and increments a document count by 1. Next block  returns to act  (described above). In act , block  checks if the word group weight is less than a sum of this document's minimum matching word group weight and a predetermined limit. If the answer is yes, then block  goes to act  and increments by 1 the accumulated detection count for this document, and then goes to act  (described above). If the answer in act  is no, then block  simply returns to act .","In some embodiments, block  includes a document sorter which is invoked in act  as described above. As illustrated in , one version of a document sorter in accordance with the invention computes a score in act , for each document as the negative of the minimum matching word group weight plus inverse of the accumulated detection count. Next, in act , the documents are sorted in descending order of score, and thereafter identifiers of the sorted documents are supplied to a display logic  for preparation of a web page by web framework  for transmission to web browser . Another version of document sorter is illustrated in , wherein in act  all documents that have been found so far are sorted in ascending order of minimum matching word group weight. Next, in act , the document sorter finds all documents that are identically ranked, and these documents are then sorted among each other in descending order of accumulated detection count.","In several embodiments, a user interest display logic  in relevance engine  performs acts - illustrated in . Specifically, in act , logic  stores in memory , an identifier of a subscription document that has been determined to be relevant to a user. Next, in act , logic  stores in memory one or more word groups that matched the subscription document identified in act  and also match any interest document. Thereafter in act , logic  stores in memory a flag  () for use in constructing a control for a check box to be located adjacent to each word group, for use by the user to exclude a word group. Note that response to the user changing a check box is handled by the user interface feedback logic , described below in reference to . Next, in act , logic  stores in memory one or more identifiers of one or more interest documents that match one or more word groups that in turn were found to be matching the subscription document identified in act .","In some embodiments, display logic  receives identifiers of one or more word groups (via branch ) from word group relevance evaluator , and on receipt performs act  () in such embodiments. Specifically, display logic  of several embodiments stores in computer memory, the received word group identifiers, and eventually supplies the word group identifiers to web framework .","In several embodiments, a user interest feedback logic  in relevance engine  performs acts - illustrated in . Specifically, in act , logic  receives identification of one or more word groups eliminated by the user. Next, in act , logic  notifies document relevance ranker block  of the user-eliminated word group, and initiates operation of block . When initiated by logic , document relevance ranker  automatically uses the user input to identify a set of word groups different from the set of word groups used most recently (e.g. excludes a word group unchecked by the user), and thereafter selects documents once again and the newly selected documents are thereafter stored in memory, and used by logic  (described above) for transmission to web browser  via web framework .","As illustrated in , web framework  may receive an interest document that is uploaded by a user in act , or receive a URL of the interest document via user input in a web browser  in act  or receive a URL of the interest document automatically identified by a web site  (or any other document server ) in act . Although not shown in , in an alternative embodiment a plug-in within web browser  automatically determines an interest document based on information being displayed to the user and identifies the interest document to web server. Thereafter, web framework  goes to act  to invoke document crawler . When document crawler  is invoked with a document (e.g. uploaded by the user), document crawler  simply passes the document to converter . When document crawler  is invoked with a URL, then document crawler  retrieves the document from the World Wide Web and supplies the retrieved document to converter . Converter  in turn invokes the relevance engine  that in turn supplies word groups to web framework . Thus, in act , web framework  receives the word groups and goes to act . In act , web framework  retrieves the word groups and uses the word groups to invoke search service . Next, in act , web framework  supplies the results from the search service to web browser .","Note that although deselection of a check box has been described above as an illustrative example, the user is enabled by some embodiments to select a check box that has been previously deselected for exclusion of a word group thereby to initiate re-ranking including the previously excluded word group. While in some embodiments a web page displays a check box for excluding a word group, other embodiments display a control to enable the user to modify the weight of a word group, e.g. to promote or demote the word group relative to other word groups automatically identified as being of interest to the user. Several such embodiments display a list of all word groups automatically identified as being of interest to the user, and also display controls wherein the user can change the relative weights of the word groups.","Some embodiments in accordance with the invention convert the reference corpus count of each word group to decibel units, i.e. ten times logarithm of the reference corpus count to base 10, and then use this result in scoring and ranking each document relative to other documents to be displayed to the user.","Although in some embodiments the identifiers of relevant documents selected by document relevance ranker  () are sent via the user interest display logic  to a web framework , in other embodiments server computer  includes an Email server that is invoked by the user interest display logic  to send an email message to the user which includes identifiers of the relevant documents e.g. in a format similar or identical to Google Alerts. Similarly, word groups selected by evaluator  may be included in an email message composed by the Email sever in server computer . Depending on the embodiment, server computer  includes one or more of an Instant Messaging server and a Text Messaging Server that is\/are invoked by the user interest display logic  and\/or word group relevance evaluator  to send to the user identifiers of the relevant documents and\/or word groups e.g. in a format similar or identical to Tweets of Twitter and\/or Instant Messages of Microsoft Windows Messenger.","In some embodiments, each word group is stored in database  in association with a unique identifier in the form of an integer. In these embodiments, integer identifiers of all word groups matching an interest document, corresponding counts in the interest document, and corresponding reference corpus counts are also stored sequentially with an identifier of the interest document in database , instead of storing one record for each word group. Use of integer identifiers to identify word groups as just described improves speed of storage and retrieval of this information during operation of the relevance engine , compared to embodiments that directly use character strings of the word groups in such storage and retrieval.","The server computer  of  may include hardware of the type illustrated in  which is discussed next. Specifically, server computer  includes a bus  () or other communication mechanism for communicating information, and a processor  coupled with bus  for processing information. Server computer  uses a main memory , such as a random access memory (RAM) or other dynamic storage device, coupled to bus  for storing information and instructions (e.g. for blocks of logic - of ) to be executed by processor .","Main memory  also may be used for storing temporary variables or other intermediate information (e.g. index  shown in ) during execution of instructions to be executed by processor . Server computer  further includes a read only memory (ROM)  or other static storage device coupled to bus  for storing static information and instructions for processor , such as collaboration software . A storage device , such as a magnetic disk or optical disk, is provided and coupled to bus  for storing information (e.g. database  of ) and software instructions (e.g. for blocks of logic - of ).","Server computer  may be coupled via bus  to a display device or video monitor  such as a cathode ray tube (CRT) or a liquid crystal display (LCD), for displaying information to a user, e.g. identifiers of the automatically selected documents are displayed on display . An input device , including alphanumeric and other keys (e.g. of a keyboard), is coupled to bus  for communicating information and changes to objects  and  to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","As described elsewhere herein, automatically identification of word groups and automatic selection of documents is performed by server computer  in response to processor  executing one or more sequences of one or more instructions for a processor that are contained in main memory . Such instructions may be read into main memory  from another computer-readable storage medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the operations of a process described herein and illustrated in  and A-C. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable storage device\u201d as used herein refers to any storage device that participates in providing instructions to processor  for execution. Such a storage device may take many forms, including but not limited to (1) non-volatile computer memory, and (2) volatile memory. Common forms of non-volatile computer memory include, for example, a floppy disk, a flexible disk, hard disk, optical disk, magnetic disk, magnetic tape, or any other magnetic device, a CD-ROM, any other optical device, punch cards, paper tape, any other physical device with patterns of holes, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge that can be used as storage device . Volatile memory includes dynamic memory, such as main memory  which may be implemented in the form of a random access memory or RAM.","Instead of or in addition to a storage device, transmission link may be used to provide instructions to processor . A transmission link includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . A transmission link can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications, any of which can be used to implement a carrier wave as described herein.","Accordingly, instructions to processor  can be provided by a transmission link or by a storage device from which a computer can read information, such as data and\/or code. Specifically, various forms of transmission link and\/or storage device may be involved in providing one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be comprised in a storage device, such as a magnetic disk, of a remote computer. The remote computer can load the instructions into its dynamic memory (RAM) and send the instructions over a telephone line using a modem.","A modem local to server computer  can receive information about a user's interest document on the telephone line and use an infra-red transmitter to transmit the information in an infra-red signal. An infra-red detector can receive the information carried in the infra-red signal and appropriate circuitry can place the information on bus . Bus  carries the information to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Server computer  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . Local network  may interconnect multiple computers (as described above). For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the world wide packet data communication network  now commonly referred to as the \u201cInternet\u201d. Local network  and network  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from server computer , are exemplary forms of carrier waves transporting the information.","Server computer  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit information related to objects  and  retrieved from a distributed database system through Internet , ISP , local network  and communication interface . The instructions for performing the operations of  may be executed by processor  as they are received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, server computer  may obtain the just-described instructions and any related data in the form of a carrier wave.","Note that  is a very low-level representation of many hardware components of a computer system. Several embodiments have one or more additional software components in main memory  as shown in . Specifically, in such embodiments, server computer  of  implements a relevance engine  of the type illustrated in . Engine  may manage a database  stored on a storage device . Database  is accessed via a database management server (DBMS) which maintains overall consistency of data stored by database . In several embodiments, the DBMS is responsive to commands (also called queries) from relevance engine  in conformance with a relational database language, the most common of which is the Structured Query Language (SQL). The commands are used by relevance engine  of some embodiments to store, modify and retrieve data about documents in the form of rows in tables in database . The tables have one or more columns and zero or more rows as in a relational database that stores data in the form of tables related to one another.","Instead of requiring a user to supply search terms, some computer(s) of second embodiments are programmed in accordance with the invention to require a user to supply or identify one or more interest documents. Other computer(s) of second embodiments are programmed to automatically identify one or more interest documents as described above in reference to the embodiments of TABLE 1. The programmed computers of the second embodiments then use the interest documents to automatically identify one or more word groups, and then use the automatically identified word group(s) to automatically select documents from a corpus (\u201csubscription corpus\u201d). Identifiers of the automatically selected documents are included in a new document that is initially stored in a computer memory, and eventually transmitted to a client computer and displayed to the user, e.g. in an email reader, or in a web browser.","Depending on the embodiment, a subscription corpus may be either identified by the user to client computer(s)  or alternatively identified automatically by server computer(s) . In some of the just-described alternative embodiments, the server computer(s)  use the interest documents to further identify additional word groups which are in addition to the above-described automatically identified word groups. These additional word groups are thereafter used to filter another corpus (\u201csuper-subscription corpus\u201d) that is two or more orders of magnitude larger than the subscription corpus (e.g. illustrated in ). Depending on the embodiment, the super-subscription corpus may either be itself identified by the user, or preset to a default, such as the World Wide Web, or preset to the user's inbox for incoming email, or even preset to one or more news sources (e.g. Reuters, Bloomberg, CNN, and Financial Times).","Several embodiments in accordance with the invention also use a subscription corpus that is generated by use of one or more word groups that are automatically identified by use of interest documents (as described below) to conduct one or more searches on the world wide web, using a search engine . The results from a search engine, illustrated in  are thereafter treated as a subscription corpus or a portion thereof from which one or more subscription documents are automatically selected by use of relatively infrequently occurring word groups in a reference corpus that are identified for occurring frequently in interest documents, as described herein. Several embodiments (\u201cthird embodiments\u201d) automatically include in the above-described new document, at least one group of words that were used in selecting the documents that have been identified in the new document. Inclusion of one or more word group(s) in the new document enables their display to the user, to enable the user to understand why the selected documents were included in the new document, namely that the selected documents matched the one or more word group(s).","Additionally, certain third embodiments further include in the new document, at least one control to receive user input on one or more group of words included therein. The control can be, for example, a hyperlink that is activated by the user clicking on a displayed word group, or a check-box that is displayed adjacent to the displayed word group. Depending on the embodiment, the programmed computer(s) are programmed to respond to user input via such a control in one of several ways. For example, in some embodiments, the programmed computer(s) use the user's input via such a control to exclude one or more word group(s) from use in filtering documents in future, for this user. Hence, several such third embodiments respond to the user's input via such control(s) by performing another iteration that excludes the user-identified word group(s) during filtering, and then return new results to the user. As another example, in several embodiments, the programmed computer(s) use the user's input via such a control to display text in the selected document surrounding the word group, e.g. display words that precede the word group, followed by the word group itself, followed by words that occur subsequent to the word group, i.e. in the same sequence as in the document.","Although some embodiments of the type described above in reference to act  in  compute a weight for a group of words based primarily on the word group's two counts (reference corpus count and interest corpus counts), certain embodiments use multiple pairs of counts of multiple word groups, in computing each word group's weight, e.g. as illustrated by act  in operation  of . Unless described otherwise, all acts in  are implemented as described above in reference to . In computing the weight of even a single word group, operation  retrieves and uses pairs of counts of multiple word groups. Accordingly, as shown by act  in , some illustrative embodiments assign weights in a relative manner as follows: each word group is weighted based on how infrequently the word group matches a reference corpus and how frequently the word group matches one or more interest document(s), relative to other word groups.","Although operation  is periodic in some embodiments, in other embodiments operation  can be performed aperiodically, e.g. in response to a predetermined event. Accordingly, operation  is shown in  as either periodic or event-triggered aperiodic, depending on the embodiment. Furthermore, in some embodiments of the type illustrated in , act  is included in an operation  that is triggered by the user upload of interest document, and which includes acts  and  (described above in reference to ).","A computer is programmed in some embodiments of the invention to perform acts - illustrated in  as follows. In act , the programmed computer automatically extracts word groups from an interest document. Subsequent to receipt of such an interest document, the programmed computer determines two counts in acts  and  respectively as follows: a first count of the number of times each word group (extracted in act ) matches the interest document, and a second count of the number of times each word group matches documents in a reference corpus. Note that instead of a reference corpus as just described, alternative embodiments may use a subscription corpus to determine the second count. Embodiments that support use of multiple interest documents may include in the first count, the number of matches of each word group to the multiple interest documents.","After a pair of counts is determined for each of several word groups, the programmed computer uses at least one processor to compute a weight of each word group in act . Specifically, in act  of , the computer uses multiple pairs of counts to compute the weight of each word group, as noted above in reference to act  in . Thereafter, in act  the weights that were computed in act  are stored in a computer memory that is coupled to the at least one processor. Then in act , by using the weights, the computer sorts a number of word groups (e.g. all word groups) from the interest document, in a manner similar to act  (described above in reference to ). Subsequently, in act , a sorted list that is generated by sorting is stored in computer memory, e.g. for future use in invoking a document crawler as per act . In embodiment \u201cB\u201d described above, one or more word groups from the top of the sorted list are used to invoke a document crawler that indexes resumes. In embodiment \u201cC\u201d described above, one or more word groups from the top of the sorted list are used to invoke a document crawler that indexes journals and conference proceedings. In embodiment \u201cD\u201d described above, one or more word groups from the top of the sorted list are used to invoke a document crawler that indexes the world wide web.","In some embodiments, act  of  is implemented to compute the weight of each group of words as illustrated in . Specifically, in act , the computer fits a function, to relate the second count (over the reference corpus) to the first count (over the interest document(s)), of each of several ordered pairs, of corresponding word groups. Depending on the embodiment, the function may be fit directly to the first and second counts themselves, or indirectly to a transformation of or scaling of the first and second constants. Specifically, in one illustrative embodiment of act , a function is fitted by such a programmed computer to the logarithmic values of the first and second counts.","After a function is fitted, in an act  the computer compares the first count for a given word group to the fitted function in order to obtain a weight of the given group of words. The comparison in act  can be performed by a suitably programmed computer in different ways, depending on the embodiment. In some embodiments, the fitted function is evaluated at the second count of the given word group as per act  in  and the result of evaluation is compared to the first count, e.g. by subtraction (as per act ) or by division (as per act ). The result of such comparison (e.g. the result of subtraction or division) is directly used as the given word group's weight in several such embodiments. In certain embodiments, word groups that are ranked by the just-described weight are more relevant than word groups ranked by a ratio of the interest count to the reference count as described above in reference to Table 2. In other embodiments, the fitted function is evaluated not at the second count as per act . For example, in act , the fitted function may be evaluated a minimum distance of the pair of first count and second count of the given word group from the function.","The above-described function fitting in an act  can be performed in different ways depending on the embodiment. For example, in some embodiments, a function is fitted by identifying it from a predetermined family of functions as per act , while in other embodiments the function is identified based on a formula as per act . Two examples of the formula that are used in some embodiments are a simple moving average and an exponential moving average. Act  can also be implemented differently depending on the embodiment, e.g. by identifying a function from among a family of parametric functions, such as linear functions, quadratic functions, exponential functions, or alternatively from among non-parametric functions such as an infinite series, such as the fourier series. In a first example, one illustrative embodiment uses a family of linear functions in the form of y=bx+c, wherein y denotes the first count, x denotes the second count, and wherein b and c are constants that identify a single function (fitted to the pairs of word group counts) on performance of act . In a second example, another illustrative embodiment uses a family of quadratic functions in the form of y=ax\u2212bx+c, wherein y denotes the first count, x denotes the second count, and wherein a, b and c are constants that identify a single function (fitted to the pairs) on performance of act .","In several embodiments, act  is performed by the computer performing a regression analysis in an act , to select from among a family of functions, a function that minimizes a sum of deviations between first counts and corresponding values of the function (evaluated at the second count). In one illustrative example, the computer  is programmed to determine at least one constant that uniquely identifies a single function from the family, by performing a quantile regression as illustrated by act , while in another such example the computer performs a linear regression as per act . For additional implementation detail of such examples, see the description of  below. In certain embodiments, act  is performed by the computer  performing an interval based analysis in an act . The interval based analysis can be performed by computer  in different ways depending on the embodiment, e.g. using a threshold based fit as per act  or using an average based fit as per act .","In some embodiments of act , the computer is programmed to divide a range of the second count across all ordered pairs into intervals, and generate an average within each interval, and then connect up the average of each interval at the midpoint of each interval to generate a piece-wise linear function. In other embodiments of act , the computer is programmed to also divide a range of the second count across all ordered pairs into intervals, and generate a threshold within each interval. The threshold may be based on a predetermined statistical criterion, such as the highest N word groups within each interval (e.g. N=10), ranked by the first count. Then the threshold of each interval is connected up at the mid-point of each interval by the programmed computer, to generate a piece-wise linear function.","In some embodiments of act  (, B), computer  is programmed with statistical package R to read from a database , a list of word groups (e.g. via a comma-separated or tab-separated file), and corresponding ordered pairs of interest counts and reference counts as illustrated by act  in . As noted above, the first count (interest count) and the second count (reference count) for each pair were previously stored in database  by computer  in respective acts  and  (). After retrieval of the ordered pairs, computer  calculates the logarithm of the first count and the second count in each ordered pair as per act . Thereafter, the computer  invokes an appropriate module to relate the first count (interest count) to the second count (reference count) via a function, such as the module \u201crq\u201d to perform quantile regression in act  or the module \u201cIm\u201d to perform linear regression in act . The module \u201crq\u201d is invoked in two alternative embodiments, by respectively specifying a linear function or a quadratic function. During such invocation, the programmed computer  also provides a predetermined value for the quantile parameter \u201ctau.\u201d  illustrates a linear function  (e.g. a straight line) and a quadratic function  that were generated by invoking module \u201crq\u201d while specifying the value 0.95 for tau, and using data of the type illustrated in Table 2 above.","In some embodiments, module \u201crq\u201d is invoked from the \u201cquantreg\u201d package, which is available for use in the statistical language R. Documentation for the quantreg package for R is available at the CRAN website address obtained by replacing \u201c%\u201d with \u201c.\u201d in the following string: \u201ccran%r-project%org\u201d. In some embodiments, module \u201cIm\u201d is invoked in server computer  as a built-in function of the statistical language R, e.g. as described in the book entitled \u201cAn Introduction to R, Notes on R: A Programming Environment for Data Analysis and Graphics\u201d, Version 2.10.1, (2009-12-14) by W. N. Venables, D. M. Smith and the R Development Core Team, incorporated by reference herein in its entirety.","In certain embodiments, quantile regression is performed by server computer  as described in an article by Hunter DR, and Lange K, entitled \u201cQuantile regression via an MM algorithm\u201d published in J Comput Graphical Stat 2000; (9): 60-77 which is incorporated by reference herein in its entirety, and available at the URL obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%www=stat=psu=edu% \u02dcdhunter%papers%qr=pdf.","Moreover, several embodiments of server computer  use the \u201cquantreg\u201d package (including an \u201crq\u201d module\u201d) as described in the article entitled \u201cQUANTILE REGRESSION IN R: A VIGNETTE\u201d by Roger Koenke, published Nov. 4, 2009 that is incorporated by reference herein in its entirety, and available at the URL obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%cran=r-project=org%web%packages%quantreg%vignettes%rq=pdf.","For additional information on quantreg as used in server computer  of some embodiments, see the user manual entitled Package \u2018quantreg\u2019, published Nov. 5, 2009 that is incorporated by reference herein in its entirety and available at the URL obtained by replacing \u201c%\u201d with \u201c\/\u201d and replacing \u201c=\u201d with \u201c.\u201d in the following string: http:%%cran=r-project.org%web%packages%quantreg%quantreg=pdf.","In a few embodiments, server computer  is programmed to perform quantile regression as described in an article entitled \u201cA gentle introduction to quantile regression for ecologists\u201d, published Front Ecol Environ 2003; 1(8): 412-420 that is incorporated by reference herein in its entirety.","Furthermore, some embodiments of server computer  use perform quantile regression as described in the article entitled \u201cQUANTILE REGRESSION\u201d by Roger Koenker and Kevin F. Hallock, published Journal of Economic Perspectives\u2014Volume 15, No. 4, Fall 2001, pages 143-156 that is incorporated by reference herein in its entirety,","In several embodiments, a function is automatically selected by computer  from among a family of functions to minimize a sum of deviations between the first counts in ordered pairs of a group of words and corresponding values of the function evaluated at the respective second counts in ordered pairs of the group of words. In some such embodiments, the function is selected by computer  from among a family of functions based on having the minimum sum of deviation of ordered pairs of the group of words from the function, such that the deviation has the value equal to (i) a predetermined multiple \u201ctau\u201d of the difference of the first count from the corresponding value of said function if r is non-negative, and (ii) a complement of the predetermined multiple (tau-1) of the difference r if r is negative, wherein 0<tau<1.","In some embodiments, computer  invokes the quantile regression function \u201crq\u201d as follows, \u201cq1=rq(y\u02dcx,data=D,tau=0.95)\u201d, to identify the two constants b and c of a specific linear function y=bx+c (described above), illustrated by straight line  in . In the just-described invocation, D is the data set containing an ordered pair, each ordered pair containing a first count and a second count of a corresponding word group found to have matched an interest document. In other embodiments, computer  invokes the quantile regression function \u201crq\u201d as follows, \u201cq2=rq(y\u02dcx+l(x^2), data=D, tau=0.95)\u201d to identify the three constants \u201ca\u201d, \u201cb\u201d and \u201cc\u201d for the quadratic function y=ax+bx+c (described above), illustrated by curve  in .","One illustrative example of certain above-described embodiments is shown below in TABLE 3. In this example, the module \u201crq\u201d is invoked as follows:",{"@attributes":{"id":"p-0160","num":"0159"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"> r$q2"]},{"entry":[{},"Call:"]},{"entry":[{},"rq(formula = lintcount ~ lrefcount + I(lrefcount{circumflex over (\u2009)}2), tau = 0.95,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"data = x)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"lrefcount is the logarithm to the base 10 of the reference corpus count. In response, \u201crq\u201d returns the following coefficients, in the above formula y=ax\u2212bx\u2212c (e.g. Intercept is the zeroth order coefficient \u201cc\u201d, and so on).",{"@attributes":{"id":"p-0162","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["(Intercept)","lrefcount","I (lrefcount{circumflex over (\u2009)}2)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0.31191287","\u22120.02357209","0.01268922"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0163","num":"0162"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lintcount=log10(intcount)=1.38"]},{"entry":[{},"lrefcount=log10(refcount)=2.10"]},{"entry":[{},"lfitted=0.3119 \u22120.0236*lrefcount +0.01269*(lrefcount{circumflex over (\u2009)}2)=0.32"]},{"entry":[{},"deviation=lintcount\u2212lfitted=1.38\u22120.32=1.06"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0164","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"log base 10","log base 10","Value of",{}]},{"entry":[{},"Interest","Reference","of Interest","of Reference","fitted"]},{"entry":["Word group","corpus count","corpus count","corpus count","corpus count","curve","deviation"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"6","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["in-vehicle detector","24","126","1.38","2.1","0.32","1.06"]},{"entry":["u-238","35","398107","1.54","5.6","0.58","0.97"]},{"entry":["gamma ray","42","7943282","1.62","6.9","0.75","0.87"]},{"entry":["u-232","20","31623","1.3","4.5","0.46","0.84"]},{"entry":["nuclear material","34","3162278","1.53","6.5","0.69","0.84"]},{"entry":["detection distance","17","31623","1.23","4.5","0.46","0.77"]},{"entry":["mev gamma","15","7943","1.18","3.9","0.41","0.76"]},{"entry":["plutonium","34","10000000","1.53","7","0.77","0.76"]},{"entry":["nuclear detection","15","39811","1.18","4.6","0.47","0.7"]},{"entry":["detector reading","11","2512","1.04","3.4","0.38","0.66"]},{"entry":["mev gamma ray","11","3162","1.04","3.5","0.38","0.66"]},{"entry":["grade of plutonium","10","794","1","2.9","0.35","0.65"]},{"entry":["in-vehicle","26","10000000","1.41","7","0.77","0.65"]},{"entry":["disarm program","9","251","0.95","2.4","0.33","0.63"]},{"entry":["detector area","11","10000","1.04","4","0.42","0.62"]},{"entry":["10 cm lead","8","251","0.9","2.4","0.33","0.57"]},{"entry":["neutron emission","10","15849","1","4.2","0.44","0.56"]},{"entry":["linear attenuation coefficient","9","3981","0.95","3.6","0.39","0.56"]},{"entry":["mev","20","6309573","1.3","6.8","0.74","0.56"]},{"entry":["rand-mipt","8","1000","0.9","3","0.36","0.55"]},{"entry":{"@attributes":{"namest":"1","nameend":"7","align":"center","rowsep":"1"}}}]}}]}}},"In some embodiments (\u201cH\u201d), computers  of an on-line retailer (such as Amazon) include server computer  that is internally connected (e.g. via a proprietary network) to search engine  and website  as illustrated in . In embodiments of the type illustrated in , the documents are books  and\/or book descriptions . In such embodiments, the display of a specific book and\/or specific book's description to a user causes website  (from which the book description was displayed) to automatically identify the book to web framework , for use as an interest document. In this manner, the interest document is automatically identified by a document server  of this embodiment. Web framework  passes an identifier of the book to document crawler  that in turn accesses website  to retrieve the book in electronic form (e.g. as a PDF). Then document crawler  passes the book to converter  that in turn passes the text to relevance engine  which in turn passes word groups (and\/or their identifiers) to web framework . Web framework  then supplies the word groups to web browser  for display to the user, e.g. as illustrated in .","In certain embodiments (\u201cK\u201d), a website  is included in server computer . In these embodiments, as illustrated in , web framework  prepares a web page that is transmitted to web browser  for display to the user. Web framework  constructs the web page using not only a document (such as article  in ) from website  but also including word groups generated by relevance engine  by use of that same document from website  as an interest document. Hence, the interest document (such as article  in ) is automatically identified in this embodiment, by web framework . On receipt of the word groups, web framework  automatically prepares a web page  () including the word groups  and transmits it to web browser . The word groups  are included in the web page  with hyperlinks to invoke an advertisement service  () so that selection of any of word groups  by the user results in web browser  communicating with an ad server , to obtain advertisement(s) which is\/are displayed to the user (see ). In certain alternative embodiments, the just-described hyperlinks do not invoke the advertisement service  and instead invoke the search service . Hence, in such alternative embodiments, a user clicking on a given word group in the lists of word groups  () results in the display of a list of articles that use the given word group.","Screens displayed during an illustrative interaction of a user with one embodiment of server computer  are shown in . Specifically, in the illustrative interaction, the user initially identifies an interest document entitled \u201cNuclear Detection\u201d to server computer  as described above in reference to , In this example, server computer  uses this particular interest document to generate three lists - as described above and illustrated in . Next, in this illustrative interaction, the user types in the word \u201cterrorist\u201d in search box  () and clicks with their mouse on the \u201csearch\u201d button (unlabeled) displayed on web page  to initiate a search by server computer , for all documents on the Internet that use this word. In this example, server computer  uses search service  made available by GOOGLE. Also in this example, results information  () describing the documents identified by the search by computer  on \u201cterrorist\u201d are returned to web browser  in a web page  (). Each item in results information  in  typically includes a list of document descriptions, each description including a title, a URL and a snippet of text from the identified document.","Note that web page  is constructed by server computer  of this embodiment to include lists -, generated by use of the interest document as noted above. Accordingly, on viewing web page , the user can selectively combine their own search term \u201cterrorist\u201d with one or more of the word groups displayed in one of lists -. In the illustrative example, the user clicks on the word group  (), namely the phrase \u201cnuclear material.\u201d On doing so, web browser  notifies server computer  of the user-selected word group  and displays the user-selected word group  in the search box as illustrated in . In this example, when the user clicks on the \u201csearch\u201d button (unlabeled) displayed on web page , server computer  then invokes search service  once again, this time with the two search terms \u201cterrorist\u201d and \u201cnuclear material\u201d in combination. Server computer  then constructs web page  () that is similar to above-described web page , except that the results information  has been replaced by results information .","In this manner, the user can refine their search, by appropriately combining any one or more of the word groups in lists - with search terms (if any) typed by the user in box . In one embodiment, any word group present in search box  can be easily removed from use in the next search, either by the user operating the delete button on the keyboard or alternatively by the user clicking on the same search term in one of lists - (e.g. a first click on a word group adds it to box  and a second click on the word group removes it from box ).","In the illustrative example, web page  constructed by server computer  identifies several search services in a section , such as Google, Yahoo, YouTube, Oneriot, Crunchbase, Books, Patents, Videos, Images, News, Blogs etc. The search service currently used is shown in different attributes (e.g. bolded and without underlining) in section  in this example, relative to the other search services that are available (e.g. shown underlined, as hyperlinks). In the illustrative interaction the user now clicks on the \u201cBooks\u201d hyperlink  and on doing so, server computer  is notified by web browser . Server computer  then queries the user-selected search service  (in this case GOOGLE books), and generates a web page of the type illustrated in . In the example shown in  the user has repeated the search using the term \u201cnuclear\u201d and hence the results information  is shown in  including descriptions of books that use the word \u201cnuclear.\u201d Note that lists - continue to be displayed unchanged in the web page of  (as previously generated from the interest document \u201cNuclear Detection\u201d). In the illustrative interaction, the user types the word \u201cterrorist\u201d in the search box  to look for books that use the two words \u201cnuclear\u201d and \u201cterrorist\u201d in combination, and the server computer  constructs the web page illustrated in .","In the illustrative interaction, the user returns back to the search results shown in , and selects the URL  of a document shown in results information . In response, server computer  constructs the web page illustrated in , including the user-selected document  as well as word groups  (in this example, the word groups  happen to be same as the word groups in lists - although other word groups can be displayed in other examples). Note that at this stage, word groups  included in web page  have hyperlinks that when clicked directly lead to web pages of results information containing document descriptions that match the corresponding hyper-linked word group. In an alternative embodiment, the just-described hyperlinks lead to web pages of advertisements as discussed above in reference to .","Although each document description illustrated in  does not include any word groups, an alternative embodiment illustrated in  includes one or more word groups that are generated using the described document as an interest document. Specifically, in , the results information  including a number of document descriptions, such as description  that in turn includes a number of word groups  that are shown separated by forward slashes \u201c\/\/\u201d. The word groups  are determined by server computer  in this embodiment by use of the document at the URL  as an interest document. The user may then use any of these word groups  in box  to further refine their search.","In several embodiments, a fitted function is selected by computer  from among a family of functions based on deviations of ordered pairs of the group of words from the function, such that the deviation has a value based on a difference of the first count from the corresponding value of the function. The deviations can be difference in absolute value, or difference of squares (linear regression), etc depending on the embodiment.","Numerous modifications and adaptations of the embodiments described herein will become apparent to the skilled artisan in view of this disclosure.","Numerous modifications and adaptations of the embodiments described herein are encompassed by the scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIGS. 1B","b":["1","1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1E","b":"120"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 1F","FIG. 1E"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1G","b":"120"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1H","b":"120"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1I","b":"120"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1J","b":"120"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1K","b":"120"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1L","b":"120"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1M","b":"120"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 1N","FIG. 1A"],"b":["120","126"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1O","FIG. 1A"],"b":["120","126"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2A","b":"120"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2B","b":"120"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3A","b":"120"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3D"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 3E and 3F"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIGS. 5A and 5B","b":"120"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIGS. 6A and 6B","FIG. 3C"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6C"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 7B","FIG. 7A"],"b":"703"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 7C"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIGS. 8A and 8B"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIGS. 9A-9H"}]},"DETDESC":[{},{}]}
