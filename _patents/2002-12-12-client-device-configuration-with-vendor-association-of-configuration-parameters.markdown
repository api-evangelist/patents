---
title: Client device configuration with vendor association of configuration parameters
abstract: Configuring a client device, including receiving, at a vendor, user provided configuration parameters for the client device from a user, receiving at the vendor, a configuration bundle for the client device from a manufacturer, and associating the user provided configuration parameters for the client device with the configuration bundle for the client device, thereby producing an associated configuration bundle.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07962581&OS=07962581&RS=07962581
owner: International Business Machines Corporation
number: 07962581
owner_city: Armonk
owner_country: US
publication_date: 20021212
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS","Introduction","DEFINITIONS","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","The field of the invention is data processing, or, more specifically, methods, systems, and products for configuring client devices.","2. Description of Related Art","Often when a networked client device is purchased and installed onto a network, such as a home network, the client device must be configured to operate properly. When disparate client devices using different protocols are networked together configuring these client devices often requires configuration parameters specific to the user, the network on which the client device will operate, and the client device. Current configuration techniques are often tedious and require extensive user involvement. In fact, in some complicated environments, configuration requires a truck roll with a technical installer. Many conventional configuration techniques require the user to access complicated text instructions from a home computer and wade through large amounts of technical data in order to complete the configuration process. Therefore, there is a need for an improved method of configuring a client device.","Exemplary embodiments for the invention include methods for configuring a client device. Exemplary embodiments include receiving, at a vendor, user provided configuration parameters for the client device from a user, and receiving at the vendor, a configuration bundle for the client device from a manufacturer. Such embodiments include associating the user provided configuration parameters for the client device with the configuration bundle for the client device, thereby producing an associated configuration bundle.","Exemplary embodiments of the invention include downloading the associated configuration bundle for the client device to a services gateway for the user. In such embodiments, downloading the associated configuration bundle for the client device to a services gateway for the user includes pushing the associated configuration bundle to the services gateway for the user. Typical embodiments include executing the associated configuration bundle.","Exemplary embodiments of the invention include detecting a client device. Such embodiments include requesting an associated configuration bundle for the client device. In typical embodiments, receiving, at a vendor, user provided configuration parameters for the client device from a user includes storing the user provided configuration parameters in a database.","In exemplary embodiments of the invention, receiving, at the vendor, a configuration bundle for the client device from a manufacturer includes storing the configuration bundle in a database. In such embodiments, the database is indexed according to a client device identifier. In typical embodiments, associating the user provided configuration parameters for the client device with the configuration bundle for the client device includes retrieving the configuration bundle from a database in dependence upon a client device identifier. In exemplary embodiments, associating the user provided configuration parameters for the client device with the configuration bundle for the client device includes retrieving user provided configuration parameters from a database in dependence upon a user identifier.","The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.","The present invention is described to a large extent in this specification in terms of methods for configuring a client device. Persons skilled in the art, however, will recognize that any computer system that includes suitable programming means for operating in accordance with the disclosed methods also falls well within the scope of the present invention.","Suitable programming means include any means for directing a computer system to execute the steps of the method of the invention, including for example, systems comprised of processing units and arithmetic-logic circuits coupled to computer memory, which systems have the capability of storing in computer memory, which computer memory includes electronic circuits configured to store data and program instructions, programmed steps of the method of the invention for execution by a processing unit. The invention also may be embodied in a computer program product, such as a diskette or other recording medium, for use with any suitable data processing system.","Embodiments of a computer program product may be implemented by use of any recording medium for machine-readable information, including magnetic media, optical media, or other suitable media. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that, although most of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware, nevertheless, alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.","\u201cField\u201d\u2014In this specification, the terms \u201cfield\u201d and \u201cdata element,\u201d unless the context indicates otherwise, generally are used as synonyms, referring to individual elements of digital data. Aggregates of data elements are referred to as \u201crecords\u201d or \u201cdata structures.\u201d Aggregates of records are referred to as \u201ctables\u201d or \u201cfiles.\u201d Aggregates of files or tables are referred to as \u201cdatabases.\u201d Complex data structures that include member methods, functions, or software routines as well as data elements are referred to as \u201cclasses.\u201d Instances of classes are referred to as \u201cobjects\u201d or \u201cclass objects.\u201d","\u201c802.11\u201d refers to a family of specifications developed by the IEEE for wireless LAN technology. 802.11 specifies an over-the-air interface between a wireless client and a base station or between two wireless clients.","\u201cAPI\u201d is an abbreviation for \u201capplication programming interface.\u201d An API is a set of routines, protocols, and tools for building software applications.","\u201cBluetooth\u201d refers to an industrial specification for a short-range radio technology for RF couplings among client devices and between client devices and resources on a LAN or other network. An administrative body called the Bluetooth Special Interest Group tests and qualifies devices as Bluetooth compliant. The Bluetooth specification consists of a \u2018Foundation Core,\u2019 which provides design specifications, and a \u2018Foundation Profile,\u2019 which provides interoperability guidelines.","\u201cBrowser\u201d means a web browser, a communications application for locating and displaying web pages. Browsers typically comprise a markup language interpreter, web page display routines, and an HTTP communications client. Typical browsers today can display text, graphics, audio and video. Browsers are operative in web-enabled devices, including wireless web-enabled devices. Browsers in wireless web-enabled devices often are downsized browsers called \u201cmicrobrowsers.\u201d Microbrowsers in wireless web-enabled devices often support markup languages other than HTML, including for example, WML, the Wireless Markup Language.","\u201cCoupled for data communications\u201d means any form of data communications, wireless, 802.11b, Bluetooth, infrared, radio, internet protocols, HTTP protocols, email protocols, networked, direct connections, dedicated phone lines, dial-ups, serial connections with RS-232 (EIA232) or Universal Serial Buses, hard-wired parallel port connections, network connections according to the Power Line Protocol, and other forms of connection for data communications as will occur to those of skill in the art. Couplings for data communications include networked couplings for data communications. Examples of networks useful with various embodiments of the invention include cable networks, intranets, extranets, internets, local area networks, wide area networks, and other network arrangements as will occur to those of skill in the art. The use of any networked coupling among television channels, cable channels, video providers, telecommunications sources, and the like, is well within the scope of the present invention.","\u201cDriver\u201d means a program that controls a device. A device (printer, disk drive, keyboard) typically has a driver. A driver acts as translator between the device and software programs that use the device. Each device has a set of specialized commands that its driver knows. Software programs generally access devices by using generic commands. The driver, therefore, accepts generic commands from a program and then translates them into specialized commands for the device.","\u201cHAVi\u201d stands for \u2018Home Audio Video interoperability,\u2019 the name of a vendor-neutral audio-video standard particularly for home entertainment environments. HAVi allows different home entertainment and communication devices (such as VCRs, televisions, stereos, security systems, and video monitors) to be networked together and controlled from one primary device, such as a PC or television. Using IEEE 1394, the \u2018Firewire\u2019 specification, as the interconnection medium, HAVi allows products from different vendors to comply with one another based on defined connection and communication protocols and APIs. Services provided by HAVi's distributed application system include an addressing scheme and message transfer, lookup for discovering resources, posting and receiving local or remote events, and streaming and controlling isochronous data streams.","\u201cHomePlug\u201d stands for The HomePlug Powerline Alliance. HomePlug is a not-for-profit corporation formed to provide a forum for the creation of open specifications for high speed home powerline networking products and services. The HomePlug specification is designed for delivery of Internet communications and multimedia to homes through the home power outlet using powerline networking standards.","\u201cID\u201d abbreviates \u201cidentification,\u201d meaning \u2018identification code\u2019 or identification field. It is a style of reference in this disclosure to refer to user identification codes as \u201cuser IDs.\u201d By convention in this disclosure, the field name \u201cUserID\u201d is used to store a user ID.","\u201cIEEE 1394\u201d is an external bus standard that supports data transfer rates of up to 400 Mbps (400 million bits per second). Products supporting the 1394 standard go under different names, depending on the company. Apple, which originally developed IEEE 1394, uses the trademarked name \u201cFireWire.\u201d Other companies use other names, such as i.link and Lynx, to describe their 1394 products.","A single 1394 port can be used to connect up 63 external devices. In addition to high speed, 1394 also supports isochronous data\u2014delivering data at a guaranteed rate. This makes it ideal for devices that need to transfer high levels of data in real-time, such as video.","\u201cThe Internet\u201d is a global network connecting millions of computers utilizing the \u2018internet protocol\u2019 or \u2018IP\u2019 as the network layer of their networking protocol stacks. The Internet is decentralized by design. Each computer on the Internet is independent. Operators for each computer on the Internet can choose which Internet services to use and which local services to make available to the global Internet community. There are a variety of ways to access the Internet. Many online services, such as America Online, offer access to some Internet services. It is also possible to gain access through a commercial Internet Service Provider (ISP). An \u201cinternet\u201d (uncapitalized) is any network using IP as the network layer in its network protocol stack.","\u2018IP\u2019 refers to the \u2018internet protocol,\u2019 a network-layer networking protocol for computer data communications.","\u201cIP address\u201d means an identifier for a computer or device on an IP network. Networks using the IP protocol route messages based on the IP address of the destination. The format of an IP address is a 32-bit numeric address written as four numbers separated by periods. Each number can be zero to 255. An example of an IP address is 1.160.10.240.","\u201cISP\u201d means \u201cInternet Service Provider,\u201d a company that provides access to the Internet. For a monthly fee, an ISP provides a user identification code (often called a \u2018username\u2019), a password, and an access phone number or, for wide band services, an internet protocol address, through which to access the Internet. Equipped with proper couplings for data communications, such as a modem or cable modem, users and companies can then log on to the Internet, browse the World Wide Web, and access other Internet related services such as USENET and e-mail. In servings companies, ISPs also provide a direct connection from the company's networks to the Internet.","\u201cJAR\u201d is an abbreviation for \u2018Java archive.\u2019 JAR is a file format used to bundle components used by a Java applet. JAR files simplify downloading applets, because many components (.class files, images, sounds, etc.) can be packaged into a single file. JAR also supports data compression, which further decreases download times. By convention, JAR files end with a \u2018.jar\u2019 extension.","\u201cJES\u201d stands for Java Embedded Server. JES is a commercial implementation of OSGi that provides a framework for development, deployment, and installation of applications and services to embedded devices.","\u201cLAN\u201d is an abbreviation for \u201clocal area network.\u201d A LAN is a computer network that spans a relatively small area. Many LANs are confined to a single building or group of buildings. However, one LAN can be connected to other LANs over any distance via telephone lines and radio waves. A system of LANs connected in this way is called a wide-area network (WAN). The Internet is an example of a WAN.","\u201cOSGI\u201d refers to the Open Services Gateway Initiative, an industry organization developing specifications for services gateways, including specifications for delivery of service bundles, software middleware providing compliant data communications and services through services gateways. The Open Services Gateway specification is a Java based application layer framework that gives service providers, network operator device makers, and appliance manufacturer's vendor neutral application and device layer APIs and functions.","\u201cServer\u201d in this specification refers to a computer or device comprising automated computing machinery on a network that manages resources and requests for access to resources. A \u201cweb server,\u201d or \u201cHTTP server,\u201d in particular is a server that communicates with browsers by means of HTTP in order to manage and make available to networked computers documents in markup languages like HTML, digital objects, and other resources. A \u201cDMS server,\u201d in particular is a server that communicates with services gateways to provide service bundles to the services gateways.","\u201cSMF\u201d stands for \u201cService Management Framework\u2122\u201d available from IBM\u00ae. SMF is a standards-based architecture that is designed to be compliant with specifications developed by the cross-industry Open Services Gateway Initiative (OSGi). SMF is a commercial implementation of OSGi for management of network delivered applications on services gateways.","\u2018TCP\u2019 refers to the \u2018Transmission Control Protocol,\u2019 a transport-layer networking protocol for networked computer data communications. TCP provides a so-called \u2018reliable\u2019 communications protocol in which a message is broken into packets which are communicated to the message's destination and reassembled into the message completely and in correct sequence. TCP is so often used with IP as its underlying network protocol layer that the two are often spoken of together as the TCP\/IP protocol suite.","\u201cTCP\/IP\u201d means the Transmission Control Protocol (TCP) and the Internet Protocol (IP) operating together. TCP\/IP is a packet switching protocol suite. TCP establishes a virtual connection between a data source and a data destination. IP specifies that data will be sent from the source to the destination in packets and IP specifies the addressing scheme of the source and the destination. TCP monitors the delivery of the data and the order in which the packets are delivered.","\u201cUSB\u201d is an abbreviation for \u201cuniversal serial bus.\u201d USB is an external bus standard that supports data transfer rates of 12 Mbps. A single USB port can be used to connect up to 127 peripheral devices, such as mice, modems, and keyboards. USB also supports Plug-and-Play installation and hot plugging.","\u201cWAP\u201d refers to the Wireless Application Protocol, a protocol for use with handheld wireless devices. Examples of wireless devices useful with WAP include mobile phones, pagers, two-way radios, and hand-held computers. WAP supports many wireless networks, and WAP is supported by many operating systems. Operating systems specifically engineered for handheld devices include PalmOS, EPOC, Windows CE, FLEXOS, OS\/9, and JavaOS. WAP devices that use displays and access the Internet run \u201cmicrobrowsers.\u201d The microbrowsers use small file sizes that can accommodate the low memory constraints of handheld devices and the low-bandwidth constraints of wireless networks.","\u201cWorld Wide Web,\u201d or more simply \u201cthe web,\u201d refers to a system of internet protocol (\u201cIP\u201d) servers that support specially formatted documents, documents formatted in markup languages such as HTML (HyperText Markup Language), XML (eXtensible Markup Language), WML (Wireless Markup Language), or HDML (Handheld Device Markup Language). The term \u201cWeb\u201d is used in this specification also to refer to any server or connected group or interconnected groups of servers that implement a hyperlinking protocol, such as HTTP (HyperText Transfer Protocol) or WAP (Wireless Access Protocol), in support of URIs and documents in markup languages, regardless of whether such servers or groups of servers are coupled to the World Wide Web as such.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 1","FIG. 1"],"b":["120","120","120","120"]},"In the exemplary architecture of , a client device () is coupled for data communication with a services gateway (). The services gateway () is coupled for data communication with the internet (). The services gateway () provides access for the client device (), and any LAN on which the client device ( is operating, to a WAN such as the Internet.","A services gateway () is, in some exemplary architectures, an OSGi compatible services gateway (). While exemplary embodiments of methods for configuring a client device are described in this specification using OSGi, many other applications and frameworks, will work to implement the methods of configuring a client device according to the present invention, and are therefore, also well within the scope of the present invention. Commercial implementations of OSGi, such as JES and SMF, are also useful in implementing methods of the present invention.","OSGi Stands for \u2018Open Services Gateway Initiative.\u2019 The OSGi specification is a Java based application layer framework that provides vendor neutral application and device layer APIs and functions for various devices using arbitrary communication protocols operating in networks in homes, cars, and other environments. OSGi works with a variety of networking technologies like Ethernet, Bluetooth, the \u2018Home, Audio and Video Interoperability standard\u2019 (HAVi), IEEE 1394, Universal Serial Bus (USB), WAP, and powerline communication systems, including the Home Powerline Alliance standard known as HomePlug. The OSGi specification is available for free download from the OSGi website at www.osgi.org.","The services gateway of  includes a service framework (). In many example embodiments the service framework is an OSGi service framework (). An OSGi service framework () is written in Java and therefore, typically runs on a Java Virtual Machine (JVM). In OSGi, the service framework () of  is a hosting platform for running \u2018services\u2019 (). The term \u2018service\u2019 or \u2018services\u2019 in this disclosure, depending on context, generally refers to OSGi-compliant services.","Services () are the main building blocks for creating applications in the OSGi. A service () is a group of Java classes and interfaces that implement a certain feature. The OSGi specification provides a number of standard services. For example, OSGi provides a standard HTTP service that creates a web server that can respond to requests from HTTP clients.","OSGi also provides a set of standard services called the Device Access Specification. The Device Access Specification (\u201cDAS\u201d) provides services to identify a device connected to the services gateway, search for a driver for that device, and install the driver for the device.","Services () in OSGi are packaged with other files, images, and resources that the services () need for execution in a \u2018bundle,\u2019 such as the bundle () of . A bundle () is a Java archive (JAR) file including one or more services (), an activator class (), and a manifest file (). An activator class () is a Java class that the service framework () uses to start and stop a bundle. A manifest file () is a standard text file that describes the contents of the bundle ().","The services framework () in OSGi also includes a service registry (). The service registry () includes the service's name and an instance of a class that implements the service for each bundle () installed on the framework () and registered with the service registry (). A bundle () may request services that are not included in the bundle (), but are registered on the framework service registry (). To find a service, a bundle () performs a query on the framework's service registry ().","The exemplary entities of  include a Device Management Server (\u2018DMS\u2019) () coupled for data communications with the services gateway () though the internet (), the World Wide Web, or any WAN. The DMS is a server specifically designed to provide, retrieve, or otherwise deploy bundles to the services gateway (). In many typical examples, a DMS agent provides protocols for receiving requests for bundles from a gateway, authenticating the gateway, retrieving a requested bundle, and providing the requested bundle to the services gateway.","The exemplary entities of  include a vendor (). The vendor () sells or otherwise provides client devices () to the user. In examples of methods of configuring a client device, the vendor () also sells or otherwise provides to a user configuration bundles for the client device. In some example embodiments of the present invention, the vendor obtains the configuration bundles form a manufacturer of configuration bundles ().","The exemplary entities of  also include a manufacturer (). The manufacturer () of  is a manufacturer of configuration bundles for use with methods of configuring a client device () according to the present invention. The manufacturer () of configuration bundles for the client device is in some instances the manufacturer of the client device () itself. However, the manufacturer () of a configuration bundle may be a third-party manufacturer of configuration bundles who did not manufacture the client device",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["502","102","212","120","210","102"]},"User provided configuration parameters () typically include configuration parameters known or available to the user () that concern the user's services gateway, network, or other configuration parameters that define the context in which the client device () will operate. Examples of user provided configuration parameters () include a user's LAN mask, a user's IP default gateway address, a user's IP address, a user's LAN name, a user's DMS name, a users link type (Ethernet, Bluetooth, 802.11), wireless network name, wireless encryption key, or any other user provided configuration parameters that will occur to those of skill in the art.","The method of  includes receiving (), at the vendor (), a configuration bundle () for the client device () from a manufacturer (). The manufacturer () is a manufacturer of the configuration bundle () for the client device (). In many examples according to the present invention, the manufacturer () of the configuration bundle () is the manufacturer of the client device (). However, in other examples, the manufacturer () of the configuration bundle may not manufacture the client device ().","In the example of , the configuration bundle () includes services, computer code, and other resources for configuring the client device () in accordance with methods of the present invention. In some cases, the configuration bundle () includes a driver for the client device (). In some examples of configuring a client device according to methods of the present invention, the configuration bundle () is an OSGi bundle including services for configuring the client device. The OSGi configuration bundle is executed on an OSGi services gateway to configure the client device. Because the configuration bundle () is designed to configure a specific client device (), in many examples, various configuration bundles () have various designs according to the client device the configuration bundle is designed to configure, the network on which the client device () will operate, the services gateway to which the configuration bundle () will be deployed and executed, or any other factor that will occur to those of skill in the art.","In some examples of the method of , receiving (), at the vendor (), a configuration bundle () for the client device () from a manufacturer () includes individually downloading the configuration bundle () from, for example, a manufacturer's website. Alternatively, receiving (), at the vendor (), a configuration bundle () for the client device () from a manufacturer () includes receiving configuration bundles as a complete database of configuration bundles indexed, for example, by make, model, or client device serial number. In many cases, the database is stored on a compact disc, or other form of non-volatile computer memory. Receiving (), at the vendor (), a configuration bundle () for the client device () from a manufacturer () includes receiving updates to configuration bundles () previously received at the vendor ().","In some embodiments of the present invention, some additional configuration parameters are such as a client device identifier are made known to the vendor by the purchase of the client device. That is, parameters such as serial number, make and model of the client device are available to the vendor () at the point of sale, and therefore, the vendor may not receive these configuration parameters from the user.","The method of  includes associating () the user provided configuration parameters () for the client device () with the configuration bundle () for the client device (). Associating () the user provided configuration parameters () with the configuration bundle () results in an associated configuration bundle (). An associated configuration bundle () is a configuration bundle having the appropriate configuration parameters such that when deployed to the user's services gateway, and when executed, the associated configuration bundle configures the client device.","When the user provided configuration parameters () and have been associated with the configuration bundle (), the associated configuration bundle is ready for deployment to the user's services gateway. In many cases, more than one configuration bundle are associated to create a complete set of associated configuration bundles, such that when the set of configuration bundles are deployed onto the user's services gateway and executed, the user's client device is configured.","In the method of , associating () the user provided configuration parameters () with the configuration bundle () for the client device () is carried out by the vendor (). In one example, the vendor () receives the user provided configuration parameters () at the point of sale and receives a configuration bundle () from a manufacturer (). The vendor associates the user provided configuration parameters () with the configuration bundle (), thereby creating an associated configuration bundle () for the user.","Consider an example of a vendor () operating a website. A user () purchases a client device () from the vendor () through the vendor's website. During the purchase, a vendor's () website includes a series of screens requesting user provided configuration parameters (). Upon completion of the purchase, the vendor () receives () a configuration bundle () from a manufacturer () or retrieves a configuration bundle from a database of configuration bundles already received from the manufacturer (). The vendor () associates the user provided configuration parameters with the configuration bundle ().","The method of  includes downloading () the associated configuration bundle () for the client device () to a services gateway () for the user. In the method of , downloading () the associated configuration bundle () for the client device () to a services gateway () for the user includes pushing () the associated configuration bundle to the services gateway () for the user. \u2018Pushing\u2019 means that the vendor, knowing the WAN network address of a services gateway for a user and being authorized to do so, originates a download of an associated configuration bundle on the vendor's own motion, without waiting for a specific request from a user for the download. When a vendor pushes () an associated configuration bundle () onto a services gateway (), the associated configuration bundle () is ready for execution on the user's services gateway () when the user is ready to install the client device (). That is, no further action is required on the part of the user other than plugging the client device into a configuration port on a services gateway.","More particularly, in such embodiments, for example, a user purchases a client device from a vendor who prepares an associated configuration bundle for the client device and pushes the associated bundle to the user's services gateway either while the user is still at the vendor's point of sale or while the user is driving home. When the user arrives at home, the associated configuration bundle is already installed and activiated on the user's home services gateway. The user plugs the client device into a configuration port on the user's services gateway and configuration services from the associated configuration bundle configure the client device.","As alternatives to pushing, the associated configuration bundle is downloaded to a DMS and the DMS stores the associated configuration bundle (), or the associated configuration bundle is stored at the vendor, until a user or a user's services gateway () requests the associated configuration bundle (). In some examples, the user's services gateway requests the associated configuration bundle when the services gateway detects that the client device () is connected to the services gateway ().","The method of  includes executing () the associated configuration bundle (). Executing () the associated configuration results in a configured client device (). In many cases, the configuration bundle is executed when the client device is detected on the services gateway. That is, a configuration service in the configuration bundle polls a configuration port on the services gateway and, when it detects the presence of a client device, the service is programmed to proceed with configuration at that time. Methods of detecting a client device on a configuration port of a services gateway are described in more detail below. In other examples, executing () the associated configuration bundle () includes receiving an instruction from the user to execute the configuration bundle. Using a web browser installed on a computer connected to the services gateway, a user may through a series of instruction screens instruct the services gateway to execute the associated configuration bundle. In many embodiments, a services gateway according to the present invention has installed directly upon it no user interface hardware, no terminal screen, no keyboard, no mouse, although such services gateways do often support HTTP interfaces to services on the gateway. In such embodiments, a user can access HTTP screens on the gateway by logging on to a browser on a personal computer or other client device that does support user interface hardware and is coupled to the gateway through a LAN and directing the browser to the services gateway's IP address on the LAN.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 3","FIG. 3"],"b":["250","120","242","242","120","120","240","118","120","240","118"]},"In the method of , detecting () a client device () is carried out through a polling bundle (). In some example embodiments, the polling bundle () is an OSGi bundle. An OSGi framework provides standard services in the DAS for checking for the connection of devices on the services gateway (). In some examples, the polling bundle () includes specifically programmed polling services within the bundle. In alternative examples, the polling bundles queries a services registry on an OSGi framework operating on the services gateway to identify standard OSGi services for checking for the connection of a device on the services gateway. In the example of , the polling bundle () uses the OSGi standard services to poll () the serial interface () and detect the client device ().","The method of  includes reading () a client device identifier () from the client device () when polling detects a client device connected to a serial interface. A client device identifier () is any identification that sufficiently identifies the client device such that an appropriate configuration bundle for the client device may be obtained and executed. Exemplary client device identifiers include manufacturer name, model name, serial number, or any other client device identifier as will occur to those of skill in the art.","The client device identifier may be represented in data by a record such as the client device identifier record () of . The client device identifier record () is stored in non-volatile memory on the client device (). The client device identifier record () includes a deviceID field () representing a serial number, make and model, or any other identification of the device that will occur to those of skill in the art. The device identifier record () of  also includes a vendorID field () identifying the vendor () of the client device. In some examples, a vendor may place a unique identifier in the vendorID field of the client device before selling the client device or the manufacturer many identify the vendor by vendorID before shipping the client device to the vendor.","In method of , a polling bundle () carries out reading () a client device identifier () from the client device (). In some example embodiments, the polling bundle () is an OSGi bundle. An OSGi framework provides standard services in a DAS for reading device identifiers from a device connected to the services gateway. In some exemplary methods of detecting client devices and requesting configuration bundles, a polling bundle () includes specifically programmed services within the bundle to read the client device identifier. In alternative examples, the polling bundle queries a services registry on an OSGi framework operating on the services gateway to identify standard OSGi services for reading a client device identifier. In such embodiments, the polling bundle () then uses the OSGi standard services to read a client device identifier from the client device.","A DAS in an OSGi framework often also provides standard services to identify and install a driver for the client device. In embodiments that utilize such DAS services, when a polling bundle () detects a client device () and identifies the client device (), the polling bundle queries the service registry on the service framework of the services gateway to identify standard services to obtain and install a driver to facilitate communication between the services gateway and the client device.","In some exemplary methods of detecting client devices and requesting configuration bundles, the associated configuration bundle for the client device is pushed onto the services gateway () for the user. In such exemplary embodiments, requesting () the associated configuration bundle includes requesting the associated configuration bundle stored within the services gateway. In other exemplary embodiments, where the associated configuration bundle is not pushed onto the services gateway (), requesting () an associated configuration bundle includes requesting the associated configuration bundle from a DMS.","A request for an associated configuration bundle can be represented in data as a record such as, for example, the bundle request record () of . The bundle request record () includes a deviceID field () identifying the client device to be configured. The bundle request record () also includes a gatewayID field () identifying the gateway requesting the associated configuration bundle. The bundle request record () of  includes a vendorID field () identifying the vendor () of the client device (). In some examples, the gatewayID and the DeviceID together uniquely identify the associated configuration bundle for the device. In other example, the bundle request record includes a userID identifying the user.","Requesting () an associated configuration bundle, in many embodiment of the present invention, is carried out by a requesting bundle, such as the requesting bundle () of . In some exemplary embodiments according to the present invention, the requesting bundle () is an OSGi bundle including services capable of sending a request for an associated configuration bundle to a DMS. The OSGi framework provides a standard HTTP service. In some examples, a requesting bundle () sends a bundle request to the DMS as a HTML document in an HTTP message.","The method of  includes authenticating () the services gateway (). Authenticating the gateway can be carried out, for example, by comparing () the gatewayID field () of the bundle request record () with a gateway database (). In the method of , authenticating () the services gateway () is carried out by a DMS. The DMS authenticates the services gateway by comparing the services gateway identifier with a database of gateway identifiers registered with the DMS. When the services gateway is authenticated, the method of  includes retrieving the associated configuration bundle stored on the DMS. The DMS downloads the associated configuration bundle to the services gateway for execution.","When the services gateway is authenticated, the DMS identifies the associated configuration bundle for the client device stored on the DMS. The DMS identifies an associated configuration bundle for the client device in dependence upon the deviceID field () and the gatewayID field () of the bundle request record (). The DMS downloads the identified associated configuration bundle to the services gateway for execution. Alternatively, the DMS requests the associated configuration bundle from a vendor identified by the vendorID field of the bundle request record ().",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 4","FIG. 4"],"b":["502","102","212","120","504","102","122","120","132","502","102","212","120","602","212","604"]},"By storing () user provided configuration parameters () the vendor () provides an additional service to the user. The user provides the user provided configuration parameters () one time to the vendor (). The vendor automates the configuration for a user reducing the user's involvement in configuration with each additional client device () the user purchases from the vendor. In this way, a user is encouraged to continue shopping with the vendor (), because configuring client devices () proceeds automatically for each client device purchased after the vendor received the user provided configuration parameters ().","In the method of , receiving (), at the vendor (), a configuration bundle () for the client device () from a manufacturer () includes storing () the configuration bundle () in a database (). The database () of  is indexed according to a client device identifier (). A vendor () receives () the configuration bundle from the manufacturer () and stores () the configuration bundles in a database ().","In one example, a vendor () receives configuration bundles from many manufacturers regardless the user's purchases. The vendor () maintains a current database of all the configuration bundles for all the manufacturers whose products the vendor () sells. When the vendor () sells the client device, a configuration bundle () for the client device is available in the vendor's database () for purchase, or for the vendor () to provide as an additional customer service.","In the database () of , the configuration bundles () are indexed according to client device identifier (). Examples of client device identifiers () include manufacturer name and model number, serial number or any other client device identifier that will occur to those of skill in the art. By indexing the database () by client device identifier () the vendor () can retrieve the appropriate configuration bundle for the client device when the user purchases the client device.",{"@attributes":{"id":"p-0088","num":"0087"},"figref":["FIG. 5","FIG. 5"],"b":["122","506","212","120","122","120","702","122","604","608","102","120","102","702","122","604"]},"If the user () is a previous customer of the vendor (), the vendor may have user provided configuration parameters () for the user stored in the vendor's database. In the method of , associating () the user provided configuration parameters () for the client device () with the configuration bundle () for the client device () includes retrieving () user provided configuration parameters () from a database () in dependence upon a user identifier () and entering () the user provided configuration parameters into the configuration bundle ().","In the method of , associating () user provided configuration parameters () with the configuration bundle () includes entering () the user provided configuration parameters () into the configuration bundle retrieved from the vendor's database (). In one example, entering () the user provided configuration parameters () into the configuration bundle received from the manufacturer () is carried out through a website run by the vendor (). When a user purchases a client device () through the vendor's website, the vendor's website provides screens prompting the user to input user provided configuration parameters. The vendor () receives the user provided configuration parameters through the web site and the vendor () enters the user provided configuration parameters () into the configuration bundle (). Alternatively, the associated configuration bundle is then downloaded to the user's services gateway, downloaded to a DMS, or stored at the vendor ().","It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THF DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
