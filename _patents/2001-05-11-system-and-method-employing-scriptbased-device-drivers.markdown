---
title: System and method employing script-based device drivers
abstract: A computer system and method uses script-based device drivers for operating hardware devices. The script-based driver architecture comprises a scripting driver, a script engine, and a driver script for a given hardware device, such as a scanner. The driver script is generally a text file containing a sequence of programming instructions defining the operational behavior of the hardware device. The scripting driver exports a set of objects whose functions can be called by the driver script to communicate with and control the device. When a request to operate the hardware device is received by the scripting driver, the script engine interprets the programming instructions in the driver script corresponding to the request and invokes the functions of the scripting driver objects called by the programming instructions to carry out the requested device operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06938261&OS=06938261&RS=06938261
owner: Microsoft Corporation
number: 06938261
owner_city: Redmond
owner_country: US
publication_date: 20010511
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","EXAMPLE 1","EXAMPLE 2","EXAMPLE 3","EXAMPLE 4"],"p":["This application claims the benefit of provisional patent application Ser. No. 60\/203788, filed May 12, 2000.","This invention relates generally to computer operating systems, and more particularly to software components of an operating system for controlling the operation of a computer hardware device, such as a scanner.","A computer system may employ various hardware devices for different functions, such as data input and output, printing, display, etc. Each hardware device in the computer system is typically operated through its associated device driver, which is in most cases supplied by the vendor of the hardware device and loaded as part of the operating system. The device driver allows the computer operating system and applications to communicate with the hardware device and control its operations. The device driver is device-specific in that it is written to handle the particular behavior of the device. In this regard, device drivers often rely on libraries provided by the hardware vendors to communicate with their associated devices. On the other hand, the device driver also has to be written according to specifications and requirements of the operating system with which the driver is to be used.","Although the quality of the device driver for a hardware device is critical to the proper operation of the device, many hardware vendors find it difficult to put in the needed time and resources to adequately develop a device driver. This problem is exacerbated by the frequent need to create device drivers for new hardware device models or to rewrite device drivers for use with new versions of operating systems. Also, to support a new driver, the hardware vendor may have to develop a new library. The need to code new device drivers and libraries can be a significant burden on the hardware vendors.","The task of developing device drivers and libraries is also shared by developers of operating systems. Before a device driver can be incorporated into an operating system, the operating system developer often has to test it to identify errors in the driver and its libraries. Fixes to a driver library have to be done by the hardware vendor and then merged into the current version of the library. To effectively test a driver and its libraries, the operating system developer has to have a good understanding of the libraries, such as what each library does and which device models it supports. This requirement puts a significant burden on the operating system developer. Thus, the difficulties in creating device drivers concern not only hardware vendors but also operating system developers.","In view of the foregoing, the present invention provides a computer system and method that uses script-based device drivers for operating hardware devices. The script-based driver architecture comprises a scripting driver, a script engine, and one or more driver scripts. The scripting driver interfaces with the operating system for receiving requests from applications and\/or the operating system to operate the hardware device. For each hardware device, there is an associated driver script that is generally a text file containing a collection of programming instructions. The driver script defines the behavior of the hardware device in response to requests and notifications received by the scripting driver from the applications and the operating system. It also defines how to process requests and notifications from the hardware device. The scripting driver may export objects having functions that can be called by the instructions in the driver script to communicate with and control the device. When a request to operate the device is received by the scripting driver, the scripting driver uses the script engine to access and execute the device script associated with the device. The script engine parses and interprets the programming instructions in the script, and invokes functions of the scripting driver objects called by the programming instructions to carry out the requested device operation.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments, which proceeds with reference to the accompanying figures.","Turning to the drawings, wherein like reference numerals refer to like elements, the invention is illustrated as being implemented in a suitable computing environment. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general-purpose computing device in the form of a conventional personal computer , including a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within the personal computer , such as during start-up, is stored in ROM . The personal computer  further includes a hard disk drive  for reading from and writing to a hard disk , a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media.","The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer . Although the exemplary environment described herein employs a hard disk , a removable magnetic disk , and a removable optical disk , it will be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories, read only memories, and the like may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk , magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more applications programs , other program modules , and program data . A user may enter commands and information into the personal computer  through input devices such as a keyboard  and a pointing device . Other input devices may include a microphone, joystick, game pad, or the like. The input devices may further include image-capturing devices, such as scanners and digital cameras, as sources of color image data. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices, not shown, such as speakers and printers.","The personal computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the personal computer , although only a memory storage device  has been illustrated in FIG. . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the personal computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, the person computer  typically includes a modem  or other means for establishing communications over the WAN . The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computers, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting, as those of skill in the art will appreciate that the acts and operations described hereinafter and their variations may also be implemented in hardware.","Referring now to , the present invention is directed to a system architecture that enables the use of a script-based device driver  for controlling the operation of a hardware device . As will be described in greater detail below, the script-based driver architecture comprises a scripting driver , a script engine , and one or more driver scripts  each for a particular hardware device. The scripting driver , the script engine , and the driver script  for a given device together serve the function of a regular device driver (e.g., the device driver  in FIG. ). The scripting driver  handles the various interface functions required by a device driver interface (DDI)  that is part of the operating system . Each of the driver scripts  is generally a text file containing a sequence of programming instructions written in a pre-defined scripting language, in contrast to a regular device driver that is a compiled and machine-executable program module. The programming instructions in the driver script define the behavior of the associated hardware device  in response to requests and notifications from the operating system and\/or the application . For example, when the scripting driver receives a request to acquire data using the device, it would access and execute a portion of the driver script that is responsible for sending appropriate device-specific commands to the device to acquire data. The programming instructions in the script also define how requests and notifications from the hardware device  are to be handled. For example, the driver script may define how to process a notification from the device indicating that a button on the device has been pushed.","In a preferred embodiment, the scripting driver  also exports a plurality of objects  having functions that can be called by the driver script  to communicate with and control the hardware device . The objects  exported by the scripting driver  are added to the script engine  before executing the script and are thus callable from within the script.","The scripting driver  uses the script engine  to access the device script  for the hardware device. The script engine  processes or \u201cinterprets\u201d the programming instructions in the script pertaining to the requested operation, and invokes the functions of the scripting driver objects  called by the programming instructions to carry out the requested device operation.","The scripting driver  is preferably provided for a given type of hardware devices, such as scanners. In other words, the operating system  may have multiple scripting drivers for different types of hardware devices. A scripting driver for a given device type works with a plurality of driver scripts written for different hardware devices of that type to provide device control functionality. Alternatively, a generic scripting driver may be provided for different device types, i.e., to handle driver scripts for more than one type of hardware devices. For instance, a single scripting driver may work with all types of devices falling in the category of \u201cimage capturing devices,\u201d such as scanners and digital cameras.","The scripting driver  is preferably system-supplied, i.e., provided by the developer of the operating system. The driver script , on the other hand, is expected to be provided by the vendor of the associated hardware device. One major advantage of the script-based device driver architecture is that a driver script is significantly easier to develop than a regular device driver, which would require extensive coding efforts. Moreover, since the driver script calls functions of pre-defined objects  provided by the system (e.g., exported by the scripting driver ) rather than vendor-provided libraries, the developer of the operating system no longer has to spend a lot of time to understand vendor-provided libraries in order to fix the driver for a device.","In the following description, the invention will be described in the context of an embodiment based on the Windows Image Acquisition (WIA) architecture, which is part of the Windows operating system of Microsoft Corporation. Moreover, the invention will be described using scanners as an example of the different types of hardware devices for which script-based device drivers can be advantageously used. It will be appreciated, however, that the approach of employing script-based drivers in accordance with the invention can be effectively used in other types of operating systems. Moreover, the invention is not limited only to scanners but can be advantageously applied to other types of computer peripheral devices.","Referring now to , the operating system  of the shown embodiment employs an image acquisition architecture that is designed to enable an image-processing application  to effectively communicate with and control the operations of various image-capturing devices, such as scanners and digital cameras. To illustrate the concept of script-based device drivers in accordance with the invention, the components for controlling the operation of a scanner  according to its driver script  is juxtaposed with a regular device driver  for another image-capturing device , and the image acquisition architecture is described in connection with the regular device driver  to allow an appreciation of the advantages of using the script-based device driver.","In the embodiment of , the image-capturing device  functions as a source of image data, which may be in a color, black-and-white, or gray scale format. The image data can be transmitted to an image-processing application  for various types of processing and editing operations. The processed or edited image may then be displayed on a display device (such as a computer monitor ) for viewing, printed on a printer , or included in a document for presentation or communication purposes.","The image acquisition architecture of the operating system  includes a system-supplied Image Acquisition Service , which servers as an intermediate between the application  and the device drivers for various image-capturing devices, such as the scanner  and the un-specified image-capturing device  (which may be a scanner, a digital camera, etc.). The image-processing application  communicates with the Image Acquisition Service  through an image acquisition Application Programming Interface (API)  provided by the operating system . When the application  makes a request to use one of the image capturing devices, the Image Acquisition Service  directs the request to the device driver for that image-capturing device. Communicating with the device driver  through the Image Acquisition Service , the image processing application  can monitor, communicate with, and receive captured image data from the image-capturing device .","The regular device driver  is typically supplied by the vendor of the associated image-capturing device . In the illustrated embodiment, the device driver  is a user-mode component that directs image acquisition property changes and commands to its associated image-capturing device . It communicates through a device-specific user-mode interface  with system-supplied or vendor-supplied kernel-mode I\/O device drivers , which drives the image-capturing device  through a driver such as a USB driver. The kernel-mode image drivers , which are bus-specific, package data for delivery to the image-capturing device  and transfer data from the image-capturing device to the device driver . The communications between the kernel-mode image driver  and the image-capturing device  may be based on one of different types of buses. For instance, in one implementation, kernel-mode image drivers for the USB, SCSI, and IEEE  buses are provided with the operating system .","In the opposite direction, the device driver  communicates with the Image Acquisition Service  through an image acquisition Device Driver Interface (DDI) . The image acquisition DDI  allows the Image Acquisition Service  to communicate with and control the device driver . Requests made by the application  concerning the image-capturing device  are directed to the Image Acquisition Service , which in turn directs the requests to the appropriate device driver  through the image acquisition Device Driver Interface (DDI) . To work with the image acquisition DDI , the device driver  is required to implement various pre-defined interface methods or \u201centry points\u201d for communications with the Image Acquisition Service . The interface methods perform device-related tasks such as: creating a tree-like data structure (called a \u201cdevice tree\u201d) with items representing the device and its images and folders; reading and writing properties of the items in the device tree; transferring captured image data from the image-capturing device; enumerating device image formats supported by the device; deleting an item in the device tree; sending operation commands to the device; enumerating device capabilities; and obtaining device error message strings.","It can be seen from the above description that to implement the required system interface methods in a device driver for an image-capturing device, a hardware vendor has to understand the architecture of the operation system and to follow carefully the specifications of the methods and their parameters. Due to the relatively large number and complexity of the required methods, the proper development of a regular device driver  for a hardware device can require significant time and resources. The hardware vendor may find it difficult to allocate the needed resources for driver development. Also, because regular device drivers are typically coded to use vendor-supplied libraries, the developer of the operating system often has to spend a substantial amount of time to understand the libraries in order to identify problems with the drivers.","The use of script-based device drivers in accordance with the invention effectively solves these problems. As described above, a regular device of the image acquisition system can be complex to implement, but much of the complexity is related to system requirements such as managing data structures, properties, and program flow according to the requirements of the image acquisition architecture. In accordance with the invention, much of the complexity due to system architectural requirements are moved into a reusable component (e.g., the scripting driver  in this embodiment), and the device-specific aspects of communicating with and controlling a hardware device are handled by a driver script for that device. Thus, rather than having to understand and implement the system architectural specifications, the hardware vendor only has to provide a script that is a human-readable text file containing simple programming instructions describing the behavior of the hardware device. The programming instructions in the script call the functions of a pre-defined set of objects provided by the system to communicate with and control the associated hardware device. It will be appreciated that writing a script is significantly easier than developing machine-executable programs, which are also much harder to debug.","Moreover, the driver interface functions required by the operating system architecture are handled by the scripting driver, which is preferably system-supplied. Thus, the hardware vendor no longer has to be concerned with implementing the system interface required in a regular driver and can concentrate on writing a simple script describing the behavior of its own hardware device. The combination of the simplicity of preparing a script in general and the removal of the burden of dealing with the complexity of system interface makes it much easier for a hardware vendor to write a driver script for use in the script-based device driver architecture of accordance with the invention.","In the embodiment of , a scripting driver  is provided for operating scanners according to their respective scripts. This scripting driver for scanners is hereinafter referred to as the \u201cScanner Scripting Driver.\u201d The Scanner Scripting Driver  uses the script engine  to interpret and execute the textual instructions in the driver script  at run-time to operate the scanner.","The Scanner Scripting Driver  implements the interface functions required by the image acquisition architecture for interacting with the Image Acquisition Service . When the Scanner Scripting Driver  receives a request from the application  through the Image Acquisition Service  to operate the scanner , it uses the script engine  to access the driver script  for that scanner. The script engine  reads the driver script , and parses and interprets the programming instructions in the pertinent portion of the script corresponding to the requested operation. When a programming instruction in the script calls a function of one of the pre-defined objects, the script engine  invokes the called object function. In the shown embodiment, an I\/O block  is provided to handle all communication details with the kernel model drivers. Other files may be included, such as a script that contains general utility functions that can be common to all the driver scripts provided by a vendor.","In the illustrated embodiment, the driver script  for the scanner  includes two data files (.GSD files). One of the files is a device model data file , which contains features, settings, and valid value information about the scanner being operated. The other file is a device family data file , which contains control structures like tables, data on communication specifics, and script routines defining the common behavior of the entire family of the hardware device.","In one embodiment, an installation file (.INF) is used for installing the driver script for a scanner. The installation file performs the following tasks during installation. First, the Scanner Scripting Driver file is copied to the system directory. The data files forming the driver script for the scanner are also copied to the system directory. An entry is created in the DeviceData section of the driver registration for the device to contain the name of the device model data file. The family data file is simply referenced in the device model data file in a manner similar to the C\/C++ \u201c#include\u201d statement. Entries are also created in the DeviceData section to define the numbers and names for communication pipes that the script engine has to create. Those pipe numbers will be references in the script instructions when a read or write operation is performed on the device. A DriverResource entry is also created in the DeviceData section to contain the name of a Resource DLL file for the device. The Resource DLL file is preferably a vendor-supplied optional resource file that contains driver specific information, error mapping, and localized strings.","As described above, the programming instructions in the driver scripts are written in a pre-selected scripting language. The scripting language used to write the driver script should have a clear grammar and be sufficiently rich to allow a clearly description of a device on a feature level as well as on a communication level. There are no particular requirements on the scripting language used. Thus, existing scripting languages, such as Jscript, VBScript, etc., or programming languages may be adapted for writing driver scripts. Alternatively, a new scripting language may be developed for this particular purpose.","Moreover, it will be appreciated that the scripting language is replaceable in that the system does not have to be tied to a particular chosen scripting language. For instance, by providing scripting engines for handling different scripting languages, the system can accommodate scripting drivers written in different existing or newly developed scripting languages.","In one embodiment, a simple scripting language has been developed for writing driver scripts. The following description describes first the syntax of the scripting language used in the embodiment and then the objects and their functions callable by the script instructions in that embodiment. It should be appreciated that the scripting language is described below only for the purpose of providing an example and should not be viewed as imposing any restrictions on the scope of the invention.","I. Script Syntax","A. Conditional Statements",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if","conditional IF"]},{"entry":[{},"else","conditional ELSE"]},{"entry":[{},"while","while loop"]},{"entry":[{},"||","logical OR"]},{"entry":[{},"&&","logical AND"]},{"entry":[{},"!","logical NOT"]},{"entry":[{},">","greater than"]},{"entry":[{},"<","less than"]},{"entry":[{},"==","equal to"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"B. Supported Operators",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"+","addition operator"]},{"entry":[{},"\u2212","subtraction operator"]},{"entry":[{},"\/","division operator"]},{"entry":[{},"*","multiplication operator"]},{"entry":[{},"|","bitwise OR operator"]},{"entry":[{},"&","bitwise AND operator"]},{"entry":[{},"\u02dc","bitwise NOT operator"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"C. Functional Elements","function function definition keyword",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"{","begin code block symbol"]},{"entry":[{},"}","end code block symbol"]},{"entry":[{},"return","return keyword (function returning a"]},{"entry":[{},{},"value)"]},{"entry":[{},"goto","goto a specific label (ie. ScriptExit:)"]},{"entry":[{},";","statement termination symbol"]},{"entry":[{},"[","begin array symbol"]},{"entry":[{},"]","end array symbol"]},{"entry":[{},":","termination symbol for labels (ex."]},{"entry":[{},{},"cleanup:)"]},{"entry":[{},"#include","include directive for additional files."]},{"entry":[{},"#define","define for value associations."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG","32 bit signed long value"]},{"entry":[{},"FLOAT","32 bit floating point value"]},{"entry":[{},"CHAR","8 bit signed value"]},{"entry":[{},"BYTE","8 bit signed value"]},{"entry":[{},"BOOL","32 bit signed long value (same as LONG,"]},{"entry":[{},{},"simple TRUE\/FALSE)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"structure keyword for structure definitions","Example of a Structure",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"structure MyStruct {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG 1FirstValue;"]},{"entry":[{},"LONG 1SecondValue;"]},{"entry":[{},"BYTE TwentyBytes [20];"]},{"entry":[{},"LONG TwentyLongs [20];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"MyStruct TwentyStructures [20];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/","single line comment"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CHR","Creates an escape character from an ASCII"]},{"entry":[{},{},"value."]},{"entry":[{},"STR","Converts a numeric value into the string"]},{"entry":[{},{},"equal (e.g., STR(100) converts the number"]},{"entry":[{},{},"100 to \u201c100\u201d.)"]},{"entry":[{},"LEN","Length in bytes of a string, not including"]},{"entry":[{},{},"NULL Terminator (e.g., LEN(\u201c100\u201d) equals 3)."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"An exemplary script snippet using the scripting syntax described above is given in EXAMPLE 1 below:",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function BOOL IsCarriageHome( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BYTE byteValue = \u2018X\u2019;"]},{"entry":[{},"LONG ErrorCode = S_OK;"]},{"entry":[{},"\/\/ Write a BYTE value to the device"]},{"entry":[{},"DeviceControl.RawWrite(0,byteValue,1,100);"]},{"entry":[{},"ErrorCode = LastError.GetLastError( );"]},{"entry":[{},"if(ErrorCode != S_OK)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return FALSE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/ Read a BYTE value from the device"]},{"entry":[{},"DeviceControl.RawRead(0,byteValue,1,100);"]},{"entry":[{},"ErrorCode = LastError.GetLastError( );"]},{"entry":[{},"if(ErrorCode != S_OK)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return FALSE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(byteValue == \u2018A\u2019)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return TRUE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return FALSE;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"As mentioned above, the programming instructions in a driver script may call functions of a pre-defined set of objects provided by the system. In the embodiment of , the objects are exported by the Scanner Scripting Driver  and include four objects named DeviceProperty, DeviceAction, DeviceControl, and LastError. These objects are described in detail below.","A. The DeviceProperty Object","The DeviceProperty object handles property initialization and direct property manipulation for the driver. By using this object, the driver script is able to modify device properties and performing validation on the property settings. The function members of the DeviceProperty object include:\n\n","B. The DeviceAction Object","This object is used to control device communication events, including setting values to the device. Commands issued to the device will be trapped and dispatched accordingly through local functions defined within the script. The device communication process is controlled by events triggered by the Scanner Scripting Driver . This object includes the following data members:\n\n","The device actions are defined below:\n\n","C. The DeviceControl Object","The DeviceControl object allows the driver script to control the hardware device. As mentioned above, in the present embodiment, all objects are exported by the Scanner Scripting Driver, so device operations are not actually executed by the script. Each read or write call will require a timeout value. If this timeout value is reached before successful communication is completed, an error will be produced. The script will be required to have provisions for checking all returns from DeviceControl calls. Separate methods are provided for different I\/O pathways. This is to help the Scanner Scripting Driver manage data pipes and I\/O specifics that are related to a given BUS layer. The calls are abstracted into simple Read\/Write methods so the script writer does not have to be concerned with details about the BUS. A pipe-index system is used to indicate which pipe (device data handle) is needed for the read\/write operation. The common helper functions mentioned above are provided for all objects, so the scriptwriter can custom fit the data to their device needs. This will also help extend any limitations place on the script writer by the scripting language.","The function members (or methods) of the DeviceControl object are described below:\n\n","D. The LastError Object","The LastError object is used to manage the error state of an executing script. The script calls this object to set or get error conditions on the script side. The Scanner Scripting Driver will also be able to use the same object to set or get the error conditions on the scripting driver side. The script will be able to access errors set by the Scanner Scripting Driver.","Before every call to a script operation, such as SCAN or SETXRESOLUTION, the error object is cleared to S_OK. The script will check this object before continuing the control flow. Errors on the side of the Scanner Scripting Driver can occur and may require the execution of the script to be stopped. Errors are preferably map to a 1 to 1 ratio, so the Scanner Scripting Driver can pass them directly to the calling service. If a custom device error needs to be returned, the calling script preferably specifies a resource ID associated with the error details. During installation, a script-based driver has the option to install a binary DLL that contains localized strings for error output.","The Errors may be represented in two ways. In the first way, the error code returned are mapped on a 1 to 1 basis with the error information of the image acquisition system. In the second way, the error code returned is a driver-defined error code, and requires information in a Resource DLL file for more details. In that case, a resource ID for the corresponding Resource DLL file is also returned.","The LastError object has two functions:\n\n","By way of example, certain exemplary portions of driver scripts for a scanner are provided below. To facilitate an understanding of the scripts, a general data acquisition procedure for an image-acquisition device (such as a scanner) and definitions of device properties for the scanner are described first.","A. General Data Acquisition Procedure","Referring now to , the data acquisition process by an image acquisition device in the embodiment of  can generally divided into four device states: device pre-initialized, device initialized, device ready, and device operational. In the device pre-initialized state , the device is in a power-on state. All communication channels with the hardware device have also been created by the Scanner Scripting Driver.","In the device initialized state , basic communication verifications are done. The things to be verified include, for example, whether data can be sent to the device, and whether it is responding. Failure of the device to response causes the initialization to fail, and the driver will not be loaded. In that case, proper error codes are returned to indicate the cause of failure.","On the other hand, if communication with the device is verified, the operation moves into the device ready state , which is the common state for the device before and after an acquisition or when device settings are applied. In the device ready state, the device is ready for receiving communications. All the communication handles are open and are verified to be working properly. The device is \u201cidle\u201d and any activity causes a transition into the device operational state .","There are three major operations in the device operational state : data acquisition, setting negotiations, and setting verification. In the data acquisition operation, the device is busy acquiring data, and the acquired data are sent to the processing requesting the acquisition. If the data acquisition is somehow cancelled, the device should transition to the device ready state . Before that transition is made, the device is reset to a known valid state.","In the setting negotiation operation, device property values are written to the device. Failure to negotiate the settings and any failure in the writing causes a proper error code to be set to indicate the error situation (e.g., failed to write X resolution to the device, etc.). The device is then reset to a known valid state, and a transition to the device ready state  is made. In the setting verification operation, the device property values are validated on a device level, i.e., the device will report a setting failure via a READ or WRITE call to the device. Any failure in verification results in the setting of a corresponding error code, the resetting of the device, and a transition to the device ready state .","In the data acquisition process, the acquisition request specifies the size of the data to be acquired. It is up to the script to coordinate the request with the device. For example, in one scenario, the Scanner Scripting Driver may request a 100K chunk of data but the device can only handle a maximum data size of 64K. It is up to the script to break the request into one 64K chunk, and one 36k chunk. In one embodiment, all scan buffers are maintained by the Scanner Scripting Driver. The script will specify operations on data in the buffer, such as scan reads or image processing. The Scanner Scripting Driver does not return the operating buffer to the calling application until the script's operation is completed. If an error occurs, control is handed back to the script, and the script indicates the next action. For example, an error may result in a retry, or the script may indicate what to do based on the severity of the error).","B. Definition of Scanner Properties","The device properties for a scanner used in an embodiment are described below:\n\n","Their current values should be in the range specified by the parameter RANDGE or in a list defined by SetValidList or SetValueRange.\n\n","C. Specific Examples of Driver Scripts for A Scanner","The following are exemplary portions of driver scripts for a scanner. EXAMPLE 2 below shows a script portion for getting data from the scanner, with error checking implemented:",{"@attributes":{"id":"p-0083","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"OOL GetDataFromDevice( LONG 1RequestedBufferSize )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG 1MaxScanRequest = 65535; \/\/ 64k chunk"]},{"entry":[{},"LONG 1TotalBytesToRead = 1RequestedBufferSize;"]},{"entry":[{},"LONG 1BytesToRead = 1MaxScanRequest;"]},{"entry":[{},"LONG ErrorCode = ERROR_SUCCESS;"]},{"entry":[{},"\/\/ retry 5 times before failure occurs"]},{"entry":[{},"LONG 1RetryCount = 5;"]},{"entry":[{},"while(1TotalBytesToRead > 0)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ check for small requests"]},{"entry":[{},"if(1BytesToRead > 1TotalBytesToRead)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1BytesToRead = 1TotalBytesToRead;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/ read modified chunk size into buffer"]},{"entry":[{},"DeviceControl.ScanRead(0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1BytesToRead,"]},{"entry":[{},"1BytesRead,"]},{"entry":[{},"100);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ check for any errors from ScanRead( )"]},{"entry":[{},"ErrorCode = LastError.GetLastError( );"]},{"entry":[{},"if(ErrorCode == S_OK)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ decrement total bytes to read counter"]},{"entry":[{},"1TotalBytesToRead \u2212= 1BytesRead;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ reset retry counter to five"]},{"entry":[{},"1RetryCount = 5;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if (ErrorCode == E_DEVICE_TIMED_OUT)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ trap timeout error and retry up to"]},{"entry":[{},"\/\/ five times. After five times it is"]},{"entry":[{},"\/\/ considered a true failure."]},{"entry":[{},"1RetryCount = 1RetryCount \u2212 1;"]},{"entry":[{},"if(1RetryCount <= 0)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"goto GetDataFromDeviceExit;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ some other error happened, lets set the"]},{"entry":[{},"\/\/ error to the appropriate context for the"]},{"entry":[{},"\/\/ script's current operation."]},{"entry":[{},"LastError.SetLastError(SCRIPT_CUSTOM_ERROR, 5);"]},{"entry":[{},"goto GetDataFromDeviceExit:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"GetDataFromDeviceExit:"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return FALSE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return TRUE;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following EXAMPLE 3 illustrates how device-specific properties are defined in the script portion contained in a device model data file for a scanner. For clarity of illustration, error checking has been omitted.",{"@attributes":{"id":"p-0085","num":"0162"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"#include \u201chpsclfam.gsd\u201d \/\/ include the operating script"},{"entry":"function BOOL IntializeDeviceProperties( )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (MODEL == \u201cHewlett-Packard ScanJet 6100C\u201d)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Initialize valid resolution array"]},{"entry":[{},"LONG ValidResolutions[7];"]},{"entry":[{},"ValidResolutions[0] = 75;"]},{"entry":[{},"ValidResolutions[1] = 100;"]},{"entry":[{},"ValidResolutions[2] = 150;"]},{"entry":[{},"ValidResolutions[3] = 200;"]},{"entry":[{},"ValidResolutions[4] = 300;"]},{"entry":[{},"ValidResolutions[5] = 600;"]},{"entry":[{},"ValidResolutions[6] = 1200;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DeviceProperty.SetValidList(XRESOLUTION,ValidResolutions);"]},{"entry":[{},"DeviceProperty.SetValidList(YRESOLUTION,ValidResolutions);"]},{"entry":[{},"DeviceProperty.SetValidRange(XPOSITION,0,2549,2549,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(XPOSITION,0);"]},{"entry":[{},"DeviceProperty.SetValidRange(YPOSITION,0,4199,4199,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(YPOSITION,0);"]},{"entry":[{},"DeviceProperty.SetValidRange(XEXTENT,1,2550,1,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(XEXTENT,2550);"]},{"entry":[{},"DeviceProperty.SetValidRange(YEXTENT,1,4200,1,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(YEXTENT,4200);"]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Initialize valid resolution array"]},{"entry":[{},"LONG ValidResolutions[6];"]},{"entry":[{},"ValidResolutions[0] = 75;"]},{"entry":[{},"ValidResolutions[1] = 100;"]},{"entry":[{},"ValidResolutions[2] = 150;"]},{"entry":[{},"ValidResolutions[3] = 200;"]},{"entry":[{},"ValidResolutions[4] = 300;"]},{"entry":[{},"ValidResolutions[5] = 600;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DeviceProperty.SetValidList(XRESOLUTION,ValidResolutions);"]},{"entry":[{},"DeviceProperty.SetValidList(YRESOLUTION,ValidResolutions);"]},{"entry":[{},"DeviceProperty.SetValidRange(XPOSITION,0,2549,2549,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(XPOSITION,0);"]},{"entry":[{},"DeviceProperty.SetValidRange(YPOSITION,0,3506,3506,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(YPOSITION,0);"]},{"entry":[{},"DeviceProperty.SetValidRange(XEXTENT,1,2550,1,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(XEXTENT,2550);"]},{"entry":[{},"DeviceProperty.SetValidRange(YEXTENT,1,3507,1,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(YEXTENT,3507);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/ common property settings"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DeviceProperty.SetCurrentValue(XRESOLUTION,150);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(YRESOLUTION,150);"]},{"entry":[{},"DeviceProperty.SetValidRange(BRIGHTNESS,\u2212127,127,32,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(BRIGHTNESS,32);"]},{"entry":[{},"DeviceProperty.SetValidRange(CONTRAST,\u2212127,127,12,1);"]},{"entry":[{},"DeviceProperty.SetCurrentValue(CONTRAST,12);"]},{"entry":[{},"\/\/ Initialize valid data type array"]},{"entry":[{},"LONG ValidDataTypes[3];"]},{"entry":[{},"ValidDataTypes[0] = 0;"]},{"entry":[{},"ValidDataTypes[1] = 2;"]},{"entry":[{},"ValidDataTypes[2] = 3;"]},{"entry":[{},"DeviceProperty.SetValidList(DATATYPE,ValidDataTypes)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(DATATYPE,2)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(BITDEPTH,8)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(NEGATIVE,1)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(PIXELORDER,0)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(PIXELFORMAT,1)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(BEDWIDTH,8500)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(BEDHEIGHT,11693)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(OPTICALX,300)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(OPTICALY,300)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(ADFSUPPORT,0)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(TPASUPPORT,0)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(ADFWIDTH,0)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(ADFHEIGHT,0)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(ADFVJUSTIFY,0)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(ADFHJUSTIFY,0)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(ADFMAXPAGES,30)"]},{"entry":[{},"DeviceProperty.SetCurrentValue(FIRMWAREVER,\u201c1.02a\u201d)"]},{"entry":[{},"return TRUE;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following Example 4 is another portion of a driver script for a scanner that shows how device actions are handled in the script. Error checking has been omitted for clarity.",{"@attributes":{"id":"p-0087","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function VOID DeviceAction_DeviceActionEvent( )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Handle initialization of device properties"]},{"entry":[{},"if(DeviceAction.Action == INITIALIZE_ID)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ this will call the device's specific property"]},{"entry":[{},"\/\/ initialization script function specified in the"]},{"entry":[{},"\/\/ product line file."]},{"entry":[{},"InitializeDeviceProperties( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/ Handle setting a device property"]},{"entry":[{},"else if(DeviceAction.Action == SETVALUE_ID)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if(DeviceAction.ValueID == XRESOLUTION)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(DeviceAction.Value)));"]},{"entry":[{},"DeviceControl.RawWrite(0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CHR(27) +"]},{"entry":[{},"\u201c*a\u201d +"]},{"entry":[{},"STR(DeviceAction.Value) +"]},{"entry":[{},"\u201cR\u201d, DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == YRESOLUTION)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(DeviceAction.Value)));"]},{"entry":[{},"DeviceControl.RawWrite(0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CHR(27) +"]},{"entry":[{},"\u201c*a\u201d +"]},{"entry":[{},"STR(DeviceAction.Value) +"]},{"entry":[{},"\u201cS\u201d, DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == XPOSITION)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG XresSetting = 0;"]},{"entry":[{},"DeviceProperty.GetCurrentValue(XRESOLUTION,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XResSetting);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG NewXPos = DeviceAction.Value;"]},{"entry":[{},"NewXPos = ((NewXPos * 300) \/ XResSetting);"]},{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(NewXPos)));"]},{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201c*f\u201d +"]},{"entry":[{},"STR(NewXPos) +"]},{"entry":[{},"\u201cX\u201d,DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == YPOSITION)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG YResSetting = 0;"]},{"entry":[{},"DeviceProperty.GetCurrentValue(YRESOLUTION,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"YResSetting);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG NewYPos = DeviceAction.Value;"]},{"entry":[{},"NewYPos = ((NewYPos * 300) \/ YResSetting);"]},{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(NewYPos)));"]},{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201c*f\u201d +"]},{"entry":[{},"STR(NewYPos) +"]},{"entry":[{},"\u201cY\u201d,DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == XEXTENT)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG XresSetting = 0;"]},{"entry":[{},"DeviceProperty.GetCurrentValue(XRESOLUTION,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XResSetting);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG NewXExt = DeviceAction.Value;"]},{"entry":[{},"NewXExt = ((NewXExt * 300) \/ XResSetting);"]},{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(NewXExt)));"]},{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201c*f\u201d +"]},{"entry":[{},"STR(NewXExt) +"]},{"entry":[{},"\u201cP\u201d,DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == YEXTENT)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG YResSetting = 0;"]},{"entry":[{},"DeviceProperty.GetCurrentValue(YRESOLUTION,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"YResSetting);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG NewYExt = DeviceAction.Value;"]},{"entry":[{},"NewYExt = ((NewYExt * 300) \/ YResSetting);"]},{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(NewYExt)));"]},{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201c*f\u201d +"]},{"entry":[{},"STR(NewYExt) +"]},{"entry":[{},"\u201cQ\u201d,DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == DATATYPE)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if(DeviceAction.Value == 0)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201c*a0T\u201d,5,100);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201c*a1G\u201d,5,100);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(DeviceAction.Value == 2)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201c*a4T\u201d,5,100);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201c*a8G\u201d,5,100);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(DeviceAction.Value == 3)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201c*a5T\u201d,5,100);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201c*a24G\u201d,6,100);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ unsupported data type, FAIL this call"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == BRIGHTNESS)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(DeviceAction.Value)));"]},{"entry":[{},"DeviceControl.RawWrite(0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CHR(27) +"]},{"entry":[{},"\u201c*a\u201d +"]},{"entry":[{},"STR(DeviceAction.Value) +"]},{"entry":[{},"\u201cK\u201d,DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == CONTRAST)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONG DataLength = 0;"]},{"entry":[{},"DataLength = (4 + LEN(STR(DeviceAction.Value)));"]},{"entry":[{},"DeviceControl.RawWrite(0,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CHR(27) +"]},{"entry":[{},"\u201c*a\u201d +"]},{"entry":[{},"STR(DeviceAction.Value) +"]},{"entry":[{},"\u201cL\u201d,DataLength,100)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if(DeviceAction.ValueID == NEGATIVE)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,chr(27) + *a1I\u201d,5,100);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"\u2003\/\/ Handle getting a device property"},{"entry":"\u2003else if(DeviceAction.Action == GETVALUE_ID)"},{"entry":"\u2003{"},{"entry":"\u2003}"},{"entry":"\u2003\/\/ Handle getting a device property"},{"entry":"\u2003else if(DeviceAction.Action == RESETDEVICE_ID)"},{"entry":"\u2003{"},{"entry":"\u2003}"},{"entry":"\u2003\/\/ Handle starting a scan"},{"entry":"\u2003else if(DeviceAction.Action == SCAN_FIRST_ID)"},{"entry":"\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) + \u201c*f0S\u201d,5,100);"]},{"entry":[{},"GetDataFromDevice(DeviceAction.Value);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"\u2003\/\/ Handle scanning data"},{"entry":"\u2003else if(DeviceAction.Action == SCAN_NEXT_ID)"},{"entry":"\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GetDataFromDevice(DeviceAction.Value);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"\u2003\/\/ Handle finishing a scan"},{"entry":"\u2003else if(DeviceAction.Action == SCANFINISHED_ID)"},{"entry":"\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) + CHR(69),2,100);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"\u2003\/\/ Handle canceling a scan"},{"entry":"\u2003else if(DeviceAction.Action == SCAN_CANCEL_ID)"},{"entry":"\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DeviceControl.RawWrite(0,CHR(27) + CHR(69),2,100);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"\u2003\/\/ Handle default case"},{"entry":"\u2003else"},{"entry":"\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ unknown action ID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"}"},{"entry":"function BOOL GetDataFromDevice(LONG 1BytesToRead)"},{"entry":"{"},{"entry":"\u2003LONG 1BytesRead = 0;"},{"entry":"\u2003LONG 1ErrorCode = S_OK;"},{"entry":"\u2003DeviceControl.ScanRead(0,1BytesToRead,1BytesRead,100);"},{"entry":"\u20031ErrorCode = LastError.GetLastError( );"},{"entry":"\u2003if(1ErrorCode == S_OK)"},{"entry":"\u2003return TRUE;"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In view of the many possible embodiments to which the principles of this invention may be applied, it should be recognized that the embodiment described herein with respect to the drawing figures is meant to be illustrative only and should not be taken as limiting the scope of invention. For example, those of skill in the art will recognize that the elements of the illustrated embodiment shown in software may be implemented in hardware and vice versa or that the illustrated embodiment can be modified in arrangement and detail without departing from the spirit of the invention. Therefore, the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
