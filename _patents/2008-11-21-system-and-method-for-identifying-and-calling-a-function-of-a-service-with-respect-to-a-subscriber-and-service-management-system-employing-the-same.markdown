---
title: System and method for identifying and calling a function of a service with respect to a subscriber and service management system employing the same
abstract: Various systems and methods for identifying and calling functions to perform various tasks. One aspect provides a method of exposing a set of device-specific functions associated with a subscriber. In one embodiment, the method includes: (1) identifying service descriptions associated with the subscriber, (2) mapping end points associated with the subscriber to roles in at least one of the service descriptions and (3) collecting at least one function associated with the at least one role in the at least one of the service descriptions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08059565&OS=08059565&RS=08059565
owner: Alcatel Lucent
number: 08059565
owner_city: Paris
owner_country: FR
publication_date: 20081121
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application Ser. No. 60\/989,730, filed by Dholakia, et al., on Nov. 21, 2007, entitled \u201cMethod and System for Remote Device Management,\u201d commonly assigned with this application and incorporated herein by reference. This application is also related to the following U.S. patent applications, which are filed on even date herewith, commonly assigned with this application and incorporated herein by reference:",{"@attributes":{"id":"p-0003","num":"0002"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Ser. No.","Inventors","Title"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["12\/276,254","Dholakia,","\u201cService Management System and"]},{"entry":[{},"et. al.","Method of Operation thereof\u201d"]},{"entry":["12\/276,260","Pelley,","\u201cNormalization Engine and Method of"]},{"entry":[{},"et. al.","Requesting a Key Or Performing an"]},{"entry":[{},{},"Operation Pertaining to an End"]},{"entry":[{},{},"Point\u201d"]},{"entry":["12\/276,262","Pelley,","\u201cService Management System and"]},{"entry":[{},"et. al.","Method of Executing a Policy\u201d"]},{"entry":["12\/276,265","Pelley","\u201cSystem and Method for Generating a"]},{"entry":[{},{},"Visual Representation of a Service"]},{"entry":[{},{},"and Service Management System"]},{"entry":[{},{},"Employing the Same\u201d"]},{"entry":["12\/275,269","Pelley,","\u201cSystem and Method for Remotely"]},{"entry":[{},"et. al.","Activating a Service and Service"]},{"entry":[{},{},"Management System Incorporating the"]},{"entry":[{},{},"Same\u201d"]},{"entry":["12\/276,272","Pelley","\u201cApplication and Method for"]},{"entry":[{},{},"Dynamically Presenting Data"]},{"entry":[{},{},"Regarding an End Point or a Service"]},{"entry":[{},{},"and Service Management System"]},{"entry":[{},{},"Incorporating the Same\u201d"]},{"entry":["12\/276,273","Pelley,","\u201cService Diagnostic Engine and"]},{"entry":[{},"et. al.","Method and Service Management System"]},{"entry":[{},{},"Employing the Same\u201d"]},{"entry":["12\/276,275","Pelley","\u201cSelf-Service Application for a"]},{"entry":[{},{},"Service Management System and Method"]},{"entry":[{},{},"of Operation Thereof\u201d"]},{"entry":["12\/276,278","Pelley","\u201cCustomer Service Representative"]},{"entry":[{},{},"Support Application for a Service"]},{"entry":[{},{},"Management System and Method of"]},{"entry":[{},{},"Operation Thereof\u201d"]},{"entry":["12\/276,279","Pelley,","\u201cSystem and Method for Remotely"]},{"entry":[{},"et. al.","Repairing and Maintaining a"]},{"entry":[{},{},"Telecommunication Service Using"]},{"entry":[{},{},"Service Relationships and Service"]},{"entry":[{},{},"Management System Employing the"]},{"entry":[{},{},"Same\u201d"]},{"entry":["12\/276,286","Dholakia,","\u201cSystem and Method for Provisioning"]},{"entry":[{},"et. al.","and Unprovisioning Multiple End"]},{"entry":[{},{},"Points With Respect to a Subscriber"]},{"entry":[{},{},"and Service Management System"]},{"entry":[{},{},"Employing the Same\u201d"]},{"entry":["12\/276,281","Pelley,","\u201cApplication and Method for"]},{"entry":[{},"et. al.","Generating Automated Offers of"]},{"entry":[{},{},"Service and Service Management"]},{"entry":[{},{},"System Incorporating the Same\u201d"]},{"entry":["12\/276,287","Dholakia,","\u201cSystem and Method for Identifying"]},{"entry":[{},"et. al.","Functions and Data With Respect to a"]},{"entry":[{},{},"Service and a Subscriber and Service"]},{"entry":[{},{},"Management System Employing the"]},{"entry":[{},{},"Same\u201d"]},{"entry":["12\/276,288","Dholakia,","\u201cSystem and Method for Invoking a"]},{"entry":[{},"et. al.","Function of a Service in Response to"]},{"entry":[{},{},"an Event and Service Management"]},{"entry":[{},{},"System Employing the Same\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"This application relates to remote management of fixed-line and mobile devices, and, more particularly, to activation, provisioning, support, management and assurance of consumer and business services spanning one or more fixed-line devices and one or more mobile devices.","Network service providers are called upon to support a large variety of networked devices, including devices coupled to home networks (e.g., residential gateways, set-top boxes and voice-over-IP, or VoIP, adapters) and cellular networks (e.g. smart phones and pocket computers). Given the proliferation of such devices and the distributed nature of the networks involved, remote management of such devices is highly desirable.","For example, demand for smart phones and other advanced handsets is growing faster than anticipated as users look for new ways to increase their personal and professional productivity. In 2005, year-over-year growth in the smart phone market exceeded 70%, and the industry experts expect that trend to continue for the next several years. In fact by 2009, it is estimated that smart phones will represent almost 30% of all new handsets sold\u2014up from less than three percent in 2004.","As smart phones and services for smart phones boom, so do the challenges. Today, the complexity often associated with smart phones is driving customer service costs up and serves as a potential inhibitor as mobile network operators strive to achieve mass-market adoption with these sophisticated devices. In fact, consumers are finding mobile services increasingly confusing and issues around ease-of-use are holding them back from buying and using third generation (3G) handsets and services.","Wireless service providers who sell and support smart phones and their associated data services face the prospect of rising customer support costs due to the complexity associated with these devices and services. In 2007, the support costs for smart phones will surpass that of feature phones. The following are few of the top reasons for this support cost.","Multiple contacts are made to a helpdesk to solve a single problem.","34% of users have never solved a problem with a single contact to the helpdesk.","Calls last two to three times longer than calls from users of feature phones.","It is common practice to escalate care from a helpdesk (Tier 1) to expensive technicians (Tier 2 and Tier 3).","FMC (Fixed-Mobile Convergence) will add to the support burden. 89% of early adopters are more likely to go to CE vendors for support. Mainstream consumers are three times more likely to look to their service provider for support.","Similarly, network providers that are coupled to home networks (e.g., Digital Subscriber Link, or DSL, and cable) find those networks coupled to a variety of customer premises equipment (CPE) within the homes that are gradually becoming more and more sophisticated. Customer issues with such devices are no less taxing upon support staff and support infrastructure.","The Open Mobile Alliance (OMA) is currently defining a number of standards for managing functionality on mobile devices. These include protocols for device management (OMA-DM), client provisioning (OMA-CP), firmware updates, data synchronization (OMA-DS) and the like. Devices that support at least some of these protocols are becoming prevalent. A support solution that utilizes these protocols and provides a usable console for customer support is the only way network providers and mobile carriers can handle support for the increasing number of devices in the market.","It is therefore desirable to provide a support solution that allows centralized management and control of remotely networked devices such as smart phones and CPE using protocols established for device management, updates, data synchronization and the like.","Various embodiments of a method and system for providing customer support with centralized management and control of mobile phones and customer premises equipment in order to aid users of such equipment with problems related to that equipment. In one embodiment, a user interface driven mechanism is provided to allow customer support representatives to manipulate remote devices in, for example, the following manners: access information about the remote devices and the users thereof, including history of issues with a particular device, device provisioning, access to diagnostics of a device, ability to upgrade firmware\/software of a device, synchronization of data, enablement of security features, remote control of devices, service and application provisioning, defining and following policies related to service management for a variety of devices and resetting devices. Such functionality can be provided, for example, through the use of a device management server that uses a variety of appropriate protocols to communicate with the remote devices.","Another aspect provides a method of exposing a set of device-specific functions associated with a subscriber. In one embodiment, the method includes: (1) identifying service descriptions associated with the subscriber, (2) mapping end points associated with the subscriber to roles in at least one of the service descriptions and (3) collecting at least one function associated with the at least one role in the at least one of the service descriptions.","Yet another aspect provides a method of calling a function of a service with respect to a subscriber. In one embodiment, the method includes: (1) obtaining end points associated with the subscriber, (2) retrieving a service description associated with the subscriber from a service repository, (3) mapping end points associated with the subscriber into the service description, (4) retrieving the function from the service description and (5) passing the function into a script engine with the service description and the devices and services.","The following is intended to provide a detailed description of an example of the invention and should not be taken to be limiting of the invention itself. Rather, any number of variations may fall within the scope of the invention which is defined in the claims following the description. The use of the same reference symbols in different drawings indicates similar or identical items.","Introduction","Described herein are various embodiments of a management system that allows users to create, define and maintain services by defining the roles of its constituent devices and systems. Certain of the embodiments have the ability to map a given set of device and systems into roles. The roles may then be used to select key\/value pairs, alerts and management function from each device. Certain of the embodiments allow relationships to be specified between roles and between other services. Using the roles and relationships as a lens upon the service's constituent devices, service-wide key\/value pairs, alerts and management functions may be created.","In various embodiments to be described and illustrated herein, a method, apparatus and process are disclosed that allow for activation, provisioning, support (by call center, functions or self), management (by call center, functions or self) and assurance of consumer and business services spanning one or more fixed-line devices and one or more mobile devices, such as PCs, AAA servers, email servers, web servers and devices of every kind. Before describing the embodiments, an example computing and network environment within which the embodiments may operate will be described.","An Example Computing and Network Environment",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","1","120","1"]},"Communication between the client computers ()-(N) and the servers ()-(N) typically occurs over a publicly accessible network, such as a public switched telephone network (PSTN), a DSL connection, a cable modem connection or large bandwidth trunks (e.g., communications channels providing T1 or OC3 service). The client computers ()-(N) access the servers ()-(N) through, for example, a service provider. This might be, for example, an Internet Service Provider (ISP) such as America On-Line\u2122, Prodigy\u2122, CompuServe\u2122 or the like. Access is typically had by executing application specific software (e.g., network connection software and a browser) on the given one of the client computers ()-(N).","One or more of the client computers ()-(N) and\/or one or more of the servers ()-(N) may be, for example, a computer system of any appropriate design, in general, including a mainframe, a mini-computer or a personal computer system. Such a computer system typically includes a system unit having a system processor and associated volatile and non-volatile memory, one or more display monitors and keyboards, one or more diskette drives, one or more fixed disk storage devices and one or more printers. These computer systems are typically information handling systems which are designed to provide computing power to one or more users, either locally or remotely. Such a computer system may also include one or a plurality of I\/O devices (i.e., peripheral devices) which are coupled to the system processor and which perform specialized functions. Examples of I\/O devices include modems, sound and video devices and specialized communication devices. Mass storage devices such as hard disks, CD-ROM drives and magneto-optical drives may also be provided, either as an integrated or peripheral device. One such example, computer system, discussed in terms of the client computers ()-(N) is shown in detail in .","It will be noted that the variable identifier \u201cN\u201d is used in several instances in  to more simply designate the final element (e.g., the servers ()-(N) and the client computers ()-(N)) of a series of related or similar elements (e.g., servers and client computers). The repeated use of such variable identifiers is not meant to imply a correlation between the sizes of such series of elements, although such correlation may exist. The use of such variable identifiers does not require that each series of elements has the same number of elements as another series delimited by the same variable identifier. Rather, in each instance of use, the variable identified by \u201cN\u201d may hold the same or a different value than other instances of the same variable identifier.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2","b":["210","120","1","210","212","210","214","216","218","220","222","224","226","228","230","232","233","234","236","238","240","242","246","212","228","247","212","230","248","212"]},"The bus  allows data communication between a central processor  and a system memory , which may include RAM, ROM or flash memory, as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded and typically affords at least 16 megabytes of memory space. The ROM or flash memory may contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with the computer system  are generally stored on and accessed via a computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., CD-ROM drive ), a floppy disk unit  or other storage medium. Additionally, applications may be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via a network modem  or an interface .","The storage interface , as with the other storage interfaces of the computer system , may connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . The fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems. Many other devices can be connected, such as a mouse  connected to the bus  via serial port , a modem  connected to the bus  via serial port  and a network interface  connected directly to the bus . The modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). The network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). The network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., bar code readers, document scanners, digital cameras and so on).","Conversely, it is not necessary for all of the devices shown in  to be present to practice the invention. The devices and subsystems may be interconnected in different ways from that shown in . The operation of a computer system such as that shown in  is readily known in the art and is not discussed in detail in this application. Code to implement the invention may be stored in computer-readable storage media such as one or more of the system memory , the fixed disk , the CD-ROM  or the floppy disk . Additionally, the computer system  may be any kind of computing device and so includes personal data assistants (PDAs), network appliance, X-window terminal or other such computing device. The operating system provided on the computer system  may be MS-DOS\u00ae, MS-Windows\u00ae, OS\/2\u00ae, UNIX\u00ae, Linux\u00ae or other known operating system. The computer system  may also support a number of Internet access tools, including, for example, a Hypertext Transfer Protocol (HTTP)-compliant web browser having a JavaScript interpreter, such as Netscape Navigator\u00ae 3.0, Microsoft Explorer\u00ae 3.0 and the like.","The foregoing described embodiment wherein the different components are contained within different other components (e.g., the various elements shown as components of the computer system ). It is to be understood that such depicted architectures are merely examples, and that in fact, many other architectures can be implemented which achieve the same functionality. In an abstract, but still definite sense, any arrangement of components to achieve the same functionality is effectively \u201cassociated\u201d such that the desired functionality is achieved. Hence, any two components herein combined to achieve a particular functionality can be seen as \u201cassociated with\u201d each other such that the desired functionality is achieved, irrespective of architectures or intermediate components. Likewise, any two components so associated can also be viewed as being \u201coperably connected,\u201d or \u201coperably coupled,\u201d to each other to achieve the desired functionality.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3","FIG. 3"],"b":["300","210","310","320","330","340","310","320","330","340","210","247","248","210","310","210","320","330","340","210","320","330","340","340"]},"Referring to ,  and , a browser running on the computer system  employs a TCP\/IP connection to pass a request to the server , which can run an HTTP \u201cservice\u201d (e.g., under the WINDOWS\u00ae operating system) or a \u201cdaemon\u201d (e.g., under the UNIX\u00ae operating system), for example. Such a request can be processed, for example, by contacting an HTTP server employing a protocol that can be used to communicate between the HTTP server and the client computer. The HTTP server then responds to the protocol, typically by sending a \u201cweb page\u201d formatted as an HTML file. The browser interprets the HTML file and may form a visual representation of the same using local resources (e.g., fonts and colors).","Example Embodiments of a Service Management System","The functions referred to herein may be modules or portions of modules (e.g., software, firmware or hardware modules). For example, although the described embodiment includes software modules and\/or includes manually entered user commands, the various example modules may be application specific hardware modules. The software modules discussed herein may include script, batch or other executable files, or combinations and\/or portions of such files. The software modules may include a computer program or subroutines thereof encoded on computer-readable media.","Additionally, those skilled in the art will recognize that the boundaries between modules are merely illustrative and alternative embodiments may merge modules or impose an alternative decomposition of functionality of modules. For example, the modules discussed herein may be decomposed into sub-modules to be executed as multiple computer processes and, optionally, on multiple computers. Moreover, alternative embodiments may combine multiple instances of a particular module or sub-module. Furthermore, those skilled in the art will recognize that the functions described in example embodiment are for illustration only. Operations may be combined or the functionality of the functions may be distributed in additional functions in accordance with the invention.","Alternatively, such actions may be embodied in the structure of circuitry that implements such functionality, such as the micro-code of a complex instruction set computer (CISC), firmware programmed into programmable or erasable\/programmable devices, the configuration of a field-programmable gate array (FPGA), the design of a gate array or full-custom application-specific integrated circuit (ASIC), or the like.","Each of the blocks of the flow diagram may be executed by a module (e.g., a software module) or a portion of a module or a computer system user using, for example, a computer system such as the computer system . Thus, the above described method, the functions thereof and modules therefore may be executed on a computer system configured to execute the functions of the method and\/or may be executed from computer-readable media. The method may be embodied in a machine-readable and\/or computer-readable medium for configuring a computer system to execute the method. Thus, the software modules may be stored within and\/or transmitted to a computer system memory to configure the computer system to perform the functions of the module.","Such a computer system normally processes information according to a program (a list of internally stored instructions such as a particular application program and\/or an operating system) and produces resultant output information via I\/O devices. A computer process typically includes an executing (running) program or portion of a program, current program values and state information and the resources used by the operating system to manage the execution of the process. A parent process may spawn other, child processes to help perform the overall functionality of the parent process. Because the parent process specifically spawns the child processes to perform a portion of the overall functionality of the parent process, the functions performed by child processes (and grandchild processes, etc.) may sometimes be described as being performed by the parent process.","Such a computer system typically includes multiple computer processes executing \u201cconcurrently.\u201d Often, a computer system includes a single processing unit which is capable of supporting many active processes alternately. Although multiple processes may appear to be executing concurrently, at any given point in time only one process is actually executed by the single processing unit. By rapidly changing the process executing, a computer system gives the appearance of concurrent process execution. The ability of a computer system to multiplex the computer system's resources among multiple processes in various stages of execution is called multitasking. Systems with multiple processing units, which by definition can support true concurrent processing, are called multiprocessing systems. Active processes are often referred to as executing concurrently when such processes are executed in a multitasking and\/or a multiprocessing environment.","The software modules described herein may be received by such a computer system, for example, from computer readable media. The computer readable media may be permanently, removably or remotely coupled to the computer system. The computer readable media may non-exclusively include, for example, any number of the following: magnetic storage media including disk and tape storage media, optical storage media such as compact disk media (e.g., CD-ROM, CD-R, etc.) and digital video disk storage media, nonvolatile memory storage memory including semiconductor-based memory units such as flash memory, EEPROM, EPROM, ROM or application-specific integrated circuits (ASICs), volatile storage media including registers, buffers or caches, main memory, RAM and the like, and data transmission media including computer network, point-to-point telecommunication and carrier wave transmission media. In a UNIX-based embodiment, the software modules may be embodied in a file which may be a device, a terminal, a local or remote file, a socket, a network connection, a signal, or other expedient of communication or state change. Other new and various types of computer-readable media may be used to store and\/or transmit the software modules discussed herein.","Before describing various embodiments of management systems constructed according to the principles of the invention, some use cases or interactions will be described that provide a framework for understanding the management systems. Various of the embodiments of the management systems are directed to addressing the following categories of use cases or interactions: service activation, service management, service interruption and resumption and service offering. Service activation refers to all the use cases that involve creating (provisioning) and deleting (unprovisioning) a new service instance, or \u201csubscription.\u201d Service management refers to day-to-day management tasks involving a given service or subscription. Service interruption and resumption may be thought of as special types of service management that involve the loss and restoration of service. Service offering refers to new services that may be offered to a subscriber.","The categories of use cases that set forth above may be illustrated with reference to .  is a diagram illustrating relationships that may exist among a subscriber , a service  and various devices and systems . A service provider, such as a cellular phone company, an Internet service provider, a cable television company or a combination of these, offers one or more services to subscribers that involve devices and systems such as cell phones, set-top boxes, routers, cell towers, email servers, DSLAMs, landline phones and other mobile and customer premises equipment and network infrastructure. In the context of , the subscriber  takes out a subscription  to a service  offered by a service provider. The subscription contains state and other information that is both relative to the subscriber  and the service . The subscription calls for one or more associations  to be made between the subscriber  and various devices and systems . The subscriber  may own or lease one or more devices . The subscriber  may also be associated with one or more systems . Once the associations  are made, the devices and systems  assume roles  in delivering the service  to the subscriber . The roles describe to the service management system how the device should be managed.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 4"},"To activate a device (one of the devices and systems ) for a subscriber , the following steps may be taken. First, for a given device , the subscriber  associated with that device  is found. This is done by employing the associations . Once the associated subscriber  has been identified, a corresponding subscription  may then be used to determine the service or services  that should be provisioned on the device . For each service  that needs to be activated on the device , two alternative actions may be taken. Based upon the role the device  plays with respect to the service , settings on the device  may be set to provision the device. Alternatively or additionally, based on the roles of other devices and systems  relative to the service , settings on the other devices and systems may be set to provision them for the new device's presence.","Managing and provisioning a subscription involves either adding a new service to a subscriber or managing an existing service. To manage and provision a subscription  for a subscriber , the following steps may be taken. First, a service  is added to a subscriber , or an existing service  is modified. Devices and systems  associated with the subscriber are collected. Then, each device associated with the service  is mapped into the different roles  in the targeted service. This reveals what actions should be taken with respect to each device or system to provision the service .","Another use case that is a variant on the one above is a bulk change to an existing service for all subscribers. In this use case, existing subscriptions are retrieved to obtain a list of subscribers. Then, a list of devices and systems  is assembled for each subscriber. Using roles, changes are then applied to the devices and systems  to enable the bulk change.","Having described various use cases, one manner in which interaction may occur among roles, devices and systems, and the service level management interfaces will now be described.  is a diagram of one embodiment of a service description .  shows that the service description  includes service alerts , functions  and key\/value pairs . Roles are associated with the service alerts , the functions  and the key\/value pairs . The roles, designated Role A , Role B  and Role C  are associated as shown with the service alerts , the functions  and the key\/value pairs  as various arrows show. Meta data  is also associated with the key\/value pairs . Devices or systems ,  are associated with the roles , ,  as various arrows show.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 5","b":["500","520","525","535","540","545","535","505","510","515","540","545","520","525","530","500","500","550","535"]},"To make a role useful, the role is matched with a device.  is a diagram illustrating relationships that may exist among management functions (i.e., values, alerts and functions , , ), roles (e.g., ), capabilities and attributes  and devices and systems (e.g., ). In the embodiment of , the mechanism for doing this is twofold. First, a role may be matched to a device or a system based on the known attributes of the device or system. Second, a role may be matched to a device or a system based upon the known capabilities of the device or system.","Device attributes are known aspects of the device, e.g., the type, serial number, MAC address, manufacture date, make, model, service tags, device ID or operating system of the device or system. Other attributes may include the firmware version, hardware version, embedded device, locale (language), and physical location. Device attributes, in the simplest form, could be a list of known key\/value pairs associated to the device.","Capabilities are similar to device attributes. In this case, instead of a list of key\/value pairs, these are a list of values (without the key) of known capabilities about the device, e.g., generic email client, Microsoft Outlook\u00ae email client, phone, router or IPTV device. Other examples include network attached storage, media server, media renderer, camera, MMS client, SMS client, wireless access provider, wireless access client, printer, GPS, vibrate, Bluetooth, USB, Wi-Fi, clock, browser, QVGA, flight mode, caller ID, touchscreen, or fax.","Both the capabilities and the attributes can be provided to or retrieved from an external system, deduced or derived from known attributes and capabilities, queried directly from the device or system or a combination of these. For example, prior knowledge may exist that any device that has a serial number from a given manufacture starting with the letter W- has built-in Wi-Fi capabilities, or that Windows\u00ae Mobile phone supports OMA-DM.","It can be determined whether a given device or system matches a role by matching its attributes and capabilities (derived, discovered, or known) against the required attributes and capabilities of a given role. Each role defines a set of key\/value pairs, alerts, and functions that are relevant for devices of that role in the service description.","It should be noted that roles do not imply device type, model or brand. Direct mappings between devices and roles may occur in practice, but the mappings are flexible such that they may change as device attributes or capabilities change. For example, newer devices may support more roles than do older devices. One example of a role is a phone capable of functioning as an email client may play an \u201cEmailClient\u201d role in a service description associated with an email service. Other roles in an email service may include \u201cSMTPServer,\u201d \u201cPOPServer\u201d and \u201cIMAPServer.\u201d Roles in a data connectivity service may include \u201cHost,\u201d \u201cRouter,\u201d \u201cWireless Access Point,\u201d \u201cHead End,\u201d \u201cBorder Gateway\u201d and \u201cAuthentication, Authorization, Account Server.\u201d",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 7","FIG. 8"],"b":["705","710","715","720","725","730","735","710","715","720","725"]},"The service normalization block  employs an application programming interface (API), allowing it to exchange information with an interactive voice response (IVR) system , a console  for a customer service representative (CSR), a Self-Service Management (SSM) application module  and other applications ,  as may be found advantageous in a particular environment.","The optimal settings block  is a repository of predefined known good values used for the purposes of comparing key\/value pairs to determine diagnostic and state information. The key\/value pairs are also used during provisioning to set up a system or a device. The optimal settings block  may be regarded as a configuration repository that contains meta data about the configuration so that applications and other systems can look up known good values for the purpose of configuring (provisioning), diagnostic, and repair. The illustrated embodiment of the optimal settings block  is configured to define optimal values for any given key\/value pair based on the context of the device, subscriber, customer, or any other segmentation scheme that could be use to define different values for the same attribute (key). These values may be used by both the script engine  and directly by the service management engine  to determine whether or not a given key\/value pair is \u201coptimal.\u201d Optimal values may fall into three categories: (1) values predefined in the context of the service as being correct, (2) values defined based by a call to an extrinsic system or by subscriber input as being correct and (3) absolute values (which is often built into the logic of the script or service description logic and not stored externally). An example of a predefined optimal value is a POP server. The subscriber is aware of its identity, and it is the same for all subscribers. An example of an absolute value is \u201cconnectivity=good.\u201d An example of a value defined by a subscriber as being correct is a password, something that the subscriber chooses and is not defined before the subscriber chooses it.","The device normalization block  is configured to map normalized key\/value pairs to device-specific or system-specific key value pairs. Mapping may be performed by transformation, executing a script, or undertaking any other appropriate normalization mechanism.","The diagnostic engine  is configured to contain diagnostic rules and cause diagnostic rules to be executed in order to identify, characterize and present potential solutions to problems that may exist with devices or systems. The content repository is configured to provide a channel-independent mechanism for associating bearer (e.g., IVR voice flows, self-service portal web content and customer service articles) to diagnose a problem.","The segmentation block  and knowledge base  likewise employ a data sources abstraction layer , allowing it to communicate with systems ,  and provisioning servers and device managers , .","Different subscribers subscribe to different levels of service and live in different locations and under different circumstances. The segmentation block  is configured to enable other portions of the service management system to tailor responses to a subscriber based on his level of service, location and\/or circumstance.","The knowledge base  is configured to contain articles associated with known device, system and\/or service problems. When the diagnostic engine  identifies a problem area or a specified problem, it may provide articles from the knowledge based  to an application to allow the application to provide the article in turn to a subscriber or other user for informational purposes.","The data sources abstraction layer  is configured to operate as a protocol implementation and adaptation layer, allowing generic logic to interact with specific devices and systems without having to employ a device-specific or system-specific protocol.","The systems ,  are typically added by a particular service provider and interact with the service management system as needed. The provisioning servers and device managers ,  support various devices  intended for use by subscribers. In the illustrated embodiment, the provisioning servers and device managers ,  are management systems that manage large groups of devices that typically share the same protocol (e.g., a mobile device manager that manages  million phones using the OMA-DM protocol). The devices  are just CPE, such as phones and routers.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 8","b":["705","740","705","740"]},"A service management engine  enables a service provider to implement and manage services by means of the service normalization block  according to the various use cases described above. The illustrated embodiment of the service management engine  functions in two primary ways. First, the service management engine  manages functions defined by service descriptions. Second, the service management engine  provides a dynamic view of a given service.","The management of functions allows service descriptions to define named functions that can be called with contextual data derived from analyzing constituent devices and systems in their associated roles of a service.","The provision of a dynamic view of a given service enables a service description to associate key\/value pairs (data) with different roles and dynamically to gather data from the devices and systems so that data can be presented without the need for intrinsic knowledge of the data that is being collected. For example, a service-view dashboard capable of creating a map of devices with their associated data of interest (each categorized by their role in the service) may employ dynamic views of services. In the illustrated embodiment, the data itself is self-describing and typically presented in tabular form.","In an alternative embodiment, the service management engine  is also capable of providing a view of a given service, in which case the application does have prior intrinsic knowledge regarding the data that is being collected.","The first step in managing the service is to collect a list of the devices and systems that are associated to the subscriber of the service. A device repository  serves this purpose. In the illustrated embodiment, the device repository is external to the service normalization block .","The service management engine  employs a capabilities repository to obtain an expanded view on the capabilities of a device so that it may map it into a role. Often the only pieces of information obtained from extrinsic systems are the unique identifier of the device, e.g., its make and model. A device may be viewed as a list of attributes (e.g., further key\/value pairs). From those attributes, the capabilities of the device may be extrapolated. Extrapolation may involve expanding the known attributes of a device by deriving new attributes of a device based on the original attributes. For example, once the make and model of a system or device is obtained by means of a query, built-in rules may then be able to determine whether or not it has Wi-Fi capability.","A service description repository contains service descriptions. As described above, a service description includes at least some of: functions, key\/value pairs, alerts, roles (along with their associated key\/value pairs, alerts and actions) and relationships. Functions, at the service description level, can be actions exposed by a device, a script that can be executed, or a process (a series of scripts executed in a state engine).","A script engine  is configured to execute service-level functions. As described previously, a service-level function could be a script, a process or action (a series of scripts) or any other type of computer program. In the illustrated embodiment, the service management engine  retrieves a named script from a service description based on an event or request from a consumer of the service and passes it, along with a set of parameters, to the script engine  for execution. In the illustrated embodiment, the set of parameters includes: references to the constituent devices (categorized by role) and the service description. The script, once started, has access to the optimal values, the devices and systems (abstracted by device normalization or directly) and the service management system in general.","The service normalization block  has access to a capabilities repository . The capabilities repository  is configured to derive new attributes and capabilities through rules based on existing, known attributes. For example, it is known that Windows\u00ae Mobile cell phones have Internet browsers.","The service normalization block  employs the device normalization engine  configured to create an abstraction that provides a normal view of extrinsic device and systems. This allows the service description to be defined generically for devices and systems of the same class without having to include logic and cases for each device. For example, if one device is managed by OMA-DM and has an email client while another device that also has an email client is managed by Digital Subscriber Line (DSL) Forum standard TR069, both devices will have a Simple Mail Transfer Protocol (SMTP) server. However, the manner in which values are obtained can differ by protocol (OMA-DM versus TR069) and by key (the name for the value).","At least some of the systems and devices ,  have the capability to generate alerts or events. The alert\/event engine  is configured to receive these alerts or events and apply them against each service description to determine whether the alert applies to that service description. If a particular alert or event does apply to a particular service, the service management system is configured to obtain a corresponding action, script or process from the service description that may be executed to respond to the alert or event.","Identification and Calling of Subscriber-Associated Functions","Described hereinafter are various systems and methods for identifying and calling functions associated with a subscriber and\/or the devices or systems associated with the subscriber.","One embodiment is directed to exposing a set of device-specific functions associated with a subscriber. According to the embodiment, service descriptions associated with a subscriber are identified by examining the subscriber's subscriptions. Then the subscriber's devices and systems are mapped to the roles in each of the service descriptions. Next, one or more functions for each role in each service description into which each of the devices and systems maps are collected from a service description repository for possible display or use by an application. An example of this embodiment is a system and method for collecting a list of actions one is able to perform on a given device, e.g., a particular make and model of PDA.","Another embodiment is directed to service context-aware functions. Some examples of context-aware functions include: functions that are aware of whether it is intended to operate with respect to a specific device or the service as a whole, functions that are aware of the role of the target device, functions that are aware of other devices in other roles, and functions that are aware of the subscriber. For example, a service context-aware function may be called and passed a list of devices mapped into roles. The function can then choose a specific role and its associated devices and call another function associated with the specific role.","Yet another embodiment is directed to a function configured to perform operations with respect to roles or classes of devices and systems, rather than on specific types, makes or models of devices and systems. Such function can be written to cover multiple device or system types generically, including devices and systems that do not yet exist.","Still another embodiment is directed to a function configured to operate with respect to multiple devices or systems where the function has knowledge of the operations and key\/value pairs associated with roles such that: (1) the logic can operate on each device or system that plays a role in a particular service or (2) the logic can operate on each device or system that plays similar roles in different services. For example, a function associated with a role may operate on devices or systems that play the role in one or more services.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 9","b":["905","910","915","920","925","930","935"]},"Those skilled in the art to which this application relates will appreciate that other and further additions, deletions, substitutions and modifications may be made to the described embodiments."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION","p":["Reference is now made to the following descriptions taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
