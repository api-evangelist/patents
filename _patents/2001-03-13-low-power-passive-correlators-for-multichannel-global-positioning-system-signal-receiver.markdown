---
title: Low power passive correlators for multichannel global positioning system signal receiver
abstract: One embodiment of the present invention includes a circular shift register, K storage elements, and a code register. The circular shift register having N data samples circularly shifts a first data sample of the N data samples into a data position at a first clock frequency. The N data samples correspond to signal received from one of K satellites in a global positioning system (GPS). The N data samples are loaded into the circular shift register at a second clock frequency. The K storage elements store K code sequences, respectively. Each of the K code sequences has N code samples and includes a first code sample being written at a code position corresponding to the data position at a third clock frequency. The K storage elements correspond to the K satellites. The code register stores the N code samples loaded from one of the K storage elements at a fourth clock frequency. The fourth clock frequency is K times faster than the first clock frequency.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06965631&OS=06965631&RS=06965631
owner: PRI Research & Development Corp.
number: 06965631
owner_city: Torrance
owner_country: US
publication_date: 20010313
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","STATEMENT OF GOVERNMENT INTEREST","BACKGROUND","DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/188,883, titled \u201cLow Power Spread-Spectrum Receiver Architecture\u201d filed on Mar. 13, 2000.","This invention was made with Government support under Contract DAAH01-98-C-R142 awarded by the U.S. Army Aviation and Missile Command. The Government has certain rights in the invention.","1. Field of the Invention","This invention relates to digital communication. In particular, the invention relates to global positioning system (GPS).","2. Description of Related Art","Global positioning system (GPS) has provided many useful civilian applications such as in-car navigation systems, automatic position reporting during emergency, low-visibility harbor operations, navigation systems for hikers, campers, and other recreational users.","Existing techniques for designing GPS receivers have a number of drawbacks. First, the re-tracking circuit is either complex requiring significant amount of hardware, or slow resulting in poor performance. Second, power consumption is high and therefore the receiver is not suitable for low power applications. Third, the architecture may be difficult to interface to programmable processors.","Therefore, there is a need to have an efficient architecture for GPS receivers to process GPS signals efficiently without incurring large power consumption.","In the following description, for purposes of explanation, numerous details are set forth in order to provide a thorough understanding of the present invention. However, it will be apparent to one skilled in the art that these specific details are not required in order to practice the present invention. In other instances, well-known electrical structures and circuits are shown in block diagram form in order not to obscure the present invention.","One embodiment of the present invention includes a circular shift register, K storage elements, and a code register. The circular shift register having N data samples circularly shifts a first data sample of the N data samples into a data position at a first clock frequency. The N data samples correspond to signal received from one of K satellites in a global positioning system (GPS). The N data samples are loaded into the circular shift register at a second clock frequency. The K storage elements store K code sequences, respectively. Each of the K code sequences has N code samples and includes a first code sample being written at a code position corresponding to the data position at a third clock frequency. The K storage elements correspond to the K satellites. The code register stores the N code samples loaded from one of the K storage elements at a fourth clock frequency. The fourth clock frequency is K times faster than the first clock frequency.","While this invention has been described with reference to illustrative embodiments, this description is not intended to be construed in a limiting sense. Various modifications of the illustrative embodiments, as well as other embodiments of the invention, which are apparent to persons skilled in the art to which the invention pertains are deemed to lie within the spirit and scope of the invention.","The A\/D converter  converts the analog signal from the RF front end circuit  into digital data for digital processing in subsequent stages. The A\/D converter  operates with a sampling frequency at 16*f. The sampling frequency is selected to provide adequate anti-aliasing without incurring complexity and costs to the system . A sample-and-hold device (not shown) may be used to hold the analog signal during the A\/D conversion. The sample-and-hold device acts like a sampler operating at the sampling frequency. The word length of the A\/D converter  depends on the characteristics of the signal and the requirements of the system. In one embodiment, the A\/D converter  has a word size of one bit. When the A\/D converter  has a word size of one bit, it can be implemented as a hard limiter using an operational amplifier as a comparator. The output of the comparator is one of two logic levels depending on whether the analog sample is greater or below a predetermined threshold value. The comparator output is the digitized input sample and is latched into a flip-flop clocked at a sampling clock signal. In one embodiment, this sampling clock signal is sixteen times the nominal frequency fof 1.023 MHz. The digitized input samples are then fed to the base-band circuit  for base-band processing.","The base-band circuit  is the main section to process the digitized signal, or samples, to provide correlation results to the processor . The base-band circuit  uses a multi-channel multiplexing scheme and a spread spectrum architecture. The base-band circuit  has a number of novel features to be described later. These features include efficient processing, simple implementation, and low power. The base-band circuit  processes the input signal from a number of satellites in the GPS. In one embodiment, the number of satellites is twelve. The base-band circuit  employs a parallel mechanism to process all twelve channels corresponding to the twelve satellites.","The processor  is any processor or processing element that is capable of executing instructions and communicating with input\/output devices or circuits. The processor  generates control information to the base-band circuit  and interfaces to input\/output devices or elements. The input\/output devices or elements may include any suitable input\/output. Examples of the input\/output devices or elements include user's keyboard, display, serial communication interface, and parallel input\/output processor. The processor  may include a central processing unit (CPU), a memory, and any appropriate interfacing devices. Examples of the CPU include general-purpose microprocessors with any architecture (e.g., superscalar, vector processor, reduced instruction set computer), micro-controllers, digital signal processors, embedded processors.","The oscillator  provides a basic clock signal to the base-band circuit . The basic clock signal is then divided into many clock signals having various frequencies compatible with the GPS timings. In one embodiment, the basic clock signal has a frequency of 48*f. The base-band circuit  derives other clock signals using the basic clock signal. These clock signals are used to synchronize the elements and\/or devices in the base-band circuit . The base-band circuit  also provides clock and\/or timing signals to the RF front end circuit .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 2","FIG. 1"],"b":["140","140","220","230","240","250","260","270"]},"The multiplier-free demodulator  is a base-band down converter to bring the signal to zero IF. This is accomplished by multiplying the input samples with sine and cosine of angles differing by 90\u00b0 to split into in-phase (I) and quadrature (Q) components. In one embodiment, the signal is over sampled at a sampling frequency that is 4q (where q is an integer) times higher than the signal frequency. An efficient mixer is used to replace the multiplier by an equivalent operation. Then, the resulting samples are decimated to keep the samples within a desired frequency range.","The low-power passive correlator  correlates the decimated samples from the multiplier-free demodulator  with PN code samples which are locally generated. The passive correlator  is a de-spreader to recover the transmitted signal samples at the proper frequency range. The PN code samples are part of a PN sequence. In one embodiment, the PN sequence has a length of 1023. The passive correlator  works with two phases per chip and checks blocks of 2N phases for synchronization for all K satellite channels. N is an integer selected so that the PN sequence can be processed over a multiple of times. Possible values for N to allow an evenly divisible number of times from the PN sequence length of 1023 are N=3, 11, and 31. The values 1023, 3, 11, and 31 are for illustrative purposes only. The choice of 3 provides a very short turn-off time. The choice of 31 increases the hardware complexity. The choice of 11 is a compromise between hardware complexity and turn-off time. As is known by one skilled in the art, any other numbers can be used. Correlation between the data samples and the PN code samples typically involves shifting operations to shift the data samples and the PN code samples in synchrony. Each time new samples are shifted in a multiplication is performed on the newly shifted samples to produce a product. For a block of N samples, there are N products. Thereafter, an addition is performed on the N products to produce a correlation result for that block. The passive correlator  reduces power consumption caused by shift registers by using a multiplexing data writing technique. In addition, the multiplication and addition are much simplified to keep the correlation result within a small number of bits. In one embodiment, the correlation result or output of the passive correlator  is 6-bit including a sign bit.","The pseudo random number (PN) generator and re-tracking circuit  generates the PN code samples to the passive correlator . To distinguish various satellites, a unique PN code is assigned to each satellite. These codes are chosen for maximum orthogonality to maximize detectability. The PN code samples are generated for N satellites sequentially. The generation of the PN code samples is clocked by a numerically controlled oscillator (NCO). For re-tracking, the NCO can advance or slip over a number of chips. The number of chips advanced or slipped may be any number. In one embodiment, this number ranges from 0 to 5.5 (e.g., 1, 2, 3, 4, 5, or 5.5). The PN generator and re-tracking circuit  is controlled by the processor . The processor  determines how many chips the PN code have to be shifted and loads an appropriate number into the PN generator and re-tracking circuit  and a shift command.","The Doppler circuit  removes the Doppler shifts on the correlation outputs from the passive correlator . This is performed by another mixer circuit to mix the de-spreaded samples with the sine and cosine values provided by a carrier NCO for a selected satellite. For N satellites, N carrier NCO's are used. The Doppler circuit  sequences through the N carrier NCO's.","The epoch processing circuit  processes the data at the end of each epoch. At the end of each epoch, the PN code samples are filled with all 1's. The epoch processing circuit  sequences through the N satellite channels. The result samples are accumulated or added to provide final result for each satellite. A double-buffered memory scheme is used to allow storing one set of samples in a first memory while a set of results is read out to a second memory. The processor  then can access the second memory to retrieve the results for further processing.","The clock generator  generates various clock signals to be used by other circuits in the base-band circuit . In one embodiment, the clock generator  receives the basic clock signal at 48 times the nominal frequency f. From this basic clock signal, the clock generator  generates all or a subset of the following clock signals: a sampling clock signal at 24*f, a clock signal at 16*f, a clock signal at 8*f, a clock signal at 4*f, and a clock signal at 2*f. The clock generator  may be implemented by a number of methods. One method is to use a counter clocked by the basic clock signal and some logic gates. The outputs of the counter are the divide-by-K clock signals that have frequencies of 24*f, 16*f, 8*f, 4*f, and 2*f. To prevent clock skewing, additional delay elements may be inserted as appropriate.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 3","FIG. 2"],"b":["220","220","310","320","330","340","350"]},"The gating circuit  essentially performs a multiplication of the input samples with the sine and cosine values without using an actual multiplier. As discussed earlier, the input samples are one-bit samples clocked at the sampling clock signal having a frequency of 16*f. The input samples are then multiplied by two-bit sine and cosine values at 4*f. This multiplication is equivalent to multiplication by two consecutive +1's and two \u22121's. Furthermore, since the input samples are one-bit having logic values of 0 and 1, the multiplication can be efficiently performed by an exclusive OR operation. The gating circuit includes an exclusive OR gate  and a frequency divider . The exclusive OR gate  performs the multiplication between the input samples and the sine\/cosine values of two consecutive +1's and two \u22121's. The sine and cosine values can be encoded as +1's and 0's. The frequency divider  generates the sine\/cosine values of +1's and 0's. The frequency divider  can be implemented as two flip-flops connected in cascade to effectively divide the sampling clock by four to provide a clock signal having a frequency of 4*f. The frequency divider  also generates two complementary clock signals at frequency of 8*f: one is true form and one is in complementary form. These two complementary 8*fclock signals are used by the demultiplexer . The gating circuit  generates a gated input sample at the frequency of the sampling clock signal.","The demultiplexer  essentially splits the mixed input samples into in-phase and quadrature components. This is performed by demultiplexing the gated input sample into two signals. The demultiplexer  includes two synchronizers  and . The synchronizers  and  synchronizes the gated input sample by the true and complementary form of the 8*fclock signal, respectively, to generate the in-phase and quadrature samples. Since the synchronizers  and  are clocked by the 8*fclock signal, they essentially down sample the gated input samples at 8*ffrequency by a factor of two.","The integrator\/decimator  further down samples or decimates the in-phase and quadrature samples by integrating them in an integration interval. The integration interval is selected to be equivalent to a four-sample interval so that the down sampling bring the gated input samples to 2*fsamples\/sec. This can be done effectively by counting the number of 1's in the gated input sample in a 4-sample interval. The integrator\/decimator  includes two K-bit counters  and  to count the number of 1's in the in-phase and quadrature samples from the synchronizers  and , respectively. The K-bit counters  and  are reset by a reset signal generated from the reset circuit . This reset signal is to start a new integration interval. The K-bit counters  and  generate in-phase and quadrature decimated samples, respectively, to the mapper . K is selected to ensure that the count value can cover the possible range of numbers. Note that the in-phase or quadrature sample is one-bit. Therefore, the possible numbers of bit 1's in the in-phase or quadrature sample in a 4-sample integration interval are 0, 1, 2, 3, and 4. If +1's and \u22121's are used to encode the integrated samples, these numbers are equivalent to \u22122, \u22121, 0, +1, and +2. To represent these numbers, K would have been 3. In other words, the effect of down sampling is that each sample becomes a three-bit sample.","The mapper  maps the in-phase and quadrature decimated samples into in-phase and quadrature demodulated samples, respectively. The in-phase and quadrature demodulated samples have L bits where L is less than K. This mapping reduces the number of bits to represent the in-phase and quadrature decimated samples for more efficient processing. This mapping acts like a lower and upper hard limiter on the {0, 1, 2, 3, 4} range to limit the lower value to 1 and the upper value to 3. In other words, 0 and 1 are mapped into 1, 2 is mapped into 2, 3 and 4 are mapped into 3. The mapper  includes two combinational circuits  and  to perform this mapping for the in-phase and quadrature decimated samples, respectively. The three input A, B, and C of the decimated samples are mapped into two outputs Band Cas shown in FIG. . The two-bit in-phase and quadrature demodulated samples are fed to the passive correlator  for further processing.","The reset circuit  resets the integrator\/decimator  at the end of each integration interval. The reset circuit  includes an M-bit counter  and an OR gate .","The M-bit counter  is clocked by the true form of the 8*fclock signal and is reset by a system reset signal. The M-bit counter  generates a terminal count signal when the maximum count is reached. The OR gate  performs an OR operation between the terminal count signal of the M-bit counter  and the reset signal. When the reset signal or the terminal count signal is asserted, the reset circuit  asserts the reset signal to reset both the K-bit counters  and  in the integrator\/mapper . M is selected to correspond to the integration interval. In one embodiment, the integration interval is equivalent to 4-sample interval and M is equal to 2.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 4","FIG. 2"],"b":["230","230","410","420","430","440","452","452","460"],"sub":["1 ","N"]},"The load register  receives the two-bit in-phase and quadrature demodulated samples from the demodulator . The load register  transfers its contents to the circular shift register  at a clock rate equivalent to 2*f\/M where M is the number of demodulated samples to be stored in the load register . In one embodiment, the load register  has twenty-two elements (or M=22) to store a block of 11 samples of two phases. The selection of the number 11 is explained above. The load register , therefore, is organized to store a total of forty-four bits. For a nominal value of f=1.023 MHz, the transfer rate from the load register  to the circular shift register  is 93 KHz or a period of 10.75 \u03bcsec.","The circular shift register  circularly shifts a demodulated sample into a data position at the 2*fclock rate. In one embodiment, the shift is left shift and circular in that the leftmost sample is shifted into the rightmost position.","The correlator circuit  computes a correlation result from the demodulated samples and the code samples provided by the code register . During the 2*fclock period, the correlator circuit  computes correlation results for twelve satellites.","The code register  stores M PN code samples transferred from one of the N storage elements to . The N storage elements to store N PN code sequences corresponding to N satellites. All N storage elements to operate in synchrony. The N PN code sequences come from the PN generator and re-tracking circuit  (FIG. ). The writing of the N PN code samples into the N storage elements to is synchronized with the circular shifting of the circular shift register  so that correct phase values are correlated with correct code samples. For each storage element, a code sample is written into the storage element at a code position corresponding to a data position of the corresponding demodulated sample in the circular shift register . This writing is essentially equivalent to shift the N storage elements to synchronously with the circular shifting of the circular shift register . By avoiding using N shift registers to shift N PN code sequences, significant reduction of power consumption is achieved. The synchronous operation between the circular shift register  and the N storage elements to is explained more in FIG. . The N storage elements to may be implemented as N rows of flip-flops where each row has M flip-flops, N registers with selectable data write, or N rows of a static random access memory (RAM), or any other suitable storage devices.","The write circuit  writes N code samples into the N storage elements to at the N code positions corresponding to the data position of the circular shift register . The write circuit  includes a decoder  to enable the N code positions for writing synchronously with the shifting of the circular shift register . If each of the N storage elements to is implemented by M flip-flops, the decoder  essentially enables the gating of the clock signal that clocks the flip-flops.","After a short turn-off time, the passive correlator  allows for re-tracking in principle within 10.75 \u03bcs if the PN code has drifted away +\/\u22125.5 chips. That is equivalent to about 5.5 \u03bcs change in one pseudo range. Assuming 300,000 km\/s speed of light that corresponds to a satellite moving 1.67 km toward or away from the receiver, and assuming that the speed of a satellite is 3 km\/s, then under worst-case conditions without further signal processing, it is possible to turn off the receiver for 0.5 second. This turn-off time results in a large reduction of power consumption. In reality, the correlator output has to be integrated over many cycles to be valid. The satellite movement also follows certain predictable paths. It is then possible despite the multiple integration requirements to keep the GPS unit turned off for many seconds.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 5","FIG. 4"],"b":["430","430","510","510","520","530","540"],"sub":["1 ","M"]},"The M mappers to map the M two-bit demodulated samples and the corresponding M one-bit code samples in the code register  to generate M two-bit mapper outputs. The mapping is essentially equivalent to a multiplication of the demodulated sample with the code sample. In addition, the mapping also provides a proper bit representation for the data to simplify the implementation. Each of the M mappers to is implemented by a combinational circuit including an exclusive-OR gate, an OR gate, and an inverter as shown in FIG. . This mapping is further explained in .","The adder  adds the M two-bit mapper outputs to generate a result sum. The subtractor  subtracts a bias value from the result sum to generate the correlation result. The register  stores the correlation result at the sampling clock rate.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 6","FIG. 4"]},"At time t, the circular shift register  is parallel loaded with 11 pairs of demodulated samples. Each pair includes two phases a and b. The 22 samples are (a, b), (a, b), . . . , (a, b). At the same time, the code register  is loaded with the corresponding 11 pairs of code samples from one of the N storage elements to . The 22 code samples are (s, t), (s, t), . . . , (s, t).","At time t+\u0394t, the circular shift register  circularly shifts the 22 samples so that each sample is shifted to the left and the left most sample bis shifted to occupy the rightmost position. At the same time, the writing circuit  () writes to the rightmost position of the N storage elements to . Then the code register is loaded with one of the N storage elements to . Note that the code register  is loaded with contents of all the N storage elements corresponding to the N satellites within the \u0394t time interval. The remaining code samples remain the same.","At time t+2 \u0394t, the circular shift register  circularly shifts the 22 samples so that each sample is shifted to the left and the left most sample ais shifted to occupy the rightmost position. At the same time, the writing circuit  () writes to the next rightmost position of the N storage elements to . Then the code register is loaded with one of the N storage elements to . The remaining code samples remain the same. The process continues when all M code samples are written into the N storage elements to . At time t+k\u0394t, N code samples are written into the code position k while the other code positions contain the same code samples. Thereafter, a new sequence of M demodulated samples is transferred to the circular shift register  and the process repeats.","By using N storage elements to and a clever writing mechanism, it is not necessary to use N shift registers. This results in a significant reduction of power consumption.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 7A"},"The demodulated sample maybe one of \u22121, 0, and +1 values. The PN code sample may be one of \u22121 and +1. When multiplied together, the product may be one of \u22121, 0, and +1 result. When added together, the 22 products may form a sum having a range of {\u221222, +22}.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 7B"},"The demodulated samples are encoded to have representations of 01, 10, and 11, corresponding to \u22121, 0, and +1, respectively. The PN code sample is represented by 0 and 1, corresponding to \u22121 and +1, respectively. The mapper M maps the product to 1, 2, and 3, corresponding to \u22121, 0, and +1, respectively. The adder produce a sum in the range of {+22, +66}. The subtractor subtracts a bias value of 22 from the sum so that the result has a range of {0, +44}. This range can be represented by a 6-bit result.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 7C"},"The mapping is equivalent to a multiplication of \u22121, 0, +1 and \u22121, +1. The mapping implements the following multiplication table.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Data sample","Code sample","Product"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"01 (\u22121)","0 (\u22121)","01 (+1)"]},{"entry":[{},"01 (\u22121)","1 (+1)","11 (\u22121)"]},{"entry":[{},"10 (0)","0 (\u22121)","10 (0)"]},{"entry":[{},"10 (0)","1 (+1)","10 (0)"]},{"entry":[{},"11 (+1)","0 (\u22121)","11 (\u22121)"]},{"entry":[{},"11 (+1)","1 (+1)","01 (+1)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Note that the values inside parentheses represent the actual values. Other mappings are possible. The mapping can be implemented by a combinational circuit for the mapper shown in FIG. .",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 8A","FIG. 2"],"b":["240","240","810","820","820","830","830","840"],"sub":["1 ","N","1 ","N "]},"The control circuit  generates at least a channel enable signal based on control information from the processor  () at the 8*ffrequency. For N satellites, the control circuit  generates N channel enable signals. The control information includes at least one of channel select information, an initial count, an increment value, and PN command.","Each of the N accumulators to generates a PN clock signal corresponding to the selected satellite channel based on the increment value. The PN clock signal is used by the PN generator . Each of the N accumulators to is enabled by a corresponding channel enable signal from the control circuit .","Each of the N increment registers to stores an increment value of the corresponding satellite channel at the 8*ffrequency. The processor  selects a satellite channel by writing the channel select information and writes the increment value to the selected channel. In one embodiment, each of the N increment registers to has 16 bits.","The PN generator  generates N PN code samples to the passive correlator  based on the channel select information. As discussed earlier, each of the N satellites has a unique PN code sequence. During normal operation, the PN generator  operates at the nominal f frequency. During re-tracking, the PN codes are shifted back and forth based on the individual PN clock signals provided by the N accumulators to . The PN generator  includes N PN code generators to clocked by the PN clock signals from N accumulator to , respectively.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 8B","FIG. 8A"],"b":["845","845","1","850","2","860","865","870","875"],"sub":["k ","k "]},"The G coder  generates a G code sequence. The G coder  includes a shift register  and an exclusive OR gate . The shift register  has ten elements and shifts the code bits to the right. The shift register  is clocked by the PN clock signal k from the corresponding accumulator (FIG. A). The processor  initially loads the shift register  with all 1's. The exclusive OR gate  is a two-input exclusive OR gate which perform an exclusive OR operation on elements  and  of the shift register . The output of the exclusive OR gate goes back to the input of the shift register .","The G coder  includes a shift register  and an exclusive OR gate . The shift register  has ten elements and shifts the code bits to the right. The shift register  is clocked by the PN clock signal k from the corresponding accumulator (FIG. A). The processor  initially loads the shift register  with all 1's. The exclusive OR gate  is a six-input exclusive OR gate which perform an exclusive OR operation on elements , , , , , and  of the shift register . The output of the exclusive OR gate  goes back to the input of the shift register .","The AND gate  is a ten-input AND gate which performs an AND operation on all ten elements of the shift register . When all the ten elements of the shift register  contain all 1's, an epoch event has occurred, i.e., an epoch is ended and a new epoch begins. The output of the AND gate , therefore, provides an indication that an epoch has elapsed. This epoch event signal is used by the epoch control circuit in the epoch processing circuit  (FIG. ).","The tap selector  selects the taps in the shift register  of the G coder  to be used in generating the PN code k out of the PN generator  (FIG. A). The selected taps in the shift register  are unique for each satellite. The processor  writes the selection to the tap selector .","The exclusive OR gate  performs an X-OR operation on the output of the G coder  and the output of the tap selector  to generate the PN code k.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 8C","FIG. 8B"],"b":["870","870","875","880","890"]},"The tap register  has ten elements corresponding to the ten elements of the shift register  in the G coder . The tap register  is written by the processor  to select the P taps unique to a satellite. In one embodiment, P=2. The mask circuit  masks the non-selected taps from the shift register  using the tap register . The mask circuit  includes ten AND gates  to . Each of the AND gate ANDs a cell of the tap register  with a corresponding cell of the shift register . If any of the cells of the G coder  are selected, those cells are tapped into the exclusive OR gate . The output of the X-OR gate  goes to the exclusive OR gate .",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 9","b":["810","810","910","920","930","940"]},"The decoder  receives the channel select information from the processor  () and generates N decoded signals from the channel select information. For N=12, the decoder  is a 4-to-12 decoder. The channel enable register  stores the decoded signals to generate N channel enable signals at a 8*ffrequency. The loading of the channel enable register  is enabled by the logic circuit . The channel enable register  is asynchronously reset by the logic circuit .","The counter  updates a count for the amount of PN shifting required from the initial count at the 8*fclock signal. When the count reaches a terminal count, the counter  generates a terminal signal to reset the channel enable register . In one embodiment, the counter  is an 8-bit down counter to count from the initial count to zero, i.e., the terminal count is zero. The processor  writes the initial count to the counter .","The logic circuit  generates a load signal and a reset signal. The load signal is to load the counter  and the channel enable register . The reset signal is to reset the channel enable register .",{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 10","b":["820","1010","1020","1030"]},"The accumulating register  stores a NCO value at a current cycle of the 8*fclock signal. The NCO value provides the PN clock signal for the selected satellite channel. In one embodiment, the accumulating register  has 28 bits and the most significant bit of the NCO value provides the PN clock signal.","The adder  adds the increment value from the corresponding increment register to the NCO value from the accumulating register  to generate a sum representing the NCO value loaded into the accumulating register  in the next clock cycle of the 8*fclock signals","The adder control circuit  is a combinational circuit to generate an enable command, a left shift command, and a right shift command to the adder  using the PN command provided by the processor  and the channel enable signal from the channel enable register  (FIG. ). When the channel enable signal is de-asserted indicating the satellite channel is not selected, the adder control circuit asserts the enable command which asserts bit  of the adder . The bit  is selected to correspond to a value 2which is increment corresponding to the PN generator frequency of 1.023 MHz. When the channel enable signal is asserted indicating the satellite channel is selected, the adder control circuit  asserts a left command when the shift command is LOW and asserts a right command when the shift command is HIGH. The left and right commands assert bits  and , respectively.","The accumulator  overflows at the required frequency of f. In one embodiment, the most significant bit (MSB) of the accumulator output is a square wave of ffrequency. Let n=28 and m=16 be the number of bits for the accumulating register and the increment value. Let M be the marching value. Let f=8*fwhere f=1.023 MHz. Then:\n\n\/2\u2003\u2003(1)\n\n=1.023\u00d710Hz=*8*(1.023\u00d710Hz)\/2\u2003\u2003(2)\n\n=2\u2003\u2003(3)\n","If the frequency fg is advanced by adding to the marching value, then the time it takes to advance by q chips can be calculated as follows.\n\n=[()*\/2\/2\u2003\u2003(4)\n\n)\/2=()*()\u2003\u2003(5)\n","using the above equations, the time and the number of NCO clock cycles needed to advance or slip up to +\/\u22125.5 chips can be calculated as follows:\n\n=8=8.184 MHz, =16=28, =2\n","For =1.023 MHz:",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Number of chips advanced","T (\u03bcs)","NCO clock cycles"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","0.977","8"]},{"entry":["2","1.955","16"]},{"entry":["3","2.932","24"]},{"entry":["4","3.910","32"]},{"entry":["5","4.887","40"]},{"entry":["5.5","5.376","44"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"For =2*1.023 MHz:",{"@attributes":{"id":"p-0101","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Number of chips slipped","T (\u03bcs)","NCO clock cycles"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1.955","16"]},{"entry":["2","3.910","32"]},{"entry":["3","5.065","48"]},{"entry":["4","7.820","64"]},{"entry":["5","9.770","80"]},{"entry":["5.5","10.75","88"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The NCO marching value can be used to advance or slip precisely to within +\/\u22125.5 chips by counting the number of NCO clock cycles all within less than 11 \u03bcs. It is also possible to totally sty NCO clock for a number of cycles to compensate for the slippage.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIG. 11A","FIG. 2"],"b":["250","250","1110","1120","1125","1127","1110"]},"The carrier NCO generates a carrier NCO value to select sine and cosine values from the look up table . The carrier NCO includes a decoder , N carrier NCO base circuits to , a multiplexer , and a counter . The decoder  generates decoded signals from the channel select information. The decoded signals correspond to the satellite channels. Each of the carrier NCO base circuits to provides a carrier NCO value corresponding to the selected satellite channel. In one embodiment, the carrier NCO value is 3-bit. The multiplexer  selects one of the 3-bit N carrier NCO values based on the select signal generated by the counter . The counter  sequences through the N channels and clocked by the sampling clock signal at 24*ffrequency.","The look up table  generates the coefficients based on the carrier NCO value. The coefficients include the sine and cosine values to be used by the mixer circuit . In one embodiment, the sine and cosine values are stored in the look up table  according to the 3-bit carrier NCO values as follows.",{"@attributes":{"id":"p-0106","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Carrier NCO value","Sine value","Cosine value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["000","000 (0)","011 (3)"]},{"entry":["001","010 (2)","010 (2)"]},{"entry":["010","011 (3)","000 (0)"]},{"entry":["011","010 (2)","110 (\u22122)"]},{"entry":["100","000 (0)","111 (\u22123)"]},{"entry":["101","110 (\u22122)","110 (\u22122)"]},{"entry":["110","111 (\u22123)","000 (0)"]},{"entry":["111","110 (\u22122)","010 (2)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The two registers  and  store the sine and cosine values from the look up table  at the sampling clock signal of 24*ffrequency.","The mixer circuit  mixes the demodulated sample from the passive correlator  () with the coefficients (e.g., the sine and cosine values) from the look up table  to generate a mixer sample. The mixer sample includes a mixer in-phase sample and a mixer quadrature sample. The mixer circuit  includes mixer in-phase and quadrature circuits  and  to generate the mixer in-phase and quadrature samples, respectively.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":["FIG. 11B","FIG. 2"],"b":["1114","1114","1140","1150","1160"]},"The carrier increment register  stores a carrier increment value provided by the processor  at a f\/4 frequency. The adder  adds the carrier increment value to the carrier NCO value stored in the accumulating register  to produce a sum. The sum is then stored in the accumulating register . The accumulating register  stores the sum generated by the adder  at a f\/4 frequency.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":["FIG. 12","FIG. 11"],"b":["1130","1130","1210","1220"]},"The mixer in-phase circuit  generates an in-phase mixer sample Ifrom the in-phase and quadrature demodulated samples Iand Qas follows:\n\n*cos\u2212*sin\u2003\u2003(6)\n","The mixer quadrature circuit  generates a quadrature mixer sample Qfrom the in-phase and quadrature demodulated samples Iand Qas follows:\n\n*sin+*cos\u2003\u2003(7)\n","where sin and cos are the sine and cosine values provided by the two registers  and , respectively. The Iand Qare the results of complex multiplications between the I, Qwith the sine and cosine values.","The mixer in-phase circuit  includes two logic circuits  and  and an adder . Each of the logic circuits  and  essentially performs a multiplication between the 6-bit demodulated sample and the sine or cosine value to generate an 8-bit product considering the range of value at the input and output and the coding method used. The multiplexer is a simplified set of logic gates. The adder  adds the two 6-bit products to provide the in-phase mixer sample according to equation (6). The mixer quadrature circuit  includes two logic circuits  and  and an adder . The two logic circuits  and  are the same as the logic circuits  and . The adder  adds the two 6-bit products to provide the quadrature mixer sample according to equation (7).",{"@attributes":{"id":"p-0116","num":"0115"},"figref":["FIG. 13","FIG. 2"],"b":["260","260","1310","1320","1330","1340"]},"Each of the in-phase and quadrature memory circuits  and  accumulates the corresponding mixer samples over an epoch interval. The in-phase and quadrature memory circuits  and  are essentially identical except that the input for the in-phase memory circuit  is the mixer in-phase sample and the input to the quadrature memory circuit  is the mixer quadrature sample. The epoch control circuit  generates an epoch control signal to the in-phase and quadrature memory circuits  and  indicating an end of an epoch. The multiplexer  selects one of the in-phase and quadrature memory circuits  and  to be read by the processor .",{"@attributes":{"id":"p-0118","num":"0117"},"figref":["FIG. 14","FIG. 13"],"b":["1310","1310","1410","1412","1414","1425","1435","1420","1430","1440","1445","1450"]},"The accumulating memory  stores P sums of the mixer samples during an epoch interval as provided by the epoch control circuit  (FIG. ). The mixer samples arrive at the accumulating memory  at the sampling clock frequency of 24*f, or every 40.72 nsec for a nominal frequency fof 1.023 MHz. Each block of mixer samples includes the complex mixing of the 22-phase block of the input samples and the 22-phase block of the PN code samples. For the entire epoch interval which corresponds to 1023\/11=93 blocks of 22-phase blocks of the input samples, the accumulation essentially adds the 22-phase result blocks for 93 times. The value of the mixer samples has a range of {\u221288, +88}. The range of the epoch result is therefore equal to +\/\u221288\u00d793=+\/\u22128184. This range requires a word size of 14 bits including the sign bit. Each epoch also involves 12 satellite channels. To accumulate 22-blocks for all 12 channels, the total number of epoch values stored in the accumulating memory  is 264. The accumulating memory  is therefore organized as 512\u00d716 to accommodate 264\u00d714 epoch results. In one embodiment, the accumulating memory  is implemented as a dual-ported memory to allow simultaneous read and write. This allows reading the partial sum from the accumulating memory  and writing the partial sum to the accumulating memory  at the same address at the same time.","The address counter  generates an address to the accumulating memory  and the buffer memory . The address counter  is clocked by the sampling clock signal of 24*ffrequency. The address counter  sequences through the 12 satellite channels and the 22 phases. Therefore, the address counter  generates the address modulo 12\u00d722=264.","The adder  adds a mixer sample to the sum stored in the accumulating memory . The result of the adder  is written to the accumulating memory . This result is read out in the next cycle to continue accumulating the mixer samples over the epoch interval.","The buffer memory  stores the P sums transferred from the accumulating memory  at the end of each epoch interval. The contents of the buffer memory  are read by the processor  via the multiplexer . In one embodiment, the buffer memory  is a dual-ported memory to allow simultaneous writing and reading.","The registers , ,  and  are clocked by the sampling clock signal at 24*ffrequency to synchronize the latching of the address and data for the accumulating and buffer memories  and .","The register  synchronizes the epoch control signal with the sampling clock signal at 24*ffrequency. The gating circuit  gates the partial sum from the accumulating memory  with the epoch control signal so that when the accumulating memory  is in the write mode, the buffer memory  is available for read and vice versa.","While this invention has been described with reference to illustrative embodiments, this description is not intended to be construed in a limiting sense. Various modifications of the illustrative embodiments, as well as other embodiments of the invention, which are apparent to persons skilled in the art to which the invention pertains are deemed to lie within the spirit and scope of the invention."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the present invention will become apparent from the following detailed description of the present invention in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 6","FIG. 4"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7C"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 8A","FIG. 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 8B","FIG. 8A"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 8C","FIG. 8B"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 11A","FIG. 2"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 11B","FIG. 2"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 13","FIG. 2"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 14","FIG. 13"]}]},"DETDESC":[{},{}]}
