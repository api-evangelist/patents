---
title: Program handoff between devices and program network offloading
abstract: Methods, devices, and non-transitory storage mediums provide a program handoff between user devices. The program handoff permits a user to select a user device with which to resume a playing of the program. The program handoff also permits a user to set a reminder for playing the program. Methods, devices, and non-transitory storage mediums provide for an application layer-based network offloading of programs. A program is buffered based on a network offloading time and the program is played from a buffer during an execution of a network offload. Network offload prediction is used to minimize network offload time and buffering.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08931016&OS=08931016&RS=08931016
owner: Verizon Patent and Licensing Inc.
number: 08931016
owner_city: Basking Ridge
owner_country: US
publication_date: 20110915
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["Mobile devices, such as mobile phones, smart phones, tablets, and other portable devices, are pervasive among users. As a result, service providers and network providers continue to strive to improve wireless services, in terms of types of service (e.g., location-aware services, multimedia services, etc.), access, performance, etc. Given the growing demand for wireless service, wireless bandwidth is gradually becoming a precious commodity.","In addition to mobile devices, user devices also include stationary devices, such as desktop computer, televisions, etc. Given the diversity of user devices, service providers and network providers strive to extend various services among the array of user devices available to users.","The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also, the following detailed description does not limit the invention.","The term \u201cprogram,\u201d as used herein, includes video content. For example, the program may be television video content (e.g., a movie, a television show, pay-per-view content, video-on-demand content, etc.) or Internet content (e.g., a webcast, a videocast, a podcast, etc.).",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","105","110","1","110","110","110","150","1","150","150","150","100"]},"The number of devices and networks, and the configuration in environment  are exemplary and provided for simplicity. According to other embodiments, environment  may include additional devices, fewer devices, different devices, and\/or differently arranged devices, than those illustrated in .","According to other embodiments, a single device may be implemented as multiple devices and\/or multiple devices may be implemented as a single device. A device may be implemented according to a centralized computing architecture or a distributed computing architecture. Additionally, a device may be implemented according to one or multiple network architectures (e.g., a client device, a server device, a peer device, or a combination thereof).","Also, according to other embodiments, one or more functions and\/or processes described as being performed by a particular device may be performed by a different device, or some combination of devices. By way of example, one or more functions and\/or processes described as being performed by network device  may be performed by user device , or vice versa, or in combination.","Network  includes one or multiple networks. For example, network  may include a mobile network that provides a mobile service or permits users access to a mobile service. Network  may include a television network that provides a television service or permits users access to a television service. Network  may include a network that provides Internet service or permits access to the Internet. Network  may include other types of wired and\/or wireless networks, such as, for example, a WiFi network, a local area network (LAN), the Internet, etc.","User device  includes a device having the capability to communicate with other devices, systems, networks, and\/or the like. For example, user device  may be implemented as a smartphone, a computer (e.g., a laptop, a palmtop, a desktop, a tablet, etc.), a personal digital assistant (PDA), a personal communication system (PCS) terminal, a pervasive computing device, a video playing device, a game system, or some other type of mobile device (e.g., a vehicle-based communication system, etc.). User device  may also include, for example, a television and a set top box. The term \u201cset top box\u201d may include, for example, a client device, a thin client device, a converter box, a television receiver, a tuner device, a digibox, or some other type of device that receives program signals (e.g., television programs, Internet content, etc.). Additionally, user device  may include a monitor or a display, a remote control device, a DVD player, a Blu-ray\u00ae player, etc.","According to an exemplary embodiment, a program handoff service permits a user to watch a program on one user device (e.g., user device -) and resume watching the program on another user device (e.g., user device -X). According to an exemplary embodiment, a user registers user devices  with network  (e.g., with network device ) for receiving program handoff services.","According to an exemplary embodiment, user device  records the location of the program when the user wishes to stop watching the program. For example, the user may stop or pause the playing of a program, or quit or exit an application that plays the program. According to another embodiment, network device  may record the location of the program. According to an exemplary embodiment, the user is prompted to select a user device  at which the program is going to be resumed. The user may select any user device  that is registered.","Upon selection of another user device , according to an exemplary embodiment, network  may prepare the other user device  for resuming the program. By way of example, network  may transmit a message to the other user device . According to an exemplary embodiment, in response to the message, the other user device  may display a prompt to allow the user to resume the program. In this way, the user may not have to manually navigate to a particular application or menu, manually launch an application, navigate to and select the program, etc. Rather, when the user accepts the prompt to resume the playing of the program, the program may resume. Depending on the other user device , the resume process may include, for example, automatically launching a program player (e.g., a media player), tuning to a particular channel, launching a web browser or a new tab of a web browser.","According to exemplary embodiment, the program handoff service permits a user to share a program with another user. For example, the user may indicate a start point and a stop point in the program or a start point in the program via user device . This location(s) is\/are bookmarked by network device  or by user device . The user may select a recipient. For example, the user may select a friend from an address book or a social network. User device  may generate a message that includes a link to obtain the bookmark information and transmits the message to the friend's user device . Alternatively, the message may include the bookmark information. Upon receipt of the message, the friend may then begin to play the program based on the bookmarked information.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["200","205","210","215","220","225","230"]},"Network  may include one or multiple networks. Network  may include network(s) similar to that previously described with respect to network .","Program location capture device  includes a network device that identifies the location of a program at the point when a user pauses, stops, quits, exits, etc., the playing of the program on user device . According to an exemplary embodiment, the location is identified by a playing time from the beginning of the program to the pause point, stop point, etc. According to another exemplary embodiment, the location is identified based on the segmentation of the program. For example, the program may be segmented and indexed into program chunks, files, or byte range. According to other embodiments, other techniques known in the art may be used. Program location capture device  may be implemented, for example, as a computer, a server device (e.g., an application server, a web server), or other suitable computational device.","Database device  includes a network device that stores data and\/or information. Database device  may include databases (e.g., a relational database, a distributed database, or other type of suitable database) pertaining to the program handoff service. For example, database device  may include a database that stores program location information. Database device  may include a database that stores program mapping information. For example, the program format for one user device  (e.g., a television) may be different than the program format for another user device  (e.g., a smartphone). The program mapping information may provide a mapping of a program between different formats. Database device  may also include a database that stores information pertaining to registered user devices  associated with a user. Database device  may be implemented as a computational device, such as, for example, a server or other form of database management system.","Program mapping device  includes a network device that maps a program location associated with one program format to a program location associated with another program format. Program mapping device  may be implemented as a computational device, such as, for example, a server, a computer, or other suitable network device.","Program resume device  includes a network device that manages and\/or facilitates the resuming of a program by user device . For example, program resume device  may generate and transmit messages to user devices  that notify user devices  to resume the program. User device  is a device similar to user device .","Registration device  includes a network device that manages the registration of user devices . The registration information may be obtained when registration information is obtained from a user during a registration process, is obtained automatically when user device  connects to network , and\/or is obtained from other interactions (e.g., an installation process of a service, etc.). The registration information may include, for example, a user device identifier (e.g., a name of a user device, an equipment identifier, a network address, etc.) and user device characteristics (e.g., an operating system, a display size, a display resolution, a make and\/or model of the user device, program player being used, etc.). The registration information may also include a user name, user login information (e.g., password, etc.), and\/or location information associated with a user device (e.g., work, home, etc.). When the registration information is obtained, registration device  stores the registration information and uses this information when providing program handoff services. For example, registration device  stores registration information in a database that correlates a user device and\/or a user with program handoff services. Additionally, program mapping device  may use registration information for identifying an appropriate program format for a particular user device .","Described below is an exemplary process for performing program handoff between user devices  in network .  is a diagram illustrating an exemplary process for capturing program location information. As previously described, according to other embodiments, multiple devices may be implemented as a single device. Additionally, according to other embodiments, as described further below, one or more operations may be performed by a different device, or some combination of devices.","According to this example, assume that user device - is receiving a program via program location capture device . It may be assumed that program location capture device  identifies the program location when a user stops, pauses, quits, etc., the viewing of a program.","Referring to , in this example, program location capture device  tracks program segments (e.g., data segments) delivered to user device -. For example, program location capture device  continuously tracks the user's program location and stores program tracking information. The program tracking information may include a program identifier (e.g., that identifies the program being delivered), a user identifier (e.g., that identifies the user and\/or identifies user device - (e.g., an equipment identifier, a network address (e.g., a Media Access Control (MAC) address, etc.), etc.)), and a data file name or count number (e.g., associated with a program segment). According to an exemplary implementation, the program delivery or the playing of the program is based on Hypertext Transfer Protocol (HTTP) Live Streaming (HLS) or some other standard in which the program is segmented. According to other embodiments, program location capture device  can use other known techniques to track or obtain the location of the program based on the protocols and standards being implemented.","In this example, assume the user stops the program via user device -. Program location capture device  identifies the program location (e.g., minutes\/seconds from a start point). Additionally, according to an exemplary embodiment, user device - displays a graphical user interface (GUI) that permits the user to indicate that the user would like to resume the program on another user device . If the user indicates that the user would like to resume the program on another user device , a graphical user interface permits the user to select the target user device  with which the user intends to resume the program. The graphical user interface may display user device(s)  registered with the program handoff service, the user, and\/or the user's account. For example, as illustrated in , an interactive element  is displayed to the user. Interactive element  includes a message to a user to select a device to resume the program and a list of devices from which the user may select. In this example, the list includes a living room television, a desktop computer, and a smartphone. According to this scenario, the user selects a device from interactive element .","As illustrated in , user device - transmits the user selection pertaining to target user device  to program location capture device . Program location capture device  transmits the program location and target user device information to program mapping device . Depending on the user selected target user device , the program format of the program suitable for target user device  may be different from the program format of the program that was delivered to the user via user device -. In this example, it is assumed that the program formats between user device - and target user device  are different. For example, user device - may be a desktop computer and target user device  may be a smartphone.","Program mapping device  may access a database that includes a mapping of program formats to user devices . The program mapping information may be generated based on registration information obtained during the registration process. For example, a user may identify the type of user device  (e.g., a smartphone, a desktop, a set top box, a television, etc.), make and\/or model of user device  (e.g., Apple\u00ae iPhone 4 smartphone, Motorola\u00ae Droid 3 smartphone, etc.), capabilities of user device  (e.g., screen size, program player being used, etc.), connection speed, and\/or other parameters relevant to the delivery and\/or playing of programs. Additionally, user device information may be obtained absent a user registration process. For example, with reference to a television service, a service provider may supply the set top box to the user. In this regard, assuming the service provider also provides the program handoff service, the service provider may have information pertaining to the set top box, the television, etc. Additionally, with reference to Internet service and\/or mobile service, the service provider may also have information pertaining to other user devices  used by the user for the program handoff service.","Based on the registration information and\/or other user device-related information obtained by the service provider of the program handoff service, this information is correlated with program formats. Program mapping device  selects the appropriate program format. Thereafter, program mapping device  identifies the program location for the correlated program format based on the program location provided by program location capture device . In this example, program mapping device  stores a program identifier and the program location in database device . Program mapping device  may store other information, such as a user identifier and\/or a target user device  identifier.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3B","b":["250","250","2","250","2"]},"According to an exemplary embodiment, network  (e.g., program resume device ) generates a message based on the information stored by database device . For example, the message may be implemented as a wakeup message or other suitable message (e.g., a text message) that includes information to permit target user device - to resume the program. For example, the message includes a link to a network device (e.g., program location capturing device ), a program identifier, and a program location. The message may include other information (e.g., user name, user login information, user credentials, etc.). The message may cause target user device - to perform operations directed to resuming the program, as described further below.","According to an exemplary implementation, a wake up message may be delivered to user device  as an SMS message. The wakeup message may include a prefix string to indicate it is an application-direct message. An application of target user device  may monitor for an incoming wakeup message and if the application identifies a receipt of the wakeup message that starts with a predefined prefix string, then the application processes the wakeup message and acts accordingly. The application-direct message may have several formats to accommodate different user devices .","According to an exemplary embodiment, target user device - includes an application to facilitate the resuming of the program. According to an exemplary implementation, the application may be implemented as a program player application (e.g., a media player application). According to another implementation, the application may be implemented as a client application. For example, the client application may obtain the link from the message, establish a network connection to the appropriate network device, and launch a program player application to allow the user to resume the program. The application may also perform other operations, such as generating an interactive element to permit the user to indicate that the user wishes to resume or not resume the program, as described further below. For example, the wakeup message may include several parameters pertaining to user choices (e.g., resume, start from the beginning, etc.) The application of target user device - processes the message and proposes actions from which the user may choose through an application user interface. The application may implement a default action if user does not respond to the message within a specified time period. For example, the default action may be to resume the program from where the last user device  stopped.","Depending on the state of target user device - and the type of target user device -, the process of resuming the program may be different. For example, the state of target user device - may be that: it is turned off and not connected to network ; it is turned on and connected to network , but in a sleep mode; it is turned on, in a normal mode, and connected to network ; etc. Additionally, the type of target user device - (e.g., a smartphone, a desktop computer, a television, etc.) and the type of network or service (e.g., television, mobile, Internet) in which target user device - uses to resume the program may allow for different implementations pertaining to a program resume process. Described below are some exemplary scenarios pertaining to a program resume process.","Referring to , it may be assumed that target user device - is a smartphone. According to an exemplary scenario, assume target user device - is not turned on and not connected to network . According to an exemplary embodiment, program resume device  may transmit a text message (e.g., a Short Messaging Service (SMS) message, an e-mail message, a Multimedia Messaging Service (MMS) message, etc.) to target user device -. The text message is received by a message server. The message server stores the text message. When target user device - connects to network  (e.g., a mobile network), the SMS message or the MMS message is received by target user device -. Alternatively, when the user opens an e-mail client application, target user device - receives the e-mail message. The user may open the text message and select a link (e.g., included in the text message) to connect to network  and resume the playing of the program.","According to another exemplary scenario, assume target user device - is turned on and connected to network . In a manner to that described above, program resume device  may transmit a text message to target user device - via a message server. Once the text message is received by target user device -, the user may open the text message and select a link to connect to network  and resume the playing of the program.","According to another exemplary embodiment, program resume device  may transmit a message (e.g., a wakeup message). The wakeup message includes a link to a network device to permit target user device - to resume the program. The wakeup message may also cause an application to perform operations, as described below. For example, the application receives the wakeup message and treats the message as an application-direct message based on the prefix string. The application processes the wakeup message and presents the user with choices via an application user interface.","According to an exemplary scenario, it is assumed that target user device - is not connected to network . The wakeup message may be stored by a mobile message forwarding device (not illustrated). When target user device - connects to network , the mobile forwarding device is notified. The mobile forwarding device forwards the wakeup message to target user device -. When the wakeup message is received, the wakeup message causes the target user device - to generate a notification to the user. For example, the notification may be implemented as an interactive element (e.g., an overlay, an icon, a graphical object, etc.). The user is prompted as to whether the user would like to resume the program. If the user indicates that the user would like to resume the program, target user device - resumes the program based on link information. The resume process on target user device - (e.g., a smartphone) may include launching a program player, establishing a program session, and resuming the playing of the program beginning at the program location. According to an exemplary embodiment, the user may not have to manually navigate and launch a program player, navigate and\/or select the program to resume, etc. If the user indicates that the user would not like to resume the program, target user device - continues to operate in a normal mode and the program resume is dismissed. For example, as illustrated in , an interactive element  is displayed. In this example, interactive element  requests confirmation from the user as to whether the user would like to resume the program (e.g., the movie \u201cAdjustment Bureau\u201d). The user may select \u201cyes\u201d to resume the program or \u201cno\u201d to not resume the program.","According to another exemplary implementation, the user may be able to select a resume time. For example, assume the user views the notification but would like to first check e-mail or surf the Web. The interactive element may permit the user to create a reminder that will prompt the user to resume the program at a later time. The user may set a time for when the reminder occurs (e.g., 15 minutes from now, 30 minutes from now, an exact time (e.g., 2:00 p.m.), etc.). Upon the occurrence of the reminder, the user may resume the program, dismiss the reminder, or set another reminder. For example, referring to , interactive element  may permit the user to set a reminder. As illustrated in , the user may set a time (e.g., set an hour, minutes, a.m. or p.m.) for the program to resume or select a quick time setting (e.g., 10 minutes from now, 15 minutes from now, etc.) via an interactive element .","According to another exemplary scenario, when target user device - is connected to network , the wakeup message is forwarded to target user device -. Similar to that previously described, when the wakeup message is received, target user device - generates a notification to the user. The user may resume the program, set a reminder, dismiss the notification, etc., as previously described.","According to another embodiment, when target user device - is another type of device, the resume process may be similar to that previously described. For example, referring back to , program resume device  may transmit a wakeup message. In this example, it may be assumed that target user device - includes a set top box and a television. According to an exemplary implementation, when the set top box is not connected to network  (e.g., a television distribution network), the wakeup message is stored by a message forwarding device. When the set top box connects to network , the operations described below may be performed.","According to an exemplary implementation, when the set top box is connected to network  (e.g., a television distribution network), the wakeup message is received by the set top box. An application on the set top box receives the wakeup message and causes the set top box to generate an interactive element (e.g., an overlay, etc.). The interactive element is displayed on the television. The user may resume the program based on the user's interaction with the interactive element, set a reminder, etc.","If the user indicates to resume the program, the application on the set to box may cause the set top box to tune to an appropriate channel for receiving the program. The set top box may initiate a program session and resume the playing of the program from the program location. The user may not have to manually navigate through a menu, select the program to resume, etc.","According to another embodiment, the television may be connected to network . For example, some televisions may include a wireless communication interface (e.g., a Universal Serial Bus (USB) wireless transceiver) that permits access to the Internet via a wireless router or other type of access point. In this example, the television may include an application that is able to receive a wakeup message from program resume device . Similar to that previously described, the application receives the wakeup message and generates and displays an interactive element. If the user indicates that the user would like to resume the program, according to an exemplary implementation, the program may be resumed via the set top box. For example, the application may communicate with the set top box to establish a program session and resume the program at the program location.","Alternatively, according to another implementation, the program may be resumed not via the set top box, but via the wireless router or other type of access point. According to this implementation, the user may not have to manually navigate through a menu, select the program to resume, etc. The user may be able to set a reminder, etc., as previously described, via the interactive element.","According to another embodiment, when target user device - is yet another device, the resume process may be similar to that previously described. For example, referring back to , program resume  may transmit a text message (e.g., an e-mail message) to target user device - via a messaging server (e.g., an e-mail server). The text message includes a link to connect to network  and resume the playing of the program. In this example, it may be assumed that target user device - includes a computer (e.g., a desktop computer). The user may open a text client application to open the text message. The user may resume the program by selecting the link in the text message.","According to another exemplary embodiment, program resume device  may transmit a message (e.g., a wakeup message) to target user device -. When the wake-up message is received, an application on target user device - may generate and display an interactive element to permit the user to indicate whether to resume the program. If the user indicates to resume the program, a web browser or a new tab (e.g., if the web browser is already open) is launched and the program is resumed at the program location. According to an exemplary embodiment, the user may not have to manually navigate and launch a web browser, navigate and\/or select the program to resume, etc. Similar to that previously described, if the user indicates not to resume the program, target user device  continues to operate in a normal mode and the program resume is dismissed. Additionally, the user may set a reminder.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 3C","FIG. 3A","FIG. 3C"],"b":["250","1","250","1","305","305","305","250","1","250","1"]},"In this example, assume the user stops the program via user device - and identifies the program location. Additionally, according to an exemplary embodiment, user device - may display a graphical user interface that permits the user to select the target user device  with which the user intends to resume the program.","As illustrated in , user device - transmits the program location and target user device information to program mapping device . Similar to that previously described, program mapping device  may map the program location, etc., based on target user device - and store the program identifier and program location information in database device . Program mapping device  may store other information, such as a user identifier and\/or a target user device  identifier.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 3D","b":["225","225","250","2","250","1","250","1","220","220"]},"According to an exemplary embodiment, the program handoff service permits a user to share a particular portion of a program. For example, as previously described, the user may select a start point or a start point and a stop point pertaining to the program. In this way, the user may share with others (e.g., friends, family members, etc.) certain portions of a program (e.g., a favorite scene, etc.). For example, referring to , user device - tracks the program. The user is aware of an upcoming scene that the user likes. The user selects a start point and an end point during the viewing of the program that corresponds to a scene of interest. The program locations corresponding to the start point and the end point are captured. According to other embodiments, the program tracking may be performed by program location capture device .","Referring to , in this example, the user selects a friend's address. User device - generates a message and transmits the message to the friend's user device -. User device - receives the message and the friend may play the program snippet.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIGS. 5A-5C","b":["500","200","500"]},"In block , user devices for a program handoff service are registered. For example, registration device  obtains registration information pertaining to the program handoff service. The registration information may include information pertaining to a user, user devices, and other information pertaining to the delivery and playing of programs (e.g., connection speed, etc.).","In block , a program is displayed by a registered user device. For example, a registered user device  receives a selection of a program to play. Network  delivers the program (e.g., streaming, downloading) to user device . Depending on user device  (e.g., a computer, a smartphone, etc.), user device  may include a program player (e.g., a media player) or some other application to permit the program to play on user device .","In block , program location tracking of the program is performed. For example, according to this example of process , program location capture device  tracks the program location of the program, as the program is delivered to user device  or being viewed by the user.","In block , it is determined whether a user selection to end the playing of the program before an end of the program is received. For example, program location capture device  continuously monitors whether user device  stops or pauses the playing of the program, or exits or quits a program player or other application. If a user selection is not received (block -NO), the registered user device continues to play the program and perform program location tracking, as illustrated in blocks  and . If a user selection is received (block -YES), a graphical user interface that includes registered user device is displayed (block ). For example, an interactive graphical element is displayed to the user to request whether the user would like to resume the program. In this example, it is assumed that the user would like to resume the program on another user device . An interactive element is displayed to permit the user to select another registered user device  (e.g., interactive element ).","In block , a user selection of a registered user device is received. For example, user device  receives the user's selection of a registered target user device  via interactive element .","Referring to , in block , it is determined whether a mapping function is to be performed. For example, program mapping device  determines whether the program format of the program should be mapped based on the user selection of registered target user device . Program mapping device  makes a determination based on program mapping information stored in a database (e.g., database device ).","If it is determined that a mapping function is to be performed (block -YES), a mapping is performed (block ). For example, program mapping device  selects the suitable program format for registered target user device . Program mapping device  identifies the program location given the selected program format of the program and the program location information. Program mapping device  stores the mapped program location and program identifier in a database (e.g., database device ).","If it is determined that a mapping function is not to be performed (block -NO), a program location and a program identifier is stored (block ). For example, program mapping device  stores a program location and a program identifier pertaining to the program in a database (e.g., database device ).","In block , a message for a resume process is generated. For example, a text message or a wakeup message is generated. The text message or the wakeup message may be generated by program resume device  or user device . The text message or the wakeup message includes a program location and a program identifier. The message may also include other types of information (e.g., a user identifier, a target user device identifier, etc.). In other words, the message may include a link to a program location capture device  or a program delivery device  that permits registered target user device  to connect to network  and resume the program at a resume point in the program.","In block , the message is sent to the target registered user device. For example, program resume device  or user device  transmits the message to registered target user device . In block , the message is received by the registered target user device. For example, registered target user device  receives the message from network . In some cases, the message may be received via a message server (e.g., an SMS server, an e-mail server, an MMS server, etc.).","Referring to , according to this example, as previously described, the message may be implemented as a text message or a wakeup message. In blocks  and , it is assumed that the message is a text message. As illustrated in block , a request for the program is received. For example, the text message is opened by the user. The user selects a link included in the text message. In block , the program is resumed. For example, registered target user device  displays the program to the user beginning at the program location (i.e., a resume point).","In blocks -, it is assumed that the message is a wakeup message. As illustrated in block , an interactive element is generated. For example, when the wakeup message is received, registered target user device  generates an interactive element (e.g., interactive element ). In block , the interactive element is displayed. For example, registered target user device  displays the interactive element (e.g., interactive element ).","In block , a user selection is received. For example, registered target user device  receives a selection, via interactive element , to resume the program or set a reminder.","In block , the program is resumed. For example, when the user selects to resume the program, the program is resumed. In block , a reminder is set. For example, when the user selects to set a reminder, the user may set a reminder via an interactive element (e.g., interactive element ).","Although  illustrate an exemplary process  for performing a program handoff, according to other embodiments, process  may include additional operations, fewer operations, and\/or different operations than those illustrated in  and described herein. For example, the display of the interactive element(s) based on the pausing or the stopping of the playing of the program may be a user preference. In this way, the user may avoid unnecessary prompting pertaining to the program handoff service each time the user pauses or stops the playing of the program. As an alternative, the user may invoke the display of the interactive element(s) through a graphical user interface, pressing a button on a remote control (e.g., in a set top box and television scenario), or some other suitable manner.","According to an exemplary embodiment, a network offloading service provides a network offloading from one network to another network during a communication session. According to an exemplary embodiment, the communication session includes program delivery of a program. Referring back to , according to an exemplary scenario, a user of user device  (e.g., a mobile device) may be viewing a program that is attached to network  (e.g., a mobile network, such as, an LTE network, etc.). Thereafter, while viewing the program, the user returns home. At such time, the program delivery of the program is switched from network  (e.g., the mobile network) to network  (e.g., the user's home wireless network, such as, a WiFi network). According to another exemplary scenario, the network offloading of a program includes switching from the user's home wireless network to a mobile network.","According to an exemplary embodiment, user device  includes multiple wireless communication interfaces. For example, user device  includes a mobile network communication interface, such as a Global System for Mobile Communications (GSM) interface, a Universal Mobile Telecommunication System (UMTS) interface, a Wideband Code Division Multiple Access (WCDMA) interface, an Evolution Data Optimized (EV-DO) interface, an Evolved High-Speed Packet Access (HSPA+) interface, or an LTE interface. Additionally, for example, user device  includes a wireless local area network interface, such as a WiFi interface.","According to an exemplary embodiment, when a user uses a program delivery service, the user is authenticated. According to an exemplary embodiment, when the user enters his\/her user credentials, the user credentials are stored by user device . According to an exemplary embodiment, when user device  switches from one wireless network to another wireless network, user device  provides the stored user credentials. In this way, the user may not have to re-input user credential data. According to an exemplary embodiment, when the user quits a mobile application pertaining to the program delivery service, the stored user credentials are deleted. In this way, issues pertaining to privacy, security, etc., are maintained.","According to an exemplary embodiment, when a user begins to view a program, a mobile application of user device  buffers program data associated with the program. When a user switches from one wireless network (e.g., a mobile network) to another wireless network (e.g., a wireless local area network), the network offload is managed, at least in part, at the application layer (e.g., the mobile application that plays the program). For example, during a network offloading process, the user may view buffered program data. The duration of the program that is buffered depends on the amount of time needed to complete the network offload. According to an exemplary embodiment, the amount of program data buffered or a duration that the program is buffered is based on a network offload prediction time. According to another exemplary embodiment, an advance network offload notification is used to minimize the amount of program data buffered or the duration that the program is buffered.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 6","b":["600","605","610","1","610","610","610","620","600","250","645","650"]},"The number of devices and networks, and the configuration in environment  are exemplary and provided for simplicity. According to other embodiments, environment  may include additional devices, fewer devices, different devices, and\/or differently arranged devices, than those illustrated in .","According to other embodiments, a single device may be implemented as multiple devices and\/or multiple devices may be implemented as a single device. A device may be implemented according to a centralized computing architecture or a distributed computing architecture. Additionally, a device may be implemented according to one or multiple network architectures (e.g., a client device, a server device, a peer device, or a combination thereof).","Also, according to other embodiments, one or more functions and\/or processes described as being performed by a particular device may be performed by a different device, or some combination of devices. By way of example, one or more functions and\/or processes described as being performed by application device  may be performed by user device , or vice versa, or in combination.","Network  includes a wireless network that provides mobile service. Network  provides users with a program delivery service including network offloading. Network  may also include networks that provide other services, such as Internet service.","Wireless devices  include network devices having wireless communicative capabilities that provide access to network . For example, wireless device  may be implemented as a base station (BS), an enhanced Node B (eNB), etc.","Application device  includes a network device that supports various services related to user connections with network  and mobile service including program delivery. For example, application device  may provide or support user authentication, authorization, and billing. Application device  may also provide or support program delivery services. For example, application device  may facilitate program delivery of programs to user device . Application device  may also provide or support network offloading. Application device  may be implemented as a computational device, such as a server device, an application server, an Authentication, Authorization, and Accounting (AAA) device, and\/or other suitable network device(s).","Network  includes a wireless network. For example, network  may include an Institute of Electrical and Electronics Engineers (IEEE) 802.X network, a High Performance Radio LAN2 (HiperLAN2), or an Ultra Wide Band network. Network  provides access to network . Wireless device  includes a wireless device that provides access to network . For example, wireless device  may be implemented as a wireless router or other type of wireless access point.","According to an exemplary embodiment, user device \/ manages program session continuity during network offloading. For example, user device  may store user credential data for re-authentication when user device  switches from one wireless network to another wireless network. Additionally, for example, user device  may buffer program data to account for a network offloading time. In this way, the program session may continue with no or little interruption. A further description is provided below.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 7","b":["150","250","150","250","705","750","705","710","715","720","725","750","755","760","765","770","150","250"]},"Program player  includes a multimedia player that is capable of playing programs (e.g., audio and visual content). Program buffer manager  manages the buffering of a program. As described further below, program buffer manager  may buffer a program based on a network offload time. Program session manager  manages the program session between user devices \/ and networks \/\/. According to an exemplary embodiment, program session manager  tracks the position of a program during the playing of the program. Program session tracking information may be used when user devices \/ change, for example, from one wireless network (e.g., network ) to another wireless network (e.g., network ), or vice versa, during a network offloading process. According to another embodiment, application device  performs program session tracking. Data connection monitor  monitors the state of a connection between user devices \/ and a wireless network (e.g., network , network , etc.). Data connection monitor  identifies when wireless networks are available for connection. As described further below, data connection monitor  manages advance network offloading notifications, which may be used to minimize the amount or the duration of buffering of a program.","IP stack and transport session  includes network protocols associated with an IP\/Transport Control Protocol (IP\/TCP) stack. Cellular drivers  include a driver application or a driver program for a mobile connection to a wireless network (e.g., CDMA, UMTS, etc.). Wireless broadband drivers  include a driver application or a driver program pertaining to a wireless connection to a wireless network (e.g., WiFi, LTE, etc.). Wireless interfaces  include an application or a program for wireless connection (e.g., a radio connection, etc.) via a wireless transmitter and a wireless receiver, or a wireless transceiver.","Described below is an exemplary process for performing application layer-based network offloading.  illustrates an exemplary application layer-based network offloading programs process performed in environment . Referring to , assume that a user of user device  establishes a connection with network  via wireless device . After a connection is established, the user launches a mobile application and connects to application device . The user is prompted for credentials and the user inputs his\/her user credentials. As illustrated, the user credentials are transmitted to application device . Additionally, the user credentials are stored by user device .","Application device  authenticates and authorizes the user\/user device . After the authentication and authorization process, application device  provides user device  with a graphical user interface (e.g., a program guide) to permit the user to select a program for viewing.","Referring to , the user makes a selection of a program via the graphical user interface. User device  receives the program selection and transmits the program selection to application device . Application device  provides the program selection to a program device . For example, program device  stores programs and is part of a program delivery network. In response to the program selection, program device  provides the program to user device . As illustrated, user device  (e.g., program buffer manager ) buffers the program based on a network offload time. For example, program buffer manager  may buffer based on a time property (e.g., 15 seconds, etc.) and\/or an amount of data property (e.g., so many bytes, etc.). According to an exemplary embodiment, program buffer manager  buffers the program when the program is first received. During this time, the user may not view the program. The buffer is continuously filled thereafter so if a network offloading event occurs, user device  (e.g., program player ) may continue to play the program from a buffer (e.g., a memory) while the network offloading takes place and the streaming or downloading of the program has temporarily stopped.","As further illustrated in , user device  (e.g., program session manager ) tracks the location of the program to generate program location information. According to an exemplary implementation, the program location information indicates the position of the program (e.g., a time, a program data marker (e.g., a program chunk, a byte or byte range, etc.), etc.) viewed by the user. According to another implementation, the program location information indicates the position of the program received by user device . During this time, program player  plays the program as it is received (e.g., streamed, downloaded) to permit the user to view the program.","According to an exemplary scenario, assume the user is traveling to his\/her home or place of work. Referring to , when the user is within a certain distance from wireless device , user device  (e.g., data connection monitor ) detects the presence of wireless device  (e.g., via OEM layers  and\/or via an operating system of user device ). According to an exemplary implementation, data connection monitor  includes connection priority rules that govern an invocation of network offloading. The connection priority rules may be user-configured and\/or service provider configured. The connection priority rules may give priority of one or more wireless networks relative to other wireless network(s). For example, according to an exemplary situation, assume the user is receiving the program via an LTE connection. The user may have a subscription (e.g., a data plan) that allows for a certain amount of data before excess fees are applied. Under such circumstances, the connection priority rules may dictate that when network  (e.g., a WiFi network) via wireless device  is available, data connection monitor  will initiate a network offload. Additionally, or alternatively, the connection priority rules may be based on other types of performance metrics or user-related preferences. For example, under some circumstances, wireless device  may provide more bandwidth to user device  than an LTE network.","As illustrated in , user device  establishes a connection with network  via wireless device . In this example, it is assumed that user device  is unable to be simultaneously connected to multiple networks. However, according to other embodiments of user device , user device  may be capable of being simultaneously connected to multiple networks (e.g., network  and network ). During the connection establishment process, user device  (e.g., program player ) plays the program data stored in a buffer. Once user device  establishes a connection with network , user device  (e.g., program session manager ) establishes a connection with application device  to resume the playing of the program. As illustrated in , user device  may transmit user credential data and\/or program location information that indicates a program location subsequent to the buffered program data.","Referring to , application device  performs authentication and\/or authorization services using the user credential data. Additionally, application device  provides program device  with program location and program identifier information (e.g., program identifier is known to application device ) to program device . User device  establishes a program session with program device . Program device  continues to provide the program to user device  beginning at the program location subsequent to the buffered program data location. User device  continues to play the program after the network offloading process is completed via network  (e.g., via wireless device ).","According to an exemplary embodiment, user device  identifies the position of user device  relative to the boundaries of network . For example, user device  may calculate user position based on a Global Positioning System (GPS) or other suitable location-aware system. User device  may predict when a network offloading may take place based on a speed and a direction associated with the user's mobility and current position relative to the boundaries of network . According to an exemplary implementation, the boundaries or geographic wireless connection reach of network  may be based on (initial) wireless detection of network  and the positions of user device  when the (initial) detection(s) of network  occurs. According to another implementation, the position of wireless device  may form a basis to calculate a radius of the wireless connection reach of network  and corresponding positional reach. In either case, according to an exemplary embodiment, application layers  receives an advanced network offloading notification (e.g., an application programming interface (API) level notification, such as an OEM API level notification, to permit user device  to initiate a wireless connection with network .","According to an exemplary embodiment, user device  may transmit an advanced network offloading alert to application device . The network offloading alert may include a predictive program location based on a current position of the user relative to a boundary of network  and predictive time factors. By way of example, the predictive time factors may include the duration of time when user device  may establish a connection with network  and the duration of time program will continue to play before connection with network  is established. In response to receiving the advanced network offloading alert, application device  transmits the predictive program location and program identifier information.","During the network offloading, user device  (e.g., program player ) plays the program from the buffer. According to this example, the amount of program data or the duration of the buffering of program data may be reduced, since user device  and\/or network  may prepare for the network offloading while simultaneously delivering the program via network .","According to other embodiments, advanced network offloading notification is not used. Rather, user device  detects when network offloading is to be performed based on conventional methods of detection of an available network in combination with the connection priority rules.","According to the exemplary network offloading processes illustrated and described in relation to , interruption of program delivery may be minimized. The network offloading is accomplished, at least in part, at the (mobile) application layer based on the program buffering by user device . Although  through  illustrate exemplary devices and messages, according to other embodiments, the messages and\/or the devices may be different. For example, depending on the type of network and the network devices therein, the functionalities assigned to each network device, etc., various modifications may be implemented.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 9","b":["900","250","900"]},"Referring to , in block , a session for delivery of a program is established. For example, user device  negotiates and establishes a wireless connection with network . User device  establishes a program session via network  for the delivery of a program","In block , the program is received. For example, user device  receives a user selection of a program via a graphical user interface. User device  begins to receive the program selected by a user.","In block , program location tracking is performed. For example, user device  (e.g., program session manager ) tracks a time position, a program data position (e.g., a program chunk, a byte range, etc.), or other suitable marker related to the streaming or downloading of the program.","In block , the program is buffered based on a network offloading time. For example, user device  (e.g., program buffer manager ) buffers a portion of the program equivalent to a network offloading time. For example, the network offloading time may correspond to an amount of program data or a playing time of the program sufficient for a network offloading from one wireless network to another wireless network to be completed. According to an exemplary implementation, the network offloading time may be a preconfigured value. As previously described, depending on whether advanced network offloading notification is used, the amount of program data or the buffering time vis-\u00e0-vis the network offloading time may vary.","In block , the program is played. For example, user device  plays the program via an application (e.g., program player ).","In block , it is determined whether network offloading is to be performed. For example, user device  (e.g., data connection monitor ) may identify when a network offloading is to be performed based on detection of an available wireless network and connection priority rules. Alternatively, user device  may initiate, in advance, a network offloading, as previously described.","If it is determined that a network offload is not to take place (block -NO), then process  continues to block . That is, user device  continues to receive the program, perform program location tracking, and buffer the program. If it is determined that a network offload is to take place (block -YES), then the program is played from a buffer (block ). For example, user device  (e.g., program player ) plays a portion of the program that has been buffered.","In block , program location information is provided. For example, user device  provides program location information (e.g., a position of the program) to a network device (e.g., application device ). User device  may also provide a program identifier and\/or other information (e.g., user credential data, etc.) to application device .","In block , the network offload is performed. For example, user device  and network  coordinate a network offload. By way of example, user device  disconnects from one wireless network (e.g., network ) and connects to another wireless network (e.g., network ).","In block , another session for delivery of the program is established. For example, user device  establishes a program session with program device  for receiving the program. User device  continues to buffer the program based on the newly established connection. User device  continues to play the program with no or little interruption of program delivery service.","Although  illustrates an exemplary process  for performing an application layer-based network offloading of a program, according to other embodiments, process  may include additional operations, fewer operations, and\/or different operations than those illustrated in  and described herein. Additionally, some operations described as being performed by user device  may be instead performed by a network device, or some combination thereof.",{"@attributes":{"id":"p-0125","num":"0124"},"figref":["FIG. 10","FIG. 10"],"b":["1000","100","200","600","1000","1005","1010","1015","1020","1025","1030","1000"]},"Processor  includes one or multiple processors, microprocessors, data processors, co-processors, application specific integrated circuits (ASICs), controllers, programmable logic devices, chipsets, field-programmable gate arrays (FPGAs), application specific instruction-set processors (ASIPs), system-on-chips (SoCs), central processing units (e.g., one or multiple cores), microcontrollers, and\/or some other type of component that interprets and\/or executes instructions and\/or data. Processor  may be implemented as hardware (e.g., a microprocessor, etc.), a combination of hardware and software (e.g., a SoC, etc.), may include one or multiple memories (e.g., memory\/storage ), etc.","Processor  may control the overall operation or a portion of operation(s) performed by device . Processor  may perform one or multiple operations based on an operating system and\/or various applications (e.g., application ). Processor  may access instructions from memory\/storage , from other components of device , and\/or from a source external to device  (e.g., a network, another device, etc.).","Memory\/storage  includes one or multiple memories and\/or one or multiple other types of storage mediums. For example, memory\/storage  may include one or multiple types of memories, such as, random access memory (RAM), dynamic random access memory (DRAM), cache, read only memory (ROM), a programmable read only memory (PROM), a static random access memory (SRAM), a single in-line memory module (SIMM), a phase-change memory (PCM), a dual in-line memory module (DIMM), a flash memory, and\/or some other type of memory. Memory\/storage  may include a hard disk (e.g., a magnetic disk, an optical disk, a magneto-optic disk, a solid state disk, etc.), a Micro-Electromechanical System (MEMS)-based storage medium, and\/or a nanotechnology-based storage medium. Memory\/storage  may include drives for reading from and writing to the storage medium.","Memory\/storage  may be external to and\/or removable from device , such as, for example, a Universal Serial Bus (USB) memory stick, a dongle, a hard disk, mass storage, off-line storage, or some other type of storing medium (e.g., a compact disk (CD), a digital versatile disk (DVD), a Blu-Ray\u00ae disk (BD), etc.). Memory\/storage  may store data, application(s), and\/or instructions related to the operation of device .","Application  may include software or a program that provides various services and\/or functions. For example, with reference to network devices  and according to an exemplary embodiment, application  may include one or multiple applications or programs that provide program delivery services, as described herein. Additionally, with reference to user device \/ and according to an exemplary embodiment, application  may include one or multiple applications (e.g., functions associated with application layers , etc.), as described herein.","Communication interface  permits device  to communicate with other devices, networks, systems, etc. Communication interface  may include one or multiple wireless interfaces. Communication interface  may include one or multiple transmitters, receivers, and\/or transceivers. Communication interface  may operate according to one or multiple protocols, standards, and\/or the like.","Input  may permit an input into device . For example, input  may include a keyboard, a mouse, a camera, a scanner, a microphone, a display, a touchpad, a touchscreen, a touchless screen, a button, a switch, an input port, voice recognition logic, speech recognition logic, fingerprint recognition logic, a web cam, and\/or some other type of visual, auditory, tactile, etc., input component. Output  may permit an output from device . For example, output  may include a speaker, a display, a touchscreen, a touchless screen, a light, an output port, and\/or some other type of visual, auditory, tactile, etc., output component.","Device  may perform processes and\/or functions, as described herein, in response to processor  executing instructions (e.g., application ) stored by memory\/storage . By way of example, the instructions may be read into memory\/storage  from another memory\/storage  or from another device via communication interface . The instructions stored by memory\/storage  may cause processor  to perform one or more processes described herein. Alternatively, for example, according to other implementations, device  may perform one or more processes described herein based on the execution of hardware (processor , etc.), the execution of hardware and firmware, or the execution of hardware, software, and firmware.","The foregoing description of embodiments provides illustration, but is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Accordingly, modifications to the embodiments described herein may be possible.","The terms \u201ca,\u201d \u201can,\u201d and \u201cthe\u201d are intended to be interpreted to include one or more items. Further, the phrase \u201cbased on\u201d is intended to be interpreted as \u201cbased, at least in part, on,\u201d unless explicitly stated otherwise. The term \u201cand\/or\u201d is intended to be interpreted to include any and all combinations of one or more of the associated items.","In addition, while series of blocks have been described with regard to the processes illustrated in , B, C, and , the order of the blocks may be modified according to other embodiments. Further, non-dependent blocks may be performed in parallel. Additionally, other processes described in this description may be modified and\/or non-dependent operations may be performed in parallel.","The embodiments described herein may be implemented in many different forms of software, firmware, and\/or hardware. For example, a process or a function may be implemented as \u201clogic\u201d or as a \u201ccomponent.\u201d This logic or this component may include hardware (e.g., processor , etc.), a combination of hardware and software (e.g., application ), a combination of hardware and firmware, or a combination of hardware, firmware, and software. The embodiments have been described without reference to the specific software code since software can be designed to implement the embodiments based on the description herein.","In the preceding specification, various embodiments have been described with reference to the accompanying drawings. It will, however, be evident that various modifications and changes may be made thereto, and additional embodiments may be implemented, without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded as illustrative rather than restrictive.","In the specification and illustrated by the drawings, reference is made to \u201can exemplary embodiment,\u201d \u201can embodiment,\u201d \u201cembodiments,\u201d etc., which may include a particular feature, structure or characteristic in connection with an embodiment(s). However, the use of the phrase or term \u201can embodiment,\u201d \u201cembodiments,\u201d etc., in various places in the specification does not necessarily refer to all embodiments described, nor does it necessarily refer to the same embodiment, nor are separate or alternative embodiments necessarily mutually exclusive of other embodiment(s). The same applies to the term \u201cimplementation,\u201d \u201cimplementations,\u201d etc.","No element, act, or instruction described in the present application should be construed as critical or essential to the embodiments described herein unless explicitly described as such."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3D"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 5A-5C"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 8A-8D"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
