---
title: Enhanced tabular data stream protocol
abstract: Systems and methodologies are provided as part of a computing environment that implements an enhanced tabular data stream (TDS) protocol. Such enhanced TDS protocol can mitigate synchronization inconsistencies between client and servers, improve robustness of the data transfer, facilitate password specification as part of login procedures, and reduce administration overhead. Various headers are provided as part of the data stream protocol, and a versioning scheme is established that facilitates proper communication between servers and clients having different release dates and versions of the TDS protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08370511&OS=08370511&RS=08370511
owner: Microsoft Corporation
number: 08370511
owner_city: Redmond
owner_country: US
publication_date: 20080104
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a continuation of copending U.S. application Ser. No. 10\/773,724, filed Feb. 6, 2004, entitled ENHANCED TABULAR DATA STREAM PROTOCOL, the entirety of both are hereby incorporated by reference as if fully set forth herein.","The present invention relates generally to features of a Tabular Data Stream (TDS) protocol, and more particularly to systems and methods for improving security, compatibility and synchronization between servers and client drivers that employ the TDS protocol.","Advances in computer technology (e.g., microprocessor speed, memory capacity, data transfer bandwidth, software functionality . . . ) have generally contributed to increased computer application in various industries, such that organization of computer systems has changed dramatically. The concept of a large computer center with a single large computer to which all users bring their work is obsolete. Similarly, Data Base Management Systems (DBMS systems) have long since moved from a centralized mainframe environment to a de-centralized or distributed environment. One or more PC \u201cclient\u201d systems, for instance, can be connected via a network to one or more server-based database systems (SQL database server). Known examples of computer networks include local-area networks (LANs) where the computers are geographically close together (e.g., in the same building), and wide-area networks (WANs) where the computers are farther apart and are connected by telephone lines or radio waves.","Often, networks are configured as \u201cclient\/server\u201d networks, such that each computer on the network is either a \u201cclient\u201d or a \u201cserver.\u201d Servers are powerful computers or processes dedicated to managing shared resources, such as storage (e.g. disk drives), printers, modems, or the like. Servers are often dedicated, meaning that they perform no other tasks besides their server tasks. For instance, a database server is a computer system that manages database information, including processing database queries from various clients. The client part of this client-server architecture typically comprises PCs or workstations which rely on server(s) to perform operations. Typically, a client runs a \u201cclient application\u201d that relies on a server to perform some operations, such as returning particular database information. Over such networks various protocols that","transport information according to specifications, while at the same time accompany other request-response protocols have emerged.","One such protocol is the TDS protocol, which is a message oriented application level protocol employed for transfer of requests and responses between client and server systems, and can include native support for traditional Structured Query Language (SQL) data types, such as character (char), variable-length character (vchar), binary (blob), date-time, time stamp, together with some support for vendor-specific data types. In systems employing TDS it is typical for a client, such as a user or application program, to establish a long-lived connection with a server, such as a database system. Upon a successful hand shake and establishment of the connection via any suitable supported transport\/session level protocol, a complete message is sent from client to server after which a complete response is sent from server to client.","Generally, some prior versions of the TDS protocol were not adapted to designate whether down level clients and new clients can communicate with down level servers or new servers. In addition, various requirements of the protocol could typically create potential inefficiencies in utilizing a system's resources. For example, to send large values in the form of <length> followed by <stream of bytes> can require computation, and allocation of a CPU memory, which could have other wise been employed for completion of higher priority tasks. As another example, during a re-set operation the client driver typically does not know if the re-set operation had succeeded or not, until the submitted request has been completed. As such, long running requests could imply long wait times to determine whether a re-set operation had succeeded or not, and while the driver was pending confirmation of success of a reset operation, other requests on the same connection were blocked, as it was uncertain whether the connection was usable or not.","At the same time in some cases it can be desirable for a client driver to cancel a command executing in the server without rolling back the current transaction. Likewise, it can be desirable to reduce administration over head when employing a TDS protocol in a network environment. For example, having administrators assigned to resetting user expired passwords can increase costs and reduce productivity.","Therefore, there is a need to overcome deficiencies associated with conventional systems.","The following presents a simplified summary of the invention in order to provide a basic understanding of one or more aspects of the invention. This summary is not an extensive overview of the invention. It is intended to neither identify key or critical elements of the invention, nor to delineate the scope of the present invention. Rather, the sole purpose of this summary is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented hereinafter.","The present invention provides for an enhancement of a Tabular Data Stream (TDS) protocol that can be employed for client\/server communication networks. As part of such enhanced protocol, various systems and methods are provided for versioning and supporting a Multiple Active Result Sets (MARS) feature, which can include a data field header, for example. Such a data field can identify to servers a number of pending requests known by clients, and facilitate query synchronization, regardless of buffer sizes employed in the client-server communications network. Other aspects of the enhanced TDS protocol according to the present invention can facilitate query execution and administration aspects (e.g. password regulation) for such networks.","A versioning scheme of the present invention accounts for chronological versioning of TDS components (e.g. release dates), as well as software versioning (e.g. protocol version), and negotiates down to a common version between the client and the server side. Such scheme can facilitate instant determination of a protocol version that is common between the client and the server, so that both down level clients and new clients can communicate with both down level servers and new servers, for example. Accordingly, background compatibility between the server and client can be improved when changes occur to implemented versions of the TDS protocol.","Another aspect of TDS protocol of the present invention improves consistency of behavior on server side, e.g. when server commits transactions. Initially, and as part of a header field, client can send to server number of pending requests known to client driver. In case server already has completed processing of previous requests, such number reported by client helps synchronize and coordinate a view of the number of requests currently pending therebetween. Such can typically mitigate inconsistent server behavior related to instances wherein buffer zones are waiting to be read by the client. For example, a typical inconsistent behavior can arise when the client executes a query, the server performs and the results remain in a network buffer waiting to be read by the client.","In a related aspect according to the present invention, query notification headers are provided as part of the enhanced TDS protocol. At the time of establishing the query, the server is asked to provide the client with future update results related to the query. As such, a requirement for periodically re-asking the server of any changes to the initial query can be mitigated. Accordingly, the manner of sending such notifications (e.g. channels for sending the notification); as well as the set up for notification is established at the time of the query, and does not require changes to be made on the client side. Moreover such feature allows creation of middle tier type caches, which can be transparent to the client.","To the accomplishment of the foregoing and related ends, the invention, then, comprises the features hereinafter fully described. The following description and the annexed drawings set forth in detail certain illustrative aspects of the invention. However, these aspects are indicative of but a few of the various ways in which the principles of the invention may be employed. Other aspects, advantages and novel features of the invention will become apparent from the following detailed description of the invention when considered in conjunction with the drawings.","The present invention is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It may be evident, however, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to facilitate describing the present invention.","As used in this application, the term \u201ccomputer component\u201d is intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a computer component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a computer component. One or more computer components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","The present invention provides for an enhanced Tabular Data Stream Protocol with a versioning scheme, annotation of requests, and Multiple Active Results Sets (MARS) headers. Typically, in systems employing TDS, a client, such as a user or application program initiates a handshake with the server and sends a complete message thereto, after which a complete response is sent from server to client. For example, below is a high level description of the messages exchanged between the client and the server to execute a simple SQL statement (e.g. select name from sysobjects where id<2).","Client: sql statement","The server executes the statement and then sends back the results to the client. The data columns being returned are first described by the server and then the rows follow. A completion message is sent after the row data has been transferred.",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Server:\u2003","COLMETADATA \u2003","data stream"]},{"entry":[{},{},"ROW","data stream"]},{"entry":[{},{},"."]},{"entry":[{},{},"."]},{"entry":[{},{},"ROW","data stream"]},{"entry":[{},{},"DONE","data stream"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["100","104","106","110","110","130","100","130"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":["200","224","226","228","221","221","222","226","228","228"]},"Referring now to  various other feature enhancements for a TDS protocol  is illustrated, in accordance with an aspect of the present invention. For example, chunk format component  can employ a Partially Length Prefixed (PLP) format to transmit large volumes of data, as described in detail infra. Briefly, the chunk format component  provides for a special length designator, which can be sent to a data stream receiver  (e.g. a client), indicating that length of total value is not known, and that such value can be streamed in several chunks. For example, each chunk can contain a <chunk length> designator followed by <bytes of chunk>, with a specific value reserved for <chunk length> as designation to the receiver . Thus, data stream packets  can have individual data items that are themselves streams of indeterminate length, and transmittal of large data values is thus facilitated. Moreover, the chunk format component  of the TDS protocol  provides the receiver  with option of additional optimization that can exist as part of the receiver . Likewise, a re-order component  provides for a re-order of large output parameters in the data stream , e.g., small values can be sent first with the large values to follow. Such feature can enable efficient parameter retrieval from the API model, as described in detail infra. Similarly, a conversion component  of the TDS protocol  is a new transaction manager request of (TM_PROMOTE), as described in detail infra, which can convert a local transaction into a Distributed Transaction Coordinator (DTC) transaction. Such improvement can facilitate application performance, for example in COM+ programming model(s), System Enterprise Services\/System Transactions, wherein transaction services can be provided at component boundaries with several disjoint components co-operating under a same transaction and employing a single SQL Server Resource Manager. In addition, a server side attention component  is provided that enables graceful failure of a server side without dropping an established connection. Briefly, a bit is reserved in the TDS header, such that a packet as part of data stream  sent from the server to the client can set such bit, indicating to a server side cancellation of a currently executing request. Thus if such bit is set, client drivers can become prepared to abort current requests. As such, internal state of client drivers can generally be reset, and any subsequent protocol packets can be treated as new server side responses with state recreated thereafter. A server side attention component  provides robustness to the TDS protocol , so that occurrence of exceptions and errors on the server side do not fatally affect entire connection or other requests running there under. Similarly, a low severity attention component  provides for an interrupt signal without affecting transaction semantics, and is described in detail with respect to  infra.","A password change component  of the TDS protocol  specifies a new password as part of a login procedure, when the old password is presented. If a previous password matches, systems employing the TDS protocol  can change the password for login. Subsequently, such systems can proceed with logon process and session establishment. Similar to resetting the connection, the password change request component  can be achieved by being aligned with, and performed as a function of another request, which is sent out of band from an initial query of the protocol . Accordingly, problems associated with locked out administrators, as well as administrators resetting users' expired passwords can be mitigated.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4","b":["420","410","450","460","410","430","440","420","415","450","480","480","460","470","480","420","450","490","410","430","490","450","460","420","450","450","490"]},"On the client side  the data can be a login record, or a Structured Query Language (SQL) command being in a language that the server side  can accept, a SQL command followed by its associated binary data (e.g. the data for a bulk copy command), or an attention signal. When a connection is desired, the client  can send a login data stream to the server. Even though the client  can have more than one connection to the server , each connection path can be established separately and in the same manner. An exemplary TDS protocol and detailed syntax employed for marking the data is provided at the end section of this specification.","Once the server  has received the login record from the client  it will notify the client that it has either accepted or rejected the connection request. Like wise to send SQL command or batch of SQL commands; then the SQL command (e.g. represented by a Unicode format) can be copied into the data section of a buffer and then sent to the SQL Server side . A SQL batch may span more than one buffer. In addition, various Open Data Base Connectivity (ODBC) routines can cause SQL command to be placed into a client message buffer, or can cause the message buffer to be sent to the server. Such buffer header arrangement according to one aspect of the present invention will be described in detail infra.","In addition, for an SQL command with binary data, the insert bulk operation can represent a case of a SQL command (e.g. in a Unicode format) followed by binary data. Initially, an insert bulk command can be sent to the server  in the normal way, and once an acknowledgment is received from the server , the client  can then send formatted binary data to the server . Such functionality can be provided by routines included in the ODBC, in accordance with one exemplary aspect of the present invention. Moreover, the client  can initially send an insert bulk SQL statement, followed by a COLMETADATA token, which describes the raw data, followed by Multiple rows of binary data, to the server . The data is not formatted in storage engine row format, but rather the format described by the COLMETADATA token. The stream is the same as if the data was being selected from the server  rather than being sent to the server . One particular TDS protocol and detailed syntax employed for marking the data is provided toward the end section of this specification.","In one aspect of the present invention, when there is desire to execute a remote procedure call on the server , the client  can send a Remote Procedure Call (RPC) data stream to the server. Such is a binary stream that contains the RPC name, options and parameters. Typically, RPCs can be in a separate message and not intermixed with SQL commands. Additionally, there can be several RPCs in one message.","If an interrupt is desired, the client  can cancel a current command by sending an attention signal (also known as out-of-band data). Once the client  sends an attention signal, described in further detail infra, the client continues reading until it gets an attention acknowledgment. During the time between sending the attention and receiving the acknowledgment, the client  can discard any buffers it receives. An attention request of the present invention can roll back any transactions active in the request's stack. In a related aspect, the client  can request that the connection enlist in a Distributed Transaction Coordinator (DTC) transaction. Furthermore, the client  can interrupt and cancel a current command without affecting transaction semantics by sending a non severe attention (NSA) signal. Once the client  sends an NSA, the client reads until it gets an attention acknowledgment. An NSA cancels a specific request though it does not affect the state of the current transaction. It is noted that an NSA can be sent to the server  during the execution of the following stored procedures, when invoked via IPC (interprocess communications) that are numbered on the RPC requests of, Sp_cursor; Sp_cursorfetchnext and Sp_cursoroption. If NSA is sent during execution of any other command or to abort non-ipc invocation, it can be considered a client error and an error flag can be raised. Typically, in other respects the NSA behaves as a regular attention.","Referring now to the server side , the data can comprise; a login response, row data, return status of an RPC, return parameters of an RPC, request completion information, error and information or an attention signal as described in detail infra. The login response can be a token stream consisting of information about server  characteristics, optional information and error messages, followed by a completion message. Here, a LOGINACK data stream can include information about the SQL interface and the server's  product code and name. If there are any messages in the login response, an ERROR or INFO data stream is returned from server  to the client .","There can also be a ENVCHANGE data stream if the login changed the environment and the associated notification flag has been set. Moreover, if the database specified for connection in the login packet is participating in real time log shipping, then the corresponding ENVCHANGE can be included as part of the response. A done packet is always present as the final part of the login response. Thus, a DONE data stream is the last thing sent in response to a client  login request. Moreover, if the client request results in data being returned, the data can precede any other data streams returned from the server, e.g. Row data is preceded by a description of the column names and data types. When an RPC is executed by the server, the server typically returns a status value. Such can be a 4-byte integer that can be sent via the RETURNSTATUS token. As for the return parameters, the response format for execution of a stored procedure can be identical, regardless of whether the request was sent in SQL or RPC format. For example, such can be a \u201ctable response to command\u201d type message.","If the procedure explicitly sends data, then the message can start with one token stream of rows, informational messages and error messages. Such data can be sent in the usual way. Also, when the RPC is invoked, some or all of its parameters can be designated as output parameters. Such features allow RPC parameters to act like variables that are passed by reference. Typically, output parameters can have values returned from the server . For each output parameter there can be a corresponding return value, sent via the RETURNVALUE token. The RETURNVALUE stream can also be employed for sending back the value returned by a User Defined Function (UDF), when it is called as an RPC.","Although the end-of-message can be determined by the length field in the buffer header, the client  can read results in logical units, and can also determine when all results have been received by examining the DONE data stream. Accordingly, when executing a batch of SQL commands, there can be a DONE data stream for each set of results. All but the last DONE can have the DONE_MORE bit set in the Status field of the DONE data stream. Therefore, the client can typically tell after reading a DONE whether or not there are more results. Likewise, for stored procedures, and for each statement, completion of statements in the stored procedure can be indicated by a DONEINPROC data stream, and a DONEPROC data stream for each completed stored procedure. For example, if a stored procedure executes two other stored procedures, a DONEPROC data stream can signal the completion of each stored procedure. Additionally, besides returning description of row data and data itself, an enhanced TDS protocol according to the present invention can provide a data stream type for the server to send error or informational messages to the client. Such can be the INFO data stream and the ERROR data stream. At the same time, once the client  has sent an interrupt signal to the server , the client  typically can read returning data until the interrupt has been acknowledged. As such, attentions are acknowledged in the DONE data stream or the DONEPROC data stream. An exemplary TDS protocol and detailed syntax employed for marking data is provided toward an end section of this specification.","Referring now to , an exemplary buffer header arrangement in accordance with an aspect of the present invention is illustrated. Typically a buffer is the unit written or read at one time, and can be modeled as a \u201cpacket\u201d. A message can consist of one or more buffers. A buffer can include a buffer header and is usually followed by buffer data that contains the message. Moreover, each new message can start in a new buffer.","Typically, both the Client and Server will try to read a buffer full of data. They can pick out the header to see how much more (or less) data there is in the communication. When the underlying network interface insists on blocking until all bytes specified in the read have been read, the client can read the header and then determine how much more to read. In one aspect of the present invention and at login time, client can specify a requested \u201cpacket\u201d size. Such can identify a size employed to break large messages into smaller \u201cpackets\u201d. Furthermore, server acknowledgement of changes in the negotiated packet size can be transmitted back to the client via ENVCHANGE streams. Also, for requests sent to the server larger than the current negotiated \u201cpacket\u201d size, client typically can send all but the last chunk with a total number of bytes equal to the negotiated size. As such, only the last packet in the request can have an actual number of bytes smaller than the negotiated packet size. If any of the intermediate chunks is not sent at its \u201cmaximum capacity\u201d the server disconnects the client when the next chunk arrives.","In a related aspect of the present invention, to implement messages on top of existing and arbitrary transport layers, a buffer header is included as part of the buffer. As illustrated in  a particular example of a buffer header, which precedes all data within the buffer, can be 8 bytes in length. Such buffer header can further include items such as; Type, Status, Length, SPID, Packet and window; as described in detail below.","Type","Type defines the kind of message. Type can be a 1 byte unsigned char. Types can include:",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Value","Description","Data?"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","SQL batch. This can be any language that the","\u2713"]},{"entry":[{},"server understands"]},{"entry":["2","Pre-TDS7 login","x"]},{"entry":["3","Remote Procedure Call (RPC).","\u2713"]},{"entry":["4","Table response to a command. This indicates a","\u2713"]},{"entry":[{},"token stream which contains the server response"]},{"entry":[{},"to a client."]},{"entry":["5","Unused"]},{"entry":["6","Attention signal","x"]},{"entry":["7","Bulk Load data. This type is used to send binary","\u2713"]},{"entry":[{},"data to the server"]},{"entry":["8","Non Severe Attention Signal"]},{"entry":["9","Unused","\u2014"]},{"entry":["10\u2002","Protocol error detected","x"]},{"entry":["11-12","Unused","\u2014"]},{"entry":["14\u2002","Transaction manager request","\u2713"]},{"entry":["15\u2002","Unused","\u2014"]},{"entry":["16\u2002","TDS7 login","x"]},{"entry":["17\u2002","SSPI Message","x"]},{"entry":["18\u2002","Pre-login Message","x"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"For example, the following illustrates a description of a particular message exchange between the client and the server:",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"<<< private_srvproc.h >>>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/\/ Values for type field of SRV_TDSHDR"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define TDS_MT_SQLBATCH","((BYTE)1)","\/\/ SQL batch","Incoming"]},{"entry":["#define TDS_MT_LOGIN","((BYTE)2)","\/\/ Pre-TDS7 Login","Incoming"]},{"entry":["#define TDS_MT_RPC","((BYTE)3)","\/\/ RPC","Incoming"]},{"entry":["#define TDS_MT_RESULTS","((BYTE)4)","\/\/ Results","Outgoing"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ 5 UNUSED in ODS"]},{"entry":["\/\/ #define SRV_TDSUNFORMATTED ((BYTE)5)","\/\/ binary response to cmd"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define SRV_TDSATTENTION","((BYTE)6)","\/\/ attention signal","Incoming"]},{"entry":["#define SRV_TDSBULKLOAD","((BYTE)7)","\/\/ bulk load data","Incoming"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define SRV_TDS_NS_ATTENTION","((BYTE)8)","\/\/ non severe attention signal"]},{"entry":"\/\/ 9 UNUSED in spec"},{"entry":["#define SRV_TDSERROR","((BYTE)10)","\/\/ protocol error detected"]},{"entry":"\/\/ 11 UNUSED in spec"},{"entry":["\/\/#define TDS_MT_ECHO","((BYTE)12)","\/\/ echo (currently UNUSED)"]},{"entry":"\/\/ 13 UNUSED in spec"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define TDS_MT_DTC","((BYTE)14)","\/\/ DTC","Incoming"]},{"entry":["#define TDS_MT_LOGIN7","((BYTE)16)","\/\/ TDS7 Login","Incoming"]},{"entry":["#define TDS_MT_SSPI","((BYTE)17)","\/\/ SSPI Message","Incoming"]},{"entry":["#define TDS_MT_PRELOGIN","((BYTE)18)","\/\/ Prelogin Message","Incoming"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define SRV_MAXTDSTYPE 18","\/\/ maximum value of TDS type"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Status is a bit field used to indicate the message state. Status is a 1 byte unsigned char. Exemplary status include:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0x01","End of Message (EOM). The last byte in the buffer is EOM."]},{"entry":["0x02","(From server to client) buffer acknowledges the last attention sent"]},{"entry":[{},"(From client to server) ignore this event (0x01 must also be set)"]},{"entry":["0x04","Message is part of a batch (From client to server)"]},{"entry":["0x08","(From client to server) reset this connection before processing"]},{"entry":[{},"event. Only set by SQL Server 2000 clients, and only for"]},{"entry":[{},"event types Batch, RPC or DTC Request. This asks the"]},{"entry":[{},"server to simulate a logout and a subsequent login before"]},{"entry":[{},"the event, and provides server support for connection pooling."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/\/ Values for status field of SRV_TDSHDR"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define SRV_TDSEOM","((BYTE)0x01)","\/\/ eom"]},{"entry":["#define SRV_TDSIGNORE","((BYTE)0x02)","\/\/ ignore current message"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Length is the size of the buffer including the eight bytes in the buffer header. It is the number of bytes from the start of this header to the start of the next buffer header. Length can be a 2 byte unsigned short int.","SPID","Spid is the process id on the server, corresponding to the current connection. Such can be useful for identifying which thread on the server sent the TDS packet, and is provided for debugging purposes.","Packet","Packet is used for numbering message buffers that contain data in addition to the buffer header. Packet is a 1 byte unsigned char. Each time a data buffer is sent the value of tds packet is incremented. Exemplary \u201cData buffers\u201d can be of following types:",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","SQL batch"]},{"entry":["2","Non-SQL Server 7.0 (Sphinx) login"]},{"entry":["3","Remote Procedure Call (RPC)"]},{"entry":["4","Table response to a command, a token stream"]},{"entry":["5","Unformatted binary response to a command"]},{"entry":["6","Unused"]},{"entry":["7","Bulk Load Data"]},{"entry":["\u20028-11","Unused"]},{"entry":["12\u2002","Echo"]},{"entry":["13-15","Unused"]},{"entry":["16\u2002","SQL Server 7.0 (Sphinx) Login"]},{"entry":["17\u2002","SSPI"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Window item can be employed in conjunction with updates to the protocol.","In a related aspect of the present invention messages that pass between client and the server can typically be one of two types; either a \u201ctoken stream\u201d or a \u201ctokenless stream\u201d. A token stream consists of one or more \u201ctokens\u201d each followed by some token specific data. A \u201ctoken\u201d is a single byte identifier used to describe data that follows it (e.g. contains token data type, token data length and the like.) Tokenless streams are typically used for simple messages, while messages that can require a more detailed description of the data within it are sent as a token stream. The table below provides an example which messages use token streams and which do not.",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Client or",{}]},{"entry":[{},{},"Server"]},{"entry":[{},"Message Type","Message","Token Stream?"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Login","Client","x"]},{"entry":[{},"SQL Command","Client","x"]},{"entry":[{},"SQL with Binary Data","Client","\u2713"]},{"entry":[{},"Remote Procedure Call (RPC)","Client","\u2713"]},{"entry":[{},"Attention","Client","x"]},{"entry":[{},"Non Severe Attention","Client","x"]},{"entry":[{},"Transaction Manager Request","Client","x"]},{"entry":[{},"Login Response","Server","\u2713"]},{"entry":[{},"Row Data","Server","\u2713"]},{"entry":[{},"Return Status","Server","\u2713"]},{"entry":[{},"Return Parameters","Server","\u2713"]},{"entry":[{},"Request Completion","Server","\u2713"]},{"entry":[{},"Error and Info Messages","Server","\u2713"]},{"entry":[{},"Attention","Server","x?"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"As explained earlier some messages do not use tokens to describe the data portion of the data stream. In such cases all the information required to describe the buffer data is contained in the buffer header. This is referred to as a tokenless stream, and is essentially just a collection of buffers and data.  illustrates a tokenless stream in accordance with an aspect of the present invention that spans two buffers A and B.","Token Stream","More complex messages (e.g. Row Data) can be constructed using tokens.  illustrates a token stream according to one aspect of the enhanced TDS protocol of the present invention that spans two buffers, and consists of a single byte identifier, followed by token specific data.","Typically, there exist four classes of token, a zero length token, a fixed length token, a variable length token and a variable count token. Such are listed below including the bit pattern of the token, various extensions to this bit pattern for a given token class, and a description of their function(s), according to one aspect of the present invention.","Zero Length Token (xx01xxxx)","This token is not followed by a length. There is no data associated with the token. A zero length token always has its third bit off and the fourth bit on.","Fixed Length Token (xx11xxxx)","This token can be followed by 1, 2, 4 or 8 bytes of data. No length follows this token since the length of its associated data is encoded in the token itself. Bits  and  are always on. Bits  and  indicate the length of the fixed length data, as shown below.\n\n","In one exemplary aspect of the present invention, fixed length tokens can be employed by the following data types: bigint, int, smallint, tinyint, float, real, money, smallmoney, datetime, smalldatetime, and bit.","Variable Length Tokens (xx10xxxx)","This token is followed by a length. The length (in bytes) of this length is included in the token itself as a \u201cLength\u201d value (see the \u201cLength\u201d rule of the COLINFO token stream), as described toward an end section of this specification. Bit  is always on and bit  is always off.\n\n","There can be two data types that can be of a variable length. Such are \u201creal\u201d variable length data types like char and binary and \u201cnullable\u201d data types that are either their normal fixed length or a special length if null. Char and binary data types have values which are either null, or 0 to 65534 bytes in length. Null is represented by a length of 65535. A char or binary which cannot be null can still have a length of zero (e.g. an empty value). A program which must pad a value to a fixed length can typically add blanks to the end of a char and binary zeros to the end of a binary. Text and image data types have values which are either null, or 0 to 2 gb bytes in length. Null is represented by a length of \u22121. Other nullable data types have a length of 0 if they are null.","Variable Count Tokens (xx00xxxx)","This token is followed by a count of the number of following fields. Each field length is dependent on the token type. The total length of the token can be determined by walking the fields. A variable count token always has its third and fourth bits off.\n\n","The server generates a DONE token for every TRANSACT-SQL statement. In the implementation of ODBC all DONES can be passed back to the user when executing ad-hoc SQL statements. When handling results from stored procedures, ODBC can pass back to the user DONES which are part of SQL select statements. Such can be primarily due to triggers, but also can be due to the way stored procedures are used. It is very common for an application user to submit a simple update to the server and cause more than one SQL statement to be executed due to trigger on the target table. If all the DONES were passed back to the user, such user would have to be aware of any trigger and\/or stored procedure that might get executed, including all the statements contained in the triggers and stored procedures","Token Stream Examples","The following two examples highlight token stream communication, in accordance with an aspect of the present invention.","Sending a SQL Batch","In this example a SQL statement is sent to the server and the results are sent to the client. The SQL statement is:",{"@attributes":{"id":"p-0077","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"select name, empid from employees"]},{"entry":[{},"update employees set salary = salary * 1.1"]},{"entry":[{},"select name from employees where department"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Client:","SQL statement",{},{}]},{"entry":["Server:","COLMETADATA","data stream"]},{"entry":[{},"ROW","data stream"]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"ROW","data stream"]},{"entry":[{},"DONE","data stream","\u2009(with DONE_COUNT &"]},{"entry":[{},{},{},"DONE_MORE bits set)"]},{"entry":[{},"DONE","data stream","\u2009(for UPDATE, with"]},{"entry":[{},{},{},"\u2002DONE_MORE"]},{"entry":[{},{},{},"DONE_MORE bits set)"]},{"entry":[{},"COLMETADATA","data stream"]},{"entry":[{},"ROW","data stream"]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"ROW","data stream"]},{"entry":[{},"DONE","data stream","\u2009(with DONE_COUNT bit"]},{"entry":[{},{},{},"set)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"In this example a SQL command is sent to the server, yet before all the data has been returned an interrupt or \u201cAttention Signal\u201d is sent to the server. The client reads and discards any data received between the time the interrupt was sent and the interrupt acknowledgment was received. The interrupt acknowledgment from the server is a bit set in the status field of the DONE token.",{"@attributes":{"id":"p-0079","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Client:","select name, empid from employees"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Server:","COLMETADATA","data stream"]},{"entry":[{},"ROW","data stream"]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"ROW","data stream"]},{"entry":["Client:","ATTENTION SENT"]},{"entry":[{},"["]},{"entry":["\u2003Server:","\u2003DONE","\u2003data stream (with DONE_ATTN"]},{"entry":[{},{},"\u2003bit set)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"According to another aspect of the present invention, a versioning scheme is provided that enables a handshake between client (e.g.  in ) and server (e.g.  in ) such that both down level, as well as newer clients can communicate with down level and newer servers. Such a scheme accounts for chronological versioning of components (e.g. release dates) as well as software versioning (e.g. protocol version), and negotiates down to the common version between the client and the server side, for an instant determination of the version of the TDS protocol. To initiate communication, the client driver sends a login record to the server, which can for example contain a 4-byte TDS version, indicative of the most recent protocol that the client understands. Based in part on this login record the server makes an inference of the versions that the client understands, and which at the same time is also understandable by the server. For example, the 4 byte TDS version can be split into three distinct parts, form hi-byte to lo-byte, with each distinct part indicative of a defined structure for the syntax and semantics of the TDS protocol. In this example, the first part is a major number or major version (such as in the form 0xNN, N being an integer; e.g. 0x70, 0x71, 0x72) indicative of a particular version of the SQL. The second part can be an increment number indicative of the TDS change (such as in the form of 0xNN, N being an integer), and the third part can be a minor number or minor version (such as 0xNNNN, N being an integer), which can indicate a number associated with the Response Time Monitor (RTM) server. Accordingly a server that employs the version 0x72020002 has a major number of 0x72, an increment number of 0x02, and a minor number of 0x0002.","Typically, by looking at the client's major number, a server can infer that if the server's major number is less than or equal that of the client's major number, a successful hand shake can be instigated. For example a client having a major version 0x71 and a minor version of 0x0004 attempts to initiate handshake with a server having a major version 0x71 and a minor version of 0x0002. Such server can find its largest major number that is less than or equal the major number sent by the client, for which there is also a minor below or equal the minor received. In this example, both the client and the server understand a TDS protocol having a major 0x71 and a minor version 0x0002.",{"@attributes":{"id":"p-0082","num":"0089"},"figref":"FIG. 8","b":["800","820","840","860","880"]},"For all products, and for any given major and minor combination, one recognized increment number can be assigned. Such increment number can be a number from 0x00 to 0xFF, (wherein F represent a 4-bit hexadecimal value), with no relation to the increment of another major-minor combination. During development, the increment can be employed in order to stagger out TDS changes. The server typically recognizes more than one increment for the major-minor combinations in development, and is thus free to make the next round of TDS changes. Such changes however can be enabled under the next increment, as the client will not face these changes until it has bumped up its increment.","Thus, a joint check in is typically not required, and connectivity breakage can be avoided. Once the client also bumps its increment and checks in, the server can wait for a period and thereafter assumes that all users have obtained an updated version, and then drop support for the old increment. Such process can for example support 255 rounds of TDS changes during any release. It is noted that the dropping of support is merely for the old increment, and thus support for old shipped versions are not dropped. For example, support can be dropped for old increments of a particular TDS SQL server, while it is in development. As such, a client never needs to support multiple increments, as server changes can occur in advance of any client change. Thus, back ground compatibility between the server and client can be improved when changes occur to versions of the TDS protocol being implemented in client and servers.","In another aspect of the enhanced TDS protocol of the present invention various new headers are provided including a new header as part of, batch of SQL commands, Transaction Manager Request and Remote Procedure Calls. Such new headers can be typically required for all incoming client requests and specifies two pieces of information, namely; a Transaction Descriptor, and an outstanding request count.","Transaction Descriptor","As part of the Unified Transaction Framework infrastructure, SQL Server according to the present invention can be enhanced to support more than one active transaction under a single session. Accordingly, client drivers can create more than one transaction, and freely associate requests sent to the server to any of the active transactions. Transactions can be described by \u201ctransaction descriptors\u201d. Such descriptor is the one sent on this part of the protocol header, to indicate which transaction a given request should run under.","Outstanding Request Count","One aspect of the enhanced TDS protocol of the present invention can improve consistency of behavior on the server side, e.g. when the server commits transactions. Initially and as part of a header field, the client sends the number of pending requests known to the client driver. In case the server already is done with processing of previous requests, such number reported by the client helps synchronize and coordinate view of number of pending requests between the client and the server. Such can typically mitigate inconsistent server behavior, such as from instances wherein buffer zones are waiting to be read by the client. For example, a typical inconsistent behavior can arise when the client executes a query, the server performs and the results sit in a network buffer, waiting to be read by the client. If the results are such that they can fit entirely within the network buffers, the server is considered finished and ready to accept new requests from the client. Nonetheless, if the results do not entirely fit within the network buffers, the server can still be considered tied up with previous transaction, and not able to accept new requests. Thus, depending upon a size of the buffer zone, requests can fail or succeed, leading to an unpredictable server behavior. The Multiple Active Result Sets (MARS) header of the enhanced protocol improves an ability to keep semantics constant regardless to the size of the results produced by a query.","In a related aspect according to the present invention, query notification header is provided as part of the enhanced TDS protocol. At the time of establishing the query, the server is asked to provide that the client with future updates related to the query. As such the requirement for periodically re-asking the server of any changes to the initial query is mitigated. Accordingly, the manner of sending such notifications (e.g. channels for sending the notification); as well as the set up for notification is established at the time of the query, and does not require changes to be made on the client side. Moreover such feature allows creation of middle tier type caches that are transparent to the client.","The following illustrates an exemplary description of various data streams, as well as exemplary headers employed in conjunction with a message exchange between client and server, according to one particular aspect of the present invention:","Stream Types","Unknown Length Streams","Unknown length streams are used by some token-less data streams. It is a stream of bytes. The number of bytes within the data stream is defined in the buffer header.",{"@attributes":{"id":"p-0091","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BYTESTREAM \u2002:=","{BYTE};"]},{"entry":[{},"UNICODESTREAM",":={BYTE, BYTE};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Variable length data streams consist of a stream of characters or a stream of bytes. Streams of bytes are defined as one of two possible types, \u201cGeneric Bytes\u201d and \u201cComplex Bytes\u201d. The two types are similar, in that they both have a length rule and a data rule, yet in the complex byte variable length data stream definition, the length can be broken out into a separate rule at the \u201cmessage specific\u201d rule level, for extra flexibility.","Characters","Variable length streams of characters can be defined by a length field followed by data itself. There are three types of variable length character streams, each dependent on the size of the length field (e.g. a BYTE, USHORT or LONG). If the value of the length field is zero, then no data follows the length field:",{"@attributes":{"id":"p-0094","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"B_VARCHAR \u2002:= BYTELEN, {BYTE};"]},{"entry":[{},"US_VARCHAR \u2002:= USHORTLEN, {BYTE};"]},{"entry":[{},"L_VARCHAR \u2002:= LONGLEN, {BYTE};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Similar to the variable length character stream, variable length byte streams are defined by a length field followed by the data itself:",{"@attributes":{"id":"p-0096","num":"0103"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"B_VARBYTE \u2002:= BYTELEN, {BYTE};"]},{"entry":[{},"US_VARBYTE:= USHORTLEN, {BYTE};"]},{"entry":[{},"L_VARBYTE \u2002:= LONGLEN, {BYTE};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Messages that use variable length byte streams can use a well known format of the variable length byte stream itself (e.g. BulkLoadData). In such cases variable length byte streams can be explicitly defined in a similar format to that shown above, rather than use the generic B_VARBYTE, US_VARBYTE or L_VARBYTE format:",{"@attributes":{"id":"p-0098","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DetailsLength",":= USHORT;"]},{"entry":[{},"Name",":= {BYTE}-;"]},{"entry":[{},"Address",":= {BYTE}-;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"AccountNumber \u2003:= BYTE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Details",":= Name,"]},{"entry":[{},{},"\u2003Address,"]},{"entry":[{},"DetailsLength,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"AccountNumber;"]},{"entry":[{},"Account \u2002:= \u2003\u2003DetailsLength, {Details};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It is noted that the \u2018Account\u2019 rule has a \u2018length\u2019 (e.g. DetailsLength).","Datatype Dependant Data Streams","Some messages contain variable data types. The actual type of a given variable datatype can depend on type of data being sent within the message. For example, the RPCRequest message contains the TYPE INFO and TYPE VARBYTE rules.","These two rules contain data of a type that can depend on actual type employed in value of the FIXEDLENTYPE or VARLENTYPE rules of the TYPE INFO rule.","Datatype dependent data streams can occur in two forms, integers and bytes:","Integers","Datatype dependant integers can be either a BYTELEN, USHORTCHARBINLEN, or LONGLEN in length. This length can depend on the TYPE INFO associated with the message. If the datatype (i.e. FIXEDLENTYPE or VARLENTYPE rule of the TYPE INFO rule) is of type TEXTTYPE, NTEXTTYPE, IMAGETYPE or SSVARIANTTYPE the integer length is LONGLEN. If the datatype is BIGCHARTYPE, BIGVARCHARTYPE, NCHARTYPE, NVARCHARTYPE, BIGBINARYTYPE or BIGVARBINARYTYPE the integer length is USHORTLEN. For all other datatypes the integer length is BYTELEN.",{"@attributes":{"id":"p-0104","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TYPE_VARLEN",":= BYTELEN"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003USHORTCHARBINLEN"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003LONGLEN"]},{"entry":[{},{},"\u2003;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The datatype to be used in a datatype dependant byte streams is defined by the TYPE INFO rule associated with the message.","For variable length types, the TYPE_VARLEN value defines the length of the data that follows. As described above, the TYPE INFO rule defines the type of TYPE_VARINT (i.e. BYTELEN, USHORTLEN or LONGLEN).","For fixed length types, the TYPE_VARINT rule is not present. In these cases the number of bytes to be read can be determined by the TYPE INFO rule (e.g. if \u201cINT2TYPE\u201d can be specified as the value for the FIXEDLENTYPE rule of the TYPE INFO rule, 2 bytes should be read, as \u201cINT2TYPE\u201d is always 2 bytes in length.","The data following this, can be a stream of bytes, or a NULL value. The CHARBIN_NULL rule is used for BIGCHARTYPE, BIGVARCHARTYPE, NCHARTYPE, NVARCHARTYPE, BIGBINARYTYPE and BIGVARBINARYTYPE types and the GEN_NULL rule for all other types:",{"@attributes":{"id":"p-0109","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"TYPE_VARBYTE:= [TYPE_VARLEN], {BYTE}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"|"]},{"entry":[{},"CHARBIN_NULL"]},{"entry":[{},"|"]},{"entry":[{},"GEN_NULL;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Unlike fixed or variable byte stream formats, \u201cPartially length-prefixed bytes\u201d does not require the full data length to be specified before the actual data is streamed out. Thus, it is ideal for those applications where the data length may not be known upfront (e.g. xml serialization). The rule below describes such stream format:",{"@attributes":{"id":"p-0111","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PLP_BYTES",":=","TYPE INFO, PLP_BODY"]},{"entry":["PLP_BODY",":=","PLP_NULL"]},{"entry":[{},{},"|"]},{"entry":[{},{},"{ ULONGLONGLEN | UNKNOWN_PLP_LEN }, {PLP_CHUNK},"]},{"entry":[{},{},"\u2003\u2003\u2003PLP_TERMINATOR"]},{"entry":["PLP_NULL",":=","\u20180xFFFFFFFFFFFFFFFF\u2019"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["UNKNOWN_PLP_LEN:=","\u20180xFFFFFFFFFFFFFFFE\u2019"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PLP_CHUNK",":=","ULONGLEN, {BYTE}-"]},{"entry":["PLP_TERMINATOR",":=","\u20180x00000000\u2019"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":{"@attributes":{"id":"ul0007-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":["TYPE INFO rule specifies a \u201cPartially Length-prefixed Datatype\u201d (In the UNKNOWN_PLP_LEN case, the data is represented as a series of zero or more \u2018chunks\u2019, each consisting of the \u2018length\u2019 field followed by \u2018length\u2019 bytes of data (see the PLP_CHUNK rule). The data is terminated by PLP_TERMINATOR (which is essentially a zero-length \u2018chunk\u2019).","In the \u2018actual data length\u2019 case, the ULONGLONGLEN is followed by the specified number of bytes of data (this is similar to the \u201cVariable Bytes\u201d format).\n\nStream Headers\u2014ALL_Headers Rule Definition\n"]}}}},"Some message streams can be preceded by a variable number of headers as specified by the ALL_HEADERS rule. List of headers that are applicable to the different types of messages are described in the following table.","It is noted that stream headers can be present in first packet in requests that spans more than one packet.",{"@attributes":{"id":"p-0114","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Header","Value","SQLBatch","RPCRequest","TransactionManagerRequest"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Query","0x00 01","Optional","Optional","Disallowed"]},{"entry":"Notifications"},{"entry":["MARS","0x00 02","Required","Required","Required"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0115","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TotalLength",":=DWORD; \u2002\/\/including itself"]},{"entry":[{},"HeaderLength",":=DWORD; \u2002\/\/including itself"]},{"entry":[{},"HeaderType",":=USHORT;"]},{"entry":[{},"HeaderData",":={BYTE};"]},{"entry":[{},"Header",":=HeaderLength, HeaderType, HeaderData;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0116","num":"0125"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TotalLength","Total length of all header stream."]},{"entry":["HeaderLength","Total length of the individual header."]},{"entry":["HeaderType","The particular type of header as described in the table"]},{"entry":[{},"above."]},{"entry":["HeaderData","The data stream for the header. See each specific"]},{"entry":[{},"header description below."]},{"entry":["Header","A structure for a single header"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Contains information specifying that a notification is desired on the request, and information for delivery of the notification.","Stream Specific Rules",{"@attributes":{"id":"p-0118","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["NotifyId",":= USHORT, UNICODESTREAM;"]},{"entry":["SSBDeployment",":= USHORT, UNICODESTREAM;"]},{"entry":["NotifyTimeout",":= ULONG;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The USHORT specify the length in bytes of the UNICODESTREAMs."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0119","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Header Data",":= NotifyId,"]},{"entry":[{},{},"\u2003SSBDeployment,"]},{"entry":[{},{},"\u2003[NotifyTimeout];"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"As explained earlier, such aspect of TDS protocol of the present invention contains information regarding transaction descriptor and number of outstanding requests in support of MARS.","Under AutoCommit mode, TransactionDescriptor must be 0 and OutstandingRequestCount must be 1.","Stream Specific Rules",{"@attributes":{"id":"p-0121","num":"0130"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OutstandingRequestCount",":= DWORD;"]},{"entry":[{},"TransactionDescriptor",":= ULONGLONG;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0122","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Header Data",":= TransactionDescriptor,"]},{"entry":[{},{},"\u2003OutstandingRequestCount;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"As described above, a query notification header is also provided as part of the enhanced TDS protocol. At the time of establishing the query, the server is asked to provide that the client with future updates related to the query. As such the requirement for periodically re-asking the server of any changes to the initial query is mitigated. Accordingly, the manner of sending such notifications (e.g. channels for sending the notification), as well as set up for notification can be established at time of the query, and does not require changes to be made on the client side. Moreover such feature allows creation of middle tier type caches that are transparent to the client. At the same time, developers building the caching layers need not be the same as the developers who create the Structured Query Language (SQL) application. Thus, the query notification feature can enable an infrastructure component that can provide for development of caching layers on top of SQL server applications. Any request sent to the server can be pre-pended by a QN header, indicating that subscriptions should be established for each statement executed. The payload of the header can contain:\n\n",{"@attributes":{"id":"p-0124","num":"0136"},"figref":"FIG. 9"},"In a related aspect of the present invention, a TDS protocol is enhanced to include the notion of \u201cresetting a connection\u201d which cleans up server side state of the connection and allows client drivers to cache and reuse the connection. Accordingly, such request to rest connection can be performed as part of the function for the next request that is sent under a connection.","As such, and in conjunction with MARS feature, a request can itself send a request that includes re-set connection to the server, and shortly thereafter send another request under the same connection. Such aspect of the present invention can also include the environment change notification (ENVCHAGE), which can be sent back to the client driver, as soon as the reset operation completes, without the need to wait for the request to execute. Such can reduce latency in the driver to determine success of a reset operation and enables other MARS requests to be submitted as soon as confirmation of reset success has been received. Moreover, such feature enables by passing the client and perform particular activities, and then notify the client\u2014as opposed to initially waiting for the client driver to provide instructions.","Referring now to , another aspect of the present invention is illustrated as method , wherein client can interrupt and cancel a current command without affecting transaction semantics. Such is performed by the client sending a non severe attention (NSA) signal at . Once the client sends an NSA, the client continues to read at  until it gets an attention acknowledgment sent by the server at . As such, an NSA can cancel a specific request though it does not affect the state of the current transaction at . It is noted that an NSA can typically be sent to the server during the execution of the stored procedures for; Sp_cursor, Sp_cursorfetchnext, Sp_cursoroption, and if invoked via IPC (numbered on RPC requests.)","The following illustrates an exemplary description of the various data streams, as well as and above identified headers in conjunction with a particular message exchange between the client and the server. It is noted that references to the terms \u201cShiloh\u201d, \u201cYukon\u201d, \u201cSphinx\u201d, \u201cMSSQL\u201d are exemplary SQL servers with TDS protocol.","Datatype Definitions","Fixed Length Datatypes","Note that these Fixed Length Datatypes are all of 1 byte in length, as specified in section 5.3.3.",{"@attributes":{"id":"p-0130","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NULLTYPE",":= \u20180x1f\u2019"]},{"entry":[{},"INT1TYPE",":= \u20180x30\u2019"]},{"entry":[{},"BITTYPE",":= \u20180x32\u2019"]},{"entry":[{},"INT2TYPE",":= \u20180x34\u2019"]},{"entry":[{},"INT4TYPE",":= \u20180x38\u2019"]},{"entry":[{},"DATETIM4TYPE",":= \u20180x3a\u2019"]},{"entry":[{},"FLT4TYPE",":= \u20180x3b\u2019"]},{"entry":[{},"MONEYTYPE",":= \u20180x3c\u2019"]},{"entry":[{},"DATETIMETYPE",":= \u20180x3d\u2019"]},{"entry":[{},"FLT8TYPE",":= \u20180x3e\u2019"]},{"entry":[{},"MONEY4TYPE",":= \u20180x7a\u2019"]},{"entry":[{},"INT8TYPE",":= \u20180x7f\u2019"]},{"entry":[{},"FIXEDLENTYPE",":= NULLTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003INT1TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003BITTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003INT2TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003INT4TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003INT4DATETIM4TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003FLT4TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003MONEYTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003DATETIMETYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003FLT8TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003MONEY4TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003INT8TYPE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Variable Length Datatypes"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GUIDTYPE",":= \u20180x24\u2019"]},{"entry":[{},"INTNTYPE",":= \u20180x26\u2019"]},{"entry":[{},"DECIMALTYPE",":= \u20180x37\u2019"]},{"entry":[{},"NUMERICTYPE",":= \u20180x3f\u2019"]},{"entry":[{},"BITNTYPE",":= \u20180x68\u2019"]},{"entry":[{},"DECIMALN",":= \u20180x6a\u2019"]},{"entry":[{},"NUMERICNTYPE",":= \u20180x6c\u2019"]},{"entry":[{},"FLTNTYPE",":= \u20180x6d\u2019"]},{"entry":[{},"MONEYNTYPE",":= \u20180x6e\u2019"]},{"entry":[{},"DATETIMNTYPE",":= \u20180x6f\u2019"]},{"entry":[{},"CHARTYPE",":= \u20180x2f\u2019"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"VARCHARTYPE := \u20180x27\u2019"]},{"entry":[{},"BINARYTYPE := \u20180x2d\u2019"]},{"entry":[{},"VARBINARYTYPE := \u2003\u2003\u20180x25\u2019"]},{"entry":[{},"BIGVARBINTYPE := \u20180xA5\u2019"]},{"entry":[{},"BIGVARCHRTYPE := \u20180xA7\u2019"]},{"entry":[{},"BIGBINARYTYPE := \u20180xAD\u2019"]},{"entry":[{},"BIGCHARTYPE := \u20180xAF\u2019"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NVARCHARTYPE",":= \u20180xe7\u2019"]},{"entry":[{},"NCHARTYPE",":= \u20180xef\u2019"]},{"entry":[{},"XMLTYPE","\u2002:= \u20180xf1\u2019"]},{"entry":[{},"UDTTYPE",":= \u20180xF0\u2019"]},{"entry":[{},"TEXTTYPE",":= \u20180x23\u2019"]},{"entry":[{},"IMAGETYPE",":= \u20180x22\u2019"]},{"entry":[{},"NTEXTTYPE",":= \u20180x63\u2019"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"SSVARIANTTYPE := \u2003\u2003\u20180x62\u2019"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BYTELEN_TYPE",":= GUIDTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003INTNTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003DECIMALTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003NUMERICTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003BITNTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003DECIMALN"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003NUMERICNTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003FLTNTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003MONEYNTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003DATETIMNTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003CHARTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003VARCHARTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003BINARYTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003VARBINARYTYPE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"USHORTLEN_TYPE:= BIGVARBINTYPE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003BIGVARCHRTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003BIGBINARYTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003BIGCHARTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003NVARCHARTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003NCHARTYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"UDTTYPE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LONGLEN_TYPE:= SSVARIANTTYPE"]},{"entry":[{},"VARLENTYPE:= BYTELEN_TYPE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003USHORTLEN_TYPE"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003LONGLEN_TYPE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Nullable values are returned using the INTNTYPE, BITNTYPE, FLTNTYPE, MONEYNTYPE, DATETIMNTYPE tokens which will use the length byte to specify the length of the value or GEN_NULL as appropriate.","Partially Length-Prefixed Datatypes",{"@attributes":{"id":"p-0132","num":"0144"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PARTLENTYPE :=","XMLTYPE"]},{"entry":[{},{},"|"]},{"entry":[{},{},"BIGVARCHRTYPE"]},{"entry":[{},{},"|"]},{"entry":[{},{},"BIGVARBINTYPE"]},{"entry":[{},{},"|"]},{"entry":[{},{},"NVARCHARTYPE"]},{"entry":[{},{},"|"]},{"entry":[{},{},"TEXTTYPE"]},{"entry":[{},{},"|"]},{"entry":[{},{},"IMAGETYPE"]},{"entry":[{},{},"|"]},{"entry":[{},{},"NTEXTTYPE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"BIGVARCHRTYPE, BIGVARBINTYPE and NVARCHARTYPE can represent two types each: one is the regular type with a known maximum size range from 0 to 8000, and the other has unlimited max size, known as varchar(max), varbinary(max) and nvarchar(max), which has a max size of 0xffff","User Defined Datatypes",{"@attributes":{"id":"p-0134","num":"0146"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UDT_METADATA_TYPE \u2002:= BYTE, US_VARBYTE;"]},{"entry":[{},"DBID \u2002:= ULONG;"]},{"entry":[{},"TYPEID \u2002:= US_VARCHAR;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UDT_INFO \u2002:=","DBID,"]},{"entry":[{},{},"UDT_METADATA_TYPE,"]},{"entry":[{},{},"TYPEID;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"UDT METADATA byte specifies type of metadata to be used, defined by UDT implementation, and defines semantics of byte stream that follows.","DBNAME specifies the name of the database where the type was defined.","TYPENAME specifies the 1-part or 2-part name of the UDT.","UDTs in RPC","The definition for UDTs as RPC parameters is the following:",{"@attributes":{"id":"p-0139","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DB_NAME",":= B_VARCHAR;"]},{"entry":[{},"OWNING_SCHEMA",":= B_VARCHAR;"]},{"entry":[{},"TYPE_NAME",":= B_VARCHAR;"]},{"entry":[{},"UDT_METADATA",":= US_VARBYTE;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UDT_INFO","\u2003:= DB_NAME,"]},{"entry":[{},{},"\u2003\u2003OWNING_SCHEMA,"]},{"entry":[{},{},"\u2003\u2003TYPE_NAME,"]},{"entry":[{},{},"\u2003\u2003UDT_METADATA;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Note that the length for the parameters of type UDT, BLOB, or XML is specified as a ULONGLONG as with PLP values.","System Defined UDTs","System defined UDTs are system types implemented using the CLR UDT infrastructure. In general they are sent on TDS as user CLR UDTs would be, with the following exceptions:","User Type rule in the TYPE_INFO rule sent as part of the COLMETADATA stream specifies the ID of the type. System UDTs have IDs between 128 and 255. In particular:",{"@attributes":{"id":"p-0143","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UtcDateTime specifies:","0x80"]},{"entry":[{},"Date specifies:","0x81"]},{"entry":[{},"Time specifies:","0x82"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Note that regardless, the type is declared as being UDTTYPE.","DBID is specified as 0x0000 within the UDT_INFO rule.","XML Data Type",{"@attributes":{"id":"p-0146","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"#TDS_VERSION# (0x7202xxx)"]},{"entry":[{},"OWNING_SCHEMA."]},{"entry":[{},"#END_TDS_VERSION#"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SCHEMA_PRESENT",":= BYTE;"]},{"entry":[{},"DBNAME",":= B_VARCHAR;"]},{"entry":[{},"OWNING_SCHEMA",":= US_VARCHAR;"]},{"entry":[{},"XML_SCHEMA_COLLECTION",":= B_VARCHAR;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"XML_INFO \u2002:=","SCHEMA_PRESENT,"]},{"entry":[{},{},"[DBNAME, OWNING_SCHEMA,"]},{"entry":[{},{},"XML_SCHEMA_COLLECTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"SCHEMA PRESENT specifies \u20180x01\u2019 if the type has an associated schema collection and DBNAME, OWNING_SCHEMA and XML_SCHEMA COLLECTION are included in the stream, or 0x00, otherwise.","DBNAME specifies the name of the database where the schema collection is defined. OWNING_SCHEMA specifies the name of the relational schema containing the schema collection.","XML_SCHEMA COLLECTION specifies the name of the xml schema collection to which the type is bound.","SQL_VARIANT","Sql_Variant values have internal structure according to the following definition:",{"@attributes":{"id":"p-0151","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"VARIANT_BASETYPE",":=","BYTE;"]},{"entry":[{},"VARIANT_PROPBYTES",":=","BYTE;"]},{"entry":[{},"VARIANT_PROPERTIES",":=","{BYTE};"]},{"entry":[{},"VARIANT_DATAVAL",":=","{BYTE};"]},{"entry":[{},"SSVARIANT_INSTANCE",":=","\u2002VARIANT_BASETYPE;"]},{"entry":[{},{},{},"\u2002VARIANT_PROPBYTES;"]},{"entry":[{},{},{},"\u2002VARIANT_PROPERTIES;"]},{"entry":[{},{},{},"\u2002VARIANT_DATAVAL;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"VARIANT_BASETYPE is the TDS token of the base type.",{"@attributes":{"id":"p-0153","num":"0165"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Base Type","VARIANT_PROPBYTES","VARIANT_PROPERTIES"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["types tinyint, smallint, int,","0","<not specified>"]},{"entry":"bigint, float, real,"},{"entry":"uniqueidentifier, datetime,"},{"entry":"smalldatetime, money,"},{"entry":"smallmoney, bit"},{"entry":["Binary, varbinary","2","2 bytes specifying max"]},{"entry":[{},{},"length"]},{"entry":["numeric, decimal","2","1 byte for precision, 1 byte"]},{"entry":[{},{},"for scale"]},{"entry":["varchar, char, nvarchar,","7","5-byte TDSCOLLATION,"]},{"entry":["nchar",{},"followed by a 2 byte max length"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The \u2018TYPE_INFO\u2019 rule applies to several messages used to describe column information. For columns of fixed data length, the type is all that is required to determine the data length. For columns of a variable length type, TYPE_VARLEN defines the length of the data contained within the column.",{"@attributes":{"id":"p-0155","num":"0167"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2018PRECISION\u2019 and \u2018SCALE\u2019 only occur if the type is \u2018NUMERIC\u2019,"},{"entry":"\u2018NUMERICN\u2019, \u2018DECIMAL\u2019 or \u2018DECIMALN\u2019."},{"entry":"\u2018COLLATION\u2019 only occurs if the type is \u2018BIGCHARTYPE\u2019,"},{"entry":"\u2018BIGVARCHRTYPE\u2019, \u2018TEXTTYPE\u2019,"},{"entry":"\u2018NEXTTYPE\u2019, \u2018NCHARTYPE\u2019 or \u2018NVARCHARTYPE\u2019."},{"entry":"\u2018UDT_INFO\u2019 always occurs if the type is \u2018UDTTYPE\u2019."},{"entry":"\u2018XML_INFO\u2019 always occurs if the type is \u2018XMLTYPE\u2019."},{"entry":"\u2018USHORTMAXLEN\u2019 does not occur if PARTLENTYPE is XMLTYPE."},{"entry":"USHORTMAXLEN \u2002:= \u20180xFFFF\u2019"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TYPE_INFO \u2002:=","FIXEDLENTYPE"]},{"entry":[{},"|"]},{"entry":[{},"(VARLENTYPE, TYPE VARLEN)"]},{"entry":[{},"[COLLATION]"]},{"entry":[{},"[UDT_INFO]"]},{"entry":[{},"([PRECISION], [SCALE])"]},{"entry":[{},"|"]},{"entry":[{},"PARTLENTYPE [USHORTMAXLEN]"]},{"entry":[{},"[COLLATION] [XML_INFO]"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0156","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ALTMETADATA_TOKEN",":= \u20180x88\u2019"]},{"entry":[{},"ALTROW_TOKEN",":= \u20180xD3\u2019"]},{"entry":[{},"COLMETADATA_TOKEN",":= \u20180x81\u2019"]},{"entry":[{},"COLINFO_TOKEN",":= \u20180xA5\u2019"]},{"entry":[{},"DEBUG_CMD_TOKEN",":= \u20180x60\u2019"]},{"entry":[{},"DONE_TOKEN",":= \u20180xFD\u2019"]},{"entry":[{},"DONEPROC_TOKEN",":= \u20180xFE\u2019"]},{"entry":[{},"DONEINPROC_TOKEN",":= \u20180xFF\u2019"]},{"entry":[{},"ENVCHANGE_TOKEN",":= \u20180xE3\u2019"]},{"entry":[{},"ERROR_TOKEN",":= \u20180xAA\u2019"]},{"entry":[{},"INFO_TOKEN",":= \u20180xAB\u2019"]},{"entry":[{},"LOGINACK_TOKEN",":= \u20180xAD\u2019"]},{"entry":[{},"OFFSET_TOKEN",":= \u20180x78\u2019"]},{"entry":[{},"ORDER_TOKEN",":= \u20180xA9\u2019"]},{"entry":[{},"RETURNSTATUS_TOKEN",":= \u20180x79\u2019"]},{"entry":[{},"RETURNVALUE_TOKEN",":= \u20180xAC\u2019"]},{"entry":[{},"ROW_TOKEN",":= \u20180xD1\u2019"]},{"entry":[{},"SSPI_TOKEN",":= \u20180xED\u2019"]},{"entry":[{},"TABNAME_TOKEN",":= \u20180xA4\u2019"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{},{}]},"Describes the format of bulk loaded data with BULK INSERT. The format is a COLMETADATA token describing the data being sent, followed by multiple ROW tokens, ending with a DONE token. The stream is equivalent to that produced by the server if it were sending the same row set on output.","Stream Comments",{"@attributes":{"id":"p-0158","num":"0000"},"ul":{"@attributes":{"id":"ul0011","list-style":"none"},"li":{"@attributes":{"id":"ul0011-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0012","list-style":"none"},"li":"This message sent to the server contains bulk data to be inserted. Its preceded by a SQL message specifying the particulars of the bulk load (i.e. \u201cINSERT BULK tablename . . . \u201d).\n\nNote: Syntax for INSERT BULK includes column definitions:\n"}}}},{"@attributes":{"id":"p-0159","num":"0171"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"e.g. INSERT BULK myDb.dbo.myTable (col1 type1, ..., coln typen)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Client:","SQL statement \u201cINSERT BULK...\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Server:","Acknowledgement",{},{}]},{"entry":["Server:","COLMETADATA","data stream"]},{"entry":[{},"ROW","data stream"]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"ROW","data stream"]},{"entry":[{},"..."]},{"entry":[{},"DONE","data stream","(with DONE_COUNT"]},{"entry":[{},{},{},"bit set)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0160","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BulkLoad_METADATA",":= COLMETADATA_TOKEN;"]},{"entry":[{},"BulkLoad_ROW",":= ROW_TOKEN;"]},{"entry":[{},"BulkLoad_DONE",":= DONE_TOKEN;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0161","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BulkLoadBCP",":= BulkLoad_METADATA"]},{"entry":[{},{},"{BulkLoad_ROW}"]},{"entry":[{},{},"BulkLoad_DONE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{}]},"Describes the format of bulk loaded data with updatetext or writetext.","Stream Comments",{"@attributes":{"id":"p-0163","num":"0000"},"ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":{"@attributes":{"id":"ul0013-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":["This token sent to the server contains bulk data to be inserted. Its preceded by a SQL message specifying the particulars of the bulk load (i.e. \u201cWRITETEXT BULK . . . \u201d).","The server returns a RETURNVALUE token containing the new timestamp for this column.\n\nStream Specific Rules:\n\nBulkData:=L_VARBYTE;\n\nStream Definition:\n\nBulkLoadUTWT:=BulkData;\n\nStream Parameter Details\n"]}}}},{"@attributes":{"id":"p-0164","num":"0177"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameter","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BulkData","Contains the BulkData length and BulkData data"]},{"entry":[{},{},"(within L_VARBYTE)."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{}]},"Describes the login record rules for use with 7.0 and later version MSSQLServers.","Stream Comments",{"@attributes":{"id":"p-0166","num":"0000"},"ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":{"@attributes":{"id":"ul0015-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":["An older server can reject this message. In this case the client can disconnect, format the correct login message for the server version, and re-connect.","A Login7 stream has a maximum size of 128K-1(byte) bytes.","The OffsetLength and Data rules define the variable length portions of this data stream.","The OffsetLength rule lists the offset from the start of the structure, and the length for each parameter. If the parameter is not used the parameter length field will be zero. The data itself (e.g. the Data rule) follows these parameters.","The first parameter of the OffsetLength rule (ibHostName) indicates the start of the variable length portion of this data stream. As such it can never be zero. This is required for forward compatibility (i.e. later versions of TDS, with additional parameters, can be successfully skipped by down-level servers)\n\nStream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0167","num":"0184"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Length",":= DWORD;"]},{"entry":["TDSVersion",":= DWORD;"]},{"entry":["PacketSize",":= DWORD;"]},{"entry":["ClientProgVer",":= DWORD;"]},{"entry":["ClientPID",":= DWORD;"]},{"entry":["ConnectionID",":= DWORD;"]},{"entry":["fByteorder",":= BIT;"]},{"entry":["fChar",":= BIT;"]},{"entry":["fFloat",":= BIT, BIT;"]},{"entry":["fDumpLoad",":= BIT;"]},{"entry":["fUseDB",":= BIT;"]},{"entry":["fDatabase",":= BIT;"]},{"entry":["fSetLang",":= BIT;"]},{"entry":["OptionFlags1",":= fByteorder, fChar, fFloat, fDumpLoad,"]},{"entry":[{},"\u2003fUseDB, fDatabase, fSetLang;"]},{"entry":["fLanguage",":= BIT;"]},{"entry":["fODBC",":= BIT;"]},{"entry":["fTranBoundary",":= BIT;"]},{"entry":["fCacheConnect",":= BIT;"]},{"entry":["fUserType",":= BIT, BIT, BIT;"]},{"entry":["fIntSecurity",":= BIT;"]},{"entry":["OptionFlags2",":= fLanguage, fODBC, fTranBoundary,"]},{"entry":[{},"\u2003fCacheConnect, fUserType,"]},{"entry":[{},"\u2003fIntSecurity;"]},{"entry":["fSQLType",":= BIT, BIT, BIT, BIT;"]},{"entry":["TypeFlags",":= fSQLType, FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},"\u2003FRESERVEDBIT, FRESERVEDBIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"fChangePassword \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003:= BIT;"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["OptionFlags3",":= FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},"\u2003FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},"\u2003FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},"\u2003FRESERVEDBIT, fChangePassword"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ClientTimzone := LONG;"},{"entry":"\u2003ClientLCID \u2003\u2003:=\u2003\u2003FRESERVEDBIT, FRESERVEDBIT,"},{"entry":"\u2003FRESERVEDBIT, FRESERVEDBIT,"},{"entry":"\u2003FRESERVEDBIT, FRESERVEDBIT,"},{"entry":"\u2003FRESERVEDBIT, LCID;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ibHostName",":= USHORT;"]},{"entry":["cchHostName",":= USHORT;"]},{"entry":["ibUserName",":= USHORT;"]},{"entry":["cchUserName",":= USHORT;"]},{"entry":["ibPassword",":= USHORT;"]},{"entry":["cchPassword",":= USHORT;"]},{"entry":["ibAppName",":= USHORT;"]},{"entry":["cchAppName",":= USHORT;"]},{"entry":["ibServerName",":= USHORT;"]},{"entry":["cchServerName",":= USHORT;"]},{"entry":["ibUnused",":= USHORT;"]},{"entry":["cbUnused",":= USHORT;"]},{"entry":["ibCltIntName",":= USHORT;"]},{"entry":["cchCltIntName",":= USHORT;"]},{"entry":["ibLanguage",":= USHORT;"]},{"entry":["cchLanguage",":= USHORT;"]},{"entry":["ibDatabase",":= USHORT;"]},{"entry":["cchDatabase",":= USHORT;"]},{"entry":["ClientID",":= BYTE, BYTE, BYTE, BYTE, BYTE, BYTE;"]},{"entry":["ibSSPI",":= USHORT;"]},{"entry":["cbSSPI",":= USHORT;"]},{"entry":["ibAtchDBFile",":= USHORT;"]},{"entry":["cchAtchDBFile",":= USHORT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ibChangePassword:=USHORT;"},{"entry":"cbChangePassword:=USHORT;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["cbSSPILong",":=DWORD;"]},{"entry":["OffsetLength",":= ibHostName,"]},{"entry":[{},"\u2003cchHostName,"]},{"entry":[{},"\u2003ibUserName,"]},{"entry":[{},"\u2003cchUserName,"]},{"entry":[{},"\u2003ibPassword,"]},{"entry":[{},"\u2003cchPassword,"]},{"entry":[{},"\u2003ibAppName,"]},{"entry":[{},"\u2003cchAppName,"]},{"entry":[{},"\u2003ibServerName,"]},{"entry":[{},"\u2003cchServerName,"]},{"entry":[{},"\u2003ibUnused,"]},{"entry":[{},"\u2003cchUnused,"]},{"entry":[{},"\u2003ibCltIntName,"]},{"entry":[{},"\u2003cchCltIntName,"]},{"entry":[{},"\u2003ibLanguage,"]},{"entry":[{},"\u2003cchLanguage,"]},{"entry":[{},"\u2003ibDatabase,"]},{"entry":[{},"\u2003cchDatabase,"]},{"entry":[{},"\u2003ClientID,"]},{"entry":[{},"\u2003ibSSPI,"]},{"entry":[{},"\u2003cbSSPI,"]},{"entry":[{},"\u2003ibAtchDBFile,"]},{"entry":[{},"\u2003cchAtchDBFile,"]},{"entry":[{},"\u2003ibChangePassword,"]},{"entry":[{},"\u2003cchChangePassword,"]},{"entry":[{},"\u2003cbSSPILong;"]},{"entry":["Data",":= {BYTE};"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0168","num":"0185"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Login7",":= Length,"]},{"entry":[{},{},"\u2003TDSVersion,"]},{"entry":[{},{},"\u2003PacketSize,"]},{"entry":[{},{},"\u2003ClientProgVer,"]},{"entry":[{},{},"\u2003ClientPID,"]},{"entry":[{},{},"\u2003ConnectionID,"]},{"entry":[{},{},"\u2003OptionFlags1,"]},{"entry":[{},{},"\u2003OptionFlags2,"]},{"entry":[{},{},"\u2003TypeFlags,"]},{"entry":[{},{},"\u2003OptionFlags3,"]},{"entry":[{},{},"\u2003ClientTimZone,"]},{"entry":[{},{},"\u2003ClientLCID,"]},{"entry":[{},{},"\u2003OffsetLength,"]},{"entry":[{},{},"\u2003Data;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0169","num":"0186"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Length","The total length of the Login7 structure"]},{"entry":["TDSVersion","The TDS version being used by the client (e.g. 0x70000000 for a 7.0 server)."]},{"entry":[{},"If the TDS Version value sent by the client is greater than the value the"]},{"entry":[{},"server recognizes, the server uses the highest TDS version it can use. This"]},{"entry":[{},"provides a mechanism for clients to discover the server TDS by sending a"]},{"entry":[{},"standard Login7 message."]},{"entry":[{},"The following lists the version numbers used by clients up to SQL Server"]},{"entry":[{},"2000 (Shiloh) SP1."]},{"entry":[{},"7.0 (Sphinx): 0x70 00 00 00"]},{"entry":[{},"7.1 (Shiloh): 0x71 00 00 00 [note: this is different from the server]"]},{"entry":[{},"7.1 SP1: 0x71 00 00 01"]},{"entry":[{},"Post-Shiloh SP1 a new version number scheme will be followed:"]},{"entry":[{},"See the TDS Version numbers spec (tdsversion.doc) for more information."]},{"entry":["PacketSize","The desired packet size being requested by the client"]},{"entry":["ClientProgVer","The version of the interface library (e.g. ODBC) being used by the client."]},{"entry":["ClientPID","The process id of the client application"]},{"entry":["ConnectionID","The connection ID of the primary Server. Used when connecting to an"]},{"entry":[{},"\u201cAlwayUp\u201d backup Server."]},{"entry":["OptionFlags1","fByteOrder - the byte order used by client for numeric and datetime"]},{"entry":[{},"data types"]},{"entry":[{},"0 = ORDER_X86"]},{"entry":[{},"1 = ORDER_68000"]},{"entry":[{},"fChar - the character set used on the client"]},{"entry":[{},"0 = CHARSET_ASCII"]},{"entry":[{},"1 = CHARSET_EBDDIC"]},{"entry":[{},"fFloat - the type of floating point representation used by the client"]},{"entry":[{},"0 = FLOAT_IEEE_754"]},{"entry":[{},"1 = FLOAT_VAX"]},{"entry":[{},"2 = ND5000"]},{"entry":[{},"fDumpLoad - set is dump\/load or BCP capablities are needed by the"]},{"entry":[{},"client"]},{"entry":[{},"0 = DUMPLOAD_ON"]},{"entry":[{},"1 = DUMPLOAD_OFF"]},{"entry":[{},"fUseDB - set if the client desires warning messages on execustion of"]},{"entry":[{},"the USE statement. Not setting this flag results in the client NOT"]},{"entry":[{},"being informed when the database changes, hence it the client will"]},{"entry":[{},"be unaware of any accompanying collation changes"]},{"entry":[{},"0 = USE_DB_ON"]},{"entry":[{},"1 = USE_DB_OFF"]},{"entry":[{},"fDatabase - set if the change to initial database must succeed if the"]},{"entry":[{},"connection is to succeed"]},{"entry":[{},"0 = INIT_DB_WARN"]},{"entry":[{},"1 = INIT_DB_FATAL"]},{"entry":[{},"fSetLang - set if the client desires warning messages on execution of"]},{"entry":[{},"a SET LANGUAGE statement"]},{"entry":[{},"0 = SET_LANG_OFF"]},{"entry":[{},"1 = SET_LANG_ON"]},{"entry":["OptionFlags2","fLanguage - set if the change to initial language must succeed if the"]},{"entry":[{},"connect is to succeed"]},{"entry":[{},"0 = INIT_LANG_WARN"]},{"entry":[{},"1 = INIT_LANG_FATAL"]},{"entry":[{},"fODBC - set if the client is the ODBC driver. This causes the server"]},{"entry":[{},"to set ANSI_DEFAULTS to ON, IMPLICIT_TRANSACTIONS to OFF."]},{"entry":[{},"TEXTSIZE to infintate and ROWCOUNT to infinate"]},{"entry":[{},"0 = ODBC_OFF"]},{"entry":[{},"1 = ODBC_ON"]},{"entry":[{},"fTranBoundary - set if the client desires ENVCHANGE or ENVTRAN"]},{"entry":[{},"notifications"]},{"entry":[{},"0 = TRAN_BOUNDARY_OFF"]},{"entry":[{},"1 = TRAN_BOUNDARY_ON"]},{"entry":[{},"fCacheConnect -"]},{"entry":[{},"0 = CACHE_CONNECTION_OFF"]},{"entry":[{},"1 = CACHE_CONNECTION_ON"]},{"entry":[{},"fUserType - The type of user connecting to the server"]},{"entry":[{},"0 = USER_NORMAL"]},{"entry":[{},"1 = USER_SERVER"]},{"entry":[{},"2 = USER_REMUSER"]},{"entry":[{},"3 = USER_SQLREPL"]},{"entry":[{},"fIntSecurity - the type of security required by the client"]},{"entry":[{},"0 = INTEGRATED_SECURTY_OFF"]},{"entry":[{},"1 = INTEGRATED_SECURITY_ON"]},{"entry":["OptionFlags3","fChangePassword - specifies whether the login request should"]},{"entry":[{},"change the password to the value specified at offset"]},{"entry":[{},"ibChangePassword."]},{"entry":[{},"0 = No change request. ibChangePassword must be 0"]},{"entry":[{},"1 = Request to change login's password."]},{"entry":["TypeFlags","fSQLType - the type of SQL the client sends to the server"]},{"entry":[{},"0 = SQL_DFLT"]},{"entry":[{},"1 = SQL_TSQL"]},{"entry":[{},"2 = SQL_ANSI_V1"]},{"entry":[{},"3 = SQL_ANSI89_L1"]},{"entry":[{},"4 = SQL_ANSI89_L2"]},{"entry":[{},"5 = SQL_ANSI89_IEF"]},{"entry":[{},"6 = SQL_ANSI92_ENTRY"]},{"entry":[{},"7 = SQL_ANSI92_TRANS"]},{"entry":[{},"8 = SQL_ANSI92_INTER"]},{"entry":[{},"9 = SQL_ANSI92_FULL"]},{"entry":["ClientTimZone","The time zone of the client machine"]},{"entry":["ClientLCID","The LCID value for the client collation"]},{"entry":["OffsetLength","The variable portion of this message. A stream of bytes in the order shown,"]},{"entry":[{},"indicates the offset (from the start of the message) and length of various"]},{"entry":[{},"parameters."]},{"entry":[{},"IbHostname & cchHostName - the client machine name"]},{"entry":[{},"IbUserName & cchUserName - the client user id"]},{"entry":[{},"IbPassword & cbPassword - the password supplied by the client"]},{"entry":[{},"IbAppName & cchAppName - the client application name"]},{"entry":[{},"IbServerName & cchServerName - the server name"]},{"entry":[{},"IbRemPwd & cbRemPwd - the remote server\/password pairs"]},{"entry":[{},"ibCltIntName & cchCltIntName - the interface library name (ODBC)"]},{"entry":[{},"ibLanguage & cchLanguage - the initial language (overrides the"]},{"entry":[{},"userid's default language)"]},{"entry":[{},"ibDatabase & cchDatabase - the initial database (overrides the"]},{"entry":[{},"userid's default database)"]},{"entry":[{},"ClientID - the unique client id (created used NIC address)"]},{"entry":[{},"ibSSPI & cbSSPI - SSPI data."]},{"entry":[{},"If cbSSPI < USHRT_MAX, then this length is used for SSPI and"]},{"entry":[{},"cbSSPILong is ignored."]},{"entry":[{},"If cbSSPI == USHRT_MAX, then cbSSPILong is checked."]},{"entry":[{},"If cbSSPILong > 0, then use that value,"]},{"entry":[{},"If cbSSPILong ==0, then use cbSSPI (USHRT_MAX)"]},{"entry":[{},"ibAtchDBFile & cchAtchDBFile - the filename for a database that is"]},{"entry":[{},"to be attatched during the connection process"]},{"entry":[{},"ibChangePassword & cbChangePassword - new password for the"]},{"entry":[{},"specified login."]},{"entry":[{},"cbSSPILong - Used for large SSPI data when"]},{"entry":[{},"cbSSPI==USHRT_MAX"]},{"entry":["Data","The actual variable length data portion referred to by OffsetLength"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{},{},{}],"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":{"@attributes":{"id":"ul0017-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0018","list-style":"none"},"li":["To execute a remote procedure call on the server, the client sends a RPCRequest data stream to the server. This is a binary stream that contains the RPC Name (or ProcID), Options and Parameters. Each RPC must be contained within a separate message and not mixed with other SQL commands.","The message buffer header for a RPCRequest must indicate it is an RPCRequest data stream. Additionally, the total length of the RPCRequest data stream is indicated in the message buffer header.\n\nStream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0170","num":"0189"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ProcID",":= USHORT;"]},{"entry":[{},"ProcIDSwitch",":= \u20180xFF\u2019, \u20180xFF\u2019;"]},{"entry":[{},"ProcName",":= US_VARCHAR;"]},{"entry":[{},"NameLenProcID",":= ProcName"]},{"entry":[{},{},"\u2003|"]},{"entry":[{},{},"\u2003ProcIDSwitch, ProcID;"]},{"entry":[{},"fWithRecomp",":= BIT;"]},{"entry":[{},"fNoMetaData",":= BIT;"]},{"entry":[{},"OptionFlags",":= fWithRecomp, fNoMetaData,"]},{"entry":[{},{},"\u2003FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBYTE;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fParamLobIsCookie \u2002:=\u2002BIT; \/\/ TDS 73 only"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"fByRefValue",":= BIT;"]},{"entry":[{},"fDefaultValue",":= BIT;"]},{"entry":[{},"StatusFlags",":= fByRefValue, fDefaultValue,"]},{"entry":[{},{},"\u2003FRESERVEDBIT, fParamLobIsCookie,"]},{"entry":[{},{},"\u2003FRESERVEDBIT, FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT, FRESERVEDBIT;"]},{"entry":[{},"ParamMetaData",":= B_VARCHAR,"]},{"entry":[{},{},"\u2003StatusFlags,"]},{"entry":[{},{},"\u2003TYPE_INFO;"]},{"entry":[{},"ParamLenData",":= TYPE_VARBYTE;"]},{"entry":[{},"ParameterData",":= ParamMetaData,"]},{"entry":[{},{},"\u2003ParamLenData;"]},{"entry":[{},"BatchFlag",":= \u20180x80\u2019;"]},{"entry":[{},"RPCReqBatch",":= All_HEADERS,"]},{"entry":[{},{},"\u2003NameLenProcID,"]},{"entry":[{},{},"\u2003OptionFlags,"]},{"entry":[{},{},"\u2003{ParameterData};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"left","id":"FOO-00001"},"sup":"1"}]}]}}]}}},"Note that the length for the instance value of UDTs is specified as a ULONGLONG","[Note: \u201cParameterData\u201d is repeated once for each parameter in the request]","Stream Definition:",{"@attributes":{"id":"p-0172","num":"0191"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RPCRequest \u2003",":= RPCReqBatch,"]},{"entry":[{},{},"\u2002\u2003[{BatchFlag, RPCReqBatch}];"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cRPCReqBatch\u201d is repeated once for each RPC in the batch]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0173","num":"0192"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ProcID","The number identifying the special stored procedure to be executed. The"]},{"entry":[{},"valid numbers with associated special stored procedure in the current TDS"]},{"entry":[{},"version are:"]},{"entry":[{},"1. Sp_Cursor"]},{"entry":[{},"2. Sp_CursorOpen"]},{"entry":[{},"3. Sp_CursorPrepare"]},{"entry":[{},"4. Sp_CursorExecute"]},{"entry":[{},"5. Sp_CursorPrepExec"]},{"entry":[{},"6. Sp_CursorUnprepare"]},{"entry":[{},"7. Sp_CursorFetch"]},{"entry":[{},"8. Sp_CursorOption"]},{"entry":[{},"9. Sp_CursorClose"]},{"entry":[{},"10. Sp_ExecuteSql"]},{"entry":[{},"11. Sp_Prepare"]},{"entry":[{},"12. Sp_Execute"]},{"entry":[{},"13. Sp_PrepExec"]},{"entry":[{},"14. Sp_PrepExecRpc"]},{"entry":[{},"15. Sp_Unprepare"]},{"entry":["ProcIDSwitch","ProcIDSwitch may occur as part of NameLenProcID (see below)"]},{"entry":["ProcName","The procedure name length (within US_VARCHAR)"]},{"entry":["NameLenProcID","If the first USHORT contains \u201c0xFFFF\u201d the following USHORT contains the"]},{"entry":[{},"PROCID. Otherwise NameLenProcID contains the parameter name length"]},{"entry":[{},"and parameter name (see ParamName)"]},{"entry":["OptionFlags","Bit flags in least significant bit order:"]},{"entry":[{},"fWithRecomp - set if RPC is sent with the \u201cwith recompile\u201d option"]},{"entry":[{},"fNoMetaData - set if no metadata is to be returned for the result set"]},{"entry":["StatusFlags","Bit flags in least significant bit order:"]},{"entry":[{},"fByRefValue - set if the parameter is passed by reference (OUTPUT"]},{"entry":[{},"parameter) OR not set if parameter is passed by value"]},{"entry":[{},"fDefaultValue - set if the parameter being passed is to be the default"]},{"entry":[{},"value"]},{"entry":["ParameterData","Contains the parameter name length and parameter name (within"]},{"entry":[{},"B_VARCHAR). Contains the TYPE_INFO of the RPC data. Contains the type"]},{"entry":[{},"dependant data for the RPC (within TYPE_VARBYTE)."]},{"entry":["BatchFlag","Used to distinguish the start of the next RPC from another parameter within"]},{"entry":[{},"the current RPC. Has a value of \u20180x80\u2019. Only present if another RPC request"]},{"entry":[{},"is in the current batch."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{},{},{},{},{},{},{}]},"The Unicode stream contains the TSQL text within the batch. An example stream would be: \u201cSelect author_id from Authors\u201d","SSPI Message","Stream Name:","SSPIMessage","Stream Function","A request to supply data for SSPI security.","Stream Comments",{"@attributes":{"id":"p-0176","num":"0000"},"ul":{"@attributes":{"id":"ul0019","list-style":"none"},"li":{"@attributes":{"id":"ul0019-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0020","list-style":"none"},"li":["The initial SSPI data block is sent from the client to the server in the Login7 message.","The server responds with an SSPI Token. The client responds with another SSPIMessage, after calling the SSPI interface with the server response.","This continues until completion or an error.","The server completes the SSPI validation and returns the last SSPI data block as a SSPI Token within a LoginACK Token.\n\nStream Specific Rules\n\nSSPIData:=BYTESTREAM;\n\nStream Definition\n\nSSPIMessage:=SSPIData;\n\nStream Parameter Details\n"]}}}},{"@attributes":{"id":"p-0177","num":"0199"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 9"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameter","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SSPIDate","Contains the SSPIData length and SSPIData data"]},{"entry":[{},{},"(within US_VARCHAR)."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{}]},"Request to perform transaction coordination through a Distributed Transaction Coordinator (DTC) implemented to the Microsoft DTC Interface Specification.","Stream Comments",{"@attributes":{"id":"p-0179","num":"0000"},"ul":{"@attributes":{"id":"ul0021","list-style":"none"},"li":{"@attributes":{"id":"ul0021-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0022","list-style":"none"},"li":"The Message Buffer Header associated with the TransMgrReq must contain the Transaction Manager Type (14 decimal)\n\nStream Specific Rules\n\nRequestType:=USHORT;\n\nStream Definition\n"}}}},{"@attributes":{"id":"p-0180","num":"0202"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TransMgrReq",":= ALL_HEADERS,"]},{"entry":[{},{},"\u2003RequestType,"]},{"entry":[{},{},"\u2003RequestPayload;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0181","num":"0203"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["RequestType","The type of Transaction Manager operation desired by the client:"]},{"entry":[{},"0 = TM_GET_DTC_ADDRESS (returns DTC network address as"]},{"entry":[{},"ENVCHANGE type 16)"]},{"entry":[{},"1 = TM_PROPAGATE_XACT (import DTC transaction into server"]},{"entry":[{},"and returns a local transaction descriptor in an ENVCHANGE type"]},{"entry":[{},"11)"]},{"entry":[{},"5 = TM_BEGIN_XACT (Begins a transaction. and returns the"]},{"entry":[{},"descriptor in an ENVCHANGE type 8."]},{"entry":[{},"6 = TM_PROMOTE_PROMOTABLE_XACT (promote local"]},{"entry":[{},"transaction to DTC and returns an opaque buffer in an"]},{"entry":[{},"ENVCHANGE type 15)"]},{"entry":[{},"7 = TM_COMMIT_XACT (Commits a transaction. Depending on"]},{"entry":[{},"payload of the request, it can additionally request that another local"]},{"entry":[{},"transaction be started)"]},{"entry":[{},"8 = TM_ROLLBACK_XACT (Rolls back a transaction. Depending"]},{"entry":[{},"on the payload of the request it can indicate that after the rollback, a"]},{"entry":[{},"local transaction is to be started.)"]},{"entry":[{},"9 = TM_SAVE_XACT (Sets a savepoint within the active"]},{"entry":[{},"transaction. This request must specify a non-empty name for the"]},{"entry":[{},"savepoint.)"]},{"entry":[{},"TM_GET_DTC_ADDRESS - no data (i.e. the value of the length field in the"]},{"entry":[{},"US VARBYTE is zero, indicating no data follows the length)"]},{"entry":[{},"TM_PROPAGATE_XACT - data contains an opaque buffer used by the"]},{"entry":[{},"server to enlist in a DTC transaction"]},{"entry":[{},"For downlevel clients:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RequestPayload",":=","US_VARBYTE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For Yukon clients:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RequestPayload",":=","L_VARBYTE;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"TM_BEGIN_XACT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RequestPayload",":=\u2003ISOLATION_LEVEL, BEGIN_XACT NAME;"]},{"entry":[{},"ISOLATION_LEVEL","\u2003:= BYTE;"]},{"entry":[{},"BEGIN_XACT_NAME","\u2003:= B_VARCHAR;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"This request begins a new transaction, or increments trancount if already in"]},{"entry":[{},"a transaction. This is equivalent to T-SQL:"]},{"entry":[{},"BEGIN TRAN;"]},{"entry":[{},"If BEGIN_XACT_NAME is non-empty, a transaction is started with the"]},{"entry":[{},"specified name."]},{"entry":[{},"This is equivalent to:"]},{"entry":[{},"BEGIN TRAN name;"]},{"entry":[{},"See definition for isolation level at the end of this table. If"]},{"entry":[{},"ISOLATION_LEVEL is non-zero, then this request is semantically"]},{"entry":[{},"prepended by:"]},{"entry":[{},"SET TRANSACTION ISOLATION LEVEL isolevel;"]},{"entry":[{},"TM_PROMOTE_XACT - no data"]},{"entry":[{},"This message promotes the transaction of the current request (specified in"]},{"entry":[{},"the MARS header). Current transaction must be part of the specified"]},{"entry":[{},"header."]},{"entry":[{},"Note that TM_PROMOTE_XACT is supported only for transactions initiated"]},{"entry":[{},"via TM_BEGIN_XACT, or via piggybacked operation on"]},{"entry":[{},"TM_COMMIT\/TM_ROLLBACK. An error is returned if TM_PROMOTE is"]},{"entry":[{},"invoked for a TSQL initiated transaction."]},{"entry":[{},"TM_COMMIT_XACT"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RequestPayload",":=","XACT NAME,"]},{"entry":[{},{},{},"XACT_FLAGS,"]},{"entry":[{},{},{},"ISOLATION_LEVEL,"]},{"entry":[{},{},{},"BEGIN_XACT_NAME;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"XACT_FLAGS",":="]},{"entry":[{},{},"\u2003fBeginXact,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fBeginXact","\u2003\u2003\u2003\u2003:= BIT;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ISOLATION_LEVEL",":= BYTE;"]},{"entry":[{},"XACT_NAME",":= B_VARCHAR;"]},{"entry":[{},"BEGIN_XACT_NAME",":= B_VARCHAR;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Without additional flags specified, this command is semantically equivalent"]},{"entry":[{},"to issuing a TSQL COMMIT statement."]},{"entry":[{},"If XACT_NAME is non-empty, this request is semantically equivalent to:"]},{"entry":[{},"COMMIT TRAN name;"]},{"entry":[{},"If fBeginXact is 1, then a new local transaction is started after the commit"]},{"entry":[{},"operation is done. This operation is semantically equivalent to:"]},{"entry":[{},"\u2003COMMIT TRAN;"]},{"entry":[{},"\u2003If (@@trancount = 0)"]},{"entry":[{},"\u2003\u2003BEGIN TRAN;"]},{"entry":[{},"If fBeginXact is 1, then ISOLATION_LEVEL can specify the isolation level to"]},{"entry":[{},"use to start the new transaction, according to the definition at the end of this"]},{"entry":[{},"table. If fBeginXact is 0, then ISOLATION_LEVEL must be 0."]},{"entry":[{},"Specifying ISOLATION_LEVEL is semantically equivalent to prepending"]},{"entry":[{},"SET TRANSACTION ISOLATION LEVEL isolevel;"]},{"entry":[{},"before the request. As such, the isolation level remains in effect for the"]},{"entry":[{},"session, once the xact ends."]},{"entry":[{},"If fBeginXact is 0, BEGIN_XACT_NAME must be empty. If fBeginXact is 1,"]},{"entry":[{},"BEGIN_XACT_NAME may be non-empty."]},{"entry":[{},"If BEGIN_XACT_NAME is non-empty, a transaction is started with the"]},{"entry":[{},"specified name."]},{"entry":[{},"This is equivalent to:"]},{"entry":[{},"BEGIN TRAN name;"]},{"entry":[{},"TM_ROLLBACK_XACT"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RequestPayload",":=","XACT NAME,"]},{"entry":[{},{},{},"XACT_FLAGS,"]},{"entry":[{},{},{},"ISOLATION_LEVEL,"]},{"entry":[{},{},{},"BEGIN_XACT_NAME;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"XACT_FLAGS",":= fBeginXact,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT,"]},{"entry":[{},{},"\u2003FRESERVEDBIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fBeginXact","\u2003\u2003\u2003\u2003:= BIT;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ISOLATION_LEVEL",":= BIT, BIT, BIT;"]},{"entry":[{},"XACT_NAME",":= B_VARCHAR;"]},{"entry":[{},"BEGIN_XACT_NAME",":= B_VARCHAR;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If XACT_NAME is non-empty, this request is semantically equivalent to:"]},{"entry":[{},"ROLLBACK TRAN xact_name;"]},{"entry":[{},"This implies that if XACT_NAME specifies a savepoint name, the rollback"]},{"entry":[{},"only goes back until the specified savepoint."]},{"entry":[{},"Without additional flags specified, this command is semantically equivalent"]},{"entry":[{},"to issuing a TSQL ROLLBACK statement under the current transaction."]},{"entry":[{},"If fBeginXact is 1, then a new local transaction is started after the commit"]},{"entry":[{},"operation is done. This operation is semantically equivalent to:"]},{"entry":[{},"\u2003ROLLBACK TRAN;"]},{"entry":[{},"\u2003BEGIN TRAN;"]},{"entry":[{},"If fBeginXact is 1, then ISOLATION_LEVEL can specify the isolation level to"]},{"entry":[{},"use to start the new transaction, according to the definition at the end of this"]},{"entry":[{},"table. If fBeginXact is 0, then ISOLATION_LEVEL must be 0."]},{"entry":[{},"Specifying ISOLATION_LEVEL is semantically equivalent to pre pending"]},{"entry":[{},"SET TRANSACTION ISOLATION LEVEL isolevel;"]},{"entry":[{},"before the request. As such, the isolation level remains in effect for the"]},{"entry":[{},"session, once the xact ends."]},{"entry":[{},"If fBeginXact is 0, BEGIN_XACT_NAME must be empty. If fBeginXact is 1,"]},{"entry":[{},"BEGIN_XACT_NAME may be non-empty."]},{"entry":[{},"If BEGIN_XACT_NAME is non-empty, a transaction is started with the"]},{"entry":[{},"specified name."]},{"entry":[{},"This is equivalent to:"]},{"entry":[{},"BEGIN TRAN name;"]},{"entry":[{},"If fBeginXact is 1, and the ROLLBACK only rolled back to a savepoint, the"]},{"entry":[{},"Begin_Xact operation is ignored and trancount remains unchanged."]},{"entry":[{},"TM_SAVE_XACT"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RequestPayload",":=\u2003XACT_SAVEPOINT_NAME;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XACT_SAVEPOINT_NAME",":= B_VARCHAR;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"A non-empty name must be specified as part of this request."]},{"entry":[{},"Otherwise an error is raised."]},{"entry":[{},"This request is semantically equivalent to issuing the"]},{"entry":[{},"following TSQL command:"]},{"entry":[{},"\u2003SAVE TRAN name;"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0182","num":"0204"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0x00 \u2003:=\u2003\u2003No isolation level change requested. Use current."]},{"entry":[{},"0x01 \u2003:=\u2003\u2003Read Uncommitted"]},{"entry":[{},"0x02 \u2003:=\u2003\u2003Read Committed"]},{"entry":[{},"0x03 \u2003:=\u2003\u2003Repeatable Read"]},{"entry":[{},"0x04 \u2003:=\u2003\u2003Serializable"]},{"entry":[{},"0x05 \u2003:=\u2003\u2003Snapshot"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{},{}]},"Describes the data type, length and name of compute column data.","Token Stream Comments",{"@attributes":{"id":"p-0184","num":"0000"},"ul":{"@attributes":{"id":"ul0023","list-style":"none"},"li":{"@attributes":{"id":"ul0023-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0024","list-style":"none"},"li":["The token value is 0x88\/136.","This token is used to tell the client what data type and length the compute column data is.","It describes the format of the data found in an ALTROW data stream.","All ALTMETADATA data streams are grouped together.","This stream doesn't occur without a preceding COLMETADATA, though there could be COLINFO and TABNAME streams in between.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0185","num":"0211"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType",":= BYTE;"]},{"entry":["Count",":= USHORT;"]},{"entry":["Id",":= USHORT;"]},{"entry":["ByCols",":= UCHAR;"]},{"entry":["Op",":= BYTE;"]},{"entry":["Operand",":= USHORT;"]},{"entry":["UserType",":= USHORT;"]},{"entry":["fNullable",":= BIT;"]},{"entry":["fCaseSen",":= BIT;"]},{"entry":["usUpdateable",":= BIT, BIT; \/\/2-bit value"]},{"entry":[{},"\u2003\/\/0 = ReadOnly"]},{"entry":[{},"\u2003\/\/1 = ReadWrite"]},{"entry":[{},"\u2003\/\/2 = Unknown (maybe readonly, maybe readwrite)"]},{"entry":["fIdentity",":= BIT;"]},{"entry":["fComputed",":= BIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"usReservedODBC := BIT, BIT;"},{"entry":"fFixedLenCLRType := BIT;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["usReserved",":= BIT, BIT, BIT, BIT, BIT, BIT;"]},{"entry":["Flags",":= fNullable, fCaseSen, usUpdateable,"]},{"entry":[{},"\u2003fIdentity, fComputed, usReservedODBC,"]},{"entry":[{},"\u2003fFixedLenCLRType, usReserved, fUnset;"]},{"entry":["TableName",":= US_VARCHAR;"]},{"entry":["ColName",":= B_VARCHAR;"]},{"entry":["ComputeData",":= Op,"]},{"entry":[{},"\u2003Operand,"]},{"entry":[{},"\u2003UserType,"]},{"entry":[{},"\u2003Flags,"]},{"entry":[{},"\u2003TYPE_INFO,"]},{"entry":[{},"\u2003[TableName],"]},{"entry":[{},"\u2003ColName;"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":"[Note: \u201cTableName\u201d is only specified if text, ntext or image columns are included in the resultset.]"}]}}]}},"br":{}},{"@attributes":{"id":"p-0186","num":"0212"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ALTMETADATA",":= TokenType,"]},{"entry":[{},{},"\u2003Count,"]},{"entry":[{},{},"\u2003Id,"]},{"entry":[{},{},"\u2003ByCols,"]},{"entry":[{},{},"\u2003{ColNum},"]},{"entry":[{},{},"\u2003{ComputeData};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cColNum\u201d is repeated \u201cByCols\u201d times, and \u201cComputeData\u201d is repeated \u201cCount\u201d times]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0187","num":"0213"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 11"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","ALTMETEDATA TOKEN"]},{"entry":["Count","The count of columns (number of aggregate operators) in the token stream."]},{"entry":["Id","The id of the compute statement to which the compute column formats apply."]},{"entry":[{},"This Id lets the client correctly interpret later ALTROW data streams."]},{"entry":["ByCols","The number of columns in the by list of the compute clause. For example, the"]},{"entry":[{},"compute clause compute count(sales) by year, month, division, department has"]},{"entry":[{},"4 by columns."]},{"entry":["Op","The type of aggregate operator. For the aggregate operands, see ByCols and"]},{"entry":[{},"ColNum."]},{"entry":["Operand","The column number in the select list that is the operand to the aggregate"]},{"entry":[{},"operator."]},{"entry":["UserType","The user-defined data type of the column."]},{"entry":["Flags","Bit flags in least significant bit order:"]},{"entry":[{},"fCaseSensitive is a bit flag, TRUE if the column is case sensitive for"]},{"entry":[{},"searches. (Not implemented in MS SQL Server)."]},{"entry":[{},"fNullable is a bit flag, TRUE if the column is null-able."]},{"entry":[{},"fUpdateable is a 2 bit field, 0 if column is read-only, 1 if column is"]},{"entry":[{},"read\/write and 2 if updateable is unknown. (Not implemented in MS"]},{"entry":[{},"SQL Server)."]},{"entry":[{},"fIdentity is a bit flag, TRUE if the column is an identity column."]},{"entry":[{},"fReservedODBC is a 2 bit field that is used by ODS gateways"]},{"entry":[{},"supporting the ODBC ODS gateway driver."]},{"entry":["TableName","The fully qualified base table name for this column. Contains the table name"]},{"entry":[{},"length and table name. This exists only for text or image columns."]},{"entry":["ColName","The column name. Contains the column name length and column name."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Used to send a complete row of computed data, where the data format is provided by the ALTMETADATA token.","Token Stream Comments",{"@attributes":{"id":"p-0189","num":"0000"},"ul":{"@attributes":{"id":"ul0025","list-style":"none"},"li":{"@attributes":{"id":"ul0025-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0026","list-style":"none"},"li":["The token value is 0xD3\/211","Similar to the ROW_TOKEN yet contains an \u201cId\u201d field. This Id matches an Id given in ALTMETADATA (one Id for each compute clause). This provides the mechanism for matching row data with correct compute statements.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0190","num":"0217"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Id",":= USHORT;"]},{"entry":[{},"TextPointer",":= B_VARBYTE;"]},{"entry":[{},"TimeStamp",":= BYTE * 8;"]},{"entry":[{},"Data",":= TYPE_VARBYTE;"]},{"entry":[{},"ComputeData",":= TextPointer,"]},{"entry":[{},{},"\u2003[TimeStamp],"]},{"entry":[{},{},"\u2003Data;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0191","num":"0218"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ALTMETADATA",":= TokenType,"]},{"entry":[{},{},"\u2003Id,"]},{"entry":[{},{},"\u2003{ComputeData};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cComputeData\u201d is repeated \u201cCount\u201d times (where \u201cCount\u201d is specified in ALTMETADATA_TOKEN)]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0192","num":"0219"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 12"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","ALTROW_TOKEN"]},{"entry":["Id","The id of the compute statement to which the compute"]},{"entry":[{},"column formats apply. This Id lets the client correctly"]},{"entry":[{},"interpret later ALTROW data streams."]},{"entry":["TextPointer","The length of the text pointer and the text pointer"]},{"entry":[{},"(within B_VARBYTE) for Data."]},{"entry":["TimeStamp","The timestamp of the text\/image column. This is not present"]},{"entry":[{},"if the value of Data is CHARBIN_NULL or"]},{"entry":[{},"GEN_NULL."]},{"entry":["Data","The actual data for the column. The TYPE_INFO"]},{"entry":[{},"information describing the datatype of this data is given"]},{"entry":[{},"in the preceeding COLMETADATA_TOKEN,"]},{"entry":[{},"ALTMETDATA_TOKEN or OFFSET_TOKEN."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Describes the result set for interpretation of following ROW datastreams.","Token Stream Comments","The token value is 0x81\/136.","This token is used to tell the client what data type and length the compute column data is.","It describes the format of the data found in a ROW datastream.","All COLMETADATA data streams are grouped together.","Token Stream Specific Rules",{"@attributes":{"id":"p-0198","num":"0225"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType",":= BYTE;"]},{"entry":["Count",":= USHORT;"]},{"entry":["UserType",":= USHORT;"]},{"entry":["fNullable",":= BIT;"]},{"entry":["fCaseSen",":= BIT;"]},{"entry":["usUpdateable",":= BIT, BIT; \/\/2-bit value"]},{"entry":[{},"\u2003\/\/0 = ReadOnly"]},{"entry":[{},"\u2003\/\/1 = ReadWrite"]},{"entry":[{},"\u2003\/\/2 = Unknown (maybe readonly, maybe readwrite)"]},{"entry":["fIdentity",":= BIT;"]},{"entry":["fComputed",":= BIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"usReservedODBC:= BIT, BIT;"},{"entry":"fFixedLenCLRType:= BIT;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["usReserved",":= BIT, BIT, BIT, BIT, BIT, BIT;"]},{"entry":["fReservedODBC",":= BIT, BIT;"]},{"entry":["Flags",":= fNullable, fCaseSen, usUpdateable,"]},{"entry":[{},"\u2003fIdentity, fComputed, usReservedODBC,"]},{"entry":[{},"\u2003fFixedLenCLRType, usReserved, fUnset;"]},{"entry":["TableName",":= US_VARCHAR;"]},{"entry":["ColName",":= B_VARCHAR;"]},{"entry":["ColumnData",":= UserType,"]},{"entry":[{},"\u2003Flags,"]},{"entry":[{},"\u2003TYPE_INFO,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003[TableName],","\/\/ <Only specified if text,"]},{"entry":[{},{},"\/\/ntext or image columns are"]},{"entry":[{},{},"\/\/included in the rowset being"]},{"entry":[{},{},"described>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003ColName;"]},{"entry":["NoMetaData",":= \u20180xFF\u2019, \u20180xFF\u2019"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":"[Note: \u201cTableName\u201d is only specified if text, ntext or image columns are included in the resultset.]"}]}}]}},"br":{}},{"@attributes":{"id":"p-0199","num":"0226"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"COLMETADATA",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002NoMetaData"]},{"entry":[{},{},"\u2003\u2002|"]},{"entry":[{},{},"\u2003\u2002(Count, {ColumnData});"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cComlumnData\u201d is repeated \u201cCount\u201d times. See Count below]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0200","num":"0227"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 13"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","COLMETADATA_TOKEN"]},{"entry":["Count","The count of columns (number of aggregate operators) in the token stream. In"]},{"entry":[{},"the event the client requested no metadata to be returned (see OptionFlags"]},{"entry":[{},"parameter in RPCRequest token) the value of Count will be 0xFFFF. This has"]},{"entry":[{},"the same effect on Count as a zero value (i.e. no ComputeData is sent)."]},{"entry":["UserType","The user-defined data type of the column. Note that this is also used to track"]},{"entry":[{},"type id of system defined UDTs (e.g. utcdatetime)"]},{"entry":["Flags","Bit flags in least significant bit order:"]},{"entry":[{},"fCaseSensitive is a bit flag, TRUE if the column is case sensitive for"]},{"entry":[{},"searches. (Not implemented in MS SQL Server)."]},{"entry":[{},"fNullable is a bit flag, TRUE if the column is null-able."]},{"entry":[{},"fUpdateable is a 2 bit field, 0 if column is read-only, 1 if column is"]},{"entry":[{},"read\/write and 2 if updateable is unknown. (Not implemented in MS"]},{"entry":[{},"SQL Server)."]},{"entry":[{},"fIdentity is a bit flag, TRUE if the column is an identity column."]},{"entry":[{},"fReservedODBC is a 2 bit field that is used by ODS gateways"]},{"entry":[{},"supporting the ODBC ODS gateway driver."]},{"entry":["TableName","The fully qualified base table name for this column. Contains the table name"]},{"entry":[{},"length and table name. This exists only for text or image columns."]},{"entry":["ColName","The column name. Contains the column name length and column name."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Describes the column information in browse mode, sp_cursoropen and sp_cursorfetch.","Token Stream Comments","The token value is 0xA5\/165.","The TABNAME token contains the actual tablename associated with COLINFO.","Token Stream Specific Rules",{"@attributes":{"id":"p-0204","num":"0231"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType \u2003",":= BYTE;"]},{"entry":[{},"Length \u2003",":= USHORT;"]},{"entry":[{},"ColNum \u2003",":= BYTE;"]},{"entry":[{},"TableNum \u2003",":= BYTE;"]},{"entry":[{},"Status \u2003",":= BYTE;"]},{"entry":[{},"ColName \u2003",":= US_VARCHAR;"]},{"entry":[{},"ColInfo \u2003",":= ColNum,"]},{"entry":[{},{},"\u2003\u2002TableNum,"]},{"entry":[{},{},"\u2003\u2002Status,"]},{"entry":[{},{},"\u2003\u2002[ColName];"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cColINfo\u201d is repeated for each column in the result set]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0205","num":"0232"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"COLINFO \u2003",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002Length,"]},{"entry":[{},{},"\u2003\u2002COLInfo;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Token Stream Parameter Details",{"@attributes":{"id":"p-0207","num":"0234"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 14"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","COLINFO_TOKEN"]},{"entry":["Length","The total length of the COLINFO datastream"]},{"entry":["ColNum","The column number in the result set."]},{"entry":["TableNum","The number of the base table the the column was"]},{"entry":[{},"derived from. The value is 0 if the value of Status is"]},{"entry":[{},"EXPRESSION."]},{"entry":["Status","0x4 - EXPRESION (the column was the result of"]},{"entry":[{},"an expression"]},{"entry":[{},"0x8 - KEY (the column is part of a key for the"]},{"entry":[{},"associated table)"]},{"entry":[{},"0x10 - HIDDEN (the column was not a member of the"]},{"entry":[{},"selected list, but was added because it was part of a"]},{"entry":[{},"key for the associated table)"]},{"entry":[{},"0x20 - DIFFERENT_NAME (the column name is"]},{"entry":[{},"different than the selected list column name"]},{"entry":["ColName","The base column name. This only occurs if"]},{"entry":[{},"DIFFERENT_NAME is set in Status"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Outputs a raw page from the server.","Token Stream Comments","The token value is 0x60\/96.","Token Stream Specific Rules",{"@attributes":{"id":"p-0210","num":"0237"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType \u2003",":= BYTE;"]},{"entry":[{},"Length \u2003",":= LONG;"]},{"entry":[{},"Zero \u2003",":= LONG;"]},{"entry":[{},"Page \u2003",":= 2048 \u2003* \u2003BYTE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0211","num":"0238"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DEBUG_CMD \u2003",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002Length,"]},{"entry":[{},{},"\u2003\u2002Zero,"]},{"entry":[{},{},"\u2003\u2002Page;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0212","num":"0239"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 15"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameter","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType","DEBUG_CMD_TOKEN"]},{"entry":[{},"Length","The total length of the DEBUG_CMD datastream"]},{"entry":[{},"Zero","Contains zeros"]},{"entry":[{},"Page","The raw bytes of the page"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{}]},"Indicates the completion status of a command.","Token Stream Comments",{"@attributes":{"id":"p-0214","num":"0000"},"ul":{"@attributes":{"id":"ul0027","list-style":"none"},"li":{"@attributes":{"id":"ul0027-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0028","list-style":"none"},"li":["The token value is 0xFD\/253.","This token is used to indicate the completion of a command. Since multiple commands may be sent to the server in a single batch, multiple DONE tokens may be generated. In this case, all but the final DONE token will have a Status value of DONE_MORE (see below for more details).","For Ad-Hoc SQL command batches, one DONE token is returned for each statementin the batch. \u201cStatements\u201d is defined as \u201call T-SQL statements except variable declarations\u201d.","For execution of commands within stored procedures, DONEPROC and DONEINPROC tokens are used in place of DONE tokens.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0215","num":"0245"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Status",":= USHORT;"]},{"entry":[{},"CurCmd",":= USHORT;"]},{"entry":[{},"DoneRowCount",":= LONG;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0216","num":"0246"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DONE \u2003",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002Status,"]},{"entry":[{},{},"\u2003\u2002CurCmd,"]},{"entry":[{},{},"\u2003\u2002DoneRowCount;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0217","num":"0247"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 16"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","DONE_TOKEN"]},{"entry":["Status","0x1 - DONE_MORE (this DONE message is not the final DONE"]},{"entry":[{},"message in the result batch. Results for the next command are to"]},{"entry":[{},"follow)"]},{"entry":[{},"0x2 - DONE_ERROR (on error occurred on the current command)"]},{"entry":[{},"0x4 - DONE_INXACT (a transaction is in progress). Note: this bit is not"]},{"entry":[{},"set by SQL Server, and should be considered \u201creserved for future use\u201d"]},{"entry":[{},"0x8 - DONE_PROC (the DONE messages results from the execution"]},{"entry":[{},"of a stored procedure)"]},{"entry":[{},"0x10 - DONE_COUNT (the Count value is valid. This is used to"]},{"entry":[{},"distinguish between a valid value of 0 for Count or just an initialized"]},{"entry":[{},"variable)"]},{"entry":[{},"0x20 - DONE_ATTN (the DONE message is a server"]},{"entry":[{},"acknowledgement of a client ATTENTION message)"]},{"entry":[{},"0x100 - DONE_SRVERROR (Used in place of DONE_ERROR when"]},{"entry":[{},"an error occurred on the current command which is severe enough to"]},{"entry":[{},"require the result set (if any) to be discarded)"]},{"entry":["CurCmd","Contains the token of the current command (see Appendix A for a list of Server"]},{"entry":[{},"tokens)."]},{"entry":["DoneRowCount","The count of rows that were affected by the command. The value of Count is"]},{"entry":[{},"valid if the value of Status includes DONE_COUNT."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Indicates the completion status of commands within a stored procedure.","Token Stream Comments",{"@attributes":{"id":"p-0219","num":"0000"},"ul":{"@attributes":{"id":"ul0029","list-style":"none"},"li":{"@attributes":{"id":"ul0029-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0030","list-style":"none"},"li":["The token value is 0xFE\/254.","A DONEPROC token is sent when all the statements within a stored procedure have been executed.","If a stored procedure calls another stored procedure the DONE_MORE bit is set in the Status value.","A DONEPROC token may be followed by another DONEPROC token, or a DONEINPROC only if the DONE_MORE bit is set in the Status value.","There is a separate DONEPROC token sent for each stored procedure called.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0220","num":"0254"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Status",":= USHORT;"]},{"entry":[{},"CurCmd",":= USHORT;"]},{"entry":[{},"DoneRowCount",":= LONG;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0221","num":"0255"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DONEPROC \u2003",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002Status,"]},{"entry":[{},{},"\u2003\u2002CurCmd,"]},{"entry":[{},{},"\u2003\u2002DoneRowCount;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0222","num":"0256"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 17"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","DONEPROC_TOKEN"]},{"entry":["Status","0x1 - DONE_MORE (this DONE message is not the final DONE"]},{"entry":[{},"message in the result batch. Results for the next command are to"]},{"entry":[{},"follow)"]},{"entry":[{},"0x2 - DONE_ERROR (on error occurred on the current command)"]},{"entry":[{},"0x4 - DONE_INXACT (a transaction is in progress). Note: this bit is not"]},{"entry":[{},"set by SQL Server and should be considered \u201creserved for future use.\u201d"]},{"entry":[{},"0x8 - DONE_PROC (the DONE messages results from the execution"]},{"entry":[{},"of a stored procedure)"]},{"entry":[{},"0x10 - DONE_COUNT (the Count value is valid. This is used to"]},{"entry":[{},"distinguish between a valid value of 0 for Count or just an initialized"]},{"entry":[{},"variable)"]},{"entry":[{},"0x40 - DONE_INPROC (the procedure contains a statement that failed."]},{"entry":[{},"No DONEPROC message is returned."]},{"entry":[{},"0x80 - DONE_RPCINBATCH (the DONE message is associated with"]},{"entry":[{},"an RPC within a set of batched RPC's. This flag is not set on the last"]},{"entry":[{},"RPC in the batch."]},{"entry":[{},"0x100 - DONE_SRVERROR (Used in place of DONE_ERROR when"]},{"entry":[{},"an error occurred on the current command which is severe enough to"]},{"entry":[{},"require the result set (if any) to be discarded)"]},{"entry":["CurCmd","Contains the token of the current command for a list of Server tokens. (see"]},{"entry":[{},"Appendix A for a list of Server tokens)."]},{"entry":["DoneRowCount","The count of rows that were affected by the command. The value of Count is"]},{"entry":[{},"valid if the value of Status includes DONE_COUNT."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Indicates the completion status of commands within a stored procedure.","Token Stream Comments",{"@attributes":{"id":"p-0224","num":"0000"},"ul":{"@attributes":{"id":"ul0031","list-style":"none"},"li":{"@attributes":{"id":"ul0031-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0032","list-style":"none"},"li":["The token value is 0xFF\/255","A DONEINPROC token is sent for each executed statement in within a stored procedure.","A DONEINPROC token is guaranteed to be followed by another DONEPROC token, or a DONEINPROC.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0225","num":"0261"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Status",":= USHORT;"]},{"entry":[{},"CurCmd",":= USHORT;"]},{"entry":[{},"DoneRowCount",":= LONG;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0226","num":"0262"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DONEINPROC \u2003",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002Status,"]},{"entry":[{},{},"\u2003\u2002CurCmd,"]},{"entry":[{},{},"\u2003\u2002DoneRowCount;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0227","num":"0263"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","DONEINPROC_TOKEN"]},{"entry":["Status","0x1 - DONE_MORE (this DONE message is not the final DONE"]},{"entry":[{},"message in the result batch. Results for the next command are to"]},{"entry":[{},"follow)"]},{"entry":[{},"0x2 - DONE_ERROR (on error occurred on the current command)"]},{"entry":[{},"0x4 - DONE_INXACT (a transaction is in progress). Note: this bit is not"]},{"entry":[{},"set by SQL Server and should be considered \u201creserved for future use.\u201d"]},{"entry":[{},"0x8 - DONE_PROC (the DONE messages results from the execution"]},{"entry":[{},"of a stored procedure)"]},{"entry":[{},"0x10 - DONE_COUNT (the Count value is valid. This is used to"]},{"entry":[{},"distinguish between a valid value of 0 for Count or just an initialized"]},{"entry":[{},"variable)"]},{"entry":[{},"0x40 - DONE_INPROC (the procedure contains a statement that failed."]},{"entry":[{},"No DONEPROC message is returned."]},{"entry":[{},"0x80 - DONE_RPCINBATCH (the DONE message is associated with"]},{"entry":[{},"an RPC within a set of batched RPC's. This flag is not set on the last"]},{"entry":[{},"RPC in the batch."]},{"entry":[{},"0x100 - DONE_SRVERROR (Used in place of DONE_ERROR when"]},{"entry":[{},"an error occurred on the current command which is severe enough to"]},{"entry":[{},"require the result set (if any) to be discarded)"]},{"entry":["CurCmd","Contains the token of the current command (see Appendix A for a list of Server"]},{"entry":[{},"tokens)."]},{"entry":["DoneRowCount","The count of rows that were affected by the command. The value of Count is"]},{"entry":[{},"valid if the value of Status includes DONE_COUNT."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"A notification of an environment change (e.g. database, language etc.)","Token Stream Comments","The token value is 0xE3\/227","Includes old and new environment values\n\n",{"@attributes":{"id":"p-0231","num":"0270"},"tables":{"@attributes":{"id":"TABLE-US-00072","num":"00072"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType ",":= BYTE;"]},{"entry":[{},"Length ",":= USHORT;"]},{"entry":[{},"Type ",":= BYTE;"]},{"entry":[{},"NewValue ",":= B_VARBYTE;"]},{"entry":[{},"OldValue ",":= B_VARBYTE;"]},{"entry":[{},"EnvValueData ",":= Type,"]},{"entry":[{},{},"\u2003\u2002NewValue,"]},{"entry":[{},{},"\u2003\u2002[OldValue];"]},{"entry":[{},"EnvValueChg ",":= {EnvValueData};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cEnvValueData\u201d is repeated once for each environment value that has changed]"]}]}}}},"br":[{},{},{}]},{"@attributes":{"id":"p-0232","num":"0271"},"tables":{"@attributes":{"id":"TABLE-US-00073","num":"00073"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 19"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","ENVCHANGE_TOKEN"]},{"entry":["Length","The total length of the ENVCHANGE datastream"]},{"entry":[{},"(EnvValueCh)"]},{"entry":["Type","The type of environment change:"]},{"entry":[{},"1 - Database"]},{"entry":[{},"2 - Language"]},{"entry":[{},"3 - Character set"]},{"entry":[{},"4 - Packet size"]},{"entry":[{},"5 - Unicode data sorting local id"]},{"entry":[{},"6 - Unicode data sorting comparison flags"]},{"entry":[{},"7 - SQL Collation"]},{"entry":[{},"8 - Begin Transaction"]},{"entry":[{},"9 - Commit Transaction"]},{"entry":[{},"10 - Rollback Transaction"]},{"entry":[{},"11 - Enlist DTC Transaction"]},{"entry":[{},"12 - Defect Transaction"]},{"entry":[{},"13 - Real Time Log Shipping"]},{"entry":[{},"15 - Promote Transaction"]},{"entry":[{},"16 - Transaction Manager Address"]},{"entry":[{},"17 - Transaction ended"]},{"entry":[{},"18 - sp_reset connection Completion Acknowledgement."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0233","num":"0272"},"tables":{"@attributes":{"id":"TABLE-US-00074","num":"00074"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Type","Old Value","New Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1 - Database","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["2 - Language","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["3 - Character Set","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["4 - Packet Size","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["5 - Unicode data sorting","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":["local id","B_VARBYTE;"]},{"entry":["6 - Unicode data sorting","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":["comparison flags","B_VARBYTE;"]},{"entry":["7 - SQL Collation","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["8 - Begin Transaction","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["9 - Commit Transaction","OLD_VALUE:=","OLD_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["10 - Rollback","OLD_VALUE:=","OLD_VALUE:= B_VARBYTE;"]},{"entry":["Transaction","B_VARBYTE;"]},{"entry":["11 - Enlist DTC","OLD_VALUE:=","NEW_VALUE:= B_VARBYTE;"]},{"entry":["Transaction","B_VARBYTE;"]},{"entry":["12 - Defect Transaction","OLD_VALUE:=","OLD_VALUE:= B_VARBYTE;"]},{"entry":[{},"B_VARBYTE;"]},{"entry":["13 - Database Mirroring","OLD_VALUE:= \u20180x00\u2019;","PARTNER_NODE : ="]},{"entry":["Partner",{},"B_VARBYTE;"]},{"entry":["15 - Promote","OLD_VALUE:=","NEW_VALUE:="]},{"entry":["Transaction","B_VARBYTE;","PARTNER_NODE;"]},{"entry":[{},{},"DTC_TOKEN:= L_VARBYTE;"]},{"entry":["16 - Transaction","OLD_VALUE:=","NEW_VALUE:= DTC_TOKEN;"]},{"entry":["Manager Address","B_VARBYTE;","XACT_MANAGER_ADDRESS:="]},{"entry":[{},{},"B_VARBYTE;"]},{"entry":["17 - Transaction Ended","OLD_VALUE:=","NEW_VALUE:="]},{"entry":[{},"B_VARBYTE;","XACT_MANAGER_ADDRES;"]},{"entry":[{},{},"OLD_VALUE:= B_VARBYTE;"]},{"entry":["18 - sp_resetconnection","OLD_VALUE:= \u20180x00\u2019;","NEW_VALUE:= \u20180x00\u2019;"]},{"entry":"Completion"},{"entry":"Acknowledgement"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"For Types 8, 9, 10, 11, 12 the ENVCHANGE event is returned only if the transaction lifetime is controlled by the user i.e. explicit transaction commands, including transactions started by SET IMPLICIT_XACT ON.","For ENVCHANGE types , , , , , , ,  the definition of OLD_VALUE is an empty B_VARBYTES. i.e.","OLD_VALUE:=\u20180x00\u2019;","For ENVCHANGE types , , , , ,  the payload of NEW_VALUE is a ULONGLONG.",{"@attributes":{"id":"p-0237","num":"0276"},"tables":{"@attributes":{"id":"TABLE-US-00075","num":"00075"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NEW_VALUE:=","\u20180x08\u2019, \/\/size of ULONGLONG"]},{"entry":[{},{},"ULONGLONG;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"ENVCHANGE type 12 is only sent when a batch defects from either a DTC or bound session transaction.","ENVCHANGE type 17 is sent for a batch that specified a descriptor for a transaction that has ended.","(e.g.","batch 1: begin xact_;","batch 1 (under xact_): select_statement+commit;","batch 2 (under xact_): select statement;","If batch 1 commits before batch 2 gets to run, batch 2 receives ENVCHANGE type 17.)","ENVCHANGE TYPE  always produces empty (0x00) old and new values. It simply acknowledges completion of execution of a reset connection request.","Note: LENGTH for ENVCHANGE type 15 is sent as 0x01 indicating only the length of the type token. Client drivers are responsible for reading the additional payload if type is ==15.","ERROR","Token Stream Name","ERROR","Token Stream Function","Used to send an error message to the client.","Token Stream Comments","The token value is 0xAA\/170","Token Stream Specific Rules",{"@attributes":{"id":"p-0245","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00076","num":"00076"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType \u2003",":= BYTE;"]},{"entry":[{},"Length \u2003",":= USHORT;"]},{"entry":[{},"Number \u2003",":= LONG;"]},{"entry":[{},"State \u2003",":= BYTE;"]},{"entry":[{},"Class \u2003",":= BYTE;"]},{"entry":[{},"MsgText \u2003",":= US_VARCHAR;"]},{"entry":[{},"ServerName \u2003",":= B_VARCHAR;"]},{"entry":[{},"ProcName \u2003",":= B_VARCHAR;"]},{"entry":[{},"LineNumber \u2003",":= USHORT;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0246","num":"0285"},"tables":{"@attributes":{"id":"TABLE-US-00077","num":"00077"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ERROR",":=","TokenType,"]},{"entry":[{},{},{},"Length,"]},{"entry":[{},{},{},"Number,"]},{"entry":[{},{},{},"State,"]},{"entry":[{},{},{},"Class,"]},{"entry":[{},{},{},"MsgText,"]},{"entry":[{},{},{},"ServerName,"]},{"entry":[{},{},{},"ProcName,"]},{"entry":[{},{},{},"LineNumber;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0247","num":"0286"},"tables":{"@attributes":{"id":"TABLE-US-00078","num":"00078"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 20"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","ERROR_TOKEN"]},{"entry":["Length","The total length of the ERROR datastream"]},{"entry":["Number","The error number (number below 20001 are reserved by the Server)"]},{"entry":["State","The error state, used as a modifier to the error number."]},{"entry":["Class","The class\/severity of the error (a class of <10 indicates an informational"]},{"entry":[{},"message)."]},{"entry":["MsgText","Contains the message text length and message text (within US_VARCHAR)"]},{"entry":["ServerName","Contains the server name length and server name (within B_VARCHAR)"]},{"entry":["ProcName","Contains the stored procedure name length and the stored procedure name"]},{"entry":[{},"(within B_VARCHAR)."]},{"entry":["LineNumber","The line number in the SQL command batch or stored procedure that caused"]},{"entry":[{},"the error. Line numbers begin at 1, as such if the line number is not applicable"]},{"entry":[{},"to the message the value of LineNumber will be 0."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"If an error is produced within a result set, the ERROR token is sent before the DONE token for the statement, and such DONE token is sent with the error bit set.","INFO","Token Stream Name","INFO","Token Stream Function","Used to send an information message to the client.","Token Stream Comments",{"@attributes":{"id":"p-0250","num":"0000"},"ul":{"@attributes":{"id":"ul0035","list-style":"none"},"li":{"@attributes":{"id":"ul0035-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0036","list-style":"none"},"li":"The token value is 0xAB\/171\n\nToken Stream Specific Rules\n"}}}},{"@attributes":{"id":"p-0251","num":"0290"},"tables":{"@attributes":{"id":"TABLE-US-00079","num":"00079"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Length",":= USHORT;"]},{"entry":[{},"Number",":= LONG;"]},{"entry":[{},"State",":= BYTE;"]},{"entry":[{},"Class",":= BYTE;"]},{"entry":[{},"MsgText",":= US_VARCHAR;"]},{"entry":[{},"ServerName",":= B_VARCHAR;"]},{"entry":[{},"ProcName",":= B_VARCHAR;"]},{"entry":[{},"LineNumber",":= USHORT;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0252","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00080","num":"00080"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"INFO",":=","TokenType,"]},{"entry":[{},{},{},"Length,"]},{"entry":[{},{},{},"Number,"]},{"entry":[{},{},{},"State,"]},{"entry":[{},{},{},"Class,"]},{"entry":[{},{},{},"MsgText,"]},{"entry":[{},{},{},"ServerName,"]},{"entry":[{},{},{},"ProcName,"]},{"entry":[{},{},{},"LineNumber;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0253","num":"0292"},"tables":{"@attributes":{"id":"TABLE-US-00081","num":"00081"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"231pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 21"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","INFO_TOKEN"]},{"entry":["Length","The total length of the INFO datastream"]},{"entry":["Number","The info number (number below 20001 are reserved by the DataServer)"]},{"entry":["State","The error state, used as a modifier to the info Number."]},{"entry":["Class","The class\/severity of the error (a class of <10 indicates an informational"]},{"entry":[{},"message)."]},{"entry":["MsgText","Contains the message text length and message text (within US_VARCHAR)"]},{"entry":["ServerName","Contains the server name length and server name (within B_VARCHAR)"]},{"entry":["ProcName","Contains the stored procedure name length and the stored procedure name"]},{"entry":[{},"(within B_VARCHAR)."]},{"entry":["LineNumber","The line number in the SQL command batch or stored procedure that caused"]},{"entry":[{},"the error. Line numbers begin at 1, as such if the line number is not applicable"]},{"entry":[{},"to the message the value of LineNumber will be 0."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{},{},{}],"ul":{"@attributes":{"id":"ul0037","list-style":"none"},"li":{"@attributes":{"id":"ul0037-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0038","list-style":"none"},"li":["The token value is 0xAD\/173","If a LOGINACK is not received by the client as part of the login procedure, the logon to the server is unsuccessful.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0254","num":"0295"},"tables":{"@attributes":{"id":"TABLE-US-00082","num":"00082"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":=","BYTE;"]},{"entry":[{},"Length",":=","USHORT;"]},{"entry":[{},"Interface",":=","BYTE;"]},{"entry":[{},"TDSVersion",":=","DWORD;"]},{"entry":[{},"ProgName",":=","B_VARCHAR;"]},{"entry":[{},"MajorVer",":=","BYTE;"]},{"entry":[{},"MinorVer",":=","BYTE;"]},{"entry":[{},"BuildNumHi",":=","BYTE;"]},{"entry":[{},"BuildNumLow",":=","BYTE;"]},{"entry":[{},"ProgVersion",":=","MajorVer,"]},{"entry":[{},{},{},"MinorVer,"]},{"entry":[{},{},{},"BuildNumHi,"]},{"entry":[{},{},{},"BuildNumLow;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0255","num":"0296"},"tables":{"@attributes":{"id":"TABLE-US-00083","num":"00083"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LOGINACK",":=","TokenType,"]},{"entry":[{},{},{},"Length,"]},{"entry":[{},{},{},"Interface,"]},{"entry":[{},{},{},"TDSVersion,"]},{"entry":[{},{},{},"ProgName,"]},{"entry":[{},{},{},"ProgVersion;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0256","num":"0297"},"tables":{"@attributes":{"id":"TABLE-US-00084","num":"00084"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 22"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","LOGINACK_TOKEN"]},{"entry":["Length","The total length of the LOGINACKdatastream"]},{"entry":["Interface","The type of interface with which the server will accept client requests:"]},{"entry":[{},"0 - LDEFSQL (server assumes whatever is sent by the client is"]},{"entry":[{},"acceptable)"]},{"entry":[{},"1 - LXSQL (TSQL is accepted)"]},{"entry":[{},"2 - LSQL (ANSI SQL Version 1 is accepted)"]},{"entry":[{},"3 - LSQL2_1 (ANSI SQL Version 2, level 1 is accepted)"]},{"entry":[{},"4 - LSQL2_2 (ANSI SQL Version 2, level 2 is accepted)"]},{"entry":["TDSVersion","The TDS version being used by the server (e.g. 0x70000000 for a 7.0 server)"]},{"entry":[{},"The following lists the version numbers used by the server up to SQL Server"]},{"entry":[{},"2000 (Shiloh) SP1."]},{"entry":[{},"7.0 (Sphinx): 0x70 00 00 00"]},{"entry":[{},"7.1 (Shiloh): 0x70 01 00 00 [note: this is different from the client]"]},{"entry":[{},"7.1 SP1: 0x71 00 00 01"]},{"entry":["ProgName","The name of the server (i.e. \u201cMicrosoft SQL Server\u201d)"]},{"entry":["MajorVer","The major verson number (0-255)."]},{"entry":["MinorVer","The Minor Version number (0-255)."]},{"entry":["BuildNumHi","The Hi-Byte of the build number (0-255)"]},{"entry":["BulidNumLow","The Low-Byte of the build number (0-255)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Used to inform the client where in the clients command buffer a particular keyword occurs.","Token Stream Comments","The token value is 0x78\/120","Token Stream Specific Rules",{"@attributes":{"id":"p-0259","num":"0300"},"tables":{"@attributes":{"id":"TABLE-US-00085","num":"00085"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Indentifier",":= USHORT;"]},{"entry":[{},"OffSet",":= USHORT;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0260","num":"0301"},"tables":{"@attributes":{"id":"TABLE-US-00086","num":"00086"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OFFSET",":=","TokenType,"]},{"entry":[{},{},{},"Indentifier,"]},{"entry":[{},{},{},"OffSet;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0261","num":"0302"},"tables":{"@attributes":{"id":"TABLE-US-00087","num":"00087"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 23"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","OFFSET_TOKEN"]},{"entry":["Identifier","The keyword to which OffSet refers."]},{"entry":["OffSet","The offset in the command buffer received by the server"]},{"entry":[{},"of the Identifier. The command buffer begin with an"]},{"entry":[{},"OffSet value of 0 (MOD 64K if value of OffSet larger"]},{"entry":[{},"than 64K)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Used to inform the client which columns are located within an \u201corder by\u201d clause.","Token Stream Comments",{"@attributes":{"id":"p-0263","num":"0000"},"ul":{"@attributes":{"id":"ul0039","list-style":"none"},"li":{"@attributes":{"id":"ul0039-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0040","list-style":"none"},"li":["The token value is 0xA9\/169","This token is only sent in the event an \u201corder by\u201d clause is executed.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0264","num":"0306"},"tables":{"@attributes":{"id":"TABLE-US-00088","num":"00088"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Length",":= USHORT;"]},{"entry":[{},"ColNum",":= {USHORT};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cColNum\u201d is repeated once for each column within the \u201corder by\u201d clause]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0265","num":"0307"},"tables":{"@attributes":{"id":"TABLE-US-00089","num":"00089"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ORDER",":=","TokenType,"]},{"entry":[{},{},{},"Length,"]},{"entry":[{},{},{},"ColNum;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0266","num":"0308"},"tables":{"@attributes":{"id":"TABLE-US-00090","num":"00090"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 24"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameter","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType","ORDER_TOKEN"]},{"entry":[{},"Length","The total length of the ORDER datastream."]},{"entry":[{},"ColNum","The column number in the result set."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{}]},"Used to send the status value of a RPC to the client.","Token Stream Comments",{"@attributes":{"id":"p-0268","num":"0000"},"ul":{"@attributes":{"id":"ul0041","list-style":"none"},"li":{"@attributes":{"id":"ul0041-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0042","list-style":"none"},"li":["The token value is 0x79\/121","This token is always returned to the client when an RPC is executed by the server.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0269","num":"0312"},"tables":{"@attributes":{"id":"TABLE-US-00091","num":"00091"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Value",":= LONG;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0270","num":"0313"},"tables":{"@attributes":{"id":"TABLE-US-00092","num":"00092"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RETURNSTATUS",":=","TokenType,"]},{"entry":[{},{},{},"Value;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0271","num":"0314"},"tables":{"@attributes":{"id":"TABLE-US-00093","num":"00093"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 25"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","RETURNSTATUS_TOKEN"]},{"entry":["Value","The return status value (return status cannot be NULL)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{}]},"Used to send the return value of a RPC to the client. When an RPC is executed the associated parameters may be defined as input or output (or \u201creturn\u201d) parameters. This token is used to send a description of the return parameter to the client. This token is also used to describe the value returned by a User Defined Function (UDF) when executed as an RPC. This token is also sent back for EXEC statements within a batch for TDS 4.2. drivers.","Token Stream Comments",{"@attributes":{"id":"p-0273","num":"0000"},"ul":{"@attributes":{"id":"ul0043","list-style":"none"},"li":{"@attributes":{"id":"ul0043-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0044","list-style":"none"},"li":["The token value is 0xAC\/172.","Multiple return values may exist per RPC. There is a \u25a1eparate RETURNVALUE token sent for each parameter returned.","Return parameters are sent in the order they are defined in the procedure.","A UDF cannot have return parameters. As such, if a UDF is executed as an RPC there is exactly one RETURNVALUE token sent to the client.\n\nToken Stream Specific Rules\n"]}}}},{"@attributes":{"id":"p-0274","num":"0320"},"tables":{"@attributes":{"id":"TABLE-US-00094","num":"00094"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":=","BYTE;"]},{"entry":[{},"ParamName",":=","B_VARCHAR;"]},{"entry":[{},"Status",":=","BYTE;"]},{"entry":[{},"UserType",":=","USHORT;"]},{"entry":[{},"fNullable",":=","BIT;"]},{"entry":[{},"fCaseSen",":=","BIT;"]},{"entry":[{},"usUpdateable",":=","BIT, BIT; \/\/2-bit value"]},{"entry":[{},{},{},"\/\/0 = ReadOnly"]},{"entry":[{},{},{},"\/\/1 = ReadWrite"]},{"entry":[{},{},{},"\/\/2 = Unknown (maybe readonly,"]},{"entry":[{},{},{},"maybe readwrite)"]},{"entry":[{},"fIdentity",":=","BIT;"]},{"entry":[{},"fComputed",":=","BIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"usReservedODBC := BIT, BIT;"]},{"entry":[{},"fFixedLenCLRType := BIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"usReserved",":=","BIT, BIT, BIT, BIT, BIT, BIT;"]},{"entry":[{},"Flags",":=","fNullable, fCaseSen, usUpdateable, fIdentity,"]},{"entry":[{},{},{},"fComputed, usReservedODBC,"]},{"entry":[{},{},{},"fFixedLenCLRType, usReserved, fUnset;"]},{"entry":[{},"TypeInfo",":=","TYPE_INFO;"]},{"entry":[{},"Value",":=","TYPE_VARBYTE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0275","num":"0321"},"tables":{"@attributes":{"id":"TABLE-US-00095","num":"00095"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RETURNVALUE",":=","TokenType,"]},{"entry":[{},{},{},"ParamName,"]},{"entry":[{},{},{},"Status,"]},{"entry":[{},{},{},"UserType,"]},{"entry":[{},{},{},"Flags,"]},{"entry":[{},{},{},"TypeInfo,"]},{"entry":[{},{},{},"Value;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0276","num":"0322"},"tables":{"@attributes":{"id":"TABLE-US-00096","num":"00096"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 26"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","RETURNVALUE_TOKEN"]},{"entry":["ParamName","The parameter name length and parameter name (within B_VARCHAR)"]},{"entry":"Status"},{"entry":["UserType","The user-defined data type of the column."]},{"entry":["Flags","Bit flags in least significant bit order:"]},{"entry":[{},"fCaseSensitive is a bit flag, TRUE if the column is case sensitive for"]},{"entry":[{},"searches. (Not implemented in MS SQL Server)."]},{"entry":[{},"fNullable is a bit flag, TRUE if the column is null-able."]},{"entry":[{},"fUpdateable is a 2 bit field, 0 if column is read-only, 1 if column is"]},{"entry":[{},"read\/write and 2 if updateable is unknown. (Not implemented in MS"]},{"entry":[{},"SQL Server)."]},{"entry":[{},"fIdentity is a bit flag, TRUE if the column is an identity column."]},{"entry":[{},"fReservedODBC is a 2 bit field that is used by ODS gateways supporting the"]},{"entry":[{},"ODBC ODS gateway driver."]},{"entry":["TypeInfo","The TYPE_INFO for the message"]},{"entry":["Value","Contains the type dependant data for the parameter (within TYPE_VARBYTE)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Used to send a complete row, as defined by the COLMETADATA token, to the client.","Token Stream Comments",{"@attributes":{"id":"p-0278","num":"0000"},"ul":{"@attributes":{"id":"ul0045","list-style":"none"},"li":{"@attributes":{"id":"ul0045-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0046","list-style":"none"},"li":"The token value is 0xD1\/209\n\nToken Stream Specific Rules\n"}}}},{"@attributes":{"id":"p-0279","num":"0325"},"tables":{"@attributes":{"id":"TABLE-US-00097","num":"00097"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":=","BYTE;"]},{"entry":[{},"TextPointer",":=","B_VARBYTE;"]},{"entry":[{},"Timestamp",":=","8 * BYTE;"]},{"entry":[{},"Data",":=","TYPE_VARBYTE;"]},{"entry":[{},"ColumnData",":=","[TextPointer, TimeStamp],"]},{"entry":[{},{},{},"Data;"]},{"entry":[{},"AllColumnData",":=","{ColumnData};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cColumnData\u201d is repeated once for each column of data]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0280","num":"0326"},"tables":{"@attributes":{"id":"TABLE-US-00098","num":"00098"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ROW",":=","TokenType,"]},{"entry":[{},{},{},"AllColumnData;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0281","num":"0327"},"tables":{"@attributes":{"id":"TABLE-US-00099","num":"00099"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 27"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","ROW_TOKEN"]},{"entry":["TextPointer","The length of the text pointer and the text pointer"]},{"entry":[{},"(within B_VARBYTE) for Data."]},{"entry":["Timestamp","The timestamp of a text\/image column. This is not present"]},{"entry":[{},"if the value of Data is CHARBIN_NULL or GEN_NULL."]},{"entry":["Data","The actual data for the column. The TYPE_INFO"]},{"entry":[{},"information describing the datatype of this data is given in"]},{"entry":[{},"the preceding COLMETADATA_TOKEN,"]},{"entry":[{},"ALTMETDATA_TOKEN or OFFSET_TOKEN."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"The SSPI token returned during the login process.","Token Stream Comments",{"@attributes":{"id":"p-0283","num":"0000"},"ul":{"@attributes":{"id":"ul0047","list-style":"none"},"li":{"@attributes":{"id":"ul0047-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0048","list-style":"none"},"li":"The token value is 0xED\/237\n\nToken Stream Specific Rules\n"}}}},{"@attributes":{"id":"p-0284","num":"0330"},"tables":{"@attributes":{"id":"TABLE-US-00100","num":"00100"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"SSPIBuffer",":= US_VARBYTE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0285","num":"0331"},"tables":{"@attributes":{"id":"TABLE-US-00101","num":"00101"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SSPI \u2003",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002SSPIBuffer;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0286","num":"0332"},"tables":{"@attributes":{"id":"TABLE-US-00102","num":"00102"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 28"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TokenType","SSPI_TOKEN"]},{"entry":["SSPIBuffer","The length of the SSPI Buffer and the SSPI Buffer"]},{"entry":[{},"(within B_VARBYTE)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{}]},"Used to send the table name to the client only when in browser mode or from sp_cursoropen.","Token Stream Comments","The token value is 0xA4\/164","Token Stream Specific Rules",{"@attributes":{"id":"p-0289","num":"0335"},"tables":{"@attributes":{"id":"TABLE-US-00103","num":"00103"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType",":= BYTE;"]},{"entry":[{},"Length",":= USHORT;"]},{"entry":[{},"TableName",":= US_VARCHAR;"]},{"entry":[{},"AllTableNames",":= {TableName};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: \u201cTableName\u201d is repeated once for each table name in the query]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0290","num":"0336"},"tables":{"@attributes":{"id":"TABLE-US-00104","num":"00104"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TABNAME \u2003",":= TokenType,"]},{"entry":[{},{},"\u2003\u2002Length,"]},{"entry":[{},{},"\u2003\u2002AllTableNames;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0291","num":"0337"},"tables":{"@attributes":{"id":"TABLE-US-00105","num":"00105"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 29"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameter","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TokenType","TABNAME_TOKEN"]},{"entry":[{},"Length","The total length of the ROW datastream."]},{"entry":[{},"TableName","The name of the base table referenced"]},{"entry":[{},{},"in the select statement."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{},{}]},{"@attributes":{"id":"p-0292","num":"0338"},"tables":{"@attributes":{"id":"TABLE-US-00106","num":"00106"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ResultSet_METADATA",":= \u2003COLMETADATA_TOKEN"]},{"entry":[{},{},"\u2003\u2002\u2003[TABNAME_TOKEN]"]},{"entry":[{},{},"\u2003\u2002\u2003[COLINFO_TOKEN]"]},{"entry":[{},{},"\u2003\u2002\u2003{ALTMETADATA_TOKEN}"]},{"entry":[{},{},"\u2003\u2002\u2003[ORDER_TOKEN];"]},{"entry":[{},"ResultSet_ROW",":= \u2003ROW_TOKEN"]},{"entry":[{},{},"\u2003\u2002\u2003{ALTROW_TOKEN};"]},{"entry":[{},"ResultSet_DONE",":= \u2003DONE_TOKEN"]},{"entry":[{},{},"\u2003\u2002\u2003|"]},{"entry":[{},{},"\u2003\u2002\u2003DONEINPROC_TOKEN;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0293","num":"0339"},"tables":{"@attributes":{"id":"TABLE-US-00107","num":"00107"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ResultSet \u2003",":= \u2002ResultSet_METADATA"]},{"entry":[{},{},"\u2003\u2002\u2009{ResultSet_ROW}"]},{"entry":[{},{},"\u2003\u2002ResultSet_DONE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"[Note: ResultSet_ROW is repeated \u201cCount\u201d times, where \u201cCount\u201d is specified in the COLMETADATA_TOKEN]"]}]}}}},"br":{}},{"@attributes":{"id":"p-0294","num":"0340"},"tables":{"@attributes":{"id":"TABLE-US-00108","num":"00108"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 30"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Parameter","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ResultSet_METADATA","COLMETADATA_TOKEN","\u201cCount\u201d parameter specifies number of"]},{"entry":[{},{},"times ResultSet_ROW is repeated."]},{"entry":[{},"TABNAME_TOKEN","Optional."]},{"entry":[{},"COLINFO_TOKEN","Optional."]},{"entry":[{},"ALTMETADATA_TOKEN","\u201cId\u201d parameter references \u201cId\u201d used in"]},{"entry":[{},{},"ALTROW_TOKEN (See"]},{"entry":[{},{},"ResultSet_ROW for more details)."]},{"entry":[{},"ORDER_TOKEN","Optional."]},{"entry":["ResultSet_ROW","ROW_TOKEN","Complete row of data, as specified in the"]},{"entry":[{},{},"COLMETEDATA_TOKEN."]},{"entry":[{},"ALTROW_TOKEN","Any \u201cId\u201d specifed within the"]},{"entry":[{},{},"ALTMETADATA_TOKEN \u201cId\u201d parameter"]},{"entry":[{},{},"may be referenced in an ordered"]},{"entry":[{},{},"sequence here (see examples for more"]},{"entry":[{},{},"details)."]},{"entry":["ResultSet_DONE","DONE","The count of rows that were affected by"]},{"entry":[{},{},"the command. The value of Count is"]},{"entry":[{},{},"valid if the value of Status includes"]},{"entry":[{},{},"DONE_COUNT."]},{"entry":[{},"DONEINPROC","The count of rows that were affected by"]},{"entry":[{},{},"the command within a stored procedure."]},{"entry":[{},{},"The value of Count is valid if the value of"]},{"entry":[{},{},"Status includes DONE_COUNT."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0295","num":"0341"},"tables":{"@attributes":{"id":"TABLE-US-00109","num":"00109"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ExampleResultSet",":= COLMETEDATA_TOKEN","(Count=4)"]},{"entry":[{},"\u2003\u2003ALTMETADATA_TOKEN","(Id=1)"]},{"entry":[{},"\u2003\u2003ALTMETADATA_TOKEN","(Id=2)"]},{"entry":[{},"\u2003\u2003\u2003ROW_TOKEN","(Count=1)"]},{"entry":[{},"\u2003\u2003\u2003ALTROW_TOKEN","(Id=1)"]},{"entry":[{},"\u2003\u2003\u2003ALTROW_TOKEN","(Id=2)"]},{"entry":[{},"\u2003\u2003ROW_TOKWN","(Count=2)"]},{"entry":[{},"\u2003\u2003ROW_TOKEN","(Count=3)"]},{"entry":[{},"\u2003\u2003\u2003ALTROW_TOKEN","(Id=2)"]},{"entry":[{},"\u2003\u2003ROW_TOKEN","(Count=4)"]},{"entry":[{},"\u2003\u2003\u2003ALTROW_TOKEN","(Id=1)"]},{"entry":[{},"DONE_TOKEN;","(DoneRowCount="]},{"entry":[{},{},"4 To 8)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The Tabular Data Stream consists of a variety of messages. Each message further consists of a set of bytes transmitted in a predefined order. This predefined order or grammar, can be specified using Extended Backus-Naur Form.","EBNF (ISO\/IEC 14977: 1996(E)) General Syntax",{"@attributes":{"id":"p-0297","num":"0343"},"tables":{"@attributes":{"id":"TABLE-US-00110","num":"00110"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["[ ... ]\u2003",":= Optional Sequence"]},{"entry":["{ ... }\u2003",":= Repeated Sequence (i.e. repeated zero or more times)"]},{"entry":["{ ... }- \u2003",":= Repeated Sequence (i.e. repeated one or more times)"]},{"entry":["* \u2003",":= Syntactic Factor (i.e. an Integer multiplier >= 1)"]},{"entry":["\u201c\u201d\u2003",":= Terminal String (i.e. sequence of one or more chars)"]},{"entry":["\u201c0x00\u201d\u2003",":= Hexidecimal Value (i.e. always 1 byte in length)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0298","num":"0344"},"tables":{"@attributes":{"id":"TABLE-US-00111","num":"00111"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BIT",":= \u201cbit\u201d;"]},{"entry":["BYTE",":= BIT, BIT, BIT, BIT, BIT, BIT, BIT, BIT;"]},{"entry":["BYTELEN",":= BYTE;"]},{"entry":["USHORT",":= BYTE, BYTE;"]},{"entry":["LONG",":= BYTE, BYTE, BYTE, BYTE;"]},{"entry":["DWORD",":= BYTE, BYTE, BYTE, BYTE;"]},{"entry":["ULONGLONG",":= BYTE, BYTE, BYTE, BYTE, BYTE, BYTE,"]},{"entry":[{},"BYTE, BYTE;"]},{"entry":["UCHAR",":= BYTE;"]},{"entry":["USHORTLEN",":= USHORT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"USHORTCHARBINLEN := USHORTLEN \/\/ valid range is 0-8000"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["LONGLEN",":= LONG;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ULONGLONGLEN \u2003:= \u2003\u2003ULONGLONG;"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PRECISION",":= BYTE;"]},{"entry":["SCALE",":= BYTE;"]},{"entry":["GEN_NULL",":= \u201c0x00\u201d;"]},{"entry":["CHARBIN_NULL",":= \u201c0xFF\u201d, \u201c0xFF\u201d;"]},{"entry":["FRESERVEDBIT",":= BIT;"]},{"entry":["FRESERVEDBYTE",":= BYTE;"]},{"entry":["DBID",":= DWORD;"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":"[Note: FRESERVEDBIT and FRESERVEDBYTE are often used to pad unused parts of a byte or bytes. The value of these reserved bits should be ignored.]"}]}}]}},"br":{}},"The collation rule is used to specify collation information for character data or metadata describing character data.",{"@attributes":{"id":"p-0300","num":"0346"},"tables":{"@attributes":{"id":"TABLE-US-00112","num":"00112"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"LCID","\u2003\u2003:= \u200320 * BIT;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"fIgnoreCase",":= BIT;"]},{"entry":[{},"fIgnoreAccent",":= BIT;"]},{"entry":[{},"fIgnoreWidth",":= BIT;"]},{"entry":[{},"fIgnoreKana",":= BIT;"]},{"entry":[{},"fBinary",":= BIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ColFlags \u2003:= \u2003\u2003fIgnoreCase, fIgnoreAccent,"]},{"entry":[{},"fIgnoreWidth, fIgnoreKana, fBinary,"]},{"entry":[{},"FRESERVEDBIT, FRESERVEDBIT, FRESERVEDBIT;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Version",":= 4 * BIT;"]},{"entry":[{},"SortId",":= BYTE;"]},{"entry":[{},"COLLATION",":= LCID, ColFlags, Version, SortId;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"COLLATION represents either a SQL Server Collation or a Windows Collation."]}]}}]}}},"A SQL Server collation is one of a predefined set of sort orders. It is identified by having SortId being non-zero. If this is the case, the following table defines each SortId, including character code page and comparison semantics:",{"@attributes":{"id":"p-0302","num":"0348"},"tables":{"@attributes":{"id":"TABLE-US-00113","num":"00113"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 31"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Sort order ID","SQL collation name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["30","Binary order, for use with the 437 (U.S. English) character set."]},{"entry":["31","Dictionary order, case-sensitive, for use with the 437 (U.S. English)"]},{"entry":[{},"character set."]},{"entry":["32","Dictionary order, case-insensitive, for use with the 437 (U.S. English)"]},{"entry":[{},"character set."]},{"entry":["33","Dictionary order, case-insensitive, uppercase preference, for use with the"]},{"entry":[{},"437 (U.S. English) character set."]},{"entry":["34","Dictionary order, case-insensitive, accent-insensitive, for use with the 437"]},{"entry":[{},"(U.S. English) character set."]},{"entry":["40","Binary order, for use with the 850 (Multilingual) character set."]},{"entry":["41","Dictionary order, case-sensitive, for use with the 850 (Multilingual)"]},{"entry":[{},"character set."]},{"entry":["42","Dictionary order, case-insensitive, for use with the 850 (Multilingual)"]},{"entry":[{},"character set."]},{"entry":["43","Dictionary order, case-insensitive, uppercase preference, for use with the"]},{"entry":[{},"850 (Multilingual) character set."]},{"entry":["44","Dictionary order, case-insensitive, accent-insensitive, for use with the 850"]},{"entry":[{},"(Multilingual) character set."]},{"entry":["49","Strict compatibility with version 1.x case-insensitive databases, for use"]},{"entry":[{},"with the 850 (Multilingual) character set."]},{"entry":["50","Binary order for use with 1252 character set."]},{"entry":["51","Dictionary order, case-sensitive, for use with 1252 character set."]},{"entry":["52","Dictionary order, case-insensitive, for use with 1252 character set."]},{"entry":["53","Dictionary order, case-insensitive, uppercase preference, for use with 1252"]},{"entry":[{},"character set."]},{"entry":["54","Dictionary order, case-insensitive, accent-insensitive, for use with 1252"]},{"entry":[{},"character set."]},{"entry":["55","Alternate dictionary order, case-sensitive, for use with the 850"]},{"entry":[{},"(Multilingual) character set."]},{"entry":["56","Alternate dictionary order, case-insensitive, uppercase preference, for use"]},{"entry":[{},"with the 850 (Multilingual) character set."]},{"entry":["57","Alternate dictionary order, case-insensitive, accent-insensitive, for use with"]},{"entry":[{},"the 850 (Multilingual) character set."]},{"entry":["58","Scandinavian dictionary order, case-insensitive, uppercase preference, for"]},{"entry":[{},"use with the 850 (Multilingual) character set."]},{"entry":["59","Scandinavian dictionary order, case-sensitive, for use with the 850"]},{"entry":[{},"(Multilingual) character set."]},{"entry":["60","Scandinavian dictionary order, case-insensitive, for use with the 850"]},{"entry":[{},"(Multilingual) character set."]},{"entry":["61","Alternate dictionary order, case-insensitive, for use with the 850"]},{"entry":[{},"(Multilingual) character set."]},{"entry":["71","Latin-1 case-sensitive, for use with 1252 character set."]},{"entry":["72","Latin-1 case-insensitive, for use with 1252 character set."]},{"entry":["73","Danish\/Norwegian case-sensitive sort order for code page 1252."]},{"entry":["74","Finnish\/Swedish case-sensitive sort order for code page 1252."]},{"entry":["75","Icelandic case-sensitive sort order for code page 1252."]},{"entry":["80","Binary order, for use with the 1250 (Central European) character set."]},{"entry":["81","Dictionary order, case-sensitive, for use with the 1250 (Central European)"]},{"entry":[{},"character set."]},{"entry":["82","Dictionary order, case-insensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["83","Czech dictionary order, case-sensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["84","Czech dictionary order, case-insensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["85","Hungarian dictionary order, case-sensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["86","Hungarian dictionary order, case-insensitive, for use with the 1250"]},{"entry":[{},"(Central European) character set."]},{"entry":["87","Polish dictionary order, case-sensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["88","Polish dictionary order, case-insensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["89","Romanian dictionary order, case-sensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["90","Romanian dictionary order, case-insensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["91","Croatian dictionary order, case-sensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["92","Croatian dictionary order, case-insensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["93","Slovak dictionary order, case-sensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["94","Slovak dictionary order, case-insensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["95","Slovenian dictionary order, case-sensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["96","Slovenian dictionary order, case-insensitive, for use with the 1250 (Central"]},{"entry":[{},"European) character set."]},{"entry":["97","Windows Polish case-sensitive sort order for code page 1250."]},{"entry":["98","Windows Polish case-insensitive sort order for code page 1250."]},{"entry":["104","Binary order, for use with the 1251 (Cyrillic) character set."]},{"entry":["105","Dictionary order, case-sensitive, for use with the 1251 (Cyrillic) character"]},{"entry":[{},"set."]},{"entry":["106","Dictionary order, case-insensitive, for use with the 1251 (Cyrillic)"]},{"entry":[{},"character set."]},{"entry":["107","Ukrainian dictionary order, case-sensitive, for use with the 1251 (Cyrillic)"]},{"entry":[{},"character set."]},{"entry":["108","Ukrainian dictionary order, case-insensitive, for use with the 1251"]},{"entry":[{},"(Cyrillic) character set."]},{"entry":["112","Binary order, for use with the 1253 (Greek) character set."]},{"entry":["113","Dictionary order, case-sensitive, for use with the 1253 (Greek) character"]},{"entry":[{},"set."]},{"entry":["114","Dictionary order, case-insensitive, for use with the 1253 (Greek) character"]},{"entry":[{},"set."]},{"entry":["120","Mixed dictionary order, for use with the 1253 (Greek) character set."]},{"entry":["121","Dictionary order, case-sensitive, accent-sensitive, for use with the 1253"]},{"entry":[{},"(Greek) character set."]},{"entry":["124","Dictionary order, case-insensitive, accent-insensitive, for use with the 1253"]},{"entry":[{},"(Greek) character set."]},{"entry":["128","Binary order, for use with the 1254 (Turkish) character set."]},{"entry":["129","Dictionary order, case-sensitive, for use with the 1254 (Turkish) character"]},{"entry":[{},"set."]},{"entry":["130","Dictionary order, case-insensitive, for use with the 1254 (Turkish)"]},{"entry":[{},"character set."]},{"entry":["136","Binary order, for use with the 1255 (Hebrew) character set."]},{"entry":["137","Dictionary order, case-sensitive, for use with the 1255 (Hebrew) character"]},{"entry":[{},"set."]},{"entry":["138","Dictionary order, case-insensitive, for use with the 1255 (Hebrew)"]},{"entry":[{},"character set."]},{"entry":["144","Binary order, for use with the 1256 (Arabic) character set."]},{"entry":["145","Dictionary order, case-sensitive, for use with the 1256 (Arabic) character"]},{"entry":[{},"set."]},{"entry":["146","Dictionary order, case-insensitive, for use with the 1256 (Arabic) character"]},{"entry":[{},"set."]},{"entry":["152","Binary order, for use with the 1257 (Baltic) character set."]},{"entry":["153","Dictionary order, case-sensitive, for use with the 1257 (Baltic) character"]},{"entry":[{},"set."]},{"entry":["154","Dictionary order, case-insensitive, for use with the 1257 (Baltic) character"]},{"entry":[{},"set."]},{"entry":["155","Estonian dictionary order, case-sensitive, for use with the 1257 (Baltic)"]},{"entry":[{},"character set."]},{"entry":["156","Estonian dictionary order, case-insensitive, for use with the 1257 (Baltic)"]},{"entry":[{},"character set."]},{"entry":["157","Latvian dictionary order, case-sensitive, for use with the 1257 (Baltic)"]},{"entry":[{},"character set."]},{"entry":["158","Latvian dictionary order, case-insensitive, for use with the 1257 (Baltic)"]},{"entry":[{},"character set."]},{"entry":["159","Lithuanian dictionary order, case-sensitive, for use with the 1257 (Baltic)"]},{"entry":[{},"character set."]},{"entry":["160","Lithuanian dictionary order, case-insensitive, for use with the 1257 (Baltic)"]},{"entry":[{},"character set."]},{"entry":["183","Danish\/Norwegian dictionary order, case-insensitive, uppercase"]},{"entry":[{},"preference, for use with 1252 character set."]},{"entry":["184","Swedish\/Finnish (Standard) dictionary order, case-insensitive, uppercase"]},{"entry":[{},"preference, for use with 1252 character set."]},{"entry":["185","Swedish\/Finnish (Phone) dictionary order, case-insensitive, uppercase"]},{"entry":[{},"preference, for use with 1252 character set."]},{"entry":["186","Icelandic dictionary order, case-insensitive, uppercase preference, for use"]},{"entry":[{},"with 1252 character set."]},{"entry":["192","Binary order, for use with the 932 (Japanese) character set."]},{"entry":["193","Dictionary order, case-insensitive, for use with the 932 (Japanese)"]},{"entry":[{},"character set"]},{"entry":["194","Binary order, for use with the 949 (Korean) character set."]},{"entry":["195","Dictionary order, case-insensitive, for use with the 949 (Korean) character"]},{"entry":[{},"set."]},{"entry":["196","Binary order, for use with the 950 (Traditional Chinese) character set."]},{"entry":["197","Dictionary order, case-insensitive, for use with the 950 (Traditional"]},{"entry":[{},"Chinese) character set."]},{"entry":["198","Binary order, for use with the 936 (Simplified Chinese) character set."]},{"entry":["199","Dictionary order, case-insensitive, for use with the 936 (Simplified"]},{"entry":[{},"Chinese) character set."]},{"entry":["200","Dictionary order, case-sensitive, for use with the 932 (Japanese) character"]},{"entry":[{},"set."]},{"entry":["201","Dictionary order, case-sensitive, for use with the 949 (Korean) character"]},{"entry":[{},"set."]},{"entry":["202","Dictionary order, case-sensitive, for use with the 950 (Traditional Chinese)"]},{"entry":[{},"character set."]},{"entry":["203","Dictionary order, case-sensitive, for use with the 936 (Simplified Chinese)"]},{"entry":[{},"character set."]},{"entry":["204","Binary order, for use with the 874 (Thai) character set."]},{"entry":["205","Dictionary order, case-insensitive, for use with the 874 (Thai) character"]},{"entry":[{},"set."]},{"entry":["206","Dictionary order, case-sensitive, for use with the 874 (Thai) character set."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"For a windows collation (SortId==0), the LCID bits correspond to a LocaleId as defined by the National Language Support (NLS) functions in Windows.","The GetLocaleInfo windows api can be used to retrieve information about the locale. In particular, querying for the LOCALE_IDEFAULTANSICODEPAGE retrieves the code page information for the given locale.","For either collation type, the different comparison flags map to those defined as valid comparison flags for the CompareString windows api.","However for SQL collations with non-unicode data, the sort order id should be used to derive comparison information flags.",{"@attributes":{"id":"p-0307","num":"0353"},"tables":{"@attributes":{"id":"TABLE-US-00114","num":"00114"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"APPENDIX A"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Text & Image Types:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["TEXTTYPE",":= \u20180x23\u2019 TEXT \u2212"]},{"entry":["IMAGETYPE",":= \u20180x22\u2019 IMAGE"]},{"entry":["NTEXTTYPE",":= \u20180x63\u2019 NTEXT \u2212"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Character & Binary Types:"},{"entry":"VARBINARYTYPE := \u2003\u2003\u20180x25\u2019 VARBINARY"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["VARCHARTYPE",":= \u20180x27\u2019 VARCHAR"]},{"entry":["BINARYTYPE",":= \u20180x2d\u2019 BINARY"]},{"entry":["CHARTYPE",":= \u20180x2f\u2019 CHAR"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BIGVARBINTYPE",":= \u20180xA5\u2019","\u2003\u2003BIGVARBINARY",{}]},{"entry":["BIGVARCHRTYPE",":= \u20180xA7\u2019","\u2003\u2003BIGVARCHAR","\u2212"]},{"entry":["BIGBINARYTYPE",":= \u20180xAD\u2019","\u2003\u2003BIGBINARY"]},{"entry":["BIGCHARTYPE",":= \u20180xAF\u2019","\u2003\u2003BIGCHAR","\u2212"]},{"entry":["NVARCHARTYPE",":= \u20180xe7\u2019","\u2003\u2003NVARCHAR","\u2212"]},{"entry":["NCHARTYPE",":= \u20180xef\u2019","\u2003\u2003NCHAR","\u2212"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Other Types:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["NULLTYPE",":= \u20180x1f\u2019","\u2003\u2003VOID","+"]},{"entry":["GUIDTYPE",":= \u20180x24\u2019","\u2003\u2003UNIQUEIDENTIFIER","+"]},{"entry":["INTNTYPE",":= \u20180x26\u2019","\u2003\u2003INTN","+"]},{"entry":["INT1TYPE",":= \u20180x30\u2019","\u2003\u2003INT1","+"]},{"entry":["BITTYPE",":= \u20180x32\u2019","\u2003\u2003BIT","+"]},{"entry":["INT2TYPE",":= \u20180x34\u2019","\u2003\u2003INT2","+"]},{"entry":["DECIMALTYPE",":= \u20180x37\u2019","\u2003\u2003DECIMAL","+"]},{"entry":["INT4TYPE",":= \u20180x38\u2019","\u2003\u2003INT4","+"]},{"entry":["DATETIM4TYPE",":= \u20180x3a\u2019","\u2003\u2003?","+"]},{"entry":["FLT4TYPE",":= \u20180x3b\u2019","\u2003\u2003?","+"]},{"entry":["MONEYTYPE",":= \u20180x3c\u2019","\u2003\u2003MONEY","+"]},{"entry":["DATETIMETYPE",":= \u20180x3d\u2019","\u2003\u2003DATETIME","+"]},{"entry":["FLT8TYPE",":= \u20180x3e\u2019","\u2003\u2003FLT8","+"]},{"entry":["NUMERICTYPE",":= \u20180x3f\u2019","\u2003\u2003NUMERIC","+"]},{"entry":["SSVARIANTTYPE",":= \u20180x62\u2019","\u2003\u2003SQLVARIANT"]},{"entry":["BITNTYPE",":= \u20180x68\u2019","\u2003\u2003BITN","+"]},{"entry":["DECIMALN",":= \u20180x6a\u2019","\u2003\u2003DECIMALN","+"]},{"entry":["NUMERICNTYPE",":= \u20180x6c\u2019","\u2003\u2003NUMERICN","+"]},{"entry":["FLTNTYPE",":= \u20180x6d\u2019","\u2003\u2003FLTN","+"]},{"entry":["MONEYNTYPE",":= \u20180x6e\u2019","\u2003\u2003MONEYN","+"]},{"entry":["DATETIMNTYPE",":= \u20180x6f\u2019","\u2003\u2003DATETIMEN","+"]},{"entry":["MONEY4TYPE",":= \u20180x7a\u2019","\u2003\u2003?","+"]},{"entry":["INT8TYPE",":= \u20180x7f\u2019","\u2003\u2003INT8","+"]},{"entry":["UDTTYPE",":= \u20180xF0\u2019","\u2003\u2003CLR UDTs"]},{"entry":["XMLTYPE",":= \u20180xf1\u2019","\u2003\u2003XML"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Referring now to , a brief, general description of a suitable computing environment on the client as well as the server side is illustrated wherein the various aspects of the present invention can be implemented. While the invention has been described above in the general context of computer-executable instructions of a computer program that runs on a computer and\/or computers, those skilled in the art will recognize that the invention can also be implemented in combination with other program modules. Generally, program modules include routines, programs, components, data structures, etc. that perform particular tasks and\/or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the inventive methods can be practiced with other computer system configurations, including single-processor or multiprocessor computer systems, minicomputers, mainframe computers, as well as personal computers, hand-held computing devices, microprocessor-based or programmable consumer electronics, and the like. As explained earlier, the illustrated aspects of the invention can also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. However, some, if not all aspects of the invention can be practiced on stand-alone computers. In a distributed computing environment, program modules can be located in both local and remote memory storage devices. The exemplary includes a computer , including a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The processing unit  may be any of various commercially available processors. Dual microprocessors and other multi-processor architectures also can be used as the processing unit .","The system bus may be any of several types of bus structure including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of commercially available bus architectures. The system memory may include read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS), containing the basic routines that help to transfer information between elements within the computer , such as during start-up, is stored in ROM .","The computer  further includes a hard disk drive , a magnetic disk drive , e.g., to read from or write to a removable disk , and an optical disk drive , e.g., for reading from or writing to a CD-ROM disk  or to read from or write to other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of data, data structures, computer-executable instructions, etc. for the computer . Although the description of computer-readable media above refers to a hard disk, a removable magnetic disk and a CD, it should be appreciated by those skilled in the art that other types of media which are readable by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, and the like, may also be used in the exemplary operating environment, and further that any such media may contain computer-executable instructions for performing the methods of the present invention.","A number of program modules can be stored in the drives and RAM , including an operating system , one or more application programs , other program modules , and program data . The operating system  in the illustrated computer can be substantially any commercially available operating system.","A user can enter commands and information into the computer  through a keyboard  and a pointing device, such as a mouse . Other input devices (not shown) can include a microphone, a joystick, a game pad, a satellite dish, a scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, a game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, computers typically include other peripheral output devices (not shown), such as speakers and printers.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a workstation, a server computer, a router, a peer device or other common network node, and typically includes many or all of the elements described relative to the computer , although only a memory storage device  is illustrated in . The logical connections depicted in  may include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, Intranets and the Internet.","When employed in a LAN networking environment, the computer  can be connected to the local network  through a network interface or adapter . When utilized in a WAN networking environment, the computer  generally can include a modem , and\/or is connected to a communications server on the LAN, and\/or has other means for establishing communications over the wide area network , such as the Internet. The modem , which can be internal or external, may be connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, can be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be employed.","In accordance with the practices of persons skilled in the art of computer programming, the present invention has been described with reference to acts and symbolic representations of operations that are performed by a computer, such as the computer , unless otherwise indicated. Such acts and operations are sometimes referred to as being computer-executed. It will be appreciated that the acts and symbolically represented operations include the manipulation by the processing unit  of electrical signals representing data bits which causes a resulting transformation or reduction of the electrical signal representation, and the maintenance of data bits at memory locations in the memory system (including the system memory , hard drive , floppy disks , and CD-ROM ) to thereby reconfigure or otherwise alter the computer system's operation, as well as other processing of signals. The memory locations wherein such data bits are maintained are physical locations that have particular electrical, magnetic, or optical properties corresponding to the data bits.","Referring now to , a client-server system  that employs a TDS protocol according to one aspect of the present invention is illustrated. The client(s)  can be hardware and\/or software (e.g., threads, processes, computing devices). The system  also includes one or more server(s) . The server(s)  can also be hardware and\/or software (e.g., threads, processes, computing devices). For example, such servers  can house threads to perform transformations by employing the present invention. The client  and the server  can communicate, in the form of data packets transmitted according to the present invention, between two or more computer processes. As illustrated, the system  includes a communication framework  that can facilitate communications between the client(s)  and the server(s) . The client(s)  is operationally connected to one or more client data store(s)  that can store information local to the client(s) . Moreover, client  can access and update databases  located on a server computer  running a server process. In one aspect of the present invention, the communication frame work  can be the internet, with the client process being a Web browser and the server process being a Web server. As such, a typical client  can be a general purpose computer, such as a conventional personal computer having a central processing unit (CPU), system memory a modem or network card for connecting the personal computer to the Internet, and a display as well as other components such as a keyboard, mouse, and the like. Likewise a typical server  can be university or corporate mainframe computers, or dedicated workstations, and the like.","Although the invention has been shown and described with respect to certain illustrated aspects, it will be appreciated that equivalent alterations and modifications will occur to others skilled in the art upon the reading and understanding of this specification and the annexed drawings. In particular regard to the various functions performed by the above described components (assemblies, devices, circuits, systems, etc.), the terms (including a reference to a \u201cmeans\u201d) used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure, which performs the function in the herein illustrated exemplary aspects of the invention. In this regard, it will also be recognized that the invention includes a system as well as a computer-readable medium having computer-executable instructions for performing the acts and\/or events of the various methods of the invention. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201cincluding\u201d, \u201chas\u201d, \u201chaving\u201d, and variants thereof are used in either the detailed description or the claims, these terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
