---
title: Log collection, structuring and processing
abstract: Tools for use in obtaining useful information from processed log messages generated by a variety of network platforms (e.g., Windows servers, Linux servers, UNIX servers, databases, workstations, etc.). The log messages may be processed by one or more processing platforms or “log managers” using any appropriate rule base to identify “events” (i.e., log messages of somewhat heightened importance), and one or more “event managers” may analyze the events to determine whether alarms should be generated therefrom. The tools may be accessed via any appropriate user interface of a console that is in communication with the various log managers, event managers, etc., to perform numerous tasks in relation to logs, events and alarms.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384112&OS=09384112&RS=09384112
owner: LogRhythm, Inc.
number: 09384112
owner_city: Boulder
owner_country: US
publication_date: 20110701
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["This application claims the benefit of U.S. Provisional Application No. 61\/360,815, entitled \u201cSYSTEM FOR LOG COLLECTION, STRUCTURING AND PROCESSING,\u201d filed on Jul. 1, 2010, the entire contents of which are hereby incorporated within by reference.","The present invention relates in general to network monitoring and information management that allows for event detection and analysis based on the processing and organization of log messages, and more particularly to tools and features (e.g., that are accessible via any appropriate user interface) for obtaining useful information from processed log messages.","Modern business operations typically require many communication devices and technologies that include routers, firewalls, switches, file servers, business applications (e.g., ERP, CRM, manufacturing), etc operating in physical, virtual, or \u201ccloud\u201d environments. Generally, such devices and technologies report their health and status by writing log files. For example, computer processors are responsible for processing vast amounts of data for a variety of applications. To determine how a certain application may be processed by a computer processor, engineers typically design the application with a log file that records various functional and auditing outputs within the application. That is, certain functions within the application may output data to the log file so that the engineers may diagnose problems (e.g., software bugs) and\/or observe general operational characteristics of the application.","By observing the general operational characteristics of an application, certain valuable information may also be ascertained. For example, log files generated by a file server may record logins. In this regard, certain logins may be unauthorized and their prevention desired. However, with the multitude of devices, hosts and their corresponding applications available, a bewildering array of log data may be generated across the IT environment or network. Additionally, networks are often augmented and upgraded with additional systems that provide even more logs. Adding to the complexity of the situation, devices and applications of these networks vary in so many ways and so do their corresponding log file formats. Attempting to comprehensively review log files across so many technologies has generally been impractical.","The present invention generally relates to text and log message processing in data systems and, in particular, to tools and other features that may be used (e.g., in conjunction with a console or user interface) to extract and\/or obtain useful information from processed log messages, automatically distribute log messages to one or more receiving entities, globally configure data management settings, and the like. Log messages may be generated by a variety of network platforms including, for instance, Windows servers, Linux servers, UNIX servers, routers, switches, firewalls, intrusion detection systems, databases, commercial applications (e.g., ERP, CRM), and homegrown applications. The log data can be collected using standard network logging and messaging protocols, such as, for instance, Syslog, SNMP, SMTP and other proprietary and non-proprietary protocols. Moreover, the log file may be text based, a proprietary format, a binary format, etc. In addition, the logs may be written to databases such as Oracle, Sybase, MySQL, etc. As a result, a data system may generate a large number of logs in different formats, and it may be desired to monitor or analyze these logs for a variety of purposes. Fields of information within such log messages can be identified and the messages can be selectively processed in accordance with rules based on those fields. In this manner, enhanced processing of textual messages including log messages may be achieved along with improved audit and compliance analysis, application monitoring, security monitoring, and operations analysis. Moreover, large networks may be supported and growing networks may be adapted to.","In accordance with one aspect, a utility (e.g., method, apparatus and\/or system) is provided for distributing logs from one or more platforms of a data system to one or more receiving entities (such as but not limited to internal users of the data system, third-party applications, and service providers) on the data system. The utility involves: establishing, on a processing platform (e.g., a \u201cLog Manager\u201d), at least one log processing rule for selectively processing logs associated with one or more monitored platforms. For instance, the at least one log processing rule may be stored or otherwise associated with a storage module (e.g., memory, hard drive). The utility also includes receiving, at the processing platform (e.g., via any appropriate receiving module or interface), logs associated with the one or more monitored platforms; processing, at the processing platform (e.g., via a processor), the received logs using the at least one log processing rule; identifying, from the processing step, a first subset of the received logs based on one or more metadata fields of the received logs and a classification of the received logs; and distributing, from the processing platform (e.g., via the processor), information related to the first subset to a receiving entity (e.g., via utilizing user datagram protocol (\u201cUDP\u201d) or transmission control protocol (\u201cTCP\u201d) based Syslog).","In one embodiment, the receiving entity may be appropriately selected, for instance, by checking one or more boxes on a user interface. For example, properties (e.g., remote host IP, network protocol) associated with the receiving entities may also be configured on such a user interface. In another embodiment, the utility may further include selecting at least one policy (including the at least one processing rule) for use in identifying the first subset. For instance, a user may be directed to a screen or pop-up window on the console whereby the user can choose one of a number of policies to assign to one of the receiving entities.","As another example, the at least one policy may include additional log processing rules such as a second log processing rule for use in identifying a second subset of logs. In this case, the method may include processing, at the processing platform, the received logs using said second log processing rule; identifying, from the second log processing rule processing step, a second subset of the received logs based on one or more metadata fields of the received logs and a classification of the received logs; and distributing, from the processing platform to the receiving entity, information related to the second subset.","In one arrangement, the various log processing rules may essentially carry out various include and exclude filters which allow a user to customize a particular policy. Additionally, the information related to the first subset may include at least one of original text of the received logs, at least one event designated from the received logs, and at least one alarm related to the received logs.","In accordance with another aspect, a utility is provided for use in monitoring one or more platforms of a data system. The utility includes: establishing, on a processing platform, a number of log processing rules for selectively processing logs associated with one or more monitored platforms; establishing, on the processing platform, an override setting in relation to at least one data management setting for logs that match at least one of the log processing rules, the at least one data management setting specifying whether or not an action is to be taken in relation to the logs matching the least one log processing rule; receiving, at the processing platform, logs from the one or more monitored platforms; operating the processing platform to identify received logs that match the at least one log processing rule; and processing, at the processing platform, the matching received logs according to the override setting. This utility advantageously allows data management settings (e.g., which logs are to be archived) to be applied across all processing platforms (e.g., log managers, log sources) to logs that meet specific criteria (e.g., it allows for fine-grained data management on a log-by-log basis). Also, users may be provided a manageable manner of determining how logs will be processed around the data system regardless of various disparate settings used by various log sources and\/or log processing policies.","In one arrangement, the at least one data management setting includes one of taking and not taking the action, and the override setting includes the other of taking and not taking the action. For instance, actions may include but are not limited to at least one of archiving the logs, indexing the logs, online storing of the logs, aggregation of the logs, forwarding of events identified from the logs, forwarding the logs to a data warehouse, false alarm rating of alarms designated from events, and combinations thereof. The data management setting(s) may be created either before or after the override setting(s) is or are established or specified.","In another arrangement, the received logs that match the at least one log processing rule may be selected based on a classification of the received logs, such as but not limited to auditing, operations, and security. Additionally or alternatively, the received logs that match the at least one log processing rule may be selected based on content of one or more metadata fields of the received logs. For instance, the method may include, before the operating step, processing the received logs to enrich the logs with the one or more metadata fields (which metadata fields may be used in the operating step). In a further arrangement, the method may include establishing an expiration period after which received logs are no longer processed according to the override setting and are thereafter processed according to the at least one data management setting. This may allow an administrator or other user to temporarily enact a \u201cglobal log processing rule\u201d without having to remember to \u201cturn off\u201d the rule at some point in the future.","In accordance with another aspect, a utility is provided for use in monitoring one or more platforms of a data system. The utility includes: identifying a set of circumstances with respect to at least one type of storage device (e.g., hard drive, flash drive, and an optical disc) usable with the data system; establishing, using a processing platform of said data system, at least one log processing rule to identify logs of the one or more monitored platforms matching the set of circumstances; receiving, at the processing platform, logs from one or more monitored platforms; operating the processing platform to identify received logs that match the set of circumstances; and taking at least one action with respect to the at least one type of storage device in response to the operating step.","For instance, the set of circumstances may include at least one of a) any movement of data to or from the at least one type of storage device, b) one or more particular users (e.g., disgruntled or former employees, lower level employees, competitors) of the data system that are moving data within the data system (e.g., onto or from the at least one type of storage device), and c) one or more particular types of data (e.g., trade secrets) being moved within the data system such as onto or from the at least one type of storage device.","Numerous actions may be taken in response to the operating step. In one embodiment, the at least one action may include simply generating a log message indicative of the occurrence of the set of circumstances (e.g., where the set of circumstances includes any movement of data to or from the at least one type of storage device). In another embodiment, the action may includes sending, from the processing platform to a device (e.g., server) associated with the data system that is operable to write data to the storage device, a request to limit data from being written to the at least one storage device. In one variation, this may include a request to eject the at least one storage device from the data system. The sending step may occur before the set of circumstances is completed (e.g., before a user has completed the download of data onto a storage device). In another embodiment, the action may include sending, from the processing platform, an alert to at least one receiving entity (e.g. administrator, troubleshooter). In a further embodiment, any logs generated due to the set of circumstances occurring may be flagged as events and\/or alarms.","In accordance with another aspect, a utility is provided for use in monitoring one or more platforms of a data system. The utility includes synchronizing a database of the data system with information (e.g., logins, logoffs, logon session duration, total number of logins, initial password creation date, most recent password change date, most recent incorrect password entry date, and combinations thereof) from at least one directory service of the data system; first operating a processing platform to establish at least one correlation filter based on one or more data fields of the synchronized database; and second operating the processing platform to correlate logs previously received and processed by the processing platform using the at least one correlation filter.","In one arrangement, the at least one correlation filter may include at least one of a user name and group name, and the second operating step may entail identifying logs previously received and processed by the processing platform including the at least one user name or group name. In a variation, the at least one correlation filter may include at least one group name, and the method further may further include resolving the at least one group name into at least one user name (where the identified logs include the at least one resolved user name). In this regard, administrators can correlate logs and other data based on group names received from the directory service instead of having to separately correlate based on each of the individual members of the group. In another variation, the previously received and processed logs correlated by the processing platform may have been generated by at least two different devices or hosts.","In accordance with another aspect, a utility is provided for use in monitoring one or more platforms of a data system. The utility includes: establishing, on a processing platform, a number of log processing rules for selectively processing logs associated with one or more monitored platforms based on a content of one or more data fields of the logs; receiving, at the processing platform, logs associated with the one or more monitored platforms; processing, at the processing platform, the received logs using the number of log processing rules; identifying, using the processing platform, a processed log(e.g., by selecting the log message on a console or user interface associated with the processing platform using any appropriate user manipulable feature); and first operating the processing platform to establish at least one new log processing rule based on one or more data fields of the identified, processed log.","In one arrangement, the utility may further include second operating the processing platform to process the logs associated with the one or more monitored platforms using the at least one new log processing rule (it is noted that the use of identifiers such as \u201cfirst\u201d processing or operating, \u201csecond\u201d processing or operating as used throughout the present disclosure may not necessarily connect any order of such processing or operating steps, unless otherwise noted). For instance, the newly created log processing rule may identify at least one event from the received logs. In another arrangement, the utility may include identifying, using the processing platform, at least one event from the received logs using the number of log processing rules. Here, the utility may include second operating the processing platform to process the at least one event using the at least one new log processing rule (e.g., to designate at least one alarm from the at least one event). It is also envisioned that event and alarm rules could be created from alarms. In any event, another arrangement contemplates customizing the at least one new log processing rule. For instance, the customizing may include modifying, in the at least one new log processing rule, at least one of said one or more data fields of the identified log message that the at least one new log processing rule is based on.","In accordance with another aspect, a utility is provided for use in monitoring one or more platforms of a data system. The utility includes establishing, on a processing platform, a number of log processing rules for selectively processing logs associated with one or more monitored platforms based on a content of one or more data fields of the logs; receiving, at the processing platform, logs associated with the one or more monitored platforms; first operating the processing platform to process the logs associated with the one or more monitored platforms using the number of log processing rules; identifying, using the processing platform and in response to the first operating step, at least one event from the logs associated with one of the one or more monitored platforms for further processing; and second operating the processing platform to establish at least one new log processing rule based on one or more data fields of the identified event.","In one arrangement, the utility may further include second operating the processing platform to process the logs associated with the one or more monitored platforms using the at least one new log processing rule. This new log processing rule may identify at least one event from the received logs. In another arrangement, the utility may further include second operating the processing platform to process events identified from the logs associated with one of said one or more monitored platforms using the at least one new log processing rule. Here, the at least one new log processing rule may designate at least one alarm from the at least one event.","In accordance with another aspect, a utility is provided for use in monitoring one or more platforms of a data system. The utility includes: establishing, on a processing platform, a number of log processing rules for selectively processing logs associated with one or more monitored platforms based on a content of one or more data fields of the logs; identifying, using the processing platform, a log message associated with one of the one or more monitored platforms (e.g., selecting said log message on a user interface associated with said processing platform); first operating the processing platform to establish at least one correlation filter (e.g., classification, impacted country, impacted origin, direction and domain) based on one or more metadata fields of the identified log message; and second operating the processing platform to correlate logs previously received and processed by the processing platform using the at least one correlation filter.","In one arrangement, the step of second operating may include searching for logs previously received and processed by the processing platform that match the correlation filter of the identified log message. More specifically, and in the case where an initial search has resulted in a table having a number of rows and columns being populated with logs and\/or events along with a number of metadata fields corresponding to each of the logs and\/or events, the logs or events may be rearranged according to the correlation filter. As just one example, in the case where the correlation filter was a \u201ccommon event\u201d (e.g., logon, process started), those logs or events having the same common event could be bunched together in the table. Numerous other types of correlation filters are also envisioned and encompassed within the scope of this disclosure (e.g., domain, impacted country, etc.). In another arrangement, the previously received and processed logs correlated by the processing platform may have been generated by at least two different devices or hosts.","In accordance with another aspect, a utility is provided for use on one or more platforms of a data system. The utility includes: specifying, at a user interface, whether or not to take at least one action in relation to a plurality of logs received from one or more monitored platforms of the data system based on a classification (e.g., security, audit and operations) of the received logs; receiving, at a processing platform in communication with the user interface, logs from the one or more monitored platforms; and operating the processing platform process the received logs in accordance with the specifying step.","The at least one action may include at least one of archiving of the received logs, the storage of the received logs in a database associated with said processing platform, and the forwarding of the received logs to a tool that can aggregate numerous received logs in a single view on said user interface (although numerous other actions are also envisioned and encompassed within the present disclosure). In one arrangement, the at least one action may be enabled (e.g., by checking a box on the user interface). In another arrangement, the specifying step takes precedence over at least one other conflicting setting of the processing platform. For instance, the at least one other conflicting setting may specify whether or not to take at least one action in relation to the plurality of received logs based on a log source of the received logs.","It should be appreciated that the various aspects discussed herein may be implemented via any appropriate number and\/or type of platforms, modules, processors, memory, etc., each of which may be embodied in hardware, software, firmware, middleware, and the like.","The present invention relates to network monitoring and information management through the processing of log messages. In the following description, the invention is set forth in the context of log messages that are generated by computers within a computer network, for purposes of illustration. However, it will be appreciated that the invention is applicable to a broader variety of applications. For example, the log message processing may provide for the detection of a particular event for virtually any type of system that generates log messages (e.g., computer servers, mainframes, network devices, security devices, access control devices, etc.). In addition, certain aspects of the invention are applicable in contexts other than log processing","Generally, the invention regards systems and methods that provide for the collection, processing, management, and analysis of the log messages. In , log messages are generally identified by the reference numbers . . . and are generated by their respective computers . . . (where M and N are both integers greater than 1). In this regard, the computers . . . may each generate a plurality of text files describing various events associated with the computers' operations. The generated text files are also routinely updated by the computers . . . as various events transpire during the computers' operations, a process that is generally referred to as \u201clogging\u201d. Additionally, while log messages may come in other formats, text files are often used for logging because of their readily manageable format and because a person can more easily understand the information contained therein for diagnostic purposes when problems arise.","Generally, the computers . . . that generate logs . . . come in a variety of configurations with each being capable of generating tremendous numbers of logs. For example, the computer may represent a server operable within a computer network configuration. In this regard, the server may be responsible for delivering applications to computers within the computer network, administering communications among computers within the computer network, controlling various features of the computer network etc. In the process of performing these functions, although partially dependent upon the number of computers within the network, the server typically generates thousands of log entries per day. To illustrate, when a user incorrectly attempts to logon to a single computer on the computer network, the server may generate a log entry noting at a particular time (e.g., timestamp) that an improper procedure was performed. Of course, the invention is not intended to be limited to log entries that merely reflect improper login attempts. Rather, computers regularly generate log entries for a variety of actions, such as application launch failures, audit activity, attacks, operating system errors, etc. Other examples of computers may include individual computers (e.g., desktops and notebooks\/laptops), computer workstations, mainframe systems, etc.","The system  of the present invention provides for the rapid\/automated extraction of viable information from the logs . . . . Namely, the system  provides for a log manager  that is communicatively coupled to the various computers . . . to receive the logs . . . generated therefrom (e.g., collection). In this regard, the log manager  may use various protocols to communicate with the computer . . . . For example, the system  may employ log agents (e.g., software) that operate on the individual computers . . . to extract log entries from the logs of the computers. In some instances, the log agents are software protocols that are innate to the operating system of a particular computer. For example, the log manager  may be communicatively coupled to a computer using the Windows Operating System by Microsoft, Inc. and, as such, may communicate with the computer using Windows Networking\/Remote Procedure Calls (RPC). Such is illustrated in the system  of  with the log manager  communicating with a computer network  that runs Microsoft Windows operating systems. The log manager  may use the RPCs  to extract various log entries  generated by the various computers of the computer network  for processing by the log manager. In other instances, a software log agent may be configured to operate on the computer to exclusively communicate with the log manager . In such an embodiment, the log agent may transfer log entries to the log manager  via proprietary protocols. This and other examples of log manager communications are illustrated in greater detail below in .","The information that the log manager  may extract from the logs may ultimately be used to generate alarm messages that may be useful to an end user. For example, the log manager  may process thousands of log messages and detect certain events from the volume of data contained therein. The log manager  may aggregate log data into a manageable format that summarizes, for example, the frequency of a particular event. Additionally, the log manager  may archive the above data for future reporting uses. This aggregation and archival may generally be referred to as management.","To illustrate some of the management aspects of the log manager , a computer in a network (e.g., computer ) may log an entry that a particular Internet Protocol (IP) address is attempting access to the computer. Similarly, another computer (e.g., computer ) in the network may log an entry that the same IP address is attempting access to the computer. The log manager  surmises that the same events are occurring on different computers. The log manager  may, in turn, generate an event message stating that the IP address is attempting access on various computers of the network. In this regard, the system  is generally configured with the event manager  to process the event messages to determine whether an alarm should be generated (e.g., analysis). If the IP address of this example is that of a computer that routinely communicates to the computer network as part of an authorized process, the event may simply be registered by the event manager for future use, if any. However, if the IP address belongs to a computer system that is, for example, attempting to bombard the network with message traffic, the event manager  may generate an alarm that a denial of service attack is underway so that a system administrator may take appropriate steps to limit or prevent any damage. Additionally, the utility may detect trends of events and\/or alarm generation and provide reports pertaining to those trends, also falling generally under the purview of analysis.","Turning now to a more specific example,  shows a block diagram of the log managers - with each being configured to communicate with a computer system (e.g., a computer network, a single computer, a work station, a server, a mainframe, routers, switches, network devices, firewalls, etc.) and thereby operate as a front end to an event manager (e.g., event manager  of ). For example, the log manager  may be configured to communicate with a UNIX-based computer system. In this regard, the log manager  may use syslog protocols that are inherent to the UNIX operating system to receive log messages from the computer system. The log manager , on the other hand, may be configured to exclusively operate using SNMP (Simple Network Management Protocol) and SMTP (Simple Mail Transfer Protocol) to receive log messages via the Internet or computers using Internet protocols. Those skilled in the art readily recognize SNMP as a means to monitor and control network devices, and to manage configurations, statistics collection, performance, and security and SMTP as a network management protocol used almost exclusively in TCP\/IP networks to send and receive electronic mail.","Another example of transfer protocols that may be used are the Netflow protocols produced by Cisco Systems Inc. For example, the log manager can be configured to monitor a specified UDP (\u201cUser Data Protocol\u201d) port for incoming Netflow data. In this regard, the Netflow data may be received as UDP packets containing one or more flows collected by the sending device. A set of processing rules may be assigned to a Netflow policy such that Netflow data may be tagged as originating from a Netflow Log Message Source. Additionally, Netflow may be used within virtual source handling process (described below) in order to assign the Netflow data from different devices to specific log message sources (e.g., within system  of ).","In one embodiment, the log managers are configured with a server process, called a message processing engine (\u201cMPE\u201d), that is responsible for processing each log message against a rule base. For example, log manager  is illustrated as being configured with the software component MPE  that provides for the identification of specific log messages, the parsing of data from the log message to reporting fields (e.g., IP addresses, logins), log message \u201caging\u201d (e.g., deletion periods) and archiving, and the forwarding of a subset of log messages to an event manager (e.g., event manager  above). Because log messages vary in format and the data they contain, a flexible and powerful text comparison capability is employed. The text comparison is generally implemented using regular expressions, similar to those used in the UNIX operating system environment. The regular expressions assist in identifying and parsing log messages.","In this regard, the MPE  may also be configured with rules to implement such processing. For example, the MPE  may use a set of rules that are a combination of Microsoft .NETs regular expression syntax (modeled after industry standard regular expression syntax) and a unique tagging notation. The tagging notation additionally identifies sections of the log message that should be parsed into report fields, such as source IP addresses, destination IP address, and Login information. When an MPE rule is prepared (e.g., via the exemplary interfaces of  described below), the tagging notation is converted to regular expression notation such that the MPE  can process log messages by comparing them to applicable rules (per a policy). More specifically, when a log entry matches a particular rule, the following is generally performed:","1. The log message direction is determined (e.g., external, internal);","2. A risk-based priority is calculated;","3. Meta-data is parsed from the log message text","4. The original log message text, the parsed meta-data, and any prepared data (e.g., direction, risk-based priority, time-to-live, archive settings) is written to the Log Manager database; and","5. An event is generated and forwarded to the event manager (e.g., if the feature is activated).","The event record that is generated by the MPE  generally contains the same information as the updated log message record with additional reporting fields. Examples of those reporting fields are shown and described in . These reporting fields (i.e., of ) are updated by the MPE . The reporting fields may include meta-data associated with log messages and data that is parsed from the log.","In yet another example of possible communications between the log manager and a computer system, log manager  is configured to communicate with a computer system via log agent protocols that operate with the computer system being monitored. For example, a software application (i.e., log agent ) may be configured to specifically operate within a particular computing environment (e.g., an operating system). The log agent , when executed by the computing environment, may retrieve generated log messages from the computing environment and transfer those messages to a log manager, such as log manager . Such is generally referred to as an \u201cagent-based\u201d configuration. In one embodiment, the log agent  collects log data from various sources and forwards the data to a log manager (e.g., log manger ) via authenticated TCP or other transport protocol. Additionally, the log agent  may encrypt log data from the log messages of its respective computer system and then configure the encrypted log data within the transport protocol that allows for the encrypted log data to be transferred from the computer system to the log manager . For example, the log agent  may be configured to encrypt the log entries before transfer to the log manager  to provide reporting assurance, as described hereinbelow. The log manager , upon receiving encrypted logs, may decrypt the logs and begin processing them to extract useful information. Examples of the encryption technology used by the log agent  may include, but are not limited to, the Blowfish encryption algorithm or the Advanced Encryption Standard (\u201cAES\u201d). The log agent may additionally compress log messages before being sent over the network.","The log agent may monitor and forward textual log data of a variety of sources, such as firewall logs, web proxies, intrusion detection alarms, audit logs or system logs. When log data is not textual in nature, specific log collection adapters may be configured (e.g., as in the case of a Windows Event Log). The log agent can also be configured to forward logs to one or more backup log managers when a primary log manager is unavailable. This ability to \u201cfailover\u201d to a backup log manager helps assure reliable delivery of log data.","Additionally, the log agent  may be configured to communicate with the log manager  and observe the log messages that are being received by the log manager. To illustrate, log manager  is shown with the application interface  software module that enables communications between the log manager  and a computer coupled thereto. The log agent  may be configured to observe items such as the number of Netflow packets in a disk buffer (e.g., the number of Netflow packets that have been spooled to disk), the number of Netflow packets in an unprocessed queue (e.g., indicating the number of Netflow packets that are awaiting processing), the number of Netflow packets received (e.g., indicating the number of Netflow packets that have been received by the agent since it last started), the number of Netflow packets received per second.","Generally, the Netflow server is governed through four (4) configuration parameters in the configuration file of the log agent . The configuration parameters include the Netflow_server (e.g., used to enable or disable the Netflow server), Netflow_server_nic (e.g., used to specify the interface to receive Netflow data, determine a network interface card to use), Netflow_server_port (e.g., used to specify a port on which the Netflow server will receive Netflow packets), and Netflow_server_crypto (e.g., used to specify whether the Netflow message source will encrypt data).","Although described with each log manager being configured to operate\/communicate with a single protocol, this description is merely intended to make the reader more readily familiar with the manner in which the log managers operate. Alternatively, log managers  through  may each be configured to operate\/communicate with a variety of computer systems to collect and process log messages such that events may be generated by the event manager. For example, each log manager may be configured to communicate via a variety of protocols (e.g., syslog, SNMP, SMTP, RPC, log agent  protocols, etc.) such that the log manager can be flexibly configured to communicate with a number of computer systems. Additionally, while  illustrates log managers -, the invention is not intended to be limited to the number of illustrated log managers. Rather, the illustrated embodiment is merely intended to assist the reader in the communication protocols between the log managers and various computer systems\/log agents. Those skilled in the art should readily recognize that other embodiments may call for fewer or more log managers as a matter of design choice. For example, the number of log managers may be scaled based on a variety of factors such as the aggregate numbers of log messages forwarded per second and the number of connected log agents. Also, process of providing additional log storage may be accomplished through the addition of log managers operating in parallel.","While log agents may reside on the computer hosting the logs of interest, certain scenarios exist in which the log agent can collect log data from remote systems. For example, log agents may be configured as agent-less. In such a configuration, a log agent  may be installed as a \u201clog aggregation server\u201d, as shown in . This configuration may even be within the log manager itself (i.e., log manager . In this regard, the log agent  may serve as a central log data collector that forwards collected logs to a log manager. For example, a log agent may have a built in syslog server that can accept log data from a device  that is sending syslog data and forward such log data directly to a log manager. Such a capability may provide flexible support for collecting logs from devices and hosts that use the syslog protocol, such as routers, switches, and Unix servers.","Additionally, by using native Windows protocols, the log agent can connect to and collect event logs from remote systems, as shown in . For example, the log agent  may be installed on a system  and configured to collect, consolidate, and forward the event logs of remote systems  over the Internet . In this regard, the log agent  can support the forwarding of event logs of Windows based servers without requiring an agent on each remote system . For example, many businesses have information technology (\u201cIT\u201d) devices and servers deployed at remote sites where administration and monitoring is done centrally. A major challenge in managing remote sites is the ability to effectively monitor security and availability of those sites because the sites typically have no IT support present. A single log agent can be configured to run as a syslog server and a remote Windows event log consolidator with installation of such on a single server at the remote site. In this regard, the log agent may collect logs from communicatively coupled network devices (e.g., routers and firewalls via a syslog server) and\/or Windows servers. The log agent can then forward the logs across the internet  via encrypted and authenticated TCP communication protocol. The logs may then be securely forwarded to a log manager  through firewalls. Once the logs are collected by the log manager , the logs can be transformed into events for central monitoring alarm generation when applicable.","Regarding consolidation, the log agent  may consolidate log messages by counting the number of times a unique log message is collected and\/or observed within a certain timeframe. For example, the log agent  may retrieve\/receive log messages and observed various portions of metadata associated with those files. The log agent  may then consolidate a plurality of log messages into one message to the log manager indicating that the same log message has been observed for a certain number of times or at some frequency. In one embodiment, the log manager may include an application programming interface (\u201cAPI\u201d) that allows a user to aggregate reports based on predetermined criteria. In this regard, the user may program the log agent  via the API to retrieve of log messages according to a metadata set as selected by the user.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIGS. 8 and 9","FIG. 3"],"b":["80","50","81","82","83","84","85"]},"Flowchart  of  illustrates the process of the log agent\/log manager interaction when a virtual source information request is queued (i.e., process element ), generally referred to as a mediator server maintenance process. Such is illustrated with the following syslog data:","Jul 16 16:53:49 192.168.1.20 dhclient: DHCPREQUEST on eth0 to 192.168.1.10 port 67","If the log agent parses out an IP address identifier (i.e., process element ), the log agent may perform a forward DNS lookup in an attempt to gather a fully qualified domain name for the IP address. Such may be performed by setting the virtual source information request IP address field to the identifier, in process element . Conversely, if the log agent parses out a hostname or fully qualified domain name (e.g., process element ) it may perform a reverse DNS lookup in an attempt to gather an IP address. Generally, this results in setting the virtual source info request hostname field to the identifier, in process element . The DNS lookups can be enabled\/disabled via a VirtualSource_DNSResolution configuration parameter in the log agent's configuration file, in process element . The VirtualSource_DNSResolution, when enabled, may cause the log agent to attempt to resolve hostnames for syslog sending devices that send IP addresses as the identifier. This configuration parameter may also cause a log agent to attempt to resolve IP addresses for syslog sending devices that send hostnames as the identifier. Additionally, this configuration parameter may cause the log agent to perform forward and reverse DNS lookups on identifiers parsed from syslog and Netflow data. Thus, if the DNS lookups are enabled, the log agent may perform a hostname\/IP lookup based on the identifier, in process element , and set the virtual source info request hostname\/IP if the DNS lookup is successful, in process element .","The log agent may subsequently send a virtual source information request to a mediator server within the log manager (described in greater detail below in ) containing the identifier parsed out of the log along with any information gathered through the DNS queries, in process element . Such may also occur if the virtual source identifier name\/IP resolution is disabled (e.g., process element ). When the mediator server receives a virtual source information request from a log agent, the mediator server examines virtual sources loaded from a configuration database (e.g., a configuration database of system ) to see if the identifier is assigned to a virtual source. If the identifier is assigned to a virtual source, then the mediator server may return a virtual source information reply containing an appropriate log message source information to the log agent, in process element . The log agent may then assign all syslog or Netflow data from the identifier to the virtual source. That is, the log agent may add the identifier to a virtual source lookup table that is linked to the virtual source, in process element . From there, flowchart  may cycle to determine whether there is a virtual source info request being queued, in process element .","If, however, the identifier is not assigned to a virtual source (and the mediator server is configured to auto register virtual sources), then the mediator server may create a new virtual message source for the agent that sent the virtual source information request. The newly created virtual source generally has the identifier automatically assigned to it. Newly created syslog sources are generally created with the log message source type of Syslog-Autoregistered. Newly created Netflow sources, on the other hand, are generally are created with the log message source type of Cisco Netflow.","Additionally, if the identifier is not assigned to a virtual source and the mediator server is not configured to auto register virtual sources, the mediator server may return a failed message source authentication message to the log agent, in process element . In the event that the log agent receives a failed message source authentication message from the Mediator Server or the virtual source information request fails (e.g. the virtual source does not exist and the Mediator Server is configured to not auto register virtual sources) the log agent may assign syslog\/Netflow data from the identifier in question to the generic WinSyslogSvr\/WinNetflowSvr source, in process element . Similarly, if the log agent receives an unlicensed message source reply from the mediator server, in process element , the log agent may assign syslog\/Netflow data from the identifier in question to the generic WinSyslogSvr\/WinNetflowSvr source, in process element . In either case, flowchart  may continue with cycle maintenance in process element  by returning to process element .","As mentioned, the log agent may send a virtual source information request to a mediator server within the log manager for log message processing. The mediator server process, however, is not the end of processing by the log managers. Generally, log managers, such as log managers - of , have at least three components, a relational database management system, a mediator server, and a message processing engine. The relational database management system (\u201cRDBMS\u201d), such as Microsoft SQL Server, stores log data. The RDBMS generally provides full backup and recovery facilities and ensures transactional integrity.","The mediator server (generally operable within a Windows OS environment) handles connections from log agents, inserts forwarded log data into the database, and handles the archiving or destruction of log data according to a user configurable policy. The mediator server process is responsible for managing interactions and communications with log agents and is illustrated in flowchart  of .","The mediator server process initiates when a virtual source information request is received from a log agent, in process element . That is, a log agent may initiate a virtual source information request to which the mediator server responds by satisfying the requests. In doing so, the mediator server may determine whether a request contains a hostname identifier, in process element . If so, the mediator server finds the appropriate hostname identifier associated with that particular log agent's message sources, in process element . For example, a log agent may operate with a plurality of devices such as that described in the remote agent-less log management system described herein above. Accordingly, the log agent may receive log messages from a variety of different devices, each of which may have a hostname identifier. The mediator server may look up the hostname identifier that is associated with that log agent (i.e., process element ). If a hostname identifier is found, the mediator server may determine if there is an available message source license, in process element . For example, a log manager may have a license that is used in determining the maximum number of log sources that can send log data to the log manager simultaneously. In this regard, the log manager may check for an available license to determine whether a maximum log source limit has been reached. In one embodiment, each log source may be individually licensed. The mediator server may determine whether log messages from a particular source are authorized, or licensed. The mediator server may then obtain the license of the particular device to begin processing of log messages. If not, the mediator server may find the appropriate IP address identifier of the log agent's message sources, in process element . Such may also be performed if the original request does not contain a hostname identifier, in process only .","Upon searching for the IP address identifier in the log agent's message sources, the mediator server may determine whether the IP address identifier was found, in process element . If so, the mediator server may determine whether there is an available message source license, in process element . If there is no IP address identifier found, the mediator server may determine whether auto virtual message source registration is enabled, in process element . For example, when the VirtualSource_AutoRegister is enabled, the mediator server may automatically register new virtual sources for unknown syslog\/Netflow sending devices, in a manner similar to plug-and-play registration of devices with computers. Such is generally performed upon receiving syslog or Netflow data with an identifier not already assigned to a virtual source. This may create a message source in the event manager database for the syslog\/Netflow sending device. Virtual sources can also be created manually via a log agent. Virtual sources are generally created and managed in the same way as other log message sources so long as they are created within the agent that is running the syslog or Netflow server.","If the auto virtual message source registration is not enabled, the mediator server may send a failed message source authentication message to the log agent and communication therewith, in process element . If, however the auto virtual message source registration is enabled, the mediator server may add the new message source to the database according to the appropriate hostname\/IP address identifiers, in process element . If the auto virtual message source registration process is successful, in process element , the mediator server may send a virtual message source reply message to the log agent, in process element , such that log messages from those registered devices may be properly processed. If the auto virtual message source registration is not successful, the mediator server may alternatively send a failed message source authentication message to the log agent, in process element , to, e.g., alert the log agent that those particular log messages are not to be forwarded to the log manager. Similarly, if no available message source license exists (i.e., process element ), the mediator server may send an unlicensed message source message to the log agent, in process element  to similarly discontinue processing of log messages.","The mediator server process ensures that only authorized and authenticated log agents connect to the log manager by terminating unauthorized connections. The server process inserts forwarded log messages into the log manager database setting default on-line lifetimes (e.g., the time that a particular log message is available and generally referred to as the time-to-live of a log) and archiving parameters. Communications between the log agents and the mediator server process are generally TCP based and can be encrypted, as described above. Additionally, the mediator server monitors system loads and communicates such information to log agents to ensure log message peaks do not overwhelm the system. In cases where the mediator server process becomes to busy or goes into its daily maintenance cycle, the server can direct connected log agents to fail-over to backup log managers. The log agents may then periodically try to reconnect to their primary log manager.","The mediator server maintenance process (described in flowchart  of ) is generally responsible for performing routine system maintenance tasks and archiving log messages for off-line storage. This process is typically scheduled to run once daily during off-peak hours. During each maintenance cycle, log messages are evaluated to determine if their on-line lifetime has expired. However, archiving may be performed according to a user configured schedule, without regard to the maintenance cycle. In such an embodiment, the maintenance process removes logs that have expired according to the time-to-live value and a separate process archives log messages. This process can run continuously (e.g., always checking for new logs to archive) and\/or it may be configured to run periodically (e.g., check for new logs every 5 minutes). Alternatively or additionally, the archive process can be run within a window of time (e.g., start archiving logs between the hours of 5 PM and 5 AM)","A time-to-live value generally determines the number of days the log message should be stored on-line in the log manager database. Messages having an expired time-to-live are deleted or archived based on the archive setting for the source of the log. Logs having an expired time-to-live and marked for archiving are written to an archive file and then deleted from the log manager database. That is, the logs that are marked for archive are written to the archive files independent of the time-to-live value. In this regard, they may be archived days before the time-to-live expires. Once the time-to-live has expired and once the log has been archived, the log removed from the on-line database. Additionally, archive files can be automatically compressed to save space before being moved to long term storage. Archive files can be imported back into a log manager to support historic analysis requirements as in the case of a forensics investigation or audit. Archiving is shown and described in greater detail in .","As mentioned, the log managers also have an MPE, such as MPE , which processes each log entry in the database against event rules and policies and forwards the log entries as events to an event manager, such as event manager . The MPE can run as an independent service in the log manager or be compiled into the mediator server in the log manager. The MPE identifies, classifies, and transfers log messages as events to the event manager by means of a rules engine that compares log messages against a list of user configurable MPE rules. As mentioned above, the MPE rules are generally written in a standard regular expression notation combined with a tagging system to identify and parse common log information such as IP addresses, TCP\/UDP port numbers, and login names. A rule builder tool exists that facilitates the development and testing of MPE rules such that customized rule development is possible. The rule builder tool generally is assigned default values for log messages that include, among other things, time-to-live for the log message, archival decisions, event manager forwarding decisions, and risk analysis. However, these default values may be overridden at a user's discretion.","The management of MPE rules is policy based. For example, rules are assigned to one or more policies. Within a policy, the rules default values for time-to-live, archiving, event forwarding, and risk can be customized. Policies are then assigned to message sources (e.g., a specific source of log messages forwarded by a log agent). Security event log of an IIS web server as well as individual syslog files on a Linux server may be considered exemplary message sources within the context of the log management system. Additionally, these MPE rules may assign shared or custom MPE rule policies at the message source level which provides low-level control over log message management. For example, a failed login message from one system could be ignored while the same message from a different system could be promoted to an event and forwarded to the event manager.","The customization of MPE rules is illustrated with the application interface  . Each MPE rule generally consists of a base rule and one or more optional sub-rules. A base rule includes a tagged regular expression code. Sub-rules, however, generally do not include regular expressions; rather, sub-rules use \u201cmap tags\u201d to extend the base-rule. However, the base rules and the sub rules for each are configured with certain process settings that control how similar log messages are processed, many of which can be overridden based on user preference. Examples of these settings are illustrated in application interface  and include default time-to-live (e.g., which controls the number of days matching log messages should remain available with the mediator before being archived and\/or permanently deleted), default archive (e.g., which controls whether matching log messages should be archived when TTL expires), ignore case (e.g., controls whether the regular expression should ignore the case of text characters when comparing log messages against certain rules), match multiline log messages (e.g., controls whether the MPE should match log messages after any \u201cnew line\u201d characters), source\/destination context (e.g., controls how the source and destination of an event are determined), source\/client is determined by (e.g., controls how a source is identified), destination\/client is determined by (e.g., controls how a destination is identified), and program\/service is determined by (e.g., controls how to associate the correct program\/service with the log entry). Other attributes include a brief description (e.g., 255 characters), additional details (e.g., roughly 2000 characters), scratch pad (e.g., a temporary area text that can be used in developing rules, but generally not saved), and rule expression (e.g., a tagged regular expression that identifies and parses data from log messages).","To illustrate rule development with respect to parsing tags, default regular expression code may be included as part of the tag. To use the default regular expression code, a tag name should be placed directly between less than (<) and greater than (>) signs. For example, to parse the source IP, one would place <sip> at the point in the log message where the source IP address is located. To parse a login, one would place <login> at the point in the message where the login information is located. The tag generally includes regular expression code to more readily facilitate rule development. An exemplary log message is now shown to illustrate the parsing that is available with the rule development.","Oct 21 15:45:47 Trinity sshd[632]: Failed password for root from 10.1.1.103 port 53495 ssh2","One rule that may be developed to parse the log message would be:",".*Failed password for <login> from <sip> port<sport>.*","This rule matches anything up to the words \u201cFailed password for\u201d. Afterwards, the rule may match a default regular expression for login, followed by matches for the word \u201cfrom\u201d, the default regular expression for a source IP address and a source port.","Occasionally, customized regular expression may provide more beneficial results than the default regular expression. Accordingly, an MPE may process a more specific rule faster. Implementing such may be done using the expression (?<tag>regex), where tag is the tag name (e.g., sip, dip, sport, login) and regex is the regular expression code used for matching the part of the log data to be stored in the report field associated with the tag. To illustrate, an exemplary log message is now shown with the parsing that is available with the rule development.","Oct 21 15:45:47 Trinity sshd[632]: Failed password for root from 0.1.1.103 port 53495 ssh2","One rule that may be developed to parse this log message would be:",".*Failed password for (?<login>\\w+) from <sip> port (?<sport>\\d+).*","This rule may match anything up to the words \u201cFailed password for\u201d. Afterwards, the rule may match \u201c\\w+\u201d (e.g., one or more word characters), parse the data as the login field, match \u201cport\u201d, and match \u201c\\d+\u201d (e.g., one or more digit characters), and parse the data as a source port.","To illustrate sub-rule development with respect to mapping tags, the following log message is provided:","Jul22 02:33:22 deny inbound packet src=66.4.4.2:56543 dst-89.2.2.1:25 prot=6","For this log message, there are five capturable report fields: source IP; source port; destination IP; destination port; and protocol. To capture these 5 fields, a rule may be configured as follows:",".*deny inbound packet src<sip>:<sport>dst=<dip>:<dport>prot=<protnum>","However, this rule may be easily modified as another rule by using mapping tags that, for example, identifies dropped packets to specific servers or ports. In this regard, the rule may use mapping tags to create sub-rules. To do so, the rule may be configured as follows:",".*deny inbound packet src<sip>:<sport>dst=<tag1>:<tag2>prot=<protnum>","The MPE may accordingly compare the data matched by tag1 and tag2 against a list of sub-rules. If a matching IP address and port number is found, the log message may be associated with the sub-rule. If a matching sub-rule is not found, the base rule may be associated with the log message.","A problem, however, may exist with the modified rule because the <dip> and <dport> tags result in the destination server and destination port report fields no longer being populated. Such may be taken into account via the combination of mapping tags with parsing tags. Generally, there are five mapping tags are available for use shown in the following table:",{"@attributes":{"id":"p-0145","num":"0144"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Mapping Tag","Matched Characters","Default Regular Expression"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["tag1","100",".*"]},{"entry":["tag2","100",".*"]},{"entry":["tag3","100",".*"]},{"entry":["tag4","255",".*"]},{"entry":["tag5","1000",".*"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The customization of MPE sub-rules is illustrated with the application interface  . When creating a sub-rule, unique values for the rule may be assigned including name, default TTL, risk ratings, etc. Log messages matching a sub-rule may be associated with the sub-rule and assume applicable sub-rule values. As mentioned, one difference between creating a sub-rule and creating a base-rule regards the use of mapping tag to enter specific matches of the base-rule based on the data matched by the mapping tags. The sub-rule is generally not directly associated to a message source type. Rather, this association is derived from the base-rule. When creating sub-rules, it is possible to specify wildcard values for a given map tag value. The preferable wildcard character is an asterisk, as is typical in many wildcard notations. The wildcard may be used when the sub-rule is intended to match any value for a specified mapping tag.","Based on such MPE rule configuration, a user can configure an MPE rule that assists in the identification and classification of log messages. For example, when a log message matches an MPE rule, the message may be updated by the log manager to reflect the rule settings for time-to-live and whether the message should be archived. Irrelevant log messages are thereby tagged for removal with other log messages (e.g., those with no reporting value) may be tagged for archival and subsequent removal. Messages that have reporting value are updated with the appropriate time-to-live and are accordingly archived or deleted when time-to-live expires","The MPE rules may also assist with event preparation. For example, when a log message matches a particular rule, the log is prepared for analysis, monitoring, and reporting by parsing useful information from the text of the log into reporting fields. Examples of such parsable information include source IP addresses, source names, destination IP addresses, destination names, source ports, destination ports, protocols, and logins. Additionally, users can parse other information into customizable user fields. After the MPE has prepared the event, the log record stored in the log manager is updated. If forwarding is enabled, the log and the parsed report fields are saved in the event manager for use in monitoring, analytics, alarming, and reporting, discussed hereinbelow.","Before discussing aspects of the event manager (e.g., event manager  of ), however, another aspect of the log manager is now discussed. In this regard,  illustrates archival and destruction of retrieved logs a log manager . The log manager , according to rule settings described here and above, may automatically archive or destroy certain logs. For example, a user of the log manager  may develop a rule that collects a particular type of log message. The log entries may be stored in original form, tagged with meta data, and assigned a \u201cnormal date\u201d (e.g., a timestamp of the log entry date synchronized to a Standard Time, such as Mountain Standard Time). The log manager  may collect those log messages for a certain period of time and write those messages to archive files In this regard, the log messages may be retrieved (i.e., restored) for viewing thereafter.","In one embodiment, a user may configure customized rules that archive log messages as the user desires. For example, a rule may be configured that writes log messages to an archive file based on various features and\/or parameters of the log message (e.g., the IP address and\/or the name of the system that generated the message), metadata associated with the log message, date\/time, etc. In this regard, a user may retrieve archived log messages according to one or more of these features and\/or parameters when desired. For example, a log message that is stored based on its associated metadata may also be treated based on that metadata.","This capability may provide certain advantages in regards to reporting. For example, in light of certain laws, regulations, and\/or guidelines, computer use documentation and reporting has now become a requirement to some companies. Examples of such laws, regulations, and guidelines include the Sarbanes-Oxley Act, the Health Insurance Portability and Accountability Act, Gramm-Leach-Bliley Act, the Basel Accord II, the Visa Cardholder Information Security Program, Federal Financial Institutions Examination Council guidelines, the Federal Information Security Management Act, etc. The ability of the log manager  to archive log messages may assist in that reporting (e.g., by recording the normal time of a log message that indicates that a certain document that was deleted thereby providing evidence that the document existed). Alternatively, other types of logs may be deemed unnecessary or unwanted after a certain period of time. In this regard, the archival process may be implemented by configuring a rule according to the time-to-live functionality described hereinabove such that logs may be destroyed (i.e., removed from memory ). Additionally, the time-to-live parameter may be used to implement the archival. For example, a log may remain active for a certain period of time. After that period of time has passed, the log message may be written to an archive file. An exemplary interface for archive restoration or destruction is illustrated the archive restoration interface  of .","In one embodiment, the log manager  consolidates logs for archival and database . For example, a log message may be collected by the log manager  over a period of time, such as a year. The data that is conceivably collected during this period may be tremendously large (e.g., on the order of terabytes). To reduce storage requirements, the log manager  may simply note the time (e.g., be a timestamp) and\/or frequency of the log message within the collection period. Alternatively, log messages may be compressed using data compression means (e.g., by creating zip files) to provide reduced storage requirements. In some instances, log messages may be compressed to 5 to 10% of their original size. In yet another embodiment, log managers may be distributed to provide distributed archival. For example, multiple log managers may be assigned the task of collecting a certain type of log message. The distributed log managers may cooperatively archive these log messages in the manner described, thereby providing increased reporting capability and\/or storage capability. Alternatively, storage of the logs may be performed on a separate server (e.g., separate from the log manager ) so as to provide a larger storage capacity. For example, server and storage architectures may be configured to provide vast amounts of storage and redundancy (e.g., RAID storage systems) that can be communicatively coupled to a log manager to offload the archival processing of the log manager.","In one embodiment, the archiving is performed in real-time. That is, logs that are marked for archive may be archived as soon as the logs are collected. Other logs may be processed according to MPE rules and immediately be deemed unwanted or unnecessary. As such, these logs may be destroyed upon collection (i.e., remove from memory ). Still, even though such logs may be removed from memory, MPE rules may be configured to record certain information about a particular log such that the log may be reconstructed at a later date. In this embodiment, the archival process may be configured with a local configuration file that provides for event manager database credentials such that events may be constructed from archived logs. Additionally, this configuration file provide for access to the archived logs through log manager accounts.","The archival process may maintain a local state file and periodically update that file. For example, the local state file may include a central state parameter that controls the manner in which log messages are automatically archived in an external archive database. In this regard, the log manager  may periodically update the central state parameter in a manner that coincides with the archival objectives of the log manager. Additionally, the archival process may maintain a model of active and inactive archive files. For example, certain log messages from a particular computer system may be consolidated and\/or compressed into a single file. This file may be updated with other log messages that are collected from the computer system. When collection of the computer system ceases, the archival process may maintain the file and categorize it as inactive but maintained it for subsequent viewing.","In one embodiment, these archived files are hashed or digitally signed to ensure the files have not been tampered with between writes. One example of a hash is the SHA1. In such an embodiment, the file may be hashed using the SHA1 such that the data of the file may be verified as accurate via a hash fingerprint comparison. In another embodiment, digital signatures may be used to sign archive files. In this regard, public and private digital signature keys may be generated for archive signing (e.g., public\/private keys of PGP, Inc.'s encryption algorithms). The private key is used for signing archive files and may remain in memory until new keys are generated. The public key and associated parameters may be stored in a table maintained by the event manager database such that other processes can verify the integrity of archive files via the digital signature verification mechanism. New signing key pairs are periodically generated. For example, signing key pairs may be generated each time a new archiving process starts or after a certain period of time has been reached (e.g., a digital signature maximum age configuration parameter as determined by a predetermined retirement date for the digital signature).","In one embodiment, active archive files are protected with a SHA1 hash code, or fingerprint. The SHA1 hash fingerprint is used by the archiving process to ensure that active archive files are not tampered with between writes. The collection of SHA1 hashes for the active archive files is persisted to disk if the archiving process is shut down to be read when the archiving process is restarted. Once an active archive is changed to an inactive archive file, the inactive archive file may be digitally signed and then compressed. The inactive archive file is generally signed with the private key of a private-public key pair. The public key of this pair along with additional data describing the archive file (e.g., filename and\/or file meta-data) is stored in the event manager database for use in later signature verification. When the inactive archive file is accessed for log message restoration purposes, the public key along with the signature data in the event manager database may be used to verify the file signature. If the signature verification succeeds, the inactive archive file is opened and the logs within are restored for analysis. If the signature verification fails, the user is notified that the file has been tampered with and the file is moved to a quarantine location.","Turning now to , the discussion of the log management system is directed to the event manager . In , a log management system  includes the log managers - configured for receiving log file data via various protocols (e.g., syslog, SNMP, SMTP, the log agent  protocols, TCP\/IP, Netflow data, etc.). In this regard, log managers -, and for that matter the log agent , may provide all or a portion of the log message collection and processing functionality as described herein above. Accordingly, the focus of the discussion is placed on the events  that are generated by the log managers subsequent to the processing of the collective log messages. For example, certain log messages processed and stored in a log manager may be identified as interesting or special by the log manager based on user configurable rules and policies. Any log entry corresponding to one of these rules may then be promoted to an event by the log manager. Generally an event consists of the original log entry plus a set of normalized data fields, such as IP addresses or a login name extracted from a log of interest. The most interesting events can be forwarded to the event manager for processing and potential alarm generation. Other less interesting events may remain at the log manager for forensic analysis & reporting purposes.","To illustrate,  shows a plurality of logs  being generated, for example, by a number of computer systems. The logs  are forwarded to the log managers - for processing. As the log managers - process the logs , certain events  may be extracted therefrom. Generally, each of the events  may be processed by the event manager  to determine whether alarms  should be generated. As illustrated, in , not all events are deemed alarm worthy. Rather, certain events may be processed by the event manager  to determine any potential informational value of the event. For example, the event manager  may cache a particular event to observe re-occurrence.","Other events may be simply made available\/visible to a user in real time and removed immediately thereafter. For example and turning now to , the event manager may include a \u201cdashboard\u201d  that provides a view into events. Additionally, the dashboard  may be configured with analysis tools that provides various metrics (e.g., the frequency of a particular event\u2014views , the number of events and their classifications\u2014the view , the relative breakdown of events by type\u2014the view , and the relative breakdown of events by direction\u2014the view ) such that an operator (e.g., IT personnel) of the event manager can make various decisions. For example, certain events or series of events may be promoted to alarm status based on user specified alarming rules and policies. Accordingly, an alarm may be generated based on these rules and policies to alert the operator to take action. In this regard, for any event to be considered for alarm generation, the event is generally forwarded to the event manager.",{"@attributes":{"id":"p-0160","num":"0159"},"figref":["FIGS. 18 and 19","FIG. 18"],"b":["290","291","292","292","290","293"]},"More detailed information regarding the above-mentioned events may be obtained with the event information view  (seen in ). This view may be accessed by selecting a particular event, for example, from the view  of the dashboard interface . For example, the interfaces described herein (e.g., dashboard interface , dashboard interface , etc.) may be graphical user interfaces operable within the context of a software application. In this regard, a user wishing to access more detailed information pertaining to a particular event they simply mouseclick on the event to bring up event information view . Examples of the more detailed information that the event information view  may provide include an event ID number, the identification of monitoring system (e.g., the log manager\/log agent), and MPE rule used to flag log activity as an event.","Similar in design to the event dashboard  of , the alarm dashboard  provides a view into the alarms generated by various events. For example, rules may be configured with the event manager  to process events transferred from various log managers connected thereto (e.g., log managers -). In this regard, the event manager  may determine that certain events require immediate attention and automatically generate an alarm message to notify relevant personnel. Alarm rules can be created based on essentially any combination of event data, such as an event type, a targeted host, and\/or a particular application. For example, an alarm rule may be configured to generate an alarm whenever an event indicates that a terminated user account is being used.","The alarm dashboard  is illustrated, in this embodiment, with various views to provide alarm information to a user of the dashboard. For example, the view  provides a raw count of alarms generated within a selected time (e.g., 24 hours). The view , however, provides some general information pertaining to those alarms. For example, the view  may indicate that certain alarms are associated with suspicious sources activity, hostile remote activity (e.g., denial of service from external sites), and unauthorized accesses (e.g., file server monitoring) as designated by alarm rules. The view  provides even more information pertaining to alarms. For example, the view  may show the timestamp of a generated alarm, how the alarm relates to various events, and the associated activity as designated by the alarm rule.","Alarm rules described herein are generally of two types, default alarms and user configurable alarms. For example, certain alarms may be provided with the event manager to automatically alert a user of a certain event without user feedback. Such alarms would generally be those that a user would find exceptionally important, such as a denial of service attack, attempted unauthorized access to a file server, etc. Other rules, however, may be customized according to a user's desires. Additionally, alarm rules that are customized to flag certain events may also be managed in a customized fashion. For example,  illustrates a rule manager interface  that shows a user the present customized rules that are being implemented by the user. In this regard, the interface  may allow a user to edit a particular rule to generate alarms and other matters.","Although shown and described with respect to an alarm being displayed with the alarm dashboard , the invention is not intended to be limited to such alarm notification. Rather, event manager  may automatically communicate alarms to one or more responsible authorities (e.g., IT personnel, security officers, company officers etc.). In this regard, certain generated alarms may be associated with individuals or groups. For example, a denial of service alarm may be associated with IT personnel to alert them so that they may take appropriate action. In contrast, an attempted unauthorized access into a network account may alert a security officer of the attempt without the need for interaction by IT personnel. While the means for communication of the alarms may vary, one exemplary implementation of such communication may be e-mail. For example, many portable devices are capable of wirelessly receiving e-mail (e.g., cell phones, Blackberries by RIM, etc.). Accordingly, the event manager may automatically send e-mail addresses to such wireless accounts to rapidly alert appropriate personnel.","Generally, alarms provide real-time alerting functionality with less analysis capability. Such is the case because alarms in general are provided for immediate attention and\/or rapid response. However, longer term trends are often desired. For example, a business may be required to report certain events occurring in their network (e.g., unauthorized access to banking networks). In this regard, the utility of the present invention also provides for certain analysis and reporting features that may be used to illustrate such trends.","In one embodiment, the event manager may be configured with a reporting engine that detects statistical features of events so as to generate alarms. For example, the event manager  of  may include a software component (e.g., reporting engine ) that detects the events  transferred from log managers  through . Certain events may include unique information that the reporting engine  analyzes to determine if the information is reoccurring. In this regard, the reporting engine  may determine that certain events over a period of time are similar and indicative of a trend. The reporting engine  may generate an alarm that alerts a user to the trend or departure from a known trend so that appropriate measures may be taken. To further illustrate, an event may be transferred that includes information pertaining to a computer system user that is attempting access to a restricted file or computer. Each of the generated events may not be necessarily worthy of generating an alarm. However, over time, the events may accumulate to form a sort of pattern that may be worthy of an alarm (e.g., the same person attempting access to many different restricted files over a period of time or a group of people continually attempting access to a particular restricted file). Accordingly, the reporting engine  may generate an alarm that represents such information so that the appropriate personnel can address the situation.","The reporting engine  may include an interface (e.g., a GUI) that enables a user to customize alarm generation. For example, various events statistics (e.g., frequency of events, duration of events, type of events, dates of events, etc.) may be selected and\/or combined by a user through the interface. These alarm configurations may be stored as rules with the reporting engine. Accordingly, the reporting engine  may detect events over a period of time that correspond to the selected events statistics and generate alarms therefrom.","In another embodiment and as seen in , a log management system  is configured with a log manager  that receives log messages from a database . In this regard, the log manager  may include a database log adapter  that processes log messages of the database  transferred through a database protocol. The database log adapter  may be configured to process various types of database protocols to provide a sort of generic capability such that the log manager  may communicate with a variety of different database types. For example, the database log adapter  may be configured to communicate using ODBC (Open Database Connectivity), JDBC (Java Database Connectivity), ADO (Active-X Data Objects) etc. The database log adapter  may, therefore, communicate with a variety of databases to retrieve and collect logs of those databases. Examples of such database logs include Oracle audit logs, DB2 system logs, SAP application logs, SAP general ledger logs. Generally, the user will specify how to connect to the database  to begin collection of logs contained therein. Examples of parameters that may be used to establish an authenticated\/secure session with the database  include the database type (e.g., Oracle, SQL Server, DB2, MySQL, Other, etc.), database server ip address, database name, login, password, encryption key (e.g., the digital signature as described hereinabove). Additionally, the user may specify log collection parameters used to govern how and when logs are collected. Examples of such include the maximum number of logs to collect and transmit in a single batch, maximum logs to collect per minute, start and end log collection times (only collect between 5:00 PM EST and 6:00 AM EST), and whether logs should be deleted from the source database after collection.","The operation of the database log adapter  generally includes communicatively connecting to the database  and determining previously recorded or user specified state information to ascertain whether any first log message should be queried. Then, the database log adapter  may use a log entry query statement combined with previously acquired state information to collect a next batch of log messages that should be collected. If no state information exists, the database log adapter  may return the first available log message and convert the log message into its text log representation. The database log adapter  may then forward the text log along with other information to message processing engine of the log manager  (e.g., MPE  of ). Additionally, the database log adapter  may update state information and check configuration parameters to determine whether the database log adapter should continue collecting log messages.","While the database log adapter  may be configured to communicate directly with the database , a log agent (e.g., log agent  of ) may be configured with the database  or even a remote server that communicates with the database  to transfer log messages (i.e., via database protocols) to the log manager . As with other embodiments described hereinabove, the log messages transferred via the database protocol may be encrypted by the log agent.","The database log adapter  may allow a user to identify log messages that are to be collected. Additionally, the database log adapter  may allow the user to record the date\/time in which the log messages are detected. In one embodiment, the date\/time is implemented relative to other log entries. That is, each log message may have a date\/time stamp with subsequent log messages having incremental date\/time stamps. Additionally, the database log adapter  may be able to track previous log messages and determine which log message is next in series. Such may be useful in \u201cpersisting\u201d state information regarding the collection of log messages.","Generally, any user can specify how each log message row is to be formatted. The formatting may determine how each field in a log message may be used to create a single text log entry. When formatting the log message, the user will generally specify which fields of the log message should be included when preparing the text log, the order in which each field should appear in the text log, and, for each used field, any text based characters that should precede or follow the field when preparing the text log.",{"@attributes":{"id":"p-0174","num":"0173"},"figref":"FIG. 23","b":["400","400"]},"Moreover, the user interface  (and other dashboards and user interfaces disclosed herein) may be presented on a display associated with the computing system, where the computing system includes memory (e.g., RAM) that stores data and instructions (e.g., logic) and at least one processor (e.g., CPU) that executes instructions and processes data from the memory. For instance, logic may be implemented to process received logs against a rule base, parse the processed logs and associate metadata with the parsed portions, generate events, etc., all as discussed previously. In any event, the at least one processor may retrieve instructions and other data from one or more storage devices (e.g., hard drive, flash drive) before loading such instructions and other data into the computer memory. The processor, memory and storage device may be connected by a bus in a conventional manner. While the present disclosure is discussed as being implemented in the context of one or more computing systems or devices including interconnected memory modules, processors, and the like, it is envisioned that the various utilities disclosed herein may also be implemented or otherwise carried out by any future computing technologies and\/or processes.","The user interface  may broadly include a control panel  including any appropriate number of user manipulable iconic features (e.g., buttons, tabs, drop down menus) for choosing among various types of tools, a presentation area  for presenting a graphical display (e.g., line and bar graphs, itemized lists, pop-up windows) of logs, events, alarms, users, analyses, etc. according to the type of tool selected in the control panel , and a navigation area  for adjusting the graphical display within the type of tool selected and for searching for logs\/events according to user selected criteria. As will be appreciated below, much of the information in the presentation area  may be appropriately manipulated (e.g., via double-clicking with a mouse on the icons, tables, graphs) to \u201cdrill-down\u201d into the information to obtain more detailed information.","With continued reference to , a \u201cpersonal dashboard\u201d button has been selected in the control panel  which broadly provides summary type information in relation to logs, events and alarms. For instance, the personal dashboard may provide users with a real-time visibility into compliance\/audit, security and operations related events any alerts as well as access to raw log data from millions of logs to a single screen. From the dashboard, users can perform the numerous activities such as but not limited to, launching investigations, customizing alerts and drilling down into normalized and raw log data, all while maintaining user added tracking for compliance and reporting purposes. Additionally, the personal dashboard allows users of differing functional roles to receive actionable alerts and real-time events that are meaningful and applicable to their specific job function or responsibility. Alerts can be delivered via, for instance, the dashboard or via numerous other mechanisms including SMTP and\/or SNMP.","For instance, events (i.e., logs that have matched one or more rules or processing criteria and have thus been forwarded from a log manager to the event manager) may be classified according to any appropriate classification scheme or structure. More specifically, as part of the processing of incoming log messages by the log managers (e.g., processing the logs against a rule base), log managers may tag logs using a granular three-tier classification model that may enable users to perform intelligent searches on the processed logs and events. In this regard, the impact of events may be assessed in multiple dimensions to allow the extraction of meaning from the events for what may otherwise appear to be simply isolated blocks.","As seen, the presentation area  may include a number of views , each view  providing a numerical breakdown (e.g., via a bar graph or the like) of events according to operations events (e.g., critical event, system error, warning), audit events (e.g., administrative account creation, failed authentication), or security events (e.g., compromise, attack, denial of service). Within each of the views , the particular classification may be further broken down into sub-classifications, sub-sub-classifications, etc. If a user desires to obtain more detailed information about the events making up a particular sub-classification, the sub-classification may be appropriately manipulated (e.g., double clicked on).","Turning to , the \u201cinformation\u201d sub-classification in the operations events view  has been manipulated to provide a view  including an itemized list of the operations\/information events. Each line may represent a single log\/event or an aggregated log\/event that counts a number of occurrences of what is essentially the same or similar log\/event. More specifically, each of the occurrences of the log\/event may have identical or similar properties. As shown, first and last (e.g., normal) date may be presented as well as total count. It should be appreciated that the logs shown in the various screenshots presented herein may be generated by components and\/or processes of internal systems (e.g., systems associated with a particular log manager or the like), external\/outside systems (e.g., systems that are separate from a particular log manager or the like), and the like.","As another example, a risk based priority (\u201cRBP\u201d) for the events\/logs in line  is 16. For instance, logic associated with the log manager, event manager, or other module in the system may automatically prioritize each event based its impact to business or other organizations operations. In one arrangement, the RBP may be based out of a maximum of 100 possible points and may be based on criteria such as the type of event, the likelihood that the event is a false alarm, the threat rating of the host causing the event (e.g., remote attacker), and the risk rating of the server on which the event occurred. As one example, a router link failure might not be immediately critical for an Internet service provider with redundant routers. However, business may be impacted indefinitely for a branch office with only a single router. As another example, a server reboot may be uninteresting if seen on a user workstation. However, a server reboot may be extremely interesting when seen from a server that has 99.999% uptime requirements.","Turning back to , another view  in the presentation area  may provide a real-time itemized list of alarms in chronological order that have been generated by the event manager. Similar to the view  in , each of the lines in the view  represents an alarm including the date and time the alarm was generated, events that makes up the particular alarm, the first event that makes up the particular alarm, etc. By appropriately manipulating any of the lines in the view  (e.g., single clicking), summary properties of the selected alarm may be displayed in another view . As seen in , the view  may provide information regarding the alarm such as any appropriate alarm ID, the alarm date, the name of the alarm, etc.","Additionally, any of the alarms in the view  may be appropriately manipulated (e.g., double-clicking) to \u201cdrill down\u201d into the particular alarm to view logs and events that make up that particular alarm. For instance,  includes a view  with an itemized list of logs processed as common events (e.g., each of the logs matched the same log processing rule). Thus, the alarm generated and shown in the view  in  was generated and\/or otherwise designated from one or more of the events represented in the view  of . For instance, the alarm rule may require that the particular alarm be generated when the common event shown in view  in  has occurred a particular number of times (e.g., 5 times). Once the particular threshold has been reached, the event manager may generate the alarm which may then be displayed in the view  in the presentation area  of the personal dashboard (and stored in any appropriate database). Note that additional common events or other events making up the particular alarm may be added to the \u201cevents\u201d column of the particular alarm in the view  in . In this regard, a running total of events making up the particular alarm may be stored and displayed for use by personnel.","With continued reference to , it can be seen that the view  results from manipulating a \u201clog\/event analyzer\u201d tab in the top of the presentation area . Manipulating a \u201clog viewer\u201d tab in the top of the presentation area  may provide detailed information in relation to each of the logs having a common event shown in the view  in . Turning to , all of the logs processed as the same common event may be illustrated in a view . To obtain more detailed information regarding any of the logs processed as the same common event in the view , a user may simply manipulate a desired log (e.g., double-clicking) to drill down into that log. As seen in , a pop-up window  has been displayed in response to manipulating any of the lines in the view  of . The pop-up window  includes event information for the selected processed log. More specifically, in response to the log message matching a particular log processing rule and thereby rising to the level of an event, the original log message may be displayed (e.g., near a top portion of pop-up window ) in addition to metadata fields of the log message that are automatically parsed in response to the log message matching a particular log processing rule (e.g., see the portion of pop-up window  below the raw log message). For instance, information such as a normal date that the log message was generated, the log source host, the log source, a direction (e.g., local, external), etc. may all be displayed. Additionally, the MPE rule utilized to generate the events may be observed in addition to other information.","As discussed previously, default and user configurable alarms may be created and used by the event manager (see ) to process events received from one or more log managers  through  (also see ) to determine whether one or more alarms should be generated. To facilitate alarm rule creation, almost any log or event illustrated in the presentation area  may be appropriately manipulated to utilize one or more properties of the log or event as part of the alarm rule creation. That is, one or more logs or events that have been previously processed by one or more log processing rules may be identified or selected and then manipulated.","For instance, and with reference now to , a log (or the line in the presentation area  representing the log) has been right-clicked on to bring up drop-down menu  whereby a \u201cCreate Alarm Rule\u201d user manipulable feature may be selected. Upon selecting the Create Alarm Rule user manipulable feature, a pop-up window  (see ) may be displayed informing the user that the rule can be created with most or all of the parsed metadata from the log message or with only a limited set of information from parsed metadata of the log message. In either case, the alarm rule can be edited according to the user's preferences. Upon selecting yes or no in the pop-up window , another pop-up window  may be displayed to the user in  querying the user as to whether a global rule (e.g., a global alarm rule) is to be created. As used in this sense, designation of a global alarm rule means that all global administrators may have access to the global rule so as to edit or delete the global rule. Otherwise, this newly created alarm rule may only be manageable by the user creating the alarm rule.","With reference to , one or more pop-up windows  may be provided in the presentation area  that allow a user to create an alarm rule based on one or more properties of the previously selected event or log. Stated otherwise, a user may begin the creation of alarm rule by using the properties (e.g., metadata fields) of the selected log event as a skeleton or framework that may be further edited or customized to create the desired alarm rule. As seen, the pop-up window  may include Boolean operators (e.g., and, not, or), fields (i.e., filters, e.g., common event, known host, direction), a filter mode, and a filtered value (i.e., the parsed metadata fields from the selected log or event to create this new alarm rule from). As also seen in the pop-up window , any of these values may be added or deleted, and\/or additional fields may be added. While not shown, this newly created alarm rule may be named and\/or associated with any appropriate policy. Thereafter, the user may choose to assign or associate the policy with an event manager or otherwise \u201cactivate\u201d the alarm rule at which time events received at the event manager may be processed by this newly created alarm rule.","As another example, a user may use the properties of one or more logs or events as skeleton or framework with which to begin the creation of a log processing rule that may be used by one or more of the log managers to identify events from newly received logs. After such creation of a new \u201cevent rule,\u201d newly received logs at the one or more log managers may be processed using this newly created event rule. It is also conceivable that rules could be created from alarm rules.","With reference now to , the user interface  illustrated in  is shown, but with a pop-up window  displayed that allows for customization of the personal dashboard. As previously discussed and as can be seen, events designated by classification (e.g., operations, security, audit) have been selected (e.g., clicking a checkbox) as has been the alarm list along with other tools and views (e.g., events by time by type, events by time by direction, logs by day and hour). These tools and views can be displayed in the presentation area  and toggled between via manipulation of tabs or buttons in the navigation area . For instance, the \u201cEvents by Time by Type\u201d tab in the navigation area  may display or show a colored three-dimensional chart with different columns representing total number of lines or events received according to time and date of the week. Other types of metrics are also envisioned.","With reference now to , a navigation area  may include a quick search toolbar  that enables users to quickly launch searches from any screen in the user interface . The search may be based on a variety of attributes such as e-mail address, port, user, host, event type, timeframe, etc. As seen, a search has been performed for all related activity (e.g., in the form of audit type events) that a terminated administrator (Trent Heisler) performed during the previous 60 days. In response to running this search (e.g., by manipulating or clicking a \u201cgo\u201d button or icon), a view  in the presentation area  is displayed. As can be seen, an itemized list of all audit type events in which the term \u201cTrent Heisler\u201d was contained in parsed metadata of logs in the last 60 days is shown. Numerous other types of searches using the quick search toolbar  are also contemplated.","The user interface  may also allow a user to \u201ccorrelate\u201d previously searched events and\/or logs according to one or more of the metadata fields of logs and\/or events. That is, the previously searched and returned logs\/events may be arranged and\/or filtered according to one or more of the metadata fields. For instance, and turning now to , each of the logs displayed in the view  from  may be manipulated (e.g., right-clicked on) to bring up a drop down menu . From the drop-down menu , a user may select a \u201ccorrelate\u201d feature, and then select any appropriate metadata field by which to further correlate and or filter the logs and\/or line items. As seen, the \u201ccommon event\u201d metadata field has been chosen as the field by which to filter or otherwise rearrange the logs (although the logs may be filtered or rearranged according to one or more other metadata fields as well).","Turning to the view  in the presentation area  of , it can be seen now that the log\/event line items are rearranged according to common event. More specifically, all logs having the same event (e.g., \u201cprocess started\u201d) may be bunched together in the view . This feature allows a user to easily and quickly launch new searches based on one or more metadata fields in a log message or event. In addition to correlating logs generated by the same device, host, application, process, etc., this feature also allows for the correlation of logs generated by a plurality of different devices, hosts, applications and\/or processes (i.e., it allows for \u201ccross-device\u201d correlation). For instance, all logs generated by a number of disparate devices or processes may be correlated based on one or more common metadata fields or other attributes (e.g., finding all logs from any device type where Login=chris.petersen). It should be noted that this correlation feature is not limited to use with the quick search toolbar. Rather, this feature may be utilized with almost any returned list of logs and\/or events (e.g., after an initial search).","While the features provided by manipulation of the personal dashboard button in the control panel  of the user interface  have been described, other buttons\/tabs in the control panel  also provide tools and access to useful information associated with logs. For instance, and turning to , a \u201cdeployment manager\u201d button in the control panel  may be manipulated which may provide users (e.g., those with administrative type credentials) the ability to configure and manage various system components and functionalities such as alarming, reporting, etc. Manipulation of the deployment manager button may cause the display of a number of tabs  that allow access to other features of the console (e.g. event manager, log managers, alarm rules). Additionally, manipulation of the deployment manager button may also change and\/or add other features to the control panel .","One of the tools available within the deployment manager (or other portion of the user interface ) may be a \u201cdata loss defender\u201d feature that broadly allows an administrator or other user to monitor the movement of data to and\/or from a host such as server, computer, storage device (e.g., USB), and the like. Stated otherwise, this feature allows an administrator to monitor for data transfers to a particular host and\/or from a particular host. The administrator may configure this feature so that upon observing an attempt at such a data transfer, log messages or alerts may be automatically generated and forwarded to appropriate personnel (e.g., such as the administrator), the data transfer may be automatically inhibited\/limited, and\/or one or more other actions may occur. As will be described in more detail below, the administrator or other user may set or configure one or more policies using a data loss defender policy manager, and then assign the one or more policies to one or more system Monitor agents (e.g., a Windows System Monitor agent) that are responsible for collecting logs from one or more log sources and providing endpoint\/host monitoring capabilities.","For instance, an administrator may determine that one or more circumstances on a particular data system or network may warrant the taking of a particular action with respect to a storage or endpoint device on a data system or network. One set of circumstances may simply be any movement of data to and\/or from a particular host or storage device. Another set of circumstances may be that a particular user or former user of the network is attempting to transfer or copy data from the network onto any endpoint or storage device. For instance, it may be desirable to limit or inhibit terminated or disgruntled workers or employees from being able to steal and\/or copy any type of data from the company's network that such user may use for illegitimate purposes. Another set of circumstances may be an attempted transfer of a particular type of data on the network to and\/or from a host. For instance, with or without regard to the type of employee or worker attempting to access the particular type of data, an administrator may desire to limit the transfer of trade secret information, recorded conversations of company officers, etc.","In any event, the administrator may use the data loss defender manager to take a number of actions with respect to one or more storage devices on the data system in response to determining that one of the above (or other) these circumstances exist. One action may be to simply log or alert on any movement of data within the data system in relation to the particular circumstances (e.g., to and\/or from one or more particular hosts such as servers, routers, workstations, laptops, storage devices; to and\/or from any host when in relation to a former employee, etc.). For instance, this may entail classifying as events any logs that are indicative of a data transfer and then presenting the events for viewing on the user interface . Administrators can use any of the user interfaces or dashboards disclosed herein to monitor these events. As will be appreciated, alarm rules can also be created to, for instance, alert an administrator when a certain threshold number of events has occurred.","Another action may be to prevent or at least limit the transfer of data to and\/or from a host (e.g., an end point or storage device such as a USB drive). Again, logs generated by system components (e.g., servers, routers) indicating the occurrence of one of the above discussed circumstances (e.g., an attempted data transfer to\/from a host) may be flagged as events, and doing so may cause the log manager or other processing platform to send a request to the host to prevent or limit the data from being written to and\/or from the host. In one variation, the request to limit data from being written to the storage device may include a request to eject the storage device on the data system. It should be appreciated that when an administrator desires to limit or prevent data from being transferred or written to the storage device, the request sent from the log manager and\/or processing platform would be sent before data transfer has occurred or has at least completed.","Turning to , a user may, in one arrangement, first set one or more data loss policies by way of accessing a data loss defender policy manager button  in the control panel  which may be accessed by, for instance, manipulating a \u201ctools\u201d drop-down menu  and then an \u201cadministration\u201d drop-down menu  in the control panel  (see ). As seen in , a pop-up window  may be presented in the presentation area  in which one or more data loss policies may be set, configured, and\/or edited. For instance, a \u201cmonitor and eject all\u201d policy may specify that all storage devices (e.g., CD\/DVD, USB\/flash) that send log messages to a particular agent may be both monitored and ejected as discussed above in response to one of the above-discussed circumstances occurring (e.g., a data transfer to\/from one of such storage devices). Other self-explanatory policies can be seen in a pop-up window  and other data loss policies are also envisioned (e.g., disabling the storage device). Each of the data loss policies may be associated with a particular policy ID to distinguish each of the data loss policies from other policies in the console.","Once one or more data loss policies have been created and\/or edited, one or more of these data loss policies may be assigned to at least one system monitor agent associated with one or more log sources or hosts. Turning to , a \u201cSystem Monitor Agents\u201d tab  may be manipulated to cause the display of a view  of all of the available system monitor agents responsible for collecting and receiving logs from log sources in the data system. For instance, a data line  in the view  may include information such as the agent's name, the last heartbeat (i.e., the last or most recent signal or transmission received from the particular agent at the log manager or other processing platform), etc. By manipulating (e.g., double-clicking) the data line , a properties pop-up window  for the agent in data line  may be displayed in the presentation area  to allow one or more properties of the agent to be set and that displays the various log message sources or hosts from which this agent collects log messages. Among other properties that can be set, a data loss defender tab  may be manipulated to assign one or more of the previously discussed data loss policies to this particular agent. As can be seen, the data loss defender may be enabled (e.g., by checking a box), and then a particular data loss defender policy can be selected that applies to this particular agent.","It should be appreciated that data loss defender policies may be implemented on system monitor agents by way of writing or establishing any appropriate log processing rules and\/or data management settings operable to: a) identify and\/or isolate log messages collected from log sources at the agents indicating the existence of any of the above discussed circumstances (e.g., data transfer to\/from a particular host or hosts, download of data to a removable storage device by particular users, transfer of sensitive data), and b) cause the log manager, system monitor agent, or other appropriate processing platform to take any of the above actions (e.g., generate logs\/events, disable storage devices, etc.) in response to any of such log processing rules matching log messages collected at the system monitor agent.","Another of the tools available within the deployment manager may be a \u201cuser activity monitor\u201d feature that broadly allows a user or other administrator to search, report, and\/or alarm on user activity in a number of different manners. Such user activity may be in relation to a single individual\/user, user type or directory service (e.g., active directory) group (e.g., administrator, engineering, manager, quality assurance). In one arrangement, information (e.g., user and\/or group information) from one or more directory services (e.g., such as but not limited to active directory) may be integrated and\/or synchronized with a log manager, event manager and\/or other processing platform disclosed herein according to any appropriate schedule and in any appropriate manner. The synchronized information may be stored in any appropriate database (e.g., EMDB) or table sortable by field (e.g., userID\/login, full name) and may be used by administrators and the log manager, event manager and\/or processing platform for use in searching, reporting, alarming and the like. Representative information may include network logins, logons, logon session duration, total number of logins, initial password creation date, most recent password changes, most recent incorrect password entry date, and the like. Among other advantages, this feature may provide an independent audit trail of, for instance, user logons and logoffs, that supplements local auditing systems in the event that such local auditing systems are not configured or are otherwise compromised. Another advantage is that a consistent logon\/logoff record across multiple different operating systems may be achieved.","In use, a user may manipulate an \u201cactive directory user browser\u201d button  which may be accessed by, for instance, manipulating the \u201ctools\u201d drop-down menu  in the control panel  (see ), and then a \u201cknowledge\u201d drop-down menu  (the use of the term \u201cactive directory\u201d user browser does not necessarily connote that user information is retrieved from an active directory; rather, the user information can be pulled from any appropriate directory service(s)). In response, a view  may be displayed in the presentation area  in the form of a table or grid of users (who may be identified by \u201cLogin,\u201d \u201cFull Name,\u201d etc.) of the data system along with various types of information (e.g., activities) associated with such users. Another view  may also be displayed in the presentation area  in the form of a grid representing user groups that a user selected in the view  (e.g., see line item ) is a member of Among other information contained in the view , a user or other administrator may observe the domain (e.g., \u201cschq.secious.com\u201d) that each user is associated with in addition to activities such as the total login count (e.g., into a particular domain or network) associated with a user since the date of original password creation, the date of the last password change, etc. The various types of information in the views ,  may represent the synched information from the one or more directory services) as discussed previously.","To further investigate the activity of users in the view , the users may be selected (e.g., checked), any portion of the view  may be appropriately manipulated (e.g., right-clicked on), and then one or more \u201cinvestigate AD users\u201d buttons may be selected. See . As just one example for purposes of context, users who are members of some groups (e.g., administrators, quality assurance) may be expected to amass a particularly large number of logins over a certain period of time while other users who are members of other groups may not. In this regard, observing that one user who is a member of a group that is not expected to have many logins into the domain has actually amassed an exceedingly large number of logins may be reason for the administrator or other user to further investigate this particular user on the domain or network.","In any event, and upon selecting an \u201cInvestigate AD Users in Login or Account\u201d button , a view  may be displayed in the presentation area  that provides access to various metrics representative of activity of the selected users. More specifically, a user may be able to perform (i.e., via a processing platform) \u201ccross-device\u201d correlation based on one or more particular users. Stated otherwise, a user may be able to investigate or otherwise search for all logs generated by a number of disparate devices or processes based on a common user or login. In this regard, the information received from the directory service (e.g., user names, group names) can be used by administrators as parameters by which to filter log messages across numerous and what may be disparate devices, processes, and the like.","In one arrangement, a \u201cLogs by Day of Week and Hour\u201d tab  may be selected (see bottom of view ) to cause the display of a color-coded three-dimensional graph indicative of a quantity of logs received at the one or more log managers and processed as events relevant to logins or account access by the particular user(s) by day of the week and by hour. As can be seen in , a large portion of this particular user's login\/account activity occurred on Fridays between 9 am and 12 pm. This information may be useful in allowing an administrator or other user to investigate other events or data associated with this user during this particular time period and day. As another example, a \u201cLogs\/Events by Time by Direction\u201d tab  may be selected (see ) to cause the display of a view  in the presentation area  which shows a quantity of login\/account type logs according to date, time and direction (e.g., local, internal, external, outbound, unknown). Other types of metrics are also envisioned (e.g., see tabs at the bottom of presentation area ).","Turning to , an \u201cactive directory group browser\u201d button  (see ) may be selected which may cause the display of a view  (see ) in the form of a grid of user groups, group descriptions, group IDs, etc (again, the term \u201cactive directory\u201d group browser does not necessarily connote that the group information is pulled from an active directory per se). Selection of any of the line items in view  may cause the display of the group members and effective group users associated with the selected group in view . Similar to the active directory user browser discussed previously, the active directory groups may be further investigated in relation to logins and other metrics and thus will not be further described. More specifically, searches on groups will resolve down to the specific users within each group and then activity on these group users will be queried and\/or displayed. In some embodiments, groups can be referenced within filters that are used by various processing objects (e.g., reports, searches, alarm rules, global log processing rules, etc.). Similarly, when these processing objects are used, the groups may be resolved to the group users and the resulting user list is the filter applied against log messages that are processed. In other embodiments, information on specific user accounts within a log message can be pulled and displayed from the directory service information that was synchronized.","As mentioned previously, the user information (e.g., user and\/or group membership information) viewable in the active directory user and group browsers may be retrieved from the one or more directory services and stored in any appropriate database. To acquire such data from the directory service(s), a synchronization process may be automatically or manually configured to run according to any appropriate schedule. For instance, and with respect now to , an \u201cactive directory synchronization manager\u201d button  may be manipulated (e.g., clicked) to set up and perform one or more synchronizations between the directory service(s) and the one or more databases storing the user and\/or group membership information. As can be seen, an \u201cevent manager\u201d tab of the number of tabs  may be manipulated under the deployment manager button in the control panel  to allow access to the active directory synchronization manager button . However, it should be appreciated that this button or feature may be accessed from other views or screens within the console.","Turning now to  and upon manipulation of the active directory synchronization manager button , an active directory synchronization manager pop-up window  is displayed in the presentation area  and includes a list of domains  that are configured on the data system. Each of the users and groups displayed in the previously discussed active directory user and group browsers may be members of at least one of the domains listed in the pop-up window . Of course, additional domains may be created or administered on the data system and may be displayed in the pop-up window . Also, fewer domains than shown in the pop-up window  may be present. In any event, one or more of the domains  may be properly selected (e.g., by clicking a checkbox) and a \u201cperform a synchronization\u201d button or tab  may be manipulated (e.g., which may be displayed by right clicking or otherwise manipulating a portion of the pop-up window ) to synchronize data (e.g., user activity data) between the selected domain(s) of the active directory and the database(s) from which the active directory user and group browsers display user activity information. Although not shown, one or more synchronization processes can be manually performed as needed or can be set to automatically run according to any desired schedule.","Another of the tools available within the deployment manager may be a \u201clog distribution services\u201d engine or feature that broadly allows log data to be shared with one or more receiving entities (e.g., internal users, third-party applications, servers, service providers, etc.) based on contextual metadata contained within or otherwise associated with the logs (e.g., where the metadata is generated as part of processing of the logs). Advantageously, administrators and other users can make such distribution decisions at a more fine-grained level (e.g., based on the content of one or more specific metadata fields). As will be discussed below, logs, events, and\/or alarms can be distributed based on one or more policies to one or more receivers or receiving entities. All logs may be properly collected and transferred to one or more log managers, and the log managers can thereafter \u201crelay\u201d information related to such logs (e.g., original text of such logs, one or more events designated from such logs, alarms related to such logs) to other \u201clisteners\u201d for central log management. For instance, collected application logs can be directed to a syslog server (e.g., external syslog receiver) or file server for use by operations and application teams in debugging and troubleshooting. As another example, those logs that have risen to the level of an \u201cevent\u201d can be sent to managed security service providers or existing event management solutions. Another arrangement may entail writing distributed logs to one or more flat files, distributing via standard or proprietary network protocols, and\/or writing directly to databases.","In use, and turning now to , a user may first set one or more receivers by way of accessing a receiver manager button  in the control panel . The receiver manager button  may be accessed by way of accessing, for instance, the \u201ctools\u201d drop-down menu , a \u201cdistribution\u201d drop-down menu , and then a \u201clog distribution services\u201d drop-down menu . The below disclosure will begin with a discussion of a \u201creceiver manager,\u201d followed by a discussion of a \u201cpolicy manager.\u201d","Upon manipulation of the receiver manager button  shown in , a receiver manager pop-up window  may be displayed in the presentation area  as shown in . The receiver manager pop-up window  may provide an itemized list  of all receivers to which one or more distribution policies may be assigned, and each line in the itemized list  may include corresponding information for the respective receiver. For instance and as shown, the status of a generic receiver is \u201cenabled,\u201d the type of the generic receiver is a \u201csyslog\u201d server, and the generic receiver has been assigned a generic policy (note that the policies will be described below). While only a single receiver has been shown, it should be appreciated that additional receivers or receiving entities can also be established (e.g., by clicking on a file button in the top of the pop-up window  and choosing to create a new receiver).","In any event, a \u201creceiver properties\u201d pop-up window  may be displayed in the presentation area  by appropriately manipulating one of the receivers in the itemized list  (e.g., double-clicking on a desired receiver in the itemized list , right clicking on the receiver in the itemized list ). As can be seen, additional information in relation to the receiver such as the IP address of the receiver, the network protocol to be used, etc. can be established or otherwise set up via the receiver properties pop-up window . In one arrangement, an operator can choose, for instance, to utilize normalized dates instead of the message date (i.e., the time stamp generated by the log source), or can even choose to convert the normalized dates to the local time zone of the receiving entity. In any case, an \u201cokay\u201d or \u201capply\u201d button (not labeled) can be manipulated to set or confirm such settings for this receiving entity.","Once the one or more receiving entities have been established, one or more distribution policies can be established which can then be applied or associated with the previously established receiving entities. With reference to , a user may access a policy manager button  in the control panel  by way of accessing, for instance, the \u201ctools\u201d drop-down menu , the \u201cdistribution\u201d drop-down menu , and then the \u201clog distribution services\u201d drop-down menu . Manipulation of the policy manager button  may cause the display of a policy manager pop-up window  as shown in . Similar to the receiver manager pop-up window  (shown in ), the policy manager pop-up window  may include an itemized list  of all the various policies which may be applied to receiving entities. Again, while only a single generic policy has been shown in the itemized list , additional policies can be created and\/or added. Also, various information may be shown that is associated with each policy such as a status of the (e.g., enabled, disabled), a description of the policy, associated receivers, etc. In any case, to establish and\/or edit one or more properties of a particular policy, the line in the itemized list  corresponding to the particular policy may be appropriately manipulated (e.g. double clicked on, right-clicked on) to cause the display of a \u201cpolicy wizard\u201d pop-up window  in the presentation area  as shown in .","Initially, the log sources from which to gather logs and\/or events may be selected for this particular policy. The pop-up window  may include an itemized list  of various classifications of log sources (e.g., \u201clog source lists\u201d) in addition to a number of log sources within each classification. As just one example, item  includes \u201cCompliance: Intrusion Detection\u201d-type log sources that contains log sources from production systems that perform intrusion detection and prevention functions. As shown, all available log sources may be selected, one or more log source lists may be selected, and\/or one or more log sources may be selected. Once the desired log source lists or log sources have been selected, a \u201cnext\u201d button  may be manipulated to bring the user to the next step of the policy wizard.","Turning to , special handling may be specified for any log messages from the log sources that have been classified by the one or more log managers as \u201cevents\u201d (i.e., the logs have matched one or more log processing rules to rise to the level of an event). For instance, one section  of the pop-up window  may allow a user to include events that meet \u201cinclude\u201d or \u201cexclude\u201d filters (discussed below) and exclude logs from such sources that have not risen to the level of events. Alternatively, a user may choose to include all events regardless of any include\/exclude filters in addition to non-events that have met such include\/exclude filters.","As seen in section , one or more \u201cinclude\u201d filters may be specified. Logs that match at least one of the include filters and do not match any of the exclude filters may be distributed to the selected receiving entities. For instance, logs may be included based on a classification of the logs. A \u201cclassification\u201d button  in the include filter section  may bring up another pop-up window (not shown) in which the user may choose one or more specific classifications (e.g., those discussed in the views  shown in ) by which to filter incoming logs for distribution to one or more specified receiving entities. Other types of include filters may also be included such as direction (e.g. internal, external), number of bytes, etc.","Additionally, one or more \u201cexclude\u201d filters may be specified in section  such as classification, direction, number of bytes, etc. It should be appreciated that the selection of one or more log sources along with any include\/exclude filters to distribute to one or more receiving entities may be embodied in the form one or more log processing rules against which received logs may be processed by the one or more log managers. That is, the one or more log managers or processing platforms may process received logs using one or more log processing rules that, for instance, distinguish between first types of logs (e.g., those that match a particular log source or sources) and second types of logs (e.g., those that do not match a particular log source resources). Each distribution policy may include additional rules as well (e.g., a second log processing rule distinguishing between the second types of logs and third types of logs).","Once any include or exclude filters have been set, the next button  may be manipulated to bring the user to the next step of the policy wizard. As seen in , an itemized list  may be displayed in the pop-up window  including all of the receiving entities that have been established. The user may select (e.g., by clicking a check box) one or more of the receivers in the itemized list  to which the present distribution policy (e.g., the \u201cgeneric policy\u201d) may be assigned to. After manipulating the next button , the user may be directed to additional steps of the policy wizard whereby, for instance, the user can choose which outbound IP address and port to be used when sending or distributing the logs and\/or events to receiving entities (see ), and\/or provide a description of the present distribution policy (see ). Once an \u201cok\u201d or \u201capply\u201d button (not labeled) has been manipulated, the log distribution services engine has been set up at which point incoming logs, events and\/or alarms will be distributed to the selected receiving entities according to the associated distribution policy or policies.","It should be appreciated that the log distribution services engine or feature of the console may instruct the one or more log managers or processing platforms to distribute log messages and\/or events to the receiving entities according to the selected distribution policies using any appropriate protocol. For instance, user datagram protocol (\u201cUDP\u201d) based syslog or transmission control protocol (\u201cTCP\u201d) based syslog may be utilized. Furthermore, the log managers or processing platforms may utilize contextual metadata of logs that have already been at least partially processed in making distribution determinations based on the particular policies. More specifically, and as previously discussed in relation to, for instance, , metadata fields may be prepared for one or more logs upon such logs being initially received and processed after matching a log processing rule. In this regard, at least part of the determination as to whether a log messages matches a particular policy for distribution to one or more receiving entities may entail consideration of such metadata fields (e.g., fields related to log sources, direction, and the like).","Another of the tools available within the deployment manager may be a \u201cglobal log processing rule manager\u201d engine or feature that broadly allows an administrator or other user to perform a \u201ccontextual\u201d log analysis by way of overriding settings (e.g., log distribution settings, data management settings, event management settings) based on the specific context of a log message (e.g., where that context is determined based on prepared meta-data values, such as those discussed above in relation to ) in addition to the classification of the log message. More specifically, the global log processing rule manager provides a way to apply data management settings (e.g., which logs are to be archived, indexed, stored in raw form, forwarded to a data warehouse or forwarded as an event; for which logs are aggregation settings to be customized; and the like) across all log managers, log sources and log processing policies to logs that meet specific criteria.","As will be discussed below, various types of global log processing \u201coverrides\u201d may be applied to log messages that match classification criteria (e.g., network\/deny, authentication\/failure, where the classification criteria may in some arrangements be gleaned from contextual metadata of the log messages) and can be customized with include and\/or exclude filters for log metadata (e.g., as discussed above in relation to the log distribution services engine, see ). For instance, a global log processing rule might be configured to forward all authentication logs from privileged users to the Event Manager. In this regard, a user may be provided a manageable manner of determining how logs will be processed around the data system regardless of various disparate settings used by various log sources and\/or log processing policies. Furthermore, users may be provided with fine-grained control of the data management settings for a given log message (e.g., based on classification such as an event along with contextual metadata fields after a log has been at least initially processed). Stated differently, users can control specific data management settings on a log-by-log basis (e.g., instead of an \u201call or nothing\u201d basis). It should be appreciated that logs that do not match the various global log processing filters can still be processed normally per classification based data management (CBDM) or standard data management settings.","Turning now to , a global log processing rule manager button  may be accessed by manipulating the \u201ctools\u201d drop-down menu and then the \u201cadministration\u201d drop-down menu . As seen in , manipulation of the global log processing rule manager button  may cause the display of a global log processing rule manager pop-up window  in the presentation area . Although not shown (because no global log processing rules have yet been created in the illustration), the pop-up window  may include an itemized list of all global log processing rules that have been created. As can be seen in the top of the pop-up window , each global log processing rule can be selectively enabled or expired, and corresponding information for each global log processing rule may be provided (e.g., expiration date, name, description, classifications). To create a new global on processing rule, the pop-up window  may be appropriately manipulated such as, for example, right clicking on the pop-up window  to bring up another pop-up window , or manipulating a \u201ccreate new global log processing rule\u201d icon in the pop-up window  (e.g., see the \u201cplus\u201d icon in the top left corner of the pop-up window ).","Upon deciding to create a new log processing rule, a \u201cglobal log processing rule wizard\u201d pop-up window  may be displayed in the presentation area  as seen in . It should be noted that the global log processing rule wizard can also be used to edit existing global log processing rules. In any case, and as with the log distribution policy wizard pop-up window  discussed previously (see ), the global log processing rule wizard may take an operator or user through a series of steps to create a global log processing rule which may be operable to override data and event management settings associated with log sources and\/or log policies.","Initially, and as seen in , a user may initially specify those types of logs to which this new global log processing rule may apply (which the processing platform may implement in the form of one or more log processing rules). For instance, upon selecting a \u201cclassification criteria\u201d tab in a group of tabs  in the pop-up window , a \u201cclassification selector\u201d pop-up window  may be displayed in the presentation area . The classification selector pop-up window  allows the user to select one or more classifications (see classifications in views  in ) that this new global log processing rule will be applied to. As discussed previously, logs may be classified according to audit, operations, or security, (each of which may include a number of sub-classifications, sub-sub-classifications, etc), and such classifications may be appended to a log or event message in the form of metadata fields. In addition to classification criteria, this new global log processing rule may be applied to particular logs via specifying include and\/or exclude filters, various types of the log source criteria (see discussion in relation to ), etc. (see tabs  in the pop-up window ). The user may access such include\/exclude filters and log source criteria by, for instance, manipulating a corresponding tab  or a \u201cnext\u201d button . Upon finishing the selection of those types of logs to which this new global log processing rule will be applied to, the user may select the \u201cnext\u201d button  to move to the next step in the log processing rule wizard.","In the next step of the global log processing rule wizard as seen in , various data management settings may be configured that may be overridden for log messages matching this new global log processing rule. For example, one of the settings may be in relation to the archiving of logs (i.e., the storage of log messages in off-line archive files). When an \u201coverride archiving\u201d checkbox  (or other user manipulable feature) is not checked (or not manipulated), any other or previous settings in relation to the archiving of those types of logs matching the one or more log processing rules (e.g., in relation to classification, include\/exclude filters, etc.) will not be affected by this new global processing rule.","However, upon manipulation of the override archiving checkbox , a user may then specify or define an \u201coverride setting\u201d in relation to matching logs. That is, and as seen near the override archiving checkbox , a user can specify whether all matching logs are to be archived or not archived. Similar types of override settings can be defined in relation to other types of settings such as but not limited to onlining (the storage of the logs in a log manager database), log deduplication (efficiently handling redundant data to reduce storage requirements and costs while allowing for quick searches), event forwarding (the forwarding and storing of logs classified as an event in an event manager database), the application of a risk rating (applying a custom risk rating to matching logs), the application of a false alarm rating (applying a false alarm reading to matching logs), and the like. Additionally, global log processing rules can be configured with an expiration date such that a global log processing rule may be automatically disabled when the expiration date is earlier than the current date. It should be appreciated that these override settings may be applied to previously created or later created data\/event management settings.","Upon specifying any additional information (e.g., a description of the global log processing rule under an \u201cinformation\u201d tab in the group of tabs ), an \u201cokay\u201d button  may be selected to end the global log processing rule wizard and thereby set or initiate the newly created global log processing rule. Currently existing global log processing rules may be edited and\/or additional global log processing rules may be created. As can be appreciated, these global log processing rules may provide a more transparent manner of overriding data management settings for specific log messages when advanced processing is required. Additionally, global log processing rules may replace any need to create one or more complicated sub-rules in order to override settings.","Another tool that may be available within the deployment manager is a \u201cglobal data management settings\u201d engine or feature that broadly allows an administrator or other user to both globally configure common settings (e.g., without regard to classification of the logs) and enable classification based data management settings for logs (e.g., with regard to classification of the logs). Settings such as, but not limited to, archiving, onlining, and whether or not logs are to be stored in \u201cLogMart\u201d (a data warehouse operable to efficiently store millions, billions, etc. of log messages in support of trending and reporting). For instance, LogMart may be associated with a front-end tool (e.g., Log Miner) that may be used to analyze the information from LogMart (along with reports). may be configured based on log classification.","Turning now to , and upon manipulating an \u201cevent manager\u201d tab in the number of tabs  in the control panel , a user may manipulate a \u201cglobal data management settings\u201d button  to cause the display of a \u201cdata management settings\u201d pop-up window  in the presentation area . The data management settings pop-up window  may allow configuration of both \u201cglobal\u201d settings and \u201cclassification based data management (CBDM)\u201d settings via manipulation of an appropriate tab . As seen in , the global settings tab  has been selected which allows for global configuration of logs (e.g., logs will be processed by the one or more log managers or processing platforms regardless of the classification of logs). As seen, a number of checkboxes  (or other user manipulable features) may be included in the pop-up window  for allowing a user to selectively globally enable a number of settings. For instance, one or more settings such as event forwarding, log processing, log deduplication, ignoring of any settings that disable LogMart, and LogMart standard aggregation may be globally enabled. That is, log manager and\/or log source settings that can be configured to disable such settings will be ignored.","With reference to , the classification based data management settings tab  has now been selected. Broadly, classification based data management allows administrators and other users to make data management decisions based on the high-level classification of incoming logs (e.g., such as whether to archive, index, forward, etc. the logs). In this regard, classification based data management allows for efficient configuration of data management settings based on classification while global log processing rules allow for such data management setting configuration based on a more fine-grained approach (i.e., allows for data management determinations on a log by log basis instead of merely on log classification). In any case, and for instance, one portion  of the pop-up window  may broadly allow a user to selectively enable classification based data management in relation to one or more specific actions (such as by checking\/manipulating checkbox  or other user manipulable feature). Another portion  of the pop-up window  may allow the configuration of various data management actions (e.g., whether or not to perform various actions such as, but not limited to, archiving, onlining, and sending to LogMart) for various classifications of logs. In one arrangement, one or more other checkboxes  may be selectively checked to ignore any log source settings in relation to, for instance, archiving, onlining, and sending to LogMart. For instance, in the situation where a particular data management setting or action for a log associated with a particular log source conflicted with a data management setting or action for a log associated with a particular log classification, the data management setting or action associated with the log classification would prevail over that for the log sources when one of the checkboxes  is checked\/manipulated (e.g., a particular log source setting stipulating no archiving of logs associated with the particular source that otherwise would apply to a particular incoming log would give way to a decision to archive the log based on a particular classification of the log). While only \u201caudit\u201d type logs have been shown in portion , it should be appreciated that by scrolling down, other types of classification (e.g., security, operations) may also be configured with respect to archiving, onlining and sending to LogMart. Furthermore, and as discussed previously, the global data management settings (e.g. CBDM) may be overridden by one or more global log processing rules.","In any case, the global data management settings may provide for consistent, \u201cout of the box\u201d configuration for new deployments. That is, by globally configuring settings (either with or without regard to log classification), a user or administrator need not be concerned whether some logs will be treated one-way and other logs will be treated another way. Additionally, such global data management facilitates understanding of how data is managed and where it is stored. Also, pre-sale requirements can be more easily mapped to post sale data management implementation. In other words, upon learning the requirements of an end user, an administrator or other technician can more easily implement such requirements by way of the global data management settings.","It will be readily appreciated that many deviations may be made from the specific embodiments disclosed in the specification without departing from the spirit and scope of the invention. In one arrangement, a user may be able to customize the appearance of the user interface  to more closely match the various tools disclosed herein to the particular analytical needs of the user. More specifically, a user may be able to select one or more particular combinations of tools that are more readily available to the user (e.g., upon initial start-up or access of the user interface ). For example, one or more \u201clayouts\u201d may be stored and available to the user that persist the organization of charts, grids, and the like across various screenshots of the user interface . Such layouts may be manually created by a user and\/or automatically available to the user (i.e., there may be one or more default layouts). For instance, various layouts are envisioned such as a PCI layout, a threat detection layout, a network operations layout, and the like.","In another arrangement, the user interface  may include or at least be associated with any appropriate browser that displays the various tools disclosed herein. More specifically, the browser may include one or more user manipulable features (e.g., buttons, drop-down menus, etc.) corresponding to each of the various tools that allow a user to manipulate one or more features of the tools (e.g., turn each tool on or off, modify include or exclude filters, etc.).","Furthermore, while this disclosure contains many specifics, these should not be construed as limitations on the scope of the disclosure or of what may be claimed, but rather as descriptions of features specific to particular embodiments of the disclosure. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.","It should be appreciated throughout this disclosure that the various manners of access (e.g., right clicking on a line to bring up a particular drop down menu, and then selecting a particular tab or button, etc.) to the various tools and functionalities (e.g., log distribution services, global log processing rules) disclosed herein should not be seen as limiting such tools and functionalities to the particular manners of access discussed or even limiting such tools and functionalities to use with any manners of access at all. Rather, these manners of access have only been shown as examples to assist the reader in understanding how one may access such tools on a use interface. Other manners of access to the various tools and functionalities are also envisioned and encompassed within the scope of the present disclosure.","Certain elements have been described herein as having specific functions and being associated with particular reference numbers. For example, the log managers described herein have been referenced at different points in the text as the log manager , the log manager , the log managers -, log manager , etc. These descriptions with varying reference numbers are merely intended to assist the reader in understanding various aspects of certain elements. It is not intended to limit any aspect of the invention to a particular embodiment. Rather, any element described herein may possess one or more features of another similarly named element. For example, the log manager  described in  may possess any of the capabilities of the log managers described herein (e.g., the log managers , -, and ).","Additionally, the foregoing description of the present invention has been presented for purposes of illustration and description. Furthermore, the description is not intended to limit the invention to the form disclosed herein. Consequently, variations and modifications commensurate with the above teachings, and skill and knowledge of the relevant art, are within the scope of the present invention. The embodiments described hereinabove are further intended to explain best modes known of practicing the invention and to enable others skilled in the art to utilize the invention in such, or other embodiments and with various modifications required by the particular application(s) or use(s) of the present invention. It is intended that the appended claims be construed to include alternative embodiments to the extent permitted by the prior art."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIGS. 4 and 5"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 8 and 9"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIGS. 18 through 19"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 24","FIG. 23"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 25","FIG. 23"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 26","FIG. 25"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 29","FIG. 28","FIG. 28"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 30","FIGS. 28-29"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 31","FIGS. 28-30"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 32","FIG. 23"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 33","FIG. 23"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 34","FIG. 33"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 35","FIG. 34"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 36","FIG. 23"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 37","FIG. 36"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 38","FIG. 37"]},{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 39","FIG. 38"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 40","FIG. 36"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 41","FIG. 40"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 42","FIG. 41"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 43","FIG. 42"]},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 45","FIG. 40"]},{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 46","FIG. 45"]},{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 47","FIG. 36"]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 49","FIG. 36"]},{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 50","FIG. 49"]},{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 51","FIG. 49"]},{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 52","FIG. 51","FIG. 50"]},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 54","FIG. 53"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 55","FIG. 53"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 56","FIG. 53"]},{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 57","FIG. 53"]},{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 58","FIG. 36"]},{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 59","FIG. 58"]},{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 60","FIG. 59"]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 61","FIG. 60","FIG. 60"]},{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 62","FIG. 47"]},{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 63","FIG. 62"]},{"@attributes":{"id":"p-0088","num":"0087"},"figref":["FIG. 64","FIG. 63"]}]},"DETDESC":[{},{}]}
