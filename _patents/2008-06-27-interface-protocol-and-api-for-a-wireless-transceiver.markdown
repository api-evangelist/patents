---
title: Interface protocol and API for a wireless transceiver
abstract: A wireless protocol may be implemented in a smart transceiver device that contains the physical (PHY) and media access control (MAC) layers of the wireless protocol stack. In various embodiments, a serial peripheral interface (SPI) based design may be used. Disclosed is an embodiment of a protocol which may be used to provide control and data transfer to and from the smart transceiver. In particular, an exemplary format of the protocol, the commands, and responses is disclosed. In a further embodiment, an application programming interface (API) is disclosed. The API may provide hardware independent services that can be used to establish, maintain, and transport data to and from the system and the smart transceiver device. In particular, an exemplary and non-limiting set of services, function calls, configuration methods, events, and parameters is disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08060681&OS=08060681&RS=08060681
owner: Microsoft Corporation
number: 08060681
owner_city: Redmond
owner_country: US
publication_date: 20080627
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","COPYRIGHT NOTICE AND PERMISSION","FIELD OF TECHNOLOGY","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","Appendix A","Appendix B"],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/990,365, filed Nov. 27, 2007, the entirety of which is incorporated herein by reference.","This application is related by subject matter to the subject matter disclosed in the following commonly assigned application, the entirety of which are hereby incorporated by reference herein: U.S. patent application Ser. No. 12\/163,880 filed on Jun. 27, 2008 and entitled \u201cSerial Peripheral Interface For A Transceiver Integrated Circuit.\u201d","A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document: Copyright\u00a9 2006, 2007 Microsoft Corp.","The presently disclosed subject matter relates to the field of computing and electronics, and more particularly, to fields such as entertainment consoles, although these are merely exemplary and non-limiting fields.","Video game and entertainment systems are increasingly incorporating wireless features and accessories. Development of the wireless radios and the necessary drivers require significant design effort. In turn, the commands and protocols required to control and manage the wireless interfaces can be complicated and require significant development resources for developers of software and hardware accessories for the wireless systems. Furthermore, wireless technologies and related standards change on a frequent basis, requiring developers to adapt to new interface requirements. Thus a developer's investment in developing products for a particular wireless interface may not be recouped when the interfaces and protocols frequently change.","Nevertheless, it would be advantageous to use an existing standard interface developing wireless features and accessories. An interface standard widely used in the industry and supported by a large number of products typically drive down costs, and incorporation of such off the shelf components is desirable to reduce the cost of product development. Furthermore, in the case of a wireless transceiver, it is typically desirable to limit the number of IC pins needed to support inter-processor communications, while at the same time providing sufficient data bandwidth. Therefore, a simple serial interface may be selected for a wireless architecture. One such standard interface commonly used and well known in the art that provides such features is the Serial Peripheral Interface (SPI). One limitation of the SPI interfaces is that data transfers are limited to 8 bits at one time. Because many applications may require higher command and data transfer capability, a higher level protocol is needed that has the advantages of a serial interface. Furthermore, it would advantageous to provide an interface that developers can use to utilize the wireless features, while not having to be concerned with the physical and transport details of the interface.","Various systems, methods, and computer readable instructions are disclosed herein for providing a platform to support the development of new wireless accessories for video game and entertainment systems using serial interfaces such as the Serial Peripheral Interface (SPI). In one exemplary and non-limiting aspect of the present disclosure, a smart transceiver device may contain the complete physical (PHY) and media access control (MAC) layers of the wireless protocol stack, and the wireless protocol functionality may be partitioned into a single device.","In various embodiments, a protocol is disclosed that may be used to provide control and data transfer to and from the smart transceiver device. In particular, an exemplary format for the protocol, the commands, and responses is disclosed.","In a further embodiment, an application programming interface (API) is disclosed to provide an interface for developers to provide a hardware independent set of services. Such an API may be used to establish, maintain, and transport data to and from the system and the smart transceiver device. Services may be invoked as desired by the API. In particular, an exemplary and non-limiting set of services, function calls, configuration methods, events, and parameters is disclosed.","It should be noted that this Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter.","Exemplary Game Console, PC, and Networking Aspects","This section of the present disclosure provides the general aspects of an exemplary and non-limiting game console. Referring now to , a block diagram shows an exemplary multimedia console. The multimedia console  has a central processing unit (CPU)  having a level 1 (L1) cache , a level 2 (L2) cache , and a flash ROM (Read-only Memory) . The level 1 cache  and level 2 cache  temporarily store data and hence reduce the number of memory access cycles, thereby improving processing speed and throughput. The flash ROM  may store executable code that is loaded during an initial phase of a boot process when the multimedia console  is powered. Alternatively, the executable code that is loaded during the initial boot phase may be stored in a flash memory device (not shown). Furthermore, ROM  may be located separate from CPU .","A graphics processing unit (GPU)  and a video encoder\/video codec (coder\/decoder)  form a video processing pipeline for high speed and high resolution graphics processing. Data is carried from the graphics processing unit  to the video encoder\/video codec  via a bus. The video processing pipeline outputs data to an A\/V (audio\/video) port  for transmission to a television or other display. A memory controller  is connected to the GPU  and CPU  to facilitate processor access to various types of memory , such as, but not limited to, a RAM (Random Access Memory).","The multimedia console  includes an I\/O controller , a system management controller , an audio processing unit , a network interface controller , a first USB host controller , a second USB controller  and a front panel I\/O subassembly  that are preferably implemented on a module . The USB controllers  and  serve as hosts for peripheral controllers ()-(), a wireless adapter , and an external memory unit  (e.g., flash memory, external CD\/DVD ROM drive, removable media, etc.). The network interface  and\/or wireless adapter  provide access to a network (e.g., the Internet, home network, etc.) and may be any of a wide variety of various wired or wireless interface components including an Ethernet card, a modem, a Bluetooth module, a cable modem, and the like.","System memory  is provided to store application data that is loaded during the boot process. A media drive  is provided and may comprise a DVD\/CD drive, hard drive, or other removable media drive, etc. The media drive  may be internal or external to the multimedia console . Application data may be accessed via the media drive  for execution, playback, etc. by the multimedia console . The media drive  is connected to the I\/O controller  via a bus, such as a Serial ATA bus or other high speed connection (e.g., IEEE 1394).","The system management controller  provides a variety of service functions related to assuring availability of the multimedia console . The audio processing unit  and an audio codec  form a corresponding audio processing pipeline with high fidelity, 3D, surround, and stereo audio processing according to aspects of the present disclosure described above. Audio data is carried between the audio processing unit  and the audio codec  via a communication link. The audio processing pipeline outputs data to the A\/V port  for reproduction by an external audio player or device having audio capabilities.","The front panel I\/O subassembly  supports the functionality of the power button  and the eject button , as well as any LEDs (light emitting diodes) or other indicators exposed on the outer surface of the multimedia console . A system power supply module  provides power to the components of the multimedia console . A fan  cools the circuitry within the multimedia console .","The CPU , GPU , memory controller , and various other components within the multimedia console  are interconnected via one or more buses, including serial and parallel buses, a memory bus, a peripheral bus, and a processor or local bus using any of a variety of bus architectures.","When the multimedia console  is powered on or rebooted, application data may be loaded from the system memory  into memory  and\/or caches ,  and executed on the CPU . The application may present a graphical user interface that provides a consistent user experience when navigating to different media types available on the multimedia console . In operation, applications and\/or other media contained within the media drive  may be launched or played from the media drive  to provide additional functionalities to the multimedia console .","The multimedia console  may be operated as a standalone system by simply connecting the system to a television or other display. In this standalone mode, the multimedia console  may allow one or more users to interact with the system, watch movies, listen to music, and the like. However, with the integration of broadband connectivity made available through the network interface  or the wireless adapter , the multimedia console  may further be operated as a participant in a larger network community. In this latter scenario, the console  may be connected via a network to a server, for example.","Second, now turning to , illustrated is a block diagram representing an exemplary computing device that may be suitable for use in conjunction with implementing the subject matter disclosed above. Numerous embodiments of the present disclosure may execute on a computer. For example, the computer executable instructions that carry out the processes and methods for providing PC experiences on gaming consoles may reside and\/or be executed in such a computing environment as shown in . The computing system environment  is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the presently disclosed subject matter. Neither should the computing environment  be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment . In some embodiments the various depicted computing elements may include circuitry configured to instantiate specific aspects of the present disclosure. For example, the term circuitry used in the disclosure can include specialized hardware components configured to perform function(s) by firmware or switches. In other examples embodiments the term circuitry can include a general purpose processing unit, memory, etc., configured by software instructions that embody logic operable to perform function(s). In example embodiments where circuitry includes a combination of hardware and software, an implementer may write source code embodying logic and the source code can be compiled into machine readable code that can be processed by the general purpose processing unit. Since one skilled in the art can appreciate that the state of the art has evolved to a point where there is little difference between hardware, software, or a combination of hardware\/software, the selection of hardware versus software to effectuate specific functions is a design choice left to an implementer. More specifically, one of skill in the art can appreciate that a software process can be transformed into an equivalent hardware structure, and a hardware structure can itself be transformed into an equivalent software process. Thus, the selection of a hardware implementation versus a software implementation is one of design choice and left to the implementer.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through an non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through a output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It may be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["153","156","157","155","158","153","155","156","157","158","153","155","156","157","158","153","155","156","157","158","153","155","156","157","158","154","158"]},"This network  may itself comprise other computing entities that provide services to the system of , and may itself represent multiple interconnected networks. In accordance with an aspect of the presently disclosed subject matter, each entity , , , , and  may contain discrete functional program modules that might make use of an API, or other object, software, firmware and\/or hardware, to request services of one or more of the other entities , , , , and .","It can also be appreciated that an object, such as , may be hosted on another computing device . Thus, although the physical environment depicted may show the connected devices as computers, such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs, televisions, MP3 players, etc., software objects such as interfaces, COM objects and the like.","There are a variety of systems, components, and network configurations that support distributed computing environments. For example, computing systems may be connected together by wired or wireless systems, by local networks or widely distributed networks. Currently, many networks are coupled to the Internet, which provides an infrastructure for widely distributed computing and encompasses many different networks. Any such infrastructures, whether coupled to the Internet or not, may be used in conjunction with the systems and methods provided.","A network infrastructure may enable a host of network topologies such as client\/server, peer-to-peer, or hybrid architectures. The \u201cclient\u201d is a member of a class or group that uses the services of another class or group to which it is not related. In computing, a client is a process, i.e., roughly a set of instructions or tasks, that requests a service provided by another program. The client process utilizes the requested service without having to \u201cknow\u201d any working details about the other program or the service itself. In a client\/server architecture, particularly a networked system, a client is usually a computer that accesses shared network resources provided by another computer, e.g., a server. In the example of , any entity , , , , and  can be considered a client, a server, or both, depending on the circumstances. And, moreover, regarding the entertainment console, it can be a client to a server.","A server is typically, though not necessarily, a remote computer system accessible over a remote or local network, such as the Internet. The client process may be active in a first computer system, and the server process may be active in a second computer system, communicating with one another over a communications medium, thus providing distributed functionality and allowing multiple clients to take advantage of the information-gathering capabilities of the server. Any software objects may be distributed across multiple computing devices or objects.","Client(s) and server(s) communicate with one another utilizing the functionality provided by protocol layer(s). For example, HyperText Transfer Protocol (HTTP) is a common protocol that is used in conjunction with the World Wide Web (WWW), or \u201cthe Web.\u201d Typically, a computer network address such as an Internet Protocol (IP) address or other reference such as a Universal Resource Locator (URL) can be used to identify the server or client computers to each other. The network address can be referred to as a URL address. Communication can be provided over a communications medium, e.g., client(s) and server(s) may be coupled to one another via TCP\/IP connection(s) for high-capacity communication.","In light of the diverse computing environments that may be built according to the general framework provided in  and the further diversification that can occur in computing in a network environment such as that of , the systems and methods provided herein cannot be construed as limited in any way to a particular computing architecture or operating system. Instead, the presently disclosed subject matter should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims. Thus, for example, although game consoles and server PCs have been discussed, just as easily full desktops could be remoted to smart phones as a means to access data and functionality that is otherwise unavailable to smart phones.","Finally, it should also be noted that the various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods, computer readable media, and systems of the presently disclosed subject matter, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, where, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the subject matter.","In the case of program code execution on programmable computers, the computing device may generally include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may utilize the creation and\/or implementation of domain-specific programming models aspects of the present disclosure, e.g., through the use of a data processing API or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","An SPI Protocol and Command Structure","Various systems, methods, and computer readable instructions are disclosed herein for providing a platform to support the development of new wireless accessories for video game and entertainment systems. To limit the number of IC pins needed to support inter-processor communications, a simple serial interface may be used. In particular, to provide a common interface with as many off-the-shelf CPU parts as possible and to support the required data traffic, a Serial Peripheral Interface (SPI) based design may be implemented.","SPI is an interface that enables the serial exchange of data between a master and a slave device. SPI typically uses a synchronous protocol, where transmitting and receiving is guided by a clock signal generated by master microcontroller. The SPI interface allows the connection of several SPI devices while a master selects each device with a CS (Chip Select) signal.\n\n","SPI is a synchronous serial data link standard. Devices communicate in a master\/slave mode where the master device initiates the data frame. Multiple slave devices are allowed with individual chip select lines.","During each SPI clock cycle, a full duplex data transmission occurs, in which the master sends a bit on the MOSI line, the slave reads the bit from that same line, the slave sends a bit on the MISO line, and the master reads it from that same line. Transmissions typically involve two shift registers of a given word size, such as eight bits, one in the master and one in the slave. The shift registers are connected in a ring configuration. Data is typically shifted out with the most significant bit first, while shifting a new least significant bit into the same register. After that register has been shifted out, the master and slave have exchanged register values. The process may then repeat as needed.","In one exemplary and non-limiting aspect of the present disclosure, a smart transceiver device may be provided to support the rapid development of new wireless accessories for gaming platforms. In an embodiment, a smart transceiver may provide receiver and transmitter functions for physical and link wireless communications layers. In particular, the PHY and Link layers of a wireless protocol stack, and wireless protocol functionality for such a device may be implemented in a wireless application specific integrated circuit (ASIC). In one embodiment, the smart transceiver may be the slave and a master control application may be the master of an SPI bus.","In an embodiment, wireless communication may be provided using a frequency hopping digital radio protocol with time-division multiplexed access (TDMA) granting radio time for each wireless accessory. The unlicensed worldwide 2.4 GHz Industrial Scientific Medical (ISM) radio band may be utilized. A minimum of external components may be needed to implement a complete Frequency Hopping Spread Spectrum (FHSS) 2.4 GHz ISM band digital radio transceiver compliant with worldwide regulatory requirements.","A shortcoming of a standard SPI interface is that data transfers are limited to 8 bits at one time. Because many applications may require higher command and data transfer capability, a higher level protocol is needed that still retains the advantages of a serial interface. In consideration of an efficient control\/data transport method across the SPI bus with full duplex data transfer, in various embodiments a frame based SPI protocol is disclosed that may be used to provide control and data transfer to and from the smart transceiver device. In particular, an exemplary format for the protocol, the commands, and responses is disclosed. In an embodiment, each frame may consist of a 2 byte header with a variable payload length. The header may comprise 2 parts\u2014a command byte and a length byte. The length of the payload may be dependent upon the specific command, and the longest packet may define the length of the transfer.  provides an exemplary illustration of a typical data transfer.","Because the disclosed protocol comprises a full duplex interface, if one device has no information to transfer, the device may send an idle command. The disclosed protocol may maintain a master\/slave structure, with a master control application typically controlling all transactions, and the master control application transferring data whenever it has a message ready to transmit. The smart transceiver may act as the slave device and may return a reply indicating either the result of the request, compliance to the command, or an indication of the occurrence of an event from a previous request. The smart transceiver may further generate an interrupt to the master control application indicating that a message is ready to be read by the master.","The disclosed protocol may further comprise the following rules that apply to a frame transaction. First, the chip select may be in an active state. Second, a header may always be transmitted first on both ends of the link. If one end has no valid message to transmit, the command field may be set to be 0x00. Third, the longest frame (master to slave or slave to master) may be used to define the length of the transfer. Fourth, if one side has more than one packet to send, the independent messages may be appended together within the same frame.","The cases depicted in the table below are all exemplary valid transfers.",{"@attributes":{"id":"p-0065","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["Case","Master",{},"Slave",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["No.","data","no data","data","no data"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["1","X",{},{},"X"]},{"entry":["2",{},"X",{},"X"]},{"entry":["3","X",{},"X"]},{"entry":["4",{},"X","X"]},{"entry":["5","X",{},"X"]},{"entry":["6","X",{},"X"]},{"entry":["7",{},"X","X"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"left","id":"FOO-00001"},"sup":"1)"}},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"left","id":"FOO-00002"},"sup":"2)"}},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"left","id":"FOO-00003"},"sup":"3)"}}]}}]}}},{"@attributes":{"id":"p-0066","num":"0070"},"figref":["FIGS. 5-11","FIG. 5","FIG. 6","FIG. 7","FIG. 8","FIG. 9","FIG. 10","FIG. 11"]},"No guard time may be required after the frame header. A CS# transition low to high can be used for frame synchronization. To support SPI multi slave applications MISO pads may be set to tristate after data transfer is finished (triggered by CS#). Data bytes may be set to \u201cdon't care\u201d after the number of data bytes defined by length bytes are transmitted.","In one embodiment, the smart transceiver functionality may be selected at startup. The functionality of the smart transceiver may be different depending upon the desired application. The functionality may further depend upon the product type the smart transceiver is used in. For example, if the IC is used in a voice only device, the IC may operate differently than if the product is a game controller device. The SPI command structure may change depending upon the type of application the smart transceiver is configured for.","The smart transceiver device may be designed to simultaneously support up to four data and voice accessories or four data-only and 4 voice-only accessories, or any combination in between. The smart transceiver, when implemented in a wireless accessory, may communicate with wireless video game consoles or a wireless enabled personal computer or other computing device that is equipped with a similar smart transceiver.","The smart transceiver may be a platform that may be used to support various product configurations. Firmware within the smart transceiver may be adjusted to support various product versions, without changing the chip hardware. In a video game system, the smart transceiver may be used to support video console products, game controller products, and various peripheral products.",{"@attributes":{"id":"p-0071","num":"0075"},"figref":"FIG. 12","b":["610","615"]},"The smart transceiver may respond with a Startup Configuration Response . The master control application may send commands  to retrieve EEPROM data for application configuration. If transmitted, the master control application may send the commands and wait for the responses from the smart transceiver .","The master control application may send an application configuration command . The application configuration command may set up the smart transceiver chip into the mode that the master control application needs. The smart transceiver may respond with the Application Configuration response .","The master control application may send the command to set the application to active . The smart transceiver may then respond with the current mode of \u201cApplication Active\u201d .","In the configuration standby state, limited SPI commands may be allowed by the master control application. The smart transceiver typically does not have enough information to perform any functions at this point and needs the master control application to provide more data. Typically the only commands that may be allowed in this state are mode control (i.e., power, reset) and startup configuration messaging.","The pre-application state may be entered after the master control application sends a valid startup configuration message. This state may allow more SPI commands but the number may be limited because the application has not been established. The primary functionality of the allowed commands typically may be configuration reads, configuration setting and mode control. The smart transceiver may remain in this state until the master control application changes it to another state.","The application standby state may be entered after the master control application sets the application configuration. The application typically does not start until the master control application sets the state to active.","The application active state may be entered from the application standby state after the master control application sets the mode to active. The application active state is typically the normal operating mode of the device. The master control application may continue to issue commands that are allowed by the application.","The following is an exemplary list of messages that support smart transceiver functionality. The commands are depicted in two sets. The first set are commands that may be independent of the application. The second set depicts exemplary application specific commands. Typically, the command set may be a subset of a more complete command set.","The table below lists exemplary application independent commands. The command details (specific format and field means) are provided in Appendix A.",{"@attributes":{"id":"p-0081","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Application Independent Messages"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Master control application",{}]},{"entry":["to smart transceiver","Smart transceiver to Master control application"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command #","Description","Command #","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["0x00","No Command or response is being","0x01","Message Fail"]},{"entry":[{},"sent"]},{"entry":["0x02","Mode Control","0x03","Mode Control Response"]},{"entry":[{},{},"0x05","Buffer Warning"]},{"entry":[{},{},"0x07","Buffer Warning cleared"]},{"entry":["0x38","Voice Sync Setup Request","0x39","Voice Sync Setup Response"]},{"entry":[{},{},"0x3B","Voice Sync Message"]},{"entry":["0x3E","Set Voice Coding Type","0x3F","Voice Coding Type Response"]},{"entry":["0x44","EEPROM Read Request","0x45","EEPROM Read Response"]},{"entry":["0x46","EEPROM Write Request","0x47","EEPROM Write Response"]},{"entry":["0x80","Startup Configuration Message","0x81","Startup Configuration Response"]},{"entry":["0x82","Smart transceiver Startup Message","0x83","Smart transceiver Startup Message"]},{"entry":[{},"Request"]},{"entry":["0xB8","Wireless Frame Sync Setup","0xB9","Wireless Frame Sync Setup Response"]},{"entry":[{},{},"0xBB","Wireless Frame Sync"]},{"entry":["0xC0","GPIO Setup","0xC1","GPIO Setup Response\/status"]},{"entry":["0xC2","GPIO Read\/Write Message","0xC3","GPIO status\/Response Message"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"A gamepad application may use a wireless protocol associated with gamepad handling. The voice part of the gamepad application may acquire the voice channel using gamepad rules. The table below shows the SPI messages that may be used by a gamepad application.",{"@attributes":{"id":"p-0083","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Gamepad Application Messages"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Master control application",{}]},{"entry":["to smart transceiver","Smart transceiver to Master control applicaiton"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command #","Description","Command #","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["0x08","Controller Header Report Buffer","0x09","Controller Header Request Buffer"]},{"entry":["0x0A","Generic Report Buffer","0x0B","Generic Request Buffer"]},{"entry":["0x0C","Controller Data Buffer","0x0D","Controller Data Buffer"]},{"entry":["0x0E","Plug-In Module Buffer"]},{"entry":["0x12","Controller Transport Buffer","0x13","Controller Transport Buffer"]},{"entry":["0x14","Voice Header Report Buffer","0x15","Voice Header Request Buffer"]},{"entry":["0x16","Voice Transport Data","0x17","Voice Transport Data"]},{"entry":["0x28","Voice Data - PCM - Packet 0","0x29","Voice Data - PCM - Packet 0"]},{"entry":["0x2A","Voice Data - PCM - Packet 1","0x2B","Voice Data - PCM - Packet 1"]},{"entry":["0x2C","Voice Data - PCM - Packet 2","0x2D","Voice Data - PCM - Packet 2"]},{"entry":["0x2E","Voice Data - PCM - Packet 3","0x2F","Voice Data - PCM - Packet 3"]},{"entry":["0x30","Voice Data - PCM - Packet 4","0x31","Voice Data - PCM - Packet 4"]},{"entry":["0x32","Voice Data - PCM - Packet 5","0x33","Voice Data - PCM - Packet 5"]},{"entry":["0x34","Voice Data - PCM - Packet 6","0x35","Voice Data - PCM - Packet 6"]},{"entry":["0x36","Voice Data - PCM - Packet 7","0x37","Voice Data - PCM - Packet 7"]},{"entry":["0x42","Link Status Request","0x43","Link Status"]},{"entry":["0x84","Configuration Request","0x85","Configuration Response"]},{"entry":["0xE0","Data Connection Request","0xE1","Data Connection Response"]},{"entry":["0xE2","Voice Connection Request","0xE3","Voice Connection Response"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"A voice device application may use a wireless protocol associated with a voice device. The voice part of the wireless application may acquire the voice channel using voice rules. The table below shows exemplary SPI messages used by a voice application.",{"@attributes":{"id":"p-0085","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Application Messages"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Master control application","Smart transceiver to"]},{"entry":["to smart transceiver","Master control application"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command #","Description","Command #","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["0x14","Voice Header Report Buffer","0x15","Voice Header Request Buffer"]},{"entry":["0x16","Voice Transport Data","0x17","Voice Transport Data"]},{"entry":["0x28","Voice Data - PCM - Packet 0","0x29","Voice Data - PCM - Packet 0"]},{"entry":["0x2A","Voice Data - PCM - Packet 1","0x2B","Voice Data - PCM - Packet 1"]},{"entry":["0x2C","Voice Data - PCM - Packet 2","0x2D","Voice Data - PCM - Packet 2"]},{"entry":["0x2E","Voice Data - PCM - Packet 3","0x2F","Voice Data - PCM - Packet 3"]},{"entry":["0x30","Voice Data - PCM - Packet 4","0x31","Voice Data - PCM - Packet 4"]},{"entry":["0x32","Voice Data - PCM - Packet 5","0x33","Voice Data - PCM - Packet 5"]},{"entry":["0x34","Voice Data - PCM - Packet 6","0x35","Voice Data - PCM - Packet 6"]},{"entry":["0x36","Voice Data - PCM - Packet 7","0x37","Voice Data - PCM - Packet 7"]},{"entry":["0x42","Link Status Request","0x43","Link Status"]},{"entry":["0x84","Configuration Request","0x85","Configuration Response"]},{"entry":["0xE2","Voice Connection Request","0xE3","Voice Connection Response"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Next, the API is described. In one embodiment, the slave device may be comprised of an application processor (AP) and the smart transceiver as a wireless protocol processor. The API may be located in the application processor. The two processors may be connected via a Serial Peripheral Interface (SPI).","As shown in , while the services may be provided independently of the actual hardware and software environment, in one embodiment the API may assume a separate application processor (master control application processor) communicating via a serial interface with the smart transceiver. Furthermore, in another embodiment the API may be used by a generic GPIO application.","In one embodiment the API may handle access to the physical radio channel and to the smart transceiver pins. The API may further be responsible for the following tasks:\n\n","Five groups of API services may be considered:\n\n","A data communication service may be defined in terms of service primitives as exemplified in . A service primitive is an abstract interaction between the service providing layer and any service user (task, layer, etc.). As such it may be independent of software implementation details. The service may be implemented as a function call or an operating system message as appropriate for the target system.","As shown in , the Information Base (IB) may contain API parameters and configuration values. A service primitive may be one of four generic types:\n\n","The following convention may be used for primitives: <primitive name><primitive type>. The <primitive type> may be one of the following: Req, Ind, Conf or Resp.","The service primitives may provide the following functions:\n\n","An exemplary list of packet types for the upstream data service are shown below. All types may be used in arbitrary sequence. The maximum upstream throughput may be given as 48 bytes per frame (plus up to 16 bits in the header). The frame duration may be 8 ms. The total requested throughput typically does not exceed the maximum. For pure wireless voice devices (e.g. headsets) the . . . DATA_VOICE . . . : packet types may be used.",{"@attributes":{"id":"p-0095","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Upstream Data Service"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Flow","smart transceiver"]},{"entry":["Packet type","Description","control","buffer type"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["XAIR_UP_DATA_CONTROLLER_HEADER_REPORT",{},"No","Controller header"]},{"entry":[{},{},{},"report"]},{"entry":["XAIR_UP_DATA_CONTROLLER_DATA","19 byte","No","Controller data"]},{"entry":["XAIR_UP_DATA_CONTROLLER_TRANSPORT","24 byte","No","Controller transport"]},{"entry":["XAIR_UP_DATA_GENERIC_REPORT","24 byte","Yes","Generic report"]},{"entry":["XAIR_UP_DATA_VOICE_HEADER_REPORT","\u20022 byte","No","Voice header report"]},{"entry":["XAIR_UP_DATA_VOICE_TRANSPORT","24 byte","No","Voice transport report"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Most upstream packet types and the corresponding data (sub-) services do not provide any packet queuing or flow control on the radio link. These data packets are assumed rewriteable. When rewriteable packets are sent faster than the available throughput permits, a packet sent later may overwrite a packet sent earlier. Rewriteable packets are typically used to periodically transmit some state information.","An exemplary list of packet types for the downstream data service are listed. All types may be used in arbitrary sequence. The maximum downstream throughput may be given as 8 bytes per frame (plus up to 16 bits in the header). The frame duration may be 8 ms. The total throughput typically does not exceed the maximum. For pure wireless voice devices (e.g. headsets) the . . . DATA_VOICE . . . packet types may be used.",{"@attributes":{"id":"p-0098","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Downstream Data Service"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"smart transceiver"]},{"entry":["Packet type","Description","buffer type"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["XAIR_DOWN_DATA_CONTROLLER_HEADER_REQUEST","2 byte","Controller header"]},{"entry":[{},{},"request"]},{"entry":["XAIR_DOWN_DATA_CONTROLLER_DATA","8 byte","Controller data"]},{"entry":["XAIR_DOWN_DATA_CONTROLLER_TRANSPORT","8 byte","Controller transport"]},{"entry":["XAIR_DOWN_DATA_GENERIC_REQUEST","8 byte","Generic request"]},{"entry":["XAIR_DOWN_DATA_VOICE_HEADER_REQUEST","2 byte","Voice header request"]},{"entry":["XAIR_DOWN_DATA_VOICE_TRANSPORT","8 byte","Voice transport request"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"For voice service, the service primitives provide the following functions:\n\n","The PCM data therefore may be encoded by the smart transceiver to satisfy the throughput restrictions. PCM voice samples may be transferred 16 bit per sample (left justified, 2's complement, little-endian format).","The sample rate may be changed any time by the master device. A sample rate indication may be provided for this case, to trigger the audio handler to change the AD conversion parameters accordingly.","The upstream voice packet size (attribute IB_VOICE_PACKET_SIZE) and the initial upstream encoding type (attribute IB_UPSTREAM_VOICE_ENCODING_TYPE) may be setup in the IB header file.","The management services may combine primitives not directly related to data or voice transmission services and the layer configuration via the information base (IB). In typical application environments the IB attributes have fixed values and need not be changed during application execution.","The management service primitives may provide the following functions:\n\n","The IB attributes may also be accessed by corresponding primitives (get and set) as an option for further extension. Then the IB access primitives may have separate confirm primitives because in most cases a communication with the smart transceiver involved.","The smart transceiver may have spare GPIO pins that can be used for either inputs or outputs. The configuration may be done via IB attributes.","The service primitives may set or clear up to 16 IO pins or deliver the current state of up to 16 IO pins either on request (with the confirm primitive) or unsolicited (with the indication primitive).",{"@attributes":{"id":"p-0108","num":"0141"},"figref":"FIG. 16","ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":{"@attributes":{"id":"ul0015-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":["INITIALIZED: The API is ready to be used.","STARTED: The communication with the smart transceiver is established and configured.","CONNECTED: A data and\/or voice connection is established and data and\/or voice may be sent or received. To simplify the state diagram there is no voice connection state or transition shown, but may exist as a separate independent instance.","BINDING: This is a transient state during binding to the master device. It is usually not necessary to do a binding just to get to the CONNECTED state. It may very well happen only once in the lifetime of a slave device."]}}}},"An exemplary basic structure of the API is shown in . Depicted is a state machine, which may handle the requests by the application, generate events for the application depending on received SPI messages by the smart transceiver, and the internal state. Buffering for transferring data and voice between master control application controller and the smart transceiver may be integrated in the API. The application layer may communicate with the API regarding primitive function calls to send out requests. In addition, in one embodiment there are two functions GetEvent( . . . ) and ReadEventDetails( . . . ) for handling event messages from the API. For voice handling two functions PutVoiceBuffer( . . . ) and GetVoiceBuffer( . . . ) may be implemented. The SPI driver may be interfaced to the API with four functions to process the API buffer.","Two types of requests may be considered:\n\n","Indications and confirms may be received by the application as events (event identifier and list of pointers to the received primitive elements). Function calls may be available to get an event and to read the event details. To optimize the voice processing task the buffer management for voice samples may be handled by a separate function call instead of an event. With an underlying Operating System this may be implemented with messages received by tasks or threads.","Instead of having an event loop for the reception of indications and confirms, call-back functions may be registered with the API. When the respective indication or confirm is received the corresponding function may be called.","The following table cross references SPI commands available to users and third party applications to the primitives discussed herein. If a primitive is listed more than once the relevant command is selected according to a primitive parameter (e.g. Xair_MdDataReq) or an internal driver state (e.g. Xair_MmStartReq). Commands marked as FFS are currently not included in the specification but may be added as desired.",{"@attributes":{"id":"p-0114","num":"0153"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Cross reference between SPI commands and primitives"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command","Description","Direction","Primitive"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["0x00","No command","both","n\/a (basic SPI driver function)"]},{"entry":["0x01","Message Fail","A\u2192B","n\/a (basic SPI driver function)"]},{"entry":["0x02","Mode Control Request","B\u2192A","Xair_MmStartReq"]},{"entry":[{},{},{},"Xair_MmResetReq"]},{"entry":[{},{},{},"Xair_MmPowerDownReq"]},{"entry":["0x03","Set Mode Response","A\u2192B","Xair_MmStartConf"]},{"entry":["0x05","Buffer Warning","A\u2192B","n\/a (basic SPI driver function)"]},{"entry":["0x07","Buffer Warning Cleared","A\u2192B","n\/a (basic SPI driver function)"]},{"entry":["0x08","Controller Header Report Buffer - Device 0","B\u2192A","Xair_MdDataReq"]},{"entry":["0x09","Controller Header Request Buffer - Device 0","A\u2192B","Xair_MdDataInd"]},{"entry":["0x0A","Generic Report Buffer - Device 0","B\u2192A","Xair_MdDataReq"]},{"entry":["0x0B","Generic Request Buffer - Device 0","A\u2192B","Xair_MdDataInd"]},{"entry":["0x0C","Controller Data Buffer - Device 0","B\u2192A","Xair_MdDataReq"]},{"entry":["0x0D","Controller Data Buffer - Device 0","A\u2192B","Xair_MdDataInd"]},{"entry":["0x14","Voice Header Report Buffer - Device 0","B\u2192A","Xair_MdDataReq"]},{"entry":["0x15","Voice Header Request Buffer - Device 0","A\u2192B","Xair_MdDataInd"]},{"entry":["0x16","Voice Transport Data - Device 0","B\u2192A","Xair_MdDataReq"]},{"entry":["0x17","Voice Transport Data - Device 0","A\u2192B","Xair_MdDataInd"]},{"entry":["0x28","Voice Data - PCM - Packet 0 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x29","Voice Data - PCM - Packet 0 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x2A","Voice Data - PCM - Packet 1 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x2B","Voice Data - PCM - Packet 1 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x2C","Voice Data - PCM - Packet 2 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x2D","Voice Data - PCM - Packet 2 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x2E","Voice Data - PCM - Packet 3 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x2F","Voice Data - PCM - Packet 3 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x30","Voice Data - PCM - Packet 4 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x31","Voice Data - PCM - Packet 4 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x32","Voice Data - PCM - Packet 5 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x33","Voice Data - PCM - Packet 5 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x34","Voice Data - PCM - Packet 6 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x35","Voice Data - PCM - Packet 6 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x36","Voice Data - PCM - Packet 7 - Device 0","B\u2192A","Xair_MvTxRxInd"]},{"entry":["0x37","Voice Data - PCM - Packet 7 - Device 0","A\u2192B","Xair_MvTxRxInd"]},{"entry":["0x3E","Set Voice Coding Type","B\u2192A","Xair_MvSampleRateInd"]},{"entry":["0x3F","Voice Coding Type Response","A\u2192B","Xair_MvSampleRateInd"]},{"entry":["0x42","Link Status Request","B\u2192A","Xair_MdConnectConf"]},{"entry":[{},{},{},"Xair_MdDisconnectConf"]},{"entry":[{},{},{},"Xair_MvConnectConf"]},{"entry":[{},{},{},"Xair_MvDisconnectConf"]},{"entry":[{},{},{},"Xair_MmBindConf"]},{"entry":["0x43","Link Status","A\u2192B","Xair_MdConnectConf"]},{"entry":[{},{},{},"Xair_MdDisconnectConf"]},{"entry":[{},{},{},"Xair_MdDisconnectInd"]},{"entry":[{},{},{},"Xair_MvConnectConf"]},{"entry":[{},{},{},"Xair_MvDisconnectConf"]},{"entry":[{},{},{},"Xair_MvDisconnectInd"]},{"entry":[{},{},{},"Xair_MmBindConf"]},{"entry":["0x44","EEPROM Read Request","B\u2192A","Xair_MmReadReq"]},{"entry":["0x45","EEPROM Read Response","A\u2192B","Xair_MmReadConf"]},{"entry":["0x46","EEPROM Write Request","B\u2192A","Xair_MmWriteReq"]},{"entry":["0x47","EEPROM Write Response","A\u2192B","Xair_MmWriteConf"]},{"entry":["0x80","Startup Configuration Message","B\u2192A","Xair_MmStartReq"]},{"entry":["0x81","Startup Configuration Response","A\u2192B","Xair_MmStartConf"]},{"entry":["0x82","smart transceiver Startup Message Request","B\u2192A","Xair_MmStartReq"]},{"entry":["0x83","smart transceiver Startup Message","A\u2192B","Xair_MmStartConf"]},{"entry":[{},{},{},"Xair_MmResetInd"]},{"entry":["0x84","Application Configuration Request","B\u2192A","Xair_MmStartReq"]},{"entry":["0x85","Application Configuration Response","A\u2192B","Xair_MmStartConf"]},{"entry":["0xB8","Wireless Frame Sync Setup","B\u2192A","Option: Xair_MvTxRxInd"]},{"entry":["0xB9","Wireless Frame Sync Setup Response","A\u2192B","Option: Xair_MvTxRxInd"]},{"entry":["0xBB","Wireless Frame Sync","A\u2192B","Option: Xair_MvTxRxInd"]},{"entry":["0xC0","GPIO Setup Message","B\u2192A","Xair_MmStartReq"]},{"entry":["0xC1","GPIO Setup Response","A\u2192B","Xair_MmStartConf"]},{"entry":["0xC2","GPIO Read\/Write Message","B\u2192A","Xair_MgloReq"]},{"entry":["0xC3","GPIO status\/response Message","A\u2192B","Xair_MgloConf"]},{"entry":[{},{},{},"Xair_MgloInd"]},{"entry":["0xE0","Data Connection Request","B\u2192A","Xair_MdConnectReq"]},{"entry":[{},{},{},"Xair_MdDisconnectReq"]},{"entry":[{},{},{},"Xair_MmBindReq"]},{"entry":["0xE1","Data Connection Response","A\u2192B","Xair_MdConnectConf"]},{"entry":[{},{},{},"Xair_MdDisconnectConf"]},{"entry":[{},{},{},"Xair_MmBindConf"]},{"entry":["0xE2","Voice Connection Request","B\u2192A","Xair_MvConnectReq"]},{"entry":[{},{},{},"Xair_MvDisconnectReq"]},{"entry":["0xE3","Voice Connection Response","A\u2192B","Xair_MvConnectConf"]},{"entry":[{},{},{},"Xair_MvDisconnectConf"]},{"entry":["0xFF","SPI Mode Detect","A\u2192B","Xair_MmStartReq"]},{"entry":[{},{},{},"Xair_MmStartConf"]},{"entry":[{},{},{},"Xair_MmStartInd"]},{"entry":["\u2014","\u2014","\u2014","Xair_MdPurgeReq"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Appendix B provides details of various functions provided by the API services.","Lastly, while the present disclosure has been described in connection with the preferred aspects, as illustrated in the various figures, it is understood that other similar aspects may be used or modifications and additions may be made to the described aspects for performing the same function of the present disclosure without deviating there from. For example, in various aspects of the disclosure, a protocol and API were disclosed. However, other equivalent mechanisms to these described aspects are also contemplated by the teachings herein. Therefore, the present disclosure should not be limited to any single aspect, but rather construed in breadth and scope in accordance with the appended claims.","Smart Transceiver Startup Message","When the smart transceiver first starts up and the SPI mode has been detected and it is ready for SPI transfer it may load a startup message in its SPI output FIFO and assert the \u201cD_AVAIL#\u201d line. This message is typically used as a configuration message to let the master control application know the type of chip and its configuration. Even though the smart transceiver may automatically send this message at startup, the master control application may request it at any time with the smart transceiver Startup Message Request.","Smart Transceiver to Master Control Application",{"@attributes":{"id":"p-0118","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Smart transceiver Startup Message (0x83)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","0x83","1"]},{"entry":["1","Len = 10","1"]},{"entry":["2","SPI Protocol Version","2"]},{"entry":["4","Chip Hardware Version","2"]},{"entry":["6","Firmware Version","2"]},{"entry":["8","Abilities","1"]},{"entry":["9","Startup GPIO","2"]},{"entry":["10","Startup Event","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0119","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Smart transceiver Startup Message Request (0x82)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x82","1"]},{"entry":["1","0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"After the master control application has received the Smart transceiver startup message it may send a startup configuration message to the Smart transceiver Chip. This message may let the Smart transceiver know what SPI protocol version it is using and the output clock speed it wants. The response message may contain the configuration data that was sent for a debugging check. The current startup configuration may be polled by the master control application sending the command with a length of 0 (no payload).","Master Control Application to Smart Transceiver",{"@attributes":{"id":"p-0121","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Smart transceiver Startup Configuration Message (0x80)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x80","1"]},{"entry":["1","Len","1"]},{"entry":["2","EEPROM Type","1"]},{"entry":["3","EEPROM Length","2"]},{"entry":["5","SPI Protocol Version","2"]},{"entry":["7","Smart transceiver Output","1"]},{"entry":[{},"Clock Select"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Note that the response contains the data sent with the startup command as a confirmation it was received correctly.",{"@attributes":{"id":"p-0123","num":"0162"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Startup Configuration Response (0x81)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x81","1"]},{"entry":["1","Len = 0x7","1"]},{"entry":["2","Status","1"]},{"entry":["3","EEPROM Type","1"]},{"entry":["4","EEPROM Length","2"]},{"entry":["6","SPI Protocol Version","2"]},{"entry":["8","Smart transceiver Output","1"]},{"entry":[{},"Clock Select"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"If the SPI driver uses an SPI protocol version which is different than which the chip supports, the chip may return its supported version and not the requested version. It is the driver's responsibility to use a version the chip can operate with.","Mode Control","The master control application has ultimate control over the smart transceiver operation. The mode commands allow the master control application to change the smart transceiver between modes. The different reset modes reset the smart transceiver chip so that it can start from a known state. The power modes either power down the smart transceiver or put it into another power state. A mode change message may be acknowledged by the smart transceiver before the mode change occurs.","The mode control poll is a good choice to use for a \u201ckeep alive\u201d message for the master control application to determine the smart transceiver is still running correctly in different modes.","Master Control Application to Smart Transceiver","The master control application may send this command to the smart transceiver to change the mode or request the current mode. If no length is sent the request may be considered a poll of the current mode.",{"@attributes":{"id":"p-0128","num":"0167"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Mode Control Request (0x02)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x02","1"]},{"entry":["1","Len","1"]},{"entry":["2","Mode","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0129","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Mode Control Response (0x03)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x03","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Mode Accepted or","1"]},{"entry":[{},"Current state"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The Mode Control Response Message may be available at the SPI interface within 1 msec of reception of the Mode Control Request.","Message Buffer Warnings","Typically, the master control application may not send messages too fast for the smart transceiver to handle. Error messages are defined, however, in case the smart transceiver buffers are starting to fill. There is one message for warning the master control application about the buffers that are almost full. There is another message to clear the warning for a buffer type. In addition, there is a message for the smart transceiver to tell the master control application that the last message was rejected. The reject message would only be sent if the master control application ignores the buffer warning and sends data for that buffer anyway or if the message is wrong for the current application or state.","Smart Transceiver to Master Control Application Buffer Warning","This message may be sent by the smart transceiver when a buffer or buffers are almost filled. The smart transceiver firmware may be written such that it may send the warning when there is still room for at least one more message (not including the one currently being received). Anytime this message is sent a complete list of all buffers that are in a warning status may be sent. When the master control application receives a buffer warning, it should no longer send a buffer of that type until the warning is cleared.",{"@attributes":{"id":"p-0133","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 7"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Buffer Warning Message (0x05)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x05","1"]},{"entry":["1","Len","1"]},{"entry":["2","List of buffer types","Variable"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This message may be sent when a buffer in warning has sufficiently cleared to allow more messages. The payload may list each of the buffer types that are being cleared. This may only list the buffers that had the warning type set previously and which are now safe to write to.",{"@attributes":{"id":"p-0135","num":"0174"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 8"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Buffer Warning Cleared Message (0x07)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x07","1"]},{"entry":["1","Len","1"]},{"entry":["2","List of buffer types","Variable"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"With good master control application coding, this message should never be sent but it may be if the master control application ignores a buffer warning message and sends a buffer that cannot be accepted by the smart transceiver or if the message is wrong for the current application or state.",{"@attributes":{"id":"p-0137","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 9"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Message Fail (0x01)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x01","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Message type","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The master control application may request data to be written to or read from the EEPROM. Messages are limited to 32 bytes of data and only one message can be outstanding at a time (one EEPROM read or one write message).","EEPROM Read","The master control application can request data from the EEPROM. This is performed with a read request. Sometime later, when the smart transceiver chip as read the EEPROM, it may return the data over the SPI with the EEPROM read response message. Both messages contain the EEPROM offset and length being read, this lets the master control application sync its outstanding read request with the response. If there is an error, the smart transceiver may return a request with no EEPROM data read. The messaging allows the master control application processor to put a context in the message to be returned. This can be used in any way the master control application processor wants. For example, this may be a task number to resume when the response message is received.","Master Control Application to Smart Transceiver EEPROM Read Request",{"@attributes":{"id":"p-0140","num":"0179"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 10"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EEPROM Read Request (0x44)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x44","1"]},{"entry":["1","Len = 0x5","1"]},{"entry":["2","Offset","2"]},{"entry":["4","EEPROM data Length","1"]},{"entry":["5","Master control application","2"]},{"entry":[{},"Context"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0141","num":"0180"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 11"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EEPROM Read Response (0x45)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x45","1"]},{"entry":["1","Len = 0x5 + EEPROM","1"]},{"entry":[{},"data Length"]},{"entry":["2","Offset","2"]},{"entry":["4","EEPROM data Length","1"]},{"entry":["5","Master control application","2"]},{"entry":[{},"Context"]},{"entry":["7","Data","EEPROM"]},{"entry":[{},{},"data length"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The master control application can save nonvolatile data in the EEPROM. This is performed with a write request. Sometime later, after the smart transceiver chip has written the data and validated it, it may return a response message over the SPI channel to let the master control application know it is done. Both messages may contain the EEPROM offset and length being read, allowing the master control application to sync its outstanding write request with the response. If there is an error, the smart transceiver may return a request with an error status. The messaging allows the master control application processor to put a context in the message to be returned. This can be used any way the master control application processor wants. For example, this may be a task number to resume when the response message is received. Data written may be returned in the response so the master control application can verify the correct data was written.","Master Control Application to Smart Transceiver EEPROM Write Request",{"@attributes":{"id":"p-0143","num":"0182"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 12"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EEPROM Write Request (0x46)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x46","1"]},{"entry":["1","Len = 0x5 + Data to be","1"]},{"entry":[{},"written"]},{"entry":["2","Offset","2"]},{"entry":["4","EEPROM data Length","1"]},{"entry":["5","Master control application","2"]},{"entry":[{},"Context"]},{"entry":["7","Data","EEPROM"]},{"entry":[{},{},"data Length"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0144","num":"0183"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 13"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EEPROM Write Response (0x47)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x47","1"]},{"entry":["1","Len = 0x6 + Len of data","1"]},{"entry":[{},"repeated"]},{"entry":["2","Offset","2"]},{"entry":["4","EEPROM data Length","1"]},{"entry":["5","Master control application","2"]},{"entry":[{},"Context"]},{"entry":["7","Status","1"]},{"entry":["8","Data written","EEPROM"]},{"entry":[{},{},"data length"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"There two parts of the smart transceiver firmware that may be to know the current voice type.\n\n","When this comment is transmitted, the smart transceiver may change the HW encode type for the upstream path, if necessary, and also tag the upstream voice data with this type. If the command is sent without a payload, the Smart transceiver may send the current type.","Master Control Application to Smart Transceiver Set Voice Encoding Type",{"@attributes":{"id":"p-0147","num":"0188"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 14"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Set Voice Encoding Type (0x3E)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x3E","1"]},{"entry":["1","Len","1"]},{"entry":["2","Upstream Encode type"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0148","num":"0189"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 15"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Encoding Type Response (0x3F)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x3F","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Upstream Encode type"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The smart transceiver IC has spare GPIO pins that can be used by the master control application chip for either inputs or outputs. At the smart transceiver initialization time all of the spare GPIOs may be configured as inputs and their status may be sent as part of the smart transceiver Startup message. Messages may allow the master control application to configure the GPIOs and to read or write to the GPIOs. When configuring inputs, the master control application can request that GPIO status messages be sent whenever a requested input changes. These messages may be queued and ready to send to the master control application within 4 msec. The GPIO status messages are lower priority than buffer and mode messages.","In all GPIO commands, bit  maps to GPIO , bit  maps to GPIO , etc.","Master Control Application to Smart Transceiver GPIO Setup","If the master control application wants to use the GPIO of the smart transceiver it has to set them up correctly. There are separate bit maps to determine inputs and outputs.",{"@attributes":{"id":"p-0152","num":"0193"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 16"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GPIO SETUP (0xC0)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","0xC0","1"]},{"entry":["1","Len","1"]},{"entry":["2","Inputs","2"]},{"entry":["4","Outputs","2"]},{"entry":["6","Output Type","2"]},{"entry":["8","Initial Output state","2"]},{"entry":["10","Interrupt Mask","2"]},{"entry":["12","Input termination","4"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0153","num":"0194"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 17"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GPIO SETUP RESPONSE (0xC1)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","0xC1","1"]},{"entry":["1","Len = 8","1"]},{"entry":["2","Inputs","2"]},{"entry":["4","Outputs","2"]},{"entry":["6","Output Type","2"]},{"entry":["8","Initial Output state","2"]},{"entry":["10","Interrupt Mask","2"]},{"entry":["12","Input termination","4"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0154","num":"0195"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 18"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GPIO SETUP (0xC2)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xC2","1"]},{"entry":["1","Len","1"]},{"entry":["2","Clear Mask","2"]},{"entry":["4","Set Mask","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0155","num":"0196"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 19"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GPIO SETUP RESPONSE (0xC3)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xC3","1"]},{"entry":["1","Len = 2","1"]},{"entry":["2","Status","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The application may set up the frame sync message to be any location in the frame. By default the frame sync message may be turned off. When enabled the frame sync message may be loaded into the SPI buffer and made ready when the frame bit clock reaches the trigger value.","Master Control Application to Smart Transceiver Frame Sync Setup Request",{"@attributes":{"id":"p-0157","num":"0198"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 20"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame Sync Setup Request (0xB8)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xB8","1"]},{"entry":["1","Len","1"]},{"entry":["2","Location enumeration","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0158","num":"0199"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 21"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame Sync Setup Response (0xB9)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xB9","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Location enumeration","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0159","num":"0200"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 22"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Frame Sync Message (0xBB)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xBB","1"]},{"entry":["1","Len = 2","1"]},{"entry":["2","Frame number","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"To improve throughput across the SPI port, it is possible to synchronize the upstream and downstream voice data so both packets types are transferred simultaneously across the full-duplex connection.","The Voice Sync Setup Request message can be used to enable the feature.","Master Control Application to Smart Transceiver Voice Sync Setup Request","By default, when this message is enabled, the Frame Sync message may be disabled. When this message is disabled, the Frame Sync message may be enabled.",{"@attributes":{"id":"p-0163","num":"0204"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 23"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Sync Setup Request (0x38)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x38","1"]},{"entry":["1","Len","1"]},{"entry":["2","Location enumeration","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0164","num":"0205"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 24"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Sync Setup Response (0x39)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x39","1"]},{"entry":["1","Len","1"]},{"entry":["2","Location enumeration","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The master control application can use this message to begin full-duplex transport across the SPI interface.",{"@attributes":{"id":"p-0166","num":"0207"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 25"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Sync Message (0x3B)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x3B","1"]},{"entry":["1","Len = 2","1"]},{"entry":["1","CRC Status","1"]},{"entry":["1","Number of Packets","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The configuration messages allow the master control application to set the smart transceiver chip to the correct application with its specific options.","Set Application and Options","This mechanism allows the master control application to select the correct application and the various options for it.","Master Control Application to Smart Transceiver Application Configuration\u2014Third Party",{"@attributes":{"id":"p-0169","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 26"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Application Configuration, third party (0x84)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x84","1"]},{"entry":["1","Len = Config Length","1"]},{"entry":["2","Gamepad Application = 1","1"]},{"entry":["3","Option Flags","2"]},{"entry":["5","Upstream Voice Packet","1"]},{"entry":[{},"Size"]},{"entry":["6","Downstream Voice","1"]},{"entry":[{},"Packet Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0170","num":"0211"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 27"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SPI Application Configuration Response (0x85)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x85",{}]},{"entry":["1","Len","1"]},{"entry":["2","Config status","1"]},{"entry":["3","Gamepad Application = 1","1"]},{"entry":["4","Option Flags 1","2"]},{"entry":["6","Upstream Voice Packet","1"]},{"entry":[{},"Size",{}]},{"entry":["7","Downstream Voice","1"]},{"entry":[{},"Packet Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"If invalid option flags or voice packet size fields are detected by the smart transceiver, it may remain in the Pre-Application state until it receives a valid Application Configuration command.","Host Connections","Once the master control application is ready it may try to initiate a connection to the host. In the gamepad application it may first establish the data connection and once that is done it may try to establish a voice connection if there is a headset plugged in. Once connections are established they can be dropped because of three different instances:\n\n","Once the application is up and running it may ask the smart transceiver to connect to the host. The smart transceiver chip may use the protocol rules to find the host and select a wireless slot. As soon as the connection process is started, the host may return a connect request response. Once a slot is obtained a connection status report may be sent. If the master control application wants the connection dropped, it may set the Action to \u201cDrop Connection\u201d and send that message. The Smart transceiver may drop the connection and turn off the radio. A \u201cconnection dropped\u201d response may be returned. In addition, a link status message may be sent with a link status of \u201cSlot dropped per master control application request\u201d, and then a link status of \u201cRadio off\u201d.","The master control application shouldn't send any data to be transferred before it receives a link status message indicating the link was acquired. If it does, the data may get flushed and never sent.","Master Control Application to Smart Transceiver Data Connection Request","Note that this command may include a field for initial reports.",{"@attributes":{"id":"p-0176","num":"0220"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 28"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Data Connection Request (0xE0)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xE0","1"]},{"entry":["1","Len","1"]},{"entry":["2","Action","1"]},{"entry":["3","Initial Reports","Reports Len"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0177","num":"0221"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 29"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Data Connection Response (0xE1)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xE1","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Status","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Once the application is up and running and a headset is plugged in and a data connection is obtained, the master control application may ask the smart transceiver for a voice connection. The smart transceiver chip may use the gamepad voice protocol rules to select a wireless slot. As soon as the connection process is started, the host may return a connect request response. Once a slot is obtained a connection status report may be sent.","Master Control Application to Smart Transceiver Voice Connection Request",{"@attributes":{"id":"p-0179","num":"0223"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 30"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Connection Request (0xE2)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xE2","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Action","1"]},{"entry":["3","Initial Reports","Reports Len"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0180","num":"0224"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 31"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Connection Response (0xE3)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xE3","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Status","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The master control application may want to query link status. In addition, the smart transceiver application may want to send messages when the link status changes.","Voice Slot Availability","Master Control Application to Smart Transceiver Link Status Request",{"@attributes":{"id":"p-0182","num":"0226"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 32"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Link Status Request (0x42)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x42","1"]},{"entry":["1","Len = 0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0183","num":"0227"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 33"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Link Status Response (0x43)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x43","1"]},{"entry":["1","Len = 2","1"]},{"entry":["2","Device Status","1"]},{"entry":["3","Voice Status","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Once the applications are up and running and the radio links are obtained, most of the transfers are buffer transfers for data to be sent or data that was received. Each data type defined in the protocol has its own set of buffers. For upstream messages, the master control application may send buffers as it has them. If the buffer allocation for a particular data type is low the Smart transceiver chip may send a warning with the buffer type that is low. The master control application can only send one more buffer of that type (including one that may be simultaneously being transferred) until it gets a \u201cwarning clear\u201d. In practice, it is assumed that there are enough buffers that the warnings may never happen. As the smart transceiver receives messages from the wireless channel, it may send them on to the master control application using the correct data type message.","Master Control Application to Smart Transceiver (Upstream) Buffers","Controller Header Report","Controller header reports are the status reports sent via the wireless header. An example of these is the device type report.",{"@attributes":{"id":"p-0186","num":"0230"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 34"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Controller Header Report (0x08)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x08","1"]},{"entry":["1","Len","1"]},{"entry":["2","Header buffer","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0187","num":"0231"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 35"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Controller Data (0x0C)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","0x0C","1"]},{"entry":["1","Len = 19","1"]},{"entry":["2","Controller buffer","19"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0188","num":"0232"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","0x12","1"]},{"entry":["1","Len","1"]},{"entry":["2","Controller transport buffer","24"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This buffer type may be for all buffer types that do not have a dedicated buffer message",{"@attributes":{"id":"p-0190","num":"0234"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 36"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Generic Report Buffer (0x0A)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x0A","1"]},{"entry":["1","Len","1"]},{"entry":["2","Packet Type","1"]},{"entry":["3","Buffer data","Variable"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}]},{"@attributes":{"id":"p-0191","num":"0235"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 37"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Controller Header Request (0x09)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x09","1"]},{"entry":["1","Len","1"]},{"entry":["2","Header buffer","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0192","num":"0236"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 38"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Controller Data Buffer (0x0D)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x0D","1"]},{"entry":["1","Len","1"]},{"entry":["2","Controller Data buffer","8"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0193","num":"0237"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 39"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Controller Transport (0x13)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x13","1"]},{"entry":["1","Len","1"]},{"entry":["2","Controller transport buffer","8"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This buffer type may handle all of the reserved or unsupported wireless packet types.",{"@attributes":{"id":"p-0195","num":"0239"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 40"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Generic Request Buffer (0x0B)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x0B",{}]},{"entry":["1","Len","1"]},{"entry":["2","Packet type","1"]},{"entry":["2","Buffer data","8"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The voice buffers may be the longest data that can be sent in one message on a regular basis. To allow better use of the full-duplex bus, the master control application may configure the voice buffers to be split into smaller pieces. This configuration may be set at startup and not set on the fly. Packet  may considered the base type and if the voice is not split up it may be the only voice packet type transferred. The master control application processor may let the smart transceiver chip know which type of coding is being used so that it can put the correct data type in the voice header. If the smart transceiver is performing the voice encoding it may use the type that the master control application has set. The smart transceiver may need to keep track of the voice packets received over SPI and ensure that, when split packets are used, all packets are received before the complete buffer is sent over the wireless channel. The master control application may need to provide similar functionality on the data it receives from the smart transceiver.","Master Control Application to Smart Transceiver (Upstream) Buffers","Voice Header Report",{"@attributes":{"id":"p-0197","num":"0241"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 41"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Header Report (0x14)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x14","1"]},{"entry":["1","Len","1"]},{"entry":["2","Header buffer","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0198","num":"0242"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 42"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Transport Report (0x16)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","0x16","1"]},{"entry":["1","Len","1"]},{"entry":["2","Voice Transport buffer","24"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":["0","7"]},"If the master control application has configured the application to provide voice decode and encode, these packet types may be used to fill the buffer. The configuration option \u201cUpstream Voice Packet Count\u201d may be used to control which packets are sent. Packets with different command codes may be used so that the smart transceiver can set up its DMA to point to the correct buffer location. Table 43 shows the maximum packet sizes used for PCM packets.","All PCM samples may be 16-bit, 2's compliment, little-endian format. This means the first byte is the low byte of the first sample, the second byte is the high byte of the first sample, etc. In addition, if an ADC is used that is less than 16 bits, the samples may be left justified.",{"@attributes":{"id":"p-0201","num":"0245"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 43"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Upstream PCM Voice Packet Size vs. Number of packets"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Max Packet Size",{}]},{"entry":[{},"Packet Count","(bytes)","Packets Sent"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"4","64","Packet 0-Packet 3"]},{"entry":[{},"8","32","Packet 0-Packet 7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0202","num":"0246"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 44"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PCM Voice Buffer (0x28-0x36)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x28 for packet 0","1"]},{"entry":[{},"0x2A for packet 1"]},{"entry":[{},"0x2C for packet 2"]},{"entry":[{},"0x2E for packet 3"]},{"entry":[{},"0x30 for packet 4"]},{"entry":[{},"0x32 for packet 5"]},{"entry":[{},"0x34 for packet 6"]},{"entry":[{},"0x36 for packet 7"]},{"entry":["1","Len","1"]},{"entry":["2","Voice buffer","See Table 43"]},{"entry":[{},{},"for sizes"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}]},{"@attributes":{"id":"p-0203","num":"0247"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 45"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Header Request (0x15)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x15","1"]},{"entry":["1","Len","1"]},{"entry":["2","Header buffer","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0204","num":"0248"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 46"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Transport Report (0x17)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x17","1"]},{"entry":["1","Len","1"]},{"entry":["2","Voice Transport buffer","8"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":["0","7"]},"If the master control application has configured the application to provide voice decode and encode, these packet types may be sent. The configuration option \u201cDownstream Voice Packet Count\u201d may be used to control how many packets are sent. Table 47 shows the maximum packet sizes used for PCM packets. Note that the packets may contain an extra byte for status to let the master control application processor know whether the data CRC validated. \u201cBad\u201d data may only be sent if the master control application has configured the smart transceiver for it.",{"@attributes":{"id":"p-0206","num":"0250"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 47"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Downstream PCM Voice Packet Size vs.. Number of packets"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Max Packet Size",{}]},{"entry":[{},"Packet Count","(bytes)","Packets Sent"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"2","64","Packet 0, Packet 1"]},{"entry":[{},"4","32","Packet 0-Packet 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0207","num":"0251"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 48"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PCM Voice Buffer Packets 0-7 (0x29-0x37)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x29 for packet 0","1"]},{"entry":[{},"0x2B for packet 1"]},{"entry":[{},"0x2D for packet 2"]},{"entry":[{},"0x2F for packet 3"]},{"entry":[{},"0x31 for packet 4"]},{"entry":[{},"0x33 for packet 5"]},{"entry":[{},"0x35 for packet 6"]},{"entry":[{},"0x37 for packet 7"]},{"entry":["1","Len","1"]},{"entry":["2","Status","1"]},{"entry":["3","Voice buffer","See Table 47"]},{"entry":[{},{},"for sizes"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The configuration messages allow the master control application to set the smart transceiver chip to the correct application with its specific options.","Set Application and Options","This mechanism allows the master control application to select the correct application and the various options for it.","Master Control Application to Smart Transceiver Application Configuration\u2014Third Party",{"@attributes":{"id":"p-0210","num":"0254"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 49"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Application Configuration, third party (0x84)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x84","1"]},{"entry":["1","Len = Config Length","1"]},{"entry":["2","Voice Application = 2","1"]},{"entry":["3","Option Flags 1","2"]},{"entry":["5","Upstream Voice Packet","1"]},{"entry":[{},"Size"]},{"entry":["6","Downstream Voice","1"]},{"entry":[{},"Packet Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0211","num":"0255"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 50"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Application Configuration Response (0x85)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x85","1"]},{"entry":["1","Len","1"]},{"entry":["2","Config status","1"]},{"entry":["3","Voice Application = 2","1"]},{"entry":["4","Option Flags 1","2"]},{"entry":["6","Upstream Voice Packet","1"]},{"entry":[{},"Size"]},{"entry":["7","Downstream Voice","1"]},{"entry":[{},"Packet Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Once the master control application is ready it may try to initiate a connection to the host. In the voice device application it may first search for and sync with the host and then may establish a voice slot connection using the voice device protocol. Once connections are established they can be dropped because of three different instances:\n\n","Once the application is up and running the master control application may ask the smart transceiver for a voice connection. The smart transceiver chip may use the voice device protocol rules to select a wireless slot. As soon as the connection process is started, the host may return a connect request response. Once a slot is obtained a connection status report may be sent. If there is no binding information the smart transceiver may return an error connection response.","Master Control Application to Smart Transceiver Voice Connection Request",{"@attributes":{"id":"p-0214","num":"0261"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 51"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Connection Request (0xE2)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xE2","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Action","1"]},{"entry":["3","Initial Reports","Reports Len"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0215","num":"0262"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 52"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Connection Response (0xE3)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0xE3","1"]},{"entry":["1","Len = 1","1"]},{"entry":["2","Status","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The master control application may want to query link status. In addition, the smart transceiver application may want to send messages when the link status changes.","Voice Slot Availability","Master Control Application to Smart Transceiver Link Status Request",{"@attributes":{"id":"p-0217","num":"0264"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 53"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Link Status Request (0x42)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x42","1"]},{"entry":["1","Len = 0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0218","num":"0265"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 54"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Link Status Response (0x43)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x43","1"]},{"entry":["1","Len = 2","1"]},{"entry":["2","Device Status","1"]},{"entry":["3","Voice Status","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The voice buffers are the longest data that can be sent in one message on a regular basis. To allow better use of the full-duplex bus, the master control application may configure the voice buffers to be split into smaller pieces. This configuration may be set at startup and not on the fly. Packet  is considered the base type and if the voice is not split up it may be the only voice packet type transferred. The master control application processor may let the smart transceiver chip know which type of coding is being used so that it can put the correct data type in the voice header. If the smart transceiver is performing the voice encoding it may use the type that the master control application has set. The smart transceiver may need to keep track of the voice packets received over SPI and ensure that, when split packets are used, all packets are received before the complete buffer is sent over the wireless channel. The master control application may need to provide similar functionality on the data it receives from the smart transceiver.","Master Control Application to Smart Transceiver (Upstream) Buffers","Voice Header Report",{"@attributes":{"id":"p-0220","num":"0267"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 55"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Header Report (0x14)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x14","1"]},{"entry":["1","Len","1"]},{"entry":["2","Header buffer","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Voice transport is used in voice devices for command request and status reporting.",{"@attributes":{"id":"p-0222","num":"0269"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 56"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Transport Report (0x16)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","0x16","1"]},{"entry":["1","Len","1"]},{"entry":["2","Voice Transport buffer","24"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":["0","7"]},"If the master control application has configured the application to provide voice decode and encode, these packet types may be used to fill the buffer. The configuration option \u201cUpstream Voice Packet Count\u201d may be used to control which packets are sent. Packets with different command codes may be used so that the smart transceiver can set up its DMA to point to the correct buffer location. Table 43 shows the maximum packet sizes used for PCM packets.","All PCM samples are 16-bit, 2's compliment, little-endian format. This means the first byte is the low byte of the first sample, the second byte is the high byte of the first sample, etc. In addition, if an ADC is used that is less than 16 bits, the samples may be left justified.",{"@attributes":{"id":"p-0225","num":"0272"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 57"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Upstream PCM Voice Packet Size vs. Number of packets"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Max Packet Size",{}]},{"entry":[{},"Packet Count","(bytes)","Packets Sent"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"4","64","Packet 0 - Packet 3"]},{"entry":[{},"8","32","Packet 0 - Packet 7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0226","num":"0273"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 58"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PCM Voice Buffer (0x28-0x36)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x28 for packet 0","1"]},{"entry":[{},"0x2A for packet 1"]},{"entry":[{},"0x2C for packet 2"]},{"entry":[{},"0x2E for packet 3"]},{"entry":[{},"0x30 for packet 4"]},{"entry":[{},"0x32 for packet 5"]},{"entry":[{},"0x34 for packet 6"]},{"entry":[{},"0x36 for packet 7"]},{"entry":["1","Len","1"]},{"entry":["2","Voice buffer","See Table 57"]},{"entry":[{},{},"for sizes"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}]},{"@attributes":{"id":"p-0227","num":"0274"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 59"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Header Request (0x15)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x15","1"]},{"entry":["1","Len","1"]},{"entry":["2","Header buffer","2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Voice transport may be used in voice devices for command request and status reporting.",{"@attributes":{"id":"p-0229","num":"0276"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 60"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Voice Transport Report (0x17)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x17","1"]},{"entry":["1","Len","1"]},{"entry":["2","Voice Transport buffer","8"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":["0","7"]},"If the master control application has configured the application to provide voice decode and encode, these packet types are sent. The configuration option \u201cDownstream Voice Packet Count\u201d is used to control how many packets are sent. Table 47 shows the maximum packet sizes used for PCM packets. Note that the packets contain an extra byte for status to let the master control application processor know whether the data CRC validated.",{"@attributes":{"id":"p-0231","num":"0278"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 61"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Downstream PCM Voice Packet Size vs.. Number of packets"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Packet Count","Max Packet Size","Packets Sent"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"2","64","Packet 0, Packet 1"]},{"entry":[{},"4","32","Packet 0 - Packet 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0232","num":"0279"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 62"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PCM Voice Buffer Packets 0-7 (0x29-0x37)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Offset","Field","Size"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["0","0x29 for packet 0","1"]},{"entry":[{},"0x2B for packet 1"]},{"entry":[{},"0x2D for packet 2"]},{"entry":[{},"0x2F for packet 3"]},{"entry":[{},"0x31 for packet 4"]},{"entry":[{},"0x33 for packet 5"]},{"entry":[{},"0x35 for packet 6"]},{"entry":[{},"0x37 for packet 7"]},{"entry":["1","Len","1"]},{"entry":["2","Status","1"]},{"entry":["3","Voice buffer","See Table 61"]},{"entry":[{},{},"for sizes"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Request Functions for the Data Service","API request functions may be called from the application in order to initiate an action in the communication stack at the API level. API functions may be prefixed with and suffixed with _req.",{"@attributes":{"id":"p-0234","num":"0281"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MdDataReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MdDataReq ( XAIR_UP_PACKET_T PacketType,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003uint8 \u2003\u2003\u2003* Data );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Sends an upstream data packet to the master device. The amount of local"]},{"entry":[{},"buffering is defined in the API configuration. The default buffer depth is 4,"]},{"entry":[{},"meaning data is copied once and up to four buffers are available. At least one"]},{"entry":[{},"buffer is needed because of asynchronous execution."]},{"entry":["Input","PacketType: The size of the data buffer is also determined by the packet"]},{"entry":["Parameter","type"]},{"entry":[{},"Data: points to the data to transmit"]},{"entry":["Return Value","XAIR_SUCCESS: The contents of the data buffer was"]},{"entry":[{},"copied and is scheduled to be sent to the smart"]},{"entry":[{},"transceiver chip."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because there is"]},{"entry":[{},"no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_OVERLOAD: The operation failed because"]},{"entry":[{},"currently this packet type is not accepted for"]},{"entry":[{},"transmission on the radio link (flow control by the smart"]},{"entry":[{},"transceiver). This may happen when the throughput of the"]},{"entry":[{},"radio link was exceeded."]},{"entry":[{},"XAIR_CLOSED: The operation failed because the data"]},{"entry":[{},"connection is closed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0235","num":"0282"},"tables":{"@attributes":{"id":"TABLE-US-00072","num":"00072"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MdConnectReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MdConnectReq ( uint8 * Data );"]},{"entry":["Execution","Asynchronous"]},{"entry":["Description","Establishes a data connection to the master device."]},{"entry":["Input","Data: points to the data to transmit"]},{"entry":"Parameter"},{"entry":["Return Value","XAIR_SUCCESS: A data connection request was"]},{"entry":[{},"initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0236","num":"0283"},"tables":{"@attributes":{"id":"TABLE-US-00073","num":"00073"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 63"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Device Subtypes"},{"entry":"Xair_MdDisconnectReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MdConnectReq ( void );"]},{"entry":["Execution","Asynchronous"]},{"entry":["Description","Establishes a data connection to the master device."]},{"entry":["Input","\u2014"]},{"entry":"Parameter"},{"entry":["Return Value","XAIR_SUCCESS: A data connection release was"]},{"entry":[{},"initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0237","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00074","num":"00074"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MdDataInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MD_DATA_IND"]},{"entry":["Description","Receives a downstream data packet from the master device."]},{"entry":["Parameter 1","XAIR_DOWN_PACKET_T *: ."]},{"entry":["Parameter 2","uint8 *: points to the data to be received. The size is"]},{"entry":[{},"determined by the packet type"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0238","num":"0285"},"tables":{"@attributes":{"id":"TABLE-US-00075","num":"00075"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MdConnectConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MD_CONNECT_CONF"]},{"entry":["Description","Reply to the data connection request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the"]},{"entry":[{},"connection request."]},{"entry":[{},"XAIR_SUCCESS: The data connection is established."]},{"entry":[{},"XAIR_ERROR: The operation failed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0239","num":"0286"},"tables":{"@attributes":{"id":"TABLE-US-00076","num":"00076"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MdDisconnectConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MD_DISCONNECT_CONF"]},{"entry":["Description","Reply to the data connection release request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the release"]},{"entry":[{},"request."]},{"entry":[{},"XAIR_SUCCESS: The data connection is now closed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0240","num":"0287"},"tables":{"@attributes":{"id":"TABLE-US-00077","num":"00077"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MdDisconnectInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Event","XAIR_MD_DISCONNECT_IND"]},{"entry":[{},"Description","Unsolicited indication of a data connection failure."]},{"entry":[{},"Parameter 1","XAIR_RESULT_T *: points to the reason for the"]},{"entry":[{},{},"indication."]},{"entry":[{},{},"XAIR_CLOSED: The radio link was closed."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0241","num":"0288"},"tables":{"@attributes":{"id":"TABLE-US-00078","num":"00078"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MvConnectReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MvConnectReq ( uint8 * Data );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Establishes a voice connection to the master device."]},{"entry":[{},"At first the smart transceiver audio codec will be switched"]},{"entry":[{},"to the default audio codec type, which is defined in"]},{"entry":[{},"<xair_api_xib.h>. Then the voice connection"]},{"entry":[{},"request is send to the smart transceiver chip."]},{"entry":["Input","Data: points to the data to transmit"]},{"entry":"Parameter"},{"entry":["Return Value","XAIR_SUCCESS: A voice connection request was"]},{"entry":[{},"initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0242","num":"0289"},"tables":{"@attributes":{"id":"TABLE-US-00079","num":"00079"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MvDisconnectReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MvDisconnectReq ( void );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description",".Releases an existing voice connection to the master device."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: A voice connection release was"]},{"entry":[{},"initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0243","num":"0290"},"tables":{"@attributes":{"id":"TABLE-US-00080","num":"00080"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MvTxRxInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MV_RX_TX_IND"]},{"entry":["Description","This event is needed to ensure the synchronous processing"]},{"entry":[{},"of voice packet exchange relative to the wireless framing"]},{"entry":[{},"signal. The event occurs after all upstream\/downstream"]},{"entry":[{},"voice packets of a wireless frame are exchanged via the SPI"]},{"entry":[{},"between the backend controller and the smart transceiver"]},{"entry":[{},"chip. Note: For audio clock synchronization the backend"]},{"entry":[{},"controller has to use the hardware frame sync signal."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0244","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00081","num":"00081"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MvConnectConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MV_CONNECT_CONF"]},{"entry":["Description","Reply to the voice connection request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the"]},{"entry":[{},"connection request."]},{"entry":[{},"XAIR_SUCCESS: The voice connection is established."]},{"entry":[{},"XAIR_ERROR: The operation failed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0245","num":"0292"},"tables":{"@attributes":{"id":"TABLE-US-00082","num":"00082"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MvDisconnectConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MV_DISCONNECT_CONF"]},{"entry":["Description","Reply to the voice connection release request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the release"]},{"entry":[{},"request."]},{"entry":[{},"XAIR_SUCCESS: The voice connection is now closed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0246","num":"0293"},"tables":{"@attributes":{"id":"TABLE-US-00083","num":"00083"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MvDisconnectInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Event","XAIR_MV_DISCONNECT_IND"]},{"entry":[{},"Description","Unsolicited indication of a voice connection failure."]},{"entry":[{},"Parameter 1","XAIR_RESULT_T *: points to the reason"]},{"entry":[{},{},"for the indication."]},{"entry":[{},{},"XAIR_CLOSED: The radio link was closed."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0247","num":"0294"},"tables":{"@attributes":{"id":"TABLE-US-00084","num":"00084"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MvSampleRateInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Event","XAIR_MV_SAMPLE_RATE_IND"]},{"entry":[{},"Description","Indication of an upstream voice sample rate change."]},{"entry":[{},"Parameter 1","XAIR_RESULT_T *: points to the reason for the"]},{"entry":[{},{},"indication."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0248","num":"0295"},"tables":{"@attributes":{"id":"TABLE-US-00085","num":"00085"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmInitReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmInitReq ( void );"]},{"entry":["Execution","Synchronous."]},{"entry":["Description","Initializes the API internal resources."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: Currently no failure case is defined"]},{"entry":[{},"for this operation."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0249","num":"0296"},"tables":{"@attributes":{"id":"TABLE-US-00086","num":"00086"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmStartReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmStartReq ( void );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Establishes the communication with the smart transceiver"]},{"entry":[{},"chip and sets up the configuration as defined by the XIB"]},{"entry":[{},"attributes."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: A start request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_CONNECTED: The operation failed because at"]},{"entry":[{},"least one connection is established. Disconnect (or software"]},{"entry":[{},"reset) first."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0250","num":"0297"},"tables":{"@attributes":{"id":"TABLE-US-00087","num":"00087"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmResetReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmResetReq ( void );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Requests a software reset of the smart transceiver chip."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: A reset request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0251","num":"0298"},"tables":{"@attributes":{"id":"TABLE-US-00088","num":"00088"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmPowerDownReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmPowerDownReq ( void );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Requests a power down of the smart transceiver chip."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: A power down request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0252","num":"0299"},"tables":{"@attributes":{"id":"TABLE-US-00089","num":"00089"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmBindReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmBindReq ( void );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Requests a binding to a master device. Both devices"]},{"entry":[{},"(master and slave) must be in this state to have a"]},{"entry":[{},"successful binding. An existing binding is valid until"]},{"entry":[{},"the next successful bind request is performed."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: A bind request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0253","num":"0300"},"tables":{"@attributes":{"id":"TABLE-US-00090","num":"00090"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmStopBindReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmStopBindReq ( void );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Cancels the request of a binding to a master device."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: A stop bind request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0254","num":"0301"},"tables":{"@attributes":{"id":"TABLE-US-00091","num":"00091"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmReadReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmReadReq ( uint16 Offset,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003uint8 Size,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003uint16 BackendContext );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Reads data from the EEPROM of the smart transceiver"]},{"entry":[{},"chip."]},{"entry":["Input","Offset: addresses the EEPROM area to be read from."]},{"entry":["Parameter","Size: defines the number of bytes to read."]},{"entry":[{},"BackendContext: defines a context of backend for the"]},{"entry":[{},"request"]},{"entry":["Return Value","XAIR_SUCCESS: A read request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0255","num":"0302"},"tables":{"@attributes":{"id":"TABLE-US-00092","num":"00092"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmWriteReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MmWriteReq ( uint16 Offset,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003uint8 \u2003Size,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003uint8 \u2003* Data,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003uint16 BackendContext);"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Writes data from the EEPROM of the smart transceiver"]},{"entry":[{},"chip."]},{"entry":["Input","Offset: addresses the EEPROM area to be written to."]},{"entry":["Parameter","Size: defines the number of bytes to write."]},{"entry":[{},"Data: points to the data to be written."]},{"entry":[{},"BackendContext: defines a context of backend for the"]},{"entry":[{},"request"]},{"entry":["Return Value","XAIR_SUCCESS: A write request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API flow"]},{"entry":[{},"control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip is not"]},{"entry":[{},"established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0256","num":"0303"},"tables":{"@attributes":{"id":"TABLE-US-00093","num":"00093"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_Mmsmart transceiverComReadyInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_smart transceiver_COM_READY_IND"]},{"entry":["Description","Indication for a ready SPI communication link between the"]},{"entry":[{},"master controller and smart transceiver. It will be generated"]},{"entry":[{},"after a successful run of the SPI autodetection."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0257","num":"0304"},"tables":{"@attributes":{"id":"TABLE-US-00094","num":"00094"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmStartConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_START_CONF"]},{"entry":["Description","Reply to the start request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the start"]},{"entry":[{},"request."]},{"entry":[{},"XAIR_SUCCESS: The communication to the smart"]},{"entry":[{},"transceiver chip is established and configured."]},{"entry":[{},"XAIR_MISCONFIG: The configuration of the smart"]},{"entry":[{},"transceiver chip failed."]},{"entry":["Parameter 2","uint8 *: if successful, points to the return data of the"]},{"entry":[{},"startup message."]},{"entry":[{},"uint16: SpiProtocolVersion"]},{"entry":[{},"uint16: ChipHardwareVersion"]},{"entry":[{},"uint16: FirmwareVersion"]},{"entry":[{},"uint8: Abilities"]},{"entry":[{},"uint16: StartupGpio"]},{"entry":[{},"uint8: StartupEvent"]},{"entry":[{},"uint8 *: if start failure (XAIR_MISCONFIG), points to the"]},{"entry":[{},"return data of the message which is failed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0258","num":"0305"},"tables":{"@attributes":{"id":"TABLE-US-00095","num":"00095"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmResetInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_RESET_IND"]},{"entry":["Description","Unsolicited indication of an smart transceiver chip reset."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the reason for the"]},{"entry":[{},"indication."]},{"entry":[{},"XAIR_RESET: The smart transceiver chip reports an"]},{"entry":[{},"(unexpected) reset."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0259","num":"0306"},"tables":{"@attributes":{"id":"TABLE-US-00096","num":"00096"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmBindConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_BIND_CONF"]},{"entry":["Description","Reply to the bind request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the bind"]},{"entry":[{},"request."]},{"entry":[{},"XAIR_SUCCESS: The binding to a (new) master device"]},{"entry":[{},"was successful."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0260","num":"0307"},"tables":{"@attributes":{"id":"TABLE-US-00097","num":"00097"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmStopBindConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_STOP_BIND_CONF"]},{"entry":["Description","Reply to the stop bind request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the bind"]},{"entry":[{},"request."]},{"entry":[{},"XAIR_SUCCESS: The binding was stopped."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0261","num":"0308"},"tables":{"@attributes":{"id":"TABLE-US-00098","num":"00098"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmReadConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_READ_CONF"]},{"entry":["Description","Reply to the read request."]},{"entry":["Parameter 1","uint16 *: points to the offset in the EEPROM."]},{"entry":["Parameter 2","uint8 *: points to the length of the data which are read"]},{"entry":[{},"out (0 if an error occurred)."]},{"entry":["Parameter 3","Uint16 *: points to the backend context."]},{"entry":["Parameter 4","uint8 *: points to the data which are read out. The length"]},{"entry":[{},"is given by Parameter 2."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0262","num":"0309"},"tables":{"@attributes":{"id":"TABLE-US-00099","num":"00099"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmWriteConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_WRITE_CONF"]},{"entry":["Description","Reply to the write request."]},{"entry":["Parameter 1","uint16 *: points to the offset in the EEPROM."]},{"entry":["Parameter 2","uint16 *: points to the backend context."]},{"entry":["Parameter 3","uint8 *: points to the status of writing the data."]},{"entry":[{},"0, successful"]},{"entry":[{},"1, not written outstanding request already being processed"]},{"entry":[{},"2, address error"]},{"entry":[{},"3, write error hardware access failed"]},{"entry":[{},"4, validation error written data not equal to read back data"]},{"entry":["Parameter 4","uint8 *: points to the data that were written."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0263","num":"0310"},"tables":{"@attributes":{"id":"TABLE-US-00100","num":"00100"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MmSyncInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MM_SYNC_IND"]},{"entry":["Description","Indicates a wireless frame sync event. The frame sync"]},{"entry":[{},"position can be setup in the xair_api_xib.h with the define"]},{"entry":[{},"XIB_SYNC_EVENT_POSITION."]},{"entry":[{},"SYNC_EVENT_OFF"]},{"entry":[{},"SYNC_EVENT_FRAMESTART"]},{"entry":[{},"SYNC_EVENT_BROADCAST"]},{"entry":[{},"SYNC_EVENT_RX_FINISHED"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0264","num":"0311"},"tables":{"@attributes":{"id":"TABLE-US-00101","num":"00101"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MgIoReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Function","XAIR_RESULT_T Xair_MgIoReq ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"uint16 OutputClearMask,"]},{"entry":[{},{},"uint16 OutputSetMask );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Execution","Asynchronous."]},{"entry":["Description","Changes the GPIO output pins of the smart transceiver chip"]},{"entry":[{},"and requests the current input pin state."]},{"entry":["Input","OutputClearMask: 16 bit, little-endian, bit cleared means"]},{"entry":["Parameter","ignore, bit set means clear this output pin."]},{"entry":[{},"OutputSetMask: 16 bit, little-endian, bit cleared means"]},{"entry":[{},"ignore, bit set means set this output pin."]},{"entry":["Return Value","XAIR_SUCCESS: The IO request was initiated."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API"]},{"entry":[{},"flow control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed because"]},{"entry":[{},"the communication to the smart transceiver chip"]},{"entry":[{},"is not established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0265","num":"0312"},"tables":{"@attributes":{"id":"TABLE-US-00102","num":"00102"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MgIoConf"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MG_IO_CONF"]},{"entry":["Description","Reply to the GPIO setup request."]},{"entry":["Parameter 1","XAIR_RESULT_T *: points to the result of the"]},{"entry":[{},"setup request."]},{"entry":[{},"XAIR_SUCCESS: The GPIO setup was successful."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The communication to"]},{"entry":[{},"the smart transceiver chip failed."]},{"entry":["Parameter 2","uint16 *: points to the GPIO state (little-endian, both input"]},{"entry":[{},"and output pin states are included)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0266","num":"0313"},"tables":{"@attributes":{"id":"TABLE-US-00103","num":"00103"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MgIoInd"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Event","XAIR_MG_IO_IND"]},{"entry":["Description","Unsolicited indication of the GPIO state when a relevant"]},{"entry":[{},"change (see interrupt mask in XIB) has occurred.."]},{"entry":["Parameter 1","uint16 *: points to the GPIO state (little-endian, both input"]},{"entry":[{},"and output pin states are included)."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0267","num":"0314"},"tables":{"@attributes":{"id":"TABLE-US-00104","num":"00104"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_MpSendRawSpiDataReq"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_MpSendRawSpiDataReq"]},{"entry":[{},"( uint8 *Data );"]},{"entry":["Execution","Asynchronous."]},{"entry":["Description","Send direct an unformatted SPI message to the smart"]},{"entry":[{},"transceiver wireless transceiver via the SPI"]},{"entry":[{},"communication interface."]},{"entry":["Input","Data: Pointer to the SPI message"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_SUCCESS: Send raw spi data request"]},{"entry":[{},"successful."]},{"entry":[{},"XAIR_BUFFER_FULL: The operation failed because"]},{"entry":[{},"there is no space available to queue the request (API"]},{"entry":[{},"flow control)."]},{"entry":[{},"XAIR_NOT_AVAILABLE: The operation failed"]},{"entry":[{},"because the communication to the smart transceiver chip is"]},{"entry":[{},"not established and configured."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0268","num":"0315"},"tables":{"@attributes":{"id":"TABLE-US-00105","num":"00105"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_GetEvent"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_EVENT_T Xair_GetEvent ( void );"]},{"entry":["Execution","Synchronous."]},{"entry":["Description","Checks for an event from the API to feed the next cycle of"]},{"entry":[{},"the application event loop."]},{"entry":["Input","\u2014"]},{"entry":["Parameter",{}]},{"entry":["Return Value","XAIR_NULL_EVENT: No event available."]},{"entry":[{},"XAIR_M...: The respective API event occurred."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0269","num":"0316"},"tables":{"@attributes":{"id":"TABLE-US-00106","num":"00106"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_ReadEventDetails"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Function","XAIR_RESULT_T Xair_ReadEventDetails ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POINTER_T * Param1,"]},{"entry":[{},"POINTER_T * Param2,"]},{"entry":[{},"POINTER_T * Param3,"]},{"entry":[{},"POINTER_T * Param4 );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Execution","Synchronous."]},{"entry":["Description","Reads the event details from the internal buffers of the API."]},{"entry":[{},"The parameters returned (i.e. the internal buffers and the"]},{"entry":[{},"pointers to them) are valid until Xair_GetEvent is"]},{"entry":[{},"called again."]},{"entry":["Output","Param1: points to the first parameter of the most"]},{"entry":["Parameter","recent event upon successful function"]},{"entry":[{},"completion. The data type POINTER_T is"]},{"entry":[{},"a generic pointer type (void*) which must"]},{"entry":[{},"be cast to the data type needed to access the"]},{"entry":[{},"event parameter."]},{"entry":[{},"Param2, Param3, Param4: return more parameters as"]},{"entry":[{},"needed for the event. NULL if no parameter is defined for"]},{"entry":[{},"the corresponding event"]},{"entry":["Return Value","XAIR_SUCCESS: The event parameters were written"]},{"entry":[{},"into buffers and the pointers to them were returned. The"]},{"entry":[{},"buffers and pointer values are valid until the next call"]},{"entry":[{},"of Xair_GetEvent."]},{"entry":[{},"XAIR_NOT_AVAILABLE: No event available. This"]},{"entry":[{},"happens for example if Xair_GetEvent either returned"]},{"entry":[{},"XAIR_NULL_EVENT or was never called."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0270","num":"0317"},"tables":{"@attributes":{"id":"TABLE-US-00107","num":"00107"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_PutVoiceBuffer"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_PutVoiceBuffer ( POINTER_T * "]},{"entry":[{},"NextTxBuff);"]},{"entry":["Execution","Synchronous."]},{"entry":["Description","Provide a pointer to a free Tx voice buffer to fill with "]},{"entry":[{},"sampled audio data. The function calls must be synchronized"]},{"entry":[{},"with the wireless transmission frame timing (e.g. via an "]},{"entry":[{},"external frame sync HW signal or XAIR_MV_RX_TX_IND). "]},{"entry":[{},"Releases the previous Tx voice buffer, the respective pointer "]},{"entry":[{},"is invalid afterwards. Schedules the current transmit buffer "]},{"entry":[{},"(provided with the previous call to this function) for "]},{"entry":[{},"transmission, the respective pointer must not be used anymore "]},{"entry":[{},"by the application. Note: The first call of this function after"]},{"entry":[{},"reset returns the pointer without releasing a voice buffer)."]},{"entry":["Output","NextTxBuff: points to the voice data buffer that the application "]},{"entry":["Parameter","(audio handler) should fill until the next call of"]},{"entry":[{},"Xair_PutVoiceBuffer( ). The buffer size is determined by the"]},{"entry":[{},"voice service setup (XIB).."]},{"entry":["Return Value","XAIR_SUCCESS: A next voice transmit buffer is"]},{"entry":[{},"available. The previous buffer is released (note: the first"]},{"entry":[{},"call of this function after reset returns the pointer without"]},{"entry":[{},"releasing a voice buffer)."]},{"entry":[{},"XAIR_VOICE_SYNC: Function calls and the wireless"]},{"entry":[{},"transmission frame timing are out of synchronization."]},{"entry":[{},"Next transmit buffer is not available or to less transmit"]},{"entry":[{},"buffer ready for transfer to smart transceiver chip. In this"]},{"entry":[{},"case the respective pointer have a NULL value. If this"]},{"entry":[{},"happens the voice sample rate is to slow\/fast regarding the"]},{"entry":[{},"wireless frame. So the function calling rate is to slow\/fast."]},{"entry":[{},"XAIR_CLOSED: The operation failed because the voice"]},{"entry":[{},"connection is closed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0271","num":"0318"},"tables":{"@attributes":{"id":"TABLE-US-00108","num":"00108"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Xair_GetVoiceBuffer"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Function","XAIR_RESULT_T Xair_GetVoiceBuffer (","POINTER_T * "]},{"entry":[{},{},"RxBuff,"]},{"entry":[{},{},"uint8 *"]},{"entry":[{},{},"CrcStatus );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Execution","Synchronous."]},{"entry":["Description","Provide a pointer to a Rx voice buffer, which is "]},{"entry":[{},"received by the smart transceiver chip. The function "]},{"entry":[{},"calls must be synchronized with the wireless transmission"]},{"entry":[{},"frame timing (e.g. via an external frame sync HW signal"]},{"entry":[{},"or XAIR_MV_RX_TX_IND). Releases the previous"]},{"entry":[{},"Rx voice buffer, the respective pointer is invalid "]},{"entry":[{},"afterwards. Note: The first call of this function after "]},{"entry":[{},"reset returns the pointer without releasing a voice buffer)."]},{"entry":["Output","RxBuff: must point to a variable that will be assigned a pointer "]},{"entry":["Parameter","to the voice data buffer which holds the received downstream "]},{"entry":[{},"voice data. The buffer size is determined by the voice service "]},{"entry":[{},"setup (XIB)."]},{"entry":[{},"CrcStatus: returns the CRC status of the Rx voice data buffer,"]},{"entry":[{},"which is given by RxBuff."]},{"entry":["Return ","XAIR_SUCCESS: A next voice transmit buffer is"]},{"entry":["Value","available. The previous buffer is released (note: the first"]},{"entry":[{},"call of this function after reset returns the pointer"]},{"entry":[{},"without releasing a voice buffer)."]},{"entry":[{},"XAIR_VOICE_SYNC: Function calls and the wireless"]},{"entry":[{},"transmission frame timing are out of synchronization."]},{"entry":[{},"Next received buffer is not available or a buffer overflow"]},{"entry":[{},"was occured. In this case the respective pointer have a"]},{"entry":[{},"NULL value. If this happens the voice sample rate is to"]},{"entry":[{},"slow\/fast regarding the wireless frame. So the function"]},{"entry":[{},"calling rate is to slow\/fast."]},{"entry":[{},"XAIR_CLOSED: The operation failed because the voice"]},{"entry":[{},"connection is closed."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{},{}],"ul":{"@attributes":{"id":"ul0025","list-style":"none"},"li":{"@attributes":{"id":"ul0025-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0026","list-style":"none"},"li":["XIB_TX_DATA_QUEUE_SIZE","XIB_EVENT_QUEUE_SIZE","XIB_RX_DATA_QUEUE_SIZE\n\nSo you can adjust the used queue sizes regarding the available memory space of the master control application system.\n\nThe used eeprom type and storage size is configurable with\n","XIB_EEPROM_TYPE","XIB_PERSISTENT_STORE_SIZE\n\nThe SPI mode is set with\n","XIB_SPI_MODE\n\nYou can set mode  . . . . Default is SPI mode .\n\nThe frequency of the output clock which is provided by the smart transceiver chip can be set with\n","XIB_PROVIDED_CLOCK_FREQUENCY\n\nYou can set the clock to 12, 24 or 48 MHz. Default is 12 MHz.\n\nThe working application type is set with\n","XIB_APPLICATION_TYPE\n\nYou can set Data, Voice or Both. Default is Data.\n\nThe ability of an integrated voice device is set with\n","XIB_VOICE_ABILITY\n\nYou can set Enable or Disable. Default is Enable.\n\nThe position of the frame sync message generated by the smart transceiver can be adjusted with\n","XIB_SYNC_EVENT_POSITION\n\nYou can set SYNC_EVENT_OFF, SYNC_EVENT_FRAMESTART,\n","SYNC_EVENT_BROADCAST or SYNC_EVENT_RX_FINISHED.\n\nDefault is SYNC_EVENT_FRAMESTART.\n\nThe used upstream voice encoding type is set with\n","XIB_UPSTREAM_VOICE_ENCODING_TYPE\n\nThe generation of a voice sync message can be set with\n","XIB_VOICE_SYNC\n\nYou can set Enable or Disable. Default is Enable.\n\nThe initial GPIO settings of the smart transceiver chip can be set with\n"]}}}},{"@attributes":{"id":"p-0272","num":"0332"},"tables":{"@attributes":{"id":"TABLE-US-00109","num":"00109"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"- XIB_GPIO_INPUTS"},{"entry":"\/**< 16 bit, little-endian, bit cleared means ignore, bit set means is"},{"entry":"input *\/"},{"entry":"- XIB_GPIO_INTERRUPT_MASK"},{"entry":"\/**< 16 bit, little-endian, bit cleared means ignore, bit set means"},{"entry":"Xair_MgIoInd events are received on input changes *\/"},{"entry":"- XIB_GPIO_OUTPUTS"},{"entry":"\/**< 16 bit, little-endian, bit cleared means ignore, bit set means this"},{"entry":"bit is an output *\/"},{"entry":"- XIB_GPIO_OUTPUT_TYPE"},{"entry":"\/**< 16 bit, little-endian, bit cleared means this is push\/pull, bit set"},{"entry":"means this is open drain *\/"},{"entry":"- XIB_GPIO_OUTPUT_INIT"},{"entry":"\/**< 16 bit, little-endian, initial output state *\/"},{"entry":"- XIB_GPIO_INPUT_TYPE"},{"entry":"\/**< 32 bit, Configure GPIO input pins Two bit pairs of the field are"},{"entry":"used to define each GPIO pin"},{"entry":"*\/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{},"ul":{"@attributes":{"id":"ul0027","list-style":"none"},"li":{"@attributes":{"id":"ul0027-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0028","list-style":"none"},"li":"XIB_VOICE_EQ_DATA_BUFFER\n\nYou can set TRUE or FALSE. Default is TRUE.\n\nXair API Functions (xair_api.h)\n"}}}},{"@attributes":{"id":"p-0273","num":"0334"},"tables":{"@attributes":{"id":"TABLE-US-00110","num":"00110"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/* API typedefs for XAIR_EVENT_T *\/"},{"entry":"typedef enum"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XAIR_NULL_EVENT,","\/**< no event available *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XAIR_MM_smart transceiver_COM_READY_IND,","\/**< smart transceiver \/ Master SPI"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"communication ready indication (after autodection) *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XAIR_MM_START_CONF,","\/**< start request finished *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"XAIR_MM_RESET_IND,","\/**< reset occurred *\/"]},{"entry":[{},"XAIR_MM_BIND_CONF,","\/**< bind request finished *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XAIR_MM_STOP_BIND_CONF,","\/**< stop bind request finished *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"XAIR_MM_READ_CONF,","\/**< smart transceiver eeprom read finished *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"XAIR_MM_WRITE_CONF,","\/**< smart transceiver eeprom write finished *\/"]},{"entry":[{},"XAIR_MM_SYNC_IND,","\/**< indicates the wireless frame sync message *\/"]},{"entry":[{},"XAIR_MD_CONNECT_CONF,","\/**< data connect request finished *\/"]},{"entry":[{},"XAIR_MD_DISCONNECT_CONF,","\/**< data disconnect request finished *\/"]},{"entry":[{},"XAIR_MD_DISCONNECT_IND,","\/**< data connection released *\/"]},{"entry":[{},"XAIR_MD_DATA_IND,","\/**< data received *\/"]},{"entry":[{},"XAIR_MV_CONNECT_CONF,","\/**< voice connect request finished *\/"]},{"entry":[{},"XAIR_MV_DISCONNECT_CONF,","\/**< voice disconnect request finished *\/"]},{"entry":[{},"XAIR_MV_DISCONNECT_IND,","\/**< voice connection released *\/"]},{"entry":[{},"XAIR_MV_SAMPLE_RATE_IND,","\/**< sample rate change indication *\/"]},{"entry":[{},"XAIR_MV_RX_TX_IND,","\/**< indicates the voice packet synchronisation *\/"]},{"entry":[{},"XAIR_MG_IO_CONF,","\/**< gpio setup request finished *\/"]},{"entry":[{},"XAIR_MG_IO_IND,","\/**< unsolicited indication of the GPIO state *\/"]},{"entry":[{},"XAIR_MP_PROTEST_CONF,","\/**< production test command request finished *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["}XAIR_EVENT_T;","\/**< typedef enum for XAIR API events *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/* API typedefs for XAIR_RESULT_T *\/"},{"entry":"typedef enum"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"XAIR_SUCCESS,","\/**< request successful *\/"]},{"entry":[{},"XAIR_ERROR,","\/**< request error *\/"]},{"entry":[{},"XAIR_CLOSED,","\/**< connection is (unexpectedly) closed *\/"]},{"entry":[{},"XAIR_NOT_AVAILABLE,","\/**< smart transceiver chip not available *\/"]},{"entry":[{},"XAIR_MISCONFIG,","\/**< smart transceiver configuration failed *\/"]},{"entry":[{},"XAIR_CONNECTED,","\/**< smart transceiver chip connection is already"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"established *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"XAIR_RESET,","\/**< reset occurred *\/"]},{"entry":[{},"XAIR_BUFFER_FULL,","\/**< buffer is full *\/"]},{"entry":[{},"XAIR_VOICE_SYNC,","\/**< voice packet rate is out of sync *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["}XAIR_RESULT_T;","\/**< typedef enum for XAIR API results *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* API primitives of the Xair layer management service *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["XAIR_RESULT_T","Xair_MmInitReq","(\u2003void ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MmStartReq","(\u2003void ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MmResetReq","(\u2003void ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MmPowerDownReq","(\u2003void ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MmBindReq","(\u2003void ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MmReadReq","(\u2003uint16 Offset, uint8 Size, uint16"]},{"entry":[{},{},"\u2003BackendContext );"]},{"entry":["XAIR_RESULT_T","Xair_MmWriteReq","(\u2003uint16 Offset, uint8 Size, uint8"]},{"entry":["*Data,",{},{}]},{"entry":[{},{},"\u2003uint16 BackendContext ) ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* API primitives of the Xair layer data service *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["XAIR_RESULT_T","Xair_MdDataReq","(\u2003XAIR_UP_PACKET_TYPE_T PacketType,"]},{"entry":[{},{},"\u2003uint8 *Data ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MdConnectReq","(\u2003uint8 *Data ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MdDisconnectReq","(\u2003void ) ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* API primitives of the Xair layer voice service *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["XAIR_RESULT_T","Xair_MvConnectReq","(\u2003uint8 *Data ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MvDisconnectReq","(\u2003void ) ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* API primitives of the Xair layer gpio service *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["XAIR_RESULT_T","Xair_MgIoReq","(\u2003uint16 OutputClearMask,"]},{"entry":[{},{},"\u2003uint16 OutputSetMask ) ;"]},{"entry":["XAIR_RESULT_T","Xair_MpSendRawSpiData","( uint8 *Data ) ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* API event functions *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["XAIR_EVENT_T","Xair_GetEvent","(\u2003void ) ;"]},{"entry":["XAIR_RESULT_T","Xair_ReadEventDetails","(\u2003POINTER_T *Param1, POINTER_T *Param2,"]},{"entry":[{},{},"\u2003POINTER_T *Param3, POINTER_T *Param4 ) ;"]},{"entry":["XAIR_RESULT_T","Xair_PutVoiceBuffer","(\u2003POINTER_T *NextTxBuff ) ;"]},{"entry":["XAIR_RESULT_T","Xair_GetVoiceBuffer","(\u2003POINTER T *RxBuff,"]},{"entry":[{},{},"\u2003uint8\u2003\u2003*CrcStatus) ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* API debug and trace functions *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["XAIR_RESULT_T","Xair_DbgEnable","( uint8 Level ) ;"]},{"entry":["XAIR_RESULT_T","Xair_DbgSetLevel","\u2002( uint8 Level ) ;"]},{"entry":["XAIR_RESULT_T","Xair_DbgPrint","\u2002( uint8 *DebugMessage, uint8 Length) ;"]},{"entry":["XAIR_RESULT_T","Xair_DbgDisable","\u2002( void ) ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/* API functions for SPI driver *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["void Xair_Spi2XairTxReady","( XAIR_SPI_FRAME_TYPE_T Type ) ;"]},{"entry":["bool Xair_Xair2SpiGetRx","( uint8 xdata* *address, XAIR_SPI_FRAME_TYPE_T Type) ;"]},{"entry":["void Xair_Spi2XairRxReady","( XAIR_SPI_FRAME_TYPE_T Type ) ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"385pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/* process of the Xair API, has to be called periodially to handle new requests"},{"entry":"or rx spi messages*\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["void Xair_Api_State_Machine_Handler","\u2002( void ) ;"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Xair Information Base (xair_api_xib.h)",{"@attributes":{"id":"p-0275","num":"0336"},"tables":{"@attributes":{"id":"TABLE-US-00111","num":"00111"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< Size of the request\/spi tx message queue (each entry allocates 35\/67 bytes"},{"entry":"of memory). Valid parameters are 1, 2, 4, 8, ... *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["#define XIB_TX_DATA_QUEUE_SIZE","2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< Size of the event queue (each entry allocates 18 bytes of memory). Valid"},{"entry":"parameters are 1, 2, 4, 8, ...*\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["#define XIB_EVENT_QUEUE_SIZE","2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< Size of the spi rx data queue (each entry allocates 35\/67 bytes of memory)."},{"entry":"Valid parameters are 1, 2, 4, 8, ...*\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define XIB_RX_DATA_QUEUE_SIZE","2"]},{"entry":["\/**< Persistent storage size (EEPROM length). *\/",{}]},{"entry":["#define XIB_PERSISTENT_STORE_SIZE","0x0200"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**< SPI protocol version. Protocol to access the smart transceiver chip. *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define XIB_SPI_PROTOCOL_VERSION","0x0100"]},{"entry":["\/**< SPI mode ( 0, 1, 2, 3 ) *\/",{}]},{"entry":["#define XIB_SPI_MODE","0"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< Clock frequency provided by smart transceiver chip in MHz (12, 24 or"},{"entry":"48(host only)). *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define PROVIDED_CLOCK_12","0x00"]},{"entry":["#define PROVIDED_CLOCK_24","0x01"]},{"entry":["#define PROVIDED_CLOCK_48","0x02"]},{"entry":["#define XIB_PROVIDED_CLOCK_FREQUENCY","PROVIDED_CLOCK_12"]},{"entry":["\/**< Application type (data, voice, data and voice). *\/",{}]},{"entry":["#define APPLICATION_TYPE_DATA","0x01"]},{"entry":["#define APPLICATION_TYPE_VOICE","0x02"]},{"entry":["#define APPLICATION_TYPE_BOTH","0x03"]},{"entry":["#define XIB_APPLICATION_TYPE","APPLICATION_TYPE_DATA"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**< XIB_VOICE_ABILITY: Integrated Voice ability. *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define VOICE_ABILITY_ENABLE","0x40"]},{"entry":["#define VOICE_ABILITY_DISABLE","0x00"]},{"entry":["#define XIB_VOICE_ABILITY","VOICE_ABILITY_ENABLE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**< Position for Sync event message in correlation to the wireless frame. *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define SYNC_EVENT_OFF","0x00"]},{"entry":["#define SYNC_EVENT_FRAMESTART","0x01"]},{"entry":["#define SYNC_EVENT_BROADCAST","0x02"]},{"entry":["#define SYNC_EVENT_RX_FINISHED","0x03"]},{"entry":["#define XIB_SYNC_EVENT_POSITION","SYNC_EVENT_FRAMESTART"]},{"entry":["\/**< Voice coding by smart transceiver chip *\/",{}]},{"entry":["#define VOICE_CODING_DISABLE","0x00"]},{"entry":["#define VOICE_CODING_ENABLE","0x01"]},{"entry":["#define XIB_VOICE_CODING","VOICE_CODING_ENABLE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**< Upstream & downstream voice packet size (32, 64 byte) *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define VOICE_PACKET_SIZE_64","0x00"]},{"entry":["#define VOICE_PACKET_SIZE_32","0x01"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"#if (XIB_VOICE_CODING == VOICE_CODING_ENABLE)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"#define XIB_VOICE_PACKET_SIZE","VOICE_PCM_PACKET_SIZE_32"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"#else"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"#define XIB_VOICE_PACKET_SIZE","0x01"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"#endif"},{"entry":"\/**< enable\/disable voice sync message (note: the example spi driver needs the"},{"entry":"voice sync!!!) *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define VOICE_SYNC_DISABLE","0x00"]},{"entry":["#define VOICE_SYNC_ENABLE","0x01"]},{"entry":["#define XIB_VOICE_SYNC","VOICE_SYNC_ENABLE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< GPIO inputs, 16 bit, little-endian, bit cleared means ignore, bit set means"},{"entry":"is input. *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["#define XIB_GPIO_INPUTS","0x0000"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< GPIO interrupt mask, 16 bit, little-endian, bit cleared means ignore, bit"},{"entry":"set means Xair_MgIoInd events are received on input changes. *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["XIB_GPIO_INTERRUPT_MASK","0x0000"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< GPIO outputs, 16 bit, little-endian, bit cleared means ignore, bit set"},{"entry":"means this bit is an output. *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["XIB_GPIO_OUTPUTS","0x0000"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< GPIO output type, 16 bit, little-endian, bit cleared means this is"},{"entry":"push\/pull, bit set means this is open drain. *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["XIB_GPIO_OUTPUT_TYPE","0x0000"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**< GPIO output initialization, 16 bit, little-endian, initial output state. *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["XIB_GPIO_OUTPUT_INIT","0x0000"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**< 32 bit, Configure GPIO input pins Two bit pairs of the field are used to"},{"entry":"define each GPIO pin *\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["#define XIB_GPIO_INPUT_TYPE","0x05555555"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**< Voice and data buffer has the same length (TRUE, FALSE) *\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["#define XIB_VOICE_EQ_DATA_BUFFER","TRUE"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing Summary, as well as the following Detailed Description, is better understood when read in conjunction with the appended drawings. In order to illustrate the present disclosure, various aspects of the disclosure are illustrated. However, the disclosure is not limited to the specific aspects shown. The following figures are included:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
