---
title: Distributed data center access switch
abstract: In one embodiment, an apparatus includes a processor configured for operation in a control plane in a distributed virtual switch in communication with a plurality of virtual machines each having a virtual interface. The processor is operable to identify other control planes in the distributed virtual switch, assign a virtual interface identifier to one of the virtual interfaces, receive a configuration for the virtual interface, and share the configuration with the other control planes in the distributed virtual switch. The virtual interface identifier provides a unique identifier for the virtual interface across all of the control planes. The apparatus further includes memory for storing the configuration of the virtual interface. A method for operating a network device associated with a control in the distributed virtual switch is also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08213336&OS=08213336&RS=08213336
owner: Cisco Technology, Inc.
number: 08213336
owner_city: San Jose
owner_country: US
publication_date: 20090223
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["The present disclosure relates generally to communication networks, and more particularly, to a distributed data center access switch.","Data centers often use a small percentage of available CPU, storage, and memory capacity. This results in deployment of more servers than are necessary to perform a specified amount of work. Additional servers increase costs and create a more complex and disparate environment that can be difficult to manage. Many data center managers are turning to virtualization so that resources can be shared across a network.","Virtualization is a technology which allows one computer to do the job of multiple computers by sharing resources of a single computer across multiple systems. Through the use of virtualization, multiple operating systems and applications can run on the same computer at the same time, thereby increasing utilization and flexibility of hardware. Virtualization allows servers to be decoupled from underlying hardware, thus resulting in multiple virtual servers sharing the same physical server hardware. This also allows the virtual server to be moved from one physical server to another physical server while maintaining continuous service availability.","Corresponding reference characters indicate corresponding parts throughout the several views of the drawings.","Overview","In one embodiment, a method for operating a network device associated with a control plane in a distributed virtual switch in communication with a plurality of virtual machines each comprising a virtual interface generally comprises identifying at the network device, other control planes in the distributed virtual switch, assigning a virtual interface identifier to one of the virtual interfaces, receiving a configuration for the virtual interface, and sharing the configuration with the other control planes in the distributed virtual switch. The virtual interface identifier provides a unique identifier for the virtual interface across all of the control planes.","In another embodiment, an apparatus generally comprises a processor configured for operation in a control plane in a distributed virtual switch in communication with a plurality of virtual machines each comprising a virtual interface. The processor is operable to identify other control planes in the distributed virtual switch, assign a virtual interface identifier to one of the virtual interfaces, receive a configuration for the virtual interface, and share the configuration with the other control planes in the distributed virtual switch. The virtual interface identifier provides a unique identifier for the virtual interface across all of the control planes. The apparatus further includes memory for storing the configuration of the virtual interface.","Example Embodiments","The following description is presented to enable one of ordinary skill in the art to make and use the invention. Descriptions of specific embodiments and applications are provided only as examples and various modifications will be readily apparent to those skilled in the art. The general principles described herein may be applied to other embodiments and applications without departing from the scope of the invention. Thus, the present invention is not to be limited to the embodiments shown, but is to be accorded the widest scope consistent with the principles and features described herein. For purpose of clarity, details relating to technical material that is known in the technical fields related to the invention have not been described in detail.","Virtualization allows one computer to do the job of multiple computers by sharing the resources of a single computer across multiple systems. Software is used to virtualize hardware resources of a computer, including, for example, the CPU, RAM, hard disk, and network controller, to create a virtual machine that can run its own operating system and applications. Multiple virtual machines share hardware resources without interfering with each other so that several operating systems and applications can be run at the same time on a single computer. Virtual machines may be used, for example, in a virtual infrastructure to dynamically map physical resources to business needs. Virtualization thus enables the aggregation of multiple servers, storage infrastructure, and networks into shared resources that can be delivered dynamically to applications as needed.","Embodiments described herein operate in a networking environment, such as a data center networking environment, to form a distributed virtual switch (DVS) which allows for multiple control planes in the same distributed virtual switch. Since the scalability of a single control plane is limited to a subset of the data center, it is desired to allow the migration of virtual machines between physical servers which are connected to switches controlled by different control planes. The distributed virtual switch allows for migration of virtual machines across different control planes to create a seamless data center access layer. While the embodiments are described herein in the context of a data center networking environment, it is to be understood that the embodiments may be used in other networking environments.","In one embodiment, the virtual machine connects to a virtual Ethernet interface to which a virtual network interface card (VNIC) connects. A port profile is defined for each interface and provides a configuration template for the interface configuration. The port profile includes objects that provide a means to specify attributes such as network and security policies. The distributed virtual switch allows the virtual Ethernet interface to migrate between physical servers as the virtual machine migrates and provides a means for control planes to share port profiles so that the port profile follows the virtual machine as it migrates from one server to another.","Referring now to the drawings, and first to , an example of a network  that may implement embodiments described herein is shown. For simplification, only a small number of nodes are shown. The system operates in the context of a data communication network including multiple network elements. Some of the elements in a network that employs the system may be network devices such as servers, switches, or routers. The network device may include, for example, a master central processing unit (CPU), interfaces, and a bus. The CPU preferably includes memory and a processor. The network device may be implemented on a general purpose network machine such as described below with respect to .","The network  shown in  includes two control plane domains , . Each of the control plane domains comprises one or more network devices (e.g., Cisco Nexus\u2122 series switch). The control plane domain may also comprise a server, network management station, or other network device. The network devices (at the control plane domains ,  shown in ) are connected to one or more servers . In the example shown in , control plane domain  is connected to two servers  via links  and , and control plane domain  is connected to one server  via link . The network devices may also be in communication with a management station  (e.g., virtualization management platform such as VMware Virtual Center management station or others) via links , .","Each server  includes a virtual switch  and one or more virtual machines (VM A, VM B, VM C, VM D, VM E) . The virtual machines  are in communication with the virtual switch  via the virtual network interface card (VNIC) which connects to the virtual Ethernet interface. The virtual switches  are in communication with the control planes via Ethernet interfaces. The virtual switch  switches traffic between the virtual machines and the physical network interface card. In one embodiment, the virtual switch  is configured to operate in a hypervisor environment. Virtual machines  located within the same server (e.g., VM A and VM B in ) may also communicate directly with one another via the virtual switch . As described below, each of the virtual machines  may be moved from one server  to another server. The virtual machine  may be moved between servers connected to the same control plane ,  or different control planes.","As illustrated in , the control planes ,  are located in a single distributed virtual switch (DVS) . Multiple control planes thus operate in a single DVS  within a virtualization management station (e.g., management station ). The control plane is decoupled from a server administrator view of the DVS . This allows a server administrator to view only the single distributed data center access switch (DVS) and eliminates the need for the server administrator to understand the details of the network topology. A network administrator can view each individual control plane domain in the DVS and therefore have the ability to determine the location of a virtual machine interface (virtual Ethernet interface) at any time. As described in detail below, the virtual Ethernet interfaces, in addition to moving between servers in a single control plane, are able to migrate between different control planes within the DVS .","The DVS  is created when an initial switch (e.g., control plane ) connects to the management station . When subsequent control planes (e.g., control plane domain ) connect to the management station , the control planes use the same credentials to login to the management station and detect the presence of the DVS . The control plane  will thus join the existing DVS  rather than creating a new DVS instance.","It is to be understood that the simplified network shown in  is only one example, and that the embodiments described herein may be employed in networks having different configurations and types of network devices.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 2","FIG. 1"],"b":["30","40","42","12","14","42","40","30","44","42","40","44","42","36","30","44","42","36","30"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 3","FIG. 1"],"b":["50","12","52"]},"The switch receives configuration information for each of its associated virtual interfaces at step . The switch may receive configuration information input by a user or may receive configuration information from the management station or another switch in the DVS. In one embodiment, the configuration information is a port profile that specifies attributes for the virtual interface. The port profiles may be configured by a user at the network management station and transmitted to the switch or transmitted from another network device in the DVS. The configuration information is shared between control planes in the DVS (step ). The information may be shared periodically or requested upon a virtual machine move from one control plane to another control plane. Details of the above steps in accordance with exemplary embodiments are described below.","Communication between control planes for control plane discovery (step ) may be performed by various processes, including for example, a peer to peer protocol, a fabric service, network management, or a client-server model. In a preferred embodiment, the client-server model is used with one of the control planes (and the associated switch) configured as the server and the other control planes (and associated switches) configured as clients. In one embodiment of the client-server architecture, one control plane is configured as the active server control plane and another control plane is configured as the backup server control plane. The backup server control plane acts as a client control plane to obtain configuration from the active server control plane. The rest of the control planes within the data center are configured as clients. The client control planes are configured with a virtual server control plane IP address, which can be obtained during discovery. The backup server control plane monitors the active server control plane and in the case of a failure at the active server, receives traffic addressed to the virtual server control plane IP address. The server control plane may use a push model to transmit data to the clients or the server control plane may advertise its IP address. The server control plane may be configured with a list of clients or discover the clients through client advertisement. In the client-server model, the server switch connects directly to the virtualization management station and passes information to the clients. The client switches and state can be viewed from the server switch.","As previously discussed, the virtual Ethernet interface name space is coordinated across control planes (step ). The interface identifier can be requested from the server upon original virtual Ethernet interface creation. For example, upon creation of a new virtual Ethernet interface, the client control plane requests a virtual Ethernet interface name from the server control plane. This will ensure a consistent interface naming scheme across the entire data center. In one embodiment, each client control plane optimizes virtual Ethernet creation by prerequesting a range of virtual Ethernet names (e.g., 100 names).","Once the client discovers the server control plane, the client can request a download of all the known port profiles and virtual Ethernet interfaces (step ). A periodic poll of the server control plane can be used to detect any configuration changes to the port profiles. The port profiles and virtual Ethernet interfaces are common across all control planes supporting the DVS. A user can configure port profiles at the server and pull information from clients, in the client-server model. If a port profile is present in the virtualization management station but not present in the switch, the port profile can be automatically created at the switch.","In the client-server model, the server may periodically poll the clients for configuration information or the clients may periodically submit updates to the server (step ). The configuration information may provide dynamic state and feature configuration (e.g., SPAN (Switched Port Analyzer), IGMP (Internet Group Management Protocol) snooping, DHCP (Dynamic Host Configuration Protocol) snooping, IP Source Guard, etc.). The configuration information may also be shared between two client control planes following migration of a virtual machine, as described below with respect to the flowchart of .","In an alternative to the client-server model, a fabric service is used for communication between the control planes. A service such as Cisco Fabric Service (CFS) multicast IP may be used. Each control plane advertises to other control planes: (a) its control plane IP address; (b) associated management station (e.g., VMware Virtual Center server) and applicable scope of the DVS (e.g., a Data Center within the VMware Virtual Center server; and (c) virtual Ethernet interfaces. The advertisements may be transmitted periodically, or may be triggered by a new virtual Ethernet interface resident on the local control plane, new physical interface attached on local control plane, or detection of a new control plane within the same DVS.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4","b":["64","66","68","70"]},"In one embodiment a DVS API (application programming interface) is used to transfer state information. In the case where a DVS API is not used, the client control plane can provide the MAC address of the virtual machine VNIC attached to the virtual Ethernet interface as part of the control plane discovery process. The destination control plane would then use the MAC address to ask the server control plane for the originating control plane previously hosting the moved virtual Ethernet interface. In the client-server model, the client control plane informs the active server control plane of the new virtual Ethernet interface location (step ). In the fabric service model, all control planes are informed of the new location of the virtual Ethernet interface.","It is to be understood that the processes illustrated in  are provided as examples and that steps may be added, deleted or the order of steps may be changed, without departing from the scope of the invention.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 5","b":["36","40","36"],"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["A 1.2.3.4\n        \n        ","B 1.2.3.5","C 1.2.4.5","D 1.2.4.6"]}}}},"Upon migration of the virtual machine to a server connected to switch C, the control plane requests its state from the originating control plane and the data plane informs the control plane of new virtual NIC, as previously described.",{"@attributes":{"id":"p-0039","num":"0043"},"figref":"FIG. 6","b":["32","40","32","40","46","47","40","30","48","40","44","44","40","47","40","47"]},{"@attributes":{"id":"p-0040","num":"0044"},"figref":["FIG. 7","FIG. 1"],"b":["16","16","1","2","76","78"]},{"@attributes":{"id":"p-0041","num":"0045"},"figref":"FIG. 8","b":["80","80","80","82","84","84","84"]},"Network device  interfaces with physical media via a plurality of linecards . Linecards  may incorporate Ethernet interfaces, DSL interfaces, Gigabit Ethernet interfaces, 10-Gigabit Ethernet interfaces, SONET interfaces, etc. As packets are received, processed, and forwarded by network device , they may be stored in a packet memory . To implement functionality according to the system, linecards  may incorporate processing and memory resources similar to those discussed above in connection with the network device as a whole. It is to be understood that the network device  shown in  and described above is only one example and that different configurations of network devices may be used.","Although the method and apparatus have been described in accordance with the embodiments shown, one of ordinary skill in the art will readily recognize that there could be variations made to the embodiments without departing from the scope of the present invention. Accordingly, it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
