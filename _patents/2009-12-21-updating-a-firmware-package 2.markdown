---
title: Updating a firmware package
abstract: Updating a firmware package including receiving an update package for the firmware package, the firmware package including currently installed components supporting one of a plurality of software layers, the update package including update components that correspond to the currently installed components; retrieving information describing a state of the currently installed components; comparing the information describing the state of the currently installed components to information describing a state of the corresponding update components; constructing a revised update package that includes only update components having a state more recent than the state of the corresponding currently installed components; and updating the currently installed components with corresponding update components of the revised update package.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09639347&OS=09639347&RS=09639347
owner: International Business Machines Corporation
number: 09639347
owner_city: Armonk
owner_country: US
publication_date: 20091221
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["Field of the Invention","The field of the invention is data processing, or, more specifically, methods, apparatus, and products for updating a firmware package.","Description of Related Art","The development of the EDVAC computer system of 1948 is often cited as the beginning of the computer era. Since that time, computer systems have evolved into extremely complicated devices. Today's computers are much more sophisticated than early systems such as the EDVAC. Computer systems typically include a combination of hardware and software components, application programs, operating systems, processors, buses, memory, input\/output devices, and so on. As advances in semiconductor processing and computer architecture push the performance of the computer higher and higher, more sophisticated computer software has evolved to take advantage of the higher performance of the hardware, resulting in computer systems today that are much more powerful than just a few years ago.","Software applications and computer hardware components of computer systems today are supported by firmware. Firmware may be implemented as one or more modules of computer program instructions, typically stored in ROM or Flash memory, that support operation of higher level software applications and computer hardware. From time to time firmware is updated. It is preferable to reduce the time needed to transfer, update the firmware, and reboot a computer system so that the updated firmware may be used.","Methods, apparatus, and products for updating a firmware package are described that include receiving, by a firmware updating module comprising a module of automated computing machinery, an update package for the firmware package. The firmware package includes one or more currently installed components. Each of the currently installed components supports one of a number of software layers. The update package includes one or more update components that correspond to the currently installed components of the firmware package. Each of the update components supports one of the plurality of software layers. Updating the firmware package also includes retrieving, by the firmware updating module from the firmware package during operation of the firmware package, information describing a state of the currently installed components; comparing, by the firmware updating module, the information describing the state of the currently installed components to information describing a state of the corresponding update components; constructing, by the firmware updating module, a revised update package that includes only update components having a state more recent than the state of the corresponding currently installed components; and updating, by the firmware updating module, the currently installed components with corresponding update components of the revised update package.","The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.","Exemplary methods, apparatus, and products for updating a firmware package in accordance with the present invention are described with reference to the accompanying drawings, beginning with .  sets forth a network diagram of a system for updating a firmware package according to embodiments of the present invention. The system of  includes a automated computing machinery comprising an exemplary computer () useful in updating a firmware package () according to embodiments of the present invention. Firmware as the term is used in this specification refers to module of computer program instructions and data structures that support higher level operation of one or more software applications or components of a computer. The term \u2018package\u2019 is used here to describe the composition of firmware as including one or more components. That is, a firmware package consists of a set of components. A component is a module of computer program instructions that carries out one or more particular tasks. Examples of components include operating system firmware, boot loader firmware, system administration interface firmware, computer hardware firmware, network management firmware, management services firmware, web services firmware, and so on as will occur to readers of skill in the art. Each of the components of firmware packages according to embodiments of the present invention support a software layer\u2014one or more system level or user level application modules that employ the components during operation. Examples of software layers include a boot loader layer, an operating system layer, a management services layer, a web services layer, and so on.","The computer () of  includes at least one computer processor () or \u2018CPU\u2019 as well as random access memory () (\u2018RAM\u2019) and Flash memory () which is connected through a high speed memory bus () and bus adapter () to processor () and to other components of the computer ().","Stored in flash memory is a firmware package (). The firmware package () several currently installed components (-). The currently installed components (-) support software layer (), the components (-) support software layer (), component () supports software layer (), and component () supports software layer (). The components (-) described as \u2018currently installed\u2019 are those components presently active in the computer system\u2014modules presently supporting user level and system level applications executing in the computer () as well as computer hardware components.","Also stored in Flash memory () is a firmware updating module (), a module of automated computing machinery that updates firmware packages in accordance with the present invention. The firmware updating module () updates the firmware package () of  by receiving an update package () for the firmware package. The update package () in the example of  includes several update components (-). The update components (-) are said to \u2018correspond\u2019 to currently installed components of the firmware package (). Corresponding components are components of the same type. Update components that correspond to currently installed components are either the same component or an updated version of that component. An update component comprising a boot loader component, for example, corresponds to a currently installed boot loader component of the firmware package (), an update component comprising an operating system component corresponds to a currently installed operating system component of the firmware package (), and so on. In addition to being of the same type, corresponding components also correspond to on another by supporting the same software layer. In the system of , for example, update component () and currently installed component () correspond by type and support the same software layer ().","The firmware updating module () may also retrieve, from the firmware package () during operation of the firmware package (), information () describing a state of the currently installed components. A \u2018state\u2019 as the term is used here describes the version of a component. Software components are often updated from one version to another, where changes in the underlying computer program instructions are made. A component having a more recent state than a corresponding component is a component of a later version, a more recently changed or updated version of the component.","The firmware module () may also compare the information () describing the state of the currently installed components to information () describing a state of the corresponding update components and construct a revised update package (). The revised update package () is constructed in a way such that the revised update package () includes only update components having a state more recent than the state of the corresponding currently installed components. That is, the revised update package () includes only components having of a later version than their corresponding currently installed components. In the system of , for example, the revised update package () constructed by the firmware updating module () includes only update components (-). These update components (-) are of a later version, a more recent version, than the corresponding currently installed components (-). By contrast, the revised update package () does not include update components (-). The update components (-), are not of the a later version than the corresponding currently installed components (-).","The firmware updating module () may also update the currently installed components (-) with corresponding update components (-) of the revised update package (). In this way, only currently installed components for which an update component is actually present are updated. In systems of the prior art, all currently installed components are typically replaced with the components of a firmware update, regardless of whether an update for the currently installed components actually exists in the firmware update.","The firmware updating module (), firmware package (), update package (), revised update package (), information () describing the state of update components, and the information () describing the state of currently installed components in the example of  are shown in Flash memory (), but many components of such software may also be stored in other non-volatile memory, such as, for example, on a disk drive (), an optical disk drive, electrically erasable programmable read-only memory (so-called \u2018EEPROM\u2019), RAM drives, and so on, as will occur to those of skill in the art.","Stored in RAM () is an user level application module (), a module of computer program instructions for carrying out user level data processing tasks. Examples of such user level application modules () include word processing applications, spreadsheet applications, database management applications, web browser applications, media library applications, media playback applications, and so on as will occur to readers of skill in the art. Also stored in RAM () is an operating system (). Operating systems useful updating a firmware package according to embodiments of the present invention include UNIX\u2122, Linux\u2122, Microsoft XP\u2122, AIX\u2122, IBM's i5\/OS\u2122, and others as will occur to those of skill in the art.","The computer () of  includes disk drive adapter () coupled through expansion bus () and bus adapter () to processor () and other components of the computer (). Disk drive adapter () connects non-volatile data storage to the computer () in the form of disk drive (). Disk drive adapters useful in computers for updating a firmware package according to embodiments of the present invention include Integrated Drive Electronics (\u2018IDE\u2019) adapters, Small Computer System Interface (\u2018SCSI\u2019) adapters, and others as will occur to those of skill in the art. Non-volatile computer memory also may be implemented for as an optical disk drive, electrically erasable programmable read-only memory (so-called \u2018EEPROM\u2019 or \u2018Flash\u2019 memory), RAM drives, and so on, as will occur to those of skill in the art.","The example computer () of  includes one or more input\/output (\u2018I\/O\u2019) adapters (). I\/O adapters implement user-oriented input\/output through, for example, software drivers and computer hardware for controlling output to display devices such as computer display screens, as well as user input from user input devices () such as keyboards and mice. The example computer () of  includes a video adapter (), which is an example of an I\/O adapter specially designed for graphic output to a display device () such as a display screen or computer monitor. Video adapter () is connected to processor () through a high speed video bus (), bus adapter (), and the front side bus (), which is also a high speed bus.","The exemplary computer () of  includes a communications adapter () for data communications with other computers () and for data communications with a data communications network (). Such data communications may be carried out serially through RS-232 connections, through external buses such as a Universal Serial Bus (\u2018USB\u2019), through data communications networks such as IP data communications networks, and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer, directly or through a data communications network. Examples of communications adapters useful for updating a firmware package according to embodiments of the present invention include modems for wired dial-up communications, Ethernet (IEEE 802.3) adapters for wired data communications network communications, and 802.11 adapters for wireless data communications network communications.","The arrangement of computers (, ), network (), and other devices making up the exemplary system illustrated in  are for explanation, not for limitation. Data processing systems useful according to various embodiments of the present invention may include additional servers, routers, other devices, and peer-to-peer architectures, not shown in , as will occur to those of skill in the art. Networks in such data processing systems may support many data communications protocols, including for example TCP (Transmission Control Protocol), IP (Internet Protocol), HTTP (HyperText Transfer Protocol), WAP (Wireless Access Protocol), HDTP (Handheld Device Transport Protocol), and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .","For further explanation,  sets forth a flow chart illustrating an exemplary method for updating a firmware package () according to embodiments of the present invention. The method of  is carried out by a firmware updating module comprising a module of automated computing machinery similar to the firmware updating module () in the Example of . The method of  includes receiving (), by the firmware updating module, an update package () for the firmware package (). The firmware updating module may receive an update package () in various ways including, for example, through a data communications network from a server pushing an update to the firmware updating module, by direct installation from a higher level software application at the behest of a system administrator, and in other ways as will occur to readers of skill in the art.","In the method of , the firmware package () includes one or more currently installed components (). Each of the currently installed components () supports one of a number of software layers. The update package () also includes one or more update components () that correspond to the currently installed components () of the firmware package (). Each of the update components () also supports one of the software layers.","The method of  also includes retrieving (), by the firmware updating module from the firmware package () during operation of the firmware package (), information () describing a state of the currently installed components (). Retrieving () information () describing a state of the currently installed components () may be carried out in many ways, including for example, by requesting the information () from the firmware package () through an application programming interface (API) exposed to the firmware updating module for such a purpose, by retrieving the information from a known storage location designated for such a purpose, or in other ways as will occur to readers of skill in the art.","The method of  also includes comparing (), by the firmware updating module, the information () describing the state of the currently installed components () to information () describing a state of the corresponding update components (). Comparing () the information () describing the state of the currently installed components () to information () describing a state of the corresponding update components () may be carried out by determining, for each update component, whether the update component's state is more recent than the corresponding currently installed component's state.","The method of  also includes constructing (), by the firmware updating module, a revised update package () that includes only update components () having a state more recent than the state of the corresponding currently installed components (). Constructing () a revised update package () that includes only update components () having a state more recent than the state of the corresponding currently installed components () may be carried out by copying, to a new storage location, only those update components having a more recent state as well as any portion of the update package necessary to effect installation of the update components.","The method of  also includes updating (), by the firmware updating module, the currently installed components () with corresponding update components () of the revised update package (). Updating () the currently installed components () with corresponding update components () of the revised update package () may be carried out by replacing the currently installed components () with a corresponding update component included in the revised update package ().","The method of  also includes monitoring () progress () of updating () the currently installed components () with corresponding update components () of the revised update package (). Monitoring () progress () of updating () the currently installed components () may be carried out in various ways. The firmware updating module may, for example, maintain an identification of the update component presently being installed, track a percentage of the installation of all update components, track the time taken to install each update, and so on.","The method of  also includes reporting () the progress () to a user level application module (). Reporting () the progress () to a user level application module () may be carried out by sending data representing the progress () to the user level application module () automatically without user intervention, periodically upon a predefined period of time, each time installation of an update component is complete, or upon request by a user.","For further explanation,  sets forth a flow chart illustrating a further exemplary method for updating a firmware package according to embodiments of the present invention. The method of  is similar to the method of  in that the method of  is carried out by a firmware updating module and the method of  includes receiving () an update package () for the firmware package (); retrieving () information () describing a state of the currently installed components (); comparing () the information () to information () describing a state of the corresponding update components (); constructing () a revised update package () that includes only update components () having a state more recent than the state of the corresponding currently installed components (); and updating () the currently installed components () with corresponding update components () of the revised update package ().","The method of  differs from the method of , however, in that in the method of , retrieving () information () describing a state of the currently installed components () includes retrieving () metadata () including information describing the currently installed components. The information describing the currently installed components includes a version number () of each currently installed component (). Metadata () is data that describes other data. The metadata () in the example of  may be any data structure, such as a list, a table, a structured document such as a extensible markup language (XML) document, or the like. A version number indicates the state of a component. Larger version numbers indicate amore recent state, while smaller version numbers indicate an older state. A component having a version number of 2.1 for example, has an older state than a corresponding component having a version number of 3.0.","Also in the method of , comparing () the information () describing the state of the currently installed components () to information () describing a state of the corresponding update components () includes comparing () version numbers () of the currently installed components () to version numbers () of corresponding update components (). Like the version numbers of currently installed components (), the version numbers of the update components () may also be defined in metadata ().","Also in the method of , constructing () a revised update package () is carried out by including () in the revised update package () only update components () having a version number () greater than the version number () of the corresponding currently installed components ().","For further explanation,  sets forth a data flow diagram illustrating an example firmware package (), update package (), and revised update package () employed in methods of updating a firmware package according to embodiments of the present invention. In example of , the firmware updating module () receives an update package () for the firmware package (). The firmware package () in the example of  includes seven currently installed components (-), including a intelligent platform management interface (IPMI) component (), a simple network management protocol (SNMP) component (), a common information model (CIM) component (), a web services component (), two operating system components (, ), and a bootloader component (). Each of the components is characterized by a version number. Each of the components supports one of three software layers (, , ).","The update package () includes seven update components (-) corresponding to the currently installed components (-). The update components include an IPMI component (), an SNMP component (), a CIM component (), a web services component (), two operating system components (, ), and a bootloader component (). The update components (-) support the same software layers (, , ) as corresponding currently installed components (-).","The firmware updating module () retrieves information describing a state of the currently installed components (-)\u2014in this example, the version numbers of the components (-). The firmware updating module () then compares version numbers of the currently installed components (-) to version numbers of the update components (-) and constructs a revised update package () that includes only update components (, , ) having more recent version numbers than the version numbers of the currently installed components (-). In this example, the IPMI update component () has a greater version number, 1.12, than the corresponding currently installed IPMI component () which has a version number of 1.1. The CIM update component () has a greater version number, 2.7, than the version number, 2.6, of the corresponding currently installed CIM component (). The operating system update component () has a greater version number, 5.2.6, than the version number, 5.2.5, of the corresponding currently installed operating system component (). All other update package components (, , , and ) have version numbers equal to the version numbers of correspond currently installed components (, , , and ).","After constructing the revised update package (), the firmware updating module () updates the currently installed components (, , and ) with corresponding update components (, , and ) of the revised update package (). In this way, only currently installed components for which an updated version is present are updated.","The method of  above includes, among other method steps, updating (), by the firmware updating module, the currently installed components () with corresponding update components () of the revised update package (). Such updating () may be carried out various ways. For further explanation, therefore,  sets forth a flow chart illustrating an exemplary method for updating () currently installed components of a firmware package with corresponding update components of a revised update package in accordance with embodiments of the present invention.","The method of  is carried out for each software layer supported by an update component of the revised update package. The method of  includes halting () operation of the software layer, replacing (), with all update components supporting the software layer, corresponding currently installed components, and restarting () operation of the software layer. In this way, only one software layer must halt operation during an update of the firmware components supporting the software layer. Other software layers may continue to operate uninterrupted.","Although the method of  includes halting () and restarting () operation of a software layer, readers of skill in the art will immediately recognize that updating () the currently installed components () with corresponding update components () of the revised update package () may alternatively include halting and restarting operation of the components being updated rather than an entire software layer. Furthermore, because of operational dependencies between components in various software layers, software layers other than the software layer supported by the update component may be halted and restarted during the update () of the currently installed component. A software layer that includes an IPMI or SNMP component with operational dependencies on an operating system software layer may be halted and restarted during update of a component of the operating system software layer.","In the method of  replacing (), with all the update components supporting the software layer, corresponding currently installed components includes retrieving () storage location of each corresponding currently installed component maintained by the firmware package. The firmware package may maintain a list, table, or other data structure that includes for each currently installed component: a pointers to the memory location at which the currently installed components is stored and an offset indicating a size of the component. With this information, the firmware updating module may erase the storage location identified by the pointer and offset and copy the update component to the same storage location.","Alternatively, firmware updating module may replacing (), with all the update components supporting the software layer, corresponding currently installed components by retrieving () a storage location of each corresponding currently installed component generated by the firmware updating module upon a previous update of the firmware package. That is, the firmware updating module may be configured to generate and later update a data structure with storage locations of components installed by the firmware updating module. Such storage locations may be defined by a pointer to the memory location at which the component was previously stored and an offset defining a memory size of the component.","In view of the explanations set forth above, readers will recognize that the benefits of updating a firmware package according to embodiments of the present invention include:\n\n","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described above with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
