---
title: Virtual storage systems and virtual storage system operational methods
abstract: Virtual storage systems and virtual storage system operational methods are described. According to one aspect, a virtual storage system includes a physical storage space configured to store data, a virtual storage space adapted to provide a representation of data stored within the physical storage space to a host, a memory configured to store a plurality of pointers utilized to implement addressing intermediate the physical storage space and the virtual storage space, and a controller configured to extract selected ones of the pointers from the memory and to provide the selected pointers in another storage location different than the memory at a first moment in time and to extract the selected pointers from the another storage location and to provide the selected pointers in the memory at a second moment in time subsequent to the first moment in time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06996582&OS=06996582&RS=06996582
owner: Hewlett-Packard Development Company, L.P.
number: 06996582
owner_city: Houston
owner_country: US
publication_date: 20021003
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The invention relates to virtual storage systems and virtual storage system operational methods.","Computer systems including hardware, software, firmware etc. have continued to experience expansive growth and sophistication in recent years. Peripherals and other components arranged to interface with computer systems have also experienced expansive growth and improvements.","In addition, computer systems are generally used in an increasing number of applications especially with the advancements made in networking solutions enabling communication between remotely spaced computers. For example, computer systems may be utilized in client applications, server applications as well as stand-alone personal computing applications.","With the increased processing speeds of computer systems, and the increasing usage of computer systems in new and varied applications, devices are desired to assist with storing and quickly accessing data processed and used by computer systems. Mass storage devices have been developed to handle large amounts of digital data utilized by computer systems. Redundant storage systems have been developed to provide continued, correct operations during the presence of a fault or other failure in a component or peripheral of a computer system. More specifically, three primary design criteria are typically considered when developing mass storage devices and include cost (low cost per unit of data storage), high input\/output performance, and availability (ability to recover data even though some components have failed and to insure continued operation). Redundant array of independent disk (RAID) systems have been utilized to provide redundant storage of relatively large amounts of data.","As described below, aspects of the present invention provide improved systems and methodologies for storing data within a storage system.","Attention is directed to the following commonly assigned applications, which were filed the same day as the present application and are incorporated herein by reference:","U.S. patent application Ser. No. 10\/264,915 entitled \u201cA System for Managing a Data Storage Array, a Method of Managing a Data Storage System, and a RAID Controller,\u201d by inventors David Umberger, Guillermo Navarro and Rodger Daniels; U.S. patent application Ser. No. 10\/264,573 entitled \u201cMethod of Managing a Data Storage Array, and a Computer System Including a RAID Controller,\u201d by inventors David Umberger and Guillermo Navarro; U.S. patent application Ser. No. 10\/264,957 entitled \u201cComputer Systems, Virtual Storage Systems and Virtual Storage System Operational Methods,\u201d by inventors Michael B. Jacobson and Lee L. Nelson; U.S. patent application Ser. No. 10\/264,659 entitled \u201cVirtual Storage Systems, Virtual Storage Methods and Methods of Over Committing a Virtual RAID Storage System,\u201d by inventors Michael B. Jacobson and Lee L. Nelson; and U.S. patent application Ser. No. 10\/264,661 entitled \u201cVirtual Storage Systems and Virtual Storage System Operational Methods,\u201d by inventors Lee L. Nelson and Rodger Daniels.","According to one aspect, a virtual storage system comprises a physical storage space configured to store data, a virtual storage space adapted to provide a representation of data stored within the physical storage space to a host, a memory configured to store a plurality of pointers utilized to implement addressing intermediate the physical storage space and the virtual storage space, and a controller configured to extract selected ones of the pointers from the memory and to provide the selected pointers in another storage location different than the memory at a first moment in time and to extract the selected pointers from the another storage location and to provide the selected pointers in the memory at a second moment in time subsequent to the first moment in time.","According to another aspect, a virtual storage system comprises physical storage means configured to store data at a plurality of physical storage locations, virtual storage means adapted to provide a representation of the physical storage means to a host using a plurality of virtual storage locations, mapping means configured to associate a plurality of the virtual storage locations with a plurality of the physical storage locations, controller means configured to utilize the mapping means to access the physical storage locations, to deactivate a portion of the mapping means at an initial moment in time wherein the deactivated portion of the mapping means is not; utilized to access the physical storage locations, and to activate the portion of the mapping means at a subsequent moment in time wherein the activated portion of mapping means is utilized to access the physical storage locations.","According to yet another aspect, a virtual storage system operational method comprises providing a virtual storage space including a plurality of virtual storage locations, providing a physical storage space including a plurality of physical storage locations configured to store data, and providing a memory comprising a mapping system for associating respective ones of the virtual storage locations with respective ones of the physical storage locations, extracting at least a portion of the mapping system from the memory at a first moment in time, and providing the extracted portion of the mapping system into the memory at a second moment in time subsequent to the first moment in time.","Referring to , an exemplary arrangement of a data storage system is depicted as reference number . According to aspects of the invention, storage system  is embodied as a virtual storage system. In one arrangement, storage system  is a virtual array (RAID) storage system having abstract addressing or mapping between a virtual storage space and physical storage space as described in further detail below. Virtual storage system arrangements differ from conventional disk array constructions which utilize mathematical functions to provide literal addressing which are fixed to blocks of physical storage space wherein a given address corresponds to a known physical block. Virtual storage systems implement adaptive, dynamic and arbitrary addressing enabling increased flexibility compared with conventional arrangements. For example, a plurality of virtual storage addresses of virtual storage space may be utilized to address a single physical storage location of physical storage space. In such a virtual storage system arrangement, point in time copies of data, also referred to as snapshot volumes of data, may be created which may result in over commitment of a virtual storage system as divergence of data occurs. Virtual storage system arrangements provide increased apparent capacity and flexibility compared with conventional constructions.","Storage system  arranged as a virtual storage configuration utilizes linear addressing space according to a Small Computer System Interface (SCSI) command set in one exemplary configuration. Although the presentation of storage system  to a host  may be consistent at different moments in time, a mapping system of a virtual storage system arrangement may change to accommodate demands or requirements of the storage system. Exemplary details regarding a virtual storage system are discussed in U.S. Pat. No. 5,392,244 to Jacobson et al., the teachings of which are incorporated herein by reference. Further details and aspects of virtual array technology are described in HP Virtual Array Technology, 2001 and Executive Summary: Virtualization, Simplification and Storage, November 2001, both available from www.hp.com, and the teachings of which are incorporated herein by reference.","Still referring to , storage system  in the exemplary described arrangement includes a controller  and storage space  arranged to store data. Storage system  in the illustrated application is configured to interface with host . Storage system  is arranged to store data received from host  as well as provide requested data to host . Host  may be implemented as a workstation, personal computer, server, network of computer devices, or other appropriate computer structure utilizing a separate data storage system.","In the illustrated configuration, controller  is arranged to implement interfacing operations with respect to host  including handling of input\/output (I\/O) requests. In addition, controller  provides management of storage space  including addressing of storage space  and implementing storage of data therein. As described below in one exemplary configuration, controller  is arranged to create a virtual storage space representation of physical storage space and a mapping system to provide addressing there between.","In the depicted exemplary arrangement, controller  includes a central processing unit (CPU)  and memory . An exemplary central processing unit is a PowerPC 440 or 8240 available from Motorola, Inc.","Controller  of storage system  may be configured to implement AutoRAID operations as discussed in the '244 patent discussed above. Controller  implementing. AutoRAID operations may monitor use of data stored within system  and determine a best RAID level for the data. For example, infrequently written data is stored in RAID 5DP providing storage efficiency while frequently written data may be stored in RAID 1+0 providing optimum performance. Data may be moved between RAID levels depending upon the age of the data, frequency of accessing the data, corruption of a physical disk, and other factors.","Memory  may be utilized to store maps as described further below for use in addressing storage space , to store executable code usable by controller , and to provide a cache for temporarily storing data. Memory  may be implemented as random access memory (RAM) and include a plurality of separate memory areas for storing executable code, maps, and cache in one embodiment.","Referring to , an illustrative representation of storage space  of system  is shown. Storage space  includes a virtual storage space  and a physical storage space  according to an exemplary virtual storage architecture of the described system . Virtual storage space  includes a plurality of virtual storage volumes  and physical storage space  includes a plurality of physical storage volumes . The depicted number of volumes ,  is exemplary and more or less volumes  or volumes  may be utilized in a given application.","Virtual storage volumes  may be referred to as logical unit numbers (LUNs), logical volumes or logical drives. Virtual storage space  including virtual storage volumes  provide a convenient representation of storage capacity to host . Host  may utilize a SCSI command set to implement addressing of storage space  including virtual storage volumes . Host  may implement a logical volume manager, such as LVM software for use in an HP-UX operating system and available from Hewlett-Packard Company, to provide centralized management of storage system . For example, a logical volume manager may provide a virtualization of data storage of storage system  within host  for use in interfacing storage system  with host applications. Management features of system  may appear in a plurality of software management interfaces: SCSI command set, Virtual Front Panel (VFP), Graphical User Interface (GUI), Command Line User Interface (CLUI), Application Programming Interface (API), etc. for use in various solutions integrations.","Physical storage volumes  may comprise an array of disks individually configured to provide actual storage digital data (i.e., no data is stored using virtual storage space in the described configuration). In one aspect, controller  controls storage of data using volumes  according to desired RAID levels. The number of volumes  may be tailored to the particular implementation of system .","Virtual storage space  provides an abstract representation of physical storage space  to host . Virtual storage space  may be modified as desired by controller  or host . For example, virtual storage space  may be tailored to represent physical storage space  in a format which may be conveniently accessed by host . In turn, a logical volume manager of host  may provide yet another virtual abstraction of virtual storage space  (not shown) in a format which may be conveniently utilized by host applications.","Virtual storage space  of system  includes a plurality of addresses or storage locations . The depicted exemplary physical storage space  includes a plurality of addresses or storage locations . Addresses  of virtual storage space  are utilized to provide addressing of addresses  of physical storage space  wherein data is stored.","For example, in one embodiment, controller  operates to create and implement a mapping system  comprising a plurality of pointers  to access physical storage locations . Pointers  of mapping system  may be stored within memory  to implement addressing to associate a plurality of respective addresses or locations  of virtual storage space  with respective addresses or locations  of physical storage space .","Host  may read or write data with respect to system  by submitting requests. Such requests may address a storage location  of virtual storage volumes . A request received from host  identifying a virtual storage location  has an associated pointer  which identifies the respective physical storage location  which contains the actual data to be read by host , or written to by host , as indicated in the request identifying the virtual storage location .","Individual virtual storage locations  may represent a common predefined amount of data at physical storage locations  in the described implementation. For example, virtual storage locations  may refer to clusters including 512 blocks which individually include 512 bytes of data in one exemplary arrangement. Accordingly, a virtual storage location  refers to a cluster size piece of data of a respective physical storage location  including 512 blocks individually comprising 512 bytes of data providing a total of 256 Kbytes of data per physical storage address or location  in one embodiment.","Storage system  arranged according to a virtual storage architecture is able to implement operations not capable in conventional RAID systems. For example, controller  may create a virtual copy of a storage volume  by duplicating the pointers of the original volume  being copied rather than duplicating the data itself. Such duplication of pointers may be referred to as providing a point in time copy or a snapshot volume of a virtual storage volume .","Referring to , additional details of exemplary point in time copy or snapshot operations are described. A plurality of virtual storage volumes  and physical storage volumes  are shown in . A first virtual storage volume  may be referred to as a parent or original volume while a second virtual storage volume  may be referred to as a snapshot volume . Snapshot operations may be performed to create a new snapshot volume or to refresh an existing snapshot volume to provide a snapshot of the original volume.","In the depicted example, original volume  includes a plurality of respective pointers  at a given moment in time which map virtual storage locations  to physical storage locations . During a snapshot operation, controller  creates another virtual storage volume  of the original volume . In one embodiment, controller  copies the associated pointers  of volume  and creates volume  including the same pointers  pointing to the same physical storage locations  as original volume  at the moment in time when volume  is snapped.","When first created, snapshot volume  shares all of its associated physical storage space  with original volume . Thereafter, data of either the snapshot volume  or the original volume  may be updated responsive to operations from host  or internal operations of controller . When an update occurs, new physical storage space is allocated to hold the new\/modified data. The corresponding pointer(s)  for the new\/modified data of either the snapshot volume  or the original volume  (i.e., the volume that received the new\/modified data) are set to point to the new physical storage address  storing the new data while the corresponding respective pointer(s)  of the unmodified data point to the same or original address(s)  to preserve the snapped data. The provision of new pointers for the new\\modified data process is called divergence. Space that has diverged is no longer shared between snapshot volume  and original volume .","For example, as shown in , a virtual storage location  initially addresses a physical storage location . Accordingly, following a snapshot operation  of original volume , a respective virtual storage location  of snapshot volume  also addresses physical storage location . Thereafter, assume a first write operation  occurs to virtual storage location . Data is retrieved from physical storage location , modified by the first write operation, and stored as diverged data in a new physical storage location . The pointer  associated with virtual storage location  becomes a divergence pointer to address physical storage location  following the first write operation . However, a pointer  of virtual storage location  of snapshot volume  still addresses physical storage location  providing access to the unmodified original data which was snapped.","Updates to data of snapshot volume  may also occur as illustrated by the exemplary second write operation  to a virtual storage location  of snapshot volume . A pointer  previously associated with virtual storage location  and a corresponding physical storage location  is adjusted to now refer to a new physical storage location  following the second write operation and including the modified data which was previously stored as physical storage location . A pointer  associated with a virtual storage location  of original volume  still addresses physical storage location  following the second write operation.","Since a snapshot volume does not consume additional physical storage space at the moment in time the parent volume is snapped, it is possible to configure a snapshot volume so that available physical storage space of storage system  becomes exhausted as divergence occurs. System  permits snapshot operations even if system  does not have sufficient physical storage space to accommodate divergence of the resulting snapshot volume as data is modified. This state of the storage system  may be referred to as over committed. It may be advantageous to allow storage system  to become over committed because one or more snapshot volumes of system  may not experience complete divergence in their cycle of use. In such a case and with over commitment, storage system  may give an appearance that it has more storage space (represented by virtual storage space) than its available physical storage space.","As mentioned previously, mapping system  comprising a plurality of pointers  may be stored within memory . It may be desired to free portions of memory  (portions of memory  dedicated to storage of pointers  may also referred to as mapping space) to accommodate additional pointers , to provide additional cache space, to provide other storage space, or for other reasons. Aspects of the invention provide structural embodiments and methodologies for using memory  or other mapping space to enhance storage capabilities of mapping system  for additional pointers or for other reasons.","According to one operational aspect, controller  is arranged to extract portions of mapping system , and pointers  thereof, to provide storage capacity for new pointers  or other purposes. Thereafter, the extracted portions of mapping system  and pointers  may be again provided into memory  for use in implementing addressing intermediate virtual storage space  and physical storage space .","One embodiment provides identification of portions of mapping system , including the appropriate pointers  thereof, which may be extracted from memory  with minimal adverse effects upon the performance of system  resulting from the extraction of the portions of mapping system . For example, in one aspect, it is desired to extract portions of mapping system  which will result in minimal delays during operation of system  and handling of I\/O requests from host .","Snapshot volumes described above are commonly utilized in exemplary operations for restore operations or to stream data to tape storage media. Otherwise, the data of snapshot volumes may not be accessed, modified or utilized for relatively extended periods of time. However, the generation of snapshot volumes consumes resources of memory  for storage of pointers  for the snapshot volume. Accordingly, even though a snapshot volume may not consume additional physical storage space, memory  is utilized in one embodiment to store the pointers  for the snapshot volume.","According to aspects of the invention, controller  may utilize criteria, including for example the type of the virtual storage volumes , to identify portions of mapping system  as candidates for deactivation. Controller  may utilize criteria for identifying portions of the mapping space  to be deactivated including for example identifying volumes which are snapshot volumes or are not regular volumes. Controller  is arranged to extract portions of mapping system  including pointers  from memory  for a snapshot or other volume according to on exemplary arrangement. Extraction of respective portions of the mapping system  for a virtual storage volume may be referred to as deactivating the virtual storage volume. According to exemplary described aspects, controller  identifies one or more virtual storage volume as candidate(s) for deactivation, and thereafter extracts the respective portions of the mapping system  and the pointers  from memory  corresponding to the identified volume(s) .","According to other aspects of the invention, controller  may utilize additional or other criteria for identifying appropriate virtual storage volumes  or portions of mapping system  to be deactivated. For example, controller  may monitor a period of dormancy for a given virtual storage volume  wherein there is a lack of input\/output requests from a host  with respect to the volume  for a predetermined period of time. The controller  may use such or other criteria to specify deactivation of the virtual storage volume .","In one embodiment, controller  extracts the pointers  of the mapping system  which correspond to an identified snapshot volume or other virtual storage volume  from memory  to increase the amount of memory  available for other uses including storage of additional pointers . Controller  may copy or remove the pointers  or portions of mapping system  to perform the described extraction. The extracted portions of the mapping system  may be referred to as deactivated portions of mapping system . The deactivated portions of the mapping system  and deactivated virtual storage volume(s)  are not utilized to access physical storage locations while in a deactivated state according to aspects of the invention. Activated portions of mapping system  are utilized to implement addressing intermediate virtual storage space  and physical storage space .","In one exemplary extraction operation, controller  accesses a table which identifies storage objects corresponding to an identified snapshot or other volume for deactivation. Individual storage objects identify a plurality of pages of pointers  for the identified volume. Individual pages, also referred to as segments, have a size of 64 KB and include 16,384 pointers . Individual pointers  point to clusters having a size of 256 KB of physical storage space at a respective physical storage location  as mentioned previously. Accordingly, individual pages or segments address 4 GB of data within physical storage space  in the described exemplary embodiment. The pointers  are paged out or otherwise extracted from memory  following identification of the appropriate volume and the respective storage objects, pages and pointers . Accordingly, in one embodiment, pointers  may be extracted according to one or more page of an identified volume to be deactivated.","According to the exemplary described implementation, the extracted pointers  are copied to or otherwise provided within other storage locations different than an initial storage location (e.g., memory ). For example, the extracted pointers  are copied to physical storage volumes  of physical storage space . Following extraction, the portions of memory  which stored the extracted pointers  are thereafter available for storage of different pointers  (e.g., for a new or existing different virtual storage volume ). Accordingly, following extraction of the identified pointers  from memory , the available capacity of the mapping space of memory  to accommodate storage of new pointers  is increased. Controller  is arranged in such an embodiment to write new pointers  into memory  at locations of the extracted pointers  if desired.","At subsequent moments in time after deactivation, deactivated pointers  or deactivated portions of mapping system  (e.g., corresponding to a deactivated virtual storage volume ) may be reactivated by controller  to again provide addressing of physical storage locations  using the reactivated pointers . For example, controller  may extract the pointers  for a deactivated virtual storage volume  from physical storage space  and provide such pointers  in memory  to reactivate the virtual storage volume  and the respective pointers .","Controller  may initiate a reactivation procedure responsive to a plurality of criteria in different arrangements. Exemplary criteria include a request for a restore operation of data of the deactivated virtual storage volume , for writing the data of the volume  to tape, or for other reasons. As described in the patent application Ser. No. 10\/264,661 having incorporated herein by reference, updates which occurred during the deactivation may be stored within a journal and applied to the reactivated virtual storage volume . Another virtual storage volume  may be deactivated to accommodate the reactivation of a given virtual storage volume  and to provide adequate mapping space within memory .",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 4","b":["12","18","12"]},"Initially, at a step S, it is determined whether the creation of an additional virtual storage volume such as a snapshot volume is desired. If not, the depicted method proceeds to a step S.","If the condition of step S is affirmative, the controller may proceed to a step S to store pointers for the created volume within memory.","At step S, it is determined whether additional memory capacity is desired. If the condition of step S is negative, the depicted method may proceed to a step S.","If the condition of step S is affirmative, the controller may proceed to a step S to identify one or more virtual storage volume for deactivation.","At a step S, the controller extracts pointers for the identified one or more virtual storage volume from an initial storage location (e.g., memory) and provides the pointers in an appropriate destination storage location, such as physical storage space.","At step S, it is determined whether reactivation of one or more virtual storage volume is desired. If the condition of step S is negative, controller may return to step S.","If the condition of step S is affirmative, the controller may proceed to a step S to extract deactivated pointers of a deactivated virtual storage volume from the respective storage location, such as physical storage space, and provide the pointers in memory.","As described herein, aspects of the invention provide systems and methodologies for reducing an impact of a limited resource, such as memory , upon the operations of a virtual storage system  including operations of performing snapshot operations. Aspects of the invention enable accommodation of additional virtual storage volumes  than would otherwise be provided in systems wherein all the pointers for the volumes are resident within memory . Aspects of the invention also provide improvements over some systems wherein maps are paged into and out of memory according to a least recently used algorithm.","According to some arrangements of the invention, deactivation of virtual storage volumes, such as snapshot volumes, alleviates limitations imposed by fixed resources, such as memory . Specific virtual storage volumes may be identified and selected for deactivation as described above to maintain performance and speed of system . For example, deactivation of snapshot volumes is not believed to greatly degrade the performance and the speed of system  inasmuch as such volumes are not typically actively used until it is desired to restore old data or stream data to tape wherein speed may not be of significant importance. Following restoration or streaming of data to tape, it may be desired to again deactivate the virtual storage volume. Accordingly, provision of pointers  with strict performance requirements may be maintained in memory  in an active state to assure optimal performance of system  while other pointers  may be identified and deactivated.","Aspects of the invention enable system  to be over committed while minimizing utilization of resources of memory  for virtual storage volumes which have no or minimal requirements for speed or performance. Structures and methods of the invention enable support of additional virtual storage volumes, such as snapshot volumes, compared with conventional storage arrangements.","The protection sought is not to be limited to the disclosed embodiments, which are given by way of example only, but instead is to be limited only by the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
