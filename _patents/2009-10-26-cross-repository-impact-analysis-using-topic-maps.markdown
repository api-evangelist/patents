---
title: Cross repository impact analysis using topic maps
abstract: An apparatus for automatically analyzing the impact of changing a business requirement on an IT infrastructure of an enterprise. A request is received to perform an analysis of an impact on the enterprise by changing a particular instance of the business requirement. A model repository is queried to determine which IT assets of the enterprise are impacted by changing the particular instance of the business requirement. An impact relevant subset of a topic map is received from the model repository representing the impact on the enterprise by changing the particular instance of the business requirement that includes the particular instance requirement as a root node and only those specific assets impacted by changing the particular instance requirement as connected nodes. Then, the impact relevant subset of the topic map representing the impact on the enterprise by changing the particular instance of the business requirement is outputted on an output device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08645904&OS=08645904&RS=08645904
owner: International Business Machines Corporation
number: 08645904
owner_city: Armonk
owner_country: US
publication_date: 20091026
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","The disclosure relates generally to an improved data processing system and more specifically to a computer implemented method, apparatus, and computer usable program code for automatically analyzing and assessing the impact of changing an information technology business requirement on an information technology infrastructure of an enterprise and particularly on business information technology services used to provision the business requirement.","2. Description of the Related Art","The use of service-oriented architecture (SOA) environments and information services is fast becoming the preferred implementation for enterprise systems. Using SOA, an enterprise may be visualized as a collection of loosely coupled building blocks, called information services or business services. Information services provide a discrete business function, such as, for example, checking credit, opening an account, and so on, that can be adapted to a particular business context. As a business expands its enterprise capabilities, more information services are added to the network to accommodate the expansion.","SOA is about enabling or aligning businesses with information technology (IT) through a flexible services-based approach. This aligning of businesses with IT implies that business services can be reconfigured to meet changes in business processes. SOA is also about making businesses more flexible and agile in changing market conditions. For example, a business may decide to focus more on a middle market rather than on a personal line of business.","As a business changes its focus, the business will want to quickly understand the IT impact of these changes on the business, such as which business services will be affected by the change. Today, no good way exits for automating this visibility within an SOA-based enterprise architecture. An SOA-based enterprise architecture is a holistic expression of an enterprise's key business information, application, and technology strategies, along with their impact on models for business functions, rules, and processes.","According to one embodiment of the present invention, the impact of changing a business requirement on an information technology infrastructure of an enterprise is automatically analyzed. A request is received to perform an analysis of an impact on the information technology infrastructure of the enterprise by changing a particular instance of the business requirement. A model repository is queried to determine which information technology assets of the enterprise are impacted by changing the particular instance of the business requirement. An impact relevant subset of a topic map is received from the model repository representing the impact on the information technology infrastructure of the enterprise by changing the particular instance of the business requirement that includes the particular instance of the business requirement as a root node and only those specific information technology assets impacted by changing the particular instance of the business requirement as connected nodes. Then, the impact relevant subset of the topic map representing the impact on the information technology infrastructure of the enterprise by changing the particular instance of the business requirement is outputted on an output device.","As will be appreciated by one skilled in the art, the present invention may be embodied as a system, method or computer program product. Accordingly, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule,\u201d or \u201csystem.\u201d Furthermore, the present invention may take the form of a computer program product embodied in any tangible medium of expression having computer usable program code embodied in the medium.","Any combination of one or more computer-usable or computer-readable medium(s) may be utilized. The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, or semiconductor system, apparatus, or device. More specific examples (a non-exhaustive list) of the computer-readable medium would include the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a portable compact disc read-only memory (CDROM), an optical storage device, or a magnetic storage device. In the context of this document, a computer-usable or computer-readable medium may be any medium that can store the program for use by or in connection with the instruction execution system, apparatus, or device. The computer-usable program code may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc.","Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java\u2122, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","The present invention is described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems), and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions.","These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks. These computer program instructions may also be stored in a computer-readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable medium produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","With reference now to the figures and in particular with reference to , exemplary diagrams of data processing environments are provided in which illustrative embodiments may be implemented. It should be appreciated that  are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","102","100","102"]},"In the depicted example, server  and server  connect to network , along with storage unit . Storage unit  is a network storage device capable of storing data in a structured or unstructured format. Further, storage unit  may represent a plurality of storage units connected to network . Storage  may, for example, be a database within an enterprise that stores and manages reusable software IT assets and any other data related to these reusable software IT assets. In addition, storage  may be a standards-based business service repository that captures information regarding business services, business policies, and service subscribers or clients.","Clients , , and  also connect to network . Clients , , and  may, for example, be personal computers or network computers. Users, such as solution architects, may utilize client devices , , and  to automatically analyze and assess the impact of changes made to the reusable software IT assets stored in storage . In the depicted example, server  provides information, such as boot files, operating system images, and applications to clients , , and . Clients , , and  are clients to server  and\/or server  in this example. Network data processing system  may include additional servers, clients, and other devices not shown to implement processes of illustrative embodiments.","Program code located in network data processing system  may be stored on a computer recordable storage medium and downloaded to a data processing system or other device for use. For example, program code may be stored on a computer recordable storage medium on server  and downloaded to client  over network  for use on client .","In the depicted example, network data processing system  is the Internet with network  representing a worldwide collection of networks and gateways that use the Transmission Control Protocol\/Internet Protocol (TCP\/IP) suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, governmental, educational and other computer systems that route data and messages. Of course, network data processing system  also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN).  is intended as an example, and not as an architectural limitation for the different illustrative embodiments.","With reference now to , a block diagram of a data processing system is shown in which illustrative embodiments may be implemented. Data processing system  is an example of a computer, such as server  or client  in , in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments. In this illustrative example, data processing system  includes communications fabric , which provides communications between processor unit , memory , persistent storage , communications unit , input\/output (I\/O) unit , and display .","Processor unit  serves to execute instructions for software that may be loaded into memory . Processor unit  may be a set of one or more processors or may be a multi-processor core, depending on the particular implementation. Further, processor unit  may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example, processor unit  may be a symmetric multi-processor system containing multiple processors of the same type.","Memory  and persistent storage  are examples of storage devices . A storage device is any piece of hardware that is capable of storing information, such as, for example without limitation, data, program code in functional form, and\/or other suitable information either on a temporary basis and\/or a permanent basis. Memory , in these examples, may, for example, be a random access memory or any other suitable volatile or non-volatile storage device. Persistent storage  may take various forms depending on the particular implementation. For example, persistent storage  may contain one or more components or devices. For example, persistent storage  may be a hard drive, a flash memory, a rewritable optical disk, a rewritable magnetic tape, or some combination of the above. The media used by persistent storage  also may be removable. For example, a removable hard drive may be used for persistent storage .","Persistent storage  includes SOA industry model repository (IMR)  and impact assessment application . SOA IMR  provides the needed tools to tie business goals with models for business processes and services in order to support IT systems that express the SOA enterprise architecture. SOA IMR  provides the ability to automatically select software processes and service models based on the functional requirements for a desired software application design. For example, based on an input requirement for a reservation service for a car rental company, SOA IMR  automatically selects relevant software models, such as a use case model for a reservation, a business process model, a service model, a domain model, and a data model, all related to creating the reservation system. Consequently, SOA IMR  must manage and maintain complex associations between functional requirements and the reusable software models.","It should be noted that SOA IMR  may be implemented as a relational database. Moreover, SOA IMR  includes topic maps . SOA IMR  uses topic maps  to maintain the complex associations between functional requirements and the reusable software models needed to satisfy those functional requirements. Topic maps are an ISO standard for the representation and interchange of knowledge, with an emphasis on the findability of information. The ISO standard is formally known as ISO\/IEC 13250:2003. Topic maps are a way to build standard indexes.","A topic map represents information using topics that may represent any concept from people, countries, and organizations to software modules, individual files, and events. In this case, a topic may be a functional requirement, a non-functional requirement, a software model, or a software pattern. In other words, illustrative embodiments may use a topic map to model relationships between software requirements, which include functional and non-functional requirements, and necessary reusable software assets, which include software models and patterns, needed to satisfy those software requirements.","Associations between the topics within the topic map represent how topics relate to one another. In addition, the topic map maintains occurrences of the topics that represent where the topics may be found, such as a Webpage, a uniform resource locator (URL), or a reference within a book. Thus, topic maps are similar to semantic networks, concept maps, and mind maps. However, it should be noted that illustrative embodiments are not limited to the use of topic maps to represent stored data. Illustrative embodiments may, for example, use the Web Ontology Language (OWL). OWL is a family of knowledge representation languages for authoring ontologies and is endorsed by the World Wide Web Consortium (W3C).","Impact assessment application  is a software program that provides tools to analyze and assess the impact of a software change to a business service or process across an entire enterprise. For example, impact assessment application  is able to determine who is impacted as a result of a change in a requirement for a business service or process; when does the requirement change need to be implemented in the system in order to achieve the desired business goal or objective; where possible problems may present themselves when implementing this new technology or process; and how does this requirement change to the system impact the enterprise's business goals or objectives.","Also, data processing system  is coupled to requirement repository  via a network, such as network  in . Requirement repository  includes meta-model . A meta-model is an explicit model of the constructs and rules needed to build specific models within a domain of interest. A valid meta-model is an ontology, but not all ontologies are modeled explicitly as meta-models.","Requirement repository  captures and stores published standards-based service components and composite business services, which customers and business partners may discover and use in their own business processes. Businesses may build on each other's services, creating new loosely coupled, process-centric and industry-centric business service ecosystems.","Requirement repository  may, for example, be a commercially available system, such as Rational\u00ae RequisitePro\u00ae, a product available from International Business Machines Corporation. Rational\u00ae RequisitePro\u00ae is a requirements management tool that organizes and documents business requirements so that an enterprise can manage software application design change and provides for collaborative development of software applications. A business requirement is a capability that a software application design must provide. Conformance to some set of requirements defines the success of a software application.","In addition, requirement repository  may represent a plurality of business requirement repositories managed by a plurality of different client enterprises. Requirement repository  may include data regarding industry type, architectural style, functional business requirements, and non-functional business requirements. Industry type defines the type of industry, such as, for example, the insurance, financial, healthcare, or retail industry, associated with a particular software application. Architectural style defines the architectural style, such as SOA, client\/server, or distributed computing architectural style, for the particular software application.","Software application frameworks offer sets of reusable and adaptable components embedded within an architecture optimized for a given target domain. A software IT asset is a collection of artifacts that provide a solution to a problem in a particular context, such as a business requirement, a design model, implementation code, or a test case. A software IT asset generally refers to a set of one or more related artifacts that have been created or harvested for the purpose of applying the IT asset repeatedly in subsequent software development environments. Source code and binary code are examples of artifacts adapted for use with the software IT assets. Other examples of artifacts include related documentation, such as business requirement specifications, design documents, operation manuals, and the like. Additional examples of artifacts include models, such as process models, structural models, resource models, implementation models, and so forth, which may additionally include object models, collaboration diagrams, deployment models, etc.","Reusable software IT assets may be utilized to address both the functional and nonfunctional business requirements of a software application. Functional business requirements define what a particular piece of software can be expected to accomplish within a particular context. Non-functional business requirements define global constraints that must be satisfied by the software application. These global constraints, also known as software global attributes, typically include performance, fault-tolerance, availability, scalability, transactionality, and security constraints. In other words, non-functional business requirements define how the software application is built within a particular context.","During a software development process, functional business requirements are incorporated into software artifacts and are implemented in such a manner that the software satisfies the functional business requirements for the software application. However, non-functional business requirements are not implemented in the same manner as functional business requirements. Non-functional business requirements are more complex to deal with and are usually very abstract. In addition, non-functional business requirements may conflict with each other.","Communications unit , in these examples, provides for communications with other data processing systems or devices. In these examples, communications unit  is a network interface card. Communications unit  may provide communications through the use of either or both physical and wireless communications links.","Input\/output unit  allows for input and output of data with other devices that may be connected to data processing system . For example, input\/output unit  may provide a connection for user input through a keyboard, a mouse, and\/or some other suitable input device. Further, input\/output unit  may send output to a printer. Display  provides a mechanism to display information to a user.","Instructions for the operating system, applications, and\/or programs may be located in storage devices , which are in communication with processor unit  through communications fabric . In these illustrative examples the instructions are in a functional form on persistent storage . These instructions may be loaded into memory  for execution by processor unit . The processes of the different embodiments may be performed by processor unit  using computer implemented instructions, which may be located in a memory, such as memory .","These instructions are referred to as program code, computer-usable program code, or computer-readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media, such as memory  or persistent storage .","Program code  is located in a functional form on computer readable media  that is selectively removable and may be loaded onto or transferred to data processing system  for execution by processor unit . Program code  and computer readable media  form computer program product  in these examples. In one example, computer readable media  may be in a tangible form, such as, for example, an optical or magnetic disc that is inserted or placed into a drive or other device that is part of persistent storage  for transfer onto a storage device, such as a hard drive that is part of persistent storage . In a tangible form, computer readable media  also may take the form of a persistent storage, such as a hard drive, a thumb drive, or a flash memory that is connected to data processing system . The tangible form of computer readable media  is also referred to as computer recordable storage media. In some instances, computer readable media  may not be removable.","Alternatively, program code  may be transferred to data processing system  from computer readable media  through a communications link to communications unit  and\/or through a connection to input\/output unit . The communications link and\/or the connection may be physical or wireless in the illustrative examples. The computer readable media also may take the form of non-tangible media, such as communication links or wireless transmissions containing the program code.","In some illustrative embodiments, program code  may be downloaded over a network to persistent storage  from another device or data processing system for use within data processing system . For instance, program code stored in a computer readable storage medium in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing program code  may be a server computer, a client computer, or some other device capable of storing and transmitting program code .","The different components illustrated for data processing system  are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in  can be varied from the illustrative examples shown. The different embodiments may be implemented using any hardware device or system capable of executing program code. As one example, the data processing system may include organic components integrated with inorganic components and\/or may be comprised entirely of organic components excluding a human being. For example, a storage device may be comprised of an organic semiconductor.","As another example, a storage device in data processing system  is any hardware apparatus that may store data. Memory , persistent storage  and computer readable media  are examples of storage devices in a tangible form.","In another example, a bus system may be used to implement communications fabric  and may be comprised of one or more buses, such as a system bus or an input\/output bus. Of course, the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally, a communications unit may include one or more devices used to transmit and receive data, such as a modem or a network adapter. Further, a memory may, for example, be memory  or a cache such as found in an interface and memory controller hub that may be present in communications fabric .","Illustrative embodiments provide a computer implemented method, apparatus, and computer usable program code for automatically analyzing the system wide impact on an entire IT infrastructure of an enterprise by changing an IT business requirement and in particular on the business IT services used to provision the IT business requirement that is to be changed. Illustrative embodiments provide a standards-based federated approach to meta-data management and representing this meta-data using a standards-based index, such as, for example, a topic map or OWL-Description Logics (DL). This standards-based index approach provides illustrative embodiments with an undirected graph representation of the meta-data across the federated repository (i.e., the SOA IMR).","Using this standards-based index approach, illustrative embodiments are able to answer questions that integrate all relevant data, whether the relevant data comes from flat files, extensible markup language (XML), Websites, document management systems, applications, or special-purpose systems. Thus, illustrative embodiments are able to search large volumes of data and correlate this data in complex ways. In order to derive the greatest benefit from these large volumes of data, illustrative embodiments require full query-based access to all of the most up-to-date information available, irrespective of where the data is stored or the data's format, with the flexibility to customize queries easily to meet the needs of a variety of individual users.","Illustrative embodiments may be implemented as a visual client, which may be packaged within a server repository or downloaded into a client developer platform as an eclipse plug-in for example, that is capable of graphically displaying the assets (i.e., model elements) affected by the change, such as a requirement change. This visual client is also capable of graphically displaying associations between affected assets, as well as the availability of source and instances of the affected assets.","Illustrative embodiments import new specific instances of business requirements from one or more requirement repositories into the SOA IMR. An instance of a business requirement is a specific requirement that is obtained from a particular client enterprise, such as, for example, a particular client insurance company. As illustrative embodiments create IT assets to satisfy the imported IT business requirements, illustrative embodiments also create associations between these created IT assets, the instances of the business requirements that the created IT assets satisfy, and any reference IT asset models that were used to create the IT assets. Then, illustrative embodiments store these associations in the SOA IMR.","After these connectivity associations are recorded, illustrative embodiments are then able to perform a change driven impact analysis on, for example, a high level business type of requirement, such as a business focus goal or a business capability, by querying the SOA IMR to understand what IT assets are impacted by this business requirement change. Since the SOA IMR tracks everything as a topic map, illustrative embodiments are in effect asking the SOA IMR for an impact relevant subset of the topic map with that particular business requirement associated with the change as the root topic or node. Subsequent to obtaining the impact relevant subset of the topic map representing the desired high level change, such as an enterprise's change in a focus goal, illustrative embodiments essentially have all the relevant information regarding that focus goal business requirement change.","However, this impact relevant subset can typically include a lot of information. Consequently, illustrative embodiments may apply selective scoping to that impact relevant subset of the topic map to show, for example, only a particular type of IT asset that is affected by the business requirement change. Then, this selective output is displayed to the user visually on a display device, such as a computer monitor display screen.","Thus, illustrative embodiments automate and manage the traceability of the scope of the impact of changes, such as business requirement changes, on an enterprise. The scope of the impact is traced all the way through the entire IT system or the entire business service lifecycle from service identification, to service specification, to service implementation and deployment. Key benefits of analyzing the impact of business requirement changes are: 1) to minimize the complexity of data needed for decision support; 2) to mitigate risk through providing a better understanding of the impact of the business requirement changes on an enterprise; and 3) to decrease the cycle time for decision making.","By representing the federated meta-data from multiple repositories using the ISO standard of topic maps, illustrative embodiments can perform a business requirement change impact analysis on these topic maps by defining impact analysis as measuring the effect of changing graph objects and sub-graph structures in a large pathway graph. In a federated database environment, illustrative embodiments may apply graph operations to data stored in any format, such as a relational format or a non-relational format, and to data stored in any location, such as a remote location or a local location.","One example of such a federation of data would be trying to understand the relationship between personnel inside a large company. First, illustrative embodiments would aggregate together meta-data from various repositories regarding the personnel in the company, such as their roles, their managers, their departments, the teams they belonged to, the products they are working on, what clients they are involved with, and how much revenue these clients generate. Then, using an illustrative embodiment, a top executive of the company may perform an analysis of the impact on the quarterly earnings of the company by losing a few key personnel in a plane crash.","With reference now to , an exemplary illustration of a pathway graph is depicted in accordance with an illustrative embodiment. Pathway graph  is a graph that illustrates the connectivity between different nodes, which may represent objects, such as IT assets, within the graph. Pathway graph  includes nodes -.","In this particular example, an impact assessment application, such as impact assessment application  in , analyzes the impact that a change in node  will have on node . To better understand the relationship between node  and node , the impact assessment application isolates node , along with all of its connections with node , from the rest of pathway graph .","The impact assessment application may, for example, apply a breadth-first search algorithm to pathway graph  by passing in the start node (i.e., node ) and the end node (i.e., node ). A breadth-first search algorithm is a graph search algorithm that begins at the root node and explores all the neighboring nodes. Then, for each of those nearest nodes, the algorithm explores their unexplored neighbor nodes, and so on, until the algorithm finds the goal or end node. The impact assessment application uses this breadth-first search algorithm to find all connected nodes (i.e., all connected paths between node  and node ) in pathway graph . This process allows the impact assessment application to isolate that part of pathway graph  that is of interest (i.e., impact relevant sub-graph ). The impact assessment application may use a Java\u2122 implementation of such an algorithm to do such a graph search within entire topic maps to retrieve the impact relevant sub-graph, which is by definition also a topic map. Java and all Java-based trademarks and logos are trademarks of Sun Microsystems, Inc. in the United States, other countries, or both.","In this example, impact relevant sub-graph  includes nodes , , , and . Impact relevant sub-graph  is a subset of pathway graph , which is relevant to the analysis of the impact of changing node  and its affect(s) on node . After isolating impact relevant sub-graph , the impact assessment application performs the appropriate analysis on the sub-graph. Subsequent to analyzing impact relevant sub-graph , the impact assessment application provides a visualization of this analysis to the user on a display device, such as display  in . In addition, the impact assessment application may scope or narrow this visualization to only show specific effects on node  as a result of changing node .","With reference now to , an exemplary illustration of a meta-model is depicted in accordance with an illustrative embodiment. Meta-model  may, for example, be meta-model  in . Meta-model  may be created by a requirement repository, such as requirement repository  in , which may be a Rational\u00ae RequisitePro\u00ae tooling. Meta-model  illustrates the connections between the various types of requirements within the requirement repository from focus goal requirements all the way to specific IT instances of business requirements.","Meta-model  includes initiatives , focus goals , benchmarks , metrics , capabilities , service specifications , service implementations , requirements , functional requirements , and nonfunctional requirements .","Initiatives  represent requirements for business initiatives set by an enterprise. Focus goals  represent requirements for focusing on initiatives  as goals for the enterprise. Benchmarks  represent benchmarks for achieving focus goals . Metrics  represent the metrics used to measure benchmarks .","Capabilities  represent the requirements for the needed capabilities of focus goals . Service specifications  represent the specifications for capabilities . Service implementations  represent the implementations of capabilities .","Requirements  represent the specific IT instances of the business requirements of focus goals . Functional requirements  represent the functional business requirements for the specific IT instances of the business requirements. Nonfunctional requirements  represent the nonfunctional business requirements for the specific instances of the business requirements.","With reference now to , an exemplary illustration of a business goal to benchmark mapping chart is depicted in accordance with an illustrative embodiment. Business goal to benchmark mapping chart  illustrates an example project that maps business focus goals, such as focus goals  in , to benchmarks, such as benchmarks  in . Business goal to benchmark mapping chart  includes focus goals  and benchmarks .","In this example project, an enterprise's focus goal of \u201cBroader access to increase submissions\u201d (i.e., focus goal ) is tied to benchmark   and benchmark  . Using a meta-model, such as meta-model  in , illustrative embodiments may then trace from these identified benchmarks to the respective capabilities and from the capabilities to the specific IT instances of the business requirements for the focus goal. Afterward, illustrative embodiments import these specific IT instances of the business requirements into an SOA IMR, such as SOA IMR  in , from the client enterprise.","With reference now to , an exemplary illustration of a topic map is depicted in accordance with an illustrative embodiment. Topic map  may, for example, be topic map  in . Topic map  illustrates the connectivity captured inside an SOA IMR, such as SOA IMR  in , between business initiatives, focus goals, benchmarks, capabilities, IT reference requirements, IT instance requirements, reference models and instance models.","Topic map  includes initiative instance , focus goal instance , capability instance , functional requirement , reference requirement , reference model , and instance model . Initiative instance  is focus goal instance . Also, initiative instance  has capability instance . Capability instance  has functional requirement . In this example, functional requirement  is a specific business requirement for building an insurance company business service to provide an insurance quote to a customer. This insurance quote requirement contains reference requirement . Reference requirement  serves as a framework to build functional requirement .","Functional requirement  maps to reference model . In this example, reference model  is a specific example of an insurance application architecture (IAA) use case reference model, which is a product developed by International Business Machines Corporation. IAA is a set of information, process, and integration models that represent leading practice systems development in the insurance industry. IAA is an architectural blueprint with detailed insurance business content that can be applied to initiatives on an enterprise-wide or specific project basis. Reference model  maps to instance model . Reference model  serves as a framework to create instance model . Instance model  is a specific instance of reference model , which is specifically created for a specific client enterprise.","With reference now to  and , a flowchart illustrating an exemplary process for automatically analyzing the impact of changing an IT business requirement on an IT infrastructure of an enterprise is shown in accordance with an illustrative embodiment. The process shown in  may be implemented in an impact assessment application, such as impact assessment application  in .","The process begins when the impact assessment application imports a new instance of a business requirement from a requirement repository, such as requirement repository  in , of a particular client enterprise into an SOA IMR, such as SOA IMR  in  (step ). Then, the impact assessment application retrieves one or more reference IT assets that correspond to the new instance of the business requirement (step ). Afterward, the impact assessment application creates an instance of an IT asset that satisfies the new instance of the business requirement based on the one or more reference IT assets retrieved (step ).","Subsequently, the impact assessment application generates associations between the created instance of the IT asset, the new instance of the business requirement that the created instance of the IT asset satisfies, and the one or more reference IT assets used to create the instance of the IT asset (step ). Then, the impact assessment application records and stores the associations in a topic map, such as topic map  in , in the SOA IMR (step ). Afterward, the impact assessment application receives a request to perform an analysis of the impact on an IT infrastructure of a client enterprise by changing a particular instance of the business requirement (step ). In particular, the impact assessment application receives a request to perform an analysis of the impact on business IT services used to provision the particular instance of the business requirement.","Subsequently, the impact assessment application queries the SOA IMR to determine which instances of IT assets of the client enterprise are impacted by changing the particular instance of the business requirement (step ). Then, the impact assessment application receives from the SOA IMR an impact relevant subset of the topic map representing the impact on the IT infrastructure of the client enterprise by changing the particular instance of the business requirement that includes the particular instance of the business requirement as a root node and only those specific instances of the IT assets impacted by the change as connected nodes (step ). Afterward, the impact assessment application outputs the impact relevant subset of the topic map representing the impact on the IT infrastructure of the client enterprise by changing the particular instance of the business requirement (step ).","Subsequently, the impact assessment application makes a determination as to whether the impact assessment application receives a user input to selectively scope the impact relevant subset of the topic map representing the impact on the IT infrastructure of the client enterprise by changing the particular instance of the business requirement (step ). If the impact assessment application does receive a user input to selectively scope the impact relevant subset of the topic map representing the impact on the IT infrastructure of the client enterprise by changing the particular instance of the business requirement, yes output of step , then the impact assessment application scopes the impact relevant subset of the topic map selectively to include only a selected instance of an IT asset impacted by changing the particular instance of the business requirement (step ). Afterward, the impact assessment application outputs the selected instance of the IT asset impacted by changing the particular instance of the business requirement (step ). Thereafter, the process returns to step . If the impact assessment application does not receive a user input to selectively scope the impact relevant subset of the topic map representing the impact on the IT infrastructure of the client enterprise by changing the particular instance of the business requirement, no output of step , then the process terminates thereafter.","Thus, illustrative embodiments of the present invention provide a computer implemented method, apparatus, and computer program product for automatically analyzing and assessing the impact of changing an IT business requirement on an entire enterprise IT infrastructure and in particular on the business IT services used to provision the IT business requirement to be changed. The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","The invention can take the form of an entirely hardware embodiment, an entirely software embodiment, or an embodiment containing both hardware and software elements. In a preferred embodiment, the invention is implemented in software, which includes but is not limited to firmware, resident software, microcode, etc.","Furthermore, the invention can take the form of a computer program product accessible from a computer-usable or computer-readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a computer-usable or computer-readable medium can be any tangible apparatus that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device.","The medium can be an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system (or apparatus or device) or a propagation medium. Examples of a computer-readable medium include a semiconductor or solid state memory, magnetic tape, a removable computer diskette, a random access memory (RAM), a read-only memory (ROM), a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk-read only memory (CD-ROM), compact disk-read\/write (CD-R\/W) and DVD.","A data processing system suitable for storing and\/or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.","Input\/output or I\/O devices (including but not limited to keyboards, displays, pointing devices, etc.) can be coupled to the system either directly or through intervening I\/O controllers.","Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modems, and Ethernet cards are just a few of the currently available types of network adapters.","The description of the present invention has been presented for purposes of illustration and description, and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 7A","FIG. 7B"]}]},"DETDESC":[{},{}]}
