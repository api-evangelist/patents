---
title: Measuring confidence of file clustering and clustering based file classification
abstract: A uniformity of a cluster of samples is determined, and a corresponding raw confidence value is calculated. A confidence interval weight is calculated using a confidence interval to determine reliability of the uniformity. A trace length weight is calculated, as a function of traces of the samples. An n-gram weight is calculated, as a function of numbers of n-grams generated by the samples. A compactness weight is calculated, as a function of the similarity of the samples. A cluster weight is calculated as a function of the four above-described weights. A cluster confidence measurement is calculated as a function of the cluster weight and the raw confidence value. When a new sample is assigned to the cluster, an assignment confidence measurement is calculated, as a function of the cluster's confidence measurement and the sample's trace length, n-grams and similarity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08214365&OS=08214365&RS=08214365
owner: Symantec Corporation
number: 08214365
owner_city: Mountain View
owner_country: US
publication_date: 20110228
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This disclosure pertains generally to computer security, and more specifically to measuring the confidence of file clustering and clustering based file classification.","The clustering of executable files into sets can be used for file classification. For example, clustering can be used to classify files as malware or goodware. To do so, in a training phase, a set (cluster) of files known to comprise malware is labeled accordingly, as is a set (cluster) of files known to comprise goodware. Files of unknown status (samples) can then be classified as belonging to one cluster or another based on properties of the samples and the files in the clusters. This categorization can be more specific than a binary classification of a file, for example as malicious (malware) versus benign (goodware). Multiple clusters of files can be used, for example clusters of files known to belong to different families of malware, each specifically labeled per family. A family of malware typically includes different files resulting from modifications having been made to a common, parent codebase.","It can be assumed that different samples belonging to a classification or family will exhibit similar runtime behavior, and hence the similarity in runtime behavior can be used to classify a sample. Therefore, to classify a sample into a specific cluster, the runtime behavior of the sample is determined. The sample is then added to one of clusters, based on the similarity in runtime behavior to that of the members of the cluster. The appropriate label is added to the sample, according to the cluster based classification of the sample. In this context, a label comprises an indicator of the classification of the sample (e.g., malware, goodware, malware of a specific family, etc.). In other words, the sample is assigned to a cluster such that the sample's behavior matches most closely with the other samples in the cluster.","All training clusters, however, are not created equal. For example, if a cluster, C, contains all malware samples and another cluster, C, contains half malware and half goodware samples, then C is of better quality than C. Moreover, all cluster based classifications of unknown samples are not equally reliable. For example, if a first sample, S, is assigned to a better quality cluster than a second sample, S, then the classification of S is typically more reliable than that of S.","It would be desirable to address these issues.","A clustering confidence management system quantifies a confidence level in the quality of a cluster of samples which are clustered according to runtime behavior. A uniformity of the cluster is determined as a function of the ratio of the most frequently occurring unique sample label present in the cluster to the total number of unique sample labels present in the cluster. In some embodiments, determining the cluster uniformity further comprises reading the label of each sample in the cluster, determining the total number of unique sample labels that are present in the cluster, determining the most frequently occurring unique sample label present in the cluster and determining the number of samples in the cluster with the most frequently occurring unique sample label. In some embodiments, the uniformity of the cluster is further determined as a function of the percentages of the total number of unique sample labels, or of the total number of samples, comprised by multiple unique sample labels present in the cluster. A raw confidence value is assigned to the cluster, the raw confidence value being a function of the determined uniformity of the cluster. In some embodiments, the raw confidence value is equal to the determined uniformity of the cluster, whereas in other embodiments more complicated functions are used, such as calculating the raw confidence value by using a sigmoid function to map the determined uniformity of the cluster to a nonlinear scale.","A confidence interval weight for the cluster is calculated by using a confidence interval (for example, a standard adjusted Wald confidence interval) to determine the reliability of the determined uniformity of the cluster. A trace length weight for the cluster is calculated, as a function of the lengths of traces generated by the samples in the cluster. In some embodiments, the trace length weight is calculated as a function of an average of the lengths of the traces generated by the samples in the cluster. In some embodiments, the trace length weight is calculated as a function of the lengths of traces into security sensitive calls made by the samples in the cluster. Additionally, an n-gram weight for the cluster is calculated, as a function of the numbers of unique n-grams generated by the samples in the cluster. In some embodiments, the n-gram weight is calculated as a function of the numbers of unique n-grams generated by the samples in the cluster making security sensitive calls. Finally, a compactness weight for the cluster is calculated, as a function of the similarity of the samples in the cluster to a point of reference. In some embodiments, the compactness weight is calculated as a function of the similarity of each sample in the cluster at a feature vector level to a prototype sample.","Once the four above-described weights for the cluster are calculated, a cluster weight for the cluster is calculated as a function of the confidence interval weight, the trace length weight, the n-gram weight and the compactness weight. In some embodiments, calculating the cluster weight comprises adding the confidence interval weight, the trace length weight, the n-gram weight and the compactness weight. In some embodiments, one or more of these weights are themselves weighted according to at least one weighting factor, prior to being added. A cluster confidence measurement is assigned to the cluster. The cluster confidence measurement is calculated as a function of the cluster weight and the cluster raw confidence value. In some embodiments, calculating the cluster confidence measurement comprises multiplying the cluster weight and the cluster raw confidence value, whereas in other embodiments more complicated functions are used.","New samples can be assigned to the cluster, based on their runtime behavior. When a new sample is assigned to the cluster, an assignment confidence measurement concerning the assignment of the new sample to the cluster is calculated, as a function of the confidence measurement assigned to the cluster, a length of the trace generated by the new sample, the number of n-grams present in the trace generated by the new sample, and a similarity of the new sample at a feature vector level to a reference point concerning the cluster.","The features and advantages described in this summary and in the following detailed description are not all-inclusive, and particularly, many additional features and advantages will be apparent to one of ordinary skill in the relevant art in view of the drawings, specification, and claims hereof. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter, resort to the claims being necessary to determine such inventive subject matter.","The Figures depict various embodiments for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 1"],"b":["100","101","100","103","103","103","105","105","101","105","101","103","105","103","105"]},"Clients  and servers  can be implemented using computer systems  such as the one illustrated in  and described below. The clients  and servers  are communicatively coupled to a network , for example via a network interface  or modem  as described below in conjunction with . Clients  are able to access applicants and\/or data on servers  using, for example, a web browser or other client software (not shown).","Although  illustrates three clients and two servers as an example, in practice many more (or fewer) clients  and\/or servers  can be deployed. In one embodiment, the network  is in the form of the Internet. Other networks  or network-based environments can be used in other embodiments.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["210","101","103","105","210","210","212","212","210","214","217","218","222","220","226","224","230","230","233","232","234","244","237","238","235","290","235","239","240","242","246","212","228","247","212","230","248","212"]},"Other components (not illustrated) may be connected in a similar manner (e.g., document scanners, digital cameras, printers, etc.). Conversely, all of the components illustrated in  need not be present. The components can be interconnected in different ways from that shown in .","The bus  allows data communication between the processor  and system memory , which, as noted above may include ROM and\/or flash memory as well as RAM. The RAM is typically the main memory into which the operating system and application programs are loaded. The ROM and\/or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls certain basic hardware operations. Application programs can be stored on a local computer readable medium (e.g., hard disk , optical disk ) and loaded into system memory  and executed by the processor . Application programs can also be loaded into system memory  from a remote location (i.e., a remotely located computer system ), for example via the network interface  or modem . In , the clustering confidence management system  is illustrated as residing in system memory . The workings of the clustering confidence management system  are explained in greater detail below in conjunction with .","The storage interface  is coupled to one or more hard disks  (and\/or other standard storage media). The hard disk(s)  may be a part of computer system , or may be physically separate and accessed through other interface systems.","The network interface  and or modem  can be directly or indirectly communicatively coupled to a network  such as the Internet. Such coupling can be wired or wireless.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["101","217","210","101","103","105","210","101","107","101","101","101","101","217","210","214","210","210","101"]},"As illustrated in , the clustering confidence management system  quantifies the confidence in the quality of a cluster . One parameter used in quantifying the quality of a cluster  is the cluster's uniformity . If every sample  in a cluster  has the same label  (e.g., all the samples  in the cluster  are labeled as being malware of a single family or all the samples  are labeled as being goodware), the cluster  is entirely uniform, and hence of a high quality. On the other hand, if different samples  in a cluster  have different labels  (e.g., some malware and some goodware), the cluster  has a lower uniformity , and hence is of a lower quality.","A cluster uniformity determining module  of the clustering confidence management system  determines the uniformity  of a cluster . To do so, the cluster uniformity determining module  reads the labels  of the samples  therein, and determines how many different labels  are present. The cluster uniformity determining module  identifies the most frequently occurring unique label  in the cluster  (the majority label), and determines what percentage it comprises of the total number of unique labels  present in the cluster . In some embodiments, it is determined, for each unique label present, what percentage of the total samples  in the cluster  have that label , and\/or what percentage that label  comprises of the total number of unique labels  present in the cluster . The cluster uniformity determining module  assigns a uniformity  to the cluster  in the form of a quantified value calculated as a function of the total number of different labels  present in the cluster , and the percentage comprised by at least the majority label of the total number of unique labels . Where every sample  in the cluster  has the same label  (i.e., a single label  accounts for 100% of the samples  in the cluster ), that cluster  has the highest possible uniformity . Clusters  with progressively more diversity have lower uniformity . For a cluster  of samples  having different labels , the lowest possibility uniformity  occurs when the cluster has an equal distribution of the number of different labels  present in the cluster .","For example, in a cluster  in which each sample  has one of two possible labels  (e.g., malware or goodware) and 50% of the samples  are of each possibility, that cluster  has the lowest possible uniformity  for a cluster  containing two different labels . The lowest possible uniformity  for a cluster  of samples  having three different labels  (e.g., goodware and two separate families of malware) occurs when one third of the samples  are of each different label  present in the cluster  (e.g., one third malware family A, one third malware family B, one third goodware). Additionally, the more different labels  that are present in the cluster , the lower the uniformity  of the cluster . For example, all else being equal, a cluster  containing samples  with three different labels  would be less uniform than one containing samples  with two different labels .","The cluster uniformity determining module  quantifies the uniformity  of the cluster  as a function of the number of different labels  in the cluster , and percentages of samples  in the cluster  having given labels . In one embodiment, the uniformity  is calculated as the fraction of the majority label in the cluster  over the total number of unique labels occurring therein. Formally, this can be expressed as U=ML\/T, where U is the uniformity, ML is the number of samples  having the majority label  and T is the total number of samples  in the cluster . Under this quantification, the highest possible uniformity  is one, meaning that every sample  in the cluster  has the same label . The lowest possible uniformity  for a cluster having samples  with N different labels  is 1\/N, representing an equal distribution of samples  with each possible N. Under this quantification scenario, the uniformity  is represented by a number from 1 to 1\/N, where N equals the number of different labels  present in the cluster , and a higher number means that the cluster  is more uniform. For example, in a cluster  containing samples with two different labels , an equal distribution of the labeled samples would result in a uniformity of \u00bd (0.5), the lowest possible value for a cluster  with two different labels . In other embodiments, the cluster uniformity determining module  can employ variations in the quantification of the uniformity  (e.g., use a higher or lower weight representing the number of unique labels  present, convert the value into a three digit positive number, calculate the uniformity  as a percentage comprised by each unique label  of the total number of unique labels  or of all the samples , etc.).","The uniformity  can be thought of as the raw confidence in the quality of the cluster . The quantified uniformity  is thus used to calculate a raw confidence value  which is assigned to the cluster . The raw confidence value  is subsequently weighted according to multiple factors as described below. A raw confidence calculating module  of the clustering confidence management system  calculates the raw confidence value  of the cluster  as a function of the cluster's uniformity . The specific function used to calculate the raw confidence value  of a cluster  varies between embodiments. In one embodiment, the uniformity  itself is used as the raw confidence value  of the cluster . In other embodiments, more complicated functions are used, for example scaling the uniformity  nonlinearly to compute the raw confidence value . For example, in one embodiment a sigmoid function is used to map the uniformity  to a nonlinear scale in the range [0,1]. Formally, this is: RC=Sigmoid(U), where RC equals raw confidence value  and U equals uniformity .","Once calculated, the raw confidence value  of the cluster  is weighted using four different weighting factors: a confidence interval weight , a trace length weight , an n-gram weight  and a compactness weight . These four different weights are described in turn.","The confidence interval weight  is based on a confidence interval concerning the reliability of the uniformity , taking into account the size of the cluster . The value of the uniformity  being equal, the larger the size of the cluster , the more reliable that uniformity  is as a measure of cluster  quality. For example, the uniformity  of a two label  cluster  in which X of Y (e.g., \u2157) samples  have a given label  is the same as the uniformity  for a cluster  in which this is so for X of Y samples  (e.g., 30\/50), because the underlying fraction has the same numeric value. However, the cluster  with fifty samples  is more reliable than the cluster  with five samples , despite the fact that the percentage of majority labels  is the same in both cases.","To take this factor into account, a confidence interval weight calculating module  of the clustering confidence management system  calculates a confidence interval weight . First, a confidence interval is determined and used to estimate the reliability of the uniformity . More specifically, a binomial (or polynomial) proportion confidence interval is used to estimate the reliability of the proportion (of labels  of a given value) underlying the uniformity , given the size of the cluster . In one embodiment, a standard adjusted Wald confidence interval (normal approximation interval) is used. In other embodiments, other confidence interval types are used (e.g., Wilson score interval, Clopper-Pearson interval, Agresti-Coull interval, etc.). In an embodiment in which a Wald type interval is used, the value of the interval is in the range [0,0.5] (for a cluster  with two different labels ), with 0 indicating maximum reliability and 0.5 indicating minimum reliability. The confidence interval weight calculating module  converts the size of the confidence interval into a confidence interval weight , CIW. For example, this can be calculated formally as CIW=1-2*confidence interval size, in the range [0,1]. In other embodiments, the formal calculation of the confidence interval weight  based on the parameters discussed above can vary.","The next weighing factor is the trace length weight , which is determined as a function of the lengths of traces through system calls (e.g., calls made to the operating system through its Application Programming Interface, or \u201cAPI\u201d) generated while running the samples  in the cluster . More specifically, in order to determine the runtime behavior of a sample  in the context of clustering, the sample  is run and its execution is monitored. When the running sample  makes system calls of interest, the corresponding execution is traced. Such a trace is of a specific length. The longer the traces generated by a sample , the more data there is concerning the runtime behavior of the sample , and hence the higher the level of confidence in the clustering of the sample . Thus, all else being equal, a cluster  of samples  that generated longer traces is of higher quality than one of samples  that generated shorter traces.","In some embodiments, if a trace length is equal to or greater than a threshold, the trace is considered to be of maximum reliability. In other words, although longer traces are generally considered more reliable, after a certain threshold trace length, the reliability is no longer considered to increase with additional length. In embodiments in which a trace length threshold is used, the specific value to use is a variable design parameter, which is typically determined empirically.","The specific system calls made by executing samples  that are considered to be of interest and thus traced varies depending upon the operating system under which the samples  are running, as well as the basis on which the samples  are being clustered. For example, where samples  are being clustered as malware versus goodware, or according to malware family, the system calls of interest are security sensitive operations, such as creating or writing files, accessing the network, starting new processes, changing system security settings, etc. More, fewer and\/or different calls can be considered of interest in different embodiments. In some embodiments, calls of interest are not limited to system calls, but can include other API calls as well (e.g., calls made to a specific application program, library, etc.).","In order to calculate the trace length weight  for a cluster, a trace length weight calculating module  of the clustering confidence management system  monitors the lengths of the traces of interest generated by the samples  in the cluster . The exact protocol for calculating the trace length weight  based on the lengths of the multiple traces varies between embodiments. Typically an average or weighted average of the trace lengths of interest generated by the multiple samples  in the cluster  is calculated. The trace length weight  is then calculated as a function of the average trace length. For example, in an embodiment in which a maximum length threshold is employed, the trace length weight , TLW, can be calculated as TLW=min(1, average trace length\/threshold), in the range [0,1]. In other embodiments, the formal calculation of the trace length weight  based on the parameters discussed above can vary.","The next weighting factor is the n-gram weight . The n-gram weight  is a function of the number of unique n-grams generated when the samples  in the cluster  are run to determine their runtime behaviors. An n-gram in this context is a specific sequence of n calls made by an executing sample . N-grams are used to determine the similarity between the runtime behavior of samples . When samples  have one or more n-grams in common, this is an indication that the samples  have similar runtime behavior. In general, the more distinct n-grams present in a trace generated by running a sample , the greater the indication that the sample is similar to other samples  that generated the same distinct n-grams, and thus the higher the confidence in the classification of the sample  into the cluster . Thus, a cluster  with samples  that generated more n-grams is of a higher quality, all else being equal.","As with the length of traces, in some embodiments if the number of n-grams in a trace is equal to or greater than a threshold, the number of n-grams is considered to indicate a maximum reliability. Although more n-grams are generally considered more reliable, after a certain threshold of n-grams is reached, the reliability is no longer considered to increase with additional n-grams. In embodiments in which an n-gram threshold is used, the specific value to use for the threshold is a variable design parameter, which is typically determined empirically.","An n-gram weight calculating module  of the clustering confidence management system  computes the average (or a weighted average) number of n-grams for the samples  of the cluster . The n-gram weight calculating module  uses this average to calculate the n-gram weight  for the cluster . The exact protocol for calculating the n-gram weight  based on the number of n-grams in the samples  of the cluster varies between embodiments. For example, in an embodiment in which an n-gram threshold is employed, the n-gram weight , NGW, can be calculated as NGW=min(, average n-gram number\/threshold), in the range [0,1].","The final weighting factor is the compactness weight . This is a function of how \u201ccompact\u201d the cluster  is, meaning how close the samples  of the cluster  are to each other. In general, when classifying samples  into clusters  based on their runtime behavior, the samples are run and analyzed, and a feature vector is created for each sample  measuring a plurality of characteristics indicative of the runtime behavior of the sample . In this context, the distance between two samples  means the overall distinction between the samples  at a feature vector level. The less the distance between samples  (i.e., the closer the samples  are) in a cluster , the better the cluster's quality.","In general, a cluster's compactness can be computed using a single reference point, such as the cluster's centroid, or multiple cluster representative samples , called prototypes. In some embodiments, a compactness weight calculating module  of the clustering confidence management system  calculates the compactness of a cluster  by determining the distance between each sample  of the cluster and its nearest prototype sample. The compactness weight calculating module  then calculates the average distance. In other embodiments, the cluster's compactness is calculated by computing the average distance of the samples  of the cluster  from the cluster's centroid, which is representative of the samples  in the cluster .","As described above concerning some of the others of the weighting factors, in some embodiments a distance threshold is used. In such embodiments, a sample  is considered to have the maximum closeness if the sample's distance is less than or equal to an empirically chosen distance threshold. The specific value to use for the distance threshold is a variable design parameter.","The compactness weight calculating module  determines the distance of each sample  in the cluster  from its nearest prototype sample. The average distance is then calculated, and used to calculate the compactness weight  for the cluster . The exact protocol for calculating the compactness weight  based on the closeness of the samples  of the cluster varies between embodiments. For example, in an embodiment in which a distance weight is employed, the compactness weight , CW, can be calculated as CW=min(1, threshold\/average distance), in the range [0,1].","A cluster weight calculating module  of the clustering confidence management system  calculates a cluster weight  based on the four weighting factors: the confidence interval weight , the trace length weight , the n-gram weight  and the compactness weight . In different embodiment, the cluster weight  can be calculated as a function of the four weighting factors in different ways. For example, in one embodiment a weighted linear combination of the weighting factors is used, as follows: W=0.1*CIW+0.4*TLW+0.3*NGW+0.2*CW, where W is the cluster weight , CIW is the confidence interval weight , TLW is the trace length weight , NGW is the n-gram weight  and CW is the compactness weight , wherein W is in the range [0,1]. In the calculating of the cluster weight , other weights can be applied to the different weighting factors than those in the equation above. In other embodiments, non-linear combinations of the weighting factors are used to calculate the cluster weight .","In any case, once the cluster weight  has been calculated, a cluster confidence measurement calculating module  of the clustering confidence management system  calculates a cluster confidence measurement  which is assigned to the cluster . The cluster confidence measurement  is based on the raw confidence value  of the cluster  and the cluster weight . The cluster confidence measurement  can be calculated by multiplying the cluster weight  and the raw confidence value , or by applying a more complicated function. In some embodiments, the cluster confidence measurement  is in the form of a numerical value. In some embodiments, the cluster confidence measurement  can be in the form of one of a group of discrete levels, based on (variably definable) thresholds (e.g., low, medium, and high).","Turning now to , once a cluster confidence measurement  exists for a cluster , the confidence in assignments of individual samples  to the cluster  based on their runtime behavior can be quantified. To this end, when a sample  is assigned to a cluster  based on the sample's runtime behavior, an assignment confidence measurement calculating module  of the clustering confidence management system  calculates an assignment confidence measurement  based on four parameters: the cluster confidence measurement , the length of the trace generated by the sample  being assigned to the cluster , the number of n-grams present in the trace generated by the sample , and the sample's distance from a reference point such as the nearest prototype sample for the cluster . The cluster confidence measurement  is germane to the calculation of the assignment confidence measurement , because it reflects the quality of the cluster  to which the sample is being assigned. The sample's trace length and number of n-grams are relevant, because they are indicative of the quantity of data concerning the sample's runtime behavior used in assigning the sample  to the cluster . Finally, the distance between the sample  and the prototype is relevant because it reflects both a quantitative and qualitative measurement of the similarity between the runtime behavior of the sample  being assigned to the cluster  and that of the existing members of the cluster .","The specific protocol for generating the assignment confidence measurement  as a function of the four parameters described above varies between embodiments. In one embodiment, the assignment confidence measurement calculating module  treats the cluster's confidence measurement  as an indicator of the raw confidence  in the assignment of the sample  to the cluster . In some embodiments the value of the cluster confidence measurement, CC, can simply be assigned as a raw confidence value, RC, of the classification. In other embodiments, more complicated linear or non linear functions of the form RC=F(CC) can be used, where F is a function defined as a variable design choice which can differ between embodiments.","To take into account the parameters concerning the sample  itself and its runtime behavior, the assignment confidence measurement calculating module  can convert the sample's trace length, TL, into a trace length weight  (TLW). For example, the trace length weight  can be calculated as TLW=min(1, TL\/threshold), in the range [0,1]. Similarly, the assignment confidence measurement calculating module  can convert the sample's number of n-grams, NN, into an n-gram number weight  (NNW), for example as NNW=min(, NN\/Threshold), in the range [0,1]. Additionally, the sample's distance from the prototype, PD, is used to calculate a prototype distance weight  (PDW), for example as PDW=min(1, Threshold\/PD), in the range [0,1]. As with the calculating of the cluster weighting factors described above in conjunction with , the exact protocols used for calculating the assignment weights based on the above-described parameters varies between embodiments. For example, the formulas above contain the use of a threshold in the calculation of all three assignment weights, but in some embodiments a threshold is not used in one or more of these calculations.","The assignment confidence measurement calculating module  calculates a unified assignment weight , USW, as a function of the three assignment weights discussed above. This can be in the form USW=F(TLW, NNW, PDW), in the range [0,1], where F is a function which can be defined as a variable design choice. Both linear and non-linear combinations of the three assignment weights can be used to calculate the unified assignment weight .","Once a unified assignment weight  has been calculated, the assignment confidence measurement calculating module  calculates the assignment confidence measurement  as a function of the assignment raw confidence value  and the unified assignment weight  (e.g., as the product of multiplying the assignment raw confidence value  and the unified assignment weight , or as a more complicated function of the two parameters).",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 5","FIG. 1","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 4","FIG. 4","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3"],"b":["101","309","501","305","301","307","301","307","301","311","503","313","305","505","313","301","317","507","315","301","305","321","509","319","301","303","301","325","511","323","301","303","301","329","513","327","301","303","301","331","515","333","315","319","323","327","335","517","337","313","301","333","519","337","301","303","521","301","401","523","403","303","301","337","301","303","303","303","301"]},"As will be understood by those familiar with the art, the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise, the particular naming and division of the portions, modules, agents, managers, components, functions, procedures, actions, layers, features, attributes, methodologies, data structures and other aspects are not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, divisions and\/or formats. The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or limiting to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain relevant principles and their practical applications, to thereby enable others skilled in the art to best utilize various embodiments with or without various modifications as may be suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
