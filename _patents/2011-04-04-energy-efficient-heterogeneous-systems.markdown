---
title: Energy efficient heterogeneous systems
abstract: Low-power systems and methods are disclosed for executing an application software on a general purpose processor and a plurality of accelerators with a runtime controller. The runtime controller splits a workload across the processor and the accelerators to minimize energy. The system includes building one or more performance models in an application-agnostic manner; and monitoring system performance in real-time and adjusting the workload splitting to minimize energy while conforming to a target quality of service (QoS).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08874943&OS=08874943&RS=08874943
owner: NEC Laboratories America, Inc.
number: 08874943
owner_city: Princeton
owner_country: US
publication_date: 20110404
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["The present application claims priority to Provisional Application Ser. No. 61\/346,727 filed May 20, 2010, the content of which is incorporated by reference.","This application relates to energy efficient computation.","Embedded learning and classification applications are computationally intensive and process large amounts of real-time data while balancing stringent Quality of Service (QoS) constraints under tight power budgets. These include applications in the areas of transportation, healthcare, robotics, aerospace and defense. For instance, one in-vehicle system monitors real-time driving events, analyzes risks, and suggests improvement over driving habits. Such a system requires real-time responsiveness while processing and analyzing continuous streams of data. Cars also continuously monitor and analyze internal sensor data in order to predict failures and reduce recalls. Another example is face, object and action detection in surveillance and store cameras; stores and advertising agencies analyze shopper behavior to gauge interest in specific products and offerings.","Such learning and classification applications are computation and data-intensive and are generally data parallel in nature. In data centers, such workloads can rely on clusters of high-performance servers and GPUs to meet the stringent performance constraints and dynamic scalability. For example, GPU based implementations of learning-algorithms like Convolutional Neural Network (CNN) and Support Vector Machines (SVM) have been published that meets their high-performance requirements. However, in embedded situations such as automobiles and store cameras, a CPU+GPU server compute node is too power hungry. Another approach to designing low-power servers has been to consider embedded processors.","There are several runtime proposals to map applications to heterogeneous systems, but few consider energy. OpenCL, for instance, provides a common programming platform for both CPU and GPU but burdens the programmer with application-distribution. IBM's OpenMP for Cell is similar, while Intel's Merge provides a manual mapping of the application. Yet other conventional systems provide a runtime-support for legacy applications improving the overall application-performance by deferring the intermediate data-transfer before scheduling to a different coprocessor. Harmony schedules the application in an automated manner by predicting the performance of the application's kernels, but they do not split a single kernel among multiple accelerators, and do not focus on energy. Other conventional systems take an adaptive (dynamic) approach to improve performance on a system with one GPU and assume a linear-model to decide the optimal partitioning of an application for a server-system consisting CPU and GPU.","In one aspect, a low-power system includes a general purpose processor; a plurality of accelerators; and a power-aware runtime controller to split workload across the processor and the accelerators to minimize energy, wherein the runtime controller builds performance models in an application-agnostic manner and monitors system performance in real-time.","In another aspect, a low-power method is disclosed to execute an application software on a general purpose processor and a plurality of accelerators by splitting a workload across the processor and the accelerators to minimize energy; building one or more performance models in an application-agnostic manner; and monitoring system performance in real-time and adjusting the workload splitting to minimize energy while conforming to a target quality of service (QoS).","In yet another aspect, a low-power heterogeneous system includes a general purpose processor and multiple accelerators; and a power-aware runtime that builds performance models in an application-agnostic manner; splits workloads across multiple accelerators to minimize energy; monitors system (accelerator) performance in real-time; and fine-tunes the performance model based on actual execution, in order to maintain QoS.","Advantages of the preferred embodiment may include one or more of the following. The system is highly energy efficient. The power-aware runtime for this system automatically split workloads across the multiple accelerators to minimize energy while satisfying performance constraints. The energy-benefits achieved by the runtime results in an optimal-mapping that balances high performance with low power consumption.","The system optimizes performance using call interception, which operates transparently in comparison with an application programming interface (API) where the programmer is actively tweaks the code to achieve the desired performance. The system can handle multiple accelerators including CPU, GPU and FPGA elements. Further, the accelerator performance monitor continuously monitors performance in order to fine tune the model.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["102","104","106","110","112","114","118"]},"In one embodiment, the accelerators are slaves attached to the host processor by means of a communication link such as the PCI bus. They have no direct access to system resources such as the disk and network, and they do not share memory with the host. In one implementation, the low-power heterogeneous system includes a dual-core Intel\u00ae Atom\u2122 processor 330 coupled with 16 Core GeForce 9400M (MCP79) chipset as ION GPU, and an ASUS AT3N7A-I motherboard. This implementation uses a Xilinx Virtex 5 SX240T board with 256 FPGA-based DSP elements organized as parallel multiply-accumulators to perform matrix-multiplication. This type of semi-custom accelerator differs from the GPU in terms of its programmability (the GPU is more easily programmed). The FPGA also has more \u201cPEs\u201d than the GPU in theory and may be faster for certain operations despite a slower clock speed. The power of the entire system running no application is referred to as P.","The low power heterogeneous hardware  supports embedded learning and classification tasks. The system consists of an embedded processor such as the Atom with multiple domain specific accelerators (such as low-end GPUs, FPGAs, among others). The system includes a power-aware runtime module , which is the system software layer above standard operating system. The runtime module  can intelligently schedule workloads to minimize overall energy while maintaining performance QoS.","The system minimizes energy targeted for an embedded platform by dynamically splitting the algorithm to the system's accelerators. Individual processor power numbers are taken into account while mapping the application. One embodiment applies a linear performance model, and fine-tunes the model as more samples are collected until the desired QoS is satisfied. Non-linear performance models are contemplated as well.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2","b":["202","204","206","114","118","208","206","110","210","206"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},"In one embodiment, the runtime module  expresses the mapping-problem as an integer-linear-program. The goal of the runtime is to minimize the system's energy consumption under the constraint that a) entire problem is solved; b) a given performance QoS is achieved. With the power profile of the system, the mapping-problem is expressed as an integer linear program where Energy is minimized:",{"@attributes":{"id":"p-0022","num":"0021"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"Energy","mo":"=","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mi":"P","mrow":{"mi":["no","_","app"],"mo":["\u2062","\u2062"]}},{"mi":["Time","total"]}],"mo":"\u00d7"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["Pi","app"]},"mo":"\u00d7","mrow":{"msub":{"mi":["T","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","i"]}}}}}}],"mo":"+"}}}},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":"Under the constraints:"}}}},{"@attributes":{"id":"p-0023","num":"0023"},"maths":[{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msub":{"mi":["f","i"]}},"mo":"=","mn":"1"}}},{"@attributes":{"id":"MATH-US-00002-2","num":"00002.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["Time","total"]},"mo":"=","mrow":{"mrow":{"munder":{"mi":"max","mrow":{"mi":["i","i","N"],"mo":["\u2264","\u2264"]}},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["T","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","i"]}}}}},"mo":"\u2264","msub":{"mi":["Time","QoS"]}}}}}],"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["Where:","Pis system-power when no application is running,","Piis power of accelerator l when application \u201capp\u201d runs on l,","T(f) is time to execute fportion of algorithm by accelerator i,","Timeis total execution-time,","Timeis expected QoS for the algorithm","fis the fraction of algorithm given to accelerator i,","N is total number of accelerators in the system."]}}}},{"@attributes":{"id":"p-0024","num":"0032"},"figref":["FIG. 3","FIG. 3"],"sub":["i ","i","i","i","i","i ","i","i ","i "]},"The runtime computes the partition for minimum-time by equating the execution-time of all the accelerators to be the same i.e. T(f)=T(f) such that f+f=1. Based on the optimal fractions, f=Ofand f=Of, the runtime solves separate integer-linear-problems for two ranges using simplex algorithm in one implementation.","1) If T(f)>T(f): In this case, total execution time Timeequals T(f) for the range Of\u2266f\u22661. Therefore, the runtime solves the following objective function:\n\n",{"@attributes":{"id":"p-0027","num":"0036"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"Energy","mo":"=","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":{"mi":"P","mrow":{"mi":["no","_","app"],"mo":["\u2062","\u2062"]}},"mo":"\u00d7","mrow":{"msub":{"mi":["T","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","i"]}}}}},{"mo":["(",")"],"mrow":{"msub":{"mi":["Pi","app"]},"mo":"\u00d7","mrow":{"msub":{"mi":["T","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","i"]}}}}},{"munderover":{"mo":"\u2211","mrow":{"mrow":[{"mi":"j","mo":"=","mn":"1"},{"mi":["i","j"],"mo":"\u2260"}],"mo":","},"mi":"N"},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["Pj","app"]},"mo":"\u00d7","mrow":{"msub":{"mi":["T","j"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","j"]}}}}}}],"mo":["+","+"]}}}},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":{"@attributes":{"id":"ul0007-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":"Under the constraints:"}}}},{"@attributes":{"id":"p-0028","num":"0038"},"maths":[{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msub":{"mi":["f","i"]}},"mo":"=","mn":"1"}}},{"@attributes":{"id":"MATH-US-00004-2","num":"00004.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":[{"mi":["Of","i"]},{"mi":["f","i"]}],"mo":["\u2264","\u2264"],"mn":"1"}}}]},"The Simplex algorithm identifies the largest constant-term in the objective-function that contributes most in maximizing or minimizing the value of the function. In this case, the algorithm minimizes for ffor which (P+Pi) or Pjs is the largest, and obtains an optimal partition fand ffor the range Of\u2266f\u22661.","2) If T(f)<T(f): In this case, total execution time Timeequals T(f) for the range 0\u2266f\u2266Of. Using simplex algorithm for integer-linear-program, the runtime solves the following objective function for fand ffor the range 0\u2266f\u2266Of:\n\n",{"@attributes":{"id":"p-0031","num":"0042"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"Energy","mo":"=","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":{"mi":"P","mrow":{"mi":["no","_","app"],"mo":["\u2062","\u2062"]}},"mo":"\u00d7","mrow":{"msub":{"mi":["T","j"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","j"]}}}}},{"mo":["(",")"],"mrow":{"msub":{"mi":["Pj","app"]},"mo":"\u00d7","mrow":{"msub":{"mi":["T","j"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","j"]}}}}},{"munderover":{"mo":"\u2211","mrow":{"mrow":[{"mi":"i","mo":"=","mn":"1"},{"mi":["i","j"],"mo":"\u2260"}],"mo":","},"mi":"N"},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["Pi","app"]},"mo":"\u00d7","mrow":{"msub":{"mi":["T","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","i"]}}}}}}],"mo":["+","+"]}}}},"ul":{"@attributes":{"id":"ul0011","list-style":"none"},"li":{"@attributes":{"id":"ul0011-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0012","list-style":"none"},"li":"Under the constraints:"}}}},{"@attributes":{"id":"p-0032","num":"0044"},"maths":[{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msub":{"mi":["f","i"]}},"mo":"=","mn":"1"}}},{"@attributes":{"id":"MATH-US-00006-2","num":"00006.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mn":"0","mo":["\u2264","\u2264"],"msub":[{"mi":["f","i"]},{"mi":["Of","i"]}]}}}]},"Based on the values of fand ffor both the ranges, the runtime evaluates the objective function and chooses that fraction which gives the minimum-energy value. To test QoS, the runtime actually runs the application on the accelerator i and j with fractions fand f. If the runtime meets the QoS, the partition numbers fand fare reported. Otherwise, the linear equation is regenerated with fand fbeing added to the PSand PSof coprocessor i and j respectively. The entire procedure is then repeated until QoS is met. The runtime reports \u201cno-solution within QoS\u201d if all integer-partitions are covered.","Turning now to , for each accelerator, the process determines T(f) for the minimum and maximum range of partition (). Next, for each accelerator, the process generates a linear equation from the set of points PS (). Next, the process determines Ofas a time-wise optimal fraction (). The process determines if T(f)>T(f) (). If true, the process solves the integer linear program () and otherwise solves the linear program (). From either  or , the process evaluates the total time () and checks if the total time is less than the time needed to provide quality of service (). If so, f is returned as the optimal partition for the particular accelerator () and the process exits. Alternatively, the process checks to see if all splits have been processed (). If so, the process indicates that no solutions are possible give the QoS constraint () and exits. From , if not all splits have been processed, the process adds f(i) and f(j) to PS(i) and PS(j) and reevaluates the linear equation for the accelerator l and j (), and loops back to  to continue processing.","The runtime iteratively explores the space of possible workload distributions to the accelerators, builds a dynamic performance model and uses it to minimize system energy consumption. If the resulting workload distribution fails to meet performance QoS constraints, the runtime heuristically trades-off energy for performance until the QoS is achieved. Advantages of the preferred embodiment may include one or more of the following. The system is highly energy efficient. The power-aware runtime for this system automatically split workloads across the multiple accelerators to minimize energy while satisfying performance constraints. The energy-benefits achieved by the runtime results in an optimal-mapping that balances high performance with low power consumption.","The heterogeneous system for embedded learning and classification applications and the power-aware dynamic runtime exploits the fact that data parallel applications may perform better if they are split across multiple accelerators. More significantly, splitting an application to minimize execution time by itself is not always energy-efficient. The runtime for performing energy-efficient mapping thus is cognizant about individual accelerator performance as well as power-numbers under idle and busy state of application execution.","The runtime is application-independent, i.e., it builds a performance model in an application-agnostic manner by collecting timing samples during a training period. The runtime assumes a linear model that is progressively fine-tuned as more samples are collected. The runtime collects samples as and when necessary until it meets the QoS, thereby minimizing the overhead in collecting extra samples. With multiple accelerators, a significant decrease in energy-consumption is achieved compared to the application solely running on one of the accelerators. With our workload partitioning process, our runtime achieves partition near energy-optimal mapping under given performance QoS constraints.","Although the invention is described above in terms of various exemplary embodiments and implementations, it should be understood that the various features, aspects and functionality described in one or more of the individual embodiments are not limited in their applicability to the particular embodiment with which they are described, but instead may be applied, alone or in various combinations, to one or more of the other embodiments of the invention, whether or not such embodiments are described and whether or not such features are presented as being a part of a described embodiment. Thus the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments.","Terms and phrases used in this document, and variations thereof, unless otherwise expressly stated, should be construed as open ended as opposed to limiting. As examples of the foregoing: the term \u201cincluding\u201d should be read as meaning \u201cincluding, without limitation\u201d or the like; the term \u201cexample\u201d is used to provide exemplary instances of the item in discussion, not an exhaustive or limiting list thereof; the terms \u201ca\u201d or \u201can\u201d should be read as meaning \u201cat least one,\u201d \u201cone or more\u201d or the like; and adjectives such as \u201cconventional,\u201d \u201ctraditional,\u201d \u201cnormal,\u201d \u201cstandard,\u201d \u201cknown\u201d and terms of similar meaning should not be construed as limiting the item described to a given time period or to an item available as of a given time, but instead should be read to encompass conventional, traditional, normal, or standard technologies that may be available or known now or at any time in the future. Likewise, where this document refers to technologies that would be apparent or known to one of ordinary skill in the art, such technologies encompass those apparent or known to the skilled artisan now or at any time in the future.","A group of items linked with the conjunction \u201cand\u201d should not be read as requiring that each and every one of those items be present in the grouping, but rather should be read as \u201cand\/or\u201d unless expressly stated otherwise. Similarly, a group of items linked with the conjunction \u201cor\u201d should not be read as requiring mutual exclusivity among that group, but rather should also be read as \u201cand\/or\u201d unless expressly stated otherwise. Furthermore, although items, elements or components of the invention may be described or claimed in the singular, the plural is contemplated to be within the scope thereof unless limitation to the singular is explicitly stated.","The presence of broadening words and phrases such as \u201cone or more,\u201d \u201cat least,\u201d \u201cbut not limited to\u201d or other like phrases in some instances shall not be read to mean that the narrower case is intended or required in instances where such broadening phrases may be absent. The use of the term \u201cmodule\u201d does not imply that the components or functionality described or claimed as part of the module are all configured in a common package. Indeed, any or all of the various components of a module, whether control logic or other components, may be combined in a single package or separately maintained and may further be distributed across multiple locations.","Additionally, the various embodiments set forth herein are described in terms of exemplary block diagrams, flow charts and other illustrations. As will become apparent to one of ordinary skill in the art after reading this document, the illustrated embodiments and their various alternatives may be implemented without confinement to the illustrated examples. For example, block diagrams and their accompanying description should not be construed as mandating a particular architecture or configuration.","The previous description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these embodiments will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention. Thus, the present invention is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein."],"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
