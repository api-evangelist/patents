---
title: System and method for rapidly locating historical performance data
abstract: A method is described for providing performance metrics stored in an array of at least three-dimensions. The method includes receiving at least one metric criteria associated with a performance metric. The method also includes determining a list of array elements. The list represents a portion of the array including the at least one metric criteria. The method further includes sorting the list of array elements according to predetermined ordering criteria to identify a best match of the at least one metric criteria. A system and article of manufacture are also described for providing performance metrics stored in an array of at least three dimensions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08676539&OS=08676539&RS=08676539
owner: CA, Inc.
number: 08676539
owner_city: Islandia
owner_country: US
publication_date: 20071109
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application is a continuation of U.S. patent application Ser. No. 10\/190,943 filed Jul. 8, 2002 entitled \u201cSystem and Method for Rapidly Locating Historical Performance Data\u201d, which claims priority to U.S. Provisional Application Ser. No. 60\/303,431 filed Jul. 6, 2001, each of which are hereby incorporated by reference in their entirety.","The described systems and methods are generally related to information processing environments and managing modem computer systems and associated electronic devices. More specifically, the described systems and methods are related to rapidly obtaining historical performance data.","Enterprises employ large, complex, computing environments that include a number of enterprise components such as servers, routers, databases, mainframes, personal computers, intelligent agents and business applications, for example. Systems that monitor complex enterprise computing environments are known in the art. From time to time, such monitoring systems monitor and analyze the performance of enterprise components, and it is useful for such monitoring systems to have rapid access to certain metrics regarding performance of the components being analyzed. Such metrics may be sampled on-demand in real-time or fetched from a large historical data repository.","Typically, large repositories of historical data describing enterprise component performance are created over time by enterprise monitoring systems configured to track and record performance data for certain enterprise components or groups of components. Such performance data may be useful in analyzing the operation of a component or group of components, for example, to schedule future operations or to report the performance of the component(s) over time.","Enterprises typically have certain criteria to determine whether and which components are subject to performance monitoring. Over time, changes to the configuration of an enterprise system, changes to the criteria for collecting performance data, and the addition and removal of enterprise components may result in an incomplete performance history for any particular component. Consequently, such historical data repositories are complex stores which may not include data for every enterprise component, or for every time period.","Gaps in historical performance data may adversely affect the ability of the monitoring system to project the future performance of a particular component. Consequently, there is a need for methods and systems that rapidly provide an estimate of historical performance of an enterprise component despite incomplete historical performance data.","The following presents a simplified summary of methods, systems, and computer readable media associated with rapidly locating historical performance data. This summary is not an extensive overview and is not intended to identify key or critical elements of the methods, systems, and\/or media or to delineate the scope of the methods, systems, and media. It conceptually identifies the methods, systems, and media in a simplified form as a prelude to the more detailed description that is presented later.","This disclosure provides methods and systems for accessing performance metrics stored in an array of at least three dimensions. According to one aspect of the disclosure, a method for providing performance metrics stored in an array is disclosed. The method includes receiving a metric criteria that is associated with a performance metric and determining a list of array elements. The list of array elements represents a portion of the array including the metric criteria. The list is sorted according to a predetermined ordering criteria. In one embodiment, the method also includes analyzing each array element of the list to determine whether it best matches the at least one metric criteria. If a best match is determined, a reference to an array element may be returned that best matches the performance metric. If no best match is determined, an error code may be returned.","In accordance with a second aspect of the present application, a system is disclosed for providing performance metrics stored in an array of at least three dimensions. The system includes means for receiving at least one metric criteria associated with a performance metric. The system also includes means for determining a list of array elements. The list represents a portion of the array including at least one metric criteria. The system further includes means for sorting the list of array elements according to predetermined ordering criteria, and means for analyzing each array element of the list to determine whether it best matches the at least one metric criteria.","In accordance with another aspect of the present application, an article of manufacture is also disclosed. The article of manufacture includes processing instructions for providing performance metrics stored in an array of at least three dimensions.","Certain illustrative aspects of the methods, systems, and computer readable media are described herein in connection with the following description and the annexed drawings. These aspects are indicative, however, of but a few of the various ways in which the principles of the methods, systems, and media may be employed and thus the examples are intended to include such aspects and equivalents. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.","Example methods, systems, and computer readable media are now described with reference to the drawings, where like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to facilitate thoroughly understanding the methods and systems. It may be evident, however, that the methods and systems can be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to simplify the description.","An exemplary IT enterprise is illustrated in . The IT enterprise  includes local area networks ,  and . Communications between local area networks ,  and , are facilitated by an intranet, extranet or internet infrastructure . IT enterprise  further includes a variety of hardware and software components, such as workstations, printers, scanners, routers, operating systems, applications, and application platforms, for example. Each component of IT enterprise , such as computer  and computer , for example, may be monitored, analyzed and managed in accordance with the present disclosure.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["100","102","104","106","110","112","108","102","104","106","106","104","114","116","106","104","100"]},"The bus  can be a single internal bus interconnect architecture and\/or other bus architectures. The bus  can be of a variety of types including, but not limited to, a memory bus or memory controller, a peripheral bus or external bus, and\/or a local bus. The local bus can be of varieties including, but not limited to, an industrial standard architecture (\u201cISA\u201d) bus, a microchannel architecture (\u201cMSA\u201d) bus, an extended ISA (\u201cEISA\u201d) bus, a peripheral component interconnect (\u201cPCI\u201d) bus, a universal serial (\u201cUSB\u201d) bus, and a small computer systems interface (\u201cSCSI\u201d) bus.","The computer  interacts with input\/output devices  via input\/output ports . The input\/output devices  can include, but are not limited to, a keyboard, a microphone, a pointing and selection device, cameras, video cards, displays, and the like. The input\/output ports  can include but are not limited to, serial ports, parallel ports, and USB ports.","The computer  can operate in a network environment and thus is connected to a network  by a network interface . Through the network , the computer  may be logically connected to a remote computer . The network  may include, but is not limited to, local area networks (\u201cLAN\u201d), wide area networks (\u201cWAN\u201d), and other networks. The network interface  can connect to local area network technologies including, but not limited to, fiber distributed data interface (\u201cFDDI\u201d), copper distributed data interface (\u201cCDDI\u201d), ethernet\/IEEE 802.3, token ring\/IEEE 802.5, and the like. Similarly, the network interface  can connect to wide area network technologies including, but not limited to, point to point links, and circuit switching networks like integrated services digital networks (\u201cISDN\u201d), packet switching networks, and digital subscriber lines (\u201cDSL\u201d).",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3","b":["300","310","315","310","320","325","310","310"]},"As shown in , in one embodiment, the historical performance data is stored as a three-dimensional array  of performance elements called \u201cPerformance Cubes\u201d. A Performance Cube is a paradigm for representing, analyzing and managing performance information. It is a generic representation and not linked to any specific operating system. Although the example embodiment is described with reference to a three-dimensional array, an array of more than three dimensions may be used in other embodiments.","In the Performance Cube paradigm, data is considered to be stored in a logical Cube lattice, whereby different resources are represented on the y axis , time-bands across the day are represented across the x axis , and different days (such as Monday, Tuesday or Wednesday), time periods (such as an average day within March, April or June) or machines (such as machine , machine  or machine ) are represented along the z axis .","Performance Cubes are a model of sampled metrics and their values stored in a three-dimensional lattice. For example, Daily Performance Cubes, which contain data for 1 machine or device for a calendar day and are 2 dimensional in nature, can be aggregated into 3 dimensional Cubes containing data for multiple dates, such as, for example, a calendar week or a calendar month, or multiple machines data for a single day. In this application, such three-dimensional aggregations are called Period and Enterprise Cubes, respectively, where each plane represents a machine-day.","Further aggregation is possible by averaging multi-plane Cubes into single-plane Average Period and Average Enterprise Cubes, and these can be further collated into multi-plane Cubes where each plane is itself an average of multiple planes.","Performance Cube Properties","According to one embodiment, Performance Cubes have certain parameters or properties that may be used or referenced by a Performance Cube Management API. Such properties may include the properties set forth in Table A, below:",{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE A"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Cube Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Property","Property Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Store Name","The name of the long-term store where the Cube can be"]},{"entry":[{},"found, such as the path name of the directory containing"]},{"entry":[{},"the Cube files, for example."]},{"entry":["User","A string giving a specific description of the Cube."]},{"entry":["Description",{}]},{"entry":["Start","The date-time of the start of the first time-band that can"]},{"entry":["Date-Time","be stored in the Cube, or the first date-time used to"]},{"entry":[{},"generate an averaged Cube"]},{"entry":["Number of","The number of samples to be contained by this Cube."]},{"entry":["Time-Bands",{}]},{"entry":["Time-Band","The number of seconds over which each sample was"]},{"entry":["Size","averaged."]},{"entry":["Type","The type of data to be stored in each plane of the Cube,"]},{"entry":[{},"and whether there will be more than one plane."]},{"entry":["Resource Set","This is used to indicate whether a Cube is likely to"]},{"entry":[{},"contain all of the resources that have been collected for"]},{"entry":[{},"a particular platform, or it is likely to contain a subset of"]},{"entry":[{},"these."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Exemplary Cube Type definitions are illustrated in Table B, below:",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"center"}},"thead":{"row":{"entry":"TABLE B"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Cube Types"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Each plane","Multiple"]},{"entry":["Cube Type","contains data for:","Planes?"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["CAPMPCM_ONE_DAY","One day","No"]},{"entry":["CAPMPCM_SEVERAL_DAYS","One day","Yes"]},{"entry":["CAPMPCM_ONE_WEEK_OF_DAYS","One day","Yes"]},{"entry":["CAPMPCM_ONE_MONTH_OF_DAYS","One day","Yes"]},{"entry":["CAPMPCM_ONE_YEAR_OF_DAYS","One day","Yes"]},{"entry":["CAPMPCM_ONE_ENTERPRISE_DAY","One day","Yes"]},{"entry":["CAPMPCM_ONE AVERAGE DAY","An average day","No"]},{"entry":["CAPMPCM_SEVERAL_AVERAGE_DAYS","An average day","Yes"]},{"entry":["CAPMPCM_ONE_AVERAGE_ENTERPRISE_DAY","An average day","Yes"]},{"entry":["CAPMPCM_ONE_AVERAGE_WEEK","An average week","No"]},{"entry":["CAPMPCM_SEVERAL_AVERAGE_WEEKS","An average week","Yes"]},{"entry":["CAPMPCM_ONE_AVERAGE_ENTERPRISE_WEEK","An average week","Yes"]},{"entry":["CAPMPCM ONE_AVERAGE_MONTH","An average month","No"]},{"entry":["CAPMPCMSEVERAL_AVERAGE_MONTHS","An average month","Yes"]},{"entry":["CAPMPCM_ONEAVERAGE_ENTERPRISE_MONTH","An average month","Yes"]},{"entry":["CAPMPCM_ONE_AVERAGE_YEAR","An average year","No"]},{"entry":["CAPMPCM SEVERALAVERAGE YEARS","An average year","Yes"]},{"entry":["CAPMPCM_ONE_AVERAGEENTERPRISE_YEAR","An average year","Yes"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The Performance Cubes are managed via a Performance Cube Management API, such as API 315, that enables many applications to read and write Cubes without having reference to any underlying implementation format. Further, performance samples can be accessed by an enterprise management application, such as Unicenter TNG, and presented as external property data, thus making them available to any underlying applications. In addition, an application can use Cube management and analysis routines to perform data management functions such as, for example, trending averaging, compacting and extracting the data.","Consequently, any platform running an application that stores performance data using the Performance Cube Management API may manage and exploit the performance data. For example, applications may cause the performance data to be compacted, averaged, or trended which extends the way that other applications can exploit the data.","The Performance Cube Management API provides access to the Performance Cube repository, such as store , which may be a complex store containing many Cubes which have the potential to contain the data that an application needs. The present application describes methods and systems, which may include the Performance Cube Management API, for rapidly locating and opening the most appropriate Performance Cube. To meet certain accuracy and timeliness preferences, the systems and methods may employ a cube locating methodology where the cube located is the cube with the most important or highest number of criteria met for a particular call This application refers to such a methodology as a \u201cbest match\u201d approach.","The example \u201cbest match\u201d approach described in the present application allows the calling application to obtain data for a named machine or device that is appropriate to a particular date without having to specify exactly which Performance Cube to open. The function will search through available Performance Cubes and determine and open the Cube that best matches the callers requirements. This API searches available Performance Cubes including both period and Enterprise Cubes rather than just looking for a daily Cube which contains data for a specific machine on a specific date. Accordingly, if the daily Cube is missing, but there is data in an Enterprise Cube for the requested date then the request will still be satisfied.","Performance Cube Management","In one embodiment, the Performance Cube Management API allows performance samples held in Performance Cube Management (\u201cPCM\u201d) format to be created, extracted and transformed by external applications. The API may be supplied as a Windows NT DLL or a Static or Shared Library which provides a number of C functions, which can be divided into three main levels: fundamental, derived and composite functions.","Fundamental or \u2018low-level\u2019 functions are sub-divided into three functional areas\u2014Cube control, Cube population and Cube extraction, and provide a developer with direct access to the Performance Cube, either to load data samples directly into a Cube, or to selectively extract specific data samples from it.","Derived or \u2018high level\u2019 functions provide more application-friendly interfaces to the fundamental functions, and as such are again sub-divided into the same three areas. These functions include the ability to search for Cubes containing certain data, to copy planes of data from one Cube to another etc.","Composite functions are grouped into a single area, known as \u201cCube transformation\u201d. This area provides a simple, very high level interface that allows the developer to transform one or more entire Cubes into another Cube of different specifications, or another format entirely.","Certain fundamental functions allow the developer to open a new or existing Performance Cube, close\/write a Cube and delete an existing Cube. Other fundamental functions also allow an application to add new resources, machines\/dates and data samples to the Cube. Such functions control the addition of resources and data to a Cube as the data within the Cube is stored in a specialised format and must obey certain rules. For example, a fundamental function may ensure that all the resources held within the Cube have the same number of data samples, and conform to the same time-band intervals. The Cube population functions mask this level of complexity from the developer, by dynamically adjusting the internal structure of the Cube to allow new samples, and returning meaningful error conditions if the application attempts to perform illegal Cube operations.","The fundamental functions allow for the extraction of specific data relating to a Cube. For example, the name or names of machines for which data is stored, the dates on which the data was collected, and the data values and number of samples used to calculate the values may all be extracted using fundamental functions.","Certain derived functions include search and browse capabilities. Derived functions provide mechanisms to manipulate the Cube parameters and data, but with application-friendly arguments, and more complex functionality than the low-level functions. This includes using names to reference items, and bulk operations such as copying complete planes of data from one Cube to another.","They allow the client to extract data from the Cube in a manner that embodies the Performance Cube paradigm. Instead of simply extracting a specific data sample for a given resource, the Cube extraction routines allow the application to extract all data samples pertaining to a specific dimension within the Cube.","The composite functions enable the developer to input the entire contents of a given Performance Cube and transform it into another form. This other form could be another Performance Cube, or a completely different data format. Examples of such transformation functions include:\n\n","Referring now to , there is depicted a block diagram illustrating one methodology  for rapidly locating historical performance data. At block , at least one basic performance metric requirement is received. The basic performance metric requirement may include a comparator and a value associated with a particular performance metric, such as a date, a machine identifier, a resource set, a Cube type or a user description, for example. In one embodiment, the associated metric(s) may be any data element(s) maintained as part of a Performance Cube.","At block  of the methodology, a list of array elements is determined. The array elements included in the list describe performance metrics that meet the requirement received at block  and thereby potentially match a query associated with the received requirement. In embodiments in which there are multiple stores of historical performance data, block  may include deducing which store(s) to utilize to determine the list of array elements.","At block , the list of potentially matching array elements are sorted according to a predetermined order. The sort order is based, in part, on the received requirement. Examples of sort orders include, but are not limited to:\n\n","At block , each array element is analyzed to determine whether it \u201cbest matches\u201d the received requirement. The sorted list of array elements is traversed from most likely to least likely (as sorted at block ). Each array element is opened and checked to determine if it contains the correct resources; by default all resources specified must be found for the Cube to be considered a match. This behavior may be altered by certain option flags which may indicate specific rules for selecting a \u201cbest match\u201d. In an alternate embodiment, the sorting process results in the determination of the \u201cbest match\u201d, with the \u201cbest match\u201d being the first element of the sorted list.","At decision block , a \u201cbest match\u201d determination is made with respect to an array element If the array element is considered a \u201cbest match\u201d, a handle, identifier or pointer to the array element is returned and the process ends. If the array element is not considered a \u201cbest match\u201d, the methodology determines whether all of the sorted potential array elements have been analyzed. If all of the elements have not been analyzed, the process proceeds to the next element in the list and continues processing at step . If all of the elements have been analyzed, processing is directed to step , at which an error code is returned indicating that no match was found.","According to one embodiment, a \u201cbest match\u201d function may be employed by the Performance Cube Management API. The\u201d opens the \u201cbest\u201d matching Cube to the caller's specified requirements. A set of option flags can be passed in to modify the default behavior. An example of the function \u201cCaPmPcmopenBestMatch is set forth below:",{"@attributes":{"id":"p-0053","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003Usage"]},{"entry":[{},"#ifndef DONE_CAPMPCM"]},{"entry":[{},"#include <capmpcm.h>"]},{"entry":[{},"#endif\/* DONE CAPMPCM *\/"]},{"entry":[{},"..."]},{"entry":[{},"\u2003CAPMPCMRESELEM * resoureeTb1 = NULL; \/* Any. *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003wchar_t **","userDescriptionTbl = NULL; \/* Any. *\/"]},{"entry":[{},"\u2003char *","storeNameStr \u2003= \u201cD: \\Performance Data\\"]},{"entry":[{},{},"performance_Cubes\u201d;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003struct tm","startDateTime,",{}]},{"entry":[{},{},"matchDateTime;"]},{"entry":[{},"\u2003int","userDescTblSz","= 0,"]},{"entry":[{},{},"resourceTblSz","= 0,"]},{"entry":[{},{},"reserved","= 0,"]},{"entry":[{},{},"noTimebands","= 144,"]},{"entry":[{},{},"timebandSz","= 300,"]},{"entry":[{},{},"allResourceSet","= CAWIN_WILD_INT,"]},{"entry":[{},{},"CubeTypes","= CAPMPCM_ONE_DAY,"]},{"entry":[{},{},"optionFlags","= 0; \/* Default. *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003CAPMPCM_MACHINE_NAME_STR"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"machineNameStr","= L\u201cfred\u201d;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/***"]},{"entry":[{},"* \u2003Initialise the start date-time for the date of ."]},{"entry":[{},"* \u2003Use CaPmPcmMkTime."]},{"entry":[{},"***\/"]},{"entry":[{},"\u2002\u2003..."]},{"entry":[{},"\/***"]},{"entry":[{},"* Locate and open the best matching Cube."]},{"entry":[{},"***\/"]},{"entry":[{},"\u2003if( ( retrn = CaPmPcmOpenBestMatch( storeNameStr,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"userDescriptionTbl,"]},{"entry":[{},"userDescriptionTblSz,"]},{"entry":[{},"resourceTbl,"]},{"entry":[{},"resourceTblSz,"]},{"entry":[{},"machineNameStr,"]},{"entry":[{},"&startDateTime,"]},{"entry":[{},"reserved,"]},{"entry":[{},"noTimebands,"]},{"entry":[{},"timebandSz,"]},{"entry":[{},"allResourceSet,"]},{"entry":[{},"CubeTypes,"]},{"entry":[{},"optionFlags,"]},{"entry":[{},"&matchDateTime ) ) < 0 )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003{"]},{"entry":[{},"\/***"]},{"entry":[{},"* Determine and handle the error."]},{"entry":[{},"***\/"]},{"entry":[{},"\u2003..."]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003else"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\/***"]},{"entry":[{},"* The Cube handle is valid so use it."]},{"entry":[{},"***\/"]},{"entry":[{},"\u2003..."]},{"entry":[{},"\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The arguments for the exemplary function \u201cCaPmPcmOpenBestMatch\u201d are shown in 25 Table C, below:",{"@attributes":{"id":"p-0055","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE C"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CaPmPcmOpenBestMatch Arguments"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["storeNameStr","(in) Top Cube store root directory to search. Can be"]},{"entry":[{},"NULL to indicate search only the current store (current"]},{"entry":[{},"working directory for filesystem based"]},{"entry":[{},"implementations). The name should not be wild carded."]},{"entry":["userDescTbl","(in) Array of Cube user descriptions to match. Can be"]},{"entry":[{},"NULL to indicate match all. An element can be NULL"]},{"entry":[{},"or nul string to match no user description. User"]},{"entry":[{},"Description names can be wild-carded using the"]},{"entry":[{},"standard PCM API string wild-carding."]},{"entry":["userDescTblSz","(in) Size of the above array. Must be 0 if NULL, >0 if"]},{"entry":[{},"non-NULL."]},{"entry":["resourceTb1","(in) Array of resources to match. Can be NULL to"]},{"entry":[{},"indicate match any. Any of part of the resource name"]},{"entry":[{},"(type, subtype or instance) can be NULL to indicate"]},{"entry":[{},"matches anything or wild-carded using the standard"]},{"entry":[{},"PCM API string wild-carding."]},{"entry":["resourceTblSz","(in) Size of the above array. Must be 0 if NULL, >0 if"]},{"entry":[{},"non-NULL."]},{"entry":["machineNameStr","(in) Fully qualified name of machine that data is"]},{"entry":[{},"required for. The machine name should not be wild-"]},{"entry":[{},"carded."]},{"entry":["startDateTime","(in) The start-time for the Cube and the date for the first"]},{"entry":[{},"plane. The date should not be wild-carded, but the time"]},{"entry":[{},"and DST state can be wild carded with"]},{"entry":[{},"CAWIN_WILD_INT as per normal."]},{"entry":["reserved","(in) Unused - for future enhancement. Set this to 0."]},{"entry":["noTimebands","(in) The number of time-bands in the Cube. Set this to"]},{"entry":[{},"the required time-band size, or wild-card it with"]},{"entry":[{},"CAW1NWILD_INT as per normal."]},{"entry":["timebandSz","(in) The size of each time-band in seconds. Set this to"]},{"entry":[{},"the required time-band size, or wild-card it with"]},{"entry":[{},"CAW1N_WILD_LNT as per normal."]},{"entry":["allResourceSet","(in) Set to FALSE to indicate a sub-set of all available"]},{"entry":[{},"resources, to TRUE to indicate all available resources or"]},{"entry":[{},"wild-card it with CAWIN_WILD_INT as per normal."]},{"entry":["CubeTypes","(in) The specific required Cube type or wild-carded with"]},{"entry":[{},"CAWIN_WILD_INT to indicate any type is acceptable,"]},{"entry":[{},"or the new matching value of"]},{"entry":[{},"CAPMPCM_RAW_DAYS_ONLY which indicates any"]},{"entry":[{},"Cube type matches for which the data in the planes is"]},{"entry":[{},"raw original values rather than averages for several"]},{"entry":[{},"days."]},{"entry":["optionFlags","(in) 0 indicates default behaviour. Option flags can be"]},{"entry":[{},"or'ed together to select multiple options."]},{"entry":["matchDateTime","(out) The start date-time for the plane in the opened"]},{"entry":[{},"Cube that is the bast match for the request parameters."]},{"entry":[{},"This it to indicate to the caller which plane of a period"]},{"entry":[{},"Cube is deemed the best match. The date-time will only"]},{"entry":[{},"be valid if a Cube is opened."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The CaPmPcmOpenBestMatch function is called to locate and open the best matching Cube according to the callers specification. The function employs the methodology illustrated in .\n\n","The default order in which Cube Types are considered is shown in Table D, below:",{"@attributes":{"id":"p-0058","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE D"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Cube Type Default Order"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Best","CAPMPCM_ONE_DAY"]},{"entry":[{},"CAPMPCM_ONE_ENTERPRISE_DAY"]},{"entry":[{},"CAPMPCM_ONE_WEEK_OF_DAYS"]},{"entry":[{},"CAPMPCM_ONE_MONTHOF_DAYS"]},{"entry":[{},"CAPMPCM_ONE_YEAR_OF_DAYS"]},{"entry":[{},"CAPMPCM_SEVERAL_DAYS"]},{"entry":[{},"CAPMPCM_ONEAVERAGE_WEEK"]},{"entry":[{},"CAPMPCM_ONE_AVERAGE_ENTERPRISE_WEEK"]},{"entry":[{},"CAPMPCM_SEVERAL_AVERAGE_WEEKS"]},{"entry":[{},"CAPMPCM_ONE_AVERAGE_MONTH"]},{"entry":[{},"CAPMPCM_ONE_AVERAGE_ENTERPRISE_MONTH"]},{"entry":[{},"CAPMPCM_SEVERAL_AVERAGE_MONTHS"]},{"entry":[{},"CAPMPCM_ONE_AVERAGE_YEAR"]},{"entry":[{},"CAPMPCM_ONE_AVERAGE_ENTERPRISE_YEAR"]},{"entry":[{},"CAPMPCM_SEVERAL_AVERAGE_YEARS"]},{"entry":["Worst","CAPMPCM_ONE_AVERAGE_DAY"]},{"entry":[{},"CAPMPCM_ONE_AVERAGE_ENTERPRISE_DAY"]},{"entry":[{},"CAPMPCM_SEVERAL_AVERAGE_DAYS"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The default behavior can be modified by the specification of a number of option flags. If no optional behavior is required then a 0 value should be passed in. Otherwise, the value passed in should be the bit-wise OR of the individual option flags required.","The options include:\n\n","What has been described above includes several examples. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems, methods, and computer readable media associated with business process policy data. However, one of ordinary skill in the art may recognize that further combinations and permutations are possible. Accordingly, this application is intended to embrace such alterations, modifications, and variations that fall within the scope of the claims. Furthermore, to the extent that the term \u201cincludes\u201d is employed in the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as that term is interpreted when employed as a transitional word in a claim."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present methods and systems, reference is now made to the following description taken in conjunction with the accompanying drawings in which like reference numbers indicate like features and wherein:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
