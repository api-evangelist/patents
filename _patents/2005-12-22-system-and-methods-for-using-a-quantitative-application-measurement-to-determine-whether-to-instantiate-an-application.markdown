---
title: System and methods for using a quantitative application measurement to determine whether to instantiate an application
abstract: Systems and methods are disclosed for quantitative measurements of an application and a computer. In one exemplary embodiment, there is provided a method for determining whether to instantiate an application on one of a plurality of interconnected computers. Moreover, the method includes receiving information regarding the application to be instantiated on the computer; receiving information regarding the computer on which the application is to be instantiated; determining a dual measurement based on the received application information and the received computer information; and determining whether to instantiate the application based on the determined dual measurement.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08627326&OS=08627326&RS=08627326
owner: SAP AG
number: 08627326
owner_city: Walldorf
owner_country: DE
publication_date: 20051222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["I. Field of the Invention","The present invention relates to data processing. More particularly, the present invention relates to quantitative measurements of applications at one or more computers in a multiprocessor computing environment.","II. Background and Material Information","In multiprocessor computing environments, such as distributed, parallel, grid, or peer-to-peer computing environments, an application may be instantiated (or executed) on a computer. However, the source of an application that will be instantiated on a computer may not have any information concerning the state of the computer or the state of any applications on the computer. The lack of such state information may become a concern when there are insufficient resources at the computer to accommodate a new application. When there are insufficient resources at the computer, the performance of the computer and its applications degrade. For example, computer performance degradations may occur when there is insufficient memory at the computer or when CPU (central processing unit) utilization is too high. Performance degradations of an application can manifest themselves when the application has too many incoming calls, too many started threads, and the like.","In a multiprocessor computing environment, knowledge of performance degradations can be used to decide whether to open a new instance of an application (or execute the new application) at a computer. For example, in a multiprocessor environment, a source computer may prefer instantiating a new application at a computer with sufficient resources to avoid having any performance degradations. In contrast, if a new application is instantiated (or executed) at a computer with insufficient resources, it is more likely that performance degradations will impact the computer or the application.","Systems, methods, and articles of manufacture consistent with the invention provide for quantitative measurements of an application or a computer.","In one exemplary embodiment, there is provided a method for determining whether to instantiate an application on one of a plurality of interconnected computers. Moreover, the method includes receiving information regarding the application to be instantiated on the computer; receiving information regarding the computer on which the application is to be instantiated; determining a measurement based on the received application information and the received computer information; and determining whether to instantiate the application based on the measurement.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention, as described. Further features and\/or variations may be provided in addition to those set forth herein. For example, the present invention may be directed to various combinations and subcombinations of the disclosed features and\/or combinations and subcombinations of several further features disclosed below in the detailed description.","Reference will now be made in detail to the invention, examples of which are illustrated in the accompanying drawings. The implementations set forth in the following description do not represent all implementations consistent with the claimed invention. Instead, they are merely some examples consistent with certain aspects related to the invention. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","112","116","118","120","124","100"]},"In one exemplary embodiment, there is provided a regulator  for determining whether to instantiate a new application on one of a plurality of interconnected computers, such as servers - or clients -. Moreover, regulator  may receive information regarding the application to be instantiated on the computer and receive information regarding the computer on which the application is to be instantiated. The computer on which the application is to be instantiated can be any computer, such as server . Regulator  then determines a measurement based on the received application information and the received computer information. Based on the determined measurement, regulator  determines whether to instantiate the application. For example, if the measurement indicates that the computer, such as server , has sufficient resources to accommodate the new application, regulator  allows that application to be instantiated on the computer. If the measurement indicates that the computer has insufficient resources for the new application, regulator  may not allow the application to be instantiated. In some cases, regulator  may then evaluate another computer, such as server , to determine whether it has sufficient resources. The use of regulator  may enable a computer having a regulator to autonomously instantiate applications in one or more computers of a multiprocessor computing environment.","Clients - may each include a computer capable of making a request through network  to instantiate an application on servers , , . As used herein, the term \u201cinstantiate\u201d means, in an object oriented programming environment, an object of a particular class, and, more generally, includes deploying, customizing, running and\/or executing an application.","A computer suitable for use as a client or a server includes, among other things, a processor for executing instructions and one or more memory devices for storing computer program instructions and data. The computer may also receive data from and\/or transfer data to one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. Furthermore, the computer may be capable of interfacing to a network, such as network .","Network  may include, alone or in any suitable combination, a telephony-based network, a local area network (LAN), a wide area network (WAN), a dedicated intranet, a wireless LAN, the Internet, a wireless network, a bus, or any other any communication mechanisms. Further, any suitable combination of wired and\/or wireless components and systems may be used to provide a communication mechanism. Moreover, network  may be embodied using bi-directional or unidirectional communication links. Further, network  may utilize protocols such as Transmission Control Protocol\/Internet Protocol (TCP\/IP), Hyper Text Transfer Protocol (HTTP), SOAP (Simple Object Access Protocol), and Remote Procedure Call (RPC).","Servers - may each include a computer with a coupled storage device and a memory. The memory may contain an operating system, one or more applications as well as their corresponding interfaces. Moreover, the memory may further include regulator application . Regulator  can be implemented as a software application that controls whether an application should be instantiated at a computer, such as a server of system . Regulator  receives information regarding measurements of the computer and\/or its operating system (e.g., available memory at a server, processing power of a server, available disk space at a server, available network bandwidth at server, and the like). Furthermore, regulator  receives information regarding measurements of the application to be instantiated (e.g., memory required by the application, processing power required by application, disk space required by the application, bandwidth required by the application, and the like). Based on the received information regarding the computer and the application to be instantiated, regulator  determines whether the application should be instantiated at a given computer, such as one of the servers of system . Moreover, the measurements may be normalized, so that different types of measurements can be processed, combined, compared, etc. Furthermore, the measurements may be weighted so that importance (or lack thereof) can be taken into account. Although the previous example regarding regulator  describes a server, regulator  can be used in connection with any computer.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["200","140","210","220","140","210","220","140","240"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3A","FIG. 3A","FIG. 1","FIG. 3A"],"b":["300","120","332","334","336","120","122","124","328","330","120","124"]},"Memory  includes an operating system (OS) , one or more software applications, such as an application , a regulator , a process application , and an application program interface . Memory  may include any type of physical memory including RAM, DRAM, FLASH memory, or the like. Storage device  may include any storage medium including a disk drive, an optical drive, FLASH memory, or the like.","Application  can be any type of software application. As noted above, regulator  may be a software application that controls whether one or more instances of applications in the distributed computing environment  should be instantiated. In one exemplary embodiment, regulator  uses application programming interface (API)  to receive quantitative measurement information about an application to be instantiated at a server (step ). API  may provide information regarding the application, such as system resources needed by the application including required processing, required main memory, required disk space, required network bandwidth, and the like. Moreover, the information regarding the application may be stored, for example, in a storage device, such as a database. Alternatively, the information regarding the application can be retrieved through the Internet or an intranet from a service that provides such information. Furthermore, for different applications the information regarding each of the application may be the same or may be different. Regulator  may also use API  to receive quantitative measurement information concerning the current system resources available on a computer, such as one of the servers -, on which the application is to be instantiated (step ). Examples of such measurements include the following: processing power available at the computer, available main memory at the computer, available disk space at the computer, available network bandwidth, and the like. Retrieval of the measurements may be implemented using services provided by an operating system or using commercially available tools, such as saposcol (available from SAP AG, Walldorf, Germany).","Regulator  may combine the measurement information regarding the application and the system (e.g., server ) to generate a dual measurement (step ). As noted above, the dual measurement value may be normalized and\/or may be weighted. If such measurements indicate that server  can accommodate the instantiation of the application, regulator  may allow the application to be instantiated on server  (step ). If such measurements indicate that server  cannot accommodate the application, regulator may make additional measurements at another computer, such as server  or , to determine whether (or where) the application can be instantiated. Thus, regulator  controls whether the application is instantiated at a computer, such as server .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3B","FIGS. 3A and 3B","FIGS. 3A and 3B"],"b":["300","140","390","120","390","140","140","140","140","140","120","120","140"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 4","FIG. 4"],"b":["400","400","330","140","332","140","122","402"]},{"@attributes":{"id":"p-0030","num":"0029"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"a","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"a","mn":"1"}}},{"mtd":{"msub":{"mi":"a","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["a","n"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"1"}}]}}}},"br":{},"sub":["1","2","n ","1 ","2 ","3 ","4 "],"b":["122","122","140","342","120"]},"Regulator  may receive information regarding the application to be instantiated, such as resources needed by the application, and then generate another vector (step ). The generated vector b may be determined based on the following equation:",{"@attributes":{"id":"p-0032","num":"0031"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"b","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"b","mn":"1"}}},{"mtd":{"msub":{"mi":"b","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["b","n"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"2"}}]}}}},"br":{},"sub":["1","2","n ","1 ","2 ","3 ","4 "]},"Regulator  may then generate a third vector c based on vectors a and b of steps  and . The generated vector c may be determined based on the following equation:",{"@attributes":{"id":"p-0034","num":"0033"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"c","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"c","mn":"1"}}},{"mtd":{"msub":{"mi":"c","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["c","n"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"3"}}]}}}},"br":{},"sub":["1","2","n ","1","2","n ","1 ","1","2 ","2"]},"Regulator  may then determine a value a (alpha) within the interval of zero (0) to one (1). More specifically, the value of alpha may be determined based on the following equation:",{"@attributes":{"id":"p-0036","num":"0035"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mo":"\u221d","mrow":{"mo":"=","mrow":{"mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","msub":{"mi":["C","i"]}},"mi":"n"},"mo":"."}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"4"}}]}}}},"br":{}},"Regulator  may then generate a vector p representing measurements of maximum allowed metrics of the application when executed on a computer (step ). The generated vector p may be determined based on the following equation:",{"@attributes":{"id":"p-0038","num":"0037"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"p","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"p","mn":"1"}}},{"mtd":{"msub":{"mi":"p","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["p","n"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"5"}}]}}}},"br":{},"sub":["1","2","n ","1 ","2 "]},"Regulator  may then generate a vector q corresponding to the current values of vector p (step ). The vector q may be of the following form:",{"@attributes":{"id":"p-0040","num":"0039"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"q","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"q","mn":"1"}}},{"mtd":{"msub":{"mi":"q","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["q","n"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"6"}}]}}}},"br":{},"sub":["1 ","2 ","n "],"sup":"th "},"Regulator  then generates vector r based on vectors p and q (step ). In one embodiment, vector r is determined based on the following equation:",{"@attributes":{"id":"p-0042","num":"0041"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"r","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"r","mn":"1"}}},{"mtd":{"msub":{"mi":"r","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["r","n"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"7"}}]}}}},"br":{}},"Regulator  then generates a value beta (\u03b2) within an interval of zero (0) to one (1). More specifically, the beta value may be determined based on the following equation:",{"@attributes":{"id":"p-0044","num":"0043"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03b2","mo":"=","mrow":{"mo":["(",")"],"mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","msub":{"mi":["r","i"]}},"mi":"n"}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"8"}}]}}}},"br":{}},"Regulator  then generates vector z based on the alpha and beta values determined at steps  and , respectively. The generation of vector z may be determined based on the following equation:",{"@attributes":{"id":"p-0046","num":"0045"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"z","mo":"=","mrow":{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mo":"\u221d"}},{"mtd":{"mi":"\u03b2"}}]}},"mo":"."}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"9"}}]}}}}},"Regulator  may then determine a value gamma (\u03b4) based on the alpha and beta values determined at steps  and  (step ). The value of gamma may be determined based on the following equation:",{"@attributes":{"id":"p-0048","num":"0047"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mo":"\u221d","mrow":{"mo":"=","mfrac":{"mrow":{"mo":"\u221d","mrow":{"mo":"+","mi":"\u03b2"}},"mi":"z"}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"10"}}]}}}},"br":{},"b":["140","40"]},"In some embodiments, weighting vectors w are used according to the following equation:",{"@attributes":{"id":"p-0050","num":"0049"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"w","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"w","mn":"1"}}},{"mtd":{"msub":{"mi":"w","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["w","n"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"11"}}]}}}},"br":{},"sub":["1","2","n ","2 ","2 ","1 ","2 ","2 "]},{"@attributes":{"id":"p-0051","num":"0050"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mo":"\u221d","mrow":{"mo":"=","mfrac":{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["c","i"]},{"mi":["w","i"]}],"mo":"*"}}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"mo":["(",")"],"msub":{"mi":["w","i"]}}}]}}}},{"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"12"}}]}}}},"br":{},"sub":["i ","i "]},"The systems and methods disclosed herein may be embodied in various forms including, for example, a data processor, such as a computer that also includes a database, digital electronic circuitry, firmware, software, or in combinations of them. Moreover, the above-noted features and other aspects and principles of the present invention may be implemented in various environments. Such environments and related applications may be specially constructed for performing the various processes and operations according to the invention or they may include a general-purpose computer or computing platform selectively activated or reconfigured by code to provide the necessary functionality. The processes disclosed herein are not inherently related to any particular computer, network, architecture, environment, or other apparatus, and may be implemented by a suitable combination of hardware, software, and\/or firmware. For example, various general-purpose machines may be used with programs written in accordance with teachings of the invention, or it may be more convenient to construct a specialized apparatus or system to perform the required methods and techniques.","The systems and methods disclosed herein may be implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine readable storage device or in a propagated signal, for execution by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers. A computer program can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.","It is to be understood that the foregoing description is intended to illustrate and not to limit the scope of the invention, which is defined by the scope of the appended claims. Other embodiments are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which constitute a part of this specification, illustrate various embodiments and aspects of the present invention and, together with the description, explain the principles of the invention. In the drawings:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
