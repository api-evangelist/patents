---
title: Framework to populate and maintain a service oriented architecture industry model repository
abstract: A method for building a service oriented architecture industry model repository comprising: creating a meta-meta-meta model with a topic map based index; pre-populating the meta-meta-meta model with a topic map based index using the data from the physical asset repository and known relationships between topics, associations, and occurrences in topic maps within the meta model service; pre-populating an information model repository common meta-meta model comprising reusing a taxonomy specific to an industry vertical as a common ontology for the topic map based index; pre-populating the at least one topic map meta model with data specific to a particular topic or industry vertical from the physical asset repository; and pre-populating models of the at least one topic map meta model with data specific to a particular topic or industry vertical from the physical asset repository.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566358&OS=08566358&RS=08566358
owner: International Business Machines Corporation
number: 08566358
owner_city: Armonk
owner_country: US
publication_date: 20091217
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates to meta models and more specifically to a framework to populate and maintain a service oriented architecture (SOA) industry model repository (IMR).","Service oriented architecture (SOA) is an enterprise scale information technology (IT) architecture for linking resources on demand. In SOA, resources are made available to participants in a value-net, enterprise, and\/or line of business, typically spanning multiple applications within an enterprise or across multiple enterprises, where the primary structuring element for applications are a service, as opposed to subsystems, systems, or components. The service consists of a set of business aligned service definitions that collectively fulfill an organization's business processes and goals. These services can be choreographed into composite applications and can be invoked through internet based open protocols.","Industry standard models are usually very big and complex by their nature. Their sheer volume makes them hard to manage on a project implementation level. In order to populate the gigantic industry models, they need to broken up and parsed systematically and automatically.","Manually populating the repository, especially for the entire vertical industries, would be exhaustive, redundant and error prone. There is existing domain knowledge that can be leveraged, e.g. Multi-Model Mapper (MMM) for Insurance Application Architecture (IAA). MMM has already created mappings among various models, i.e. the mappings for processes, interfaces and data models.","A service or utility that collects key concepts, complex industry standard models, resources, assets, etc. in the enterprises' information from the SOA IMR and ties it all together does not, exist making knowledge transfer and reuse of resources and assets difficult. Therefore, there is a need for tools that automate the process of encoding arbitrarily complex knowledge structures and link them to information assets.","According to one embodiment of the present invention, a method and a system for building a service oriented architecture industry model repository is provided comprising: creating a meta-meta-meta model with a topic map based index; pre-populating the meta-meta-meta model with a topic map based index using the data from the physical asset repository and known relationships between topics, associations, and occurrences in topic maps within the meta model service; pre-populating an information model repository common meta-meta model comprising reusing a taxonomy specific to an industry vertical as a common ontology for the topic map based index; pre-populating the at least one topic map meta model with data specific to a particular topic or industry vertical from the physical asset repository; and pre-populating models of the at least one topic map meta model with data specific to a particular topic or industry vertical from the physical asset repository.","With reference now to the figures, and in particular, with reference to , exemplary diagrams of data processing environments are provided in which illustrative embodiments may be implemented. It should be appreciated that  are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["1","1","2","1","2"]},"In the depicted example, server  and server  connect to network  along with storage unit . In addition, clients , , and  connect to network . Clients , , and  may be, for example, personal computers or network computers. In the depicted example, server  provides information, such as boot files, operating system images, and applications to clients , , and . Clients , , and  are clients to server  in this example. Network data processing system  may include additional servers, clients, and other devices not shown.","Program code located in network data processing system  may be stored on a computer recordable storage medium and downloaded to a data processing system or other device for use. For example, program code may be stored on a computer recordable storage medium on server  and downloaded to client  over network  for use on client .","In the depicted example, network data processing system  is the Internet with network  representing a worldwide collection of networks and gateways that use the Transmission Control Protocol\/Internet Protocol (TCP\/IP) suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, governmental, educational and other computer systems that route data and messages. Of course, network data processing system  also may be implemented as a number of different types of networks, such as, for example, an intranet, a local area network (LAN), or a wide area network (WAN).  is intended as an example, and not as an architectural limitation, for the different illustrative embodiments.","With reference now to , a block diagram of a data processing system is shown in which illustrative embodiments may be implemented. Data processing system  is an example of a computer, such as server  or client  in , in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments. In this illustrative example, data processing system  includes communications fabric , which provides communications between processor unit , memory , persistent storage , communications unit , input\/output (I\/O) unit , and display .","Processor unit  serves to execute instructions for software that may be loaded into memory . Processor unit  may be a set of one or more processors, or may be a multi-processor core, depending on the particular implementation. Further, processor unit  may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example, processor unit  may be a symmetric multi-processor system containing multiple processors of the same type.","Memory  and persistent storage  are examples of storage devices . A storage device is any piece of hardware that is capable of storing information, such as, for example, without limitation, data, program code in functional form, and\/or other suitable information either on a temporary basis and\/or a permanent basis. Memory , in these examples, may be, for example, a random access memory or any other suitable volatile or non-volatile storage device. Persistent storage  may take various forms depending on the particular implementation. For example, persistent storage  may contain one or more components or devices. For example, persistent storage  may be a hard drive, a flash memory, a rewritable optical disk, a rewritable magnetic tape, or some combination of the above. The media used by persistent storage  also may be removable. For example, a removable hard drive may be used for persistent storage .","Communications unit , in these examples, provides for communications with other data processing systems or devices. In these examples, communications unit  is a network interface card. Communications unit  may provide communications through the use of either or both physical and wireless communication links.","Input\/output unit  allows for input and output of data with other devices that may be connected to data processing system . For example, input\/output unit  may provide a connection for user input through a keyboard, a mouse, and\/or some other suitable input device. Further, input\/output unit  may send output to a printer. Display  provides a mechanism to display information to a user.","Instructions for the operating system, applications, and\/or programs may be located in storage devices , which are in communication with processor unit  through communications fabric . In these illustrative examples the instructions are in a functional form on persistent storage . These instructions may be loaded into memory  for running by processor unit . The processes of the different embodiments may be performed by processor unit  using computer implemented instructions, which may be located in a memory, such as memory .","These instructions are referred to as program code, computer usable program code, or computer readable program code, that may be read and run by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media, such as memory  or persistent storage .","Program code  is located in a functional form on computer readable media  that is selectively removable and may be loaded onto or transferred to data processing system  for running by processor unit . Program code  and computer readable media  form computer program product  in these examples. In one example, computer readable media  may be in a tangible form, such as, for example, an optical or magnetic disc that is inserted or placed into a drive or other device that is part of persistent storage  for transfer onto a storage device, such as a hard drive that is part of persistent storage . In a tangible form, computer readable media  also may take the form of a persistent storage, such as a hard drive, a thumb drive, or a flash memory that is connected to data processing system . The tangible form of computer readable media  is also referred to as computer recordable storage media. In some instances, computer readable media  may not be removable.","Alternatively, program code  may be transferred to data processing system  from computer readable media  through a communications link to communications unit  and\/or through a connection to input\/output unit . The communications link and\/or the connection may be physical or wireless in the illustrative examples. The computer readable media also may take the form of non-tangible media, such as communication links or wireless transmissions containing the program code.","In some illustrative embodiments, program code  may be downloaded over a network to persistent storage  from another device or data processing system for use within data processing system . For instance, program code stored in a computer readable storage medium in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing program code  may be a server computer, a client computer, or some other device capable of storing and transmitting program code .","The different components illustrated for data processing system  are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to, or in place of, those illustrated for data processing system . Other components shown in  can be varied from the illustrative examples shown. The different embodiments may be implemented using any hardware device or system capable of executing program code. As one example, the data processing system may include organic components integrated with inorganic components and\/or may be comprised entirely of organic components excluding a human being. For example, a storage device may be comprised of an organic semiconductor.","As another example, a storage device in data processing system  is any hardware apparatus that may store data. Memory , persistent storage  and computer readable media  are examples of storage devices in a tangible form.","In another example, a bus system may be used to implement communications fabric  and may be comprised of one or more buses, such as a system bus or an input\/output bus. Of course, the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally, a communications unit may include one or more devices used to transmit and receive data, such as a modem or a network adapter. Further, a memory may be, for example, memory  or a cache such as found in an interface and memory controller hub that may be present in communications fabric .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 3","FIG. 1"],"b":["100","1","102","102","104","105","102","105"]},"The IMR architecture system  includes federated physical model assets  that are stored in different types of repositories depending on the model driven framework tools and products that are being deployed by the system. The federated physical assets may include framework, industry models, business models, UML design applications, data models, business services, service components, and technical services. The federated physical assets are not limited to the assets shown in .","Applications and services  are provided to IMR users  through the network  using interfaces . The interfaces used by the IMR users  includes reports generation and tools supporting multi-formats and visualization tools supporting complex views. The applications and services  may include registration and profile management; creating and customizing repository meta model, importing customized and disparate model\/data into the depository, examining\/decomposing complex diagrams and structures, structure, link, and trace change disparate model\/assets; advanced search and query, navigate\/browse data assets; select and download model\/assets, customize\/add models\/assets submit for repository upload; and impact analysis. The application and services are not limited to the assets shown in . The applications and services are described in greater detail in applications entitled \u201cIMPLEMENTING SERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL REPOSITORY USING SEMANTIC WEB TECHNOLOGIES\u201d, \u201cMANAGING AND MAINTAINING SCOPE IN A SERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL REPOSITORY\u201d, and \u201cRECOGNITION OF AND SUPPORT FOR MULTIPLE VERSIONS OF AN ENTERPRISE CANONICAL MESSAGE MODEL\u201d filed concurrently with the present application. These applications are hereby incorporated by reference. The interfaces  are further described in greater detail in an application entitled, \u201cSERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL REPOSITORY META-MODEL WITH A STANDARD BASED INDEX\u201d filed concurrently and hereby incorporated by reference.","The IMR users  may include but are not limited to repository administrator, model manager, system architect, and business analyst.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 4","b":["102","102","202","202","206","208","210","210","204","212","214","216"]},"The internal meta model service  of the SOA IMR component  is the SOA IMR meta-model service using ISO Standard topic map meta models . Topic Maps map both web and real-world information resources, by reifying real-world resources as \u201csubjects\u201d, and creating \u201ctopic\u201d constructs to capture their characteristics and relationships with other topics and subjects. By using the topic maps meta models , , and  as the repository internal meta model, a common meta model service interface  allow users to programmatically access, manage, and maintain these meta models.","The SOA IMR meta model service  maps or implements the ISO topic map meta models  to a web ontology language (OWL) representation of the topic map. The industry model repository (IMR) provides the context for the implementation of the ISO topic map meta models  to the OWL representation of the topic maps. The OWL representation of the topic map is stored in a resource description framework (RDF) semantic web repository .","An embodiment of the present invention is a method of automating the process of encoding the service oriented architecture (SOA) with the kind of information that an industry model repository (IMR) needs, such as meta-meta data independent of the industry vertical, abstract information such as the Component Business Model (CBM) models information, business process\/services model information, and entity model information and instance information. The tools for automating the process of encoding the service oriented architecture (SOA) with complex knowledge may also be used to represent the interrelation of roles, products, procedures, etc. that constitutes an enterprise and links them to corresponding documentations. Such tools make it easier for a user to navigate through a multidimensional topic space of knowledge before evaluating which information resources are relevant.","An embodiment of the present invention also provides a framework for automating the pre-population of an industry model repository (IMR) by leveraging the information in reusable assets. The framework also allows for the maintenance of the consistency of the data and the ability of automated index building for the IMR.","The information that is included in the pre-population of the SOA IMR includes but is not limited to the industry canonical ontology, vertical industry ontology, client model, client ontology, IMR common ontology, abstract information, and instance information. The industry canonical ontology and the vertical industry ontology are ontology or taxonomy that are part of the industry canonical model that does not include any client changes. The client model includes the client's proprietary model assets. The client ontology is the ontology or taxonomy that is part of the client model. The IMR common ontology is independent of any industry vertical or topic map meta model and based on the upper taxonomy of the architecture of the industry. The abstract information includes but is not limited to business process\/services model information, entity model information, and CBM models information.","The population of the SOA IMR is executed in a series of steps.  shows the pre-population framework of the SOA IMR which are described briefly as follows:","1) Create the meta-meta-meta model (Topic Maps-Data Model (TMDM) Based Index)  of the SOA IMR:","The Topic Map Meta-Model is defined based primarily upon ISO 13250-2 Data Model to provide the most authoritative definition of the abstract syntax for Topic Maps. The TMDM normative specification is textual. Each topic is about a single subject. Subjects in Topic Map may be anything physical or conceptual. A machine addressable Topic (physical asset) will have a locator (e.g. a URL) while non-machine addressable subjects (e.g. Process model) will have an identifier (e.g. the URL of a page about the subject containing a figure of this Business Process or URL). Topics are equivalent to Resource Description Framework (RDF) Resources, describing elements in a web world. The RDF resources provide interoperability between applications and services  that exchange machine-understandable information on the Web. RDF uses XML to exchange basic descriptions of Web resources. On top of RDF a Web Ontology Language for Description Logics (OWL DL) is used to provide a language with both a well-defined semantics and set of language constructs including classes (topics), association, and occurrences that are required for describing meta models Web domain.","2) Pre-population of the SOA IMR meta-meta-meta model data using Topic Maps using a pre-existing OWL DL representation of the topic maps.","The pre-existing OWL DL representation of the topic maps may be as shown in  with relationships between the topics, associations and occurrences defined.","3) Pre-population of the SOA IMR common meta-meta model data () automatically generated by a dedicated parser reuses a Multi-Model Mapper (MMM) insurance upper ontology as the SOA IMR common ontology. The Multi-Model Mapper (MMM) is a product sold by the IBM Corporation as the IBM\u00ae Industry Models Multi Model Mapper. Other ontologies may also be used. An example of the taxonomy used within the insurance upper ontology to populate the common meta-meta model data is shown in .","4) Pre-population of the vertical industry meta model data () automatically generated by a dedicated parser, which includes but not limited to IBM Insurance Application Architecture (IAA) MMM and IBM Banking Industry Enterprise Models (IFW) MMM, as well as Telco: IBM Enhanced Telecom Operations Map (eTOM) process definition spreadsheet and Domain Analysis. These integrated data (operational and informational), process, service and component models are consistently defined across business requirements, analysis and design.","5) Pre-population of the models for a particular industry vertical, often in a finer granularity () automatically generated by a dedicated parser, which include but not limited to Telco: eTOM process model, Shared Information Data (SID) UML models, Insurance: IAA interface design models (IDM) UML models; and Banking IFW. IDM is a sub-model within a given industry model. This may include an actual use case of requirements defined by the users .","For example to create an SOA IMR , in a first step, the meta-meta-meta model data  of the SOA IMR is built using the definitions in TMDM (based on ISO 13250-2), with each topic being a single subject. In a second step, the meta-meta-meta model data  is then pre-populated. The population of the meta-meta-meta model  is implemented by converting of the SOA IMR topic map meta model using a semantic technologies into a semantic web repository based on an OWL-DL representation of the topic map. Topic map constructs are the abstract collection of elements that are part of any topic map. Each topic represents a subject in the domain of discourse. The implementation of the IMR using semantic web technologies includes associating each instance of topic with exactly one subject. Topic Map Data Model (TMDM) defines these terms: a subject indicator, a subject identifier, a subject locator. Association which is multi-way relationship between one or more topics, and occurrences where an occurrence may be any descriptive information about a topic, including instances, and semantically is similar to UML attributes to the elements in the topics map based index . The implementation of the IMR using semantic web technologies is described in greater detail in an application entitled \u201cIMPLEMENTING SERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL REPOSITORY USING SEMANTIC WEB TECHNOLOGIES\u201d filed concurrently. This application is hereby incorporated by reference.","In a third step, the SOA IMR common meta-meta model  data is pre-populated by a parser that parses index files of the industry model repository from a multi-model mapper to extract to the meta-meta model and use the meta-meta model to repopulate the topic map of the SOA IMR meta-meta model service component . The multi model mapper (MMM) uses a common taxonomy. While the multi model mapper does contain data specific to the insurance industry, this taxonomy may also be used a common taxonomy for any SOA IMR and does not tie the common meta-meta model  to a particular industry vertical. Since the meta-meta data is independent of any particular industry vertical, it may be used as the meta-meta data for all IMR instances.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 7","FIGS. 7A and 7B"],"b":["208","108","108","208"]},"In a fourth step, the meta model  for a particular industry vertical is pre-populated. The meta model  for a particular industry vertical is pre-populated by a parser that can read the information in the assets and convert the information to the topic map constructs, such as (but not limited to) eTOM, IAA, and IFW.","The eTOM model serves as a reference framework for categorizing all the business activities of a Telecom service provider. It categorizes them into different levels of detail according to their significance and priority for the business. The eTOM structure establishes the business language and foundation for the development and integration of Business Support Systems (BSS) and Operational Support Systems (OSS), respectively. eTOM provides a reference point and common language for service providers' internal process (re)engineering needs, partnerships, alliances, and general working agreements with other providers. For suppliers, the eTOM framework outlines potential boundaries of software components, and the required functions, inputs, and outputs that need to be supported by products using the common language of the service providers.","In a fifth step, the model data  is pre-populated. The pre-population of the model data includes abstract  and instance models . Abstract models  are models that are common to any particular industry vertical, such as insurance. The abstract models  build up over a period of time and represent aggregated lessons learned across a number of industries within a particular industry vertical. The lessons learned are commonly captured as UML models. To pre-populate the model data with the abstract models, a parser that pulls apart UML2 model assets into its constituent components and allow for fine grained occurrence relationships to be created between the SOA IMR meta model and the abstract model instant data. UML2 is an Eclipse Modeling Framework-based implementation of the Unified Modeling Language. The decomposed instance model is stored in a repository.","Instance models  are models that are for a particular industry within the vertical meta model. The instance models  are built and based on the abstract models and are customized to a particular industry within industry vertical meta model. The instance models  are encoded in the repository as models or UML models. The parser used for pulling apart the UML2 model assets of the abstract models may also be used for pulling part the instance models into its constituent components and allowing for fine grained occurrence relationships to be created between the SOA IMR meta model and the abstract model instance  data. The decomposed instance model is stored in a repository. Referring to , parsed elements of the instance model are a service provider of CustomerRelationshipManagement  which uses a service specification of IContactManagement  and a service specification of ICustomerInformationManagement .","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","Any suitable computer usable or computer readable medium may be utilized. The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, or semiconductor system, apparatus, or device. More specific examples (a non-exhaustive list) of the computer-readable medium would include the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a portable compact disc read-only memory (CD-ROM), an optical storage device, a transmission media such as those supporting the Internet or an intranet, or a magnetic storage device. In the context of this document, a computer-usable or computer-readable medium may be any medium that can store the program for use by or in connection with the instruction execution system, apparatus, or device. The computer usable program code may be transmitted using any appropriate medium, including but not limited to the Internet, wireline, optical fiber cable, RF, etc.","Computer program code for carrying out operations of one or more embodiment of the present invention may be written in an object oriented programming language such as Java, Smalltalk, C++ or the like. However, the computer program code for carrying out operations of one or more embodiments of the present invention may also be written in conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","The present invention is described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention, for example as shown in . In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","Having thus described the invention of the present application in detail and by reference to embodiments thereof, it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 7","FIGS. 7A and 7B"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
