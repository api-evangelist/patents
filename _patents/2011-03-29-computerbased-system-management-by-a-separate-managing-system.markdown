---
title: Computer-based system management by a separate managing system
abstract: In an embodiment, a method is presented for providing managerial access to a managed system. In this method, a definition of a procedure to be performed on the managed system is received into a managing system. A request to perform the procedure is received into the managing system from a user of the managing system. The procedure is performed in response to the request. The performing of the procedure includes initiating a plurality of functions resident in the managed system. Results indicative of the performing of the procedure are presented to the user of the managing system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09207998&OS=09207998&RS=09207998
owner: SAP SE
number: 09207998
owner_city: Walldorf
owner_country: DE
publication_date: 20110329
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to management of computer-based systems. In an example embodiment, the disclosure relates to providing managerial access to a computer-based system from a separate managing system.","Computer-based systems, including the software being executed thereon, are oftentimes operated upon by two general classes of users: the primary users that interact with the system for at least one specific purpose, and the information technology (IT) or systems professionals (for example, systems administrators) that interact with the system to ensure its proper operation for the benefit of the primary users. For example, the primary user may be utilizing a business application on the system for marketing, sales, inventory, and\/or other related business activities. For these same systems, the system administrators may be engaged in periodic system maintenance, data archiving, system reconfiguration, system testing, and other system management functions.","Previously, system problems often involved onsite participation of the provider of the system or associated software for problem resolution by way of a series of specialized commands or functions provided in, or added to, the system to be managed. Eventually, the provider was able to undertake many such tasks remotely, such as by way of an Internet or other network or remote communication connection. However, as the number of systems and software installations for a typical system or software provider continue to increase, the ability of a system or software vendor or supplier to continue to provide such services for all customers is diminished accordingly.","The description that follows includes illustrative systems, methods, techniques, instruction sequences, and computing machine program products that embody illustrative embodiments. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide an understanding of various embodiments of the inventive subject matter. It will be evident, however, to those skilled in the art that embodiments of the inventive subject matter may be practiced without these specific details. In general, well-known instruction instances, protocols, structures, and techniques have not been shown in detail.","Overview","In one example, a method for providing managerial access to a managed system is provided. In this method, a definition of a procedure to be performed on the managed system is received into a managing system. A request to perform the procedure is received into the managing system from a user of the managing system. The procedure is performed in response to the request. The performing of the procedure includes initiating a plurality of functions resident in the managed system. Results indicative of the performing of the procedure are presented to the user of the managing system.","In one example, a non-transitory machine-readable medium that stores instructions is provided. The instructions, when performed by a machine, cause the machine to perform operations. Such operations include receiving a definition of a procedure to be performed on a system to be managed by, and that is separate from, the managing system; receiving a request from a user of the managing system to perform the procedure; performing the procedure in response to the request, with the performing of the procedure including initiating a plurality of functions resident in the managed system; and presenting to the user results indicative of the performing of the procedure.","In one example, a computing device is provided. This computing device includes at least one processor and a memory in communication with the at least one processor. The memory is configured to store a system management module that is executable by the at least one processor. The system management module has instructions that when executed by the at least one processor, cause operations to be performed. Such operations include receiving a definition of a procedure to be performed on a system to be managed, wherein the managed system is separate from the computing device; receiving a request from a user of the computing device to perform the procedure; performing the procedure in response to the request, with the performing of the procedure including initiating a plurality of functions resident in the managed system; and presenting to the user of the computing device results indicative of the performing of the procedure.","In reference to the above embodiments, in one example, the definition of the procedure includes a text file, wherein the performing of the procedure includes interpreting the text file.","In another example, the performing of the procedure includes issuing a plurality of requests to the plurality of functions resident in the managing system.","In one example, at least one of the plurality of requests is initiated via a remote function call to one of an application programming interface and a user interface provided in the managed system. In another example, at least one of the plurality of functions returns to the managing system data requested via the at least one of the plurality of requests. In another example, at least one of the plurality of functions inserts into the managed system configuration data supplied via the at least one of the plurality of requests. In another example, at least one of the plurality of functions executes a task specified via the at least one of the plurality of requests.","In one example, the method or operations include receiving into the managing system directions from the user to alter the procedure to be performed on the managed system, wherein the performing of the procedure includes altering the procedure to be performed on the managed system according to the directions. In one example, the method or operations include, prior to the performing of the procedure, presenting a visual representation of the procedure to the user as a series of operational steps to be performed on the managing system, wherein the directions to alter the procedure includes directions to alter at least one of the operational steps of the procedure. In another example, at least one of the series of operational steps includes multiple activities, wherein the method or operations includes presenting to the user a status of at least one of the multiple activities.","In an example, the procedure may be a procedure to configure the managed system, a procedure to revise the managed system, a procedure to resolve a problem in the managed system and\/or a procedure to manage data located in the managed system.","In an example, the procedure is generated via a development interface provided on the managed system and transferred to the managing system. In another example, the generating of the procedure does not require a corresponding change to the managed system or to the managing system.","Description of Embodiments","The embodiments described herein provide various techniques for providing managerial access to a managed system. In one example, a definition of a procedure is received into a managing system. In response a request from a user of the managing system to perform the procedure, the managing system may perform the procedure by initiating a plurality of functions resident in the managed system. In at least some examples, by providing a separate managing system, operational control of the managed system may be updated or revised without changing the underlying software or other characteristics of the managed system. Other aspects of the embodiments discussed herein may be ascertained from the following detailed description.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 1","FIG. 1"],"b":["102","106","104","102","104","106","102","106","104","102","104","106","102","106","106","106","106","106","102"]},"In the example of , the managing system  includes a user interface , a management engine , local content storage , and a content importer . One or more of these components , , ,  may be considered collectively as a system management module or system. In one example, the user interface  provides any number of procedures, or \u201cscenarios,\u201d to exert managerial control over the managed system . Examples of these procedures include, but are not limited to, system configuration and customization, system problem resolution, and planned periodic tasks, such as periodic system checking and revision, and data management functions, such as data backup and restoration, and data archival. Further, some procedures may be performed on all managed systems , A while others may be generated for a specific managed system , or for managed systems , A operated by a particular customer or group of customers. The user interface  may be provided for the benefit of a service user or system administrator , who may be generally involved in, or responsible for, managerial control and maintenance of the managed system . An example of a graphical user interface, as presented to the user  via the user interface , is provided in  and described in greater detail below.","The management engine  of the managing system  executes the procedures requested to be performed by the user . In one example, the procedure may be performed with interaction by the user , or may be performed more automatically at some predetermined time at the choosing of the user . As is described more fully below in conjunction with , the user  may provide additional user input to direct or otherwise affect the execution of the procedures.","In one example, each of the procedures to be performed may be specified or defined by way of one or more text files, such as an Extensible Modeling Language (XML) file. Use of such a file may enhance the ability of a service developer  (depicted in ) to generate a number of procedures quickly, as well as simplify the execution of the procedures by the management engine , due to the use of a single documentation standard for each of the procedures. Following such a standard may also reduce the frequency of revision or upgrading of the management engine  or the content building blocks  in the managed system , especially when compared to the rate at which the procedures may be generated and deployed. Also, use of XML or other text or script file formats allows the management engine  to interpret the procedure as part of its execution without compiling or other significant pre-execution operations. However, other data formats aside from text data formats may be employed for the definitions of the procedures in other embodiments.","In the example of , the local content storage  stores the procedures that may be performed. In various embodiments, the local content storage  may include or be coupled with any volatile or non-volatile data storage device or system capable of storing the procedures, which the management engine  may retrieve from the local content storage  for execution. Volatile data storage devices may include, for example, static and dynamic random-access memory (RAM), while non-volatile storage devices may include, but are not limited to, flash memory, magnetic disk memory, and optical disk memory.","The content importer  retrieves the procedures from the service repository system  (described in greater detail below) and stores the procedures in the local content storage . In an example, the content importer  may include, or be associated with, a network interface, such as an interface for a local-area network (LAN), or for a wide-area network (WAN) (for example, the Internet), over which the procedures may be received from the service repository system . In one implementation, the content importer  may, from time to time, poll the service repository system  for procedures that may be performed on the managed system  coupled with the managing system . In some examples, the service repository system  may initiate a transfer to the managing system  of those procedures that are applicable to the managed system , or may transfer some indication to the managing system  that such a procedure is available for download into the local content storage .","As depicted in , the service repository system  includes global content storage  and a content definition portal . In an embodiment, the global content storage  may contain procedures (for example, data files defining the procedures) for multiple managing systems , each of which may operationally control one or more managed systems  involving any number of system customers or installations. In an implementation, the global content storage , which may include or be associated with one or more data storage devices or systems, may incorporate means by which the service repository system  may control which procedures are accessible by each managing system . In some examples, at least some of the procedures may be available to all managing systems .","In one example, by providing the procedures remotely from the service repository system , a software or system vendor, or a partner thereof, may provide remote access to multiple procedures or scenarios to a multitude of customers employing the managed systems  and managing systems . Such embodiments thus allow the vendor or partner to empower the user or administrator  of the customer to perform tasks or operations involving the managed system  that previously involved either onsite or contemporaneous remote participation of the vendor or partner. Moreover, by providing the procedures to the managing system , and hence the user , the user  may then learn from the procedures, or leverage the information provided therein, to generate new procedures that are not received from the service repository system .","In the service repository system , the content definition portal  provides an interface through which a service developer  may transfer, and possibly generate, the procedures to be stored in the global content storage . In one example, the content definition portal  provides a communication path through which previously generated procedures may be provided as input to the service repository system  for storage in the global content storage . In another example, the content definition portal  provides a type of user interface for the service developer  to generate and test procedures using either the intended target managed system  or a managed system  utilized by the service developer  primarily for testing purposes.","The system  to be managed by the managing system  may be any computer system and associated software provided for any business or technical user. Examples of the managed system  include, but are not limited to, database access and management systems, enterprise resource planning (ERP) systems, marketing systems, sales systems, manufacturing and\/or testing systems, engineering design and\/or development systems, scientific research systems, financial systems, and e-mail and other communications systems.","In the example of , the managed system  includes a user interface  for a primary user (not illustrated in ) to access and use the operational aspects of the managed system . For example, if the managed system  is a financial system, the primary user may employ the user interface  to generate and review financial reports of previous time periods, generate financial forecasts of upcoming time periods, and the like. The service user\/administrator  may also employ the user interface  for any number of purposes, including, for example, testing the managed system  from the perspective of a primary user after a procedure has been executed from the managing system .","Communicatively coupled to the user interface  of the managed system may be one or more execution agents . In an embodiment, the execution agents  receive requests to execute various operations or tasks, which the execution agents  perform using one or more content building blocks  stored on, or accessible by, the managed system . In one example, the execution agents  may receive these requests by way of function calls, request messages, or other methods of communication from the user interface  to, for example, change data stored in the managed system . The execution agents  may also return any results generated by the operations or tasks to the user interface  for presentation to the user.","In other examples, the execution agents  may execute tasks and operations requested by the management engine  of the managing system  in the performance of one or more procedures selected by the service user\/administrator , as well as return to the management engine  any data or responses resulting from the execution of the tasks or operations. In some examples, the execution agents  provide the same or similar functionality in response to communications received from content definition portal  of the service repository . For example, in generating or testing a procedure, the service developer  may employ the content definition portal  to send requests to the execution agents  to execute one or more desired tasks or operations in the managed system . As mentioned above, these requests may take the form of remote function calls, remote procedure calls, requests for web services, request messages, or other methods of communication between the managing system , the service repository system , and the managed system . In another embodiment, each of the execution agents  may be accessible via the user interface , the management engine , or both.","In an embodiment, execution agents  operate by exposing to the content definition portal  and the management engine  interfaces defined by the content building blocks . The content building blocks  may be, for example, software modules that perform specific tasks or operations as defined by an application programming interface (API) or user interface (UI) presented by the content blocks .","The APIs and\/or UIs provided by the content building blocks  may allow the management engine  and the content definition portal  to initiate any function, task, or operation defined by the APIs and\/or UIs. In one embodiment, the management engine  and the content definition portal  may issue one or more remote calls to an API or UI provided by one of the content building blocks  to initiate a function. One example of such a function may be a function to retrieve and return specific data maintained within the managed system , such as a data table size or specific entries of a data table. Another example may be a function to receive configuration data from the management engine  or the content definition portal , and insert the configuration data into an appropriate table or other data structure of the managed system . Yet another example of a function provided by a content building block  may be a function that manually executes one or more tasks. These functions may be employed in the management engine  of the managing system  to perform a particular procedure on the managed system  for maintenance, problem resolution, and other purposes.","To facilitate the generation of the content building blocks  and associated APIs and\/or UIs, the managed system may provide a content block development \u201cworkbench\u201d  or interface that provides the service developer  with one or more facilities or tools for generating and checking the building blocks , possibly under a single, unified interface or platform. Examples of such facilities may include, but are not limited to, tools providing software modeling and analysis, and API and\/or UI development, as well as code generation, verification, and maintenance. In one example, the development workbench  may be provided on a managed system  under the control of the service developer , such as a managed system  maintained by a system vendor or partner. In another example, the developer of the application may generate content building blocks  that the service developer  may use, thus allowing the application developer to provide such content without modifying the managed system . In this case, the development workbench  may allow the service developer  to discover and access content building blocks  in the managed system  so that the service developer  need not generate the content building blocks  in addition to the procedures or scenarios to be executed.","In at least some embodiments, by separating or componentizing the functions of the managing system  from the managed system , as described above, various services, such as system configuration, problem resolution, system maintenance, and the like, may be delivered to the administrator  or customer more frequently than what may be otherwise expected if such functionality were integrated or \u201chard-coded\u201d within the content building blocks  of the managed system . Further, by providing the functionality of the procedures to be performed separately from the modules of the managing system , neither the managing system  nor the managed system  need be modified in a corresponding manner to generate a wide range of procedures or scenarios in most cases.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 3"],"b":["200","106","200","102","200","202","102","128","112","204","122","102","206","124","102","166","106","164","208","122","102"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3","FIG. 1","FIG. 3"],"b":["300","300","112","122","102","300","112"]},"As shown, the GUI  presents a navigation menu  listing a number of procedures or scenarios that the user  may perform on a managed system . As mentioned above, each procedure may provide some service, such as system configuration, system maintenance, data archival, system monitoring, problem resolution, and the like. In the particular example of , the user  has selected the procedure \u201cBasic Configuration,\u201d which is highlighted in the navigation menu . Also, in this example, a title bar  displaying a name (\u201cSolution Manager\u201d) associated with the GUI  includes the name of the selected procedure. In one example, the procedures may be grouped into categories, with the categories being displayed in the navigation menu , so that when a user selects a category, a list of the procedures included in that category may then be displayed.","Also included in the GUI  is a roadmap window  displaying an ordered series of operational steps to be executed or performed in the procedure. As shown in , the Basic Configuration procedure includes at least seven steps, such as \u201cUser Data\u201d (Step ), \u201cLandscape Data\u201d (Step ), \u201cManual Configuration\u201d (Step ), and \u201cAutomatic Configuration\u201d (Step ). The roadmap window  also provides a \u201cprevious\u201d button and a \u201cnext\u201d button to allow the user  to navigate, and possibly alter, the steps of the procedure. The roadmap window  thus guides the user  through the steps of the selected procedure, as was intended by the service developer .","The GUI  also provides a help window  that may provide the user  with information regarding the procedure (in the example of , the Basic Configuration procedure). The help window  may present, for example, information concerning the expected results of the procedure, the various steps to be performed by the procedure, and the ways in which the user may alter the procedure or its constituent steps. Additional or different information may be provided in the help window  in other embodiments.","Also shown in  is an activities window  of the GUI . The activities window  may list a number of \u201cactivities\u201d or functions that constitute a particular operational step of the procedure (in the example of , the \u201cAutomatic Configuration\u201d step). In some examples, the user  may designate some of the activities as \u201cpostponed\u201d in the \u201cStatus\u201d column of the activities window  to postpone execution of those activities until a later time. This functionality may be restricted to some subset of the activities by the procedure definition. The Status column may also provide a status of the corresponding activity, such as, for example, \u201cPostponed,\u201d \u201cOK,\u201d \u201cWarning,\u201d \u201cSuccess,\u201d \u201cInformation,\u201d and \u201cError.\u201d In an example, some activities may be executed selectively by way of selecting specific activities, such as by way of the \u201cUpdate\u201d column, and then selecting the \u201cExecute Selected\u201d button presented in the activities window . As illustrated in , the activities window  may provide additional information in reference to each activity, such as a description of the activity, navigation information associated with the activity, and an execution status (for example, \u201cManual\u201d or \u201cExecute\u201d) of the activity. The status of each of the activities as shown in the activities window  may also be renewed via a \u201cRefresh\u201d button available to the user .","To present results generated from the execution of the procedure, the GUI  may also provide a log window . As depicted in , the log window  may present or display a number of messages generated by the managing system  in tabular form, along with an identity of the activity being performed at the time of the message, the type of message (for example, an \u201cerror\u201d message), a date and time at which the message was generated, and a user associated with the activity. While error messages are illustrated exclusively in , other types of messages, such as warnings or success indications, may be provided in other examples. In addition, the messages presented may include messages originally generated by the managed system  or another system within the scope of the procedure being executed.","The GUI  depicted in , as described above, as well as the managing system  presenting the GUI , may thus provide the service user\/administrator  with the ability to execute procedures that previously would have been executed under the direct control of a service developer  or other representative of a vendor or partner associated with managed system . As a result, the user\/administrator  may perform such procedures in a timely manner, while the service developer  is able to provide his services indirectly to a greater number of customers than what was previously possible.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":"400"},"The machine is capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. Further, while only a single machine is illustrated, the term \u201cmachine\u201d shall also be taken to include any collection of machines that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein.","The example of the processing system  includes a processor  (for example, a central processing unit (CPU), a graphics processing unit (GPU), or both), a main memory  (for example, random access memory), and static memory  (for example, static random-access memory), which communicate with each other via bus . The processing system  may further include video display unit  (for example, a plasma display, a liquid crystal display (LCD), or a cathode ray tube (CRT)). The processing system  also includes an alphanumeric input device  (for example, a keyboard), a user interface (UI) navigation device  (for example, a mouse), a disk drive unit , a signal generation device  (for example, a speaker), and a network interface device .","The disk drive unit  (a type of non-volatile memory storage) includes a machine-readable medium  on which is stored one or more sets of data structures and instructions  (for example, software) embodying or utilized by any one or more of the methodologies or functions described herein. The data structures and instructions  may also reside, completely or at least partially, within the main memory , the static memory , and\/or within the processor  during execution thereof by processing system , with the main memory  and processor  also constituting machine-readable, tangible media.","The data structures and instructions  may further be transmitted or received over a computer network  via network interface device  utilizing any one of a number of well-known transfer protocols (for example, HyperText Transfer Protocol (HTTP)).","Certain embodiments are described herein as including logic or a number of components, modules, or mechanisms. Modules may constitute either software modules (for example, code embodied on a machine-readable medium or in a transmission signal) or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments, one or more computer systems (for example, the processing system ) or one or more hardware modules of a computer system (for example, a processor  or a group of processors) may be configured by software (for example, an application or application portion) as a hardware module that operates to perform certain operations as described herein.","In various embodiments, a hardware module may be implemented mechanically or electronically. For example, a hardware module may include dedicated circuitry or logic that is permanently configured (for example, as a special-purpose processor, such as a field-programmable gate array (FPGA) or an application-specific integrated circuit (ASIC)) to perform certain operations. A hardware module may also include programmable logic or circuitry (for example, as encompassed within a general-purpose processor  or other programmable processor) that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (for example, configured by software) may be driven by cost and time considerations.","Accordingly, the term \u201chardware module\u201d should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (for example, hardwired) or temporarily configured (for example, programmed) to operate in a certain manner and\/or to perform certain operations described herein. Considering embodiments in which hardware modules are temporarily configured (for example, programmed), each of the hardware modules need not be configured or instantiated at any one instance in time. For example, where the hardware modules include a general-purpose processor  that is configured using software, the general-purpose processor  may be configured as respective different hardware modules at different times. Software may accordingly configure a processor , for example, to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.","Modules can provide information to, and receive information from, other modules. For example, the described modules may be regarded as being communicatively coupled. Where multiples of such hardware modules exist contemporaneously, communications may be achieved through signal transmissions (such as, for example, over appropriate circuits and buses) that connect the modules. In embodiments in which multiple modules are configured or instantiated at different times, communications between such modules may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple modules have access. For example, one module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further module may then, at a later time, access the memory device to retrieve and process the stored output. Modules may also initiate communications with input or output devices, and can operate on a resource (for example, a collection of information).","The various operations of example methods described herein may be performed, at least partially, by one or more processors  that are temporarily configured (for example, by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors  may constitute processor-implemented modules that operate to perform one or more operations or functions. The modules referred to herein may, in some example embodiments, include processor-implemented modules.","Similarly, the methods described herein may be at least partially processor-implemented. For example, at least some of the operations of a method may be performed by one or more processors  or processor-implemented modules. The performance of certain of the operations may be distributed among the one or more processors , not only residing within a single machine but deployed across a number of machines. In some example embodiments, the processors  may be located in a single location (for example, within a home environment, within an office environment, or as a server farm), while in other embodiments, the processors  may be distributed across a number of locations.","While the embodiments are described with reference to various implementations and exploitations, it will be understood that these embodiments are illustrative and that the scope of claims provided below is not limited to the embodiments described herein. In general, techniques for providing managerial access to a managed system may be implemented with facilities consistent with any hardware system or hardware systems defined herein. Many variations, modifications, additions, and improvements are possible.","Plural instances may be provided for components, operations, or structures described herein as a single instance. Finally, boundaries between various components, operations, and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the claims. In general, structures and functionality presented as separate components in the exemplary configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["The present disclosure is illustrated by way of example and not limitation in the figures of the accompanying drawings, in which like references indicate similar elements and in which:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
