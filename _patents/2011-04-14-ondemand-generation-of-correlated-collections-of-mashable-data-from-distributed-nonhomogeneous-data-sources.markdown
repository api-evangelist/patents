---
title: On-demand generation of correlated collections of mashable data from distributed, non-homogeneous data sources
abstract: Embodiments of the present invention provide a method, system and computer program product for the on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources. In an embodiment of the invention, a method for on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources is provided. The method includes receiving a request for a data feed from a widget in a mashup rendered in a content browser executing in memory of a computer. The method further includes inspecting a virtual database of data aggregated from different data sources over a computer communications network to locate data requisite to returning the data feed to the widget in the mashup. The method yet further includes querying the data of the virtual database to produce the data feed. Finally, the method includes returning the data feed in the format specified to the widget in the mashup.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09053184&OS=09053184&RS=09053184
owner: International Business Machines Corporation
number: 09053184
owner_city: Armonk
owner_country: US
publication_date: 20110414
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","The present invention relates to the field of content aggregation and more particularly to data feed management and utilization in content aggregation.","2. Description of Related Art","The advent of the Internet has given rise to new modes of computing unimaginable previously. Whereas personal computing prior to the widespread use of the Internet had been limited largely to the execution of computer programs in a single computing device, the advent of the Internet has enabled a multitude of different computing paradigms ranging from remote information gathering through the World Wide Web (the \u201cWeb\u201d) to hosted computing applications managed by service providers and accessible to remote users over the Internet. Consequently, substantial cost savings have been realized in deploying host computing applications utilizing Web page technologies.","Despite the cost savings afforded by Web page technologies formatted in the hypertext markup language (HTML), the static nature of basic Web site views to information will be recognized as overly restrictive given the ubiquitous nature of Internet access to information common today. Thus, the outmoded nature of static Web site access to information has resulted in the development of content aggregation technologies such as portal computing aggregating different portlet views in a single page. In portal computing, different static Web site views\u2014portlets\u2014can be selected for appearance in a single page\u2014the portal. User interface events received for one portlet in the portal are directed to the portlet, but a re-rendering of one portlet results in the update of the other portlets in the portal. Of import, while the flexibility afforded by portal technologies reflects a dramatic improvement over a singular static Web view of data, portal technologies still do not provide the flexibility requisite for true data analysis.","In this regard, lists remain the dominant mode of presenting data in a Web page. The data presented in the lists can either be static text extracted from a data store or generated dynamically by program code, or received through a \u201cfeed\u201d as it is well known in the art. Feeds provide some flexibility as feeds generally deliver data in extensible markup language (XML) format. Even still, the flexibility necessary to visualize data scenarios of even moderate complexity is not present in a general list or feed. In fact, to present in a Web page a data set of one viewpoint that differs from a contemporaneously viewed data set of a different viewpoint requires a new retrieval of the desired data set from the data source. For applications that require multiple variations of the same basic data, an undesirably large number of requests to the original data source can result in performance degradation of an entire system.","To alleviate the undesirable strain on network resources resulting from repeated requests to retrieve different data sets to visualize different viewpoints of data, some designs call for a generic, encompassing query to retrieve a larger than necessary data set. Only subsequently, a filter can be applied to the encompassing data set to reduce the data to a desired viewpoint. However, performing strategic filtering on a retrieved data set presents compatibility problems in a mashup environment. In web development, a mashup is a web page or application that uses and combines data, presentation or functionality from two or more sources to create new services. Of note, to the extent the mashup environment is a performance critical environment, data set filtering can be undesirable and incompatible with the inherent interactivity associated with the mashup environment.","Embodiments of the present invention address deficiencies of the art in respect to the retrieval, correlation and visualization of data in a mashup environment and provide a novel and non-obvious method, system and computer program product for the on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources. In an embodiment of the invention, a method for on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources is provided. The method includes receiving a request for data with specified filters and data format from a widget in a mashup rendered in a content browser executing in memory of a computer. The method further includes inspecting a virtual database of data aggregated from different data sources over a computer communications network to locate data requisite to returning the data feed to the widget in the mashup. The method yet further includes querying the data of the virtual database to produce the data feed. Finally, the method includes returning the data feed to the widget in the mashup.","In another embodiment of the invention, a content aggregation data processing system is configured for on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources. The system includes a host server with at least one processor and memory and configured for communicative coupling to different data sources and also to different computers over a computer communications network. Each of the computers includes a content browser rendering a mashup of widgets. The system additionally, includes a virtual database disposed in the memory of the host server and providing an application programming interface (API) supporting query operations against data stored in the virtual database. Finally, the system includes a correlation engine executing in the memory of the host server and coupled to the virtual database. The correlation engine includes program code that when executed by the host server retrieves data requisite to respond to a data feed request from a widget in a mashup from at least one of the data sources, and stores the retrieved data in the virtual database for querying through the API by a feed generator for the widget in the mashup.","Additional aspects of the invention will be set forth in part in the description which follows, and in part will be obvious from the description, or may be learned by practice of the invention. The aspects of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention, as claimed.","Embodiments of the invention provide for on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources. In accordance with an embodiment of the invention, a request for data can be received from a widget in a mashup rendered in a content browser executing in a computer. In response to the request, a virtual database of previously generated data for the mashup can be inspected in an attempt to locate the requested data. To the extent the data cannot be located in the virtual database, a correlation engine can be directed to retrieve the data from one or more data sources disposed across a computer communications network into the virtual database.","Subsequently, a query to satisfy the request for the data can be constructed and executed against the virtual database by a feed generator. The query may include parameters that indicate how the content should be filtered and the format in which the result should be delivered. The result of the query can be formatted according to a specified output format and returned to the widget. The generator may choose to cache the result of the query to further improve response performance. Subsequent requests for data can be satisfied against the virtual database by one or more feed generators by constructing a suitable query for the request and executing the query against the virtual database. In this way, different queries providing different views of the data in the virtual database can be performed and streamed into the mashup without requiring the repetitive and inefficient repeated generation of data requests to the data sources across the computer communications network.","In further illustration,  is a pictorial illustration of a process for on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources. As shown in , different mashups  in different content browsers of different computers can issues data requests  to a corresponding feed generator . The feed generator  in turn can look up the requested data specified in the data request  in a virtual database  of previously aggregated data. In this regard, the virtual database  can range from a relational database to a data structure stored in memory subject to the caveat that in any circumstance, an API can be provided for the virtual database  through which different queries can be executed against data in the virtual database  to produce a requested result set.","In any event, if the requested data cannot be located in the virtual database , a correlation engine  can retrieve the requested data from one or more data sources  and the correlation engine  thereafter can place the retrieved data into the virtual database . Subsequently, the feed generator  can issue a query  against the virtual database  to retrieve the data of the request . Finally, the feed generator  can generate a particularly formatted result set  for return and rendering in the mashup . For instance, the formatted result set  can be formatted in a particular markup language such as SVG, HTML or XML.","The process described in  can be implemented in a content aggregation data processing system. In yet further illustration,  schematically shows a content aggregation data processing system configured for on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources. The system can include a host server  with at least one processor and memory configured for communicative coupling to multiple different computers  over a computer communications network . The host server  can support the operation of a content server  serving content in the form of a mashup  to different content browsers in the computers . As it is well known in the art, a mashup  is a Web page or application that combines data or functionality from two or more external sources, including data sources  to create a new service.","As shown in , multiple different feed generators  can be coupled to the host server  and configured to respond to data requests from the different mashups  by returning requested data feeds to corresponding requesting ones of the mashups , for example through really simple syndication (RSS) feed or representational state transfer (REST) technologies. Of note, a correlation engine  also can be coupled to the host server . The correlation engine  can be a programmatic module of computer readable program code that when executed by the host server , responds to an initial request for a data feed from a feed generator  amongst the feed generators  by retrieving the requested data from one or more of the data sources .","The resulting data can be placed into a virtual database  providing an API exposing different querying services to the feed generators  in order to support different queryable views of the data. In this way, for subsequent requests by any of the feed generators  for different views of the data, the data need not be retrieved from the data sources  again. Rather, the data already present in the virtual database  can be aggregated and filtered by a specific query to return a desired data feed in a desired format for aggregation into a consuming one of the mashups . Optionally, the desired data feed further can be placed into a cache  for even more efficient retrieval upon subsequent request by the feed generators .","In even yet further illustration of the operation of the content aggregation data processing system,  is a flow chart illustrating a process for on-demand generation of correlated collections of mashable data from distributed, heterogeneous data sources. Beginning in block , a data request can be received from a widget in a mashup for data in a particular format, such as a format compliant with a specific markup language. In block , the virtual database can be inspected to determine in decision block  whether or not the requested data is already present and accessible in the virtual database. If not, in block  the data requisite to the request can be retrieved from one or more data sources and placed into the virtual database. Subsequently, the data can be located upon a new inspection of the virtual database in block  and in block , the query results can be received from the virtual database to produce the requested data feed. In block , the resultant data feed can be formatted according to the initial request and in block , the formatted data feed can be returned to the mashup.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, radiofrequency, and the like, or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language and conventional procedural programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention have been described above with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. In this regard, the flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. For instance, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","It also will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks. The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","Finally, the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute part of this specification, illustrate embodiments of the invention and together with the description, serve to explain the principles of the invention. The embodiments illustrated herein are presently preferred, it being understood, however, that the invention is not limited to the precise arrangements and instrumentalities shown, wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
