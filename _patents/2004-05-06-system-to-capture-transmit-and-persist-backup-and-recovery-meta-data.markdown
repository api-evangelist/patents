---
title: System to capture, transmit and persist backup and recovery meta data
abstract: A system to capture, transmit and persist backup and recovery meta data over a network (). An agent () captures the meta data at a computerized backup management system (). The agent transmits the meta data from the backup management system to a storage console portal system (). And the computerized console portal system includes a database () to store the meta data, thereby capturing, transmitting and persisting the meta data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07558927&OS=07558927&RS=07558927
owner: Aptare, Inc.
number: 07558927
owner_city: Campbell
owner_country: US
publication_date: 20040506
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","DISCLOSURE OF INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION","INDUSTRIAL APPLICABILITY"],"p":["The invention relates generally to systems and methods for maintaining enterprise data object integrity across distributed storage networks by the use of backup and restoration process, and more particularly to managing such processes and providing meta data about such data objects and processes.","Modern enterprises, including corporations, public agencies, and other entities, use sophisticated networks of computers and other digital devices. Some of these function as servers to other devices on the network. Such servers typically store data, programs, documents, media content, and other information, which are collectively termed herein \u201cdata\u201d.","Data stored on servers is at risk of being damaged or destroyed by a wide range of hardware problems, software problems, user errors, or malicious activities. Thus, most enterprises make frequent backup copies of the data stored on servers.","When managing a backup system that maintains backup copies of the data stored within an enterprise, there is a need to present the current status of the backup system in a clear and concise manner to those individuals, such as system administrators, who are responsible for the system. Such presentation of status information is often complicated by the fact that medium or large enterprises often have multiple backup servers, also known as backup management servers (BMSs). Each BMS backs up the data on the servers within the enterprise that are client servers of that backup server.","Another need when managing a backup system is to store information about the data that is backed up, that is, to store meta data, in a manner that does not consume excessive storage space. The meta data typically includes data about backup operations or events that have occurred. The meta data stored may include individual file by file meta data or file details, including the meta data for each backup copy of each file that is stored in each backup management system.","There is also a need to store the meta data in a manner that allows efficient retrieval of every backup and restore event for a particular file, or set of files, that occurred during a particular time period.","Yet another need when managing a backup system is to transfer the meta data across a network to a meta-data server. This transfer should be done in a manner that does not consume excessive network bandwidth. Further, this transfer should be done in a manner that does not compromise the security of the backup servers, which are extremely sensitive because they store all or most of the data that the enterprise stores electronically. Further, this transfer should be done in a manner that does not compromise the security of the meta data that is being transferred, which is also extremely sensitive because it describes the data that the enterprise stores electronically.","There is also a need to reduce the footprint that the process of gathering and storing the meta data has on the resources of the backup management servers, that is, to reduce the impact on the resources of the backup management servers that are consumed in the process of gathering and storing the meta data. These resources include, among others, processor bandwidth, memory allocation, memory bandwidth, storage allocation and storage bandwidth.","Another need when managing a backup system is to recover automatically from problems or exceptions. Exceptions occur when the process of gathering and storing the meta data does not function in a normal or expected manner. Typical causes of exceptions in backup management systems include, but are not limited to: an unstable or unreliable network connection between components of a BMS; a network proxy server that is down or not functioning properly; a network that is saturated by excessive traffic, such as may be caused by malicious activity or viruses, or by reallocating network traffic that is usually handled by a network component that is currently inoperable or down; a network portal server that is down or not functioning properly; or a meta data server that is down.","There is also a need to automatically add and set up or provision a client server after it has been newly added to the enterprise's network. A large enterprise may have 10,000 or more client servers. In such an enterprise, adding new client servers and restructuring or reallocating existing ones may occur on an almost daily basis.","Accordingly, it is an object of the present invention to provide a system to capture, transmit and persist backup and recovery meta data.","Briefly, one preferred embodiment of the present invention is a system to capture, transmit and persist backup and recovery meta data over a network. An agent captures the meta data at a computerized backup management system. The agent then transmits the meta data from the backup management system to a computerized storage console portal system. And the console portal system includes a database to store the meta data, thereby capturing, transmitting and persisting the meta data.","The other objects and advantages of the present invention will become clear to those skilled in the art in view of the description of the best presently known mode of carrying out the invention and the industrial applicability of the preferred embodiment as described herein and as illustrated in the several figures of the drawings.","In the various figures of the drawings, like references are used to denote like or similar elements or steps.","The descriptions and discussions herein illustrate technologies related to the invention, show examples of the invention and give examples of using the invention. Known methods, procedures, systems, circuits, or elements may be described without giving details so as to avoid obscuring the principles of the invention. On the other hand, details of specific embodiments of the invention are described, even though such details may not apply to other embodiments of the invention.","Some descriptions and discussions herein use abstract or general terms including but not limited to agent, demon, symbol, number, byte, communicate, object, procedure, and block. Those skilled in the art use such terms as a convenient nomenclature for components, data or operations within a computer, digital device or electromechanical system. Such components, data and operations are represented by physical properties of actual objects including but not limited to electronic voltage, magnetic field and optical reflectivity. Similarly, perceptive or mental terms including but not limited to detect, sense, recall, present, test, compare, control, process, manipulate, analyze, and determine may also refer to such components, data or operations or to manipulations of such physical properties.","One preferred embodiment of the present invention is a system to capture, transmit and persist backup and recovery meta data. To simplify the following discussion we generally show the invention in the context of a global backup system (GBS). As illustrated in the various drawings herein, and particularly in the view of , the GBS  is depicted by the general reference character .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 1-2","FIG. 1","FIG. 2"],"b":["10","12","10","14","10","12","14","16"]},"Turning now to , it shows how client servers , backup management servers (BMS ), an administrator system , and optional additional network devices  communicate via the I-net . For reference, the respective client servers  are client servers -and the BMS  are BMS -Some examples of common additional network devices  include routers, bridges, and firewalls.","There may by thousands of client servers  and BMSs  present in a typical enterprise using the GBS , and the necessarily simplified embodiments shown in the figures herein should not be interpreted restrictively. For example, two enterprises that use present commercial embodiments of the GBS  for their complex network-backup needs are the United States Patent and Trademark Office (USPTO) and Bank of America Corporation (BOA). The USPTO is relatively concentrated geographically, whereas, BOA offices are widely distributed all over the world.","Backup copies of data at the client servers -is backed up by BMS and backup copies of data at the client servers -are backed up by BMS . Typically, such backups are done on a regular schedule, such as a full copy of all files being made starting at midnight of each working day. Another common schedule is for a full copy of all files to be made weekly or monthly, with incremental daily backups. In an incremental backup, copies are made of only those files that have changed since the last backup\u2014sometimes since the last full backup, sometimes since the last incremental backup.","The BMSs  communicate meta data and other backup information to the SCS , or to other servers that store this information, in sessions conducted according to the well-known hyper-text transport protocol (HTTP) or the much more secure HTTPS protocol. Generally, all such sessions will be initiated by the respective BMSs . This is not a necessary requirement of the GBS , however, but rather a matter of prudent network management for security purposes.","Some form of a network connection is typically used to convey information between the BMSs  and the SCS . In some cases, the SCS  is located within an enterprise itself and this communication can occur exclusively over the enterprise's intranet. In other cases, the SCS  is located elsewhere and communication occurs over the public Internet. The I-net  generically represents these network connections.","Turning now to , the SCS  includes more optional network devices , StorageConsole web servers (SC portal servers ), optional internal firewalls , and StorageConsole database servers (SC database servers ). For reference, the respective SC portal servers  are SC portal servers -and the SC database servers  are SC database servers -","In some embodiments of the invention, any BMS  may access any of the SC portal servers ; any SC portal server  may access any of the SC database servers ; and the meta data and other backup information associated with a particular BMS  may be stored on any one of the SC database servers  or such information may be replicated on more than one of the SC database servers -so that there is a fallback to help ensure reliability of the GBS .","Typically the SC portal servers  are coupled to the I-net  via one or more instances of the optional network devices  (e.g., routers, switches, or firewalls), however, this is optional. The SC portal servers  may be coupled via conventional network equipment to the SC database servers , or via the optional internal firewalls  for added security. Here as well, multiple instances of similar or identical equipment may be used to have a fallback device available in case of problems, or may be used for balancing network traffic. The optional network devices  and internal firewalls  and the use of the HTTPS protocol may be less important for communication over a small, private and trusted intranet than for communication that uses the vast, public and interception-prone Internet.","A SC portal server  may run on a machine that is separate from the SC database server  or both may run on the same machine. If two different machines are used, then one or more of the optional internal firewalls  may be used between the machines to increase security. Firewalls are known in the art that can be configured to allow proper database access commands and responses to pass through, but block other messages.","In some embodiments, all communication between the software used and the SC portal server  occur via the Java data base connectivity protocol (JDBC). In such embodiments, the internal firewalls  can monitor this traffic to ensure that all messages are legal JDBC commands and responses.","With reference briefly also to , users access the GBS  via a user or system administrator computer (an administrator system ) that is coupled to the I-net . In  the administrator system  shown is within the enterprise network , but this is not a requirement, and one or more administrator systems  can be within the enterprise network , within the SCS , or otherwise coupled to the I-net . A user may be an ordinary or individual user, who accesses the GBS  to request that one of his or her files be restored from backup storage. Such a user may also be a system administrator who is responsible for managing backup system in one or more enterprise networks  or for managing all or part of the GBS .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 3","b":["10","20","22","22","30"],"i":["a","b "]},"Backup events occur periodically. In a backup event, client backup software  running on a particular client server -sends data and meta data to backup server software  that runs on an associated BMS . Restore events occur on an occasional or as needed basis. In a restore event, data is sent from the backup server software  of a BMS  back to the client backup software  of one of the client servers -served by that BMS . As cannot be overstressed, in a typical large enterprise there may be thousands of client servers  and BMSs  present. The backup scenario just described can take place thousands of times per day and the restore scenario just described can take place tens or hundreds of times per day.","Various embodiments of the invention may be used in conjunction with various client backup software  and backup server software . Such software includes but is not limited to: the NetBackup products from VERITAS Software Corporation of Mountain View, Calif.; the LEGATO NetWorker products from LEGATO Systems, Inc. of Mountain View, Calif.; and the Tivoli Storage Manager products from IBM Corporation.","Typically the data transfer between the client backup software  and backup server software  occurs via an enterprise intranet such as a local area network (LAN), but wide area networks (WANs), storage area networks (SANs), or other communication channels may also be used.","The backup server software  on each BMS  receives the backup data and the backup meta data and sends the restore data. Typically, the meta data for each backup and restore event is stored in a catalog that is held on a disk drive  within the BMS . Typically, the backup data is stored on one or more storage units , which may include but are not limited to disk drives, tape drives, or \u201cjuke boxes\u201d. A juke box holds a library of tapes or other digital media and allows each to be individually selected, automatically positioned to be active, and then read, written or both.","The backup server software  interacts with the GBS  by providing backup statistics and meta data to a StorageConsole agent (SC agent ) and by receiving restore requests from the SC agent . The SC agent  is the software component of the GBS  that runs on the BMS. As discussed in detail presently, the SC agent  in the inventors presently preferred embodiment is implemented as three software components that run largely independently.","The backup statistics that are communicated to and stored by the SC database server  may include, but are not limited to one or more of: the current inventory of media (tapes or other) held within a BMS ; the current inventory of storage units  (tape drives, disk drives, jukeboxes, or other) that are part of a BMS ; the current utilization of the media held within a BMS ; or current utilization of the storage units  within a BMS .","The SC agents  communicate with the SC portal server  via initiating HTTP or HTTPS sessions with a StorageConsole web portal (SC web portal ). These sessions occur over the I-net .","Because the communications occur via sessions that use the well-known and commonly used HTTP or HTTPS protocols, no changes are required in routers, bridges, firewalls, etc. (e.g., the optional network devices  shown in ) or in other security policies when the SC agents  are installed on BMSs . This substantially simplifies installation, both the technical process of installing the SC agents  and the managerial or information technology department of obtaining approval for installation of the GBS .","Further because communications occur via sessions that use the stateless HTTP or HTTPS protocols, embodiments of the invention employing these protocols can have no communication socket or channel open during or after communication. An open socket that has already been authenticated, verified and allowed access is a major point of vulnerability in the security of a network.","In the inter-process communication scheme depicted in , the BMS  becomes a client of the SC portal server  by initiating a communication session. But preferably never visa versa. That is, as a strong security practice, the SC portal server  need never initiate any communication with a BMS . Because the BMS  need never responds to a communication session that an external device is attempting to initiate, there is no way that a curious person, a deliberate hacker or any kind of impostor can use such a communication path to compromise the security of the BMS . This security feature is very advantageous for enterprises that use the public Internet to communicate their meta data to SC portal server .","Nevertheless, this security feature is also advantageous for enterprises that use a private intranet for such communication, in that the feature prevents a user with authorized access to a portion of the enterprise's servers or networks from using the meta-data communication path to illegitimately access other portions of the enterprise's data. Few users, if any, have access to all of the data on all servers of an enterprise.","The SC agents  send meta data for each backup event, meta data for each restore event, and backup statistics to the SC web portal . Also, the SC agents  periodically poll the SC web portal  to see if any restore operations have been requested for the BMS . If so, they receive the details of what file or files are to be restored from what backup event.","The SC agents  may be software that is written in the Java\u2122 programming language. Such SC agents  are then more easily ported to BMSs  using different operating systems and different processors than SC agents  that are written in the C or the C++ programming languages.","In some embodiments of the invention, the Java cryptography extension (JCE), the Java authentication and authorization service (JAAS) or both may be used to implement some of the security, authentication and encryption features of the GBS .","In some embodiments of the GBS , the Java code that is used in the SC agents  is transformed by a process that obfuscates the code, that optimizes the code, or both. Such processes include, but are not limited to those of: the DashO products from Preemptive Solutions, Inc. of Cleveland, Ohio; or the Jshrink product from Eastridge Technology of Princeton, N.J.","The SC web portal  is the access point by means of which the SC agents  that run on a BMS  access the SCS . The SC web portal  is also an access point by means of which system administrators, ordinary users, or both may access the SC portal server .","In embodiments of the invention in which the HTTPS protocol is used, unauthorized access to the SC web portal  is prevented, or at least made very improbable, by the security of HTTPS. HTTPS is based on the use of a secure sockets layer (SSL) and on public-key encryption. Some embodiments of this protocol use 128-bit encryption, which makes decrypting of an intercepted message unlikely using any presently known technique.","Some embodiments of the GBS  obtain the public key used for this encryption from a digital certificate that authenticates the recipient of a message. A digital certificate is issued, encrypted and signed by a trusted third party. Digital certificates make it highly unlikely that an unauthorized imposture can appear either to the SCS  or to one of the BMSs  to be the other party in their communication channel.","In addition to or instead of using the HTTPS protocol or server certificates, some embodiments of the GBS  use a \u201cmagic key\u201d to authenticate the identity of each BMS  prior to granting any access to the SCS . The magic key is an encoded form of one or more information tokens. At least one of the information tokens used has a unique value for each BMS .","Information tokens used to form the magic key may include, but are not limited to: the name of the BMS ; the network or internet protocol (IP) address of the BMS ; the name of a server group that includes the BMS ; a password that is manually entered into both the SC agent  and the SC portal server  when a BMS  is first provisioned; or system identification codes such as serial numbers or device identifiers that are embedded in the hardware or the low-level software of the BMS  (e.g., a MAC address).","Various other embodiments of the GBS  use other security precautions and procedures. These may include not allowing a user to access the SC web portal  until after successful completion of a password protected login procedure. As another example, the SC portal server  may include software \u201ctrip wires\u201d to detect attempts at unauthorized access.","In the SC database server , StorageConsole software (SC software ) maintains a SC database  of the backup and restore meta data, the backup statistics and other relevant backup information. In various embodiments of the GBS , this SC database  may be: Java data structures; a relational database; a database implemented using the DB2 Universal Database from IBM Corporation; a database implemented using the Oracle9i Database from Oracle Corporation of Redwood City, Calif.; or a database implemented using the SQL Server from Microsoft Corporation.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 4","b":["10","14","60","62","64","52","50","62","60"]},"When the HTTPS protocol is used, the web browser  initiates or handles the authentication, digital certificate and public key encryption involved, typically with little or no involvement of the user .","The user  may initiate a status request and in response receive the appropriate backup meta data from the SCS . The request may be for backup events that include a specific file, files included in a specific backup event, or summary status information including but not limited to a report such as is described with respect to , presently. The user  may also initiate a restore request that a specific file or files be restored to a client server  from a copy made during a specific backup event.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 5","b":["70","10","70","72","74","76"]},"The file table  contains one row for each file that is backed up within an enterprise. The information or data fields within each row may differ in various embodiments of the GBS . However, a typical set of fields for the file table  includes:\n\n","The backup table  contains one row for each backup event that is stored within the enterprise's BMSs . The information or data fields within each row may differ in various embodiments of the GBS . However, a typical set of fields for the backup table  includes:\n\n","The link table  contains one row for each time that a particular file has been backed up. The information or data fields within each row may differ in various embodiments of the GBS . However, a typical set of fields for the link table includes:\n\n","The ability to use the schema , or a suitable equivalent, is a particularly advantageous feature of the present invention. In a typical enterprise the amount of meta data may be simply staggering. Consider Bank of America Corporation, for instance. It has currently has, roughly, fifteen thousand (15,000) BMSs  that perform backup jobs at least monthly or weekly, and more typically daily and even more frequently. The quantity of meta data produced each day alone easily amounts to terabytes, and it needs to be persisted day after day, for months and possibly longer. Providing a database able to store such voluminous data is not a trivial task, and getting any practical utility out of it would be near impossible. Even backing up the backup\/restore meta data in such a hypothetical case would be difficult.","What the inventors have appreciated, however, is that vast amounts of the meta not change frequently, if ever. First, files are rarely added or deleted (even considering renaming and deleting files as forms of this). Their \u201cowners\u201d (in operating system access control lists) and identifying characteristics for their client servers  and responsible BMSs  also rarely change. As one simple other example of redundancy, consider at a listing of names with paths for files in a deeply nested folder structure. All the path information is redundant, yet has to be persisted in some manner. Accordingly, selectively collecting the meta data at the file details level, vetting it, and then storing it in the tables in the schema  can facilitate matters considerably.","The GBS  permits selectively collecting file details by setting a flag, described in detail elsewhere herein. In many cases administrators and other users will not want file details, as contrasted with success\/fail information, backup infrastructure change information (e.g., additions and deletion of client server  or storage device  changes), and backup policy changes.","It might on initial consideration seem that stripping our redundancy and otherwise manipulating the meta data can be performed at the enterprise network , but that often merits deeper consideration. Burdening the SMSs  is usually undesirable, and might even interfere with backup and restore operations. And while conserving communication bandwidth is usually a good practice, many enterprises have excess high-speed bandwidth available, particularly at off hours. The GBS  can therefore be implemented to stream minimally manipulated meta data to the SCS , thus off loading much of the meta data burden from the enterprise network . The SCS  can manipulated meta data as desired, and can particularly be optimized for this.","The schema  then reduces the overall storage burden at the SCS . The file table  has entries for each file; the backup table  has entries for each backup, and the link table  has linking these. Thus, as a very simple and simplified example, a file table  might have entries for 100 files with the backup table  having entries for 90 daily backups of these files. The link table  would then have 9,000 entries. The inventors have found that the schema  often permits storing the meta data in 10% or less storage that would otherwise be required.",{"@attributes":{"id":"p-0082","num":"0097"},"figref":"FIG. 6","b":["80","10","80","1","22","2","5","2","5","3","4","3","4"]},"The next to last row of the MCR  here shows the aggregate backup status of a server number N. And the last row shows an aggregate backup status of all the servers and domains included in this MCR .","The first column of the MCR  shows the aggregate backup status during a custom time interval. The custom time interval may be configured to be, as one example among many, the time interval that started four weeks ago and ended two weeks ago. The second column shows the aggregate backup status during the time interval from two weeks ago to one week ago. The next seven columns show the aggregate backup status during the time intervals that correspond to the last seven days. And the last column shows the aggregate backup status of all time intervals included in this MCR .","Within each row and column the appropriate aggregate backup status is shown. The status categories used, as well as the icons used to represent the status categories differ among various embodiments of the invention. However, a typical set of aggregate status icons includes:\n\n",{"@attributes":{"id":"p-0086","num":"0106"},"figref":"FIG. 7","b":["100","10","100","42","22","52","14","48","22","16"]},"In a step , the process  starts.","In a step , the SC agent  obtains, from the data stream generated by the backup server software , the summary meta data for backup or restore event, or the backup statistics that are to be sent to and held in the SC database .","In a step , this data stream is then parsed into fields of meta data or backup statistics.","In a step , the fields that are relevant to the GBS  are entered into one or more data structures, which may be but are not limited to Java objects.","In a step , authentication information, such as a magic key and the objects or data structures representing the relevant fields are serialized and compressed. This compressed serial stream is then sent over the I-net  using the HTTP or HTTPS protocol to the SC web portal  that is running at the SCS . This transfer process is complete as soon as a message from the SC software  is received by the SC agent  that the information was successfully received.","And in a step  the process  is done.",{"@attributes":{"id":"p-0093","num":"0113"},"figref":"FIG. 8","b":["200","10","200","42","22","52","14","48","22","16"]},"In a step , the process  starts.","In a step , the SC agent  obtains from a data stream generated by the backup server software  the meta data for a batch of files that were involved in the backup or restore event. The number of files processed in a batch, that is the number processed at one time, is configurable, but several thousand files per batch may be a typical value. Upon successful receipt of each batch of meta data, the SC software  sends back to the SC agent  an acknowledgement message. Thus, the size selected for the batches of files may impact the process of automatically recovering from an exception.","In a step , this data stream is then parsed into fields of meta data.","In a step , the fields that are relevant to the GBS  are entered into one or more data structures, including but not limited to Java objects. Each file may be represented as one instance of the Java object or data structure.","In a step , the magic key and the objects or data structures representing the relevant meta data for the batch of files are then serialized and compressed. The compressed, serial stream is sent via the HTTP or HTTPS protocol to the SC web portal  that at the SCS .","In a step , a determination is made if there are more files in the backup or restore event. This process  is complete as soon as a message from the SC software  is received by the SC agent  that the information was successfully received, and in a step  the process  is done. Otherwise, the process  continues at step  by looping back to get the meta data for another batch of files as soon as such an acknowledgement is received.","The SC agents  may be implemented to be \u201clight weight\u201d or to have a small \u201cfootprint\u201d so that they do not consume much of the resources of the BMS  on which they run.","The portion of the SC agents  handling file details can consume substantial resources of the BMS  on which it runs, depending on the number of files for which details must be gathered and transferred to the SCS . However, the impact of this is substantially reduced in the GBS  by having this portion of the SC agent  only execute when a backup or restore event terminates, and not when a polling or request message is received from the SC portal server . Such a SC portal server  initiated or server pull communication scheme could interrupt the BMS  while a backup or restore event is running, at which time the resources of the BMS  are heavily utilized and the backup or restore meta data of interest may be incomplete or unavailable.","Preferably, none of the SC agents  store data on the BMS  on which they run. Of course, the SC agent  must itself be stored and information must be maintained while an invocation of it is active, up until an acknowledgement is received of successful communication with the SCS . Having the SC agent  store any data on the BMS  could result in the BMS  running out of storage capacity, which could cause performance problems or even cause the BMS  to malfunction or crash.","There is a substantial contrast between the footprint of the SC agents  on the BMSs  on which they run and the footprint of the client backup software  on the client server  on which it runs. Backup events are typically scheduled when users are at home or not working because much of the disk access bandwidth available on a client server  is consumed by a backup event.",{"@attributes":{"id":"p-0104","num":"0124"},"figref":"FIG. 9","b":["300","10","300","48","22","52","14"]},"As discussed above, the normal communication channel between the SC agent  and the SCS  is for the SC agent  to initiate an HTTP or HTTPS session with the SC portal server . The SC agent  sends to the SC portal server  the appropriate meta data or other information, or sends the file details meta data for a batch of the files that are involved in a backup or restore event. Then, the communication stays active within the SC agent  until it receives back from the SC portal server  a normal acknowledgement message, or an ACK. Typically, the acknowledgement message received is an ACK, indicating that the data has been successfully received and interpreted.","However, various other acknowledgement messages may also be sent from the SCS , depending on the information that was sent and on whether it was completely and correctly received. An acknowledgement message may request that the information be resent because it was only partly received or contained errors. An acknowledgement message may request that additional information be sent, as is the case when a newly installed client server  is backed up for the first time. It is also possible that no acknowledgement message is received, perhaps because the information sent was not received or was received sufficiently garbled form that the SCS  could not correctly identify the sender of the information.","When an ACK is not received or when a resend acknowledgement message is received, the operation of sending the information is then repeated, according to a retry interval and maximum count or according to a schedule of when the communication is to be retried. For example, a retry schedule may call for the first retry to be immediate, and then each subsequent retry to occur after a time interval has elapsed that is longer than the previous time interval. If an ACK is received in response to a retry, then the communication is successful and the process  terminates.","When an ACK is not received within the retry limit or maximum retry count, then the SC agent  escalates the exception and attempts to send the information via a secondary fallback communication channel. If an ACK is received in response, then the communication is successful and the process  terminates.","When an ACK is not received within the retry limit set for this channel, then the GBS  may escalate the situation to using a third-level, or even higher-level, communication channel. If an ACK is received in response, then the communication is successful and the process  terminates.","Various fallback communication channels are used in various embodiments of the GBS , including but not limited to: using an alternative uniform resource locator (URL) or IP address for the SC portal server ; addressing a fallback SC portal server ; or sending the information using a protocol that is not HTTP or HTTPS but is equally secure, non-intrusive and light weight, such as the simple mail transfer protocol (SMTP).","When an ACK is not received within the retry limit or maximum count of the highest-level communication channel, the SC agent  then again escalates the exception. The SC agent  sends an e-mail message describing the exception to one or more designated individual or generic e-mail addresses, such as \u201csys-admin,\u201d \u201ccustomer-exception-report@StorageConsole.com,\u201d or \u201cbackup-system-sustainment@my-enterprise.com.\u201d",{"@attributes":{"id":"p-0112","num":"0132"},"figref":"FIG. 10","b":["400","20","10","52","14","20"]},"The SC software  detects that a client server  has been newly added when a SC agent  sends backup or restore meta data pertaining to files stored on that BMS . When meta data is received, the client server  involved is used as a lookup key in the meta data database. Typically, the client server  is found in the database, in which case the newly received meta data is added to the SC database .","When the client server  is not found in the database, then the SC software  sends back to the SC agent  a request for basic information about the client server . This request is sent along with, and is part of, the acknowledgement message sent in response to receiving the meta data.","In various embodiments of the GBS , the basic information may include, but is not limited to, one or more of the following: the name of the new client server ; the IP address of the new client server ; the make of the new client server , e.g. Sun Microsystems, Dell Computer Corporation, or the like; and the model of the new client server , e.g. Sun Fire V1280, PowerVault 725N, or the like. None of this information need be manually entered into the GBS .","When the basic information about the newly added client server  is received by the SC software  from the SC agent , then the client server  is added to the SC database .","The GBS  uses a number of configuration settings that can be altered on a system by system basis at the client server . These include, but are not limited to: whether or not file details are entered into the SC database  for each backup and restore event; what individuals can log into the SC web portal  and access the meta data or other information about the new client server ; and whether or not accounting of backup resource consumption is performed by file ownership. The initial values used for the new client server  for these configuration settings are taken from the settings that are established for a default server group within the enterprise.","After the basic information and initial setting values are stored into the SC database , the meta data received about the backup or restore event that occurred on the newly added client server  is then entered into the meta data database. The SC agent  normally does not need to resend this meta data, but the SC agent  may not receive an ACK for the meta data transmission until the GBS  has provisioned the newly added client server  and successfully stored the meta data received.",{"@attributes":{"id":"p-0119","num":"0139"},"figref":"FIG. 11","b":["10","500","502","502","500"]},"As noted above, in the inventors' presently preferred embodiment the enterprise networks  (i.e., in the backup infrastructure ) each include a SC agent  that is actually three major agents: an event agent , a restore event trigger , and a cron agent . A data receiver agent  is used within the SCS  (i.e., in the SC infrastructure ). Collectively, these agents aid in the data collection, data consolidation and data mining of information from BMSs  running various backup server software , which includes but is not limited to Veritas NetBackup which is used for the sake of example here. The SC agent  interfaces and with the backup server software , to obtain the data utilized by the SC web portal  (see e.g., ).","In the backup infrastructure  of the GBS  the event agent , the restore event trigger , and the cron agent  (comprising the SC agent ) reside on the BMS  to gather data based on activities performed by the backup server software .","The event agent  is implemented as a standalone Java daemon process which waits for backups to be completed by the backup server software . As needed, the backup server software  is configured to write backup event parameters to a log file at the end of a backup event completion. This log file is monitored by the event agent . As soon as a new entry is made in the log file the event agent  starts to collect all of the information pertaining to the backup job by calling the relevant NetBackup command line interfaces. For access authentication purposes, a magic key is added to the information collected. The information and key are then packaged into Java Objects, serialized, compressed and transported to the data receiver agent  over HTTP\/HTTPS. The data receiver agent  thus receives the information pertaining to the backup job just performed by the backup server software .","When a restore job being is undertaken, the backup server software  is configured to call the restore event trigger , which collects information pertaining to the restore job and sends it to the data receiver agent .","The restore event trigger  as a process is event driven, in the sense that instances of it are transient processes. They startup, perform the required operation, and terminate, thus imposing minimum load on the BMS .","The cron agent  is implemented as a standalone Java daemon process that spawns threads based on the jobs declared in a crontab file the GBS  maintains. The cron agent  currently spawns five threads, one each for five jobs or child agents (child agents ), discussed presently.","The SC software  includes Java servlets residing on the SC Portal server ; These respond to requests from event triggers from the event agent  and the restore event trigger  and the child agents  of the cron agent  that reside on the BMS  as parts of the SC agent .","The data receiver agent  is one such Java servlet. It is configured to listen for requests from the event triggers ,  and child agents  on the BMSs . On receiving a request, the data receiver agent  decodes the information and determines what type of request it has. Once the type of the message has been deciphered, the data in it is authenticated, decompressed, de-serialized and persisted into the SC database .","A job queue agent  is the other major Java servlet residing on the SC Portal server . The job queue agent  gets polled by other agents, such as the restore scheduler child agent  to initiate new restore jobs, which the initiating agents then process and perform. The job queue agent  is configured to return restore jobs that are pending for execution on the BMS . The restore jobs are packaged into an XML document, and transferred to the restore scheduler child agent  in the cron agent . The restore scheduler child agent  in turn processes the restore jobs one at a time, and sends back the job status to the job queue agent , which then are persisted into the SC database .","The GBS  employs an architecture that provides a unique way of handling backup server software  from different backup software vendors. Each major backup software vendor today uses a non-standard interface to its application. Further, even these applications are not entirely consistent from version to version. These factors pose a huge obstacle for enterprises that have different backup software to contend with. And they pose an even greater problem to a system like the GBS , since it has to contend with this variety of backup server software  and do so seamlessly from a user's perspective.","One approach would be to write code to make the SCS  interact independently with each type of backup server software . However, this would increase development cycle time, and also propagate increase in design, testing, and maintenance cycles. Instead, the inventors have crafted an adaptor architecture to reside in the enterprise network  and provide the SCS  with a single interface to the various backup server software .",{"@attributes":{"id":"p-0131","num":"0151"},"figref":"FIG. 12","b":["10","530","42"]},"Because the backup adaptor interface  is well defined, sub-adaptors  for each of the various backup software applications can easily be developed. These sub-adaptor  objects implement methods defined by the backup adaptor interface , and interact with a respective backup product (backup server software  instance) by calling the product's command line interface (CLI). A sub-adaptor  object decodes the data returned by calls to the CLI and populates this data into fields defined by the backup adaptor interface .","This architecture minimizes changes to the SCS , in the event that an underlying backup product changes. Additional backup products can also easily be supported by developing new sub-adaptors  as new backup products emerge.","Turning now to the event agent , the backup server software  is configured so that a backup event trigger is called in the event of a backup job being completed. This backup event trigger in turn collects all the information pertaining to the backup job by calling relevant command line interfaces to the backup server software . The information collected is next packaged into Java Objects, serialized, magic keyed, compressed and transported to the data receiver agent , thus providing the data receiver agent  with the information pertaining to the backup job.",{"@attributes":{"id":"p-0135","num":"0155"},"figref":"FIG. 13A-D","b":["600","42","602","22","604","606","504","504"]},"In a step , the backup driver initializes a BackupEvent object and in a step  the BackupEvent object makes a determination if the backup job was successful.","If the job is determined to be successful, in a step  the BackupEvent object calls the NetBackup command line interface (CLI) to query data about the backup job and sets its status to \u201cSuccess\u201d. In a step  the BackupEvent object populates itself with the backup job data. Alternately, if the job is determined to be unsuccessful, in a step  the BackupEvent object sets its status to \u201cFailed\u201d.","Then, in a step , a BackupDetailsGenerator initializes connection to the data receiver agent  running on the SC portal server  and in a step  data transfer commences in an iterative manner as long as the transfer is successful or a loop count is less than a pre-set max error count (a \u201cwhile condition\u201d).","In a step , the BackupEvent object is transferred to the data receiver agent  and the data receiver agent  processes the data and sends back an acknowledgement (ACK).","In a step , a determination is made if the ACK indicates the status of the BackupEvent object is \u201cSuccess\u201d. If so, in a step  a branch () is followed, described presently. Otherwise, in a step  a determination is made if the ACK, indicates an invalid server exception or an invalid IP address exception. If so, in a step  a branch () is followed, described presently. Otherwise, in a step  a determination is made if the ACK indicates an invalid policy name exception or an invalid schedule name exception. If so, a sub-process  is called to collect backup policy data, also described presently. And otherwise, step  is returned to for another iteration (L loop).","Picking up now with the branch () in step , this leads to a step  where a determination is made if file level details are to be collected from the BMS . One way to do this is to store flags in the SC database . Flags can indicate whether as little as one particular file or as much as all of the files and folders under a BMS  are of interest. Of course, many millions of files and folders will usually be under a single BMS  and billions may be present in even a medium sized enterprise, so setting the flags permits administrators to configure the GBS  as they feel efficient and necessary.","If the ACK contains a flag indicating the BMS  has file level details, a sub-process  is called to collect the file level details, discussed presently. Otherwise, in this implementation, the sub-process  is here also called to collect backup policy data and, after that, in a step  the process  terminates.","Picking up again in step , only now considering the case that the \u201cwhile condition\u201d is not met, in a step  a determination is made if transfer has not been successful and the loop count is equal or greater than the pre-set max error count (i.e., that here has been a serious failure). If so, in a step  an e-mail advisement is sent to an appropriate party, and step  is proceed to, where the process  terminates.","Picking up finally with the branch () in step , this also leads to step , from there to step  and termination of the process .",{"@attributes":{"id":"p-0145","num":"0165"},"figref":"FIG. 13C","b":["636","660","22","662","664","520","30"]},"In a step , data transfer commences in an iterative manner as long as the transfer is successful or a loop count is less than the pre-set max error count (a \u201cwhile condition\u201d).","In a step , the BackupPolicy object is transferred to the data receiver agent , which processes the data and sends back an acknowledgement (ACK).","In a step , a determination is made if the ACK indicates success in persisting the policy data into the SC database . If so, the sub-process  is finished. Otherwise, step  is returned to for another iteration (H loop).","Picking up again in step , only now considering the case that the \u201cwhile condition\u201d is not met, in a step  a determination is made if transfer has not been successful and the loop count is equal or greater than the pre-set max error count (i.e., that here has been a serious failure). If so, the branch () to step  () is followed. Otherwise, in a step  a branch () is followed that leads out of the sub-process  to step  () in the main part of process .",{"@attributes":{"id":"p-0150","num":"0170"},"figref":"FIG. 13D","b":["642","680","22","682","684","520","30"]},"In a step , data transfer commences in an iterative manner as long as the transfer is successful or a loop count is less than the pre-set max error count (a \u201cwhile condition\u201d).","In a step , data transfer continues in an iterative manner as long as the FileDetailsStream has data (also a \u201cwhile condition\u201d). In a step , the FileDetailsStream initializes a FileAttributes object for each line from the NetBackup Image catalog for the given backup event, and in a step  the FileAttributes object is transferred to the data receiver agent , which processes the data and sends back an acknowledgement (ACK). And then step  is returned to for another iteration (J loop).","Next considering the case of data no longer being present in the FileDetailsStream, in a step  a determination is made if the ACK indicates success in persisting the data into the SC database . If so, the sub-process  is finished. Otherwise, step  is returned to for another iteration (K loop).","Picking up again in step , only now considering the case that the \u201cwhile condition\u201d there is not met, in a step  a determination is made if transfer has not been successful and the loop count is equal or greater than the pre-set max error count (i.e., that here has been a serious failure). If so, the branch () to step  () is followed. Otherwise, in step  the branch () to step  is followed that leads out of the sub-process  to step  () in the main part of process .","Turning now to the restore event trigger , the backup server software  is configured to call the restore event trigger  in the event of a restore job being completed. The restore event trigger  in turn collects all the information pertaining to the Restore Job by calling relevant command line interfaces (CLIs) to the backup server software . The information collected is then packaged into Java Objects, serialized, magic keyed, compressed and transported to the data receiver agent , thus providing the data receiver agent  with the information pertaining to the backup job.",{"@attributes":{"id":"p-0156","num":"0176"},"figref":"FIG. 14A-B","b":["700","42","700","600","702","22","704","10","706","42"]},"In a step , the backup driver initializes a RestoreEvent object and in a step  the RestoreEvent object makes a determination if the backup job was successful. If the job is determined to be successful, in a step  the RestoreEvent object calls the NetBackup command line interface (CLI) to query data about the restore job and sets its status to \u201cSuccess\u201d. In a step  the RestoreEvent object populates itself with the restore job data. Alternately, if the job is determined to be unsuccessful, in a step  the RestoreEvent object sets its status to \u201cFailed\u201d.","Then, in a step , the BackupDetailsGenerator initializes connection to the data receiver agent  running on the SC portal server  and in a step  data transfer commences in an iterative manner as long as the transfer is successful or a loop count is less than the pre-set max error count (a \u201cwhile condition\u201d).","In a step , the RestoreEvent object is transferred to the data receiver agent  and the data receiver agent  processes the data and sends back an acknowledgement (ACK).","In a step , determination is made if the ACK indicates success in persisting the restore data into the SC database . If so, process  is finished. Otherwise, in a step  a determination is made if the ACK indicates an event does not exist exception. If so, a sub-process  processes the RestoreEvent object for the given event ID. And otherwise, step  is returned to for another iteration (K loop).","Picking up again in step , only now considering the case that the \u201cwhile condition\u201d is not met, in a step  a determination is made if transfer has not been successful and the loop count is equal or greater than the pre-set max error count (i.e., that here has been a serious failure). If so, in a step  an e-mail advisement is sent to an appropriate party, and in a step  the process  is exited.","With reference again to , the cron agent  is implemented a standalone Java demon process, which spawns threads for its child agents  based on the jobs declared in a Crontab file. Currently, the inventors have the cron agent  spawn multiple threads (e.g., 5 or more, one each for various jobs (child agents ), namely the Restore Scheduler, Tape Inventory, Tape Details, Tape Status, and other. Each of these child agents  is configured to run at particular time intervals.","The restore scheduler child agent  is initiated to poll the job queue agent  to determine if a restore job is pending for its BMS . If so, the restore scheduler calls the backup server software , via its CLI, to initiate that restore job.","The tape inventory child agent  is initiated to call the backup server software  to gather a list of the robots and tape drives present on its BMS . The tape details child agent  is initiated to call the backup server software  to gather a list of the tapes in a tape library on its BMS . The tape status child agent  is initiated to call the backup server software  to gather the status of the tapes within the tape library. The policy details child agent  captures all of the backup policies that are maintained by the backup server software . The backup polices define rules that the backup server software follows when backing up the client servers . The storage unit details child agent  captures all of the storage unit details from the backup server software . In backup server software , such as NetBackup, a storage unit is a group of one or more storage devices  of a specific type and storage density in a BMS . The information from these child agents  is collected, packaged into Java Objects, serialized, magic keyed, compressed and transported to the data receiver agent .","The smart updater child agent  pools the data receiver agent  in the SCS  for updates to the core libraries in the SC database . In the case it finds newer version of the core library, the smart updater automatically downloads it and re-starts the cron agent  and the event agent .","As mentioned previously, the data receiver agent  is implemented as a Java servlet that is configured to listen for requests from the event triggers ,  and the child agents  of the cron agent  on the BMSs . On receiving a request, the data receiver agent  decodes the information and determines what type of request it has just received. Once the type of the message has been deciphered, the data is authenticated, decompressed, de-serialized and persisted into the SC database .",{"@attributes":{"id":"p-0167","num":"0187"},"figref":"FIG. 15A-C","b":["800","520","802","520","504","506","510","508","804","806","808","822","824","826","800","30"]},"If the request type was \u201cEVENT\u201d, in a step  the BackupEvent object in the request is de-serialized. Then, in a step  a DbBackupEvent object is initialized to persist the BackupEvent object into the SC database . Next, in a sub-process , any error codes are processed. If there were no error codes, in a step  the data receiver agent  sends a message that persisting the BackupEvent object was successful, and in a step  the process  returns control to the SC portal server  for other tasks.","If the request type was \u201cPOLICY\u201d, \u201cFAILURE\u201d, \u201cRESTORE\u201d, \u201cTAPE DETAILS\u201d, \u201cINVENTORY DETAILS\u201d, or \u201cTAPE STATUS\u201d (branches \u201c3\u201d through \u201c8\u201d in ) the steps are effectively the same. The object is de-serialized; a Db-type object is initialized to persist the received object into the SC database ; the sub-process  looks for and processes any error codes (these can vary as needed, say, if processing \u201cTAPE DETAILS\u201d could result in particular error codes); if there were no error codes, the data receiver agent  sends an appropriate message that persisting the object was successful; and the process  returns control to the SC portal server  for other tasks.","If the request type was \u201cFILE\u201d, however, a slightly different approach is used. In a step  the FileDetailsLine object in the request is de-serialized. Then, in a step  a DbFileDetails object is initialized to persist the FileDetailsLine object into the SC database . Next, in steps -, any error codes are processed, and in a step  the process  returns control to the SC portal server . If there were no error codes, in a step  the data receiver agent  sends a message that persisting the FileDetailsLine object was successful, and in step  the process  returns control to the SC portal server .","With reference again to , every child agent  of the cron agent  may be implemented with an automatic recovery feature, to execute in the event of an exception condition occurring during the transmission of meta data from its BMS  to the data receiver agent . The child agent  tries to transmit the meta-data to the data receiver agent  a configurable number of times, or until the child agent  receives an acknowledgement from the data receiver agent . The interval between the retries is also a configurable parameter. The default data transmission mechanism is Java object serialized over HTTP(s). The re-try logic uses this data transmission mechanism to transfer the data, but in the event of a communication failure, the child agent  tries to use an alternate transmission mechanism. The alternate mechanism used may be transmitting data over SMTP (Simple Mail Transfer Protocol). An email message containing the textual representation of the meta data can be sent over SMTP to the data receiver agent . This alternate transmission mechanism is used to transmit the data a configurable number of times, or until the child agent  receives an acknowledgement. If the child agent  is still unsuccessful in transmitting the data, an email message containing a suitable error message, e.g., the possible cause and source of the message, is sent to an appropriate party.","As was discussed previously, the backup event agent  transmits backup event related meta data to the data receiver agent , where the backup event is related to the client server  that was backed up by the backup management server. The data receiver agent  validates the information about the client server  that is part of the backup meta-data. In the case the client server  does not exist in the SC database , however, information for the client server  can be automatically added into the SC database . These is straightforward, since the client server  is also associated to the default server group that its BMS  belongs to. The same can happen when a new client server  is encountered as the data receiver agent  processes restore event meta-data.","The foregoing drawing figures and descriptions are not intended to be exhaustive or to limit the invention to the forms and embodiments disclosed. Rather, specific details are presented to illustrate the invention. In light of the teachings herein, the techniques known to those skilled in the art, and advances in the art yet to be made, numerous modifications, variations, selections among alternatives, changes in form, and improvements can be made to the invention. Thus, the breadth and scope of the invention should not be interpreted in a limited manner, and should be defined only in accordance with the following claims and their equivalents.","The present invention is well suited for application to capture, transmit and persist backup and recovery meta data. As has been described herein in the context of the global backup system (GBS ), various embodiments of the invention, provide methods and apparatuses for one or more of the following: for providing a centralized repository for meta data and related communication and control mechanisms; for efficiently storing and retrieving the meta data at the StorageConsole server (SCS ); for securely and efficiently transferring meta data and other backup information over a network (I-net ); for reducing the footprint on the backup management servers (BNSs ) of a StorageConsole agent (SC agent ) that directs the process of gathering the meta data and sending it to the SCS ; for automatically recovering from exceptions, or for automatically provisioning a client server  that is newly added to the enterprise; and for meaningfully representing and presenting the status of the GBS .","On request, some embodiments of the invention display an array of aggregated status indicators. The aggregated status indicators are displayed in what is termed herein a mission control report (MCR ).","Rows of the array of aggregated status indicators correspond with servers within the enterprise or correspond with domains where each domain contains multiple servers. Columns of the array correspond with time intervals, including but not limited to a particular day or week. Aggregated status indicators within cells of the array display the aggregated status of every backup or restore event that occurred for the server(s) or domain(s) that correspond to the cell during the time interval that corresponds to the cell.","Aggregated status indicators may have various iconic shapes and colors; for example, a green smiley face may indicate that all scheduled backup and restore events were completely successful, a yellow neutral face may indicate that at least one backup or restore event generated a warning, and a red frowning face may indicate that at least one of the events failed. By looking at the array of aggregated status indicators, the system administrator can see at a glance a meaningful representation of the current status of the backup system for which he is responsible.","Some embodiments of the invention meet the need for efficient storage and retrieval of meta data by appropriately structuring the meta data in a relational database or in a similar data structure (the SC database ). This employs a schema  that includes a file table , a backup table , and a link table .","The file table  contains one entry or row for each separate file, folder or link (also known as a shortcut) on a server that is backed up. The backup table  contains one row for each backup event. The link table  contains one row for every occasion on which any file was backed up, where each row in the link table  contains a pointer to the file-table row for that the file that was backed up and also contains a pointer to the backup-table row for the backup event in which the file was backed up.","The link table  may grow to be very large. For example, if an enterprise has 50,000 files that are fully backed up once a day and the backup copies of the files are kept for 180 days, then the link table  will contain 9 million entries. Such a large number of potential entries makes it particularly advantageous that each row in the link table  is small. Each link-table row is small because it points to, but does not duplicate, the meta data about the file involved and the meta data about the backup event involved.","Further, finding all backup events that include a particular file can be efficiently performed. Such a find operation consists of selecting those entries in a link table  that contain a pointer to the corresponding file-table row.","Some embodiments of the invention meet the need for efficient and secure transfer of meta data and other backup information by using the secure hyper-text transfer protocol (S-HTTP or HTTPS), by using public keys in the HTTPS communication that come from digital server certificates that are signed and verified by a trusted third party, by initiating communication only from the BMSs  to the SC portal server  and never the other way around, or by including in each message that initiates a communication session an identity verification tag or magic key that is unique to the BMS  initiating the session.","Because a BMS  never responds to a communication session that an external device is attempting to initiate, there is no way that a curious person, a deliberate hacker or any kind of impostor can use this communication path to compromise the security of any BMS .","The magic key used some embodiments of in the GBS  is an encoded form of information tokens. At least some of the information tokens have unique values for each BMS , making it unlikely that a communication session can be accidentally or maliciously initiated from any device other than the BMS  that purports to initiate the session.","Some embodiments of the invention meet the need for reducing the footprint on the BMSs  of the process of gathering the meta data and sending it to the SC portal server  by running only light-weight software on the BMSs  as the SC agents .","The footprint of the SC agents  is reduced by using one or more of the following techniques: by executing only when a backup or restore event terminates, and not when a polling or request message is received from the server; by communicating with the SC portal server  only via HTTP or HTTPS sessions initiated by the SC agent , and not allowing the SC portal server  to initiate communications; and by storing data only at the SCS  and not storing any data on any BMS .","Some embodiments of the invention meet the need for automatically recovering from exceptions by expecting an acknowledgement message in response to every communication that occurs over the I-net  (Internet and\/or intranet), and then retrying the communication until such an acknowledgement is received.","The interval between retries, or the schedule of time intervals to be used between the retries, can be configured. A maximum number of retries can be set. If this number is exceeded without a successful acknowledgement, then the GBS  initiates communication via a secondary channel. In some embodiments, this escalation process can be repeated as needed, that is, if the secondary-channel communication is not acknowledged then it is tried again and if necessary third-level fallback channels, and so on, are used.","Such fallback communication channels may include, but are not limited to: accessing servers via alternate communication links; accessing alternate servers; or sending e-mail messages describing the failure to one or more designated e-mail address. The use of these escalating or fallback communication channels allows the GBS  to recover from many exceptions without loosing the integrity of the meta data, without loosing the ability to communicate, and with a minimal amount of intervention from system administrators.","Some embodiments of the invention also meet the need for automatically provisioning a client server  that is newly added to an enterprise. If in the course of a processing a backup or restore event, it is determined that a client server  has no entry in the SC database , an acknowledgement message can be sent back to the SC agent  that both confirms correct receipt of the meta data for the event and that further requests that the SC agent  gather the basic information necessary to enter the new client server  into the SC database .","These embodiments can further be implemented to automatically add basic information to the SC database  and to assign new client servers  to the default group of BMSs  that were established when an enterprise was initially set up to use the SCS . Initial values used for a new client server  for configuration settings that can be altered on a system by system basis can be taken from established client servers  for a default BMS  within the enterprise network .","For the above, and other, reasons, it is expected that the global backup ;system (GBS ) of the present invention will have widespread industrial applicability. Therefore, it is expected that the commercial utility of the present invention will be extensive and long lasting."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The drawings illustrate technologies related to the invention, show example embodiments of the invention, and give examples of using the invention. The objects, features and advantages of the invention will become more apparent from the following detailed description when read in conjunction with the following drawings:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 13A-D"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 14A-B"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 15A-C"}]},"DETDESC":[{},{}]}
