---
title: Techniques for virtual representational state transfer (REST) interfaces
abstract: Techniques for virtual Representational State Transfer (REST) interfaces are provided. A proxy is interposed between a client and a REST service over a network. The proxy performs independent authentication of the client and provides credentials to the client and for the client to authenticate to the REST service using a REST service authentication mechanism. The proxy inspects requests and responses and translates the requests and responses into formats expected by the client and the REST service. Moreover, the proxy enforces policy and audits the requests and responses occurring between the client and the REST service over the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09049182&OS=09049182&RS=09049182
owner: Novell, Inc.
number: 09049182
owner_city: Provo
owner_country: US
publication_date: 20091029
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application is with, a non-provisional of, and claims priority to U.S. Provisional Application Ser. No. 61\/232,981; entitled: \u201cTechniques for Virtual Representational State Transfer (REST) Interfaces,\u201d and filed on Aug. 11, 2009; the disclosure of which is incorporated by reference herein and below in its entirety.","Increasingly, information is being moved over networks, such as the Internet, to conduct affairs of individuals, governments, and enterprises. Devices are more powerful and mobile, such that network connectivity can be acquired from nearly any spot on the globe on demand by any individual.","Information access has largely been successful because of the advent of the World-Wide Web (WWW) and the communication techniques associated therewith. One such popular communication architecture and technique for WWW communications is a Representational State Transfer (REST) interface.","A REST interface is an architectural style and communication technique deployed for clients and servers to interact with one another over the Internet. Clients initiate requests that are processed by servers and responses are returned from the servers to the clients. Requests are in the form of nouns (resource identifiers) and verbs (actions) that are to be taken on the nouns. The vocabulary for the verbs are constrained to a few universal verbs, such as GET, PUT, POST, and DELETE. The nouns are used for uniquely identifying a resource over the Internet, such as by an Internet Protocol (IP) Address in the form of a Uniform Resource Locator (URL) link or Uniform Resource Identifier (URI).","Conversely, other WWW protocols exist that give greater customized control over the actions used by developers; one such popular protocol is the Simple Object Access Protocol (SOAP).","More feature\/function can be achieved with greater developer control when actions (verbs) can be user-defined for any given situation. However, with the increased feature\/function comes the loss of interoperability. That is, two or more resources (nouns) are harder to seamlessly interface with one another over the Internet when the potential actions (verbs) increase and are not controlled. Enterprises appear to prefer ease of integration over increased feature\/function.","Thus, REST interfaces are growing in the industry at significant rates. Some suggest that over 80% of major WWW providers offer REST as a means to interface with their assets over the Internet. REST is in fact replacing SOAP-based services as the preferred architecture of enterprises. One main reason for this is that the Application Programming Interface (API) for REST is easy to understand, constrained, and simple to use. This simplicity of integration also has some drawbacks.","For example, because REST interfaces are simplistic: the security with REST interfaces is limited; the auditing with REST interfaces is difficult to achieve; and the merging of multiple REST interfaces to interoperate with one another takes customized programming to achieve.","Accordingly, what is needed is improved flexibility with REST interface architectures.","In various embodiments, techniques for virtual Representational State Transfer (REST) interfaces are presented. More specifically, and in an embodiment, a method for using a virtual REST interface is provided. Specifically, a proxy device is configured to act as an intermediary between a client and a REST service executing on a server of the network. Next, a REST formatted request, which is being sent from the client to the REST service, is intercepted by the proxy device and an enterprise policy is enforced, at the proxy device, against the REST formatted request. Finally, the REST formatted requested is provided, by the proxy device, to the REST service when the enterprise policy is satisfied for the REST service to process on behalf of the client. The REST service then processed the request and a response is returned to the proxy device. Policy evaluation can then dictate whether the response is modified, audited, and\/or logged.","A \u201cresource\u201d includes a user, service, system, device, directory, data store, groups of users, combinations of these things, etc. A \u201cprincipal\u201d is a specific type of resource, such as an automated service or user that acquires an identity. A designation as to what is a resource and what is a principal can change depending upon the context of any given network transaction. Thus, if one resource attempts to access another resource, the actor of the transaction may be viewed as a principal.","An \u201cidentity\u201d is something that is formulated from one or more identifiers and secrets that provide a statement of roles and\/or permissions that the identity has in relation to resources. An \u201cidentifier\u201d is information, which may be private and permits an identity to be formed, and some portions of an identifier may be public information, such as a user identifier, name, etc. Some examples of identifiers include social security number (SSN), user identifier and password pair, account number, retina scan, fingerprint, face scan, etc.","A \u201cnetwork node\u201d or \u201cnode\u201d refers to a physical or virtual (virtual machine) processing device, such as but not limited to, a router, a network bridge, a hub, a network switch, a server, a proxy, a client, etc.","A \u201cproxy,\u201d \u201cproxy service,\u201d and\/or \u201cproxy device\u201d may be used interchangeably herein and below. The proxy executes on a network node and in some cases may be viewed as the network node. A proxy can be a reverse proxy, in which case the server vending content over the network is unaware that the reverse proxy is acting as an intermediary between the sever and clients of the server. That is, the server is not pre-configured to interact with the reverse proxy. In another case, the proxy is a forward proxy, with respect to the server; so, the server is configured to receive requests and communicate responses through the forward proxy.","In either case, the proxy, as used herein, is local to the server and is unknown to the clients accessing the server over the network. The clients are not preconfigured to directly interact with the proxy. The clients indirectly interact with the proxy by trying to contact the server and having the proxy intercept and process the clients' requests unbeknownst to the clients.","Various embodiments of this invention can be implemented in existing network architectures. For example, in some embodiments, the techniques presented herein are implemented in whole or in part in the Novell\u00ae network and\/or proxy server products, distributed by Novell\u00ae, Inc., of Provo, Utah.","Also, the techniques presented herein are implemented in machines, such as processor or processor-enabled devices. These machines are configured to specifically perform the processing of the methods and systems presented herein. Moreover, the methods and systems are implemented and reside within computer-readable storage media and are processed on the machines configured to perform the methods.","Of course, the embodiments of the invention can be implemented in a variety of architectural platforms, proxies, devices, server systems, and\/or applications. Any particular architectural layout or implementation presented herein is provided for purposes of illustration and comprehension only and is not intended to limit aspects of the invention.","It is within this context that embodiments of the invention are now discussed within the context of .",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["100","100"]},"At , the REST proxy service configures a proxy device to act as an intermediary between a client and a REST-enabled service (hereinafter \u201cREST service\u201d). The REST service executing on a server of the network. So, the REST proxy service executes on a proxy device or node of a network. In an embodiment, the proxy device is contained within a firewalled environment of an enterprise and is configured to handle interactions occurring with the firewalled environment and the external Internet. That is, external communications coming into the firewalled environment are intercepted and processed by the REST proxy service and internal communications that are being sent out of the firewalled environment over the Internet are intercepted and processed by the REST proxy service.","According to an embodiment, at , the REST proxy service configures the proxy device as a reverse proxy. Both the client and the REST service are unaware of the reverse proxy. Furthermore, neither the client nor the REST service is pre-configured to directly interact with the reverse proxy.","At , the REST proxy service intercepts, at the proxy device, a REST-formatted request that is being sent from the client to the REST service. This includes the noun and verb format expected by the REST service. Again, the client is unaware of the REST proxy service and believes that the client is interacting with the desired REST service.","At , the REST proxy service enforces, at the proxy device, an enterprise policy against the REST-formatted request sent from the client. The policy is any single or set of conditions and events defined by an enterprise and automatically evaluated by the REST proxy service, these conditions or events are associated with actions that the REST proxy service takes when the conditions or events evaluate to true and\/or false. So, policy enforcement by the REST proxy service permits an enterprise to: implement its own security with respect to REST services, integrate different REST services, audit REST service interactions, and the like. This is done in an automated and dynamic manner via the REST proxy service.","In an embodiment, at , the REST proxy service authenticates, by the proxy device, a user of the client for access to the REST service. This is done using or in response to a first set of user-supplied credentials provided by the user with the REST-formatted request. So, the user believes that the first set of user-supplied credentials is being used by the REST service to authenticate the user for access. However, this is not the case; the REST proxy service uses the first set of user-supplied credentials to authenticate the user for access to the enterprise network, which includes access to the REST service. So, the authentication performed is for the user to access the enterprise network and not necessarily for the user to directly authenticate to the REST service. The REST proxy service takes care of this authentication.","Continuing with the embodiment of  and at , the REST proxy service uses a third-party authentication service to authenticate the user via the first set of user-supplied credentials. In other words, an external identity service performs authentication on behalf of the enterprise network and that authentication is managed and controlled via the REST proxy service.","Still continuing with the embodiment of  and at , the REST proxy service subsequently acquires a second set of user credentials that the REST proxy service inserts into the original REST-formatted request on behalf of the user to authenticate the user and the client of the user directly to the REST service. So, the user and the client of the user are unaware of what is being supplied to the REST service for authentication. The user believes the original first set of user-supplied credentials was used to directly interact and authenticate the user with the REST service. However, this is not the case, the REST proxy service uses the first set of user-supplied credentials to authenticate the user and the client to the enterprise environment and then the REST proxy service acquires some securely managed second set of credentials on behalf of the user and supplies this second set of credentials to the REST service. The REST service expects and recognizes the second set of credentials and authenticates the REST-formatted request in response to the second set of credentials. The enterprise may use a corporate set of credentials in this scenario to log in or authenticate the user to the REST service via the second set of credentials, which are never actually known to or provided to the user.","In another situation associated with the embodiment of  and at , the REST proxy service provides single sign-on services to the client with one or more second REST services by using the first set of user-supplied credentials to ensure the user is authenticated to the enterprise network and then distributing one or more third sets of credentials expected by one or more second REST services managed by the enterprise. So, here the user provides just the initial first set of user-supplied credentials and the REST proxy service manages other credentials that the REST proxy service provides on behalf of the user so that the user can access multiple different REST services. Each REST service can use different and disparate authentication mechanisms. The user does not have to concern himself\/herself with the mechanisms or managing the credentials because the REST proxy service, perhaps in connection with an identity service, manages the proper credentials and the authentication mechanisms needed by each of the REST services.","In still another situation, at , the REST proxy service enforces the enterprise policy against one or more second REST-formatted requests that are directed to one or more second REST services executing on one or more second servers of the network. So, the REST proxy service acts as a merging mechanism or interface to permit a single front-end access to a user, via the client of the user; the front-end interface managed by the REST proxy service to handle REST formatted requests to multiple different and disparate REST servers executing on different network servers.","In a particular situation, at , the REST proxy service translates one or more components of the REST-formatted request into an expected format that the REST service processes. That is, the nouns and\/or verbs of the REST-formatted request can be inspected by the REST proxy service and in accordance with actions defined in the enterprise policy these nouns and\/or verbs can be translated into nouns and\/or verbs that the REST service expects to see. This scenario permits the REST proxy service to manage multiple disparate REST services and ensure that each REST service is receiving a REST-formatted request in the proper expected format. Basically, the nouns and verbs are received from the user in a normalized format, which the REST proxy service matches to conditions in the policy in order to map the normalized format to specific formats expected by the desired REST service.","At , the REST proxy service provides the REST-formatted request to the REST service when the enterprise policy is satisfied. The REST service then processes the request and returns a response. The response is then processed by the REST proxy service in a similar manner to ensure it conforms to the enterprise policy, is authenticated, and is in a format the user or client of the user expects. Some additional examples of this situation with regard to the REST service response are provided herein and below with the discussion of the remaining FIGS.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2","b":["200","200"]},"The proxy service represents another and in some cases enhanced perspective of the REST proxy service represented by the method  of the .","At , the proxy service interposes a proxy between a REST service and a client of a network.","According to an embodiment, at , the proxy service configures the proxy as both a forward proxy and a reverse proxy to the REST service and to one or more second REST service's of the network. It is noted, that the proxy can be forward, reverse, of forward and reverse.","In some cases, the proxy service may also configure the proxy as a forward proxy to the REST service (not shown in ).","At , the proxy service enforces security, at the proxy, between interactions of the REST service and the client. That is, security, such as authentication, is independently enforced by the proxy service outside the normal scope of REST processing between a client and a REST server. This is done via the proxy service acting as an intermediary to the REST service and the client.","In an embodiment, at , the proxy service authenticates the client to the REST service by using a first authentication mechanism and then provides the client with credentials to authenticate to the REST service via a second authentication mechanism. The first and second authentication mechanisms are different and disparate from one another. So, an enterprise can enforce its own enterprise security via the proxy service implementing and enforcing the first authentication mechanism and then once that is satisfied, the proxy service can provide the client with credentials for satisfying the second authentication mechanism expected and used by the REST service.","In a specific case, at , the proxy service authenticates the client for a specific access request to the REST service by identifying a specific function call (verb and resource combination) appearing with a particular interaction (REST-formatted request) that the client is attempting to achieve with the REST service. Here, the proxy service inspects interactions (requests) for specific access requests and can flag these requests for special authentication treatment. Thus, granular authentication can be achieved via the proxy service down to a function call level.","At , the proxy service selectively modifies interactions between the REST service and the client. Here, the proxy service inspects REST-formatted requests for noun and verb usage and formats and based on specific formats, nouns, and\/or verbs selectively takes actions to modify the requests (interactions). This provides customized control to the proxy service for servicing multiple REST services and for enforcing enterprise policy because before any request is sent to the REST service or before any response returned from a REST service is sent to the client, the proxy service has control and can inspect the payloads and take customized actions in an automated and dynamic fashion.","According to an embodiment, at , the proxy service uses a policy to change a request in a first format to a REST service recognized format. In other words, a policy instructs the proxy service on how to translate to a user or client-supplied request into a specific REST format request.","Continuing with the embodiment of  and at , the proxy service changes portions of the request in response to content included with the request in the first format and as directed by the policy. The proxy service can inspect the actual nouns and verbs being used in the request and change them as directed by policy.","At , the proxy service audits the interactions occurring between the REST service and the client. So, specific and customized auditing can occur in an automated fashion for an entire enterprise's REST-enabled services, via the proxy service.","For example, at , the proxy service logs selective details of the interactions between the client and the REST service based on the content provided by the client with some of the interactions being directed to the REST service. Here, the proxy service views the contents of the requests (interactions) made by the client to the REST service and based on the content and evaluation of policy, some of the details are logged for later review and evaluation.","In another case, at , the proxy service logs selective details of the interactions in response to content provided by the REST service with some of the interactions being directed back to the client. So, the interactions can be the requests made by the clients that are REST compliant and other of the interactions are the responses made by the REST service back to the client. In the embodiment of , the response details are inspected by the proxy service and based on the contents selective information is logged for subsequent evaluation and\/or analysis.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3","FIGS. 1 and 2"],"b":["300","300","300","300","100","200"]},"The virtual REST interface system  includes a proxy service .","The proxy service  is implemented in a computer-readable storage medium and is to execute on a proxy of the network. Example processing features associated with the proxy service  were presented in detail above with reference to the methods  and  of the , respectively.","The proxy service  is configured to act as an intermediary between clients of a network and REST servers for purposes of authenticating client requests, translating the client requests, and enforcing enterprise policy against the client request.","The proxy service  is also configured for purposes of authenticating REST server responses, translating the REST server responses, and enforcing the enterprise policy against the REST server responses.","According to an embodiment, the proxy service  authenticates the client requests and the REST server responses using an enterprise authentication mechanism. The enterprise authentication mechanism is independent of separate authentication mechanisms used by the REST servers.","Continuing with the prior embodiment, the proxy service utilizes the separate authentication mechanisms expected by the REST servers once the enterprise authentication mechanism is satisfied. The clients are unaware of the separate authentication mechanisms expected by the REST servers.","In a particular situation, the clients and the REST servers are unaware of the proxy service  and are not configured for direct interaction with the proxy service .",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIGS. 4-5"},"The  are now discussed with reference to a variety of scenarios. It is noted that other scenarios are possible and that the discussed scenarios are done so for purposes of illustration and to highlight some significantly beneficial situations that embodiments of the invention provide for.","Scenario \u201cA\u201d is using  and proceeds as follows:\n\n","Scenario \u201c1 B\u201d is using  and proceeds as follows.\n\n","In summary, scenarios A and B provide techniques that use policy with an identity driven proxy (RIP) to define and validate REST requests without changes or knowledge to the REST service. The techniques use policy with an identity driven proxy to set and send authentication credentials to a REST service. The techniques also use policy with an identity driven proxy to provide single sign on to REST services that may have different authentication schemes. Additionally, the techniques use policy with an identity driven proxy to transform in-bound credentials from a user application to the required out-bound credentials needed by the REST service.","Scenario \u201cA\u201d is using  and proceeds as follows.\n\n","Scenario A provides techniques that use policy with an identity driven proxy to merge multiple REST services to act as one without changes or knowledge to the REST services. The techniques use policy with an identity driven proxy to change in-bound requests to match the needs of the REST service. The data changed in the request may be the NOUNS, VERBS, or DATA sent. Additionally, the techniques use policy with an identity driven proxy to change out-bound requests to match the needs of the calling application. The data changed in the response may be the NOUNS, VERBS, or DATA sent.","Scenario \u201cA\u201d is using  and proceeds as follows.\n\n","Scenario A techniques use policy with an identity driven proxy to generate audit events based on the NOUNS used by REST application. The techniques use policy with an identity driven proxy to generate audit events based on the VERBS used by a REST application. The techniques also use policy with an identity driven proxy to generate audit events based on the payload data used by a REST application. Additionally, the techniques use policy with an identity driven proxy to generate audit events based on the response of REST application. All of the above does not require any changes to the REST services being audited.","Scenario \u201cB\u201d is using  and proceeds as follows.\n\n","Scenario B techniques use policy with an identity driven proxy to allow or deny REST access based on identity, roles, or other attributes of the requesting application. The techniques also use policy with an identity driven proxy to allow or deny access based on the REST requests. This can include NOUNS, VERBS, and other points of information.","In some cases of scenario B, the RIP uses policy with an identity driven proxy to map incoming requests to \u201cFUNCTION_TAGS\u201d. These tags of labels can be built using policy and any data then sent on the requests of the RIP. Examples are URL, NOUNS, VERBS, TOD, Data format, Data content, etc.","Scenario B techniques use policy with an identity driven proxy to base access permissions on the identity of the application making the request and the \u201cFUNCTION_TAG\u201d. Again, all of the above approaches do not require any changes at all to legacy REST services.","The techniques presented herein and above provide a variety of novel benefits, such as but not limited to: 1) allow policy to control the authentication of REST service without changes to the REST service (where normal and legacy authentication expected by the REST service can still be used separately by the REST service); 2) allow advanced authentication of a legacy REST service that does not support such methods of authentication (as described in (1) and above); 3) allow clients to call REST services without knowing how to authenticate; the authentication is done based on the identity known by the proxy; 4) allow a client to access REST services that are authenticated by a corporation via policy; a client can use a service such as \u201cwww.BooksOnline.com\u201d and does not need to use or know the group password used by the corporation; 5) allow REST services to be accessed via \u201cfederated trust\u201d without any changes to the REST service; 6) allow a client to access REST services via \u201cfederated trust\u201d without change to the client code; 7) allow multiple REST services to appear as one service to clients; 8) allow policy to control what REST services are combined and joined; 9) allow a single REST noun form; policy provides URL transformation to provide a common syntax form even if the underlying services are different; 10) allow a single REST verb form; policy allows the Hypertext Transfer Protocol (HTTP) method of the REST call to be transformed, such as \u201cPOST\u201d to \u201cGET;\u201d 11) allow REST service to be audited without changes to the service; 12) allow policy to determine what events are generated to the audit system; 13) allow policy to grant or deny access to REST services function, based on policy, with changes to the REST service; and\/or 14) allow policy to grant or deny employees access to outside REST services via policy.","The above description is illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of embodiments should therefore be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled.","The Abstract is provided to comply with 37 C.F.R. \u00a71.72(b) and will allow the reader to quickly ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.","In the foregoing description of the embodiments, various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting that the claimed embodiments have more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Description of the Embodiments, with each claim standing on its own as a separate exemplary embodiment."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 4-5"}]},"DETDESC":[{},{}]}
