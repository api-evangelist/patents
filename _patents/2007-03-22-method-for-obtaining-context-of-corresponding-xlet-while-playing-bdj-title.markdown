---
title: Method for obtaining context of corresponding Xlet while playing BD-J title
abstract: The present invention is to provide a method for enabling Blue-ray Disc Java (BD-J) to effectively obtain context of a corresponding application, namely an Xlet, while playing BD-J title, which comprises the steps of setting up source file attribute of each class by adding an Xlet context ID as an unique code to the class when loading all classes into a cache of the BD-J; looking up back onto a call stack to search for Xlet class of the current BD-J title when searching for Xlet context; and then obtaining the Xlet context through the Xlet context ID according to the source file attribute. Thus, the method of the present invention enables BD-J to normally play the BD-J title in the Blue-ray Disc Read Only Memory (BD-ROM) and, at the same time, effectively improves the playing performance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08015548&OS=08015548&RS=08015548
owner: Arcsoft, Inc.
number: 08015548
owner_city: Fremont
owner_country: US
publication_date: 20070322
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","PRIOR ART OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present invention relates to Blue-ray Disc Java (BD-J), which is a Java-based software that will be included in Blue-ray Disc Read Only Memory (BD-ROM) discs and all Blu-Ray Disc players for providing the Blu-ray menus and many other features, more particularly to a method for enabling BD-J to effectively obtain context of a corresponding application, namely an Xlet, while playing BD-J Title.","BD-ROM (also called \u201cBlu-ray Disc\u201d) is an optical disc format developed by SONY, which is derived from the blue-violet laser used to read and write this type of disc. Because of shorter wavelength (405 nm) of the blue-violet laser, substantially more data can be stored on a BD-ROM than on a common DVD format, which uses a red laser with wavelength 650 nm. In comparison to HD DVD, which also uses a blue laser, BD-ROM has more information capacity per layer (currently 25 GB, but test media is up to 33 GB). Therefore, BD-ROM is deemed to be the next generation of high quality video disc standard.","There are two kinds of titles in BD-ROM, i.e. HDMV Title and BD-J Title, wherein BD-J Title is an essential element in BD-ROM for providing an application programming environment that supports Blu-ray systems and allows Content Providers to deliver highly-interactive and highly-programmable titles to end users. BD-J is based on the Personal Basis Profile (PBP) of the CDC Configuration of Java ME, and earlier on the JavaTV specifications. A BD-J application is a Javan Xlet which is controlled by the BD-ROM player's Application Manager through its Xlet interface. Just like in many other Java ME environments, the Xlet interface has several states, such as the loaded, paused, active and destroyed states. Once an Xlet is destroyed, any resources allocated to it, such as memory and AV control, are released.","A Javan Xlet is registered in the Application Management Table (AMT). Each BD-J Title on a disc can have an associated AMT. At least one application in the AMT must be signaled as \u201cautostart\u201d. This application will be started when the corresponding Title is selected and from thereon the BD-J platform is used by the BD-J application. This could include selecting another Title and launching other applications signaled in the AMT or downloading from the Internet.","In general, the conventional model for Java applications doesn't work very well in a digital TV environment. The basic Java application model assumes that only one application is executing in a given virtual machine (VM), and that the application itself is in complete control of its lifecycle (which can include killing the Java VM that it's running in). This is less than ideal for a digital TV receiver, where several applications may be running at the same time, and where there is a need to enforce some separation between the applications. Luckily, Xlet introduced by Sun in the JavaTV specification and adopted as the Java application format for MHP (Multimedia Home Platform) and related digital TV standards gives us something pretty close to what we need. Like applet, the Xlet interface allows an external source (the application manager in the case of a digital TV receiver) to start and stop an application, as well as controlling it in other ways. The Xlet interface is found in the following javax.tv.Xlet package as:",{"@attributes":{"id":"p-0007","num":"0006"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public interface Xlet {"]},{"entry":[{},"\u2003\u2003public void initXlet(XletContext ctx)"]},{"entry":[{},"\u2003\u2003\u2003\u2003throws XletStateChangeException;"]},{"entry":[{},"\u2003\u2003public void startXlet( )"]},{"entry":[{},"\u2003\u2003\u2003\u2003throws XletStateChangeException;"]},{"entry":[{},"\u2003\u2003public void pauseXlet( );"]},{"entry":[{},"\u2003\u2003public void destroyXlet(boolean unconditional)"]},{"entry":[{},"\u2003\u2003\u2003\u2003throws XletStateChangeException;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Obviously, the Xlet has methods that allow the application manager to not only initialize, start and stop it, but also pause and resume it. The reason for having the Xlet paused and resumed is very simple\u2014in an environment like a digital TV receiver several applications may be running at the same time, hardware restrictions mean that only one of those applications may be visible at any time. In this scenario, non-visible applications must be paused in order to keep resources free for the application which is visible. Therefore, an Xlet interface has four main states, i.e. Loaded, Paused, Started and Destroyed states, of which the lifecycle of Xlet shown on  is detailedly described as follows:\n\n","It's important to remember that an Xlet is not a standard Java application. There are many important differences between the two. An Xlet is conceptually much closer to an applet. Like an applet, there may be more than one Xlet running at any one time, which means that Xlets should not take certain actions that will globally affect the Java virtual machine. For instance, an Xlet should never, ever call the System.exit( ) method because it may not be the only application running in the VM at the time.","Besides, each Xlet has a context associated with it, an instance of the javax.tv.Xlet.XletContext class is shown below, which is used to provide a way for the application to get more information about its environment and to communicate any changes in its state to its environment:",{"@attributes":{"id":"p-0011","num":"0015"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public interface XletContext {"]},{"entry":[{},"\u2003\u2003public static final String ARGS = \u201cjavax.tv.Xlet.args\u201d"]},{"entry":[{},"\u2003\u2003public void notifyDestroyed( );"]},{"entry":[{},"\u2003\u2003public void notifyPaused( );"]},{"entry":[{},"\u2003\u2003public void resumeRequest( );"]},{"entry":[{},"\u2003\u2003\u2003\u2003public Object getXletProperty(String key);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"An application can request that it be moved from the Paused state back to the Started state using the resumeRequest( ). This may happen when a given event has occurred, for instance a certain time is reached or a certain event is detected in the MPEG stream. This effectively allows an application to \u201csleep\u201d for a while. Having said that, this method does only request that an application is started again\u2014the receiver software may choose to ignore this request due to resource limitations, display issues or simply because it's feeling cruel.","Referring to , they show exactly what happens when an Xlet requests a change of state via its Xlet context. In this case, the Xlet will pause itself and then requests to resume as follows:\n\n","During the development of a BD-J Title Player, it is found very difficult to obtain the information (such as AppID and Base directory etc.) of Xlet Context while playing the BD-J Title under the following reasons:\n\n","Since the BD-J Title comprises high resolution AV stream and Xlet interface for implementing the interactive application while playing the BD-ROM, wherein the BD-J Title includes a variety of Xlets for different application purposes respectively and the environment of running the BD-J Title allows a plurality of Xlets to be executed simultaneously and to communicate with each other, so as to create a powerful interactive environment for the user. However, executing a plurality of Xlets simultaneously will eventually cause the following problems:\n\n","In order to effectively resolve the above problems, the ideal platform for playing the BD-ROM should have lesser quantity of Thread and occupy lesser resources of the CPU and memory than the conventional platform. Otherwise, it is almost impossible for the user to have a platform for enjoying a smooth and fluent high resolution AV stream from the BD-ROM and the interactive environment thereof.","In view of the foregoing shortcomings of the prior art, the inventor of the present invention based on years of experience to conduct extensive researches and experiments and finally invented a method for enabling BD-J to effectively obtain corresponding context of an xlet while playing the BD-J Title.","A primary objective of the present invention is to provide a method for enabling BD-J to effectively obtain context of the corresponding Xlet while playing BD-J title, which comprises the steps of retaining stack information in each thread while creating the thread, setting up source file attribute of each class by adding an Xlet Context ID as an unique code of the class when loading all classes into a cache of BD-J Title; looking up back onto a call stack to search for Xlet class of the current BD-J Title when searching for Xlet context; and then obtaining Xlet context through the Xlet context ID according to the source file attribute. Thus, the method of the present invention enables BD-J to normally play the BD-J title in the BD-ROM and, at the same time, effectively improves the playing performance.","To make it easier for our examiner to understand the objective of the invention, its structure, innovative features, and performance, we use a preferred embodiment together with the attached drawings for the detailed description of the invention.","In general, a BD-J application is a set of BD-J classes that operate together and need to be signaled as a single instance to the application manager so that it is aware of its existence and can control its lifetime through a lifecycle interface. When a BD-J Title associated with a BD-J Object in the Index Table on a BD-ROM disc is selected, the corresponding BD-J application is automatically launched and its lifecycle is bound to the BD-J Title. A BD-J application is a Javan Xlet which is controlled by the BD-ROM player's Application Manager through BD-J Application Interface (API). The BD-J Application Interface is also called Xlet interface which, as mentioned above, has four states, i.e. loaded, paused, active and destroyed. Once an Xlet is destroyed, any resources allocated to it, such as memory and AV control, shall be released.","Referring to , which illustrates an architecture for describing how the BD-J software elements are organized, the BD-J architecture consists of the following three layers:\n\n","The Xlet interface  (i.e. BD-J API) lies between the Xlets  and the BD-J Module . The Xlets  use the Xlet interface  to access the actual resources  of the BD-J system, including BD-ROM file-system, BD-ROM media decoders, static content decoders, storage devices and a network connection etc. These resources  are functional entities of the BD-J system and may be finally mapped onto the hardware of the BD-J system in some manner.","Under the conventional mode, when an Xlet creates a Thread by using a new Thread (Runnable) method, since only call stack of the current Tread can be viewed from the stack of Java virtual machine  (JVM), the Xlet is unable to search and obtain the corresponding Xlet class through the stack. In order to solve the above drawback, this invention adjusts and amends the implementation of the Thread by retaining the stack information in each Thread while creating the Thread, and then provide an innovative method enabling BD-J to effectively obtain context of a corresponding Xlet while playing BD-J Title, of which a preferred embodiment comprising the following steps is illustrated in :\n\n","Summing up the above, the present invention provides the method enables BD-J to normally play the BD-J title in the BD-ROM and, at the same time, effectively improves the playing performance.","While the invention herein disclosed has been described by means of specific embodiments, numerous modifications and variations could be made thereto by those skilled in the art without departing from the scope and spirit of the invention set forth in the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0039"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0040"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0041"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0042"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0043"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0044"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0045"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0027","num":"0046"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0047"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0048"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
