---
title: Optimization system for controlling batch job processing traffic transmitted to a mainframe computer
abstract: A system for enrollment processing optimization for controlling batch job processing traffic transmitted to a mainframe computer includes an enrollment data input operations system operatively coupled to the mainframe computer and configured to provide a universal front end for data entry of enrollment information. Enrollment records based on the enrollment information is then created. A database system stores the enrollment records, and a workflow application module operatively coupled to the database system is configured to manage processing of the enrollment records and manage transmission of the enrollment records to the mainframe computer for batch processing. A batch throttling control module operatively coupled to the workflow application module and to the mainframe computer controls the rate and the number of enrollment records transmitted by the workflow application module to the mainframe computer for batch processing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08281309&OS=08281309&RS=08281309
owner: Accenture Global Services Limited
number: 08281309
owner_city: Dublin
owner_country: IE
publication_date: 20090831
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Technical Field","This disclosure relates to membership enrollment processing in a healthcare service organization. In particular, this disclosure relates to optimization of data entry for member information and enrollment processing in a distributed processing center.","2. Background","Enrollment services for the healthcare industry are labor intensive because the primary function of such services involves inputting member data, where data from a member (enrollee) or the employer of the member must be entered into one or more large computing systems, such as a mainframe computing system. Processing of the member data may also be time consuming, particularly if errors are encountered. Currently, the healthcare industry employs a large number of data entry workers at an enrollment center, often located offshore, to manually handle the data entry tasks. An enrollee or the enrollee's employer typically fills out insurance-related paperwork and documentation, and submits the paperwork to the enrollment center. The enrollment center receives the paperwork as a computer document image (or converts the paperwork to an image document, such as a PDF-type document).","Once the data from the enrollee has been entered into a document, the document is transmitted to the mainframe computing system for batch processing. The mainframe computing system typically processes the batch without regard to any additional processing capability that may be directed to the batch process. Also, unavailability of the mainframe system often limits productivity at the enrollment center, because even though the enrollment center may be capable of operating 24 hours per day, the availability of the mainframe computing system may be limited to specific hours.","Further, when the mainframe computing system is down or otherwise unavailable, the enrollment center operations come to a halt. Additionally, it is very difficult to balance the workload, especially during peak times or seasonal periods, such as the end of the year, when workloads are extremely high.","Accordingly, there is a need for a processing system that permits enrollment center operations to continue during periods of time when the mainframe computing system is not operational, permits optimization of the various batch processes, efficiently distributes processing workloads across geographically separate enrollment centers, increases the efficiency of the enrollment center operation, and improves throughput of healthcare-related enrollment forms.","A system for enrollment processing optimization controls batch job processing traffic transmitted to a mainframe computer. The system includes an enrollment data input operations system operatively coupled to the mainframe computer and configured to provide a universal front end for data entry of enrollment information and to create a plurality of enrollment records based on the enrollment information. A database system stores the enrollment records, and a workflow application module operatively coupled to the database system is configured to manage processing of the enrollment records and manage transmission of the enrollment records to the mainframe computer for batch processing. A batch throttling control module operatively coupled to the workflow application module and to the mainframe computer controls the rate and the number of enrollment records transmitted by the workflow application module to the mainframe computer for batch processing.","A method for enrollment processing optimization that controls batch job processing traffic or records in a distributed system that are transmitted to a mainframe computer is also disclosed. The method includes providing a front end data entry system for data entry of enrollment information, creating enrollment records based on the enrollment information, and storing the enrollment records in a database system. The method manages the processing of the enrollment records and the transmission of the enrollment records to the mainframe computer for batch processing. The method also modulates the rate and the number of enrollment records transmitted to the mainframe computer based on parameters corresponding to execution of the enrollment records by the mainframe computer.","Other embodiments of the systems, methods, features, and their corresponding advantages will be, or will become, apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems, methods, features, and advantages be included within this description, be within the scope of the invention, and be protected by the following claims.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","120","128","128","128","120","122","122"]},"The system for enrollment processing optimization  is coupled to one or more mainframe computer systems , which may in some embodiments be remotely located from the enrollment data input operations system  and\/or the system for enrollment processing optimization , and which may be operatively coupled via a communications network or Internet pathway. Although some embodiments describe a mainframe computer  remotely located from the enrollment data input operations system  and from the enrollment processing optimization , in other embodiments, the mainframe computer  need not be remotely located and instead may be co-located or located in close proximity with the enrollment data input operations system  and the system for enrollment processing optimization .","The mainframe computer  may include, for example, a first mainframe computer , a second mainframe computer , and a third mainframe computer . Any suitable number of mainframe computers  may be used depending on the scale of the facility in which they are located and scope of operations. In many facilities, the system for enrollment processing optimization  may communicate with a plurality of different mainframe computers , each with differing input format requirements.","Note that although the preferred embodiment uses a mainframe computer  as described herein, any equivalent or similar computing system may be used, including but not limited to systems executing batch processing jobs, minicomputers of sufficient processing capability, cloud computing facilities, multi-parallel processing systems, or any suitable computing platform.","A workflow application module  is operatively coupled to the database  and to the enrollment data input operations system . The workflow application module  is a primary software component of the system for enrollment processing optimization , and controls the pertinent processing steps and manages the transmission of the batch jobs to the mainframe computer . The logical operation of the workflow application module  is shown in  described below. The workflow application module  may also include a document conversion module  to facilitate conversion of the records into the appropriate format required by the different mainframe computers , which may require differing data input formats. Suitable conversion modules may be known commercially available conversion modules implementing XML or other software schema and transformation logic.","The system for enrollment processing optimization  also includes a batch throttling control module , which is operatively coupled to the workflow application module  and to the mainframe computers . The logical operation of the batch throttling control module  is shown in . Preferably, the mainframe computers  process data in a batch format. A batch or batch job may include multiple records, where each record may represent a paper form or image of a paper form in which data has been entered by the enrollee or an agent for the enrollee. In the environment of the system for enrollment processing optimization , such data or image of a paper form represents the enrollment information for a person or family in a healthcare provider organization.","The system for enrollment processing optimization  may be embodied as a system cooperating with computer hardware components and\/or as computer-implemented methods. The system for enrollment processing optimization  may include a plurality of software modules or subsystems. The modules or subsystems, such as the workflow application module  and the batch throttling control module , may be implemented in hardware, software, firmware, or any combination of hardware, software, and firmware, and may or may not reside within a single physical or logical space. For example, the modules or subsystems referred to in this document and which may or may not be shown in the drawings, may be remotely located from each other and may be coupled by a communication network.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2","b":["200","120","200","214","216","218","220","222","226","200","228","228"]},"The memory subsystem  may include any suitable storage components, such as RAM, EPROM (electrically programmable ROM), flash memory, dynamic memory, static memory, FIFO (first-in, first-out) memory, LIFO (last-in, first-out) memory, circular memory, semiconductor memory, bubble memory, buffer memory, disk memory, optical memory, cache memory, and the like. Any suitable form of memory may be used, whether fixed storage on a magnetic medium, storage in a semiconductor device, or remote storage accessible through a communication link. A user or system manager interface  may be coupled to the data entry computer  and may include various input devices , such as switches selectable by the system manager and\/or a keyboard. The user interface also may include suitable output devices , such as an LCD display, a CRT, various LED indicators, a printer, and\/or a speech output device, as is known in the art.","To facilitate communication between the data entry computer  and external sources, a communication interface  may be operatively coupled to the computer system. The communication interface  may be, for example, a local area network, such as an Ethernet network, intranet, Internet, or other suitable network . The communication interface  may also be connected to a public switched telephone network (PSTN)  or POTS (plain old telephone system), which may facilitate communication via the Internet . Any suitable commercially-available communication device or network may be used.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3","b":["300","120","148","140","304"]},"The enrollment transaction is then uploaded to the workflow application module  () by the client or vendor. The client or vendor may be any healthcare provider or vendor, such as WellPoint Corp., Blue Cross\/Blue Shield Corp., Aetna Corp., or any other healthcare organization. The workflow application module  maintains each document as a record in the database  or in a related database management system.","Next, the document is requested and retrieved from the workflow application module  (), and the appropriate mainframe computer  is selected to process the document (). The selected transaction may be processed by one of the plurality of mainframe computers  based on the specific configuration of the mainframe computing environment. The document is then processed as a transaction ().","Note that each mainframe computer  may require that the document received be in a specific type of format, and such formats may differ among the multiple mainframe computers (, , ). Accordingly, the document conversion module  of the workflow application module  selects the appropriate mainframe computer and converts the document into the appropriate format required by the selected mainframe computer (, , ).","Each document is then inspected to determine if it is complete or if information is missing (). If information is missing, the document is returned to the vendor () for updating. Once the document has been updated by the vendor and returned, the workflow status is then updated (). The document is then processed by the mainframe computer  (), the workflow status is updated (), and processing is deemed completed.","If the document is complete and no information is missing (), the document is checked to determine if any of the information is out of scope or if the document requires special handling (). If the document is in an acceptable state, the workflow status is updated (), and the document is sent to the mainframe computer  for batch processing (). If the mainframe computer  accepts and processes the document successfully (), processing of the form is deemed completed and processing terminates.","If the transaction was not accepted by the mainframe computer  (), the transaction is sent to a fallout queue for additional processing (). Rejection of the document by the mainframe computer system  may be a result of conflicts in the business rules used to process the transaction. For example, a rejection may result if the wrong group number or policy number has been entered into the document or if such policy number or group number has not yet been opened.","The transaction is then retrieved from the fallout queue to determine if the error can be resolved (). Correction of the error in one specific embodiment may be a manual or a human-assisted operation rather than an automatic operation. Accordingly, human personnel may be needed to determine the corrective action to be applied, if applicable. If the error in the transaction is minor and can be corrected, the transaction is finalized () and it is sent back for processing and workflow update (). If the error cannot be corrected at this stage (), a decision is made to determine whether the transaction can be manually processed using more experienced personnel or human \u201cexperts\u201d to correct the error (). If the transaction can be corrected manually by the expert, the transaction is processed (), the workflow status is updated (), and the processing of the transaction is deemed completed.","If the transaction cannot be manually processed (), the transaction is sent back to the vendor for modification and\/or correction (). Upon return of the corrected transaction from the vendor, the workflow status is updated (). If the transaction is out of scope or requires special handling (), the document is sent to the special processing queue for additional processing (). Examples of errors that may cause a transaction to be sent to the special processing queue may include entry of a date in an incorrect format, entry of an incorrect ZIP code, or other minor typographical errors. Next, a determination is made to verify that the transaction can be completed (). If the transaction can be completed, the transaction is finalized (). If not, the transaction is checked to determine if the transaction can be manually processed (). The documents are returned to the vendor () for correction if the transaction cannot be completed.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 4","b":["400","100","402","404","406","408","412"]},"In one specific example, many hundreds or perhaps thousands of FTEs may be employed, although the number of FTEs may be based on the size and scope of the operation or business. In some embodiments, the enrollment operations facilities or an enrollment center  may be located overseas to take advantage of lower labor costs. In some systems not using the system for enrollment processing optimization, use of separate and geographically diverse enrollment centers is inefficient because workload balancing between the various enrollment operations cannot be accomplished. Further, in such enrollment operations centers, when the mainframe computer is down, FTEs are unable to perform data processing, which results in a sharp decrease in productivity.","The system for enrollment optimization  may be used to balance the workload  across separate and geographically diverse enrollment operations or enrollment centers . The system  may also be used to improve efficiency and productivity  because the FTEs are able to perform the data entry tasks on a continuous basis. Using the system for enrollment processing optimization , the FTEs are able to continue working even when the mainframe computer  is not operational, is down for maintenance, or when batch processing is not scheduled. This is possible because the data entry operations are buffered and stored in the database  and subsequently released to the mainframe computer in  under the control of the workflow application module  and the batch throttling control module . This leads to substantial cost savings through improved productivity, and may also result in a decrease in the number of required FTEs. Further, the system for enrollment optimization  increases shift utilization  thus reducing labor costs .","With respect to batch processing generally, records or transactions are processed in a sequential manner. That is, each record or transaction is fully processed before the next record or transaction is accessed in the batch. However, although the batch is processed in a sequential manner, the various jobs running on the mainframe computer  may be processed or serviced in a round-robin approach or time-slice approach along with other mission-critical applications such that the entire batch receives its allotted processing portion, where the individual jobs processed by the mainframe computer  are controlled by the operating system of the mainframe computer.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 5","FIGS. 10A and 10B"],"b":["162","502","504","504","162","510","514","148","140","510","162","510","520","522","526","528","530","148","140"]},"Batch throttling control within the workflow application module  modulates the workload from the enrollment data input operations system . Modulation increases predictability of the system and prevents a large number of records from being released for batch processing in a relatively short period of time. This could adversely impact processing of the batch files and\/or performance of other mission-critical applications that the mainframe computer  may be handling because the mainframe computer does not distinguish the source of the records that it receives for processing. In other words, it is usually the case that the mainframe computer  cannot limit the input from a particular source. Accordingly, if one particular application, such as the workflow application module , were to overload the mainframe computer and fill the input queue of the mainframe computer , the mainframe computer may neglect to perform other important or critical applications.","In one embodiment of the system for enrollment optimization , static throttling may be set as a default condition used to initially control and track system processing workflow through the workflow application module . Static throttling schedules batch processes based on the availability of computing capacity in the mainframe computer  at specific times during the day.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 6","b":["502","606","608","616","620","622","140","140"]},"With respect to the start of batch time  and the end of batch time , system personnel or other personnel tasked supervising the mainframe computer  may mandate, for example, that the batch be run from 9:00 AM to 11:00 AM, and only during that time. Accordingly, the batch start time  and the batch end time  determine exactly when the batch is to be processed.","With respect to the maximum number of records , if the enrollment data input operations system  generates a greater number of records or transactions than is allowed to be sent to the mainframe computer  per the maximum number of records parameter , excess records may be held in an excess pending queue to be transmitted to the mainframe computer  and processed at a later time. Because this form of throttling is static in nature, the static throttling control module  does not vary the batch processing parameters to accommodate the excess records held in the queue. As such, the transactions held in the excess pending queue are processed in due course when processing capability is available by the mainframe computer .","If the processing time for any single record or transaction exceeds the amount of processing time specified by the maximum processing time per record , the transaction may be terminated or returned to an error queue to determine if a problem exists. The scheduling window size parameter  defines the number of seconds in which a batch process is available for execution, and may be dependent upon the type of mainframe computer  or other computer used in the system.","Turning now to the dynamic throttling control module , this module evaluates certain runtime and static parameters of the mainframe computer  to determine the appropriate execution or transmission rate of the batch records sent to the mainframe computer , thus modulating the workflow. Dynamic throttling reacts to the actual real-world source system or mainframe computer  performance that is monitored during execution, and detects runtime behavioral problems experienced by the mainframe computer .","Dynamic throttling prevents or reduces the backup of processing queues as a result of continued transaction traffic when the mainframe computer  is not available or if the mainframe computer  is experiencing degraded performance. When additional processing capacity is available from the mainframe computer , dynamic throttling can increase batch processing efficiency by spawning additional concurrent threads to be processed by the mainframe computer . Spawning additional concurrent threads instructs the mainframe computer  to operate as a parallel processing machine, consuming some or all of the additional processing capacity. Accordingly, the batch throttling control module  may increase or decrease the execution rate of batch records, or may keep the execution rate unchanged, depending on the runtime parameters evaluated and the particular rules applied.","With respect to distributed processing embodied in the system for enrollment processing optimization , and in particular, within the workflow application module , the dynamic throttling control is applied at the batch scheduling level in the distributed system, which is prior to when the batch records are transmitted to the mainframe computer . The dynamic throttling module  functions with respect to each particular distributed process. The dynamic throttling module  thereby controls the amount of data sent to the mainframe computer .","The dynamic throttling module  reacts to input parameters describing the operation of the mainframe computer . In one implementation, the dynamic throttling module  may consider three processing conditions, namely: 1) when the mainframe computer  is down, 2) when the mainframe computer  is providing degraded performance, and 3) when the mainframe computer  is providing better-than-expected performance.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIGS. 7-9","FIG. 7"],"b":["504","148","140","140","504","140"]},"The input parameter \u201csystem downtime error codes\u201d  represents error codes that describe the nature of the mainframe computer  error. The input parameter \u201cmaximum number of retries\u201d  represents the number of attempts to process a certain number of batches before declaring an error, and is typically set at between three and five retries. Thus, if a single error is returned after an attempt to execute the transaction, a system failure is not necessarily declared. Rather, the maximum number of retries must first be exceeded before the dynamic throttle control module  declares that the mainframe computer  is down. In that regard, it is possible to receive a transaction failure error due to network latency or network fluctuations, which do not represent true system errors. The input parameter \u201csleep duration before retry\u201d  represents the number of seconds or minutes between execution attempts, which is typically between five and ten minutes.","The input parameters shown in  represent how the dynamic throttling control module  handles a degradation in performance of the mainframe computer . When the processing ability of the mainframe computer  is degraded, the dynamic throttling control module  reduces the number of batch transactions or the rate of batch traffic sent to the mainframe computer . Such dynamic throttling helps ensure that an external process, such as the workflow application module , does not overload the mainframe computer .","The input parameter \u201cperformance degradation threshold\u201d  represents a period of time in which a transaction should typically be processed, and if that time is exceeded, the dynamic throttling control module  may deem the processing of the mainframe computer  as degraded. Typically, the range of this input parameter is between about 15 seconds to 20 seconds. The time in which the transaction should be processed means the \u201cround-trip\u201d or total time from when the record is placed into the system to the time when a response is received from the mainframe computer .","When the performance degradation threshold value  is exceeded, the dynamic throttling control module  declares that the performance of the mainframe computer  is degraded. The performance degradation threshold value  may be modified dynamically in real-time based upon real world circumstances. Degradation may occur because of hardware failures in the mainframe computer , such as loss of a processing a core, loss of RAM, loss of file space or disk space, or other hardware-related problems. Processing degradation may occur because other high priority jobs, unrelated to this batch job, may be taking priority, such as billing programs, accounts receivable programs, and claims processing programs, which are all executed on a mainframe computer .","The input parameter \u201cdecision sample size\u201d  represents the number of transactions or records that are evaluated before the dynamic throttling control module  declares that performance is degraded. In that regard, the delay of processing of a single record may not constitute a performance degradation because one or more false positive identifications may occur. Typically, at least 10 transactions must appear degraded before a true performance degradation is declared. If a performance degradation condition is declared, the dynamic throttling control module  reduces the processing rate expected for the records, and reduces the number of transactions sent to the mainframe computer .","The input parameters shown in  represent how the dynamic throttling control module  handles better-than-expected performance from the mainframe computer . When performance is better than anticipated, the dynamic throttling control module  may perform upward throttling to increase the rate of processing of the transactions in the batch, thus more transactions are sent to the mainframe computer  per unit of time.","The input parameter \u201cgood performance threshold\u201d  represents a low end of an optimistic value that indicates better-than-expected performance from the mainframe computer . This input parameter is a lower value of performance threshold, and may be in the range of between about 8 seconds and 10 seconds. Accordingly, if transactions are processed in less than 8 seconds, better-than-anticipated performance is declared, and the dynamic throttling control module  may increase the processing rate or transmission volume of the batch records to the mainframe computer .","The input parameter \u201cdecision sample size\u201d  represents a predefined number of samples or transactions that must surpass the good performance threshold before the dynamic throttling control module  increases the processing rate. This value may range between about 8 to 10 transactions. In other words, merely because better-than-expected performance occurs with one or two records does not necessarily indicate that the dynamic throttling control module  should increase the processing rate.","The input parameter \u201ccurrent pending transaction\u201d  represents the number of records or transactions in the batch that are waiting to be processed. These transactions may be held in a predetermined queue. The dynamic throttling control module  may evaluate this number when determining whether to increase the processing rate of the batch or maintain the processing rate at its current level. For example, if there are 100 records in the batch queue of the mainframe computer , 60 minutes may be allocated in which to process all of the 100 records.","Further, based on historical and other real-world conditions, the dynamic throttling control module  may receive an input or otherwise determine that only 30 minutes is required to process the 100 records. Accordingly, in this situation, even though the mainframe computer  is providing better-than-anticipated processing capability, the dynamic throttling control module  may nonetheless maintain the batch processing rate at its current level without upward throttling because all of the records will be processed in the allotted time.","Conversely, for example, there may be 200 records in the batch queue of the mainframe computer , and based on historical and other real-world conditions, the dynamic throttling control module  may ascertain that only 100 of the transactions can be processed in the allotted 60 minutes of processing time. In this case, assuming that the mainframe computer  is providing better-than-anticipated processing capability, the dynamic throttling control module  may increase the rate of processing of the batch transactions, thus effecting upward throttling.","To accomplish upward throttling, transactions or records may be sent to the mainframe computer  at a more rapid rate, or alternatively, additional processing threads may be spawned. Spawning additional threads causes the mainframe computer  to process records in a parallel fashion. For example, the workflow application module  may simultaneously send 10 records to the mainframe computer  with an indication that such records should be processed in parallel. Of course, this requires additional computing power, but the results of previously processed records indicate that additional computer capacity is available.","The input parameter \u201ctime to completion\u201d  represents the amount of time remaining in which to completely process all the transactions in the batch. This value is calculated based upon the average response time per transaction multiplied by the number of pending transactions in the batch queue.","The above described input parameters shown in  facilitate the dynamic throttling control module  to control how the batch transactions are transmitted to the mainframe computer  with respect to processing rate and transaction traffic flow. Note that the batch processing job (\u201cthe enrollment batch job\u201d) corresponding to the system for enrollment processing optimization  may not be the only job that is executing on a mainframe computer . In that regard, the mainframe computer  typically handles many varied processes and transactions (\u201cjobs\u201d), where the enrollment batch processing job is but one of many transaction jobs executing on the mainframe computer .","Accordingly, the dynamic throttling control module  implements the logic specific to the enrollment batch job to ensure efficient and timely processing of the enrollment batch job by monitoring in real time the various parameters and performance associated with the execution of each record or transactions in the enrollment batch job. In that regard, the dynamic throttling control module  may inspect the input parameters periodically or may check the input parameters after each individual transaction or record or group of transactions or records has been executed by the mainframe computer  so that system responses can be optimized on a transaction-by-transaction basis.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIGS. 10A and 10B","b":["1000","504","1002","1004","1006"]},"A variable representing the \u201cdecision sample size\u201d for the number of pending records in the database to be processed is read from system configuration parameters and the records are read from the database (). The decision sample size represents the number of records or transactions that must all pass a certain condition in order to trigger another condition.","If processing is set to \u201csequential\u201d mode (), then the decision sample size corresponding to the number of records to be processed in the database is transmitted to the mainframe computer, and sequential processing by the mainframe computer is requested () for the number of records defined by the \u201cdecision sample size.\u201d","If processing is not set to \u201csequential\u201d mode (), then \u201cparallel\u201d mode processing is assumed, and the decision sample size corresponding to the number of records to be processed in the database is transmitted to the mainframe computer, and parallel processing by the mainframe computer is requested () for the number of records defined by the \u201cdecision sample size.\u201d","Thus, the dynamic throttling control module  can direct the mainframe computer to process the records in either a sequential manner or a parallel manner. If the mainframe computer is directed to process the records in a parallel manner, then multiples threads are spawned and processed simultaneously by the mainframe computer. The dynamic throttling control module  will only request parallel processing by the mainframe computer if the processing performance of the mainframe computer meets certain criteria.","Next, the \u201ctime to completion\u201d is calculated (). The \u201ctime to completion\u201d is calculated as the \u201cscheduled window size\u201d (in units of time) minus the elapsed time since execution of the batch began. For example, if the \u201cscheduled window size\u201d is two hours and batch processing has consumed 10 minutes of processing time, then the \u201ctime to completion\u201d is one hour and 50 minutes, which represents the amount of time left in which to complete execution of the batch.","The \u201ctime to completion\u201d is then checked to see if the value is zero or has been exceeded (), meaning that batch processing is taking more time than has been allotted. If the value is less than or equal to zero, an indication is set to inform the dynamic throttling control module  that processing is running over budget (), and processing exits ().","If the batch is not running over the allocated processing time (), then the application queue size is calculated (). The application queue size is calculated as the value of the previous application queue size minus the value of the decision sample size. For example, the decision sample size may be equal to 10 records, and the application queue size may be equal to 100 records. The decision sample size of 10 is subtracted from the application queue size indicating that 10 records have been processed, thus only 90 records remain to be processed by the mainframe computer .","If there are no more pending records to be processed, as indicated by an application queue size equal to zero (), an indication is set to inform the workflow application module  that there are no more records to be processed (), and processing exits (). If the application queue size is not equal to zero (), then the error codes are checked () to determine if errors were detected during the processing of the records, the number of which is based on the value of the \u201cdecision sample size.\u201d","If a system down error code has been returned (), which indicates that the mainframe computer is down, then the number of retry attempts is checked () to determine if the number of retry attempts is greater than the maximum value allowed. If the number of retry attempts has been exceeded, the mainframe computer is deemed to be down, an indication is set (), and processing exits ().","If the maximum number of retry attempts has not been exceeded (), which indicates that the error code returned may not represent a true error, then the number of retries is incremented by one (), processing waits for a predetermined period of time (), for example, a few milliseconds, and processing then returns to step  to continue processing the batch records.","If no error codes were returned (), the processing response time for processing all the records defined by the \u201cdecision sample size\u201d is checked (). If some of the records defined by \u201cdecision sample size\u201d indicate that the records exhibited degraded performance (), then a determination is made to see if all of the records defined by the \u201cdecision sample size\u201d indicate that processing has exceeded a performance degradation threshold ().","If all the records defined by the \u201cdecision sample size\u201d indicate degraded performance by the mainframe computer, an indication is then set to inform the dynamic throttling control module  that the mainframe computer is operating at a degraded performance level (), and processing exits (). Once the indication of degraded performance has been set and processing exits, the dynamic throttling control module  can then determine the different throttling actions that may be taken to account for the degraded performance of the mainframe computer . If only some of the records, but not all the records exhibit degraded performance (), processing branches to calculate an estimated time for completion ().","If none of the records defined by the \u201cdecision sample size\u201d exhibit degraded performance (), the estimated time for completion is calculated (). The estimated time for completion is calculated based on the number of records remaining in the queue multiplied by the sum of the response times. Next, the number of retries is initialized to zero (). If the estimated time to completion is greater than the remaining allocated time for completion of the records in the queue (), processing is set to \u201csequential\u201d mode (), and processing branches to step  to continue processing the batch records.","If the estimated time to completion is not greater than the remaining allocated time for completion of the records in the queue (), processing is set to \u201csequential\u201d mode (). If the estimated time to completion is greater than the remaining allocated time for completion of the records in the queue (), processing is set to \u201cparallel\u201d mode (), which mandates that because the mainframe computer provided better-than-expected processing performance, the next iteration of processing should be performed in a parallel mode. Processing then branches to step .","The logic, circuitry, and processing described above may be encoded or stored in a machine-readable or computer-readable medium such as a compact disc read only memory (CDROM), magnetic or optical disk, flash memory, random access memory (RAM) or read only memory (ROM), erasable programmable read only memory (EPROM) or other machine-readable medium as, for examples, instructions for execution by a processor, controller, or other processing device.","The medium may be implemented as any device that contains, stores, communicates, propagates, or transports executable instructions for use by or in connection with an instruction executable system, apparatus, or device. Alternatively or additionally, the logic may be implemented as analog or digital logic using hardware, such as one or more integrated circuits, or one or more processors executing instructions; or in software in an application programming interface (API) or in a Dynamic Link Library (DLL), functions available in a shared memory or defined as local or remote procedure calls; or as a combination of hardware and software.","In other implementations, the logic may be represented in a signal or a propagated-signal medium. For example, the instructions that implement the logic of any given program may take the form of an electronic, magnetic, optical, electromagnetic, infrared, or other type of signal. The systems described above may receive such a signal at a communication interface, such as an optical fiber interface, antenna, or other analog or digital signal interface, recover the instructions from the signal, store them in a machine-readable memory, and\/or execute them with a processor.","The systems may include additional or different logic and may be implemented in many different ways. A processor may be implemented as a controller, microprocessor, microcontroller, application specific integrated circuit (ASIC), discrete logic, or a combination of other types of circuits or logic. Similarly, memories may be DRAM, SRAM, Flash, or other types of memory. Parameters (e.g., conditions and thresholds) and other data structures may be separately stored and managed, may be incorporated into a single memory or database, or may be logically and physically organized in many different ways. Programs and instructions may be parts of a single program, separate programs, or distributed across several memories and processors.","While various embodiments of the invention have been described, it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the invention. Accordingly, the invention is not to be restricted except in light of the attached claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The system may be better understood with reference to the following drawings and the description. The components in the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention. Moreover, in the figures, like reference numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 10A and 10B"}]},"DETDESC":[{},{}]}
