---
title: Windowing systems
abstract: A method of displaying a window on a screen is described, in which the window has a background through which underlying objects are visible. Also described are methods of managing windows when drawing takes place in a window which lies under such a window.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07068266&OS=07068266&RS=07068266
owner: Thomson Licensing S.A.
number: 07068266
owner_city: Boulogne-Billancourt
owner_country: FR
publication_date: 20000926
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["The invention relates to apparatus for and methods of displaying a window, drawing in a window and displaying a navigator display, a receiver\/decoder, a television system, a computer program product, a computer readable medium and a signal.","The invention has particular application to a windowing system for use with receiver\/decoders.","Reference is made to European Patent Applications Nos. 99402353.9, 99402721.7 and 00300832.3, whose content is herein incorporated by reference, and from which Convention priority is claimed.","Windowing systems are used to allow different window contents, for example graphical objects such as text or graphical images, to be displayed simultaneously in different areas, known as windows, on a screen. Windows in conventional windowing systems comprise rectangles in a area of which graphical objects may be drawn for display against an opaque background. Windows generally occupy a selected area of the screen, a size, a background colour and a position of a window normally being defined on opening the window and alterable after opening.","Conventional windowing systems may be inflexible in the way they allow information to be presented on the screen. For example, if two windows overlap, then the foremost window will obscure the overlapped part of the underlying window.","In a first aspect of the present invention there is provided a method of displaying a window on a screen wherein the window has a background through which underlying objects are visible. In one particularly preferred aspect this method is carried out by a receiver\/decoder, the receiver\/decoder being preferably for use with a television set.","The invention can provide the advantage that information may be presented on a screen with some or all of the benefits of a windowing system, whilst objects underlying the window may be at least partially seen through the window.","The invention stems from the realisation that windows may have a transparent background, provided certain precautions are taken. Such precautions include not drawing behind the window once the window has been drawn, or monitoring drawing behind the window to correct for any effects of the drawing.","The method may further comprise drawing a frame of the window, such that the limits of the window are visible. The size of the window may be independent of the size of the screen, and the window may be resizeable and moveable on the screen.","Preferably, the window forms part of a screen comprising a window display and the method further comprises combining the window display with a video image. The window display may be combined with the video image by blending the two, but may be simply overwritten on the (preferably larger area) video image, both preferably using hardware means, obscuring the video image behind the window display. Partly resulting from the increased compactness offered by transparent windows, this can minimise the intrusion of menus and the like on a video image, which can be particularly advantageous in the context of receiver\/decoders.","Preferably, the method further comprises displaying the window on a television screen. The present invention is particularly applicable to television displays, by comparison with blending methods, which are typically lower in contrast.","Preferably, the method further comprises the steps of:\n\n","This feature is also provided independently. Hence the invention also provides a method of displaying a window comprising the steps of defining the size of the window, drawing foreground objects in the window, and arranging the background of the window such that objects underlying the background are visible. The background is preferably those parts of the window in which no foreground objects are drawn.","The step of drawing foreground objects may comprise setting foreground pixels to desired values. The foreground objects may comprise any or all of a straight line, curved line, box, circle, triangle and typographical character, and preferably are drawn in at least two draw operations. The foreground objects may comprise interactive controls. Controls may be for example clickable buttons, radio buttons, text boxes, clickable arrows, and so on. This can allow floating panels of arbitrary shape to be created.","The step of arranging the background may comprise leaving at least one pixel value unaltered, or blending at least one pixel value with a pixel value of an underlying image, preferably in a region defining the background. In this way, underlying objects may be visible through the background, by making the background either partially or completely transparent.","In one embodiment, the background is completely transparent, and no background pixel values are drawn. In another embodiment, the background is assigned a transparency factor, and at least one background pixel value is blended with at least one pixel value of an underlying object in dependence on the transparency factor. This can allow images in the background to be visible at the same time as underlying objects. For example, the background may have a logo or watermark which is visible, but through which underlying objects may be seen. The transparency factor may be adjustable, for example by the user or under control of the client of the window. In a further embodiment, different transparency factors are assigned to different parts of the background. For example, some parts of the background may be completely transparent, while other parts may have background pixel values which are blended with pixel values of underlying objects.","Preferably, at least one of the objects underlying the background comprises an element of a web page; the element could for example be text, a hyperlink, or other HTML element. In this way, more flexible shapes can be allowed for a control panel, for example to allow a navigation bar to be displayed more efficiently, giving a bigger view of a web page.","The method may further comprise displaying a further window which has a background through which underlying objects are visible; hence more than one \u201ctransparent window\u201d may be provided. To achieve stacked transparent windows, at least a part of the first window may underlie the further window.","A problem which has been identified pursuant to the present invention is that drawing in a window which lies underneath a window with a transparent background may result in corruption of images in the transparent window. For example, foreground objects in a transparent window may be overwritten by the drawing. The method may therefore further comprise monitoring drawing in a further window so that drawing in the further window affecting said window can be corrected.","This feature may also be provided independently, and thus the invention also provides a method of drawing in a window, preferably a window which may lie at least partially under an overlying window having a background through which underlying objects are visible, the method comprising drawing in the window and monitoring the drawing so that drawing affecting an overlying window can be corrected, the method being preferably carried out by a receiver\/decoder.","In order to correct drawing in the overlying window, the method may further comprise determining a window which may be affected by the drawing, and sending a signal (for example, an expose event) instructing a client of the window which may be affected to redraw at least part of that window.","The signal may be a Java event; it may also be a message, preferably sent via a function call.","In one embodiment a signal may be sent following each drawing operation. However, it has been discovered pursuant to the present invention that sending signals in this way may lead to a large number of redrawing operations, with the result that a large amount of processing is dedicated to redrawing. According to a preferred embodiment of the invention this problem is overcome by suppressing the sending of a signal for at least one drawing operation. The term \u201csuppressing the sending of a signal\u201d, and like terms, as used herein preferably connotes the signal either not being sent or not being received. For example, intercepting and removing a signal in transit between two parties, and not sending the signal in the first place both constitute a suppression of the signal.","The feature may also be provided independently, and thus in another aspect of the invention there is provided a method of drawing in a window, preferably a window which may lie at least partially under a window having a background through which underlying objects are visible, the method comprising providing a first mode in which a signal (for example, an expose event) is sent following each drawing operation instructing a client of a window which may be affected by the drawing to redraw at least part of that window, and providing a second mode in which the sending of a signal is suppressed.","The above aspect of the invention can provide the advantage that relatively simple drawing operations may be carried out in the first mode, in which case the affected windows will be continually updated, whereas more complex multiple drawing operations may be carried out in the second mode, which may reduce the amount of processing associated with redrawing.","The signal may be sent from a window manager. Alternatively, the signal may be sent from a client of a window, preferably sent by the client which carried out the drawing, and preferably sent to a window manager. The method preferably further comprises making information relating to the transparency of the window available to the window manager, and the method may further comprise storing the information as an attribute of the window. By making information relating to the transparency of a window available to the window manager, operations such as redrawing can be performed in a centralized and efficient manner. Moreover, less work can be required in order to add the feature of transparent windows to an application, and the amount of extra coding required in each application to implement transparent windows can be reduced.","The term \u201cattribute of a window\u201d as used herein preferably connotes some form of data associated with a window, the data being understood by the window manager and typically stored in a block of memory maintained by the window manager and containing other window attributes. Preferably, the method further comprises sending the information to the window manager, preferably in a message or via a function call. The sending of a signal may be suppressed in dependence on the information.","The sending of a signal may be suppressed in dependence on the relationship of the windows. For example, it may be known that windows having a certain relationship to an active window which is drawn in do not overlap with that window, in which case some processing may be saved by ignoring such windows. For example, windows having the following relationship to the active window could be ignored:\n\n","Alternatively, all windows could be ignored, or all transparent windows could be ignored.","The method may further comprise sending a signal following a number of drawing operations, the number preferably being determined in advance of at least one drawing operation, and preferably being greater than 1, 3, 5, 10, 30, 50 or 100. This can be more efficient than redrawing after each drawing operation, but can avoid the situation where, if a large number of drawing operations is to be performed at one go, the overlying window is not redrawn for a significant length of time (which can be aesthetically displeasing). The method may further comprise redrawing at least part of the window which may be affected.","In another aspect of the invention there is provided a method of drawing in a windowing system in which drawing in a window is monitored and a signal is sent to at least one other window which may be affected by the drawing, the method further comprising selecting a mode in which a signal to at least one other window is suppressed for at least one drawing operation.","The above method may further comprise selecting a mode in which a signal is sent to said at least one other window, following said at least one drawing operation. The signal may be a signal instructing a client of a window that may be affected by the drawing to redraw at least part of that window.","The present invention also provides a method of displaying a window, comprising providing a window manager which manages the display of the window, and passing information relating to the transparency of the window to the window manager.","Preferably, the window manager forms part of a virtual machine.","The invention further provides a method of displaying a navigator display, preferably for a web browser, wherein the navigator display comprises at least one window having a transparent background.","The transparent background may generally be located outside the foreground. The method may be carried out by a receiver\/decoder, the receiver\/decoder preferably being for use with a television set.","The invention is applicable to any windowing system, for example for use with a computer. However the invention has particular application with receiver\/decoders, and thus the method may be carried out by a receiver\/decoder. Receiver\/decoders typically have reduced processing power in comparison to personal computers, and thus embodiments of the invention which reduce the processing involved are particularly suited for use with receiver\/decoders.","In another aspect of the invention there is provided a method of displaying windows on a screen, comprising:\n\n","The method may further comprise determining a part of the first window which overlaps the second window, and the step of redrawing may comprise redrawing that part of the first window.","In another aspect of the invention there is provided a method of displaying a transparent window and a determined content of this transparent window on an area of a screen, comprising:\n\n","According to a related aspect of the invention, there is provided a receiver\/decoder comprising means (typically in the form of a processor) for displaying a window on a screen, wherein the window has a background through which underlying objects are visible, the receiver\/decoder preferably being for use with a television set.","The receiver\/decoder may further comprise means (typically in the form of a processor) for drawing a frame of the window. The displaying means is preferably adapted to display a window which forms part of a screen comprising a window display, and the receiver\/decoder preferably further comprises means for combining the window display with a video image. The displaying means is preferably adapted to display the window on a television screen.","The receiver\/decoder may further comprise:\n\n","The invention extends to a receiver\/decoder comprising:\n\n","The means for drawing foreground objects may be adapted to set foreground pixels to desired values. The foreground objects may comprise any or all of a straight line, curved line, box, circle, triangle and typographical character, and preferably are adapted to be drawn in at least two draw operations. The foreground objects may comprise interactive controls.","The arranging means is preferably adapted to leave at least one pixel value unaltered in a region defining the background. It may be adapted to blend at least one pixel value with a pixel value of an underlying image, in a region defining the background. It may be adapted to leave at least one foreground pixel unaltered.","At least one of the objects underlying the background may comprise an element of a web page.","The receiver\/decoder may further comprise means (typically in the form of a processor) for displaying a further window which has a background through which underlying objects are visible. At least a part of the first window may underlie the further window.","The receiver\/decoder may further comprise means (typically in the form of a processor) for monitoring drawing in a further window so that drawing in the further window affecting said window can be corrected.","The invention extends to a receiver\/decoder, comprising:\n\n","The receiver\/decoder may further comprise means for determining a window which may be affected by the drawing, and for sending a signal instructing a client of the window which may be affected to redraw at least part of that window. The signal may be a Java event. It may be sent following each drawing operation.","The receiver\/decoder may further comprise means for suppressing the signal for at least one drawing operation.","The invention extends to a receiver\/decoder comprising means for drawing in a window, in first and second modes, wherein in the first mode a signal is sent following each drawing operation instructing a client of a window which may be affected by the drawing to redraw at least part of that window, and in the second mode the sending of a signal is suppressed.","The signal may be sent from a window manager. The signal may be sent from a client of a window, and is preferably sent by the client which carried out the drawing, and is preferably sent to a window manager.","The receiver\/decoder may further comprise means for making information relating to the transparency of the window available to the window manager. It may further comprise means for storing the information as an attribute of the window. It may further comprise means for sending the information to the window manager, preferably in a message or via a function call.","The sending of a signal may be suppressed in dependence on the information. The sending of a signal may be suppressed in dependence on the relationship of the windows.","The receiver\/decoder may further comprise means for sending a signal following a number of drawing operations, the number preferably being determined in advance of at least one drawing operation, and preferably being greater than 1, 3, 5, 10, 30, 50 or 100.","The receiver\/decoder may further comprise means for redrawing at least part of the window which may be affected.","In an apparatus aspect of the invention there is provided apparatus for displaying a window comprising means for defining the size of the window, means for drawing foreground objects in the window, and means for arranging the background of the window such that objects underlying the background are visible.","The apparatus may further comprise means for drawing a frame of the window.","The means for drawing foreground objects may comprise means for setting foreground pixels to desired values, and the means for arranging the background may be adapted to leave at least one pixel value unaltered, or to blend at least one pixel value with a pixel value of an underlying image, in a region defining the background.","The apparatus may further comprise means for monitoring drawing in a further window so that drawing in the further window affecting said window can be corrected.","In another apparatus aspect there is provided apparatus for drawing in a window, preferably a window which may lie at least partially under an overlying window having a background through which underlying objects are visible, comprising means for drawing in the window and means for monitoring the drawing so that drawing affecting an overlying window can be corrected.","The apparatus may further comprise means for determining a window which may be affected by the drawing, and means for sending a signal instructing a client of the window which may be affected to redraw at least part of that window.","The apparatus may be adapted to send a signal following each drawing operation, or the apparatus may be adapted to suppress the sending of a signal for at least one drawing operation.","In another apparatus aspect there is provided apparatus for drawing in a window, preferably a window which may lie at least partially under a window having a background through which underlying objects are visible, the apparatus having a first mode in which a signal is sent following each drawing operation instructing a client of a window which may be affected by the drawing to redraw at least part of that window, and a second mode in which the sending of a signal is suppressed.","The apparatus may be adapted to suppress the sending of a signal in dependence on the relationship of the windows. The apparatus may be adapted to send a signal following a number of drawing operations.","The apparatus may further comprise means for redrawing at least part of the window which may be affected.","In another apparatus aspect there is provided apparatus for drawing in a windowing system in which drawing in a window is monitored and a signal is sent to at least one other window which may be affected by the drawing, the apparatus comprising means for selecting a mode in which a signal to at least one other window is suppressed for at least one drawing operation.","The apparatus may further comprise means for selecting a mode in which a signal is sent to said at least one other window, following said at least one drawing operation. The signal may be a signal instructing a client of a window that may be affected by the drawing to redraw at least part of that window.","In a related aspect, the present invention provides apparatus for drawing in a windowing system, comprising:\n\n","The apparatus preferably further comprises means for selecting a mode in which a signal is sent to said at least one other window, following said at least one drawing operation. The signal may be a signal instructing a client of a window that may be affected by the drawing to redraw at least part of that window.","The invention further extends to apparatus for displaying a window, comprising:\n\n","Preferably, the window manager forms part of a virtual machine.","The invention also extends to apparatus for displaying a navigator display, comprising means (typically in the form of a processor) for displaying the navigator display in such a way that the navigator display comprises at least one window having a transparent background.","Any of the above apparatus may be a receiver\/decoder, and hence the invention further extends to a receiver\/decoder comprising apparatus as aforesaid.","The invention extends to a television system, comprising a receiver\/decoder as aforesaid and a television set connectable to the receiver\/decoder. It also extends to a television system, comprising a receiver\/decoder as aforesaid and a television set connected to the receiver\/decoder.","According to the present invention, there is provided in a further aspect a receiver\/decoder for displaying windows on a screen, comprising:\n\n","According to the present invention there is provided in a further aspect a computer program product for use with a receiver\/decoder, said computer program product (under the control of the program) comprising code for displaying a window on a screen, wherein the window has a background through which underlying objects are visible, the receiver\/decoder preferably being for use with a television set.","The computer program product may be tangibly embodied for example as software stored on a storage medium such as a hard disk or volatile or non-volatile memory, or as a signal.","The computer program product may further comprise code for drawing a frame of the window.","Preferably, the displaying code is adapted to display a window which forms part of a screen comprising a window display, and the product further comprises code for combining the window display with a video image. The displaying code may be adapted to display the window on a television screen.","The computer program product may further comprise:\n\n","The invention extends to a computer program product comprising:\n\n","Preferably, the code for drawing foreground objects is adapted to set foreground pixels to desired values. Preferably, the foreground objects comprise any or all of a straight line, curved line, box, circle, triangle and typographical character, and preferably are adapted to be drawn in at least two draw operations. Preferably, the foreground objects comprise interactive controls.","The arranging code may be adapted to leave at least one pixel value unaltered in a region defining the background. The arranging code may be adapted to blend at least one pixel value with a pixel value of an underlying image, in a region defining the background. The arranging code may be adapted to leave at least one foreground pixel unaltered.","At least one of the objects underlying the background may comprise an element of a web page.","Preferably, the computer program product further comprises code for displaying a further window which has a background through which underlying objects are visible.","At least a part of the first window may underlie the further window.","The computer program product may further comprise code for monitoring drawing in a further window so that drawing in the further window affecting said window can be corrected.","The invention extends to a computer program product, comprising:\n\n","The computer program product may further comprise code for determining a window which may be affected by the drawing, and for sending a signal instructing a client of the window which may be affected to redraw at least part of that window. The signal may be a Java event. The signal may be sent following each drawing operation.","Preferably, the computer program product further comprises code for suppressing the signal for at least one drawing operation.","The invention extends to a computer program product comprising code for drawing in a window, in first and second modes, wherein in the first mode a signal is sent following each drawing operation instructing a client of a window which may be affected by the drawing to redraw at least part of that window, and in the second mode the sending of a signal is suppressed.","The signal may be sent from a window manager. The signal may be sent from a client of a window, and is preferably sent by the client which carried out the drawing, and is preferably sent to a window manager.","Preferably, the computer program product further comprises code for making information relating to the transparency of the window available to the window manager.","Preferably, the computer program product further comprises code for storing the information as an attribute of the window.","Preferably the computer program product further comprises code for sending the information to the window manager, preferably in a message or via a function call.","The sending of a signal may be suppressed in dependence on the information. The sending of a signal may be suppressed in dependence on the relationship of the windows.","The computer program product may further comprise code for sending a signal following a number of drawing operations, the number preferably being determined in advance of at least one drawing operation, and preferably being greater than 1, 3, 5, 10, 30, 50 or 100.","The computer program product may further comprise code for redrawing at least part of the window which may be affected.","The invention extends to apparatus for drawing in a windowing system, comprising:\n\n","The apparatus may further comprise code for selecting a mode in which a signal is sent to said at least one other window, following said at least one drawing operation. The signal may be a signal instructing a client of a window that may be affected by the drawing to redraw at least part of that window.","The invention extends to apparatus for displaying a window, comprising:\n\n","The window manager may form part of a virtual machine.","The invention further extends to apparatus for displaying a navigator display, comprising code for displaying the navigator display in such a way that the navigator display comprises at least one window having a transparent background.","The invention also extends to a computer program product for displaying windows on a screen, comprising:\n\n","The invention also provides a computer readable medium having stored thereon a program for carrying out any of the methods described above, and a computer program product comprising a program for carrying out any of the methods described above.","The invention further extends to a computer program product comprising a memory and processor, the memory having stored therein an application, and the processor (under the control of the application) being adapted to carry out the method as aforesaid.","The invention also extends to a computer program product comprising a program for carrying out the method as aforesaid.","The invention yet further extends to a computer readable medium having stored thereon a program for carrying out the method as aforesaid.","The invention extends to a computer readable medium having stored thereon a computer program product as aforesaid.","The invention also extends to a signal tangibly embodying a computer program product as aforesaid.","The invention also provides a method and apparatus substantially as described with reference to and as illustrated in the accompanying drawings.","Features of one aspect may be applied to other aspects and method features may be applied in any combination to features relating to any of an apparatus, receiver\/decoder, computer program product, or computer readable medium, and vice versa. For example, there may be provided apparatus for displaying a navigator display which performs a method of passing information relating to the transparency of a window to a window manager, and so on.","Digital Television System","An overview of a digital television system  is shown in . The invention includes a mostly conventional digital television system  that uses the known MPEG-2 compression system to transmit compressed digital signals. In more detail, MPEG-2 compressor  in a broadcast centre receives a digital signal strewn (typically a stream of video signals). The compressor  is connected to a multiplexer and scrambler  by linkage .","The multiplexer  receives a plurality of further input signals, assembles the transport stream and transmits compressed digital signals to a transmitter  of the broadcast centre via linkage , which can of course take a wide variety of forms including telecommunications links. The transmitter  transmits electromagnetic signals via uplink  towards a satellite transponder , where they are electronically processed and broadcast via notional downlink  to earth receiver , conventionally in the form of a dish owned or rented by the end user. Other transport channels for transmission of the data are of course possible, such as terrestrial broadcast, cable transmission, combined satellite\/cable links, telephone networks etc.","The signals received by receiver  are transmitted to an integrated receiver\/decoder  owned or rented by the end user and connected to the end user's television set . The receiver\/decoder  decodes the compressed MPEG-2 signal into a television signal for the television set . Although a separate receiver\/decoder is shown in , the receiver\/decoder may also be part of an integrated digital television. As used herein, the term \u201creceiver\/decoder\u201d includes a separate receiver\/decoder, such as a set-top box, and a television having a receiver\/decoder integrated therewith.","In a multichannel system, the multiplexer  handles audio and video information received from a number of parallel sources and interacts with the transmitter  to broadcast the information along a corresponding number of channels. In addition to audiovisual information, messages or applications or any other sort of digital data may be introduced in some or all of these channels interlaced with the transmitted digital audio and video information.","A conditional access system  is connected to the multiplexer  and the receiver\/decoder , and is located partly in the broadcast centre and partly in the receiver\/decoder. It enables the end user to access digital television broadcasts from one or more broadcast suppliers. A smartcard, capable of deciphering messages relating to commercial offers (that is, one or several television programmes sold by the broadcast supplier), can be inserted into the receiver\/decoder . Using the receiver\/decoder  and smartcard, the end user may purchase commercial offers in either a subscription mode or a pay-per-view mode.","As mentioned above, programmes transmitted by the system are scrambled at the multiplexer , the conditions and encryption keys applied to a given transmission being determined by the access control system . Transmission of scrambled data in this way is well known in the field of pay TV systems. Typically, scrambled data is transmitted together with a control word for descrambling of the data, the control word itself being encrypted by a so-called exploitation key and transmitted in encrypted form.","The scrambled data and encrypted control word are then received by the receiver\/decoder  having access to an equivalent to the exploitation key stored on a smart card inserted in the receiver\/decoder to decrypt the encrypted control word and thereafter descramble the transmitted data. A paid-up subscriber will receive, for example, in a broadcast monthly EMM (Entitlement Management Message) the exploitation key necessary to decrypt the encrypted control word so as to permit viewing of the transmission.","An interactive system , also connected to the multiplexer  and the receiver\/decoder  and again located partly in the broadcast centre and partly in the receiver\/decoder, enables the end user to interact with various applications via a modemmed back channel . The modemmed back channel may also be used for communications used in the conditional access system .","Receiver\/Decoder","Referring to , the elements of the receiver\/decoder  or set-top box will now be described. The elements shown in this figure will be described in terms of functional blocks.","The receiver\/decoder  comprises a central processor  including associated memory elements and adapted to receive input data from a serial interface , a parallel interface , a modem  (connected to the modem back channel  of ), and switch contacts  on the front panel of the decoder.","The receiver\/decoder is additionally adapted to receive inputs from an infra-red remote control  via a control unit  and also possesses two smartcard readers ,  adapted to read bank or subscription smartcards ,  respectively. The subscription smartcard reader  engages with an inserted subscription card  and with a conditional access unit  to supply the necessary control word to a demultiplexer\/descrambler  to enable the encrypted broadcast signal to be descrambled. The decoder also includes a conventional tuner  and demodulator  to receive and demodulate the satellite transmission before being filtered and demultiplexed by the unit .","As used in this description, an application is preferably a piece of computer code for controlling high level functions of preferably the receiver\/decoder . For example, when the end user positions the focus of remote control  on a button object seen on the screen of the television set  and presses a validation key, the instruction sequence associated with the button is run.","An interactive application proposes menus and executes commands at the request of the end user and provides data related to the purpose of the application. Applications may be either resident applications, that is, stored in the ROM (or FLASH or other non-volatile memory) of the receiver\/decoder , or broadcast and downloaded into the RAM or FLASH memory of the receiver\/decoder .","Applications are stored in memory locations in the receiver\/decoder  and represented as resource files. The resource files comprise graphic object description unit files, variables block unit files, instruction sequence files, application files and data files.","The receiver\/decoder contains memory divided into a RAM volume, a FLASH volume and a ROM volume, but this physical organization is distinct from the logical organization. The memory may further be divided into memory volumes associated with the various interfaces. From one point of view, the memory can be regarded as part of the hardware; from another point of view, the memory can be regarded as supporting or containing the whole of the system shown apart from the hardware.","The receiver\/decoder contains five software layers, organized so that the software can be implemented in any receiver\/decoder and with any operating system. Referring to , the various software layers are Application Layer , Application Programming Interface (API) layer , Virtual Machine Layer , Device Layer Interface  and System Software\/Hardware Layer . The various layers are described below.","Application Layer","The Application Layer  encompasses applications that are either resident in or downloaded to the receiver\/decoder. They may be interactive applications used by customers, written in, for example, Java, HTML, MHEG-5 or other languages, or they may be applications used by the receiver\/decoder to run such applications. This layer is based on a set of open Application Programming Interfaces (APIs) provided by the Virtual Machine layer. This system allows applications to be downloaded to flash or RAM memory in the receiver\/decoder on-the-fly or on demand. The application code can be transmitted in compressed or uncompressed format using protocols such as Data Storage Media Command and Control (DSMCC), Network File Server (NFS) or other protocols.","Interactive applications are applications that the user interacts with, for example, to obtain products and services, such as electronic program guides, telebanking applications and games. Various security features are provided for these downloaded applications and data, as follows:\n\n","The following resident applications are used to manage interactive applications:\n\n","The API layer  provides high-level utilities for interactive application development. It includes several packages that make up this high-level API. The packages provide all the functionality necessary to run interactive applications. The packages are accessible by the applications.","In a preferred embodiment the API is adapted to run applications written in the Java programming language. Furthermore, it can interpret HTML and other formats, such as MHEG-5. Besides these interpreters, it also includes other packages and service modules that are detachable and extensible as requirements dictate.","Virtual Machine Layer","The Virtual Machine layer  is composed of language interpreters and various modules and systems. It consists of everything necessary to receive and execute interactive applications in the receiver\/decoder, including the following:\n\n","Furthermore, the DAVIC resource notification model is supported so that client resources are efficiently managed.","Device Layer","The Device Layer  includes the Device Manager and devices. Devices are software modules which consist of the logical resources necessary for management of external events and physical interfaces. The Device Layer manages communication channels between drivers and applications and provides enhanced error exception checking. Some examples of managed devices are: card readers, modems, network, PCMCIA (Personal Computer Memory Card International Association), LED display and so on.","Programmers do not have to deal with this layer directly, since the API layer controls the devices from above.","System Software\/Hardware Layer","The System Software\/Hardware layer  is provided by the manufacturer of the receiver\/decoder. Because of the modularity of the system and because services supplied by the OS (such as event scheduling and memory management) are part of the Virtual Machine, the higher layers are not tied to a particular real-time operating system (RTOS) or to a particular processor.","Graphic System","The Graphic System , which is part of the Virtual Machine  will now be described. Referring to , the graphic system graphic system comprises widget tool kit , which allows graphic objects such as buttons to be drawn, windowing system  and graphic library . The windowing system  manages a multi-window system in which applications may draw and resize windows. The application which draws a window is referred to as the client of that window.","As an example, an application may produce a window having a menu of choices in one area of the screen, while a video image is shown across the whole screen behind the window. In this example, referring to , the menu is produced by CPU  while the video comes from video decoder . The two are mixed in the graphic processor , under control of CPU . More complex arrangements are also possible, with multiple windows each having still or moving images within them.","The windowing system maintains a window tree, which defines the relationship between windows. An example of a window tree is shown in . Referring to , the window  from which a particular window  has been opened is referred to as the mother, windows ,  which were opened from window  are referred to as daughters, and windows ,  which were opened from the same mother window  are referred to as sisters.","Transparent Windows","In a preferred embodiment, the windowing system manages windows known as transparent windows. A transparent window is a window which does not have a background, that is, through which underlying images can be at least partially seen. The principle of transparent windows will now be described with reference to .",{"@attributes":{"id":"p-0163","num":"0233"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"i":["a ","b ","a ","c ","a","c"],"b":["100","102","100","104","106","102","108","110","112","108","110","112","100","112"]},"Use of transparent windows allows independent designs to be created in different windows, while allowing images in underlying windows to be seen through overlying windows. The present system also allows multiple windows to be displayed, which may consist of a combination of transparent and non-transparent windows.","It should be noted that a transparent window may have a background which is completely transparent, or it may have a background with a certain transparency factor, in which case the background is blended with the underlying objects according to the transparency factor.","Specific mechanisms are provided to manage transparent windows. These mechanisms handle the situation where drawing takes beneath a transparent window. As will be explained, such drawing may result in corruption of images in the transparent window unless specific action is taken to prevent this. shows the situation when a line is drawn underneath a window with an opaque background. In this case, when line  is drawn, no changes occur in window . shows the situation when window  is declared a transparent window. In this case, when line  is drawn, it also appears in window , with the result that it overwrites the objects  and  in window .","One way of avoiding the overwriting of objects in a transparent window is to prevent drawing from taking place underneath the window. However, in a preferred embodiment, the overwriting of objects in a transparent window is corrected, as described below.","Firstly, the area affectedly the drawing is determined. This is done by monitoring the maximum and minimum coordinates of the drawing while the drawing takes place. The windows system then searches through the window tree to identify any transparent windows which lie over the affected area A so-called Expose Event is then sent to the clients of all such windows. The Expose Event informs the clients that the affected area should be redrawn. A client of a window is responsible for the content of that window, and thus the client is able to redraw an overwritten window. The client redraws that part of the window which coincides with the affected area.","The above sequence of events is illustrated in . Referring to , the area enclosed by rectangle  is the area affected by the drawing of line . The windows system then identifies window  as a transparent window which lies over affected area , and an Expose Event is sent to that window. Referring to , the part of the window  which is affected by the drawing is indicated by rectangle . The area within rectangle  is then redrawn by the client. As shown in , the parts of window  which were corrupted by the drawing of line  are thereby redrawn, so that the objects  and  are no longer overwritten by line .","The above mechanisms allow an application to draw images in a window even if it is overlaid by a transparent window, without corrupting the images in the overlying window.","The number of Expose Events which are sent to the overlying window (that is the number of times that the overlying window is redrawn) is proportional to the number of draw commands which are generated. A draw command is generated each time a single draw operation takes place. To create a complex image, a large number of draw operations may be necessary, each consisting of, for example, the drawing of a straight or curved line, a box, a circle, or some other object. This can result in a large amount of processing being dedicated to redrawing windows, which may reduce the performance of the system. The situation is made worse if multiple windows are open, particularly multiple overlying transparent windows, each of which may require an Expose Event.","In a preferred embodiment of the present invention, the number of Expose Events which are generated, and hence the number of times that an overlying window is redrawn, is reduced by suppressing the generation of Expose Events in certain circumstances. A parameter is provided, referred to herein as win_over_mode, which specifies the situations in which the generation of Expose Events will be suppressed. The parameter win_over_mode allows client applications to define which windows will be taken into account when deciding to which windows an Expose Event will be sent.","In the preferred embodiment, the win_over_mode parameter may define the following situations with regard to Expose Events:\n\n","Windows which are excluded from the clipping calculation do not receive Expose Events, and thus are not redrawn. For example, it might be known that sister windows never overlie the window in which the drawing takes place. Alternatively, it might be decided to postpone redrawing all transparent windows until the drawing is complete.","Once the drawing is complete, any affected windows may be redrawn. This is done by monitoring the maximum and minimum coordinates of the drawing. When the drawing is complete, the win_over_mode parameter is then set to clip all. A virtual rectangle is then drawn around all affected areas, using the maximum and minimum coordinates of the drawing. By drawing a virtual window, an Expose Event is generated which is sent to all affected windows in the window tree. The windows which have areas coinciding with the affected area are then redrawn, in the way described above.","In summary, greater efficiency can be obtained by deferring the redraw of transparent windows affected by drawing operations performed by an application.","One problem remains, however, as a result of the fact that the windowing system itself may decide to redraw part of a window, for example as a result of the user moving or resizing the window, or moving or resizing an overlapping window. In this case, without further information, the windows system always sends Expose Events to the appropriate windows to ensure a correct result; consequently, more Expose Events are sent, and therefore more time is spent redrawing windows, than if the client was in control of the process.","With reference to , the problem described above and its solution are illustrated. shows a typical configuration of two windows: a transparent Window A  and an opaque Window B  which it partially overlaps.","In , which corresponds to a variant of the preferred embodiment, a typical sequence of Expose Events is illustrated, following a decision by the window manager to redraw part of Window B. Expose Events  and  are sent to Window B  and Window A  respectively. Window B, receiving the Expose Event , is redrawn, thereby generating a further Expose Event , which is sent to Window A. Window A, receiving two Expose Events, is therefore redrawn twice.","In , illustrating the preferred embodiment, information regarding the optimisation of Expose Events is made available to the window manager by means of the window attributes of Window A . Taking into account this information, a further Expose Event  is initially only sent to Window B . The subsequent redrawing of Window B then produces the required Expose Event , sent to Window A  so that it is redrawn only once.","The window attribute which defines the optimisation of the Expose Events in the preferred embodiment has the name of no_bg_win_management (for no background windows management), and takes the values of:\n\n","In can be seen from the above that many advantages, such as overall efficiency, ease of use, effective code reuse (due to the transparent windows management code being present once in the window manager instead of several times in different applications), centralized control speed, and so on are afforded by integrating the management of transparent windows into the window manager.","With reference to , the relationship between the window manager and the clients (applications) of the windows is now described in more detail.","Each window , ,  on the screen  has a corresponding window definition data block , ,  respectively. Each window is also associated with a particular client (application); in this case, the window  and its corresponding window definition data block  are associated with a first application , and windows ,  and their corresponding window definition data blocks ,  are associated with the application . A window manager  manages the whole system, and has access to all of the window definition data blocks , ,  and can communicate with each application ,  by the use of events, messages and\/or function calls.","The window definition data blocks contain the various attributes regarding the state of the corresponding window, such as the size, position, border style and modes of behaviour, and including the no_bg_win_management attribute described above, for example. Information regarding the transparency of a window can also be stored in the window definition data block.","In the preferred embodiment, information regarding the transparency of a window  is stored in the window definition data block  by means of a function call  to the window manager . In variants of the preferred embodiment, however, the information is sent to the window manager via other means, or stored directly in the window definition data block , indicated schematically by the link . In addition to being able to communicate with the window manager , applications can communicate directly between each other, indicated schematically by the link .","With reference to , an example in which two overlapping windows are redrawn will now be described, illustrating the above features of the deferred redrawing of overlying transparent windows and the integration of the management of transparent windows into the window manager. In this example, like parts are denoted by like numerals.","The contents of the two windows C  and D  are shown in . Window C  is transparent, and comprises a triangle  and a rectangle . Window D  is opaque, and comprises three vertical lines , , .","When displayed on screen, with reference to , the two windows overlap as shown, with Window C  overlying Window D , partially obscuring the contents of Window D.","With reference to , a refresh event occurs in relation to Window D, causing the opaque background  and border  of Window D  to be redrawn, overwriting the overlying transparent Window C . In addition, in the first drawing operation performed by the client (application), the first of the three vertical lines  is drawn. It is noted that, in the present example, the window manager does not redraw the overlying window after drawing the \u2018system\u2019 areas of the window (the border and background, for example), but in variants of the preferred embodiment, such a redraw does take place before the client (application) is requested to redraw the \u2018user\u2019 areas.","The simplest case, where overlying windows are redrawn after each subsequent drawing operation, is illustrated in and . In , the overlying Window C  is redrawn, following the sending of an Expose event to that window. With reference to , the next drawing operation then takes place, with the drawing of the vertical line . As discussed above, in this case, the overlying window will eventually be redrawn three times in total, two more than are necessary.","In the case where the redrawing of the overlying window is deferred, as described above and with reference to , all three vertical lines , ,  are drawn in Window D  before the overlying Window C  is redrawn, after which the windows have their correct appearance as illustrated in ","A further example in which an object to be drawn requires ten draw commands will now be described, again highlighting the feature of deferred redrawing of overlying transparent windows. As before, the object is to be drawn in a environment containing transparent windows.","In accordance with the methods described above, one of two procedures may be chosen. The first procedure is as follows:\n\n","The second, shorter, procedure which may be chosen is as follows:\n\n","It is noted that both procedures achieve the same result.","In the above example, rather than the affected windows being redrawn ten times, as would be the case if an Expose Event were generated for each draw command, the windows are only redrawn once. In this way, considerable savings in processing may be made.","In a variant of the preferred embodiment, a further method of redrawing windows is employed. This method comprises sending a signal to redraw overlying windows following a specific number of drawing operations, where the number is usually determined in advance of the drawing operations. With reference to the above example where a total of ten drawing operations were required, if the number chosen was 5, any overlying windows would be redrawn after the 5and 10drawing operations.","This method of redrawing offers the advantage of redrawing less frequently than if the redraw occurred after each drawing operation, but offers a further advantage of keeping the screen refreshed relatively frequently in the event of a large number of consecutive drawing operations being performed. The number of drawing operations to wait for before refreshing can be almost any number, from 1 upwards (but typically would be between 1 and 1000), depending on the current processor load, for example. The handling of the counting and redrawing may be handled either by the client or by the window manager.","Use of the optimizations described above with regard to the deferral of redrawing of transparent windows allows an application to use transparent windows with a considerable reduction in the amount of processing involved. This is of particular advantage in environments such as receiver\/decoders where processing power may be limited.","Further advantages particular to receiver\/decoders are also afforded. For example, the use of transparent windows can typically allow a smaller windowing display to be provided, since the windows can be stacked on top of each other more effectively. With the windowing display typically in use being overlaid on a video image (by the graphics processor described above, which takes inputs both from the video decoder and from the windowing system), a smaller windowing display is highly preferential since less of the video image would then be obscured.","Furthermore, the method of displaying transparent windows typically employed (in contrast to blending methods) can result in a higher contrast images when displayed on a television (which cannot generally support as high a resolution as a computer monitor, for example).","With reference to , a further example will be described, concerning a particular application of the transparent windowing system described above: namely, an Internet browser application for a receiver\/decoder.",{"@attributes":{"id":"p-0204","num":"0289"},"figref":["FIG. 12","FIG. 12"],"b":["1100","1100","1110","1120","1130","1140","1150","1160","1170"]},"The main menu chain  is arranged to be superimposed on the hyper-text markup language (HTML) document to be displayed on the screen . In , no HTML document is displayed and the screen  is blank apart from the main menu chain .","The user has a controller with which he can navigate between objects on the screen , highlight objects and select objects. In the present example, the controller used is a television remote control. When an HTML page is displayed, any button of the remote control calls the chain  (toolbar). The chain  can also be turned on and off by the user.",{"@attributes":{"id":"p-0207","num":"0292"},"figref":["FIG. 13","FIG. 12","FIG. 13"],"b":"1120"},{"@attributes":{"id":"p-0208","num":"0293"},"figref":"FIG. 14","b":["1120","1122","1122","1120","1186"]},"A \u201cwidget set\u201d, used to draw the above navigation chain (amongst other things) will now be described, before returning to the discussion of . One particular application of such a widget set is to provide widgets in a GUI display of a receiver\/decoder for digital television. Amongst other things, the widget set contains a set of primitive widget classes  including, amongst others, window and dialogue box frames, a slider control, a push button, a check box, a text field, and a text editing box.","Each of the widget classes implements methods and event handlers to control operation of the widget. The widget classes may also contain methods for drawing some parts of the widget. However, in order to provide a particular appearance or \u201clook\u201d for the widget, the widget classes invoke drawing methods of a look object class with which the widget class is associated.","A look includes, amongst other things, a definition of colours, so that any widget instance which is associated with a particular look instance will use the colours defined in that look instance. In one embodiment, a look defines several colours, such as black, dark gray, middle gray, light gray, very light gray, white, and highlight colour. Significantly, and in addition, it also defines a transparent colour.",{"@attributes":{"id":"p-0212","num":"0297"},"figref":"FIG. 15","b":["1410","1411"]},"As mentioned previously, the main screen displays a vertical bar (main menu) () which is composed of a series of buttons. A button is effectively a rectangular or square zone (for example, 32\u00d732 pixels). When the graphics cursor enters a zone, that zone (window) receives the focus.","In the light of the above, one can summarize that each zone is a window, and, as is observed from , the background of each of these windows is arranged to be transparent, consequently allowing each button of the toolbar (comprising an interactive foreground object) to have an apparently non-rectangular shape when overlaid on the Internet browser. Apart from allowing the designer of the Internet browser more flexibility, this can allow a more compact arrangement of the buttons with consequent advantages.","The structure and function of the above Internet browser and navigation toolbar are discussed in more detail in European Patent Application No. 00300832.3 in the name of Canal+ Technologies Societe Anonyme.","It will be understood that the present invention has been described above purely by way of example, and modifications of detail can be made within the scope of the invention.","Each feature disclosed in the description, and (where appropriate) the claims and drawings may be provided independently or in any appropriate combination.","Reference numerals appearing in the claims are by way of illustration only and shall have no limiting effect on the scope of the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["Preferred features of the present invention will now be described, purely by way of example, with reference to the accompanying drawings, in which:\u2014",{"@attributes":{"id":"p-0118","num":"0170"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0119","num":"0171"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0120","num":"0172"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0121","num":"0173"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0122","num":"0174"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0123","num":"0175"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0124","num":"0176"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0125","num":"0177"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0126","num":"0178"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0127","num":"0179"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0128","num":"0180"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0129","num":"0181"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0130","num":"0182"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0131","num":"0183"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0132","num":"0184"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
