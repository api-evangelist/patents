---
title: Method and system for information processing using meta-archives
abstract: A method, system, apparatus, and computer program product are presented for a meta-archive information server that provides a set of operations or services for obtaining information from a meta-archive; these operations may include dynamic indexing, searching, comparing, or other operations. A meta-archive is a set of one or more archive files that are logically grouped in (or otherwise associated with) a container object, e.g., a file system folder, a directory, or another archive file. By allowing a user to derive sets of information from an entire meta-archive, a user can maintain more files within archives, thereby reducing file system disorganization. The meta-archive information server can be easily run over a specific meta-archive when necessary, thereby generating information dynamically, even if the archive files within a meta-archive change over time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07925661&OS=07925661&RS=07925661
owner: International Business Machines Corporation
number: 07925661
owner_city: Armonk
owner_country: US
publication_date: 20020627
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to an improved data processing system and, in particular, to a method and apparatus for data file and information storage.","2. Description of Related Art","The amount of data that is stored on worldwide computer systems has been growing exponentially for many years, mainly because of the rapid reduction in the cost of permanent storage media. Larger storage capacities have allowed software vendors to develop larger applications such that enterprise applications typically require many thousands of files while consumer applications typically require many hundreds of files. Given the expansive storage capabilities of an average computer system, the average user tends to keep unnecessary applications and data files rather than deleting them, and the file systems of most computers continue to increase in size over time. File system disorganization within a typical computer system has been exacerbated by access to corporate networks and the Internet. With the ability to easily exchange and download files, the average user tends to collect files that are seldomly used.","In some operational environments, such as data collection systems associated with oil exploration instruments, large amounts of data are stored in relatively few files. In most computer systems, however, the average size of a data file is relatively small, and typical file systems can become cluttered with numerous files. Although the hierarchical nature of file systems provides a mechanism for instilling order to file maintenance, it can be quite difficult to maintain order of one's file system in many instances.","File system disorganization can be relieved through the use of archive files, which allow users to package many files into a single file while maintaining the logical, hierarchical associations between the constituent files. Users can maintain less numerous archive files more easily than their more numerous constituent files, and the mental burden on users for tracking their own files is greatly reduced.","In addition, the transmission or receipt of a single archive file is easier than the transfer of numerous files that could be placed into a single archive file. This advantage is significant with respect to the frequent exchange of files through the Internet, particularly when a downloaded archive file can be maintained on the end-user's computer system as a single file rather than numerous unpackaged files.","However, the packaging of files into an archive file has at least one significant disadvantage in that information about the archive file's constituent files is hidden from a user's view. In order to provide a user with helpful information about the constituent files within an archive file, applications that manipulate archive files typically provide a user with a list of constituent files and a graphical representation of the hierarchical organization of the constituent files in an archive file. The persistent use of numerous archive files, though, creates a form of information veil opposed to user access.","Therefore, it would be advantageous to provide a method and system for allowing a user to initiate informational operations on archive files.","A method, system, apparatus, and computer program product are presented for a meta-archive information server that provides a set of operations or services for obtaining information from a meta-archive; these operations may include dynamic indexing, searching, comparing, or other operations. A meta-archive is a set of one or more archive files that are logically grouped in (or otherwise associated with) a container object, e.g., a file system folder, a directory, or another archive file. By allowing a user to derive sets of information from an entire meta-archive, a user can maintain more files within archives, thereby reducing file system disorganization. The meta-archive information server can be easily run over a specific meta-archive when necessary, thereby generating information dynamically, even if the archive files within a meta-archive change over time.","In general, the devices that may comprise or relate to the present invention include a wide variety of data processing technology. Therefore, as background, a typical organization of hardware and software components within a distributed data processing system is described prior to describing the present invention in more detail.","With reference now to the figures,  depicts a typical network of data processing systems, each of which may implement a portion of the present invention. Distributed data processing system  contains network , which is a medium that may be used to provide communications links between various devices and computers connected together within distributed data processing system . Network  may include permanent connections, such as wire or fiber optic cables, or temporary connections made through telephone or wireless communications. In the depicted example, server  and server  are connected to network  along with storage unit . In addition, clients - also are connected to network . Clients - and servers - may be represented by a variety of computing devices, such as mainframes, personal computers, personal digital assistants (PDAs), etc. Distributed data processing system  may include additional servers, clients, routers, other devices, and peer-to-peer architectures that are not shown.","In the depicted example, distributed data processing system  may include the Internet with network  representing a worldwide collection of networks and gateways that use various protocols to communicate with one another, such as Lightweight Directory Access Protocol (LDAP), Transport Control Protocol\/Internet Protocol (TCP\/IP), Hypertext Transport Protocol (HTTP), Wireless Application Protocol (WAP), etc. Of course, distributed data processing system  may also include a number of different types of networks, such as, for example, an intranet, a local area network (LAN), or a wide area network (WAN). For example, server  directly supports client  and network , which incorporates wireless communication links. Network-enabled phone  connects to network  through wireless link , and PDA  connects to network  through wireless link . Phone  and PDA  can also directly transfer data between themselves across wireless link  using an appropriate technology, such as Bluetooth\u2122 wireless technology, to create so-called personal area networks (PAN) or personal ad-hoc networks. In a similar manner, PDA  can transfer data to PDA  via wireless communication link .","The present invention could be implemented on a variety of hardware platforms;  is intended as an example of a heterogeneous computing environment and not as an architectural limitation for the present invention.","With reference now to , a diagram depicts a typical computer architecture of a data processing system, such as those shown in , in which the present invention may be implemented. Data processing system  contains one or more central processing units (CPUs)  connected to internal system bus , which interconnects random access memory (RAM) , read-only memory , and input\/output adapter , which supports various I\/O devices, such as printer , disk units , or other devices not shown, such as a audio output system, etc. System bus  also connects communication adapter  that provides access to communication link . User interface adapter  connects various user devices, such as keyboard  and mouse , or other devices not shown, such as a touch screen, stylus, microphone, etc. Display adapter  connects system bus  to display device .","Those of ordinary skill in the art will appreciate that the hardware in  may vary depending on the system implementation. For example, the system may have multiple processors, such as Intel\u00ae Pentium\u00ae-based processors and digital signal processors (DSP), and one or more types of volatile and non-volatile memory. Other peripheral devices may be used in addition to or in place of the hardware depicted in . In other words, one of ordinary skill in the art would not expect to find identical components or architectures within a Web-enabled or network-enabled phone and a fully featured desktop workstation. The depicted examples are not meant to imply architectural limitations with respect to the present invention.","In addition to being able to be implemented on a variety of hardware platforms, the present invention may be implemented in a variety of software environments. A typical operating system may be used to control program execution within each data processing system. For example, one device may run a Unix\u00ae operating system, while another device may contain a simple Java\u00ae runtime environment.","The present invention may be implemented on a variety of hardware and software platforms, as described above. More specifically, though, the present invention is directed to a technique for serving information from archive files. The technique of the present invention is described in more detail with respect to the remaining figures.","With reference now to , a block diagram depicts a meta-archive information server in accordance with the present invention. Meta-archive information server (MAIS)  comprises a set of operational modules that generate specific types of information with respect to a meta-archive when MAIS  receives a specific request for the information. A meta-archive is a set of one or more archive files that are logically grouped in (or otherwise associated with) a container object, e.g., a file system folder, a directory, or another archive file. A meta-archive information server provides a set of operations or services for dynamically obtaining information from a meta-archive; these operations may include dynamic indexing, searching, comparing, or other operations. Hence, MAIS  comprises modules, i.e., routines, classes, subprograms, or other functional entities, that accomplish the services that are provided by MAIS  in response to external requests.","Index module  generates various types of indices over a set of archive files in a meta-archive. Comparison module  compares one or more archive files for differences and\/or similarities within the content of the archive files. Search module  performs various types of searches through a meta-archive, such as a search for terms, classes, methods, or other information. Other modules for supporting other types of information requests could be included in the MAIS, and the examples shown in  should not be interpreted as limiting the types of modules that could be included in the MAIS.","Extensible file operations module  provides for the execution of pluggable information serving modules that may be found within extensions directory  within an archive file. In this manner, an archive file can be enhanced by modifying the archive file to include a set of classes that perform an information-serving operation that is not provided by MAIS  but is supported by MAIS  through integration with the other information-serving operations that are provided by MAIS .","MAIS  may be guided in its information-serving operations through a variety of optional input means. User input  may be directly entered into MAIS  through user interface controls that are provided by MAIS . User input  may also be extracted from meta-archive information request messages that are received by MAIS . MAIS  may maintain user preference parameters  in an internal database or other appropriate location, thereby allowing a user to specify operational parameters on a permanent basis so that the user does not need to re-specify certain parameters with each meta-archive information request. MAIS  may be retrieve configuration parameters or environment variables that allow administrative control over the operational behavior of MAIS .","When MAIS  receives a meta-archive information request, MAIS  retrieves an identifier of container object , which may be a file folder, file directory, or similar computer file subsystem container object for logically grouping a set of files, including archive files. The identifier may be obtained from the request itself, from user input , from user preference parameters , from configuration\/environment variables , or from some other source. In the example in , container  holds archive files , , and ; this logical group of three archive files represents an example of a meta-archive, i.e., meta-archive . The archive files in  are \u201c.jar\u201d or JAR files, i.e., Java\u2122 ARchive files. Other types of archive files are supportable by the present invention, such as \u201c.zip\u201d files, \u201c.gar\u201d files, etc., and the present invention is operable in the presence of other common archive file features, such as compression, security codings, etc.","In order to satisfy the original request, MAIS  generates index results , comparison results , search results , or some other type of results, as necessary, and returns the results to the requesting entity.","With reference now to , a block diagram depicts a meta-archive information server in the form of a plug-in. Client  supports browser application , which in turn supports plug-in execution module . As is well-known in the art, plug-in execution module  may be a Java\u2122 virtual machine. Through an appropriate application-related parameter, browser  is configured to search for available plug-ins within plug-in directory . In this example, MAIS  is available for execution as a plug-in when necessary, e.g., a user request through the graphical user interface that is provided by the browser application.","With reference now to , a block diagram depicts a meta-archive information server in the form of a servlet. Server  supports servlet execution module , and in a manner similar to , servlet execution module  is configured to search for available servlets in servlet directory  as indicated by an appropriate environment variable or similar parameter. In this example, MAIS  is available for execution as a servlet when necessary, such as when a request message is received that indicates that the services provided by MAIS  are needed, e.g., an HTTP request message with a meta-archive request parameter and a URL that might identify a meta-archive on server .","It should be noted that the exemplary implementations that are shown in  and  do not imply limitations on the form of execution of MAIS . As additional examples, MAIS  may be implemented as a stand-alone application, or MAIS  may be incorporated into other types of applications, such as archive file utility applications or archive file generation applications.","With reference now to , a flowchart depicts a process by which a meta-archive information server (MAIS) compiles information from a set of archive files. The process begins when the MAIS receives an information request (step ), which may be received in the form of a message, a command, or other some other form of input. As mentioned above, the MAIS provides a set of operations or services for dynamically obtaining information from a meta-archive, such as indexing and searching. When the MAIS receives a meta-archive request, the MAIS dynamically discovers which archive files should be accessed to fulfill the request. Hence, a determination is made as to whether the request itself indicates the location of a set of archive files or a container object that holds a set of archive files (step ). If not, then the MAIS retrieves a meta-archive location identifier from some other form of available input (step ), such as those shown in .","After determining an intended location for the meta-archive, the MAIS determines a list of one or more archive files that comprise the meta-archive to be used to satisfy the meta-archive information request (step ). The MAIS then performs the requested operation on each archive file in the list of files that was previously determined to comprise the meta-archive (step ). The MAIS returns the generated results of the completed information gathering operation in an appropriate format to the requester (step ), and the process is complete.","The format of the result data may depend upon the form in which the request was received, the form in which the MAIS is executing, or some combination of these or other criteria. For example, if the MAIS is executing as a servlet, and the original request was received within an HTTP request message, then the MAIS would likely return an HTTP response message to the requesting entity. The format of the content or payload within the HTTP response message may vary, e.g., the MAIS may generate an XML-formatted or HTML-formatted document.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIGS. 5A-5C","FIG. 4","FIGS. 5A-5C","FIG. 4","FIGS. 5A-5C","FIG. 2","FIGS. 5A-5C"],"b":"410"},"With reference now to , a flowchart depicts a process by which a search operation is conducted on a meta-archive. The process begins with the MAIS obtaining a list of constituent files within the archive file that is currently being processed, i.e., the \u201ccurrent\u201d archive file (step ), and the MAIS would step through this list of files or use this list as a guide to the file entries within the archive file.","The requested search operation is performed on each constituent file that is stored in the current archive file (step ). In order to provide some form of accounting information or tracking information so that the user can identify the source of an entry within the search results, the name of the constituent file is associated with the search results that were derived from the constituent file (step ), and the search results are appended to the previous search result data or otherwise merged with the previous search result data (step ). After completing the search operation with respect to each constituent file, the name of the current archive file may be associated with the search result data that was derived from the current archive file, again for accounting or tracking purposes (step ). The search results for the current archive file are then appended to or otherwise merged with the search results from other archive files in the meta-archive (step ), and the process is complete.","With reference now to , a flowchart depicts a process by which an index operation is conducted on a meta-archive. Different types of indices may be requested or generated, such as an index of terms, classes, methods, cross-reference indices, or other information. The meta-archive information request may comprise some type of indicator as to the type of index that is being requested.","In a manner similar to that described above with respect to , the process begins with the MAIS obtaining a list of constituent files within the archive file that is currently being processed, i.e., the \u201ccurrent\u201d archive file (step ), and the MAIS would step through this list of files or use this list as a guide to the file entries within the archive file. The requested index operation is performed on each constituent file that is stored in the current archive file (step ), either individually or together as a group. For tracking or accounting purposes, the names of the constituent file and the current archive file are associated with the index results (step ). The index results are then appended to the previous index result data or otherwise merged with the previous index result data (step ), and the process is complete.","With reference now to , a flowchart depicts a process by which a comparison operation is conducted on a meta-archive. The process begins with the MAIS obtaining a list of constituent files within two archive files that are currently being compared (step ). Although the example in  depicts the comparison of two archive files from a meta-archive, multiple archive files may be compared in response to a comparison operation if there are more than two archive files in the meta-archive. For example, the comparison request may indicate a \u201cprimary\u201d archive file that is to be used as the basis of comparison, and all other archive files are compared to the primary archive file, thereby generating a set of results that are focused on a particular archive file. Alternatively, each archive file may be compared with each other archive file in the meta-archive, thereby generating a set of very detailed results.","The MAIS then generates a list of differences among the constituent file names of the two archive files that are being compared (step ) along with a list of similar constituent file names (step ). In this example, only file names that are identical or substantially similar are assumed to contain similar content. Different file names are assumed to contain content that is not similar to any other constituent file. Hence, only files with potentially similar content are compared. Alternatively, an analysis could be performed on each file to determine its content, such as the frequency of specific words, statements, or phrases, and files with similar analysis results could be compared against one another.","For each pair of files that are deemed by the MAIS to potentially contain similar content, the MAIS generates a consolidated version of the pair of files (step ). The manner in which the differences and similarities in a pair of files are reported may vary with the implementation of the present invention. In this example, a consolidated version of the pair of files is generated. After the consolidated version (or versions) has been created, it is stored or returned in an appropriate manner (step ), and the process is complete.","In a manner that is well-known in the art, a consolidated version of two files can be generated by considering a first file in the pair of files to be the basis of comparison; generally, the file with the older creation or modification date is used as the basis of comparison. The consolidated version begins as a copy of the first file. Content that is contained in the second file but not in the first file is considered to be added content, and this added content is then inserted into the consolidated version with appropriate mark-up indications to show that it is added or new content, e.g., by underlining the new content. Content that is contained in the first file but not in the second file is considered to have been deleted in the second file, and this deleted content is marked-up in the consolidated version with appropriate mark-up indications to show that it has been deleted, e.g., by striking-out the deleted content.","With reference now to , a block diagram depicts an enhanced Javadoc utility that is able to generate JAR files containing Java\u2122 classes for a meta-archive information server. As is well-known in the art, Javadoc is a tool from Sun Microsystems, Inc., for generating application programming interface (API) documentation in HTML format from \u201cdoc\u201d comments in Java\u2122 source code. When a software developer wants to generate the source code documentation, the software developer runs the Javadoc tool over the source code to parse the \u201cdoc\u201d comments, thereafter generating a set of HTML documents that are hyperlinked to each other.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 6","FIG. 2","FIGS. 4-5C"],"b":["600","600","602","600","600","604","610","612","604","614","610"]},"As an option, the MAIS functionality can be tailored to the type of documents or domain information with which it has been packaged so that it includes document-specific or domain-specific functionality. In other words, the meta-archive information request operation software can be enhanced with document-specific or domain-specific behavior. For example, a set of medical documents may be included with special medical-term, fuzzy-logic searching functionality, whereas a set of auto-parts documents may be included with different fuzzy-logic searching functionality.","With reference now to , a graphical user interface window depicts a meta-archive information server that executes as a plug-in within a browser application. Window  is a browser application window that contains typical browser toolbar . In this example, toolbar  is associated with a meta-archive information server. Meta-archive toolbar  has text entry field  for entering the location of a set of archive files that are to be manipulated as a meta-archive. Alternatively, the meta-archive location could be input through other mechanisms, as shown in .","As another alternative, if the meta-archive information server was launched through the execution of Java\u2122 classes in a \u201c.jar\u201d file, as shown in , then the location of the \u201c.jar\u201d file could be used as the location of the meta-archive, thereby allowing a MAIS within a \u201c.jar\u201d file to be used to inspect \u201c.jar\u201d files within the same directory. In other words, when the MAIS within a \u201c.jar\u201d file is activated, it will determine the identity of other \u201c.jar\u201d files in the same container, usually on the same local device but possibly on a remote device, thereby associating itself with other \u201c.jar\u201d files for the purpose of extracting common information from all of those \u201c.jar\u201d files as a meta-archive.","Toolbar  also comprises toolbar buttons for each available type of information request that can be run against a meta-archive. In this example, a user could request a search operation, an index operation, and a compare operation, all of which have associated function modules as shown in . If some operational extensions were available, as described with respect to , then buttons could be presented to the user for selection of those choices.","Using well-known file hierarchy presentation techniques, window frame  contains a file listing that shows the archive files within a container; a user may optionally view the constituent files within the archive files. Using the present invention, the archive files are associated with each other as a meta-archive, and information can be compiled from the meta-archive as a whole using the meta-archive information server's available operations.","Window frame  contains an index of classes that have been compiled from all of the archive files within the current meta-archive in response to a user request to compile the request, which may be initiated by a user selecting the \u201cIndex\u201d button on the meta-archive toolbar. If necessary, when the index button is selected on the meta-archive toolbar, a dialog box may be presented to the user to enter various options, such as the type of index to be created, e.g., alphabetical, reverse-alphabetical, word index, class index, etc. Similar dialog boxes for the options associated with other meta-archive information requests could be presented when necessary.","The advantages of the present invention should be apparent in view of the detailed description that is provided above. The present invention overcomes some of the difficulties in working with archive files. Although archive files are convenient for storing and transferring information, they present an information veil or information barrier that prevents a user from having easy access to the information stored within them.","The present invention is directed to a meta-archive information server that provides a set of operations or services for dynamically obtaining information from a meta-archive; these operations may include dynamic indexing, searching, comparing, or other operations. A meta-archive is a set of one or more archive files that are logically grouped in (or otherwise associated with) a container object, e.g., a file system folder, a directory, or another archive file. By allowing a user to derive sets of information from an entire meta-archive, a user can maintain more files within archives, thereby reducing file system disorganization. The meta-archive information server can be easily run over a specific meta-archive when necessary.","More importantly, the meta-archive information requests can be run dynamically against the meta-archive, even though the specific identity of the archive files within a meta-archive are not specifically identified in the information request. In this manner, the archive files within the meta-archive can change over time, yet one can still obtain desired information with respect to the meta-archive.","Referring again to , some specific advantages can be discussed with respect to the use of the present invention with \u201c.jar\u201d files and the Javadoc utility. The Javadoc utility generates an index of Java\u2122 classes when it is run against a set of Java\u2122 source code files. However, applications typically require the work of multiple people or groups, all of which may generate sets of Javadoc files. The present invention provides a mechanism in which a set of Javadoc documents can be packaged into an archive file, and then multiple archive files from different sources can be indexed together or searched together to find information. In addition, sets of Javadoc files could be compared against each other while maintaining the Javadoc files in packages, which is particularly advantageous when different versions of files are generated for updated source code. Given that the present invention can generate indices, search results, or other datasets in a dynamic manner, even though the archive files may be changing, a software developer has a useful tool for maintaining archive files, updating those archive files, yet still being able to glean information across multiple archive files.","It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that some of the processes associated with the present invention are capable of being distributed in the form of instructions in a computer readable medium and a variety of other forms, regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include media such as EPROM, ROM, tape, paper, floppy disc, hard disk drive, RAM, and CD-ROMs and transmission-type media, such as digital and analog communications links.","The description of the present invention has been presented for purposes of illustration but is not intended to be exhaustive or limited to the disclosed embodiments. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiments were chosen to explain the principles of the invention and its practical applications and to enable others of ordinary skill in the art to understand the invention in order to implement various embodiments with various modifications as might be suited to other contemplated uses."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, further objectives, and advantages thereof, will be best understood by reference to the following detailed description when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
