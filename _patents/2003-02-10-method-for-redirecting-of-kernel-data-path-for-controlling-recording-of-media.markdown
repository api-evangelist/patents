---
title: Method for redirecting of kernel data path for controlling recording of media
abstract: A method of preventing unauthorized recording of electronic media according to one embodiment is described. The method comprises activating a compliance mechanism in response to a client system receiving media content. The compliance mechanism is coupled to the client system. The client system has a media content presentation application operable thereon and is coupled to the compliance mechanism. The method further comprises controlling a data path of a kernel-mode media device driver of the client system with the compliance mechanism upon detection of a kernel streaming mechanism operable on the client system. The present method further comprises directing the media content from the kernel-mode media device driver to a media device driver coupled with the compliance mechanism, via the data path, for selectively restricting output of the media content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09081976&OS=09081976&RS=09081976
owner: Music Public Broadcasting, Inc.
number: 09081976
owner_city: Santa Cruz
owner_country: US
publication_date: 20030210
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application is a continuation-in-part of co-pending U.S. patent application Ser. No. 10\/325,243, entitled \u201cMETHOD OF CONTROLLING RECORDING OF MEDIA\u201d by Hank Risan, et al., filed Dec. 18, 2002, assigned to the assignee of the present invention, and which is hereby incorporated by reference.","The present invention relates to electronic media. More particularly, the present invention relates to preventing unauthorized recording of electronic media.","With advancements in hardware and software technology, computers are integral tools utilized in various applications, such as finance, CAD (computer aided design), manufacturing, health care, telecommunication, education, etc. Further, an enhancement in computer functionality can be realized by communicatively coupling computers together to form a network. Within a network environment, computer systems enable users to exchange files, share information stored in common databases, combine or pool resources, communicate via electronic mail (e-mail), and access information on the Internet. Additionally, computers connected to a network environment, e.g., the Internet, provide their users access to data and information from all over the world.","Some of the various types of data that a user can access and share include, but are not limited to, text data such as that found in a word document, graphical data such as that found in pictures, e.g., JPEGs, GIFs, TIFFs, audio data such as that found in music files, e.g., MP3 files, and video data such as that found in moving pictures files, e.g., MPEG, MOV, and AVI files, to name a few. In fact, nearly any type of data can be stored and shared with other computer systems. In many instances, the material contained within the various data types is copyrighted material.","There are many different types of network environments that can be implemented to facilitate sharing of data between computer systems. Some of the various network environment types include Ethernet, client-server, and wired and\/or wireless network environments. A common utilization of a network environment type is for file sharing, such as in a P2P network or point-to-point network. Most P2P networks rely on business models based upon the transfer and redistribution of copyrighted material, e.g., audio files, between computers coupled to a network, e.g., the Internet. A P2P network allows a user to acquire the copyrighted material from a computer, a web site source, or a music broadcaster, and store and share the material with other users throughout the network, in some instances acting as a web site source or a music broadcaster.","It is also common for users sharing media files in an uncontrolled manner to use freely distributed or commercially available media player applications to experience, e.g., listen, view, and\/or watch, the shared files. In many instances, these media player applications also provide for downloading the media file from a P2P network or from licensed web broadcasters, saving it locally, and then upload the media file onto an unlawful P2P or similar network and\/or consumer recording devices. Unlawfully saving\/recording a media file can be as simple as selecting the save or record function on a media player application.","Additionally, many of the computers, web sites, and web broadcasters that share copyrighted material commonly do not control or monitor the files being exchanged between computers. Additionally, when web sites attempt to control or restrict the distribution of copyrighted material, e.g., audio files, users seeking to circumvent controls or restrictions can, in many cases, simply utilize the recording functionality of a media player application and save the copyrighted material, rename the particular audio file, and upload the renamed file, rendering attempts to control or restrict its distribution moot.","Further, many of the media player\/recorder applications are designed to capture and record incoming media files in a manner that circumvents controls implemented by a media player application inherent to an operating system, e.g., QuickTime for Apple, MediaPlayer for Windows\u2122, etc., or one downloadable from the Internet, e.g., RealPlayer, LiquidAudio, or those provided by webcasters, e.g., PressPlay, for controlling unauthorized recording of media files. Additionally, many recording applications can be adapted to establish a connection with the kernel-mode media device driver operable within an operating system, so as to capture and redirect the media file to create an unauthorized recording. Also, many digital recording devices, e.g., mini-disc recorders, MP3 recorders, and the like, can be coupled to a digital output of a computer system to capture the media file.","It is desired to prevent recording applications from accessing a kernel-mode media device driver and making unauthorized copies of copyrighted material through some available network, e.g., wireline, wireless, P2P, etc., or through a communicative coupling. It is further desirable to prevent access to a kernel based media device driver by a recording application for the purpose of making unauthorized copies of media files from or to alternative sources, e.g., CD players, DVD players, removable hard drives, personal electronic and\/or recording devices, e.g., MP3 recorders, and the like.","Current methods of sharing media files do not provide adequate protection against unauthorized recording of the media files.","Accordingly, a need exists for a method that prevents unauthorized recording of media files. Further, a need exists for a method that selectively prevents unauthorized recording of media files. Embodiments of the present invention satisfy the above mentioned needs.","In one embodiment, a method of preventing unauthorized recording of electronic media is comprised of activating a compliance mechanism in response to a client system receiving media content. The compliance mechanism is coupled to the client system. The client system has a media content presentation application operable thereon and is coupled to the compliance mechanism. The present method further comprises controlling a data path of a kernel-mode media device driver of the client computer with the compliance mechanism upon detection of a kernel streaming mechanism operable on the client system. The method further comprises directing the media content from the kernel-mode media device driver to a media device driver coupled with the compliance mechanism, via the data path, for selectively restricting output of the media content. The method further comprises preventing the media content from being returned from the kernel-mode media device driver to a recording application coupled to the client system from recording the media content when the recording violates a usage restriction applicable to the media content. The present method further comprises allowing the media content to be returned from the kernel-mode device driver to a recording application coupled to the client system to record the media content when the recording complies with a usage restriction applicable to the media content.","In another embodiment, the present invention provides computer implementable instructions stored on a computer readable medium, the instructions are for causing a client system to perform a method of restricting recording of media content. The present method is comprised of animating a compliance mechanism coupled to the client system. The animating is in response to the client system receiving media content. The client system has a media content presentation application coupled thereto and is operable with the compliance mechanism. The present method further comprises managing a data path of a kernel-mode media device driver of the client system with the compliance mechanism upon discovery of a kernel streaming mechanism operable on the client system. The present method further comprises governing the media content from the kernel-mode media device driver to a media device driver coupled with the compliance mechanism via the data path, for selectively restricting output of the media content.","In another embodiment, the present invention provides a system for preventing unauthorized recording of electronic media comprising means for activating a compliance mechanism to control a data path of a client system. The activating is in response to the client system receiving media content. The data path is a path of a kernel-mode media device driver in an operating system operable on the client system. The compliance mechanism is coupled to the client system and operable in conjunction with a media content presentation application coupled to the client system and operable thereon. The system further comprises means for directing the media content from the kernel-mode media device driver to a media device driver via the data path controlled by the compliance mechanism, for selectively restricting output of the media content.","These and other objects and advantages of the present invention will no doubt become obvious to those of ordinary skill in the art after having read the following detailed description of the preferred embodiments which are illustrated in the various drawing figures.","Reference will now be made in detail to embodiments of the invention, examples of which are illustrated in the accompanying drawings. While the invention-will be described in conjunction with embodiments, it will be understood that they are not intended to limit the invention to these embodiments. On the contrary, the invention is intended to cover alternatives, modifications, and equivalents, which may be included within the spirit and scope of the invention as defined by the appended claims. Furthermore, in the following detailed description of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, to one of ordinary skill in the art, the present invention may be practiced without these specific details. In other instances, well known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the present invention.","Some portions of the detailed description which follows are presented in terms of procedures, logic blocks, processing, and other symbolic representations of operations on data bits within a computing system or digital memory system. These descriptions and representations are the means used by those skilled in the data processing art to most effectively convey the substance of their work to others skilled in the art. A procedure, logic block, process, etc., is herein, and generally, conceived to be a self-consistent sequence of steps or instructions leading to a desired result. The steps are those involving physical manipulations of physical quantities. Usually, though not necessarily, these physical manipulations take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated in a computing system or similar electronic computing device. For reasons of convenience, and with reference to common usage, these signals are referred to as bits, values, elements, symbols, characters, terms, numbers, or the like, with reference to the present invention.","It should be borne in mind, however, that all of these terms are to be interpreted as referencing physical manipulations and quantities and are merely convenient labels and are to be interpreted further in view of terms commonly used in the art. Unless specifically stated otherwise as apparent from the following discussions, it is understood that discussions of the present invention refer to actions and processes of a computing system, or similar electronic computing device that manipulates and transforms data. The data is represented as physical (electronic) quantities within the computing system's registers and memories and is transformed into other data'similarly represented as physical quantities within the computing system's memories or registers, or other such information storage, transmission, or display devices.","In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. To one skilled in the art, the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid obscuring the present invention.","Embodiments of the present invention are discussed primarily in the context of a network of computer systems such as a network of desktop, workstation, laptop, handheld, and\/or other portable electronic device. For purposes of the present application, the term \u201cportable electronic device\u201d is not intended to be limited solely to conventional handheld or portable computers. Instead, the term \u201cportable electronic device\u201d is also intended to include many mobile electronic devices. Such mobile devices include, but are not limited to, portable CD players, MP3 players, mobile phones, portable recording devices, satellite radios, and other personal digital devices.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["100","100","100","100","100"]},"Computer system  of  comprises an address\/data bus  for communicating information, one or more central processors  coupled to bus  for processing information and instructions. Central processor(s)  can be a microprocessor or any alternative type of processor. Computer system  also includes a computer usable volatile memory , e.g., random access memory (RAM), static-RAM (SRAM), dynamic RAM (DRAM), synchronous dynamic RAM (SDRAM), double data rate RAM (DDR RAM), etc., coupled to bus  for storing information and instructions for processor(s) . Computer system  further includes a computer usable non-volatile memory , e.g., read only memory (ROM), programmable ROM, electronically programmable ROM (EPROM), electrically erasable ROM (EEPROM), flash memory (a type of EEPROM), etc., coupled to bus  for storing static information and instructions for processor(s) . In one embodiment, non-volatile memory  can be removable.","System  also includes one or more signal generating and receiving devices, e.g., signal input\/output device(s)  coupled to bus  for enabling computer  to interface with other electronic devices. Communication interface  can include wired and\/or wireless communication functionality. For example, in one embodiment, communication interface  is a serial communication port, but can alternatively be one of a number of well known communication standards and protocols, e.g., a parallel port, an Ethernet adapter, a FireWire (IEEE 1394) interface, a Universal Serial Bus (USB), a small computer system interface (SCSI), an infrared (IR) communication port, a Bluetooth wireless communication adapter, a broadband connection, a satellite link, an Internet feed, a cable modem, and the like. In another embodiment, a digital subscriber line (DSL) can be implemented as signal input\/output device . In such an instance, communication interface  may include a DSL modem.","Computer  of  can also include one or more computer usable data storage device(s)  coupled to bus  for storing instructions and information, in one embodiment of the present invention. In one embodiment, data storage device  can be a magnetic storage device, e.g., a hard disk drive, a floppy disk drive, a zip drive, or other magnetic storage device. In another embodiment, data storage device  can be an optical storage device, e.g., a CD (compact disc), a DVD (digital versatile disc), or other alternative optical storage device. Alternatively, any combination of magnetic, optical, and alternative storage devices can be implemented, e.g., a RAID (random array of independent disks or random array of inexpensive discs) configuration. It is noted that data storage device  can be located internal and\/or external of system  and communicatively coupled with system  utilizing wired and\/or wireless communication technology, thereby providing expanded storage and functionality to system . It is further noted that nearly any portable electronic device, e.g., device , can also be communicatively coupled with system  via utilization of wired and\/or wireless technology, thereby expanding the functionality of system .","System  can also include an optional display device  coupled to bus  for displaying video, graphics, and\/or alphanumeric characters. It is noted that display device  can be a CRT (cathode ray tube), a thin CRT (TCRT), a liquid crystal display (LCD), a plasma display, a field emission display (FED) or any other display device suitable for displaying video, graphics, and alphanumeric characters recognizable to a user.","Computer system  of  further includes an optional alphanumeric input device  coupled to bus  for communicating information and command selections to processor(s) , in one embodiment. Alphanumeric input device  is coupled to bus  and includes alphanumeric and function keys. Also included in computer  is an optional cursor control device  coupled to bus  for communicating user input information and command selections to processor(s) . Cursor control device  can be implemented using a number of well known devices such as a mouse, a trackball, a track pad, a joy stick, a optical tracking device, a touch screen, etc. It is noted that a cursor can be directed and\/or activated via input from alphanumeric input device  using special keys and key sequence commands. It is further noted that directing and\/or activating the cursor can be accomplished by alternative means, e.g., voice activated commands, provided computer system  is configured with such functionality.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["200","200","210","220","230","201","251","201","251"]},"Network  includes a web server  and a content server  which are communicatively coupled to Internet . Further, web server  and content server  can be communicatively coupled without utilizing Internet , as shown. Web server , content server , and client computers , , and  can communicate with each other. It is noted that computers and servers of network  are well suited to be communicatively coupled in various implementations. For example, web server , content server , and client computer systems , , and  of network  can be communicatively coupled via wired communication technology, e.g., twisted pair cabling, fiber optics, coaxial cable, etc., or wireless communication technology, or a combination of wired and wireless communication technology.","Still referring to , it is noted that web server , content server , and client computer systems ,  and  of network  can, in one embodiment, be each implemented in a manner similar to computer system  of . However, the server and computer systems in network  are not limited to such implementation. Additionally, web server  and content server  can perform various functionalities within network . It is also noted that, in one embodiment, web server  and content server  can both be disposed on a single or a plurality of physical computer systems, e.g., computer system  of .","Further, it is noted that network  can operate with and deliver any type of media content, (e.g., audio, video, multimedia, graphics, information, data, software programs, etc.) in any format. In one example, content server  can provide audio and video files to client computers - via Internet .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":["300","300","300","300","300","300","210","300","300","300","210"]},"There are currently two types of copyright licenses recognized by the DMCA for the protection of broadcasted copyrighted material. One of the broadcast copyright licenses is a compulsory license, also referred to as a statutory license. A statutory license is defined as a non-interactive license, meaning the user cannot select the song. Further, a caveat of this type of broadcast license is that a user must not be able to select a particular music file for the purpose of recording it to the user's computer system or other storage device. Another caveat of a statutory license is that a media file is not available more than once for a given period of time. In one example, the period of time can be three hours.","The other type of broadcast license recognized by the DMCA is an interactive licensing agreement. An interactive licensing agreement is commonly with the copyright holder, e.g., a record company, the artist, where the copyright holder grants permission for a server, e.g., web server  and\/or content server  of  to broadcast copyrighted material. Under an interactive licensing agreement, there are a variety of ways that copyrighted material, e.g., music files, can be broadcast. For example, one manner in which music files can be broadcast is to allow the user to select and listen to a particular sound recording, but without the user enabled to make a sound recording. This is commonly referred to as an interactive with \u201cno save\u201d license, meaning that the end user is unable to save or store the media content file in a relatively permanent manner. Additionally, another manner in which music files can be broadcast is to allow a user to not only select and listen to a particular music file, but additionally allow the user to save that particularly music file to disc and\/or burn the music file to CD, MP3 player, or other portable electronic device. This is commonly referred to as an interactive with \u201csave\u201d license, meaning that the end user is enabled to save, store, or burn to CD, the media content file.","It is noted that the DMCA allows for the \u201cperfect\u201d reproduction of the sound recording. A perfect copy of a sound recording is a one-to-one mapping of the original sound recording into a digitized form, such that the perfect copy is virtually indistinguishable and\/or has no audible differences from the original recording.","In one embodiment, CCM (copyright compliance mechanism)  can be stored in web server  and\/or content server  of network  and is configured to be installed into each client computer system, e.g., ,  and , enabled to access the media files stored within content server  and\/or web server . Alternatively, copyright compliance mechanism  can be externally disposed and communicatively coupled with a client computer system  via, e.g., a portable media device of . In yet another embodiment, CCM  can be configured to be operable from a media storage device upon which media files may be disposed.","Copyright compliance mechanism  is configured to be operable while having portions of components, entire components, combinations of components, disposed within one or more memory units and\/or data storage devices of a computer system, e.g., , , and\/or .","Additionally, portions of components, entire components and\/or combinations of components of CCM  can be readily updated, e.g., via Internet , to reflect changes or developments in the DMCA, changes or developments in copyright restrictions and\/or licensing agreements that pertain to any media file, changes in current media player applications and\/or the development of new media player applications, or to counteract subversive and\/or hacker-like attempts to unlawfully obtain one or more media files.","Referring to , in one embodiment, CCM  is shown to include instructions  for enabling client computer system  to interact with web server  and content server  of network . Instructions  enable client computer system  to interact with servers, e.g.,  and  in a network, e.g., .","The copyright compliance mechanism  also includes, in one embodiment, a user ID generator , for generating a user ID or user key, and one or more cookie(s) which contain(s) information specific to the user and the user's computer system, e.g., . In one embodiment, the user ID and the cookie(s) are installed in computer system  prior to installation of the remaining components of the copyright compliance mechanism . It is noted that the presence of a valid cookie(s) and a valid user ID\/user key are verified by web server  before the remaining components of a CCM  can be installed, within one embodiment of the present invention. Additionally, the user ID\/user key can contain, but is not limited to, the user's name, the user's address, the user's credit card number, verified email address, and an identity (username) and password selected by the user. Furthermore, the cookie can contain, but is not limited to, information specific to the user, information regarding the user's computer system , e.g., types of media applications operational therewithin, a unique identifier associated with computer system , e.g., a MAC (machine address code) address and\/or an IP address, and other information specific to the user and the computer system operated by the user. It is noted that the information regarding the client computer system, e.g., , the user of system , and an access key described herein can be collectively referred to as authorization data.","Advantageously, with information regarding the user and the user's computer system, e.g., , web server  can determine when a user of one computer system, e.g., , has given their username and password to another user using another computer system, e.g., . Because the username, password, and the user's computer system  are closely associated, web server  can prevent unauthorized access to copyrighted media content, in one embodiment. It is noted that if web server  detects unauthorized sharing of usernames and passwords, it can block the user of computer system , as well as other users who unlawfully obtained the username and password, from future access to copyrighted media content available through web server . Web server  can invoke blocking for any specified period of time, e.g., for a matter of minutes or hours to months, years, or longer.","Still referring to , copyright compliance mechanism  further includes one or more coder\/decoders (codec)  that, in one embodiment, is\/are adapted to perform, but is\/are not limited to, encoding\/decoding of media files, compressing\/decompressing of media files, detecting that delivered media files are encrypted as prescribed by CCM . In the present embodiment, coder\/decoder  can also extract key fields from a header attached to each media content file for, in part, verification that the file originated from a content server, e.g., .","In the present embodiment, coder\/decoder  can also perform a periodic and repeated check of the media file, while the media file is passed to the media player application, e.g., in a frame by frame basis or in a buffer by buffer basis, to ensure that CCM  rules are being enforced at any particular moment during media playback. It is noted that differing coder\/decoders  can be utilized in conjunction with various types of copyrighted media content including, but not limited to, audio files, video files, graphical files, alphanumeric files and the like, such that any type of media content file can be protected in accordance with embodiments of the present invention.","With reference still to , copyright compliance mechanism  also includes one or more agent programs  which are configured to engage in dialogs and negotiate and coordinate transfer of information between a computer system, e.g., , , or , a server, e.g., web server  and\/or content server , and\/or media player applications, with or without recording functionality, that are operable within a client computer system, in one embodiment. In the present embodiment, agent program  can also be configured to maintain system state, verify that other components are being utilized simultaneously, to be autonomously functional without knowledge of the client, and can also present messages, e.g., error messages, media information, advertising, etc., via a display window or electronic mail. This enables detection of proper skin implementation and detection of those applications that are running. It is noted that agent programs are well known in the art and can be implemented in a variety of ways in accordance with the present embodiment.","Copyright compliance mechanism  also includes one or more system hooks , in one embodiment of the present invention. A system hook  is, in one embodiment, a library that is installed in a computer system, e.g., , and intercepts system wide events. For example, a system hook , in conjunction with skins , can govern certain properties and\/or functionalities of media player applications operating within the client computer system, e.g., , including, but not limited to, mouse click shortcuts, keyboard shortcuts, standard system accelerators, progress bars, save functions, pause functions, rewind functions, skip track functions, forward track preview, copying to CD, copying to a portable electronic device, and the like.","It is noted that the term govern or governing, for purposes of the present invention, can refer to a disabling, deactivating, enabling, activating, etc., of a property or function. Governing can also refer to an exclusion of that function or property, such that a function or property may be operable but unable to perform in the manner originally intended. For example, during playing of a media file, the progress bar may be selected and moved from one location on the progress line to another without having an effect on the play of the media file.","It is further noted that codec  compares the information for the media player application operating in client computer system, e.g., , with a list of \u201csignatures\u201d associated with known media recording applications. In one embodiment, the signature can be, but is not limited to being, a unique identifier of a media player application and which can consist of the window class of the application along with a product name string which is part of the window title for the application. Advantageously, when new media player applications are developed, their signatures can be readily added to the signature list via an update of CCM  described herein.","The following C++ source code is exemplary implementation of the portion of a codec  for performing media player application detection, in accordance with an embodiment of the present invention. In another embodiment, the following source code can be modified to detect kernel streaming mechanisms operable within client system .",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"int"},{"entry":"IsRecorderPresent(TCHAR * szAppClass,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003TCHAR *\u2003szProdName)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003TCHAR","szWndText[_MAX_PATH]; \/* buffer to receive"]},{"entry":[{},"title string for window *\/"]},{"entry":["\u2003\u2003HWND","hWnd;\u2003\u2003\/* handle to target window for operation *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003int\u2003nRetVal;\u2003\u2003\/* return value for operation *\/"},{"entry":"\u2003\u2003\/* initialize variables *\/"},{"entry":"\u2003\u2003nRetVal = 0;"},{"entry":"\u2003\u2003if ( _tcscmp(szAppClass,_T(\u201c#32770\u201d))"},{"entry":"\u2003\u2003\u2003== 0)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\/* attempt to locate dialog box with specified window title *\/"},{"entry":"\u2003\u2003\u2003\u2003if ( FindWindow((TCHAR *) 32770, szProdName)"},{"entry":"\u2003\u2003\u2003\u2003\u2003!= (HWND) 0)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/* indicate application found *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003nRetVal = 1;"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\/* attempt to locate window with specified class *\/"},{"entry":"\u2003\u2003\u2003\u2003if ( (hWnd = FindWindow(szAppClass, (LPCTSTR) 0))"},{"entry":"\u2003\u2003\u2003\u2003\u2003!= (HWND) 0)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/* attempt to retrive title string for window *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (\u2003GetWindowText(hWnd,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003szWndText,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003_MAX_PATH)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003!= 0)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/* attempt to locate product name within title string *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if ( _tcsstr(szWndText, szProdName)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003!= (TCHAR *) 0)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/* indicate application found *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003nRetVal = 1;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\/* return to caller *\/"},{"entry":"\u2003\u2003return nRetVal;"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"It is further noted that codec  can also selectively suppress waveform input\/output operations to prevent recording of copyrighted media on a client computer system . For example, codec , subsequent to detection of bundled media player applications operational in a client computer system, e.g., , can stop or disrupt the playing of a media content file. This can be accomplished, in one embodiment, by redirecting and\/or diverting certain data pathways that are commonly used for recording, such that the utilized data pathway is governed by the copyright compliance mechanism . In one embodiment, this can be performed within a driver shim, e.g., wave driver shim  of .","A driver shim can be utilized for nearly any software output device, e.g., a standard Windows\u2122 waveform output device, e.g., Windows\u2122 Media Player, or hardware output device, e.g., speakers or headphones. Client computer system  is configured such that the driver shim (e.g.,  of , B, C, and D) will appear as the default waveform media device to client level application programs. Thus, requests for processing of waveform media input and\/or output will pass through the driver shim prior to being forwarded to the actual waveform audio driver, media device driver  of . Such waveform input\/output suppression can be triggered by other components of CCM , e.g., agent , to be active when a recording operation is initiated by a client computer system, e.g., , during the play back of media files which are subject to the DMCA.","It is noted that alternative driver shims can be implemented for nearly any waveform output device including, but not limited to, a Windows\u2122 Media Player. It is further noted that the driver shim can be implemented for nearly any media in nearly any format including, but not limited to, audio media files and audio input and output devices, video, graphic and\/or alphanumeric media files and video input and output devices.","The following C++ source code is an exemplary implementation of a portion of a codec  and\/or a custom media device driver  for diverting and\/or redirecting certain data pathways that are commonly used for recording of media content, in accordance with an embodiment of the present invention.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"DWORD"},{"entry":"_stdcall"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["widMessage(UINT","\u2003\u2003uDevId,"]},{"entry":["\u2003\u2003\u2003UINT","\u2003\u2003uMsg,"]},{"entry":["\u2003\u2003\u2003DWORD","dwUser,"]},{"entry":["\u2003\u2003\u2003DWORD","dwParam1,"]},{"entry":["\u2003\u2003\u2003DWORD","dwParam2)"]},{"entry":"{"},{"entry":["\u2003\u2003BOOL","bSkip;\u2003\u2003\/* flag indicating operation to be"]},{"entry":[{},"skipped *\/"]},{"entry":["\u2003\u2003HWND","\u2003\u2003hWndMon;\u2003\/* handle to main window for"]},{"entry":[{},"\u2003\u2003monitor *\/"]},{"entry":["\u2003\u2003DWORD","\u2003\u2003dwRetVal;\u2003\/* return value for operation *\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\/* initialize variables *\/"},{"entry":"\u2003\u2003bSkip = FALSE"},{"entry":"\u2003\u2003dwRetVal = (DWORD) MMSYSERR_NOTSUPPORTED;"},{"entry":"\u2003\u2003if(uMsg == WIDM_START)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\/* attempt to locate window for monitor application *\/"},{"entry":"\u2003\u2003\u2003\u2003if ( (hWndMon = FindMonitorWindow( ))"},{"entry":"\u2003\u2003\u2003\u2003\u2003!= (HWND)0)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/* obtain setting for driver *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003bDrvEnabled = (\u2003SendMessage(hWndMon,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"uiRegMsg,"]},{"entry":[{},"\u20030,"]},{"entry":[{},"0)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003== 0)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003? FALSE:TRUE;"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003if(bDrvEnabled == TRUE)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/* indicate error in operation *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003dwRetVal = MMSYSERR_NOMEM;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/* indicate operation to be skipped *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003bSkip = TRUE;"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003if(bSkip == FALSE)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\/* invoke entry point for original driver *\/"},{"entry":"\u2003\u2003\u2003\u2003dwRetVal = CallWidMessage(uDevId, uMsg, dwUser,"},{"entry":"\u2003\u2003\u2003\u2003dwParam1, dwParam2);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\/* return to caller *\/"},{"entry":"\u2003\u2003return dwRetVal;"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"It is noted that when properly configured, system hook  can govern nearly any function or property within nearly any media player application that may be operational within a client computer system, e.g., -. In one embodiment, system hook  is a DLL (dynamic link library) file. It is further noted that system hooks are well known in the art, and are a standard facility in a Microsoft Windows\u2122 operating environment, and accordingly can be implemented in a variety of ways. However, it is also noted that system hook  can be readily adapted for implementation in alternative operating systems, e.g., Apple\u2122 operating systems, Sun Solaris\u2122 operating systems, Linux operating systems, and nearly any other operating system.","In , copyright compliance mechanism  also includes one or more skins , which can be designed to be installed in a client computer system, e.g., -. In one embodiment, skins  are utilized to assist in client side compliance with the DMCA (digital millennium copyright act) regarding copyrighted media content. Skins  are customizable interfaces that, in one embodiment, are displayed on a display device (e.g., ) of computer system  and provide functionalities for user interaction of delivered media content. Additionally, skins  can also provide a display of information relative to the media content file including, but not limited to, song title, artist name, album title, artist bio, and other features such as purchase inquiries, advertising, and the like.","Furthermore, when system hook  is unable to govern a function of the media player application operable on a client computer system, e.g., , such that client computer system could be in non-compliance with DMCA and\/or RIAA restrictions, a skin  can be implemented to provide compliance.","Differing skins  can be implemented depending upon the DMCA and\/or RIAA restrictions applicable to each media content file. For example, in one embodiment, a skin may be configured for utilization with a media content file protected under a non-interactive agreement (DMCA), such that skin may not include a pause function, a stop function, a selector function, and\/or a save function, etc. Another skin, e.g., skin may, in one embodiment, be configured to be utilized with a media content file protected under an interactive with \u201cno save\u201d agreement (DMCA), such that skin may include a pause function, a stop function, a selector function, and for those media files having an interactive with \u201csave\u201d agreement, a save or a burn to CD function.","Still referring to , it is further noted that in the present embodiment, each skin  can have a unique name and signature. In one embodiment, skin  can implemented, in part, through the utilization of an MD (message digest) 5 hash table or similar algorithm. An MD5 hash table can, in one implementation, be a check-sum algorithm. It is well known in the art that a skin, e.g., skin , can be renamed and\/or modified to incorporate additional features and\/or functionalities in an unauthorized manner. Since modification of the skin would change the check sum and\/or MD5 hash, without knowledge of the MD5 hash table, changing the name or modification of the skin may simply serve to disable the skin, in accordance with one embodiment of the present invention. Since copyright compliance mechanism  verifies skin , MD5 hash tables advantageously provide a deterrent against modifications made to the skin.","In one embodiment, copyright compliance mechanism  also includes one or more custom media device driver(s)  for providing an even greater measure of control over the media stream while increasing compliance reliability. A client computer system, e.g., , can be configured to utilize a custom media device application, e.g., custom media device  (shown in , C, and D), to control unauthorized recording of media content files. A custom media device application can be, but is not limited to, a custom media audio device application for media files having sound content, a custom-video device application for media files having graphical and\/or alphanumeric content, etc. In one embodiment, custom media device  of  is an emulation of the custom media device driver . With reference to audio media, the emulation is performed in a waveform audio driver associated with custom media device . Driver  is configured to receive a media file being outputted by system  prior to the media file being sent to a media output device, e.g., media output device , and\/or a media output application, e.g., recording application . Examples of a media output device includes, but is not limited to, a video card for video files, a sound card for audio files, etc. Examples of a recording application can include, but is not limited to, CD burner applications for writing to another CDs, ripper applications which capture the media file and change the format of the media file, e.g., from a MP3 file to a .wav file. In one embodiment, client computer system  is configured with a custom media device driver  emulating custom media device , and which is system 's default device driver for media file output. In one embodiment, an existing GUI (graphical user interface) can be utilized or a GUI can be provided, e.g., by utilization of skin  or a custom web based player application or as part of a CCM  installation bundle, for forcing or requiring system  to have driver  as the default driver.","Therefore, when a media content file is received by system  from server , the media content file is playable, provided the media content file passes through the custom media device application (e.g.,  of ), emulated by custom media device driver , prior to being outputted. However, if an alternative media player application is selected, delivered media files from server  will not play on system .","Thus, secured media player applications would issue a media request to the driver, e.g., , for the custom media device  which then performs necessary media input suppression, e.g., waveform suppression for audio files, prior to forwarding the request to the default Windows\u2122 media driver, e.g., waveform audio driver for audio files.","It is noted that requests for non-restricted media files can pass directly through custom media device driver  to a Windows\u2122 waveform audio driver operable on system , thus reducing instances of incompatibilities with existing media player applications that utilize waveform media, e.g., audio, video, etc. Additionally, media player applications that do not support secured media would be unaffected. It is further noted that for either secured media or non-restricted media, e.g., audio media files, waveform input suppression can be triggered by other components of CCM , e.g., agents , system hooks , and skins , or a combination thereof, to be active when a recording operation is initiated simultaneously with playback of secured media files, e.g., audio files. Custom device drivers are well known and can be coded and implemented in a variety of ways including, but limited to, those found at developers network web sites, e.g., a Microsoft\u2122 or alternative OS (operating system) developer web sites.","Advantageously, by virtue of system  being configured with a custom media device as the default device driver e.g., device  of , C, and D, emulated by a custom media device driver , those media player applications that require their particular device driver to be the default driver, e.g., Total Recorder, etc., are rendered non-functional for secured music. Further advantageous is that an emulated custom media device provides no native support for those media player applications used as a recording mechanism, e.g., DirectSound capture, (direct sound  of , B, C, and D) etc., that are able to bypass user-mode drivers for most media devices. Additionally, by virtue of the media content being sent through device driver , thus effectively disabling unauthorized saving\/recording of media files, in one embodiment, media files that are delivered in a secured delivery system do not have to be encrypted, although, in another embodiment, they still may be encrypted. By virtue of non-encrypted media files utilizing less storage space and network resources than encrypted media files, networks having limited resources can utilize the functionalities of driver  of CCM  to provide compliance with copyright restrictions and\/or licensing agreements applicable with a media content file without having the processing overhead of encrypted media files.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 4","b":["400","400","250","251","250","251","300","210"]},"Client computer system  can communicatively couple with a network (e.g., ) to request a media file, a list of available media files, or a play list of audio files, e.g., MP3 files, etc. In response, web server  determines if the request originates from a registered user authorized to receive media files associated with the request. If the user is not registered with the network, web server  can initiate a registration process with the requesting client . Client registration can be accomplished in a variety of ways. For example, web server  may deliver to a client  a registration form having various text entry fields into which the user can enter required information. A variety of information can be required from the user by web server  including, but not limited to, user's name, address, phone number, credit card number, verifiable email address, and the like. In addition, registration can, in one embodiment, include a requirement for the user to select a username and password.","Still referring to , web server  can, in one embodiment, detect information related to the client's computer system, e.g., , and store that information in a user\/media database . For example, web server  can detect a unique identifier of client computer system . In one embodiment, the unique identifier can be the MAC (machine address code) address of a NIC (network interface card) of client computer system  or the MAC address of the network interface adapter integrated on the motherboard of system . It is understood that a NIC enables a client computer system  to access web server  via Internet . It is well known that each NIC typically has a unique identifying number MAC address. Further, web server  can, in one-embodiment, detect and store (also in database ) information regarding the types(s) of media player application(s), e.g., Windows Media Player\u2122, Real Player\u2122, iTunes Player\u2122 (Apple), Live 365\u2122 player, and those media player applications having recording functionality, e.g., Total Recorder, Cool Edit 2000, Sound Forge, Sound Recorder, Super MP3 Recorder, and the like, that are present and operable in client computer system . In one embodiment, the client information is verified for accuracy and is then stored in a user database (e.g., ) within web server .","Subsequent to registration completion, creation of the user ID and password, and obtaining information regarding client computer system , all or part of this information can be installed in client computer system . In one embodiment, client computer system  information can be in the form of a cookie. Web server  then verifies that the user and client computer system  data is properly installed therein and that their integrity has not been compromised. Subsequently, web server  installs a copyright compliance mechanism (e.g., ) into the client's computer system, e.g., , in one embodiment of the present invention. It is noted that web server  may not initiate installation of CCM  until the user ID, password, and client computer system  information is verified. A variety of common techniques can be employed to install an entire CCM , portions of components, entire components, and\/or combinations or a function of components. For example, copyright compliance mechanism  can be installed in a hidden directory within client computer system , thereby preventing unauthorized access to it. In one embodiment of the present invention, it is noted that unless CCM  is installed in client computer system , its user will not be able to request, access, or have delivered thereto, media files stored by web server  and\/or content server ,","Referring still to , upon completion of client registration and installation of CCM , client computer system  can then request a media play list or a plurality of play lists, etc. In response, web server  determines whether the user of client computer system  is authorized to receive the media play list associated with the request. In one embodiment, web server  can request the username and password. Alternatively, web server  can utilize user database  to verify that computer  is authorized to receive a media play list. If client computer  is not authorized, web server  can initiate client registration, as described herein. Additionally, web server  can disconnect computer  or redirect it to an alternative web site. Regardless, if the user and client computer system  are not authorized, web server  will not provide the requested play list to client computer system .","However, if client computer system  is authorized, web server  can check copyright compliance mechanism  within data base  to determine if it, or any of the components therein, have been updated since the last time client computer system  logged in to web server . If a component of CCM  has been updated, web server  can install the updated component and\/or a more current version of CCM  into client computer system , e.g., via Internet . If CCM  has not been updated, web server  can then deliver the requested media play list to system  via Internet  along with an appended user key or user identification (ID). It is noted that user database  can also include data for one or more media play lists that can be utilized to provide a media play list to client computer system . Subsequently, the user of client computer system  can utilize the received media play list in combination with the media player application operating on system  to transmit a delivery request for one or more desired pieces of media content from web server . It is noted that the delivery request contains the user key for validation purposes.","Still referring to , upon receiving the media content delivery request, web server  can then check the validity of the requesting media application and the attached user key. In one embodiment, web server  can utilize user database  to check their validity. If either or both are invalid, web server , in one embodiment, can redirect unauthorized client computer system  to an alternative destination to prevent abuse of the system. However, if both the requesting media application and the user key are valid, CCM  verifies that skins  are installed in client computer system . Additionally, CCM  further verifies that system hook(s)  have been run or are running to govern certain functions of those media player applications operable within client computer system  that are known to provide non-compliance with the DMCA and\/or the RIAA. Additionally, CCM  further diverts and\/or redirects certain pathways that are commonly used for recording, e.g., driver  of , device  of , device  of , and driver  of . Once CCM  has performed the above described functions, web server  then, in one embodiment, issues to the client computer  a redirect command to the current address location of the desired media file content along with an optional time sensitive access key, e.g., for that hour, day, or other defined timeframe.","In response to the client computer system  receiving the redirect command from web server , the media player application operating on client computer system  automatically transmits a new request and the time sensitive access key to content server  for delivery of one or more desired pieces of media content. The validity of the time sensitive access key is checked by content server . If invalid, unauthorized client computer  is redirected by content server  to protect against abuse of the system and unauthorized access to content server . If the time sensitive access key is valid, content server  retrieves the desired media content from content database  and delivers it to client computer system . It is noted that, in one embodiment, the delivered media content can be stored in hidden directories and\/or custom file systems that may be hidden within client computer system  thereby preventing future unauthorized distribution. In one embodiment, an HTTP (hypertext transfer protocol) file delivery system is used to deliver the requested media files, meaning that the media files are delivered in their entirety to client computer system , as compared to streaming media which delivers small portions of the media file.","Still referring to , it is noted that each media file has, in one embodiment, had a header attached therewith prior to delivery of the media file. In one embodiment, the header can contain information relating to the media file, e.g., title or media ID, media data such as size, type of data, and the like. The header can also contain a sequence or key that is recognizable to copyright compliance mechanism  that identifies the media file as originating from a content server . In one embodiment, the header sequence\/key can also contain instructions for invoking the licensing agreements and\/or copyright restrictions that are applicable to that particular media file.","Additionally, if licensing agreements or copyright restrictions are changed, developed, or created, or if new media player applications, with or without recording functionality, are developed, CCM  would have appropriate modifications made to portions of components, entire components, combinations of components, and\/or the entire CCM  to enable continued compliance with licensing agreements and copyright restrictions. Furthermore, subsequent to modification of copyright compliance mechanism , modified portions of, or the entire updated CCM  can easily be installed in client computer system  in a variety of ways. For example, the updated CCM  can be installed during client interaction with web server , during user log-in, and\/or while client computer system  is receiving the keyed play list.","Referring still to , it is further noted that, in one embodiment, the media files and attached headers can be encrypted prior to being stored within content server . In one embodiment, the media files can be encrypted utilizing randomly generated keys. Alternatively, variable length keys can be utilized for encryption. It is noted that the key to decrypt the encrypted media files can be stored in a database , content database  or in some combination of databases  and . It is further noted that the messages being passed back and forth between client computer system  and web server  can also be encrypted, thereby protecting the media files and the data being exchanged from unauthorized use or access. There are a variety of encryption mechanisms and programs that can be implemented to encrypt this data including, but not limited to, exclusive OR, shifting with adds, public domain encryption programs such as Blowfish, and non-public domain encryption mechanisms. It is also noted that each media file can be uniquely encrypted, such that if the encryption code is cracked for one media file, it is not applicable to other media files. Alternatively, groups of media files can be similarly encrypted. Furthermore, in another embodiment, the media files may not be encrypted when being delivered to a webcaster known to utilize a proprietary media player application, e.g., custom media device driver .","Subsequent to media file decryption, the media file may be passed through CCM , e.g., a coder\/decoder , to a media player application operating on client computer system , e.g. playback application  of , B, C, D, and A, which can then access and utilize the delivered high fidelity media content, enabling its user(s) to experience the media content, e.g., listen to it, watch it, view it, or the like. In one embodiment of the present invention, a specialized or custom media player may or may not be required to experience the media content, e.g., skin  of . A skin  may be necessary when CCM  cannot modify an industry standard media player application to comply with copyright restrictions and\/or licensing agreements in accordance with the DMCA. Alternatively, an industry standard media player can be utilized by client computer system  to experience the media content. Typically, many media player applications are available and can include, but are not limited to, Windows\u2122 Media Player\u2122 for PCs (personal computers), iTunes\u2122 Player or QuickTime\u2122 for Apple computers, and XMMS player for computers utilizing a Linux operating system. Regardless of the media player application utilized, while the media file is passed to the media player application, e.g., in a frame by frame basis or in a buffer, coder\/decoder  will repeatedly ensure that CCM  rules are being enforced at any particular moment during media playback, shown as step  of .","As the media file content is delivered to the media player application, periodically, e.g., after a specified number of frames, after a defined period of time, or any desired time or data period, coder\/decoder  repeatedly determines whether or not all the rules are enforced, in accordance with rules as defined by CCM . If the rules are not enforced, e.g., change due to a user opening up a recording application, e.g., Total Recorder or alternative application, the presentation of the media content is, in one embodiment, suspended or halted. In another embodiment, the presentation of the media content can be modified to output the media content non audibly, e.g., silence. In yet another embodiment, the media content may be audible but recording functionality can be disabled, such that the media content cannot be recorded. These presentation stoppages are collectively shown as step  of .","If the rules, in accordance with CCM , are enforced, the codec\/decoder  retrieves a subsequent portion of the media content that is stored locally in client computer system . The newly retrieved portion of the media file is then presented by the client's media player application. While the newly retrieved portion is presented, CCM  then again checks that the rules are enforced, and retrieves an additional portion of the media file or suspends presentation of the media file is the rules are not being enforced, and these steps are performed repeatedly throughout the playback of the media file, in a loop environment, until the media file's contents have been presented in their entirety. Advantageously, by constant monitoring during playing of media files, CCM  can detect undesired activities and enforces those rules as defined by CCM .",{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 5A","FIG. 3"],"b":["500","309","300","210","300","210"]},"In one embodiment, a copyright compliance mechanism  is shown as being communicatively coupled with a media playback application  via connection . Therefore, CCM  is enabled to communicate with playback application . In one embodiment, CCM  can be integrated into a media playback application. CCM  is also coupled to and controls a selectable switch  in wave shim driver  (as described in ) via connection . CCM  is further coupled to and controls a selectable switch  in direct sound  via connection . Depending upon the copyright restrictions and licensing agreements applicable to an incoming media file, e.g., , CCM  controls whether switches  and  are open (shown), thus preventing incoming media  from reaching a media recording application, or closed (not shown) to allow recording of incoming media .","For example, incoming media  may originate from a content server, e.g., , coupled to system . In another example, incoming media  may originate from a personal recording\/electronic device, e.g., a MP3 player\/recorder or similar device, coupled to system . Alternatively, incoming media  may originate from a magnetic, optical or alternative media storage device inserted into a media device player coupled to system , e.g., a CD or DVD inserted into a CD or DVD player, a hard disk in a hot swappable hard drive, an SD (secure digital card) inserted into a SD reader, and the like. In yet another example, incoming media  may originate from another media player application or media recording application. Incoming media  may also originate from a satellite radio feed (e.g., XM radio), a personal communication device (e.g., a mobile phone), a cable television radio input (e.g., DMX (digital music express)), or a set-top box. It is noted that incoming media  can originate from nearly any source that can be coupled to system . However, regardless of the source of incoming media , embodiments of the present invention, described herein, can prevent unauthorized recording of the media.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 5A","b":["501","210","499","501"]},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 5A","b":["505","210","570","505","105","210","210","505","499","505","499","539","570","580","499","540","502"]},"For purposes of , B, C, and D, the terms wave-in line and wave-out line are referenced from the perspective of media device driver . Additionally, for the most part, wave-in lines are downwardly depicted and wave-out lines are upwardly depicted in , B, C, and D.","Continuing with , playback application  is coupled with an operating system (O\/S) multimedia subsystem  and direct sound  via wave-in lines  and  respectively. O\/S multimedia subsystem  is coupled to a wave shim driver  via wave-in line  and wave-out line . O\/S multimedia subsystem  is also coupled to a recording application  via wave-out line . Operating system (O\/S) multimedia subsystem  can be any O\/S multimedia subsystem, e.g., a Windows\u2122 multimedia subsystem for system  operating under a Microsoft O\/S, a QuickTime\u2122 multimedia subsystem for system  operating under an Apple O\/S, and so on. Playback application  is also coupled with direct sound  via wave-in line .","Direct sound , in one instance, may represent access to a hardware acceleration feature in a standard audio device, enabling lower level access to components within media device driver . In another instance, direct sound  may represent a path that can be used by a recording application, e.g., Total Recorder, that can be further configured to bypass the default device driver, e.g., media device driver  to capture incoming media  for recording. For example, direct sound  can be enabled to capture incoming media  via wave-in line  and unlawfully output media  to a recording application  via wave-out line , as well as media  eventually going to media device driver , the standard default driver.","Still referring to , wave shim driver  is coupled with media device driver  via wave-in line  and wave-out line . Media device driver  is coupled with direct sound  via wave-in line  which is shown to converge with wave-in line  at media device driver . Media device driver  is also coupled with direct sound  via wave-out line .","Wave-out lines  and  are shown to diverge from wave-out line  at media device driver  into separate paths. Wave-out line  feeds into wave shim driver  and wave-out line  feeds into direct sound . When selectable switch  and  are open (shown), incoming media  cannot flow to recording application , thus preventing unauthorized recording of it.","For example, incoming media  is received at playback application . Playback application  activates and communicates to CCM  regarding copyright restrictions and\/or licensing agreements applicable to incoming media . If recording restrictions apply to media , CCM  can, in one embodiment, open switches  and , thereby blocking access to recording application , effectively preventing unauthorized recording of media . In one embodiment, CCM  can detect if system  is configured with direct sound  selected as the default driver to capture incoming media , via wave-in line , or a recording application is detected and\/or a hardware accelerator is active, such that wave driver shim  can be bypassed by direct sound . Upon detection, CCM  can control switch  such that the output path, wave-out line , to recording application  is blocked. It is further noted that CCM  can detect media recording applications and devices as described herein, with reference to .","Alternatively, if media device driver  is selected as the default driver, incoming media  is output from playback application  to O\/S multimedia subsystem  on wave-in line . From subsystem , media  is output to wave shim driver  via wave-in line . The wave shim driver  was described herein with refernce to . Media  is output from wave shim driver  to media device driver  via wave-in line . Once received by media device driver , media  can be output via wave-out line  to a media output device  coupled therewith via wave-out line . Additionally, media device driver  can simultaneously output media  on wave-out line  back to wave shim driver . Dependent upon recording restrictions applicable to media , CCM  can, in one embodiment, close switch  (not shown as closed), thereby allowing media  to be output from wave shim driver  to subsystem  (via wave-out line ) and then to recording application  via wave-out line . Alternatively, CCM  can also open switch , thereby preventing media  from reaching recording application .","It is particularly noted that by virtue of CCM  controlling both switches  and , and therefore controlling wave-out line  and wave-out line  leading into recording application , incoming media files, e.g., media , can be prevented from being recorded in an unauthorized manner in accordance with applicable copyright restrictions and\/or licensing agreements related to the incoming media. It is also noted that embodiments of the present invention in no way interfere with or inhibit the playback of incoming media .",{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 5B","FIGS. 4"],"b":["500","210","300","300","210","5","5","5","6","7"]},"Diagram B of  is similar to diagram A of , with a few changes. Particularly, diagram B includes a custom media device  communicatively interposed between and coupled to O\/S multimedia subsystem  and wave shim driver . Custom media device  is coupled to O\/S multimedia subsystem via wave-in line  and wave-out line . Custom media device  is coupled with wave shim driver  via wave-in line  and wave-out line . Additionally, custom media device  is coupled with direct sound  via wave-in line  which converges with wave-in line  and wave-out line  which diverges from wave-out line , in one embodiment.","Also added to  is a media hardware output device  that is coupled to media device hardware driver  via line . Media hardware output device  can be, but is not limited to, a sound card for audio playback, a video card for video, graphical, alphanumeric, etc, output, and the like.","In one embodiment, CCM  is communicatively coupled with playback application  via connection , waveform driver shim  via connection , and custom media device , via connection . CCM  is coupled to and controls a selectable switch  in waveform driver shim  via connection . CCM  is also coupled to and controls a selectable switch  in custom audio device  via connection . Depending upon the copyright restrictions and licensing agreements applicable to an incoming media file, e.g., media , CCM  controls whether switches  and  are open (shown), thus preventing the incoming media  from reaching a recording application, or closed (not shown) so as to allow recording of the incoming media .","Continuing with , direct sound  is shown coupled with custom media device  via wave-in line , instead of being coupled with media device driver  (). In one embodiment, custom audio device  mandates explicit selection through system , meaning that custom audio device  needs to be selected as a default driver of system . By virtue of having the selection of custom media device  as the default driver of system , the data path necessary for direct sound  to capture the media content is selectively closed.","For example, incoming media  originating from nearly any source with reference to  is received by media playback application  of system . Playback application  communicates to CCM , via connection , to determine whether incoming media  is protected by any copyright restrictions and\/or licensing agreements. Playback application  communicates with CCM  to control switch  and  accordingly. In the present example, recording of incoming media  would violate applicable restrictions and\/or agreements and therefore switch  is in an open position, such that the output path to recording application , e.g., wave-out line  and\/or wave-out line , is effectively blocked, thereby preventing unauthorized recording of media .","Alternatively, if media device driver  is selected as the default driver, incoming media  continues from O\/S multimedia subsystem , through custom audio device , wave driver shim , and into media device driver  where media  can be simultaneously output to media output device  via line , and output on wave-out line  to wave- and outputted by media device driver  to wave shim driver  on wave-out line . However, by virtue of CCM  controlling switch , wave-out line  which eventually leads to recording application  is blocked, thus effectively preventing unauthorized recording of media .","It is particularly noted that by virtue of CCM  controlling both switches  and  and therefore controlling wave-out line  and wave-out line , any incoming media files, e.g., incoming media , can be prevented from being recording in an unauthorized manner in accordance with applicable copyright restrictions and\/or licensing agreements related to the incoming media.","Still referring to , it is further noted that custom media device  allows for unfettered playback of incoming media . Additionally, at any time during playback of media , custom media device  can be dynamically activated by CCM .",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 5C","FIGS. 4"],"b":["500","210","300","300","210","5","5","5","6","7"]},"Diagram C of  is similar to diagram B of , with a few changes. Particularly, diagram C includes a media hardware output device  that is coupled with a media device driver . In one embodiment, media hardware output device  can be a S\/PDIF (Sony\/Phillips Digital Interface) card for providing multiple outputs, e.g., an analog output  and a digital output . An alternative media hardware output device providing similar digital output can also be implemented as device  including, but not limited to, a USB (universal serial bus) output device and\/or an externally accessible USB port located on system , a FireWire (IEEE1394) output device and\/or an externally accessible FireWire port located on system , with wireline or wireless functionality. In the present embodiment, media hardware output device  is shown to include a switch  controlled by CCM  via communication line , similar to switches  and , for controlling output of incoming media .","In one embodiment, CCM  is communicatively coupled with playback application  via connection , waveform driver shim  via connection , custom media device , via connection , and media hardware output device  via connection . CCM  is coupled to and controls a selectable switch  in waveform driver shim  via connection . CCM  is also coupled to and controls a selectable switch  in custom audio device  via connection . CCM  is further coupled to and controls a selectable switch  in media hardware output device  via connection . Depending upon the copyright restrictions and licensing agreements applicable to an incoming media file, e.g., media , CCM  controls whether switches  and  are open (shown), thus preventing the incoming media  from reaching a recording application, or closed (not shown) so as to allow recording of the incoming media . Additionally, CCM  controls whether switch  is open (shown), thus preventing incoming media  from being output from digital output  of media hardware output device , or closed (not shown) to allow incoming media  to be output from media hardware output device .","By controlling media hardware output device , copyright compliance mechanism  can prevent unauthorized output of incoming media  to, e.g., a digital recording device that may be coupled with digital output  of media hardware output device . Accordingly, in one embodiment, CCM  is enabled to also detect digital recording devices that may be coupled to a digital output line, e.g., , of a media hardware output device, e.g., . Examples of a digital recording device that can be coupled to media hardware output device  can include, but is not limited to, mini-disc recorders, MP3 recorders, personal digital recorders, digital recording devices coupled with multimedia systems, personal communication devices, set-top boxes, and\/or nearly any digital device that can capture an incoming media  being output from a media hardware output device , e.g. a sound card.","Continuing with , direct sound  is shown coupled with custom media device  via wave-in line , instead of being coupled with media device driver  (). In one embodiment, custom audio device  mandates explicit selection through system , meaning that custom audio device  is needs to be selected as a default driver of system . By virtue of having the selection of custom media device  as the default driver of system , the data path necessary for direct sound  to capture the media content is selectively closed.","For example, incoming media  originating from nearly any source with reference to  is received by media playback application  of system . Playback application  communicates to CCM , via connection , to determine whether incoming media  is protected by any copyright restrictions and\/or licensing agreements. Playback application  communicates with CCM  to control switch , , and  accordingly. In the present example, recording of incoming media  would violate applicable restrictions and\/or agreements and therefore switch  is in an open position, such that the output path to recording application , e.g., wave-out line  and\/or wave-out line , is effectively blocked, thereby preventing unauthorized recording of media .","Alternatively, if media device driver  is selected as the default driver, incoming media  continues from O\/S multimedia subsystem , through custom audio device , wave driver shim , and into media device driver  where media  can be simultaneously output to media output device  via line , and output on wave-out line  to wave- and outputted by media device driver  to wave shim driver  on wave-out line . However, by virtue of CCM  controlling switch , wave-out line  which eventually leads to recording application  is blocked, thus effectively preventing unauthorized recording of media .","It is particularly noted that by virtue of CCM  controlling both switches  and  and therefore controlling wave-out line  and wave-out line , any incoming media files, e.g., incoming media , can be prevented from being recording in an unauthorized manner in accordance with applicable copyright restrictions and\/or licensing agreements related to the incoming media.","Still referring to , it is particularly noted that although CCM  can prevent unauthorized recording of incoming media  by controlling switches  and , thus preventing incoming media  from reaching recording application , controlling switches  and  do nothing to prevent incoming media  from being captured by a peripheral digital device, e.g., a mini-disc recorder, etc., coupled to a digital output  of device . Thus, by also controlling the output, via digital output  of media hardware output device , through control of switch , CCM  can prevent unauthorized capturing of incoming media  during output, e.g., on a sound card for audio files, a video card for video and\/or graphical files, regardless of whether incoming media  is received in a secure and encrypted manner. However, when switch  is in a closed position, incoming media  may be played back in an unfettered manner. Additionally, at any time during playback of media , switch  of custom media device , switch  of media device driver , and\/or switch  of media hardware output device  can be dynamically activated by CCM .",{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 5D","FIGS. 4"],"b":["500","210","300","300","210","5","5","5","6","7"]},"Diagram D of  is similar to diagram C of , with some changes. Particularly, diagram D includes a kernel streaming mechanism , e.g., DirectKS, that is coupled with a media device driver . In one embodiment, DirectKS  can be used for establishing a direct connection with media device driver . In the present embodiment, media device driver  is shown to include a switch  controlled by CCM  via communication line , that is similar to switches , , and , for controlling output of incoming media .","In one embodiment, CCM  is communicatively coupled with: playback application  via connection , waveform driver shim  via connection , custom media device , via connection , and media device driver  via connection . Specifically, CCM  is coupled to and controls a selectable switch  in waveform driver shim  via connection . CCM  is also coupled to and controls a selectable switch  in custom audio device  via connection . CCM  is further coupled to and controls a selectable switch  in media device driver  via connection . Depending upon the copyright restrictions and licensing agreements applicable to an incoming media file, e.g., media , CCM  controls whether switches  and  are open (shown), thus preventing the incoming media  from reaching a recording application, or closed (not shown) so as to allow recording of the incoming media . Additionally, CCM  controls whether switch  is open (shown), thus preventing incoming media  from being returned from media device driver  to playback application , where DirectKS  can capture incoming media  and redirect it to recording application  to create an unauthorized copy or recording of incoming media . CCM  can also control whether switch  is closed (not shown) to allow incoming media  to be returned to playback application , where DirectKS  can capture and redirect incoming media  to recording application .","DirectKS , in one embodiment, may represent a kernel streaming mechanism that is adapted to establish a direct connection with a media device driver  of an operating system operable on client computer system , enabling kernel level access to media device driver . A kernel streaming mechanism can be implemented for the purpose of precluding utilization of standard audio APIs (application programming interfaces) to play or record media content, with particular attention paid to those playback applications with low latency requirements. DirectKS  can bypass existing APIs and communicate with media device driver . DirectKS  can be readily adapted to work in conjunction with a playback application, e.g., , to capture and redirect incoming media  to recording application , via wave-out line . Accordingly, DirectKS  can be implemented to create unauthorized media recordings.","By controlling media device driver , copyright compliance mechanism  can prevent unauthorized output of incoming media  to, e.g., a digital recording device  that may be coupled with recording application . In one embodiment, media device driver  is configured through the kernel mixer (not shown) to control the data path. Additionally, in one embodiment, CCM  is enabled to also detect a kernel streaming mechanism  (e.g., DirectKS) that may be operable on client computer system , as described herein with reference to .","In one embodiment, custom media device  mandates explicit selection through system , meaning that custom media device  is needs to be selected as a default driver of system . By virtue of having the selection of custom media device  as the default driver of system , the data path necessary for direct sound  to capture the media content is selectively closed.","For example, incoming media  originating from nearly any source with reference to  is received by media playback application  of system . Playback application  communicates to CCM , via connection , to determine whether incoming media  is protected by any copyright restrictions and\/or licensing agreements. Playback application  communicates with CCM  to control switches , , , and , accordingly. In the present example, recording of incoming media  would violate applicable restrictions and\/or agreements and therefore switch  is in an open position, such that the output path to recording application , e.g., wave-out line  and\/or wave-out line  and\/or wave-out line , is effectively blocked, thereby preventing unauthorized recording of media .","Still referring to , it is particularly noted that although CCM  can prevent unauthorized recording of incoming media  by controlling switches , , and , thus preventing incoming media  from reaching recording application , controlling switches , , and , do nothing to prevent incoming media  from being returned to recording application  by a kernel streaming mechanism  (e.g., DirectKS), which enables capturing and redirecting of incoming media  to recording application , via wave-out line . Thus, by also controlling switch  of media device driver , CCM  can prevent kernel streaming mechanism  from returning incoming media  to recording application , thereby preventing incoming media  from being captured and redirected to recording application  in an attempt to create and unauthorized copy and\/or recording of incoming media . However, when switch  is in a closed position, incoming media  may be returned to a recording application , such that recording could be possible, provided recording does not violate copyright restrictions applicable to incoming media . Additionally, at any time during playback of media , switch  of custom media device , switch  of wave shim driver , and\/or switch  of media device driver  can be dynamically activated by CCM .",{"@attributes":{"id":"p-0130","num":"0129"},"figref":["FIG. 6A","FIGS. 5A","FIGS. 5A","FIGS. 5B","FIG. 5D"],"b":["499","501","5","5","5","605","499","499","499","502","5","5","5","529","575","570","5","5","515"]},"Playback application  is coupled with CCM  via communication line  in a manner analogous to , B, C, and\/or D. Although not shown in , it is noted that CCM  is also coupled to switches  and  as shown in , switches  and  in , switches , , and  in , and switches , , , and , in .","In one embodiment, an indicator  is attached to incoming media  for preventing unauthorized copying or recording in accordance with the SCMS. In one embodiment, indicator  can be a bit that may be transmitted prior to beginning the delivery of incoming media  to playback application . In another embodiment, indicator  may place at the beginning of the bit stream of incoming media . In another embodiment, indicator  may be placed within a frame period of incoming media , e.g., every fifth frame, or any other desired frame period. In another embodiment, indicator  may be transmitted at a particular time interval or intervals during delivery of the media file, e.g. incoming media . Thus, indicator  may be placed nearly anywhere within or attached to the bit stream related to incoming media .","Indicator  may be comprised of various indicators, e.g., a level 0 indicator, a level 1 indicator, and a level 2 indicator, in one embodiment of the present invention. In the present embodiment, a level 0 indicator may be for indicating to CCM  that copying is permitted without restriction, e.g., incoming media  is not copyrighted or that the copyright is not asserted. In the present embodiment, a level 1 indicator may be for indicating to CCM  that one generation of copies of incoming media  may be made, such that incoming media  is an original copy and that one copy may be made. In the present embodiment, a level 2 indicator may be for indicating to CCM  that incoming media  is copyright protected and\/or a copy thereof, and as such no digital copying is permitted.","For example, incoming media  is received by playback application . Application  detects an indicator  attached therewith, in this example, a level 2 bit is placed in the bit stream for indicating to CCM  that copying is not permitted.","For example, when CCM  is configured in system  such as that shown in , in response to a level 2 indicator bit, CCM , while controlling the audio path, then activates switches  and  to prevent any recording of incoming media .","When CCM  is configured in system  such as that shown in , in response to a level 2 indicator bit, CCM , while controlling the audio path, then activates switches  and  to prevent any recording of incoming media .","When CCM  is configured in system  such as that shown in , in response to a level 2 indicator bit, CCM , while controlling the audio path, then activates switches , , and  to prevent any recording of incoming media .","It is noted that CCM  can activate or deactivate switches coupled therewith, as described herein with reference to , B, C, and D, thereby funneling incoming media  through the secure media path, in this instance the audio path, to prevent unauthorized copying of incoming media . It is further noted that CCM  can detect media recording applications and devices as described herein, with reference to .",{"@attributes":{"id":"p-0139","num":"0138"},"figref":["FIGS. 7A","FIG. 1","FIGS. 7A"],"b":["7","7","700","700","104","103","700","7","7","700"]},"The present embodiment provides a mechanism for restricting recording of high fidelity media content delivered via one or more communication networks. The present embodiment delivers the high fidelity media content to registered clients while preventing unauthorized clients from directly receiving media content from a source database. Once the client computer system receives the media content, it can be stored in hidden directories and\/or custom file systems that may be hidden to prevent subsequent unauthorized sharing with others. It is noted that various functionalities can be implemented to protect and monitor the delivered media content. For example, the physical address of the media content can be hidden from media content recipients. In another example, the directory address of the media content can be periodically changed. Additionally, an access key procedure and rate control restrictor can also be implemented to monitor and restrict suspicious media content requests. Furthermore, a copyright compliance mechanism, e.g., CCM , can be installed in the client computer system  to provide client side compliance with licensing agreements and copyright restrictions applicable to the media content. By implementing these and other functionalities, the present embodiment restricts access to and the distribution of delivered media content and provides a means for copyrighted media owner compensation.","It is noted that flowchart  is described in conjunction with , , , A, B, C, and D, in order to more fully describe the operation of the present embodiment. In step  of , a user of a computer system, e.g., , causes the computer to communicatively couple to a web server, e.g., , via one or more communication networks, e.g., Internet , and proceeds to attempt to log in. It is understood that the log in process of step  can be accomplished in a variety of ways in accordance with the present invention.","In step  of , web server  accesses a user database, e.g., , to determine whether the user and the computer system  logging in are registered with it. If the user and computer system  are registered with web server , the present embodiment proceeds to step . However, if the user and computer system  are logging in for the first time, web server  can initiate a user and computer system  registration process at step .","In step , registration of the user and computer system  is initiated. The user and computer system registration process can involve the user of computer system  providing personal information including, but not limited to, their name, address, phone number, credit card number, and the like. Web server  can verify the accuracy of the information provided. Web server  can also acquire information regarding the user's computer system  including, but not limited to, identification of media players disposed and operable on system , a unique identifier corresponding to the computer system, etc. In one embodiment, the unique identifier corresponding to the computer system can be a MAC address. Additionally, web server  can further request that the user of computer system  to select a username and password.","In step  of , subsequent to the completion of the registration process, web server  generates a unique user identification (ID) or user key associated with the user of client computer system . The unique user ID, or user key, is then stored by web server  in a manner that is associated with that registered user. Furthermore, one or more cookies containing that information specific to that user and the user's computer system , is installed in a non-volatile memory device, e.g.,  and\/or data storage device  of computer system . It is noted that the user ID and cookie can be stored in a hidden directory within one or more non-volatile memory devices within computer system , thereby preventing user access and\/or manipulation of that information. It is further noted that if the unique user ID, or user key, has been previously generated for the user and computer  that initially logged-in at step , the present embodiment proceeds to step ","In step , web server  verifies that the user ID and the cookie(s) are properly installed in computer system  and verifies the integrity of the cookie(s) and the user ID, thereby ensuring no unauthorized alterations to the user ID or the cookie has occurred. If the user ID is not installed and\/or not valid, web server  can re-initiate the registration process at step . Alternatively, web server  can decouple computer system  from the network, thereby requiring a re-log in by the user of computer . If the cookie(s) and user ID are valid, the present embodiment proceeds to step .","In step  of , web server  can install a version of a copyright compliance mechanism, e.g., , onto one or more non-volatile memory devices of computer system . Installing CCM  into user's computer system  can facilitate client side compliance with licensing agreements and copyright restrictions applicable to specific delivered copyrighted media content. At step , the components of CCM , such as instructions , coder\/decoder (codec) , agent programs , system hooks , skins , and custom media device drivers  (e.g., custom media device  of , C, and D), are installed in computer system , such as that shown in , B, C, and D. In one embodiment, a hypertext transfer protocol file delivery system can be utilized to install CCM  into computer system . However, step  is well suited to install CCM  on computer system  in a wide variety of ways in accordance with the present embodiment. For example, CCM  can be installed as an integrated component within a media player application, media recorder application, and\/or media player\/recorder applications. Alternatively, CCM  can be installed as a stand alone mechanism within a client computer system . Additionally, CCM  can be installed as a stand alone mechanism and\/or as part of a bundled application from a media storage device, e.g., a CD, a DVD, an SD, and\/or as part of an installation package. In another embodiment, CCM  can be installed in conjunction with a presentation of desired media content, e.g., listening to an audio file on a music CD, reading a document, viewing a video, etc. It is noted that, in one embodiment, CCM  may be installed on client system  in a clandestine manner, relative to a user.","In step , web server  can request the previously established username and password of the user of client computer system . Accordingly, the user of client computer system  causes it to transmit to web server  the previously established username and password. Upon the receipt thereof, web server  may access a user database, e.g., , to determine their validity. If the username and password are invalid, web server  refuses access wherein flowchart  may be discontinued (not shown). Alternatively, if the username and password are valid, the present embodiment proceeds to step .","In step  of , web server  can access media file database  to determine if copyright compliance mechanism  has been updated to reflect changes made to the DMCA (digital millennium copyright act) and\/or to the interactive\/non-interactive licensing agreements recognized by the DMCA. It is noted that alternative licensing agreements can be incorporated into copyright compliance mechanism . Advantageously, by providing a copyright compliance mechanism that can be readily updated to reflect changes in existing copyright restrictions and\/or the introduction of other types of licensing agreements, and\/or changes to existing media player applications, or the development of new media player applications, copyright compliance mechanism  can provide compliance with current copyright restrictions.","Continuing with step , if web server  determines that CCM , or components thereof, of computer  has been updated, web server  initiates installation of the newer components and\/or the most current version of CCM  into computer system , shown as step . If web server  determines that the current version of CCM  installed on system  does not have to be updated, the present embodiment proceeds to step  of .","In step  of , the user of client computer system  causes it to transmit to web server , e.g., via Internet , a request for a play list of available media files. It is noted that the play list can contain all or part of the media content available from a content server, e.g., .","In step , in response to web server  receiving the play list request, web server  transmits to client computer system  a media content play list together with the unique user ID associated with the logged-in user. The user ID, or user key, can be attached to the media content play list in a manner invisible to the user. It is noted that the media content in content server  can be, but is not limited to, high fidelity music, audio, video, graphics, multimedia, alphanumeric data, and the like. The media content play list of step  can be implemented in diverse ways. In one example, web server  can generate a media content play list by combining all the available media content into a single play list. Alternatively, all of the media content titles, or different lists of titles, can be loaded from content server  and passed to a CGI (common gateway interface) program operating on web server  where the media titles, or differing lists of titles, can be concatenated into a single dimensioned array that can be provided to client computer system . It is understood that the CGI can be written in nearly any software computing language.","In step  of , the user of client computer system  can utilize the received media content play list in conjunction with a media player application in order to cause client computer system  to transmit a request to web server  for delivery of desired media content, and wherein the user ID is automatically included therewith. The media content play list provided to client computer system  by web server  can enable the user to create one or more customized play lists by the user selecting desired media content titles. It is noted that a customized media play list can establish the media content that will eventually be delivered to client computer system  and the order in which the content will be delivered. Additionally, the user of client computer system  can create one or more customized play lists and store those play lists in system  and\/or within web server . It is noted that a customized play list does not actually contain the desired media content titles, but rather the play list includes one or more identifiers associated with the desired media content that can include, but is not limited to, a song, an audio clip, a video clip, a picture, a multimedia clip, an alphanumeric document, or particular portions thereof. In another embodiment, the received media content play list can include a random media content delivery choice that the user of client computer system  can transmit to web server , with the user ID, to request delivery of the media content in a random manner.","In step , upon receiving the request for media content from client computer system , web server  determines whether the requesting media application operating on client computer system  is a valid media application. One of the functions of a valid media application is to be a player of media content as opposed to an application that downloads media content in an unauthorized or unregulated manner. If web server  determines that the media application operating on system  is not a valid media application, the present embodiment proceeds to step  which in one embodiment, redirects client computer system  to a web site where the user of system  can download a valid media player application or to a software application which can identify client computer system , log system  out of web server  and\/or prevent future logging-in for a defined period of time, e.g., 15 minutes, an hour, a day, a week, a month, a year, or any specified amount of time. If web server  determines that the media application operating on system  is a valid media application, the present embodiment proceeds to step .","In step  of , the present embodiment causes web server  to determine whether the user ID (or user key) that accompanied the media delivery request sent by client computer system  is valid. If web server  determines that the user ID is invalid, the present embodiment proceeds to step  where client computer system  can be logged off web server  or client computer system  can be returned to step  (of ) to re-register and to have another unique user ID generated by web server . It is noted that the order in which steps  and  are performed can be altered such that step  can be performed prior to step . If web server  determines that the user ID is valid, the present embodiment proceeds to step .","In step , prior to web server  authorizing the delivery of the redirect and access key for the requested media file content, shown as step , CCM  governs certain media player applications and\/or functions thereof that are operable on client computer system . These governed functions can include, pause, stop, progress bar, save, etc. It is noted that, in one embodiment, CCM  can utilize system hooks  to accomplish the functionality of step .","In step  of , the present embodiment causes web server  to transmit to client computer system  a redirection command along with a time sensitive access key (for that hour, day or for any defined period of time) thereby enabling client computer system  to receive the requested media content. The redirection command can include a time sensitive address of the media content location within content server . The address is time sensitive because, in one embodiment, the content server  periodically renames some or all of the media address directories, thereby making previous content source addresses obsolete. Alternatively, the address of the media content is changed. In another embodiment, the location of the media content can be changed along with the addresses. Regardless, unauthorized users and\/or applications are restricted from directly retrieving and\/or copying the media content from content server . Therefore, if someone with inappropriate or unlawful intentions is able to find where the media content is stored, subsequent attempts will fail, as the previous route no longer exists, thereby preventing future unauthorized access.","It is noted that in one embodiment of the present invention, the addresses (or routes) of content server  that are actively coupled to one or more client computer systems (e.g., -) are maintained while future addresses, or routes, are being created for new client devices. It is further noted that as client computer systems are uncoupled from the media content source of content server , that directory address, or link, can be immediately changed, thereby preventing unauthorized client system or application access.","In another embodiment, the redirection of client computer system  to content server  can be implemented by utilizing a server network where multiple servers are content providers, (e.g., ), or by routing a requesting client computer system (e.g., , , or ) through multiple servers. In yet another embodiment, the delivery of media content from a central content provider (e.g., ) can be routed through one or more intermediate servers before being received by the requesting client computer system, e.g., -.","The functionality of step  is additionally well suited to provide recordation of the Internet Protocol (IP) addresses of the client computer systems, e.g., , the media content requested and its transfer size, thereby enabling accurate monitoring of royalty payments, clock usage and transfers, and media content popularity.","In step  of , upon receiving the redirection command, the present embodiment causes the media playback application  (, B, C, and D) operating on client computer system  to automatically transmit to content server  a new media delivery request which can include the time sensitive access key and the address of the desired media content.","In step  of , content server  determines whether the time sensitive access key associated with the new media delivery request is valid. If content server  determines that the time sensitive access key is valid, the present embodiment proceeds to step  of . However, if content server  determines that the time access key is not valid, the present embodiment proceeds to step , a client redirect.","In step , content server redirects client computer  to step  (not shown) where a new access key is generated. Alternatively, step  causes the present embodiment to return to step  of . In yet another embodiment, step  causes client computer system  to be disconnected from content server .","In step  of , content server  transmits the requested high fidelity media content to client computer system . It is noted that each media content file delivered to client computer system  can have a header attached thereto, prior to delivery, as described with reference to . It is further noted that both the media content and the header attached thereto can be encrypted. In one embodiment, the media content and the header can be encrypted differently. Alternatively, each media content file encrypted differently. In another embodiment, groups of media files are analogously encrypted. It is noted that public domain encryption mechanisms, e.g., Blowfish, and\/or non-public domain encryption mechanisms can be utilized.","Still referring to step , content server  transmits the requested media content in a burst load (in comparison to a fixed data rate), thereby transferring the content to client computer system  as fast as the network transfer rate allows. Further, content server  can have its download rate adapted to be equal to the transfer rate of the network to which it is coupled. In another embodiment, the content server  download rate can be adapted to equal the network transfer rate of the client computer system  to which the media content is being delivered. For example, if client computer system  is coupled to Internet  via a T1 connection, then content server  transfers the media content at transmission speeds allowed by the T1 connection line. As such, once the requested media content is transmitted to client computer system , content server  is then able to transmit requested media content to another client computer system, e.g.,  or . Advantageously, this provides an efficient means to transmit media content, in terms of statistical distribution over time and does not overload the communication network(s).","It is noted that delivery of the requested media content by content server  to client computer system  can be implemented in a variety of ways. For example, an HTTP (hypertext transfer protocol) file transfer protocol can be utilized to transfer the requested media content as well as a copyright compliance mechanism  to client . In this manner, the copyright compliance mechanism as well as each media content file\/title can be delivered in its entirety. In another embodiment, content server  can transmit to client computer system  a large buffer of media content, e.g., audio clips, video clips, and the like.","In step  of , upon receiving the requested high fidelity media content from content server , the present embodiment causes client computer system  to store the delivered media content in a manner that is ready for presentation, e.g., play. The media content is stored in client computer system  in a manner that restricts unauthorized redistribution. For example, the present embodiment can cause the high fidelity media content to be stored in a volatile memory device, utilizing one or more hidden directories and\/or custom file systems that may be hidden, where it may be cached for a limited period of time. Alternatively, the present embodiment can cause the high fidelity media content to be stored in a non-volatile memory device, e.g.,  or data storage device . It is noted that the manner in which each of the delivered media content file(s) is stored, volatile or non-volatile, can be dependent upon the licensing restrictions and copyright agreements applicable to each media content file. It is further noted that in one embodiment, when a user of client computer system  turns the computer off or causes client computer system  to disconnect from the network, the media content stored in a volatile memory device is typically deleted therefrom.","Still referring to step , in another embodiment, the present embodiment can cause client computer system  to store the received media content in a non-volatile manner within a media application operating therein, or within one of its Internet browser applications (e.g., Netscape Communicator\u2122, Microsoft Internet Explorer\u2122, Opera\u2122, Mozilla\u2122, and the like) so that delivered media content can be used in a repetitive manner. Further, the received media content can be stored in a manner making it difficult for a user to redistribute in an unauthorized manner, while allowing the user utilization of the received media content, e.g., by utilizing one or more hidden directories and\/or custom file systems that may also be hidden. It is noted that by storing media content with client computer system  (when allowed by applicable licensing agreements and copyright restrictions), content server  does not need to redeliver the same media content to client computer system  each time its user desires to experience (e.g., listen to, watch, view, etc.) the media content file.","In step  of , the received media content file is then fed into a media player application (e.g., playback application  of , B, C, and D), which then runs it through a codec, e.g., coder\/decoder  of CCM , in one embodiment. In response, coder\/decoder  sends an authorization request to the server, e.g., , with attached authorization data, as described herein. In response to receiving codec's  authorization request, server  compares the received authorization data with that stored in server , and subsequently, the present embodiment proceeds to step .","In step , the server  responds with a pass or fail authorization. If server  responds with a fail, such that the received authorization data is invalid, the present method can proceed to step , where server  can, in one embodiment, notify the user of client system , e.g., by utilization of skin , that there was an unsuccessful authorization of the requested media content file. It is noted that alternative messages having similar meanings may also be presented to the user of client computer system , thereby informing the user that the delivery failed. However, if the authorization data passes, the present method proceeds to step .","In step , server  transmits certain data back to the media player application which enables the media player application to present the contents of the media file via media playback application  of , B, C, and D. In one embodiment, a decryption key can be included in the transmitted data to decrypt the delivered media content file. In another embodiment, an encryption\/decryption key can be included in the transmitted data to allow access to the contents of the media file. The present method then proceeds to step .","In step  of , subsequent to media file decryption, the media file may be passed through CCM , e.g., a coder\/decoder , to a media player application operating on client computer system , e.g., playback application  of , B, C, and D, which can then access and utilize the delivered high fidelity media content, enabling its user(s) to experience the media content, e.g., listen to it, watch it, view it, or the like. In one embodiment of the present invention, a specialized or custom media player may be involved in order to experience the media content, e.g., skin  of . Skin  may be implemented when CCM  cannot modify an industry standard media player application to comply with copyright restrictions and\/or licensing agreements in accordance with the DMCA. Alternatively, a specialized or custom media player may not be needed to experience the media content. Instead, an industry standard media player can be utilized by client computer system  to experience the media content. Typically, many media player applications are available and can include, but are not limited to, Windows\u2122 Media Player\u2122 for PCs (personal computers), iTunes\u2122 Player or QuickTime\u2122 for Apple computers, and XMMS player for computers utilizing a Linux operating system. Regardless of the media player application utilized, while the media file is passed to the media player application, e.g., in a frame by frame basis or in a buffer by buffer basis, coder\/decoder  will repeatedly ensure that CCM  rules are being enforced at any particular moment during media playback, shown as step .","In step , as the media file content is delivered to the media player application, e.g., media player application  of , B, C, and D, periodically, e.g., after a specified number of frames, after a defined period of time, or any desired time or data period, coder\/decoder  repeatedly determines whether or not all the rules are enforced, in accordance with rules as defined by CCM . If the rules are not enforced, e.g., change due to a user opening up a recording application (e.g., Total Recorder or alternative application) the present method proceeds to step . If the rules, in accordance with CCM , are enforced, the present method then proceeds to step .","In step  of , if the rules according to CCM  are not enforced, the presentation of the media content is, in one embodiment, suspended or halted. In one embodiment, CCM  can selectively control switches  and  () to prevent output of incoming media  (, B, C, and D) to a recording application  (, B, and C, via wave shim driver  and direct sound  respectively, thus preventing unauthorized recording of incoming media . In another embodiment, CCM  can selectively control switches  and  () to prevent output of incoming media  to recording application  via wave shim driver  and custom media device , thus preventing unauthorized recording of incoming media . In yet another embodiment, CCM  can selectively control switches , , to not only prevent incoming media  from being recorded in an unauthorized manner but can also selectively control switch  () to prevent unauthorized output of incoming media  via digital output  of media hardware output device . In yet another embodiment, CCM  can selectively control switches , , , and  to a prevent kernel streaming mechanism , e.g., DirectKS of , which can establish a connection with media device driver  of , from capturing incoming media content and returning it to a recording application (e.g., ) to create an unauthorized recording of the media content. In one embodiment, incoming media  may not be output from digital output . In another embodiment, incoming media  may be output via digital output  but in an inaudible manner, e.g., silence. In yet another embodiment, incoming media  be audible but recording functionality can be disabled, such that the media content cannot be recorded.","In step , if the rules are enforced in accordance with CCM , coder\/decoder  retrieves a subsequent portion of the media content that is stored locally in client computer system . The newly retrieved portion of the media file is then presented by the client's media player application, shown in the present method as step . While the newly retrieved portion is presented, embodiments of the present method then again perform step , then step  or , then step , then , etc., in a continual loop until the media file contents are presented in their entirety. Advantageously, by constantly monitoring playing media files, CCM  can detect undesired activities and enforce those rules defined by CCM .",{"@attributes":{"id":"p-0175","num":"0174"},"figref":"FIG. 8","b":["800","800","210","220","230","800","802","804","806","808","810","812","814","816","804","816","201","804","816"]},"For example, a media delivery point (MDP) , located in Tokyo, Japan, is able to provide and deliver media content from the media content library stored in its content database, e.g., , to client computer systems within the Asiatic regions of the world while a media delivery point , located in New York City, N.Y., USA, is able to provide and deliver media content from its stored media content library to client devices within the Eastern United States and Canada. It is noted that each city name, e.g., London, Tokyo, Hamburg, San Jose, Amsterdam, or New York, associated with one of the media delivery points - represents the location of that particular media delivery point or point of presence. However, it is further noted that these city names are exemplary because media delivery points - can located anywhere within the world, and as such are not limited to the cities shown in global network .","Still referring to , it is further noted that global system  is described in conjunction with , , , A-D, and , in order to more fully describe the operation of embodiment of the present invention. Particularly, subsequent to a client computer system, e.g., client computer system  of , interacting with a web server, e.g., web server  of , as described herein, web server , in one embodiment, can redirect client computer system  to receive the desired media content from an MDP (e.g., -) based on one or more differing criteria.","For example, computer system  may be located in Brattleboro, Vt., and its user causes it to log-in with a web server  which can be located anywhere in the world. It is noted that steps - of  can then be performed as described herein such that the present embodiment proceeds to step  of . At step , the present embodiment can determine which media delivery points, e.g., , , , , , , or , can subsequently provide and deliver the desired media content to client computer system .","Still referring to , one or more differing criteria can be utilized to determine which media delivery point to select for delivery of the desired media content. For example, the present embodiment can base its determination upon which media delivery point is in nearest proximity to client computer system , e.g., media delivery point . This can be performed by utilizing the stored registration information, e.g., address, provided by the user of client computer system . Alternatively, the present embodiment can base its determination upon which media delivery point provides media content to the part of the world in which client computer system is located. However, if each media delivery point (e.g., -) stores differing media content, the present embodiment can determine which one can actually provide the desired media content. It is noted that these are exemplary determination criteria and the embodiments of the present invention are not limited to such implementation.","Subsequent to determination of which media delivery point is to provide the media content to client computer system  at step , web server  transmits to client computer system  a redirection command to media delivery point\/content server  along with a time sensitive access key, also referred to as a session key, (e.g., for that hour, day, or any defined time frame) thereby enabling client computer system  to eventually receive the requested media content. Within system , the redirection command can include a time sensitive address of the media content location within media delivery point . Accordingly, the New York City media delivery point  can subsequently provide and deliver the desired media content to client computer system . It is noted that steps - and step  of  can be performed by media delivery point  in a manner similar to content server  described herein.","Advantageously, by utilizing multiple content servers, e.g., media delivery point -, to provide high fidelity media content to client computer systems, e.g., -, located throughout the world, communication network systems of the Internet  do not become overly congested. Additionally, global network  can deliver media content to a larger number of client computer systems (e.g., -) in a more efficient manner. Furthermore, by utilizing communication technology having data transfer rates of up to 320 Kbps (kilobits per second) or higher, embodiments of the present invention provide for rapid delivery of the media content in a worldwide implementation.","Referring still to , it is noted that media delivery points\/content servers - of global network  can be coupled in a wide variety of ways in accordance with the present embodiment. For example, media delivery point - can be coupled utilizing wired and\/or wireless communication technologies. Further, it is noted that media delivery points - can be functionally coupled such that if one of them fails, another media delivery point can take over and fulfill its functionality. Additionally, one or more web servers similar to web server  can be coupled to global network  utilizing wired and\/or wireless communication technologies.","Within system , content server\/media delivery point  includes a web infrastructure that, in one embodiment, is a fully redundant system architecture. It is noted that each MDP\/content server - of global network  can be implemented to include a web infrastructure in a manner similar to the implementation shown in MDP .","Specifically, the web infrastructure of media delivery point  includes firewalls  and  which are each coupled to global network . Firewalls  and  can be coupled to global network  in diverse ways, e.g., utilizing wired and\/or wireless communication technologies. Particularly, firewalls  and  can each be coupled to global network  via a 10\/100 Ethernet handoff. However, system  is not limited in any fashion to this specific implementation. It is noted that firewalls  and  are implemented to prevent malicious users from accessing any part of the web infrastructure of media del , e.g., a router or other switching mechanism, coupled therewith and a DB (database) server  coupled to device  while firewall  includes a device , e.g., a router or other switching mechanism, coupled therewith and a DB (database) server  coupled to device . Furthermore, DB server  is coupled with device  and DB server  is coupled with device .","Still referring to , and within media delivery point , firewall  is coupled to a director device  which is coupled to internal web application server  and , and a hub server . Firewall  is coupled to a director  which is coupled to internal web application servers  and , and hub server . Hub server  can be implemented in a variety of ways including, but not limited to, as a Linux hub server. Hub server  is coupled to a data storage device  capable of storing media content. Data storage device  can be implemented in a variety of ways, e.g., as a RAID (redundant array of inexpensive\/independent disks) appliance.","It is noted that media delivery points - can be implemented in any manner similar to content server  described herein. Additionally, media delivery points - of the present embodiment can each be implemented as one or more physical computing devices, e.g., computer system  of .","Advantageously, by providing a copyright compliance mechanism, e.g., , which can be easily and readily installed in a client computer system, e.g., , embodiments of the present invention can be implemented to control access to, control the delivery of, and control the user's experience with media content subject to copyright restrictions and licensing agreements, fore example, as defined by the DMCA. Additionally, by closely associating a client computer system, e.g., , with the user thereof, and the media content they receive, embodiments of the present invention further provide for accurate royalty recording.","The foregoing disclosure regarding specific embodiments of the present invention have been presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed, and many modifications and variations are possible in light of above teaching. The embodiments were chosen and described in order to best explain the principles of the invention and its practical application, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the Claims appended hereto and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and form a part of this specification, illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5D"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 7A","b":["7","7"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
