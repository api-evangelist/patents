---
title: Interoperable credential gathering and access modularity
abstract: A credential is translated with one of different credential provider modules each translating a corresponding different type of credential into a common protocol. The translated credential is communicated through an API to a logon UI module to an operating system (OS) of a local machine. An OS logon module is called by the logon UI module to authenticate the translated credential against a credential database. A user identified by the translated credential is logged on to access the local machine when the authentication is successful. The credential can also be used with a selection received from the logon UI module via a corresponding one of different pre-log access provider (PLAP) modules that each communicate with the API. The API establishes a network session with an access service specified by the selected PLAP module when the credential is authenticated with the credential database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07577659&OS=07577659&RS=07577659
owner: Microsoft Corporation
number: 07577659
owner_city: Redmond
owner_country: US
publication_date: 20031024
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to machine access and more particularly to the identification and authentication of an entity, user, or principal with a credential for logging on to a local and\/or remote machine having an operating system.","An exemplary conventional process  is seen in  for allowing a user to login to an authentication infrastructure of an operating system for a local machine. As used herein, a local machine is a computing device with an operating system, such as a personal computer, a handheld computer, a thick client device, a thin client device, a personal digital assistant, an expert system, etc. The authentication infrastructure authenticates the user using a credential in order to gain access to the computing device via its operating system, such as the WINDOWS\u00ae operating system provided by Microsoft Corporation of Redmond, Wa., USA. The authentication of a credential is intended herein to be equivalent to the authentication of a user, entity, or principal with a corresponding credential, which phrases and concepts are used herein interchangeably.","At block  of process , the operating system executes a logon program. The logon program can pass control to only one of three (3) different authentication modules. Stated otherwise, the local machine can only have one authentication module with which an authentication can be performed. In the case of the WINDOWS(\u00ae operating system (OS), the default authentication module is a Graphical Identification and Authentication module, referred to herein as a \u2018GINA\u2019. The GINA, in the WINDOWS\u00ae OS, is a module in a dynamic link library (*.dll) that implements a logon user interface for a display of a screen that includes a logon dialog box into which a user inputs a username and password. The GINA is present to authenticate the user through the operating system of the computing device by use of credentials presented by the user. The user's credentials are represented by a set of information that includes identification, and proof of identification, that is used to gain access to local and network resources.","Examples of credentials are usernames and passwords, smart cards, biometric credentials, X.509 digital certificates, and other kinds of certificates. A GINA  seen in  is a standard WINDOWS\u00ae OS module and requires a conventional interactive logon process, such as by prompting a user to enter a username and a password at a user interface . After GINA  is executing, control is passed to a Local Security Authority (LSA) module . The LSA module  accesses a local Security Accounts Manager (SAM) database , each of which are local stores for logon and security information for the computing device and\/or for the relevant environment. A credentials database , which can be local or remote, can store credentials such as fingerprints, passwords, retinal information, face recognition information, and other biometric information that can be used to authenticate a user in conjunction with a custom GINA. The LSA module  can also establish a connection to access a remote credential database, a token protocol credential service, a challenge and response protocol credential service, and\/or an Active Directory (AD) and Kerberos Distribution Center (KDC) . Kerberos is a network authentication protocol to identity users that are attempting to log on to a network and to encrypt their communications through secret-key cryptography. The AD module uses a technology that enables applications to find, use, and manage directory resources (e.g., usernames and permissions) in a distributed computing environment. From these accesses, identification and authentication is performed for a user with the user's credentials so as to determine the user's access privileges to logon to the computing device via its operating system. A successful identification and authentication will log the user on and will return control to the OS logon module . The user will then be logged on and can proceed to use the computing device.","A first type pass-through GINA module , seen in , is a customized identification and authentication module, such as may be written by an independent software vendor that did not develop the operating system. The first type pass-through GINA module  interfaces with a smart card reader  and also interfaces with a default original operating system GINA  module. The first type pass-through GINA module  receives credentials read by the smart card reader  from a smart card inserted therein. A certificate read from a smart card inserted into smart card reader , and any other credentials acquired from a user, can be used to identify and authenticate the user against the credentials database . In this case, first type pass-through GINA module  allows limited modifications to be made to the process of the identification and authentication of a user, while maintaining default behavior of the identification and authentication due to the interface with the original operating system GINA  module.","A second type pass-through GINA module  is a complete replacement for the standard GINA  for the operating system. The second type pass-through GINA module  interfaces with a fingerprint reader . The second type pass-through GINA module  receives credentials read by the fingerprint reader  from an optically scanned finger impression. The optically scanned finger impression from a finger inserted into fingerprint reader , and any other credentials acquired from a user, can be used to identify and authenticate the user against the credentials database . The second type pass-through GINA module  is a customized identification and authentication module that does not interface with a standard GINA of the OS, but rather directly interfaces with LSA . Unlike the first type pass-through GINA module , the second type pass-through GINA module  allows for full control of a user interface that a user sees when logging on. A typical problem, as mentioned above, is that only one of the GINA , the first type pass-through GINA module , and the second type pass-through GINA module  can be used with an operating system. Stated otherwise, no custom or default GINA can coexist with any other custom GINA through which the OS can log a user on to the computing device or computing environment.","In addition to the foregoing, other limitations with custom GINAs can arise, such as in implementing any new credential gathering mechanism or a change thereto (e.g., for biometrics, smart cards, tokens, etc.) in order to access an operating system of a computing device. As such, custom GINAs place a significant coding burden on a developer. To implement the new or changed credential gathering mechanism, the developer has to write a new authentication model for authenticating a user who wishes to gain access to the computing device. In the case of the WINDOWS\u00ae OS, the developer must write a major revision to a custom GINA that includes complex interface and state management code so that the custom GINA can interact directly with system components of the OS. Poor coding in the custom GINA can undermine the robustness of the OS.","The replacing of the custom or default GINA is particularly sensitive in that it is one of the most vital security components of the OS. A poorly replaced GINA can greatly weaken the robustness of the OS and can reduce pre-existing functionality. The complexity of developing a replacement or custom GINA may also require the developer to obtain the underlying source code for the standard GINA of the OS. Furthermore, deploying a custom GINA means replacing the default GINA because two credential gathering methods (e.g., GINAs) cannot not coexist on the same computing device. This prevents independent software vendors from building solutions that are deployable anywhere to allow users to logon with more than one authentication infrastructure. It would be an advantage in the art to provide a logon solution that allowed users to log into different, coexisting authentication infrastructures, such as through a selectable network session, where the logon solution overcomes the aforementioned problems.","In various implementations, a credential is translated with a corresponding one of a plurality of different and coexisting credential provider modules. Each module translates a corresponding different type of credential into a common credential protocol. The translated credential is communicated through a credential provider application program interface (API) to a logon user interface (UI) module of a native operating system (OS) of a local machine. A logon routine for the OS is called to authenticate a user with the translated credential against a credential database. The user identified by the translated credential is logged on to access the local machine when the authentication is successful.","In other implementations, a request is made with the logon UI module of the OS via a pre-logon access provider (PLAP) manager API to the logon UI. The request that is made is for a flat list of access services from a corresponding plurality of coexisting different PLAP modules. The flat list of access services is displayed on a display rendered by the logon UI module. An input of a credential and a selection of one access service from the flat list on the display are received. When a connection to a network is established using the selected access service, the credential is passed to a credential database at the access service for a first authentication. When the first authentication is successful, the credential is communicated from the PLAP API to the logon UI module. An RPC call is made from the logon UI module to pass the credential to an OS logon module. The credential is then passed from the OS logon module with an LSA logon user call to an LSA. A second authentication is then performed with the LSA against a credential database. When the second authentication is successful, a user that is identified by the credential is logged on to use a local machine executing the OS.","The same numbers are used throughout the disclosure and figures to reference like components and features. Series  numbers refer to features originally found in , series  numbers refer to features originally found in , series  numbers refer to features originally found in , and so on.","Various implementations provide coexisting modules that interface and are interoperable with an operating system of a computing device, where each module can receive and authenticate a principle, entity, or user with a set of information (e.g., credentials) that includes identification, and proof of identification, that is used to gain access to local and network resources via the operating system. Moreover, by maintaining the stability of the interface between the modules and the operating system, changes can be to any one of the modules and to the operating system without affecting the identification and authentication processes performed by the other modules.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2","i":["a ","a "],"b":["200","202","202"]},"Each credential provider module  uses a different identifying and authenticating process. One credential provider module  uses a user interface (UI)  that receives a username and password as the credentials. Another credential provider module  uses a token . By way of example, token  can be a physical device. The physical device stores a number that is read by a reader when a user tries to login to a computing device. After each such login, or at periodic intervals via a time based algorithm, the number stored in token  changes. The new number can also be stored in the computing device for future authentications. The user may also be prompted to input a Personal Identification Number (PIN) in addition to having the reader read the token . The fingerprint reader  and\/or the smart card reader  can be used by yet other respective credential provider modules  to respectively read a fingerprint as the credentials of a user's finger impressed on the fingerprint reader  and to read credentials from a smart card inserted into the smart card reader . Of course, other credential readers can be used to provide credentials to still different credential provider modules , such as an eye retina scanner module, a face recognition camera module, a gate or walk recognition camera module, a handwriting recognition module, a voice recognition module, a scent recognition module, a genetic code recognition module, and other such biometric modules.","Various alternatives are available for use of the coexisting credential provider modules . For instance, a local machine can require that all or certain users authenticate with multiple authentication methods. By way of example of such a multi-method authentication requirement, a user may be required to authenticate with two different smart cards in order to log on to the local machine. In another example, a user may be given a choice as to which of multiple ways the user will use to log on to the local machine. For instance, the user can choose to either type in a password or to insert a finger on to a fingerprint sensor in order to log on to the local machine.","Each credential provider module  can receive and translate a credential into a common credential protocol. The credential protocol of the translated credential makes it compatible for authentication by an authentication component of a native operating system of a local machine. The authentication of the translated credential is made against a credential database. When the authentication is successful, a user identified by the credential will be logged on to the native operating system for access to the local machine.","Each credential provider module  interfaces with a credential provider Application Program Interface (API)  in order to handle communications with an authenticator. The credential provider API  interfaces with a caller that can be a logon User Interface (UI) . Logon UI  can be a credential manager for receiving and managing credentials from a user. Logon UI  uses a Remote Procedure Call (RPC) to an operating system (OS) logon module . The OS Logon  is an interface to the OS of the computing device. The OS Logon  performs a Local Security Authority (LSA) logon user call to the Local Security Authority (LSA) module . As described above with respect to , the LSA module  accesses the local Security Accounts Manager (SAM) database for typical username and password identification and authentication. The LSA module  can also access the locally stored credentials database to identify and authenticate a principal, entity or user with credentials gathered by a reading device, such as one of the credential reading devices - and .","The translated credentials are communicated through the credential provider API  to the logon UI  for communication to the OS logon  for local authentication through LSA module  so as to log the user on to the local machine. Alternatively, the LSA module  can perform a remote access outside of the local machine through a connection that is established to a domain. An Active Directory (AD) and Kerberos Distribution Center (KDC)  are stored at the domain and can be accessed. From these accesses, identification and authentication is performed for the user with the translated credentials so as to determine the user's access privilege to logon to the local machine via the OS. A successful identification and authentication will log the user on. The user, then logged on through the OS, can proceed to use the local machine.","An exemplary general logon process is seen in and will be described by reference to . The logon process begins at block  at which an OS (OS) of the local machine loads the logon User Interface (UI) . At block , the logon UI  loads and initializes all registered credential providers  using credential provider API .","At block , the OS logon  notifies logon UI  to display a welcome screen on the UI for the user to see and interact with. At block , the user enters a control-alt-delete (CAD) key sequence. When a user enters the CAD key sequence, or another key sequence that is also a Secure Attention Sequence (SAS), a hardware event is generated that preferably only the OS can intercept. This user action causes the OS logon  to notify the logon UI  that it is ready to receive logon credentials at block . At block , the logon UI  shows the UI for the logon as dictated by the default credential provider module . The logon UI  requests the credential provider modules  to provide a flat list of all credential providers for display. At block , the logon UI  receives input signifying the user's choice of one of a plurality of displayed credential providers that each correspond to one of the credential provider modules . This input initiates an interaction between the user's input and one or more external systems through the credential provider API . The particular credential provider module  can be dependent upon the type of event that the user initiated to provide credentials to the OS (e.g., by the user's use of one of the credential reading devices - and ). At block , the logon UI  returns negotiated credentials to OS logon  through an RPC. At block  the OS logon  performs a LSA logon user call into the LSA  to log the user on. At block , the OS logon  performs an RPC into Logon UI  to report the result of the logon process . At block , the logon UI  calls into the particular credential provider module  through the credential provider API  to report the result of the logon process . Control then returns to the OS logon . At block , the OS logon  completes the user session setup such that the user is logged on to the computing device.","A process , seen in  and depicted by way of a flowchart, shows steps by which a local machine can use a sub-authentication process at a domain to authenticate a user with the user's credentials. A sub-authentication credential provider  at the local machine interfaces with a sub-authentication authority  at a domain . The domain , for instance, can be a third party server. The sub-authentication credential provider  interfaces with the credential provider API  as discussed above with respect to . As such, process  is similar to process with respect to blocks , , and . In process , the AD\/KDC  interfaces with LSA . The sub-authentication authority  at the domain uses a sub-authentication protocol to return logon credentials to the sub-authentication credential provider .","Process  uses a pre-authentication process in which a user's credentials are used to authenticate the user against a third party's method of authentication, instead of that of the local machine. Following the authentication, the third party's method returns credentials which are compatible with the OS so as to log the user into the local machine through its OS. In practice, the sub-authentication credential provider  interfaces through credential provider API  with logon UI  seen in . When a user enters credentials, the credentials are sent from the local machine to the AD\/KDC  at domain , which can be a server in communication through a network to the local machine . The AD\/KDC , in conjunction with the sub-authentication authority  at domain , authenticates the user with the user's credentials. The sub-authentication authority  returns logon credentials to sub-authentication provider . The sub-authentication provider  returns credentials to logon UI  through credential provider API . The logon UI  can then pass the credentials on to the OS logon  via an RPC. Accordingly, the OS at the local machine is shielded from the third party's sub-authentication authority  at domain ",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["400","406","406","402","404","103","105","107","208","202","103","105","107","208","404","404","202","103","105","107","208","202","204","204","202","202","204"]},"Exemplary display screens to illustrate various implementations that provide different user logon experiences are seen in through  and . One implementation uses a username and password as input to a credential provider module which can be a default way that a user enters credentials into a logon screen. Another implementation uses a Public Key Infrastructure (PKI) smart card to acquire credentials in conjunction with a smart card credential provider module. Yet another implementation uses a credential provider module with fingerprint credentials, where the credential provider identifies and authenticates a user with the user's fingerprint via fingerprint scan.","The implementations discussed below include credential providers that are either user selected or event driven, depending upon how the user selects a credential provider module that is to be used. A user selected credential provider is selected by a user from among two or more credential providers that are offered to the user at a user interface (UI). shows an example of a default screen display for which an OS may be configured to display as the UI having only one user selected credential provider, where the UI prompts only for username and password entries. In the case of , there are no additional user selected credential providers installed on the computing device that executes the OS.","As seen in , an alias or username can be common to one more electronic mail (e-mail) addresses or usernames. As such, the credential provider should be flexible with respect to the use of a Universal Principal Name (UPN) as shown. The UPN is an Internet-style logon name for the user based on the Internet standard RFC . By convention, this should map to the user's e-mail name. The UPN advantageously consolidates the e-mail and logon namespaces so that the user need only remember a single name. As such, the UI in supports UPN style names, where an auto-complete feature provides many characters in the UPN such that the user need not key them in. To do so, a directory center (DC) can be queried and can to return the list of UPNs to the UI in for display. Accordingly, the logon UI will use the UPN as the username portion of the credentials for the credential provider module. In addition, the logon UI can also be used to display an enumerated list of users if they have been joined to a castle or workgroup or to display all local machine accounts on the logon screen. The logon UI can also be used to display an enumerated list of users if they have joined to a domain, such that the UI displays icons or tiles for each user for only currently logged on users. The UI can display one (1) icon or tile for the use of a user who has not yet logged on to the domain.","When a credential provider for a new user is installed on a local machine, the local machine can be configured to display an options link  that appears under the password control as seen in . A user can select the options link  in order to be shown a list of credential providers from which the user can choose. Alternatively, a network administrator or other information professional can configure the local machine to set a policy to select a particular credential provider by default so that the users of the local machine will not have to choose the right credential provider. As seen in , a list  of account types are displayed that correspond, respectively, to different credential providers on the UI of a screen . List  allows a user to choose the type of account the user wants to use to log on to the OS, while a logon connection type field  allows a user to choose a standard or custom type of Remote Access Service (RAS) logon to use, such as a custom Virtual Private Network (VPN) connection or a custom dialer for a dial up connection. By building an expanded options section from options link  of , advanced interoperable functionality can be incorporated into a user logon process without unduly causing an unaesthetic or complicated user logon experience.","A credential provider can provide additional functionality into a logon process as shown by the UI in the screen . To get to an illustrated screen of , a user selects the \u201cNovell\u201d option in list  of , which transitions the UI to display an Advanced Novell Options button . When the user clicks on the Novell Options button , a Novell client logon UI  can be displayed as shown in . This functionality allows the user to browse a list of Novell servers on a network in communication with the user's local machine before logging on to the network. In such a case, the Novell credential provider can also provide support for adding logon scripts.","The sub-authentication credential provider module  as seen in  can be customized such that the user interface reflects only the branding, logo, trademark, or service mark of a third party and not that of another. In one implementation, a user can select an account type from the list  which activates the sub-authentication credential provider module . The sub-authentication credential provider module  can then control the UI to provide the user with a brand-specific user logon experience that is still fully compatible with the logon process for the OS. Furthermore, the local machine can have a plurality of sub-authentication credential provider modules  each of which can provide the user with a different and distinct brand-specific user logon experience, yet be fully compatible with the logon process for the OS of the local machine. By way of example, a personal computer can be used as an online shopping mall kiosk. The kiosk can be in communication with the Internet and can also display a plurality of icons each of which can correspond to a different sub-authentication credential provider module . When the user selects one of the displayed icons that represent a brand, the respective sub-authentication credential provider module  provides a distinct user logon experience unique to the brand while the user is logged on through the OS to the local machine and to an Internet web site that corresponds to the brand.","The UI in the screens -seen, respectively, in through provide examples relevant to user driven credential providers. The UI in the screens seen respectively in through provide examples relevant to event driven credential providers. Event driven credential providers are selected based on some user action. One such user action occurs when a user inserts a smart card into a card reader. For biometrics, a user action occurs when a user puts some body part in contact with, or so as to be measured by, a biometric sensor (e.g., a fingerprint impression is read by a finger print sensor, a face is read by a camera for analysis in a facial recognition software algorithm, etc.).","The UI in a screen of is displayed when a user enters the CAD key sequence (Ctrl+Alt+Del). The logon screen shows that two (2) users are already logged on to the local machine. An icon  in shows the user that smart cards can be used for logging on to the local machine. The user then inserts a smart card into a card reader, such as device  that is in communication with the local machine.","When the user's credentials from the smart card have been read, the list of logged on users from disappears, and the logon screen of displays only an enumeration of the certificates that were on the user's smart card. This display is made by a cooperative processing that uses smart card reader  and its corresponding credential provider module , the credential provider API , and the logon UI . Since there is just one certificate on the smart card, the OS automatically selects the one certificate and displays the PIN field  as a prompt for data entry to the user. Referring now to , when the user types in the PIN in the PIN field , logon UI  passes the PIN to the OS logon  along with the certificate read from the smart card. The certificate read by smart card reader  and the PIN entered by the user can then be used to identify and authenticate the user with the LSA  in cooperation with the event driven credential provider module  that interfaces at credential provider API  with the OS of the local machine. If the user who inserted the smart card leaves the smart card in the reader  and hits the cancel button  on the screen of , the logon screen returns to its previous state and enumerates all three users as shown by screen in . If, however, the smart card includes more than more certificate, the OS will render a display that enumerates all of the certificates. As shown by screen in at reference numeral , once a user puts focus on one of the certificates , the OS renders a display that includes a PIN field . The user can then enter a PIN into the PIN field .","The event driven credential provider module  that corresponds to the smart card reader  is similar to a biometric event driven credential provider module  for finger print reader . An exemplary user logon experience in the case of a fingerprint credential is seen in -. As seen in , a standalone local machine renders a screen that shows that four (4) accounts (e.g., four users have privileges to access the local machine). An icon on the screen of indicates that a fingerprint sensor is installed on the local machine. A user places his finger on a finger print sensor\/scanner, such as on the peripheral finger print sensor\/scanner  seen in . Alternatively, a touch sensitive screen, as shown in , can have a fingerprint sensor icon that is an optically scanning feedback mechanism. In either case, the finger print sensor\/scanner sensor activates and then reads the fingerprint of the user's finger. The user gets feedback that the reading process has successfully identified and authenticated the user with the fingerprint as a credential for logging on to the local machine by the user's fingerprint using the event driven credential provider module  seen in . The credential provider module  compares the read of the user's fingerprint to its cache of stored fingerprints in credentials database and finds a match to the user's fingerprint, where the user is \u2018Richard\u2019 as shown in . The credential provider module  passes Richard's credentials to logon UI  via credential provider API . The logon UI  then passes Richard's credentials to OS logon  which logs Richard on to the local machine, the result of which is seen by Richard's user tile in the display of at reference numeral ","The foregoing were described for secure plug-in models in architecture for a logon process for credential provider modules. In reference to , a logon process can include one or more custom Pre-Logon Access Provider (PLAP) modules  that are interoperable with an OS of a local machine. Each PLAP module  enables a user to select a logon connection type, such as by using a dial up modem to a favorite Internet Service Provider (ISP), by using a cable modem to establish a network connection, by using a VPN for a network connection, by a local area network connection, etc.","In some circumstances, a local machine may have been configured to log on when a Remote Access Service (RAS) session is started so that a network connection is established for the logon in order to authenticate users of the local machine against the network. For instance, a network administrator may require users to logon at a local machine for a RAS session because this requirement allows the network administrator to have tight controls over what is installed on the local machine before the local machine has a chance to establish a connection with an enterprise network that is administered by the network administrator. Such tight controls of the local machine may include updating the local machine with anti-virus or other applications to install, and may include forcing periodic changes to passwords, etc. In some cases, all local machines in an enterprise network may be required to establish a logon connection with a specific RAS session prior to logging on to the enterprise network.","As shown in , a list of logon connection types is offered to a user upon activation of a pull down menu icon . Each item on the list represents a separate logon provider or connection type through which a connection using a corresponding access service can be established to a network. As seen in , a selection of the connection type and corresponding access service from the list is required of the user, along with the input of a username and password into fields  and an account type at field . The list of logon connection types and corresponding access services is evoked by activation of icon  so as to show all machine wide connections and allows the user to choose one from the list. Each connection represents a Remote Access Service (RAS) that is not necessarily provided by the provider of the OS, yet is compatible with the OS. For example, the RAS can be a custom dialer module provided by an independent software vendor unrelated to the provider of the OS. As such, the custom RAS obviates the need to use a default RAS dialer that is provided with the OS. The RAS session will use the credentials already entered at fields - when trying to establish a connection to a network that was specified by the user from the list at reference numeral . If the credentials input by the user fail to establish the connection as was selected by the user, a prompt will be displayed that asks the user to provide additional credentials. Using these additional credentials, an attempt will again be made at making the connection via the user-specified logon connection type from the list at reference numeral . If this next attempt is successful in establishing a connection to the network, then a return of new credentials will be made for use in the logon process described above with respect to ","The user interface seen in the screen  of  can be further explained by reference to  that illustrates an exemplary process  for establishing a type of connection to a user-specified access service. A logon UI , through a pre-logon access provider (PLAP) manager API , requests that PLAP modules  provide a flat list of a corresponding set of connection types and access services. The access services in the flat list correspond, for example, to a custom dial up access service , a custom VPN access service , and any other type of custom or default access service . A representation of each access service - is displayed to the user by logon UI . Input from the user is made into fields - and includes a username, password, account type, and the user-specified connection type and corresponding access service from the list at reference numeral . The PLAP manager API  attempts to establish a connection to a domain using the access service selected by the user. If the connection is not successfully made, the PLAP manager API  may cause the logon UI  to prompt the user for further information, such as additional credentials, before trying again to establish a connection to the user-selected access service.","Once the connection to a domain has been established by the PLAP manager API  by use of the user-selected access service, the username and password input by the user are passed as credentials for authentication of the corresponding user, entity, or principal at the domain. A successful identification and authentication of the user, entity, or principal with the credentials will be communicated from the PLAP manager API  to the logon UI . The logon UI  will perform an RPC to the OS logon , where the RPC will also communicate the credentials. The OS logon  passes the credentials as an LSA logon user call to the LSA  for local identification and authentication against a database of credentials at SAM or at a local or remote credentials database . Alternatively, the LSA  can pass the credentials over a domain connection to AD\/KDC  for identification and authentication at the domain. Once the credentials have been used to identify and authenticate a user using either SAM , credentials database , or AD\/KDC , the success thereof is communicated to OS logon  to complete the process of logging the user on to the local machine. In some implementations, the SAM , the credentials database , and the AD\/KDC  can be at the same domain and may also be the same database. In other implementations, the authentication for a principal, entity, or user can be made with a corresponding credential against a token protocol credential service and\/or a challenge and response protocol credential service.","The logon plug-in models for credential providers discussed above can be combined with the pre-logon access providers in variation implementations, examples of which will now be demonstrated in reference to .  shows an example of a screen  that allows a user to input a username and password and to select a logon options button . The user's selection of the logon options button  displays a flat list of accounts from which the user can make a selection of an account type . The account type selection represents the user's selection of a logon plug-in model for a specific credential provider. As seen in screen , the user has selected the account type \u201cNovell\u201d. The selection of the \u201cNovell\u201d account type allows the user to further select an \u201cadvanced Novell options\u201d button . The selection of the \u201cadvanced Novell options\u201d button brings up a Novell UI that prompts the user to input still further credentials. These further credentials will be used to identify and authenticate the user against an access database at a Novell server. The user can also see, and make a PLAP selection from, a flat list of access services by clicking on a pull down menu icon .","A process  shows a plurality of modules  that include both PLAP modules and credential provider modules each having a respective API  to a logon UI . Each PLAP module  can correspond to any one of several default or custom pre-logon access providers. Each PLAP module  can be selected by a user from the flat list of access services that are displayed by logon UI  after the user activates the pull down menu icon . Each PLAP module  can establish a connection to a respective network through a different type of connection and corresponding access service in order to authenticate a user using credentials against a local and\/or remote credentials database. The flat list of access services is requested from the PLAP modules  by the logon UI .","The user is prompted by the logon UI  to enter credentials at fields seen in , such as the username and password fields, as dictated by the user-selected default or custom credential provider modules . Each credential provider modules  may correspond to readers - and , as discussed above. These input credentials are processed by the corresponding credential provider module  locally at the local machine. The credential provider module  may be configured to do a translation on the input credentials, such as by translating biometric credentials received by fingerprint reader  or certificate credentials read by smart card reader . The translated credentials from credential provider module  are in a credential protocol that is intended to be compatible for further identification and authentication by the OS of the local machine. As such, this translation of the original credentials to the translated credentials can be done locally at the local machine. Once this translation of the original credential into the translated credentials has been performed, the translated credentials are then provided by the credential provider module  to the logon UI  through the API . The API  to the logon UI  uses the PLAP module  selected by the user to establish connectivity to the access service using the corresponding type of connection. Stated otherwise, the PLAP module  identifies the access service selected by the user from the flat list of access services that was displayed in the pull down menu of icon  on the screen .","The PLAP module  receives the credentials that are compatible with the OS as were obtained from credential provider module . The logon UI  then calls for the PLAP module  to use the translated credentials from the credential provider module  in order to establish a secure network connection session with the corresponding user- selected access service. The PLAP module  then attempts to establish the network session with the user-selected access service to the domain at which a credentials database is located. If the PLAP module  is unable to establish the network session using the user- selected access service, then the PLAP module  can request the logon UI  to display a custom UI that prompts the user to enter still more credentials that are specific to the custom UI. For instance, the PLAP module  may request credentials that are specific to authentication at a Novell server. These additional credentials may require still further input of a special username and special password that are needed in order to access a special web site on the Internet (e.g., Novell.com, AOL.com, MSN.com, etc.) in order to get a connection for a network session established with the user-selected access service. In this case, the custom UI for the PLAP module  is displayed with a dialog box that prompts the user for still more credentials (e.g., Novell UI ).","Once entered, the PLAP module  then swaps or switches out the newly entered credentials from the Novell UI in place of the first credentials (username and password) that were previously acquired. These previous credentials are removed and the newly entered credentials are used. The newly entered credentials are returned back to logon UI . The logon UI  then gives the newly entered credentials to the OS logon  via an RPC call. The OS logon  then passes the newly entered credentials to the LSA . The newly entered credentials are tested in the LSA  for identification and authentication. The LSA  validates against a local database using SAM and\/or local or remote credentials database . In an active directory domain case, the validation of the newly entered credentials is made by passing the new entered credentials over the network session to the domain at the AD\/KDC , where the network session connection was established by the PLAP module . Accordingly, the identification and authentication process using the credential provider and PLAP modules  can be a loop back routine.","By way of further example, a user may originally enter a username of \u201cBill\u201d and a password of \u201c\u201d as a first set of credentials which are processed locally at the local machine. A PLAP module , which corresponds to a user-selected access service, then calls through API  for the logon UI  to prompt the user to enter another password. The user then enters the password of \u201c\u201d. The new password of \u201c\u201d is sent over a connection to a credential database (e.g., SAM , credentials database , AD\/KDC , etc.) using the user-selected access service in a network session connection. After successful authentication against the credential database, the password of \u201c\u201d is then communicated from logon UI  through OS logon  to LSA . LSA  passes the password of \u201c\u201d to a domain for identification and authentication against the AD\/KDC  or another credential database. So, the first performance is that of the PLAP module  and the second performance is that of the credential provider module .","Each PLAP module  involves itself in a secure identification and authentication routine as well as in the establishment of a network connection session to a domain. In addition to this, the user-selected access service that is established by a respective default or custom PLAP module  can also be the network connection session that is used by the credential provider module  for further identification and authentication of credentials.","A local authentication of credentials can be a different style of authentication of credential at a domain. The style can be qualified by data kept in a user account in the active directory at the domain for AD\/KDC . The active directory for a user account can have different attributes, such as one attribute that specifies if the user account can establish a RAS session, and another attribute that specifies whether the user account is permitted to log on interactively. By way of example, these attributes can be stored as two (2) different bits in the user account of the active directory at the domain, and can be queried as such.","Other implementations can combine the use of both a credential provider and a PLAP, such as where a local machine accesses the Internet whenever a user logs on. In this case, at start up of the local machine, a start up routine is set to automatically execute. This startup routine automatically uses the user's logon credentials to logon to the local machine as well as to logon to an Internet Service Provider (ISP) in order to automatically access and retrieve information from a default Web site. Alternatively, the user may be prompted to enter two (2) sets of credentials\u2014one set for the local machine and different set for the ISP that will be accessed through a user-specified PLAP.","In yet another implementation, a local machine may be configured so as require identification and authentication of all users at a Novell (or other type) server at a specific domain. In this case, the user of the local machine will be prompted to enter server-specific credentials (e.g., Novell-server type credentials). The user then will select the advanced Novell option seen in . The logon UI  seen in  gathers credentials input by the user in order to satisfy modules  for both the access service and for the credential provider corresponding to the Novell server. During this gathering of credentials, a connection over a network to the domain of the Novell server has not yet been made. The user can also select a custom PLAP dialer from the list of access services associated with icon . The user can then indicate that all input has been made (e.g., the user presses the \u2018enter\u2019 key). At this point, for instance, network traffic can begin from the local machine to a remote credential database at a domain and to the domain of the AD\/KDC . The network traffic uses the network connection session established by the PLAP module  to a corresponding access service. The network traffic can include credentials in metadata that could have been simultaneously gathered and then sequentially communicated\u2014first for the authentication for a principal to use an access service established using a PLAP module  and second for the credential provider authentication with a credential provider module . As such, the access service allows the local machine to securely communicate with the active directory at its domain, which may be a third party Internet server.","Exemplary Computing System and Environment.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 14","FIGS. 2"],"b":["1442","13","1444","1446","1448","1446","1444","1448","1446","1450","1452","1454","1442","1450"],"i":"a"},"Computer  further includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from and writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the bus  by an SCSI interface  or some other appropriate interface. The drives and their associated computer-readable media provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer-readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROMs), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk , magnetic disk , optical disk , ROM , or RAM , including an OS , one or more modules or application programs . By way of example, and not by way of limitation, the one or more modules or application programs  can be the credential provider modules , the sub-authentication credential provider , the PLAP modules , and other modules . Other items that may be stored on the hard disk , magnetic disk , optical disk , ROM , or RAM  including other program modules  and program data . A user may enter commands and information into computer  through input devices such as a keyboard  and a pointing device . Other input devices (not shown in ) may include finger print reader , token reader , smart card reader , a microphone, a joystick, a game pad, a satellite dish, a camera or optical scanner, a scent detection and analysis device, or the like. These and other input devices are connected to the processing unit  through an interface  that is coupled to the bus . A monitor  or other type of display device is also connected to the bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown) such as speakers and printers.","Computer  commonly operates in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, computer  is connected to the local network through a network interface or adapter . When used in a WAN networking environment, computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the bus  via a serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Generally, the data processors of computer  are programmed by means of instructions stored at different times in the various computer-readable storage media of the computer. Programs and operating systems are typically distributed, for example, on floppy disks or CD-ROMs. From there, they are installed or loaded into the secondary memory of a computer. At execution, they are loaded at least partially into the computer's primary electronic memory. The invention described herein includes these and other various types of computer-readable storage media when such media contain instructions or programs for implementing the blocks described below in conjunction with a microprocessor or other data processor. The invention also includes the computer itself when programmed according to the methods and techniques described herein.","For purposes of illustration, programs and other executable program components such as the OS are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor(s) of the computer.","Conclusion","Implementations allow for a plurality of coexisting interoperable modules to be used that are fully compatible with an OS of a local machine. These coexisting interoperable modules can be log-on plug-in models for credential providers to logon to the local machine via its OS, where the models include but are not limited to digital certificates, biometrics, username and password credentials, etc. These coexisting interoperable modules can also be pre-logon access providers, including but not limited to Internet tunneling applications, wireless communication applications, Ethernet VPN applications, twisted pair circuit switched network applications using dialup 56 K modem hardware, etc.","The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the implementations may be had by reference to the following detailed description when taken in conjunction with the accompanying drawings wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 2","i":["a","b "],"b":"2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5","i":"a "},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5","i":"b "},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5","i":"c "},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6","i":"a "},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6","i":"b "},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7","i":"a "},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7","i":"b "},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8","i":"a "},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8","i":"b "},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9","i":"a "},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9","i":"b "},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9","i":"c "},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
