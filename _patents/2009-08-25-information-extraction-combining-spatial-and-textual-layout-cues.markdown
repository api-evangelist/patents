---
title: Information extraction combining spatial and textual layout cues
abstract: Techniques for extracting information from a formatted document are provided. The techniques include combining one or more visual layout rules, one or more mark-up rules and one or more text-based rules in connection with a formatted document, and specifying one or more rules from the one or more visual layout rules, one or more mark-up rules and one or more text based rules to extract information from the formatted document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08205153&OS=08205153&RS=08205153
owner: International Business Machines Corporation
number: 08205153
owner_city: Armonk
owner_country: US
publication_date: 20090825
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["Embodiments of the invention generally relate to information technology, and, more particularly, to information extraction.","Information in Web pages and formatted documents are designed for human consumption and, hence, exhibit some visual pattern. The document author communicates this abstract visual pattern to the web browser using a specification language (for example, hypertext markup language (HTML), cascading style sheets (CSS), Javascript Code, etc.). Humans typically do not look at the specification language to understand the data. Rather, they look at the rendered version of the page through a browser. However, existing rule-based information extraction (IE) frameworks do not deal with visual representations of a page. Instead, existing approaches look for patterns in the specification language. Thus, any rules that intend to exploit the visual cues in the layout need to be translated into equivalent rules based on the source code of the page.","As such, existing IE approaches have serious limitations, including, for example, the following. An abstract visual pattern can be implemented in many different ways by the web designer. For example, a tabular structure can be implemented using any of <table>, <div> and <li> tags, and only a fraction of tables are implemented using the <table> tag. Source-based rules that use layout cues need to cover all possible ways in which the layout can be achieved. A rule that relies on a specific implementation will fail on pages that use a different implementation, even if these pages exhibit the same visual pattern.","Also, with existing approaches, the proximity of two entities in the HTML source code does not necessarily imply visual proximity, and so it may not be possible to encode visual proximity cues using simple source based rules. Additionally, rules based on HTML tags and document object model (DOM) trees are often sensitive to even minor modifications of the web page, and rule maintenance becomes messy.","Further, challenges exist in pure text-based information extraction systems. For example, specification languages are becoming more complex and difficult to analyze. Also, visualization logic in Javascript and CSS prevent text based analysis. Further, there can be errors in the markup code, but browsers can still render the page accurately in most cases, and spatial layout based rules would be more robust to these kinds of errors.","Principles and embodiments of the invention provide techniques for information extraction combining spatial and textual layout cues. An exemplary method (which may be computer-implemented) for extracting information from a formatted document, according to one aspect of the invention, can include steps of combining one or more visual layout rules, one or more mark-up rules and one or more text-based rules in connection with a formatted document, and specifying one or more rules from the one or more visual layout rules, one or more mark-up rules and one or more text based rules to extract information from the formatted document.","One or more embodiments of the invention or elements thereof can be implemented in the form of a computer product including a tangible computer readable storage medium with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention or elements thereof can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps. Yet further, in another aspect, one or more embodiments of the invention or elements thereof can be implemented in the form of means for carrying out one or more of the method steps described herein; the means can include (i) hardware module(s), (ii) software module(s), or (iii) a combination of hardware and software modules; any of (i)-(iii) implement the specific techniques set forth herein, and the software modules are stored in a tangible computer-readable storage medium (or multiple such media).","These and other objects, features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.","Principles of the invention include information extraction using a combination of spatial layout based and text based rules. One or more embodiments of the invention include specifying rules (or algebra) for information extraction from formatted documents (for example, web pages) that combine visual layout information, text-based features and markup-based rules. Visual layout information, for example, of a web page, can include information such as relative locations of different regions, etc. The techniques described herein also include indexing web pages and visual regions therein using the visual layout information and storing them in a database to enable efficient information extraction.","Additionally, one or more embodiments of the invention include enabling the building of applications that need to use visual layout for information extraction. For example, this could include extracting system requirements and dependencies of software products, mining contracts for compliance, comparison shopping, etc. Further, as detailed herein, one or more embodiments of the invention include an efficient rule-based information extraction framework that combines visual and markup based rules. The visual information extraction framework allows use of visual information in a rendered web page. Also, rules can be specified in terms of the visual layout of the page along with source code.","The techniques described herein additionally include visual operator algebra for extracting regions from a web page based on their relative locations. This algebra can be, for example, rich enough to specify most of the commonly occurring patterns. By way of example, a single page can have around 10,000 visual regions. As such, one or more embodiments of the invention include efficiently retrieving the regions of interest and performing complex operations on them. Further, the visual operator algebra can be implemented using a geographical (spatial) database. A geographic information system (GIS) database can be used to store, query and retrieve visual regions of a web page. The operator algebra can also be implemented using a regular relational database.","As detailed herein, one or more embodiments of the invention include using spatial layout rules, where such rules can include specification of the direction of a region with respect to another other, the area of a region, the location of a region within other regions, the alignment of a set of regions, the distance between regions, etc. Such rules can also include some property of the region such as text, font size, the hypertext markup language (HTML) tag, etc.","Additionally, one or more embodiments of the invention can include storing annotations with the associated visual region and formatting information extracted from a formatted document in a database. The techniques detailed herein can also include indexing regions extracted from a formatted document using a spatial database or a custom index structure to enable scalable and efficient implementation of rules with visual constraints. Further, visual rules can be combined with other rules on the source code of a web page (text-based rules).","By way of example, sample scenarios can include horizontally aligned regions with no gaps, vertically aligned regions with no gaps, etc. For vertically aligned regions (with large gaps), for example, functions used for information extraction can include, for example, SouthOf and NorthOf. Additionally, text-based rules can be used to identify operating systems and\/or product names, version numbers, etc., and can also be combined with visual rules.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 1","FIG. 1"],"b":["102","104","106","108"]},"The visual region extractor module  extracts of all the visual regions of all web pages stored locally by web page dump  by rendering the local copy of the web page in a web browser and using browser application programming interfaces (APIs) to query for the coordinates of each node in the document object model (DOM) tree of the web page. The rendering can also be done on the online version of the webpage by passing the uniform resource locator (URL). A visual region represents a visual box in the layout of a web page and has the attributes: <x, y, x, y,>. (x, y) and (x, y) denote the bounding box of the identified region in the visual layout of the document. One can assume that the regions are rectangles, which applies to most markup languages such as hypertext markup language (html). For example, html uses a box model for visual layout in which each html element is mapped to a rectangular area in the layout of the page.","The spatial database module  includes a spatial indexer module , and also interacts with a rules engine module  (which receives visual rules and text rules). The spatial indexer module  creates indexes on the regions to make the evaluation of visual rules faster. The spatial indexer can also be implemented using a relational database. The rules engine module  processes the rules and converts them into queries that can be understood by the spatial database module. The output of the rules engine module  is a set of annotations that satisfy the rules.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 2"],"b":"202"},"One or more embodiments of the invention include operators in the algebra to enable writing of rules based on visual regions. The operators can be classified as span generating, scalar or grouping operators.","Span generating operators produce a set of visual spans as output and examples are listed in the table below:",{"@attributes":{"id":"p-0026","num":"0025"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Operator","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00001","he":"2.46mm","wi":"2.12mm","file":"US08205153-20120619-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},"Return all the visual spans for the document d"]},{"entry":["Ancestors(vs)","Return all ancestor visual spans of vs"]},{"entry":["Descendents(vs)","Return all descendent visual spans of vs"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Scalar operators can take as input one or more values from a single tuple and return a single value. Scalar operators that return Boolean values are called Boolean operators and can be used in predicates and are further classified as directional or containment operators. The directional operators allow visual spans to be compared based on their positions in the layout. Exemplary directional Boolean operators are listed in the table below:",{"@attributes":{"id":"p-0028","num":"0027"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Predicate","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["NorthOf(vs, vs)","Span vsoccurs above span vsin the page layout"]},{"entry":["StrictNorthOf(vs, vs)","Span vsoccurs strictly above span vsin the"]},{"entry":[{},"page"]},{"entry":["SouthOf(vs, vs)","Span vsoccurs below span vsin the page layout"]},{"entry":["StrictSouthOf(vs, vs)","Span vsoccurs strictly below span vsin the"]},{"entry":[{},"page"]},{"entry":["EastOf(vs, vs)","Span vsoccurs to the right of span vsin"]},{"entry":[{},"the page layout"]},{"entry":["StrictEastOf(vs, vs)","Span vsoccurs strictly to the right of span vs"]},{"entry":[{},"in the page"]},{"entry":["WestOf(vs, vs)","Span vsoccurs to the left of span vsin the"]},{"entry":[{},"page layout"]},{"entry":["StrictWestOf(vs, vs)","Span vsoccurs strictly to the left of span vs"]},{"entry":[{},"in the page"]},{"entry":["NorthWestOf(vs, vs)","vsoccurs above and left of span vsin the page"]},{"entry":["SouthWestOf(vs, vs)","vsoccurs below and left of span vsin the page"]},{"entry":["NorthEastOf(vs, vs)","vsoccurs above and right of span vsin the page"]},{"entry":["SouthEastOf(vs, vs)","vsoccurs below and right of span vsin the page"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Exemplary containment Boolean operators are listed in the table below:",{"@attributes":{"id":"p-0030","num":"0029"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Predicate","Explanation"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Contains(vs, vs)","vsis contained within vs"]},{"entry":[{},"Touches(vs, vs)","vstouches vson one of the four edges"]},{"entry":[{},"Intersects(vs, vs)","vsand vsintersect"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{},"sub":["1","2","1","h","2","l ","1","l","2","l ","1","h","2","h"]},{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Operator","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MaximalRegion(vs)","Returns the largest visual span vsthat contains"]},{"entry":[{},"vs and also has the same text content as vs"]},{"entry":["MinimalRegion(vs)","Returns the smallest visual span vsthat is"]},{"entry":[{},"contained in vs and also has the same text"]},{"entry":[{},"content as vs"]},{"entry":["Area(vs)","Returns the area corresponding to vs"]},{"entry":["Centroid(vs)","Returns a visual span that has x and y coordinates"]},{"entry":[{},"corresponding to the centroid of vs and text span"]},{"entry":[{},"identical to vs"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Many HTML elements in a nested HTML source may actually have identical text content. The MinimalRegion and MaximalRegion operators can be used to find the visual span corresponding to the innermost or the outermost HTML element, respectively.","Grouping operators are used to group multiple tuples based on some criteria and apply an aggregation function to each group (for example, similar to the GROUP BY functionality in structure query language (SQL)). Exemplary grouping operators and the aggregation operators specific to visual spans are listed in the tables below, respectively:",{"@attributes":{"id":"p-0034","num":"0033"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Operator","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HorizontallyAlligned(V S,","Returns groups of horizontally"]},{"entry":["consecutive, maxdist)","aligned visual spans from V S."]},{"entry":[{},"If the consecutive flag is set, the"]},{"entry":[{},"visual spans have to be consecutive"]},{"entry":[{},"with no non-aligned span in between."]},{"entry":[{},"The maxdist limits the maximum"]},{"entry":[{},"distance possible between two"]},{"entry":[{},"consecutive visual spans in a group."]},{"entry":["VerticallyAligned(V S,","Returns groups of vertically aligned"]},{"entry":["consecutive, maxdist)","visual spans from V S."]},{"entry":[{},"If the consecutive flag is set, the"]},{"entry":[{},"visual spans have to be consecutive"]},{"entry":[{},"with no non-aligned span in between."]},{"entry":[{},"The maxdist limits the maximum"]},{"entry":[{},"distance possible between two"]},{"entry":[{},"consecutive visual spans in a group."]},{"entry":["MinimalSuperRegion(V S)","Returns the smallest visual span that"]},{"entry":[{},"contains all the visual spans in set V S"]},{"entry":["MinimalBoundingRegion(V S)","Returns a region that is a minimum"]},{"entry":[{},"bounding rectangle of all visual spans"]},{"entry":[{},"in set V S"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":"302"},"The visual layout rules can include, for example, specification of a direction of a region with respect to another region, an area of a region, a location of a region within one or more additional regions, an alignment of a set of one or more regions, a distance between two or more regions and\/or a property of a region (for example, text, font size, HTML tag, etc.). Also, the layout rules can include an aggregation operator.","Step  includes specifying one or more rules from the one or more visual layout rules, one or more mark-up rules and one or more text based rules to extract information from the formatted document.","The techniques depicted in  can also include storing one or more annotations with an associated visual region, as well as formatting information extracted from a formatted document in a database. Additionally, one or more embodiments of the invention include indexing each region extracted from a formatted document using a spatial database and\/or a custom index structure (for example, to enable efficient implementation of rules with visual constraints). Further, the techniques described herein can include using a text index in combination with a spatial index for efficient implementation of one or more rules combining text and spatial layout based rules.","The techniques depicted in  can also, as described herein, be run on a system, wherein the system includes distinct software modules, each of the distinct software modules being embodied on a tangible computer-readable recordable storage medium. The distinct software modules can include, for example, a visual region extractor module, a spatial database module, a spatial indexer module and a rules engine module executing on a hardware processor.","Additionally, the techniques depicted in  can be implemented via a computer program product that can include computer useable program code that is stored in a computer readable storage medium in a data processing system, and wherein the computer useable program code was downloaded over a network from a remote data processing system. Also, in one or more embodiments of the invention, the computer program product can include computer useable program code that is stored in a computer readable storage medium in a server data processing system, and wherein the computer useable program code are downloaded over a network to a remote data processing system for use in a computer readable storage medium with the remote system.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","One or more embodiments of the invention, or elements thereof, can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps.","One or more embodiments can make use of software running on a general purpose computer or workstation. With reference to , such an implementation might employ, for example, a processor , a memory , and an input\/output interface formed, for example, by a display  and a keyboard . The term \u201cprocessor\u201d as used herein is intended to include any processing device, such as, for example, one that includes a CPU (central processing unit) and\/or other forms of processing circuitry. Further, the term \u201cprocessor\u201d may refer to more than one individual processor. The term \u201cmemory\u201d is intended to include memory associated with a processor or CPU, such as, for example, RAM (random access memory), ROM (read only memory), a fixed memory device (for example, hard drive), a removable memory device (for example, diskette), a flash memory and the like. In addition, the phrase \u201cinput\/output interface\u201d as used herein, is intended to include, for example, one or more mechanisms for inputting data to the processing unit (for example, mouse), and one or more mechanisms for providing results associated with the processing unit (for example, printer). The processor , memory , and input\/output interface such as display  and keyboard  can be interconnected, for example, via bus  as part of a data processing unit . Suitable interconnections, for example via bus , can also be provided to a network interface , such as a network card, which can be provided to interface with a computer network, and to a media interface , such as a diskette or CD-ROM drive, which can be provided to interface with media .","Accordingly, computer software including instructions or code for performing the methodologies of the invention, as described herein, may be stored in one or more of the associated memory devices (for example, ROM, fixed or removable memory) and, when ready to be utilized, loaded in part or in whole (for example, into RAM) and implemented by a CPU. Such software could include, but is not limited to, firmware, resident software, microcode, and the like.","A data processing system suitable for storing and\/or implementing program code will include at least one processor  coupled directly or indirectly to memory elements  through a system bus . The memory elements can include local memory employed during actual implementation of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during implementation.","Input\/output or I\/O devices (including but not limited to keyboards , displays , pointing devices, and the like) can be coupled to the system either directly (such as via bus ) or through intervening I\/O controllers (omitted for clarity).","Network adapters such as network interface  may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters.","As used herein, including the claims, a \u201cserver\u201d includes a physical data processing system (for example, system  as shown in ) running a server program. It will be understood that such a physical server may or may not include a display and keyboard.","As noted, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon. Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. Media block  is a non-limiting example. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, radio frequency (RF), etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, component, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be implemented substantially concurrently, or the blocks may sometimes be implemented in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","It should be noted that any of the methods described herein can include an additional step of providing a system comprising distinct software modules embodied on a computer readable storage medium; the modules can include, for example, any or all of the components shown in . The method steps can then be carried out using the distinct software modules and\/or sub-modules of the system, as described above, executing on one or more hardware processors . Further, a computer program product can include a computer-readable storage medium with code adapted to be implemented to carry out one or more method steps described herein, including the provision of the system with the distinct software modules.","In any case, it should be understood that the components illustrated herein may be implemented in various forms of hardware, software, or combinations thereof; for example, application specific integrated circuit(s) (ASICS), functional circuitry, one or more appropriately programmed general purpose digital computers with associated memory, and the like. Given the teachings of the invention provided herein, one of ordinary skill in the related art will be able to contemplate other implementations of the components of the invention.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca,\u201d \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","At least one embodiment of the invention may provide one or more beneficial effects, such as, for example, implementing an information extraction framework that allows specification of visual rules combined with text based rules.","It will be appreciated and should be understood that the exemplary embodiments of the invention described above can be implemented in a number of different fashions. Given the teachings of the invention provided herein, one of ordinary skill in the related art will be able to contemplate other implementations of the invention. Indeed, although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various other changes and modifications may be made by one skilled in the art."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
