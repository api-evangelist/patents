---
title: System and method for increased system availability to network storage in virtualized environments
abstract: A method may include a hypervisor instantiating a virtual machine including an initiator client and the hypervisor determining whether a virtualized information handling system is interfaced to an associated storage resource via an offload host bus adapter (HBA). If the virtualized information handling system is interfaced to the associated storage resource via an offload HBA, the hypervisor may execute an adapter driver for the HBA, the adapter driver for communicating input/output communications between the virtual machine and the associated storage resource via the offload HBA. If the virtualized information handling system is interfaced to the associated storage resource via another adapter other than an offload HBA, the hypervisor may execute an emulator, the emulator for emulating the functionality of the adapter driver for the HBA and for communicating input/output communications between the virtual machine and the associated storage resource via the other adapter.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08990800&OS=08990800&RS=08990800
owner: Dell Products L.P.
number: 08990800
owner_city: Round Rock
owner_country: US
publication_date: 20090114
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure relates in general to virtualized information handling systems, and more particularly to increasing system availability in virtualized information handling systems.","As the value and use of information continues to increase, individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes, compiles, stores, and\/or communicates information or data for business, personal, or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications, information handling systems may also vary regarding what information is handled, how the information is handled, how much information is processed, stored, or communicated, and how quickly and efficiently the information may be processed, stored, or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing, airline reservations, enterprise data storage, or global communications. In addition, information handling systems may include a variety of hardware and software components that may be configured to process, store, and communicate information and may include one or more computer systems, data storage systems, and networking systems.","Increasingly, information handling systems are deployed in architectures that allow multiple operating systems to run on a single information handling system. Labeled \u201cvirtualization,\u201d this type of information handling system architecture decouples software from hardware and presents a logical view of physical hardware to software. In a virtualized information handling system, a single server can act and behave as multiple, independent servers. Server virtualization is enabled primarily by a piece of software, often called the hypervisor, that sits between the server hardware and the multiple operating systems, also called guest operating systems (guest OS). The hypervisor software provides a container that presents a logical hardware interface to the guest operating systems. An individual guest operating system, along with any applications or other software running on it, \u201cthinks\u201d it is running on a physical server and is known as a virtual machine.","Often, these architectures are employed for numerous reasons, e.g., (1) increased hardware resource utilization; (2) cost-effective scalability across a common, standards-based infrastructure; (3) workload portability across multiple servers; (4) streamlining of application development by certifying to a common virtual interface rather than multiple implementations of physical hardware; and\/or (5) encapsulation of complex configurations into a file that is easily replicated and provisioned.","Internet Small Computer System Interface (iSCSI) and other storage transports may provide many advantages when operating in a virtualized environment, primarily because of the initiator addressing model that allows an initiator address to be tied to an instance of the operating system (e.g., virtual machine) instead of a hardware device, and provides numerous multiple implementation options. For example, iSCSI may be implemented in a virtualized environment as shown in either of .",{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 1A","FIG. 1A","FIG. 1A"],"b":["10","12","12","14","12","14","16","16","14","10","20","22","22","16","14","14","12"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 1B","FIG. 1B","FIG. 1"],"b":["30","32","32","36","32","34","32","34","38","30","40","42","42","36","42","32","42","32","42","32"],"i":["a ","a","b ","b"]},"Some iSCSI implementations also allow offload, whereby a virtual machine instantiated on a particular information handling system is \u201cmigrated\u201d to another information handling system. Offload may be desirable for many reasons, for example to allow a virtual machine to be moved from a first information handling system to a second information handling system in order to free up processing resources for other virtual machines instantiated on the first information handling system.","However, traditional virtualization architectures often do not allow seamless live migration of virtual machines between information handling systems that utilize different iSCSI implementations (e.g., migration from a \u201csoftware initiator\u201d implementation wherein initiators are present virtual machine clients to an implementation using iSCSI offload host bus adapter is not supported under traditional approaches).","In accordance with the teachings of the present disclosure, the disadvantages and problems associated with offload in a virtualized information handling system have been substantially reduced or eliminated.","In accordance with one embodiment of the present disclosure, a method for increasing system availability in a virtualized information handling system including a hypervisor allowing multiple virtual machines to run on the virtualized information handling system may be provided. The method may include the hypervisor instantiating a virtual machine including an initiator client. The method may also include the hypervisor determining whether the virtualized information handling system is interfaced to an associated storage resource via an offload host bus adapter. If the virtualized information handling system is interfaced to the associated storage resource via an offload host bus adapter, the hypervisor may execute an adapter driver for the host bus adapter, the adapter driver for communicating input\/output communications between the virtual machine and the associated storage resource via the offload host bus adapter. If the virtualized information handling system is interfaced to the associated storage resource via another adapter other than an offload host bus adapter, the hypervisor may execute an emulator, the emulator for emulating the functionality of the adapter driver for the host bus adapter and for communicating input\/output communications between the virtual machine and the associated storage resource via the other adapter.","In accordance with yet another embodiment of the present disclosure, an article of manufacture may include a computer readable medium and computer-executable instructions carried on the computer readable medium. The instructions may be executable by one or more processors to (a) instantiate a virtual machine on a virtualized information handling system, the virtual machine including an initiator client, (b) determine whether the information handling system is interfaced to an associated storage resource via an offload host bus adapter, (c) if the virtualized information handling system is interfaced to the associated storage resource via an offload host bus adapter, execute an adapter driver for the host bus adapter, the adapter driver for communicating input\/output communications between the virtual machine and the associated storage resource via the offload host bus adapter, and (d) if the virtualized information handling system is interfaced to the associated storage resource via another adapter other than an offload host bus adapter, execute an emulator, the emulator for emulating the functionality of the adapter driver for the host bus adapter and for communicating an input\/output communications between the virtual machine and the associated storage resource via the other adapter.","In accordance with yet another embodiment of the present disclosure, an information handling system may include one or more processors, a memory communicatively coupled to the one or more processors, and computer-executable instructions carried on a computer readable medium. The instructions may be executable by one or more processors to (a) instantiate a virtual machine on a virtualized information handling system, the virtual machine including an initiator client, (b) determine whether the information handling system is interfaced to an associated storage resource via an offload host bus adapter, (c) if the virtualized information handling system is interfaced to the associated storage resource via an offload host bus adapter, execute an adapter driver for the host bus adapter, the adapter driver for communicating input\/output communications between the virtual machine and the associated storage resource via the offload host bus adapter, and (d) if the virtualized information handling system is interfaced to the associated storage resource via another adapter other than an offload host bus adapter, execute an emulator, the emulator for emulating the functionality of the adapter driver for the host bus adapter and for communicating an input\/output communications between the virtual machine and the associated storage resource via the other adapter.","Other technical advantages will be apparent to those of ordinary skill in the art in view of the following specification, claims, and drawings.","Preferred embodiments and their advantages are best understood by reference to  wherein like numbers are used to indicate like and corresponding parts.","For the purposes of this disclosure, an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute, classify, process, transmit, receive, retrieve, originate, switch, store, display, manifest, detect, record, reproduce, handle, or utilize any form of information, intelligence, or data for business, scientific, control, entertainment, or other purposes. For example, an information handling system may be a personal computer, a PDA, a consumer electronic device, a network storage device, or any other suitable device and may vary in size, shape, performance, functionality, and price. The information handling system may include memory, one or more processing resources such as a central processing unit (CPU) or hardware or software control logic. Additional components or the information handling system may include one or more storage devices, one or more communications ports for communicating with external devices as well as various input and output (I\/O) devices, such as a keyboard, a mouse, and a video display. The information handling system may also include one or more buses operable to transmit communication between the various hardware components.","Additionally, the information handling system may include firmware for controlling and\/or communicating with, for example, hard drives, network circuitry, memory devices, I\/O devices, and other peripheral devices. For example, the hypervisor and\/or the error detection system, both described more fully below, may comprise firmware. As used in this disclosure, firmware includes any software embedded in an information handling system component used to perform predefined tasks. Firmware is commonly stored in non-volatile memory, or memory that does not lose stored data upon the loss of power. In certain embodiments, firmware associated with an information handling system component is stored in non-volatile memory that is accessible to one or more information handling system components. In the same or alternative embodiments, firmware associated with an information handling system component is stored in non-volatile memory that is dedicated to and comprises part of that component.","For the purposes of this disclosure, computer-readable media may include any instrumentality or aggregation of instrumentalities that may retain data and\/or instructions for a period of time. Computer-readable media may include, without limitation, storage media such as a direct access storage device (e.g., a hard disk drive or floppy disk), a sequential access storage device (e.g., a tape disk drive), compact disk, CD-ROM, DVD, random access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), and\/or flash memory; as well as communications media such wires, optical fibers, microwaves, radio waves, and other electromagnetic and\/or optical carriers; and\/or any combination of the foregoing.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 2","FIG. 2"],"b":["100","100","102","103","104","105","107"]},"Components of physical hardware  may include, but are not limited to, one or more processors  and a system bus  that communicatively couples various system components to processors  including, for example, a memory subsystem , an I\/O subsystem , local storage resource , and a network interface . The system bus  may be any suitable type of bus structure, e.g., a memory bus, a peripheral bus, or a local bus using any of a variety of bus architectures. For example, such architectures may include, but are not limited to, Micro Channel Architecture (MCA) bus, Industry Standard Architecture (ISA) bus, Enhanced ISA (EISA) bus, Peripheral Component Interconnect (PCI) bus, PCI-Express bus, HyperTransport (HT) bus, and Video Electronics Standards Association (VESA) local bus.","Network interface  may be any suitable system, apparatus, or device operable to serve as an interface between information handling system  and a network . Network interface  may enable information handling system  to communicate over network  using any suitable transmission protocol and\/or standard, including without limitation all transmission protocols and\/or standards enumerated below with respect to the discussion of network .","In some embodiments, network interface  may be communicatively coupled via network  to network storage resource . Network  may be implemented as, or may be a part of, a storage area network (SAN), personal area network (PAN), local area network (LAN), a metropolitan area network (MAN), a wide area network (WAN), a wireless local area network (WLAN), a virtual private network (VPN), an intranet, the Internet or any other appropriate architecture or system that facilitates the communication of signals, data and\/or messages (generally referred to as data). Network  may transmit data using any storage and\/or communication protocol, including without limitation, Fibre Channel, Frame Relay, Asynchronous Transfer Mode (ATM), Internet protocol (IP), other packet-based protocol, small computer system interface (SCSI), Internet SCSI (iSCSI), Serial Attached SCSI (SAS) or any other transport that operates with the SCSI protocol, advanced technology attachment (ATA), serial ATA (SATA), advanced technology attachment packet interface (ATAPI), serial storage architecture (SSA), integrated drive electronics (IDE), and\/or any combination thereof. Network  and its various components may be implemented using hardware, software, or any combination thereof.","Processors  may comprise any system, device, or apparatus operable to interpret and\/or execute program instructions and\/or process data, and may include, without limitation a microprocessor, microcontroller, digital signal processor (DSP), application specific integrated circuit (ASIC), or any other digital or analog circuitry configured to interpret and\/or execute program instructions and\/or process data. In some embodiments, processors  may interpret and\/or execute program instructions and\/or process data stored locally (e.g., in memory subsystem  and\/or another component of physical hardware ). In the same or alternative embodiments, processors  may interpret and\/or execute program instructions and\/or process data stored remotely (e.g., in network storage resource ).","Memory subsystem  may comprise any system, device, or apparatus operable to retain program instructions or data for a period of time (e.g., computer-readable media). Memory subsystem  may comprise random access memory (RAM), electrically erasable programmable read-only memory (EEPROM), a PCMCIA card, flash memory, magnetic storage, opto-magnetic storage, or any suitable selection and\/or array of volatile or non-volatile memory that retains data after power to its associated information handling system  is turned off.","Local storage resource  may comprise computer-readable media (e.g., hard disk drive, floppy disk drive, CD-ROM, and\/or other type of rotating storage media, flash memory, EEPROM, and\/or other type of solid state storage media) and may be generally operable to store data.","Likewise, network storage resource  may comprise computer-readable media (e.g., hard disk drive, floppy disk drive, CD-ROM, and\/or other type of rotating storage media, flash memory, EEPROM, and\/or other type of solid state storage media) and may be generally operable to store data.","I\/O subsystem  may comprise any system, device, or apparatus generally operable to receive and\/or transmit data to\/from\/within information handling system . I\/O subsystem  may comprise, for example, any number of communication interfaces, graphics interfaces, video interfaces, user input interfaces, and\/or peripheral interfaces.","Error detection system  may comprise any system, device, or apparatus generally operable to detect errors that occur within physical hardware  of information handling system , and report those errors to hypervisor . In reporting such errors, error detection system  may include in the error report various information including, for example, the hardware resource from which the error originated, the type of error, the physical memory address at which the error occurred, and\/or any other information that may be associated with the error. Although depicted as external to physical hardware , error detection system  and its various components may be implemented as hardware within physical hardware , firmware running on physical hardware  (including, e.g., as a component of hypervisor ), software running on physical hardware  (including, e.g., as a component of hypervisor ), or any combination thereof.","Hypervisor  may comprise software and\/or firmware generally operable to allow multiple operating systems to run on a single information handling system at the same time. This operability is generally allowed via virtualization, a technique for hiding the physical characteristics of information handling system resources from the way in which other systems, applications, or end users interact with those resources. Hypervisor  may be one of a variety of proprietary and\/or commercially available virtualization platforms, including without limitation, IBM's Z\/VM, XEN, ORACLE VM, VMWARE's ESX SERVER, L4 MICROKERNEL, TRANGO, MICROSOFT's HYPER-V, SUN's LOGICAL DOMAINS, HITACHI's VIRTAGE, KVM, VMWARE SERVER, VMWARE WORKSTATION, VMWARE FUSION, QEMU, MICROSOFT's VIRTUAL PC and VIRTUAL SERVER, INNOTEK's VIRTUALBOX, and SWSOFT's PARALLELS WORKSTATION and PARALLELS DESKTOP.","In one embodiment, hypervisor  may comprise a specially designed operating system (OS) with native virtualization capabilities. In another embodiment, hypervisor  may comprise a standard OS with an incorporated virtualization component for performing virtualization.","In another embodiment, hypervisor  may comprise a standard OS running alongside a separate virtualization application. In this embodiment, the virtualization application of hypervisor  may be an application running above the OS and interacting with physical hardware  only through the OS. Alternatively, the virtualization application of hypervisor  may, on some levels, interact indirectly with physical hardware  via the OS, and, on other levels, interact directly with physical hardware  (e.g., similar to the way the OS interacts directly with physical hardware , or as firmware running on physical hardware ). As a further alternative, the virtualization application of hypervisor  may, on all levels, interact directly with physical hardware  (e.g., similar to the way the OS interacts directly with physical hardware , or as firmware running on physical hardware ) without utilizing the OS, although still interacting with the OS to coordinate use of physical hardware .","To allow multiple operating systems to run on information handling system  at the same time, hypervisor  virtualizes the hardware resources of physical hardware  and presents virtualized computer hardware representations to each of virtual machines -. In other words, hypervisor  may assign to each of virtual machines -, for example, one or more processors , one or more regions of memory in memory subsystem , one or more components of I\/O subsystem , etc. The virtualized hardware representation presented to each of virtual machines - may comprise a mutually exclusive, or non-overlapping, set of hardware resources per virtual machine (e.g., no hardware resources are shared between virtual machines) or may comprise an overlapping set of hardware resources per virtual machine (e.g., one or more hardware resources may be shared by two or more virtual machines).","In one embodiment, hypervisor  may assign hardware resources of physical hardware  statically (i.e., certain hardware resources are assigned to certain virtual machines, and this assignment does not vary over time). Additionally or alternatively, hypervisor  may assign hardware resources of physical hardware  dynamically (i.e., the assignment of hardware resources to virtual machines varies over time, for example, in accordance with the specific needs of the applications running on the individual virtual machines). Additionally or alternatively, hypervisor  may keep track of the hardware-resource-to-virtual-machine mapping, such that hypervisor  is able to determine the virtual machines to which any given hardware resource of physical hardware  has been assigned.","Each of virtual machines - may include a guest operating system (guest OS) -, along with any applications or other software running on guest OS -. Each guest OS - may be any OS compatible with and\/or supported by hypervisor  (even if guest OS is generally incompatible with physical hardware ). In addition, each guest OS - may be a separate instance of the same operating system or an instance of three different operating systems. For example, in one embodiment, each guest OS - may comprise a LINUX OS. As another example, guest OS  may comprise a LINUX OS, guest OS  may comprise a MICROSOFT WINDOWS OS, and guest OS  may comprise a VXWORKS OS. Although information handling system  is depicted as having three virtual machines -, any number of virtual machines may be running on information handling system  at any given time.","In operation, hypervisor  of information handling system  may virtualize the hardware resources of physical hardware  and present virtualized computer hardware representations to each of virtual machines -. Each guest OS - of virtual machines - may then begin to operate and run applications and\/or other software. While operating, each guest OS - may utilize one or more hardware resources of physical hardware  assigned to the respective virtual machine by hypervisor .","If an uncorrectable\/unrecoverable hardware error occurs in physical hardware , error detection system  may detect the error and report the error to hypervisor . In reporting such errors, error detection system  may include in the error report various information including, for example, the hardware resource from which the error originated, the type of error, the physical memory address at which the error occurred, or any other information that may be associated with the error.","In one embodiment, error detection system  may report the error to hypervisor  directly, for example, by invoking a callback routine in hypervisor , by triggering an interrupt handler in hypervisor , or by triggering an exception handler in hypervisor . In the same or alternative embodiments, error detection system  may report the error to hypervisor  indirectly by writing to volatile or non-volatile storage an error log that may be subsequently (e.g., through polling) processed by hypervisor . In the same or alternative embodiments, error detection system  may report the error to hypervisor  using the Microsoft Windows Hardware Error Architecture (WHEA).","Because hypervisor  keeps track of the hardware-resource-to-virtual-machine mapping, hypervisor  may determine whether the hardware resource associated with the error is assigned to any of virtual machines -. If hypervisor  determines that the hardware resource associated with the error is, in fact, assigned to any of virtual machines -, hypervisor  may shut down any such virtual machines. At the same time, hypervisor  may not shut down any of virtual machines - to which the hardware resource associated with the error is not assigned. Thus, virtual machines in this latter category may continue to run, and may not be affected by the hardware error.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3","FIG. 3"],"b":["200","200","210","230","255","220"]},"Information handling system  may have executing thereon one or more virtual machines  instantiated thereon and a hypervisor . Information handling system  may also include an iSCSI offload host bus adapter  configured to couple information handling system  to storage array  via network . Each virtual machine  of information handling system  may include a client  that may serve as an initiator of iSCSI commands. In addition, each hypervisor  may include a virtual function  associated with each virtual machine  executing on information handling system , described in greater detail below.","Information handling system  may have executing thereon one or more virtual machines  instantiated thereon and a hypervisor . Information handling system  network interface  configured to couple information handling system  to storage array  via network . Network interface  may include a TCP offload engine, L2 network interface card, or any other suitable components. Similar to information handling system , each virtual machine  of information handling system  may include a client  that may serve as an initiator of iSCSI commands.","Accordingly, in operation, each virtual machine  \u201csees\u201d a client  that may serve as an iSCSI initiator, independent of the underlying iSCSI implementation for the particular virtual machine . Thus, storage resources  may be allocated to individual virtual machines  (e.g., storage resource may be allocated to virtual machine , storage resource may be allocated to virtual machine , storage resource may be allocated to virtual machine , and so on.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 4","FIG. 4"],"b":["300","210","230","212","302","308","212","304","306"]},"Each virtual machine  may also include an iSCSI initiator driver  that may serve as an initiator of iSCSI commands. As depicted, iSCSI initiator driver  provides an interface between the operating system specific iSCSI architecture and the virtual iSCSI bus driver . Because a hypervisor ,  may appear to each operating system as a virtual iSCSI bus, each virtual machine  may include a virtual iSCSI bus driver  that provides a driver layer interfacing between the hypervisor ,  and the iSCSI initiator driver . The virtual iSCSI bus driver  may communicate iSCSI parameters (e.g., initiator and\/or other identifiers, connection parameters, authentication\/security information) and SCSI command information (e.g., commands and\/or data) between the virtual machine  and its associated hypervisor , .","At the hypervisor level, each hypervisor ,  may include an implementation-independent iSCSI interface layer . The implementation-independent iSCSI interface layer  provides a common application programming interface to each virtual machine  which is independent of the specific iSCSI implementation (e.g., independent of whether the iSCSI implementation is an iSCSI offload host bus adapter, a TCP offload engine, an L2 network interface card, or otherwise). As depicted in , implementation-independent iSCSI interface layer  may interface with adapter driver , which may serve as a hardware interface for iSCSI host bus adapter . Similarly, iSCSI data path module  may be a software module that provides functionality equivalent or similar to adapter driver  for software initiator implementations of iSCSI (e.g., TCP offload and\/or L2 network interface card ). The iSCSI data path module  may also interface with TCP\/IP modules  and\/or adapter drivers  and  associated with software initiator implementations.","Turning again to , in certain embodiments (e.g., where host bus adapter  supports single root-I\/O virtualization or \u201cSR-IOV\u201d), hypervisor  may assign a virtual function  (e.g., a SR-IOV virtual function) to each virtual machine  instantiated on information handling system . Accordingly, all iSCSI identification information (e.g., name, parameters, authentication\/security) may be configured for the virtual function  based on information communicated from the client . Thus, when a virtual machine  is migrated from a iSCSI offload-based information handling system (e.g., information handling system ) to a software initiator-based information handling system (e.g., information handling system ), the hypervisor  may use its iSCSI data path component  to emulate the functionality of the host bust adapter , permitting seamless migration. Such emulation may allow for seamless migration of the virtual machine  between information handling systems having different iSCSI implementations.","Using the methods and systems disclosed herein, problems associated with conventional approaches to offload in a virtualized information handling system may be improved, reduced, or eliminated.","Although the present disclosure has been described in detail, it should be understood that various changes, substitutions, and alterations can be made hereto without departing from the spirit and the scope of the disclosure as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the present embodiments and advantages thereof may be acquired by referring to the following description taken in conjunction with the accompanying drawings, in which like reference numbers indicate like features, and wherein:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
