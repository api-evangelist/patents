---
title: Interface and method for extending a target application over an instant message link of a communication network
abstract: An instant message (IM) interface configured to extend a target application over an IM link of a communication network is provided according to the invention. The IM interface includes a communication interface configured to transfer a reply IM to an originating application. The IM interface further includes a processing system configured to obtain data from the target application and provide an output form to a messaging Application Programming Interface (messaging API). The output form is provided from a set of Forms Definition Language (FDL) forms. The messaging API is substantially protocol-dependent and the set of FDL forms is protocol-independent. The processing system is further configured to generate the reply IM in an originating application protocol using the data, the output form, and one or more protocol-specific libraries of the messaging API. The reply IM is an originating application protocol-specific IM.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07310659&OS=07310659&RS=07310659
owner: Sprint Communications Company L.P.
number: 07310659
owner_city: Overland Park
owner_country: US
publication_date: 20031029
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","MICROFICHE APPENDIX","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/483,388, filed Jun. 27, 2003.","Not applicable","Not applicable","1. Field of the Invention","The invention is related to the field of communications, and in particular, to an instant message (IM) interface and method for extending a target application over an IM link.","2. Description of the Prior Art","Modern communication devices have been developed with many advanced capabilities. One example is a telephone that is capable of communicating over wires or wirelessly. Other communication devices include computers and portable computers, pagers, portable digital assistants (PDAs), etc. Such communication devices are capable of sending and receiving voice and text communications, and can transfer data wirelessly or over one or more wires.","The increasing capabilities of communication devices have resulted in an increased demand for data exchange. For example, a communication device can be used to request employee data, such as from an employee directory. A relatively instant data exchange can enhance communications, enable better decision-making, and boost productivity. Data exchange is most beneficial when the desired data is remote, and an electronic data exchange quickly and efficiently obtains the desired data.","Instant Message (IM) is a type of communication wherein a source device signals a destination device with a message and receives a response substantially in real time. For packet networks (i.e., computer networks), instant messages travel substantially instantly to the computer device of the recipient. The recipient receives the message and can generate and send a response, also in substantially real time. For switched networks, such as wireline and wireless telephone networks, an instant message can be transmitted from the source to destination using a signaling channel, also substantially in real time. IM typically transfers relatively small, simple messages, such as a text message.","A relatively new prior art development in communications technology is the use of IM for exchanging data between a communication device and a target application over a communication network. An instant message is created and formatted according to the protocol utilized by the target application. The message is transferred to the target application substantially in real time, and the target application responds with requested data and\/or a requested operation, also substantially in real time.","However, this prior art approach has drawbacks. The originating application on the communication device must create the message in a proper protocol for the target application. In order to do this, the prior art approach has been to create or modify the originating application in the protocol of the target application. Therefore, an originating application will perform transactions only with a known target application. New originating applications that are later installed on the communication device may not work with the target application and may require modification by a developer. In addition, if the user desires to communicate with new target applications, the originating application will need to be modified in an appropriate manner. An originating application on the communication device must therefore be modified to achieve the protocol of a target application. In addition, the communication device in the prior art may need to be modified for each target application.","The invention helps solve the above problems.","An instant message (IM) interface is provided according to an embodiment of the invention and is configured to extend a target application over an IM link of a communication network. The IM interface comprises a communication interface configured to transfer a reply IM to an originating application. The IM interface further comprises a processing system configured to obtain data from the target application and provide an output form to a messaging Application Programming Interface (messaging API). The output form is provided from a set of Forms Definition Language (FDL) forms. The messaging API is substantially protocol-dependent and the set of FDL forms is protocol-independent. The processing system is further configured to generate the reply IM in an originating application protocol using the data, the output form, and one or more protocol-specific libraries of the messaging API. The reply IM comprises an originating application protocol-specific IM.","A method for extending a target application over an IM link of a communication network is provided according to an embodiment of the invention. The method comprises obtaining data from the target application and providing an output form to a messaging Application Programming Interface (messaging API). The output form is provided from a set of Forms Definition Language (FDL) forms. The messaging API is substantially protocol-dependent and the set of FDL forms is protocol-independent. The method further comprises generating a reply IM in an originating application protocol using the data, the output form, and one or more protocol-specific libraries of the messaging API. The reply IM comprises an originating application protocol-specific instant message. The method further comprises transferring the reply IM to the originating application.","A method for extending a target application over an IM link of a communication network is provided according to an embodiment of the invention. The method comprises receiving an IM in a messaging Application Programming Interface (messaging API) from an originating application, with the IM requesting a target application transaction. The method further comprises obtaining data requested in the IM. The method further comprises providing an output form to the messaging API. The output form is provided from a set of Forms Definition Language (FDL) forms. The messaging API is substantially protocol-dependent and the set of FDL forms is protocol-independent. The method further comprises generating a reply IM in an originating application protocol using the data, the output form, and one or more protocol-specific libraries of the messaging API. The reply IM comprises an originating application protocol-specific instant message. The method further comprises transferring the reply IM to the originating application.","A method for extending a target application over an IM link of a communication network is provided according to an embodiment of the invention. The method comprises receiving a first IM in a messaging Application Programming Interface (messaging API) from an originating application. The first IM requests a target application transaction. The method further comprises selecting an input form in the messaging API from a set of Forms Definition Language (FDL) forms in response to the first IM. The messaging API is substantially protocol-dependent and the set of FDL forms is protocol-independent. The method further comprises generating an input request form IM in the messaging API using the input form and one or more protocol-specific libraries. The input request form IM requests and accepts input data related to the target application transaction. The method further comprises transferring the input request form IM to the originating application, receiving a second IM in the messaging API in response to the input request form IM, and obtaining data requested in the second IM. The method further comprises providing an output form to the messaging API. The output form is provided from the set of FDL forms. The method further comprises generating a reply IM in an originating application protocol using the data, the output form, and the one or more protocol-specific libraries of the messaging API. The reply IM comprises an originating application protocol-specific instant message. The method further comprises transferring the reply IM to the originating application.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 1-8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1","FIG. 2"],"b":["100","100","101","102","102","104","105","106","102","201","103"]},"Referring to , the IM interface  enables a target software application  to be extended to a computerized device, such as a communication device . The IM interface  enables the communication device  to interact with and obtain information from the target application  in a protocol-independent manner. The target application  can be accessed in order to obtain and\/or exchange information. For example, the IM interface  enables a mobile communication device to interact with and obtain information from an information server application. The IM interface  can enable communication with multiple target applications. The operation of the IM interface  will be discussed in more detail in the text accompanying .","The communication interface  is configured to conduct communications with an IM core server  and one or more target applications . The communication interface  can receive and transfer instant messages. For example, the communication interface  can receive an instant message from an originating application  and transfer a target protocol instant message to a target application . The communication interface  therefore is capable of communicating over a communication network.","The processing system  conducts operations of the IM interface . The processing system  receives instant messages through the communication interface , performs operations on the instant messages, and generates and transfers new instant messages to the communication interface  for transfer to the IM core server  or to the target application . In one embodiment, the processing system  is configured to receive the instant message in the messaging API , with the instant message requesting a target application transaction, select an output form in the messaging API  from the set of FDL forms  in response to the instant message, generate the target protocol instant message in a target application protocol using the output form and one or more protocol-specific libraries  of the messaging API , and transfer the target protocol instant message to the communication interface . The messaging API  is substantially protocol-dependent and the set of FDL forms  is protocol-independent. Due to the inclusion of the messaging API , an instant message received from the originating application  does not have to be in a target application protocol. The target protocol instant message comprises a target application protocol-specific transaction request. The communication interface  transfers the target protocol instant message to the target application . Therefore, the processing system  executes the messaging API  in order to interface with the target application  and\/or the originating application . The messaging API  can generate an instant message to the originating application  and can generate an instant message to the target application .","The processing system  can include the storage system . The storage system  can comprise any manner of storage medium. The storage system  can store the messaging API , the protocol-specific library(s) , and the set of FDL forms , for example.","An API can comprise a software routine that interfaces between two or more other processes on a computer system. The API can include calls, subroutines, data formats, and software interrupts. An API is often used so that a higher-level program, such as an application program, can make use of a lower-level services and functions of another application over network services, communications programs, telephone equipment, or program-to-program communications.","One capability of an API is the capability to convert or translate digital data from a first protocol to a second protocol. All necessary protocol conversions\/translations occur within the messaging API  according to the invention. The messaging API  receives an instant message from the originating application  (through the IM core server ) and converts\/translates it to an instant message in an appropriate protocol for the target application . In addition, the messaging API  can return a requested data to the originating application . Furthermore, the messaging API  can receive an instant message from the target application  and convert\/translate it to an instant message in an appropriate protocol for the originating application . In this manner, the IM interface  interfaces between the originating application  and the target application  in order to relay an instant message target application transaction request to the target application  and return data and\/or operational information to the originating application .","The set of FDL forms  are created using a Forms Definition Language. The Forms Definition Language is a programming language that can be used to create input forms for accepting inputs and can be used to create output forms for generating and displaying outputs. The FDL therefore can be used to perform a transaction in an organized, defined manner. An FDL form can specify data to be included in an instant message, such as request data transferred to the target application . In addition, an FDL form can specify reply data to be returned from\/by the target application .","Unlike the prior art, the set of FDL forms  according to the invention is constructed in a unique, protocol-independent Forms Definition Language. The protocol of an instant message produced by the messaging API  depends on the included protocol-specific library(s) . As a result, from the protocol-independent set of FDL forms , the messaging API  can generate a target application protocol-specific message. For example, the protocol-specific library(s)  can comprise an eXtensible Messaging and Presence Protocol (XMPP) protocol library. Through use of protocol-independent FDL forms, the underlying protocol is hidden from the originating application .","The messaging API  can select an appropriate FDL input form in order to create a GUI display that gathers information from the user, including any protocol-dependent information that is needed to generate the protocol-specific message. The set of FDL forms  in one embodiment can render graphical input and output forms, as is discussed below. Such graphical forms can be implemented in order to simulate or emulate the target application . The actual rendering of the form is left to the IM client , but a software developer installing or configuring the set of FDL forms  on the IM interface  can define the appearance and layout of the forms.","Another capability of an FDL form is the ability to specify user input\/output. An FDL input form can generate a graphical input interface display on a display tube or display screen of the communication device . In one embodiment, an FDL input form acting as a graphical input interface displays alphanumerical input entry boxes and corresponding graphical input instructions. For example, a graphical input interface can include a box for entering an employee name, and can have corresponding instructions that instruct the user as to the data to be entered into the box, the format to be used, etc. It should be understood that alternatively other graphical input methods can be employed.","An FDL output form can generate an output display. The output display can display data returned by the target application  according to a defined format. Consequently, the messaging API  can select an appropriate FDL form from among the available FDL forms when a transaction is initiated. For example, the messaging API  can select an employee lookup FDL form in order to perform an employee lookup.","The protocol-specific library(s)  comprises protocol data for one or more protocols. The protocol data is used to convert an instant message to an appropriate protocol for transmission to a particular target application . In addition, the protocol data is used to convert an instant message to an appropriate protocol for transmission to the IM core server  and the originating application . In this manner, the IM core server  can communicate with each target application, even when the target applications employ different protocols. Therefore, the protocol-specific library(s)  enable addition of new target applications without the necessity of changes to the IM core server .","One problem commonly encountered with an information exchange in the prior art is in creating instant messages that observe the protocol of the target application. Another problem is that if the protocol of the target application changes, any messaging software becomes unusable. Therefore, in order to accommodate a protocol change in the prior art, the user or software developer has to either re-write or replace the messaging software with new, protocol-correct messaging software.","Advantageously, according to the invention, the messaging API  can be easily and quickly modified if the protocol of a target application is changed, if the target application is changed, or if a new target application is added. To modify the messaging API , a protocol-dependent library(s)  can be modified or replaced. Alternatively, one or more new libraries can be added, extending the capabilities of the messaging API . The set of FDL forms , being protocol-independent, does not have to be changed.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2","b":["200","200","100","205","109","210","100","205","210","205","205","210","109","210","109","109","205","100","109"]},"The communication device  can comprise a desktop, laptop, portable, or mainframe computer, etc. Alternatively, the communication device can comprise a computerized portable communication device and\/or wireless device, such as a conventional telephone, a cellular or satellite telephone, personal digital assistant (PDA), pager, etc.","One or more originating (software) applications  can reside on the communication device  and can be accessed by a user of the communication device . In addition, the communication device  includes an IM client . The originating application  creates a target application transaction request message to be sent to the target application  as an instant message.","The originating application  is a software application that generates the target application transaction request. The originating application  can comprise a commercially available software application or a custom software application, and can be unaware of the target application  and the protocol required by the target application . This is accomplished because the messaging API  seamlessly integrates the target application  and the originating application .","The IM client  creates and transfers an instant message to the IM core server  that includes the target application transaction request message. The instant message is therefore transferred by the communication device  to the IM interface  as an instant message.","The IM client  of the communication device  can optionally include an IM icon . The IM icon  can be used to create and\/or translate a message into an instant message for transfer to the IM core server  and beyond. The IM icon  can substantially automate an IM transaction for the user.","The target application  can comprise any software application capable of being externally accessed or initiated. The target application  can provide data in a data exchange in response to the target protocol instant message. The target application  can perform an operation initiated by the target protocol instant message. The target application  can perform an operation to generate or obtain the data to be exchanged with the communication device . A target application  in one embodiment resides on an application server (such as the enterprise application messaging server), and such an application server can be in communication with or directly connected to the IM core server .","The target application  can communicate with application data  in order to generate or provide any user requested data or user requested operation. The application data  can include any information needed by or processed by the target application . The application data  can reside in any manner of data storage, such as a database, for example. The application data  can be remote from the target application  or can be a component of the target application .","The IM core server  (and the IM interface ) can reside on or can comprise a component of a communication network. The communication network can comprise a wire network or a wireless network. The communication network in one embodiment comprises an IM communication network. For example, the communication network can comprise a Public Switched Telephone Network (PSTN), a cellular telephone network, a satellite telephone network, etc. Alternatively, the communication network can comprise a packet network, such as a Local Area Network (LAN), a Wide Area Network (WAN), a Virtual Private Network (VPN), the Internet, etc. In another alternative, the communication network can comprise a hybrid network including both switched and packet network portions.","The IM interface  can be located behind a firewall for data security. Alternatively, some manner of encryption can be used in order to ensure that the exchanged data is private. For example, in one embodiment the requests and responses are encrypted with Secure Socket Layer\/Transparent LAN Service (SSL\/TLS) encryption. However, other encryption types and other security measures can be employed.","The IM interface  can be an independent component in a communication network, as shown. Alternatively, the IM interface  can comprise a component of another device, such as being part of the IM core server  or being part of the target application , for example. In one embodiment, each target application  can include one or more IM interfaces .","The messaging capability according to the invention can be added to a communication system by a developer toolkit that adds the messaging API , the protocol-specific library(s) , and the set of FDL forms  to the IM interface . The developer toolkit can further add or change the protocol-specific library(s)  of the messaging API . The developer toolkit enables a developer to rapidly and easily create, import, and\/or customize FDL forms. The developer toolkit can include a Graphical User Interface (GUI) for deploying the messaging API  into the IM interface .","The developer toolkit further enables the replacement, addition, or updating of the protocol-specific library(s) . The developer toolkit can therefore be used to modify an existing messaging API . This may be necessary where the target application  has been modified, where a new target application  has been selected, or where a new target application  has been added to the IM core server .","The developer toolkit further enables a developer to rapidly and easily write stub code for the messaging API . The stub code can perform operations such as the runtime selection of FDL forms for both the input and output processes, for example.","One example of a target application is a company employee directory software running on a company computer. A person can generate a request for an employee record from his or her communication device. In one embodiment, the person selects and executes an originating application, selects an appropriate FDL input form for an employee directory query, and enters information as dictated by the form. The input form acts as a template and guide, and can indicate input information needed in order to request various items of desired information. For example, the form can request first, middle and last names, can request an employee location or title, etc. The person can enter the requested information in a graphical or semi-graphical manner. The target application  processes the request and responds with the requested information. In this example, the target application  can respond with one or more matching employee names and corresponding information such as a telephone number, e-mail address, location\/mailing address, title, etc. The messaging API  receives the response from the target application , translates it as needed, and presents the information to the person. The display of the information can likewise include an output form, wherein the output form is filled out with the received information. The output form organizes the information into a defined pattern or layout in order to facilitate comprehension. For example, the output form can present the employee name and other information, along with legends and explanations (for example, providing a legend of \u201cfax number\u201d before a ten-digit telephone number).",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 3","b":["301","104","301","301","109","301","105","104","109","104","301","105","205","210"]},"The IM interface  can operate to provide an interfacing operation in several ways. In one embodiment, the target application  is configured to push data to the communication device . In this embodiment, the target application  transfers data to the IM interface  unprompted by the user. The IM interface  translates the message from the target application  and transfers the translated message to the communication device  (see  and the accompanying discussion).","In another interfacing embodiment, a user requests data\/operation from the target application . The IM interface  receives the request, performs a protocol translation, transmits the translated request to the target application , receives a response from the target application  in response to the request, translates the response back into the protocol of the originating application , and transfers the translated response to the communication device  and the originating application  (see  and the accompanying discussion). The messaging API  therefore interfaces between the originating application  and the target application  in both directions.","In yet another interfacing embodiment, the originating application  can send an output form to the target application  with the data\/operation request. The output form can specify the data to be included in the response to the originating application . For example, the user can select from available data options to create a data template, wherein the data template comprises the output form that includes data and formatting chosen by the user (see  and the accompanying discussion).","In yet another interfacing embodiment, the IM interface  can receive an instant message from the originating application  and can send an input form back to the originating application . The input form requests information for a transaction request to the target application . The input form can specify one or more input screens or input templates that are displayed to the user, for example. The input form is therefore used to obtain data from the user of the communication device , with the data being used to generate an instant message that requests a target application transaction (see  and the accompanying discussion).","In yet another interfacing embodiment, the IM interface  can receive an instant message from the originating application  and can send data directly back to the originating application . In this embodiment, the data is available in the IM interface  and is inserted into the reply instant message by the IM interface .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 4","b":["400","100","401","100","109","100","109","109"]},"In step , the IM interface  selects an output form from the set of FDL forms . The output form is used to format and ultimately present the requested data\/requested transaction to the communication device . The output form therefore can comprise an output template.","In step , the IM interface  generates a data IM that includes the requested data. The IM interface  performs a protocol formatting of the data IM.","In step , the IM interface  transfers the data IM to the originating application . The IM interface  therefore pushes the data to the originating application  as a result of the push from the target application . The data IM generates a data\/operation display on the communication device . The IM transaction request is now complete.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5","b":["500","100","501","100","104","213","213","210"]},"In step , the IM interface  generates a target protocol data request message in a target application protocol, using the output form and one or more protocol-specific libraries of the protocol-specific library(s) . The target protocol data request comprises a target application protocol-specific transaction request. If an output form is not received from the originating application , then the IM interface  can select an output form from the set of FDL forms .","In optional step , the target protocol instant message is encrypted for transmission. The encryption can comprise any available encryption type. In one embodiment, the encryption is Secure Socket Layer (SSL) encryption.","In step , the target protocol data request is transferred to the target application . The target protocol data request message is transmitted by the IM interface .","In step , the IM interface  receives a reply message from the target application  in response to the transferred target protocol data request message. The reply message includes a requested data or requested transaction supplied by the target application .","In step , the IM interface  generates a reply IM that comprises a communication device protocol version of the reply message from the target application . The IM interface  therefore performs a protocol conversion\/translation of the reply from the target application .","In step , the IM interface  transfers the reply IM to the originating application . The reply IM generates a data\/operation display on the communication device . The IM transaction request is now complete.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 6","FIG. 5"],"b":["213","100","205","213","100","100","100","100","100","109","109","100","109","100","109","100","100","210"]},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 7","b":["700","100","701","100","213"]},"In step , the IM interface  selects an input form in response to the instant message. The input form is used to generate a target application transaction. The input form can comprise an input template that requests input data from the user of the communication device  and subsequently formats the input data received from the user. The input form is selected from the set of FDL forms  in response to the request from the communication device .","In step , the IM interface  transfers the input form to the communication device . The input form can optionally be encrypted or protected by some manner of security measure.","In step , the IM interface  receives a second IM from the originating application , in response to the input form. The second IM requests a target application transaction, and includes data gathered in response to the input form.","In step , the IM interface  selects an output form from the set of FDL forms  in response to the instant message.","In step , the IM interface  generates a target protocol data request message in a target application protocol, using the output form and also using one or more protocol-specific libraries of the protocol-specific library(s) . The target protocol data request comprises a target application protocol-specific transaction request.","In optional step , the target protocol instant message is encrypted for transmission. The encryption can comprise any available encryption type. In one embodiment, the encryption is Secure Socket Layer (SSL) encryption.","In step , the target protocol data request is transferred to the target application . The target protocol data request is transferred by the IM interface .","In step , the IM interface  receives a reply message from the target application  in response to the transferred target protocol data request message. The first reply message includes a requested data or requested transaction supplied by the target application .","In step , the IM interface  generates a reply IM that comprises a communication device protocol version of the reply message. The IM interface  therefore performs a protocol conversion\/translation of the reply from the target application .","In step , the IM interface  transfers the reply IM to the originating application . The reply IM generates a data\/operation display on the communication device . The IM transaction request is now complete.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 8","FIG. 7"],"b":["213","100","100","106","100","100","210","213","213","100","100","100","100","109","109","100","109","100","109","100","100","210"]},"The messaging API  and the set of FDL forms  according to the invention can provide several benefits depending on the particular implementation. The originating application  can interact with the target application  in a protocol-invisible manner. The protocol of the target application  is therefore advantageously de-coupled from the originating application . Any necessary modifications to (or additions of) target applications  can be quickly and easily performed by installation of new protocol information or a new protocol library in the messaging. API . The originating application  does not have to be modified due to a protocol change in the target application  or due to a protocol change in the IM client  employed by the communication device . In addition, the FDL forms  never need to be modified.","Another advantage of the messaging API  and the set of FDL forms  according to the invention is that transmitted instant messages can be easily protected by security measures. Security can be achieved by encryption of all transmitted instant messages. Security can additionally include firewall protection that restricts target application transactions to users that are inside a corporation or institution.","Yet another advantage of the messaging API  and the set of FDL forms  according to the invention is that target applications can be extended to mobile communication devices and remote communication devices. A target application  can be thus extended without the need for installing the target application  on the communication device . Instead, the invention enables a user to communicate with a target application  and access the functionality of the target application .","Yet another advantage of the messaging API  and the set of FDL forms  according to the invention is that graphical input and output forms can be rendered and displayed to the user. These forms can request input data and present output data in a graphical, easy-to-understand format. The graphical forms can be implemented in one embodiment to simulate or emulate the target application . The graphical forms can include defined fields that guide the user through input entry and provide output in an easy to understand format. The set of FDL forms  can define a graphical screen to be displayed by the originating application  and\/or the communication device .","Yet another advantage of the messaging API  and the set of FDL forms  according to the invention is that the set of FDL forms  employs a generic Form Definition Language. An FDL form of the set of FDL forms  is therefore protocol-independent."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The same reference number represents the same element on all drawings.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 8","FIG. 7"]}]},"DETDESC":[{},{}]}
