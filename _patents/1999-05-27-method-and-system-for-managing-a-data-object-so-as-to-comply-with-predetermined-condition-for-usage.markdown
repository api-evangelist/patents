---
title: Method and system for managing a data object so as to comply with predetermined condition for usage
abstract: A method and a system for managing a data object so as to comply with predetermined conditions for usage of the data object. To control the usage of the data object, a set of control data, defining uses of the data object, which comply with the predetermined conditions, is created for the data object. The data object is concatenated with the user set of control data, encrypted and transferred to the user. When the user wants to use the data object, a special user program checks whether the usage complies with the control data. If so, the usage is enabled. Otherwise it is disabled.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08479306&OS=08479306&RS=08479306
owner: Rovi Solutions Corporation
number: 08479306
owner_city: Santa Clara
owner_country: US
publication_date: 19990527
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","DESCRIPTION OF RELATED TECHNOLOGY","SUMMARY OF THE INVENTION","DESCRIPTION OF CERTAIN EMBODIMENTS OF THE INVENTION","EXAMPLE 1","EXAMPLE 2","EXAMPLE 1 CONTINUED","EXAMPLE 2 CONTINUED"],"p":["This application is a continuation of U.S. patent application Ser. No. 09\/164,606, filed Oct. 1, 1998, which is a continuation of U.S. patent application Ser. No. 08\/594,811, filed on Jan. 31, 1996, now issued as U.S. Pat. No. 5,845,281 which in turn claimed priority to the Swedish Application no. 9500355-4, filed Feb. 1, 1995.","The present invention relates to data processing and more particularly to a method and a system for managing data objects so as to comply with predetermined conditions for usage.","Much has been written recently regarding the puzzle of universal connectivity. A typical vision of the data highway has long distance high speed data carriers inter connecting regional networks which provide telecommunications services and a wide range of interactive on-line services to consumers. Many of the pieces are already in place, others are in development or testing. In fact, even though the data highway is under construction it is currently open to limited traffic. On-line services are springing up daily and video on demand services are currently being tested.","The potential to benefit society is immense. The scope of information available to consumers will become truly global as the traditional barriers to entry for distribution of, and access to, information are lowered dramatically. This means that more diverse and specialized information will be made available just as conveniently as generic sources from major vendors used to be. The end result is that organizations and individuals will be empowered in ways heretofore only imagined.","However, a fully functioning data highway will only be as valuable as the actual services which it provides. Services envisioned for the data highway that involve the delivery of data objects (e.g. books, films, video, news, music, software, games, etc.) will be and are currently limited by the availability of such objects. Library and educational services are similarly affected. Before owners will allow their data objects to be offered they must be assured of royalty payments and protection from piracy.","Encryption is a key component of any solution to provide copy protection. But encryption alone is not enough. During transmission and storage the data objects will be protected by encryption, but as soon as anyone is given the key to decipher the content he will have unlimited control over it. Since the digital domain permits data objects to be reproduced in unlimited quantities with no loss of quality, each object will need to be protected from unlimited use and unauthorized reproduction and resale.","The protection problem must not be solved by a separate solution for each particular data format, because then the progress will indeed be slow. It is important to consider the effect of standardization on an industry. Consider how the VHS, the CD and the DAT formats, and the IBM PC compatibility standards have encouraged growth in their respective industries. However, if there is to be any type of standardization, the standard must provide universal adaptability to the needs of both data providers and data users.","The data object owner may want to have permanent secure control over how, when, where, and by whom his property is used. Furthermore, he may want to define different rules of engagement for different types of users and different types of security depending on the value of particular objects. The rules defined by him shall govern the automated operations enabled by data services and networking. The owner may also want to sell composite objects with different rules governing each constituent object. Thus, it is necessary to be able to implement variable and extensible control.","The user on his part wants to be able to search for and purchase data objects in a convenient manner. If desired, the user should be able to combine or edit purchased objects (i.e. for creating a presentation). Furthermore, the user may want to protect his children from inappropriate material. A complete solution must enable these needs as well.","What is needed is a universally adaptable system and method for managing the exchange and usage of data objects while protecting the interests of data object owners and users.","A method for enforcing payment of royalties when copying softcopy books is described in the European patent application EP 0 277 800. This method protects a formatted text stream of a structured document which includes a royalty payment element having a special tag. When the formatted text stream is inputted in the user's data processor, the text stream is searched to identify the royalty payment element and a flag is stored in the memory of the data processor. When the user for instance requests to print the document, the data processor requests authorization for this operation from a second data processor. The second data processor charges the user the amount indicated in the royalty payment element and then transmits the authorization to the first data processor.","One serious limitation of this method is that it can only be applied to structured documents. The description of the above-mentioned European patent application defines a structured document as: a document prepared in accordance with an SGML compliant type definition. In other words it can not be applied to documents which are not SGML compliant and it cannot be applied to any other types of data objects.","Furthermore, this method does not provide for variable and extensible control. Anyone can purchase a softcopy book on a CD, a floppy disc or the like, and the same royalty amount is indicated in the royalty payment element of all softcopy books of the same title.","Thus, the method described in EP 0 277 800 does not satisfy the above-mentioned requirements for universally adaptable protection of data objects.","Certain aspects of the present invention includes a method and a data processing system for managing a data object in a manner that is independent of the format and the structure thereof, so as to comply with predetermined conditions for usage control and royalty payment.","More particularly, a data object provider, e.g., the owner of a data object or his agent (broker), stores the data object in a memory device, e.g. a bulk storage device, where it is accessible by means of the data provider's data processor. The data object can consist of digital data, analog data or a combination or hybrid of analog and digital data.","A general set of control data, which is based on the predetermined conditions for usage of the data object, is created and stored in the same memory device as the data object or another memory device where it is accessible by the data provider's data processor. The predetermined conditions for usage may be defined by the data object owner, by the broker or by anyone else. They may differ, between different data objects.","The general set of control data comprises at least one or more usage control elements, which define usages of the data object which comply with the predetermined conditions. These usages may encompass for instance the kind of user, a time limit for usage, a geographical area for usage, allowed operations, such as making a hard copy of the data object or viewing it, and\/or claim to royalty payment. The general set of control data may comprise other kinds of control elements besides the usage control element. In a preferred embodiment, the general set of control data comprises a security control element which defines a security procedure which has to be carried out before usage of the data object. It also comprises an identifier, which uniquely identifies the general set of control data.","The general set of control data is concatenated with a copy of the data object. Thus, the control data does not reside in the data object, but outside it, which makes the control data independent of the format of and the kind of data object and which allows for usage control independently of the data object format.","At least the usage control element(s) and the data object are encrypted, so that the user is unable to use the data object without a user program which performs the usage control and which decrypts the data object. Alternatively, the whole set of control data and the copy of the data object may be encrypted.","A user may request authorization for usage of a data object residing at a data provider's processor via a data network or in any other appropriate way. The authorization may or may not require payment. When a request for authorization for usage is received, a user set of control data is created by the data provider's processor. The user set of control data comprises the general set of control data or a subset thereof including at least one of said usage control elements which is relevant for the actual user. It typically also includes a new identifier which uniquely identifies this set of control data. If relevant, the user set of control data also comprises an indication of the number of usages authorized. If more than one kind of usage is authorized, the number of each kind of usage may be specified. Finally, the user set of control data is concatenated with a copy of the data object, and at least the usage control elements and the copy of the data object are encrypted to create a secure data package ready for transfer to the user.","Before the data package is transferred to the user, it should be confirmed that the request for authorization for usage has been granted. The check is preferably carried out before the user set of control data is created. However, it can also be carried out in parallel with or after the creation of the user control data. In the latter case, the number of usages requested by the user is tentatively authorized and included in the user set, but if the request is refused the user set is canceled or changed.","The data package may be transferred to the user by electronic means or stored on bulk storage media and transferred to the user by mail or by any suitable transportation means.","Once the data object has been packaged in the above-described manner, it can only be accessed by a user program which has built-in usage control and means for decrypting the data package. The user program will only permit usages defined as acceptable in the control data. Moreover, if the control data comprises a security control element, the security procedure prescribed therein has to be complied with. In one embodiment, the usage control may be performed as follows. If the user decides to use a data object, the user program checks the control data to see if this action is authorized. More particularly, it checks that the number of authorized usages of this kind is one or more. If so, the action is enabled and the number of authorized usages decremented by one. Otherwise, the action is interrupted by the user program and the user may or may not be given the opportunity to purchase the right to complete the action.","After the usage, the user program repackages the data object in the same manner as it was packaged before.","When a data object is redistributed by a user or a broker, new control elements are added in the control data to reflect the relation between the old user\/broker and the new user\/broker. In this way, an audit trail for the data object may be created.","According to another aspect of the invention at least two data packages are stored on a user's data processor, which examines the usage control elements of the data packages in order to find a match. If a match is found, the user's data processor carries out an action which is specified in the user set of control data. This method can be used for selling and buying data objects.","Certain embodiments of the invention are described in this section.","General Overview",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 1","b":["1","2"]},"In the data object provider part , a data object  is created by an author. The data object  may be stored in a data base management system (DBMS) . The data object can consist of digital data, analog data or a combination or hybrid of analog and digital data. The primary difference between analog data objects and digital data objects is the means for storage, transfer and usage.","The author also determines the conditions  for the usage of the data object  by a user. The data object  and the usage conditions  are input to a data packaging program , which creates a secure data package  of the data object and of control data which are based on the input usage conditions . Once packaged in this way, the data object can only be accessed by a user program .","The data object may be packaged together with a general set of control data, which is the same for all users of the data object. This may be the case when the data object is sent to a retailer or a bulletin board, wherefrom a user may obtain it. The data object may also be packaged as a consequence of a request from a user for usage of the data object. In that case, the package may include control data which is specifically adapted to that user. This control data is called a user set of control data. It may for example comprise the number of usages purchased by the user. Typically, the user set of control data will be created on the basis of the general set of control data and include at least a subset thereof. A user set of control data need not always be adapted for a specific user. All sets of control data which are created on the basis of a general set of control data will be called a user set of control data. Thus, a set of control data can be a general set in one phase and a user set in another phase.","The above-mentioned data packaging can be carried out by the author himself by means of the data packaging program . As an alternative, the author may send his data object to a broker, who inputs the data object and the usage conditions determined by the author to the data packaging program  in order to create a secure package . The author may also sell his data object to the broker. In that case, the broker probably wants to apply his own usage conditions to the data packaging program. The author may also provide the data object in a secure package to the broker, who repackages the data object and adds further control data which is relevant to his business activities. Various combinations of the above alternatives are also conceivable.","In the user part  of the flow diagram, the secure package  is received by a user, who must use the user program  in order to unpackage the secure package  and obtain the data object in a final form  for usage. After usage, the data object is repackaged into the secure package .","The different parts of the system and the different steps of the method according to the invention will now be described in more detail.","The Data Provider's Data Processor",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 2","FIG. 2"],"b":["10","11","12","13","14","15","16","17","18","13","11","21","23","11","19","20","24","11","17"]},"The Data Packaging Program","The data packaging program  is used for creating control data for controlling the usage of a data object and for packaging the data object and the control data into a secure package.","As shown in , it comprises a program control module , a user interface module , a packaging module , a control data creation module , an encryption module , one or more format modules , and one or more security modules .","The control module  controls the execution of the other modules. The user interface module  handles interaction with the data object provider. The packaging module  packages the control data and the data object. It uses the control data creation module , the format modules , the security modules  and the encryption module  as will be described more in detail below.","The format modules  comprise program code, which is required to handle the data objects in their native format. They can fulfill functions such as data compression and data conversion. They can be implemented by any appropriate, commercially available program, such as by means of a routine from the PKWARE Inc. Data Compression Library for Windows and the Image Alchemy package from Handmade Software Incorporated, respectively. They can also be implemented by custom designed programs.","The security modules  comprise program code required to implement security, such as more sophisticated encryption than what is provided by the encryption module , authorization algorithms, access control and usage control, above and beyond the basic security inherent in the data package.","The data packaging program  can contain many different types of both format and security modules. The program control module  applies the format and security modules which are requested by the data provider.","The encryption module  may be any appropriate, commercially available module, such as \u201cFileCrypt\u201d Visual Basic subprogram found in Crescent Software's QuickPak Professional for Windows\u2014FILECRPT.BAS, or a custom designed encryption program.","The control data creation module  creates the control data for controlling the usage of the data object. An example of a control data structure will be described more in detail below.","The Control Data","The control data can be stored in a header file and a usage data file. In a preferred embodiment, the header file comprises fields to store an object identifier, which uniquely identifies the control data and\/or its associated data object, a title, a format code, and a security code. The format code may represent the format or position of fields in the usage data file. Alternatively, the format code may designate one or more format modules to be used by the data packaging program or the user program. The security code may represent the encryption method used by the encryption module  or any security module to be used by the data packaging program and the user program. The header file fields will be referred to as header elements.","The usage data file comprises at least one field for storing data which controls usage of the data object. One or more usage data fields which represent one condition for the usage of the data object will be referred to as a usage element. In a preferred embodiment, each usage element is defined by an identifier field, e.g. a serial number, a size field, which specifies the size of the usage element in bytes or in any other appropriate way, and a data field.","The header elements and the usage elements are control elements which control all operations relating to the usage of the object. The number of control elements is unlimited. The data provider may define any number of control elements to represent his predetermined conditions of usage of the data object. The only restriction is that the data packaging program  and the user program  must have compatible program code to handle all the control elements. This program code resides in the packaging module and the usage manager module, to be described below.","Control elements can contain data, script or program code which is executed by the user program  to control usage of the related data object. Script and program code can contain conditional statements and the like which are processed with the relevant object and system parameters on the user's data processor. It would also be possible to use a control element to specify a specific proprietary user program which can only be obtained from a particular broker.","It is evident that the control data structure described above is but one example. The control data structure may be defined in many different ways with different control elements. For example, the partitioning of the control data in header data and usage data is not mandatory. Furthermore, the control elements mentioned above are but examples. The control data format may be unique, e.g. different for different data providers, or defined according to a standard.","The Operation of the Data Packaging Program","The operation of a first embodiment of the data packaging program will now be described with reference to the block diagram of  and the flow diagram of .","First a data provider creates a data object and saves it to a file, step . When the data packaging program is started, step , the user interface module  prompts the data object provider to input, step , the header information consisting of e.g. an object identifier, a title of the data object, a format code specifying any format module to be used for converting the format of the data object, and a security code specifying any security module to be used for adding further security to the data object. Furthermore, the user interface module  prompts the data object provider to input usage information, e.g. his conditions for the usage of the data object. The usage information may comprise the kind of user who is authorized to use the data object, the price for different usages of the object etc. The header information and the usage information, which may be entered in the form of predetermined codes, is then passed to the control module , which calls the packaging module  and passes the information to it.","The packaging module  calls the control data creation module  which first creates a header file, then creates header data on the basis of the header information entered by the data object provider and finally stores the header data, step -. Then a usage data file is created, usage data created on the basis of the usage information entered by the data provider, and finally the usage data is stored in the usage data file, step -.","The packaging module  then applies any format and security modules ,  specified in the header file, steps -, to the data object.","Next, the packaging module  concatenates the usage data file and the data object and stores the result as a temporary file, step . The packaging module  calls the encryption module , which encrypts the temporary file, step . The level of security will depend somewhat on the quality of the encryption and key methods used.","Finally, the packaging module  concatenates the header file and the encrypted temporary file and saves the result as a single file, step . This final file is the data package which may now be distributed by file transfer over a network, or on storage media such as CDROM or diskette, or by some other means.","An example of how the data packaging program  can be used will now be described with reference to . In this example the data object provider is a computer graphics artist, who wants to distribute an image that can be used as clip art, but only in a document or file which is packaged according to the method of the invention and which has usage conditions which do not permit further cutting or pasting. The artist wants to provide a free preview of the image, but also wants to be paid on a per use basis unless the user is willing to pay a rather substantial fee for unlimited use. The artist will handle payment and usage authorization on a dial-up line to his data processor.","The artist uses some image creation application, such as Adobe's Photoshop to create his image. The artist then saves the image to file in an appropriate format for distribution, such as the Graphical Interchange Format (GIF). The artist then starts his data packaging program and enters an object identifier, a title, a format code and a security code, which in this example are \u201c123166789\u201d, \u201cimage\u201d, \u201ca\u201d, and \u201cb\u201d, respectively. In this example, the format code \u201ca\u201d indicates that no format code need be applied, and this code is selected since the GIF format is appropriate and already compressed. Furthermore, the security code \u201cb\u201d indicates that no security module need be applied and this code is selected since the security achieved by the encryption performed by means of the encryption module  is considered appropriate by the artist.","Then the artist enters his dial-up phone number, his price for a single use of the image and for unlimited use of the data object, a code for usage types approved, and for number of usages approved. For this purpose, the user interface module  may display a data entry form.","The data packaging program  creates control data on the basis of the information entered by the artist and stores the data in the header file and in the usage data file as shown in , respectively. This data constitutes a general set of control data which is not specifically adapted to a single user, but which indicates the conditions of usage determined by the artist for all future users.","Then the package program  concatenates the data object and the control data in accordance with steps - of  to achieve the secure package. No format module or security module is applied to the data object, since they are not needed according to the data in the header file.","When the secure package has been obtained, the artist sends it to a bulletin board, from where it can be retrieved by a user.","Below, another embodiment of the data packaging program  will be described with reference to . In this example, the data object consists of a video film, which is created by a film company and sent to a broker together with the predetermined conditions  for usage of the video. The broker loads the video  to the bulk storage  of his data processor. Then, he uses his data packaging program  to create a general set of control data  based on the predetermined conditions  for usage indicated by the film company. Furthermore, the address to the video in the bulk storage  is stored in an address table in the control database  or somewhere else in the memory . It could also be stored in the general set of control data . Finally, the general set of control data  is stored in the control database . It could also be stored somewhere else in the memory . After these operations, which correspond to steps - of , the data packaging program is exited.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 8","i":"a "},"Managing Object Transfer","The broker wants to transfer data objects to users and enable controlled usage in return for payment of usage fees or royalties. Managing the broker-user business relationship and negotiating the transaction between the broker and the user can both be automated, and the control data structure can provide unlimited support to these operations. The payment can be handled by transmitting credit card information, or the user can have a debit or credit account with the broker which is password activated. Preferably, payment should be confirmed before the data object is transferred to the user.","Data Packaging","When a user wants to use a data object, he contacts the broker and requests authorization for usage of the data object. When the request for authorization is received in the broker's data processor, a data program compares the usage for which authorization is requested with the usage control elements of the control data of the data object to see if it complies with the predetermined conditions for usage indicated therein. The comparison may include comparing the user type, the usage type, the number of usages, the price etc. If the requested usage complies with the predetermined conditions the authorization is granted, otherwise it is rejected.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 9"},"In response to a granted request, the broker again applies the data packaging program . The general set of control data  and the data object  are input to the program from the control database  and the bulk storage , respectively. The program creates a user set of control data  on the basis of the general set of control data  and concatenates the user set  and the data object  to create a secure data package , which may then be transferred to the user by any suitable means. A copy of the user set of control data is preferably stored in the broker's control database. This gives the broker a record with which to compare subsequent use, e.g. when a dial-up is required for usage.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 10","FIG. 8"],"i":"a. "},"The user set of control data , i.e. a set of control data which is adapted to the specific user of this example, is created in steps - of . First, the general set of control data  stored in the control database is copied to create new control data, step . Second, a new identifier, here \u201c123166790\u201d, which uniquely identifies the user set of control data, is stored in the identifier field of the new control data , step . Third, the data field of the second usage element is updated with the usage purchased, i.e. in this example with two, since two viewings of the video were purchased, step .","The thus-created user set of control data, which corresponds to the general set of control data of is shown in ","The user set of control data is stored in the control database , step . Then, the video, which is stored in the bulk storage , is copied, step . The copy of the video is concatenated with the user set of control data, step . The security code 0010 specifies that the entire data package  is to be encrypted and that the user program  must contain a key which can be applied. Accordingly, the whole data package is encrypted, step . Finally, the encrypted data package is stored on a storage media or passed to a network program, step , for further transfer to the user.",{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 11","FIG. 12","FIG. 12"],"b":["24","60","24","40"],"i":["a","b. "]},"The procedure of  can be implemented by the data packaging program of . As an alternative to the procedure of , the user set of control data can be created as in steps - and saved in a header file and in a usage data file, whereafter steps - of the data packaging program of  can be performed to create the secure package.","The above-described process for creating a user-adapted set of control data may also be used by a user who wants to redistribute a data object or by a broker who wants to distribute the data object to other brokers. Obviously, redistribution of the data object requires that redistribution is a usage approved of in the control data of the data object. If so, the user or the broker creates a user set of control data by adding new control elements and possibly changing the data fields of old control element to reflect the relation between the author and the current user\/broker and between the current user\/broker and the future user\/broker. In this way, an audit trail is created.","The User's Data Processor","The user's data processor, which is shown in , is a general or special purpose processor, preferably with network capabilities. It comprises a CPU , a memory , and a network adapter , which are interconnected by a bus . As shown in , other conventional means, such as a display , a keyboard , a printer , a sound system , a ROM , and a bulk storage device , may also be connected to the bus . The memory  stores network and telecommunications programs  and an operating system (OS) . All the above-mentioned elements are well-known to the skilled person and commercially available. For the purpose of the present invention, the memory  also stores a user program  and, preferably, a database  intended for the control data. Depending upon the current operation, a data package  can be stored in the memory , as shown, or in the bulk storage .","The User Program","The user program  controls the usage of a data object in accordance with the control data, which is included in the data package together with the data object.","As shown in , the user program  comprises a program control module , a user interface module , a usage manager module , a control data parser module , a decryption module , one or more format modules , one or more security modules , and a file transfer program .","The control module  controls the execution of the other modules. The user interface module  handles interactions with the user. The usage manager module  unpackages the secure package . It uses the control data parser module , the decryption module , the format modules , and the security modules .","The format modules  comprise program code, which is necessary to handle the data objects in their native format, such as decompression and data format procedures. The security modules  comprises program code required to implement security above the lowest level, such as access control, usage control and more sophisticated decryption than what is provided by the basic decryption module .","The user program  can contain many different types of both format and security modules. However, they should be complementary with the format and security modules used in the corresponding data packaging program. The usage manager module  applies the format and security modules which are necessary to use a data object and which are specified in its control data. If the proper format and security modules are not available for a particular data object, the usage manager module  will not permit any usage.","The decryption module  can be the above-mentioned FileCrypt Visual Basic subprogram or some other commercially available decryption program. It can also be a custom designed decryption module. The only restriction is that the decryption module used in the user program is complementary with the encryption module of the data packaging program.","The control data parser module  performs the reverse process of the control data creation module  in .","The user program  can have code which controls use of the program by password or by any other suitable method. A password may be added in a password control element during packaging of the data object. The password is transferred to the user by registered mail or in any other appropriate way. In response to the presence of the password control element in the control data structure, the user program prompts the user to input the password. The input password is compared with the password in the control data, and if they match, the user program continues, otherwise it is disabled.","The user program  can also have procedures which alter the behavior of the program (e.g. provide filters for children) according to the control data of the user object . It is important to mention that the user program  never stores the object in native format in user accessible storage and that during display of the data object the print screen key is trapped.","The file transfer program  can transfer and receive files via network to and from other data processor.","Since the data object is repackaged into the secure package after the usage, the user program should also include program code for repackaging the data object. The program code could be the same as that used in the corresponding data packaging program . It could also be a separate program which is called from the user program.","Operation of the User Program","The operation of an embodiment of the user program  will now be described with reference to the block diagram of  and the flow diagram of .","First the user receives a data package  via file transfer over a network, or on a storage media such as CD-ROM or diskette, or by any other appropriate means, step . He then stores the data package as a file on his data processor, step .","When the user wants to use the data object, he starts the user program , step . Then he requests usage of the data object, step . The request is received by the user interface module , which notifies the control module  of the usage request. The control module  calls the usage manager module  and passes the usage request.","The usage manager module  reads the format code from the data package to determine the control data format. Then it calls the decryption module  to decrypt and extract the control data from the data package. The usage manager module  applies the decryption module  incrementally to decrypt only the control data. Finally, it stores the control data in memory, step .","The usage manager module  then calls the control data parser module  to extract the data fields from the usage elements.","The usage manager module  then compares the user request for usage with the corresponding control data, steps -. If the requested usage is not permitted in the control data, the requested usage is disabled, step . However, if the requested usage is approved of in the control data, the usage manager module  applies any format and security modules ,  specified in the header data or usage data, steps -, to the data package.","Then the usage manager module  calls the decryption module , which decrypts the object data, step , whereafter the requested usage is enabled, step . In connection with the enabling of the usage, the control data may need to be updated, step . The control data may for instance comprise a data field indicating a limited number of usages. If so, this data field is decremented by one in response to the enabling of the usage. When the user has finished usage of the data object, the user program  restores the data package in the secure form by repackaging it, step . More particularly, the data object and the usage elements are reconcatenated and reencrypted. Then the header elements are added and the thus-created package is stored in the user's data processor.","A specific example of how the user program operates will now be described with reference to . The example is a continuation of Example 1 above, where an artist created an image and sent it to a bulletin board.","Assume that a user has found the image at an electronic bulletin board (BBS) and is interested in using it. He then loads the data package  containing the image to his data processor and stores it as a file in the bulk storage. The user then executes the user program  and requests to preview the image. The user program then performs steps - of the flow diagram in . The request for a preview of the image is compared with the data field of the usage element \u201ccode for usage type approved\u201d. In this example, the code \u201c9\u201d designates that previews are permitted. Thus, the requested preview is OK. Then, the user program  performs step - of . Since the format code \u201ca\u201d and the security code \u201cb\u201d of the header data indicate that neither conversion, nor decompression, nor security treatment is required, the user program only decrypts the object data. The usage manager module  then displays the preview on the user's data processor and passes control back to the user interface .","When the user is finished previewing the image, the user interface module  displays the costs for usage of the image in accordance with the price usage data of the control data (\u201cprice for single use\u201d and \u201cprice for unlimited use\u201d in ) and prompts the user to enter a purchase request. The user decides to buy unlimited use of the image, and the user interface module  inputs purchase information, such as an identification, billing, and address for that request and passes the request to the control module . The control module calls the file transfer program , which dials the artist's dial-up number as indicated in the usage data (\u201ccontrol element for artist's phone number\u201d in ) and transfers the request and purchase information to a broker program on the artist's data processor. Upon approval of the purchase, the broker program returns a file containing an update for \u201cusage type approved\u201d control elements. The update is \u201c10\u201d for the usage type approved, which in this example indicates that unlimited use by that user is permitted. The file transfer program  passes this update to the usage manager module  which updates the control data with the \u201cusage type approved\u201d code. The user interface module  then displays a confirmation message to the user.","Subsequently, the user interlace module inputs a request to copy the image to a file packaged according to this invention, on the user's machine. The usage manager module then compares the user request control data. The usage manager module examines the data filed for \u201cUsage type approved\u201d, which now is \u201c00\u201d. The usage manager module copies the image to the file.","When the user is finished with the image, the usage manager module  repackages the image as before except with updated control data. This repackaging process is exactly like that shown in , except that the header and usage data already exist, so the process starts after step  where control data is created.","Improved Security","If the data object provider wants to improve the security of a data package containing a data object, a security module  containing a sophisticated encryption algorithm, such as RSA, could be used. In that case the packaging module  calls the security module  in step  of the flow diagram of . The security module encrypts the image and passes a security algorithm code to the control data creation module , which adds a control element for the security module code, which will be detected by the user program . Then the data packaging continues with step . When the data package is sent to the user, the public key is mailed to the user by registered mail. When the user program is executed in response to a request for usage of this data object, the usage manager module will detect the security module code in the control data and call the security module. This module passes control to the user interface module , which requests the user to input the public key. If the key is correct, the user security module applies complementary decryption using that key and passes a usage approved message to the usage manager module, which enables the usage.","As another example of improved security, a security module may implement an authorization process, according to which each usage of the data object requires a dialup to the data processor of the data object provider. When the corresponding security module code is detected by the user program , the relevant security module is called. This module passes a request for authorization to the control module , which calls the file transfer program , which dial the data object provider's dial-up number, which is indicated in a usage element and transfers the request for authorization of usage. Upon a granted authorization, the data provider's data processor returns a usage approved message to the user security module, which forwards the approval to the usage control module, which enables one usage. If the user requests further usages of the data object, the authorization process is repeated. This procedure results in a permanent data object security.","A further specific example of how the user program  operates will now be described with reference to . The example is a continuation of Example 2 above, where a user purchased two viewings of a video film from a broker.","The user wants to play the video which was purchased and transferred from the broker. The user applies the user program , step , and requests to play the video, step . The user program  step , and requests to play the video, step . The user program  first examines the user set of control data , step . In this example, the user program  contains only those format and security modules for objects with format code of 0010 and with a security code of 0010. Consequently, only those types of data objects may be used. If the program encounters other codes it will not enable the usage action, step -.","Next, the user program  compares the first control element data which is 1, for the educational users only, to user information entered by the user on request of the user program. Since the user type entered by the user is the same as that indicated in the first usage element the process continues, steps -. Then the user program checks the second control element data which specifies that the number of plays purchased is 2. Consequently, the usage is enabled, step . The user program applies the decryption module with the universal key and the AVI format video is displayed on the display unit . Then, the second control element data is decremented by one, step . Finally, the video is repackaged, step . Proceeding to a state , the user program returns to its initial state to process further requests from the user.","Object control is achieved through the interaction of the data packaging program  and the usage program  with the control data. Variation of object control can be applied to a particular object by creating a control data format with control elements defining the control variation and the circumstances in which the variation is applied. Program procedures should then be added to program modules to process the control elements. For example, suppose a broker wants to allow students to print a particular article for free but require business users to pay for it. He defines control elements to represent the user types student and business and the associated costs for each. He then adds program logic to examine the user type and calculate costs accordingly. Object control is extensible in the sense that the control data format can have as many elements as there are parameters defining the rules for object control.","Implementation of Variable and Extensible Object Security","Object security is also achieved through the interaction of the data packaging program  and the user program  with the control data. Security process and encryption\/decryption algorithms can be added as program modules. Variation of object security can be applied to a particular object by creating a control data format with control elements defining the security variation and the circumstances in which the variation is applied. Program procedures should be added to program modules to process the control elements. For example, suppose a broker wants to apply minimal security to his collection of current news articles but to apply tight security to his encyclopedia and text books. He defines a control element for security type. He then adds program logic to apply the security algorithms accordingly. Object security is extensible in the sense that multiple levels of security can be applied. The level of security will of course be dependent on the encryption\/key method which is implemented in the security modules. One level of security may be to require on-line confirmation when loading a data object to the user's data processor. This can be implemented in program code in a security module. This permits the broker to check that the object has not already been loaded as well as double check all other parameters.","It is also important to have version control with time stamping between the usage program and the user's control database. Otherwise the database can be duplicated and reapplied to the user program. The user program can place a time stamp in the control database and in a hidden system file each time the control database is accessed. If the time stamps are not identical, the control database has been tampered with and all usage is disabled. Program code for handling time stamps can reside in a security module.","Handling Composite Objects","A composite object can be handled by defining a control data format with control elements defining relationships between constituent objects and by defining a parent\/child element and a related object id element. For example, suppose a broker wants to include a video and a text book in an educational package. He creates a parent object with control elements referring to the video and textbook objects. He also includes control elements in the control data for the video object and the textbook object referring to the parent object. Finally, he adds program procedures to program modules to process the control elements.","In other words, when the data object is a composite data object including at least two constituent data objects, a respective general set of control data is created for each of the constituent data object and the composite data object. In response to a request from a user, a respective user set of control data is created for each of the constituent data objects as well as for the composite data object.","Examples of various data package structures for composite objects are given in .","Another side of composite objects is when the user wants to combine data objects for some particular use. Combination is a usage action that must be permitted in each constituent data object. A new data object is created with control data linking the constituent data objects. Each constituent data object retains its original control data which continues to control its subsequent usage.","When a user requests authorization for usage of one constituent data object in a composite data object, a user set of control data is created only for that constituent data object and concatenated only with a copy of that constituent data object.","Scaleable Implementation","The flexible control data structure and modular program structure permit almost boundless extensibility with regard to implementation of the owner's requirements for usage control and royalty payment. The control data structure can include control elements for complex user types, usage types, multiple billing schemes, artistic or ownership credit requirements and others. Security modules can be included which interact with any variation of the control data structure and the control data. Security modules could require a dial up to the brokers data processor to approve loading or usage actions and to implement approval authentication mechanisms.","User Acting as a Broker","A limited or full implementation of the broker's data packaging program can be implemented on the user's machine to permit further distribution or reselling. However, only those data objects with control data permitting further distribution or reselling are enabled in that way.","Rebrokering","An author of a data object may want to allow his original broker to distribute his data object to other brokers whom will also distribute his image. He then includes a control element which enables rebrokering in the control data before distributing the data object with its associated control data to the original broker. Upon request for rebrokering, the original broker copies the general set of control data and updates the copy to create a user set of control data which will function as the general set of control data on the subsequent brokers data processor. The original broker packages the data object with the user set of control data and transfers the package to the subsequent broker. The subsequent broker then proceeds as if he were an original broker.","Automated Transaction Negotiation","This is an example of how the predetermined conditions for usage included in the control data can be used for achieving automated transaction negotiation.","Suppose some company wants to provide a computer automated stock trading. Buy and sell orders could be implemented in the form of data packages and a user program could process the data packages and execute transactions. Data packages could carry digital cash and manage payment based on conditions defined in the control data.","In this example, the buy order is created using a data packaging program according to the invention on the buyer's data processor. The sell order is created using the data packaging program on the seller's data processor. Both orders are used by the user program on the stock trader's data processor. The usages would take the form of using a sell order data package to sell stock and a buy order data package to buy stock. The rules or conditions for buying and selling stocks could be indicated in the control data of the packages. The data object consists of digital money. In this context it is important to remember that digital money is merely data which references real money or virtual money that is issued and maintained for the purpose of digital transactions.","In this example the buyer starts with a digital money data file. He uses the data packaging program to create control data, e.g. kind of stock, price, quantity, for the purchase, and he then packages the digital money data file and the control data into a secure package as described above.","The seller starts with an empty data file. This empty file is analogous to the digital money data file except it is empty. The seller creates control data, e.g. kind of stock, price, quantity, and packages the empty file and the control data into a secure package.","Both the sell order package and the buy order package are transferred to the data processor of the stock trading company, where they are received and stored in the memory. The user program of the stock trading company examines the control data of the buy and sell order packages in the same way as has been described above and looks for a match. Upon identifying matched buy and sell orders the user program executes a transaction, whereby the digital money is extracted from the buy order data package and transferred to the sell order package. Then the control data of the data packages is updated to provide an audit trail. Both packages are repackaged in the same manner as they were previously packaged and then transferred back to their authors.","The above described technique could be used for selling and buying any object as well as for automated negotiations. Payment may be carried out in other ways than by digital money.","In the general case, the data processor of the user decrypts the usage control elements of the user sets of control data and examines the usage control elements to find a match. In response to the finding of a match, the user's data processor carries out an action which is specified in the user set of control data."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIGS. 8","i":["a ","b "],"b":"8"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 12","i":"a "},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 12","i":"b "},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
