---
title: System for displaying video and method thereof
abstract: A system and method for providing playback of multiple video streams simultaneously is shown and described. A priority is assigned to individual windows of a plurality of windows used for playback of the video streams. A current window being accessed by a user is assigned a higher priority than nonactive, or background, windows. Playback characteristics, such as video resolution, transparency, and audio volume, are reduced in the playback of videos presented in nonactive windows in relation to video played in the active window. Accordingly, a user's attention may be drawn more to the active window than to the nonactive windows, while allowing the video and audio data in the nonactive windows to be provided to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08065614&OS=08065614&RS=08065614
owner: ATI Technologies, Inc.
number: 08065614
owner_city: Markham, Ontario
owner_country: CA
publication_date: 20030409
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION OF THE FIGURES"],"p":["The present disclosure relates generally to displaying video and more particularly to displaying multiple video streams simultaneously.","As the information age progresses, more and more information is available to users. In addition, technology advances have allowed data processing systems, such as personal computers, to be able to process and display more information simultaneously to a user. The increased display of information to a user can overwhelm the user, or become distracting. For example, it has been observed that when a system displays multiple windows of video simultaneously that the video associated with one or more of the windows can be distracting to the user. Therefore a method or system of displaying video to overcome these problems would be desirable.","At least one embodiment of the present invention provides for a method of altering multimedia properties based on the status of a video stream being displayed. Different video streams are played to a user on an information handling system. The method includes determining that a first video stream is to be displayed in a first window simultaneously with a second video stream to be displayed in a second window. The second window is different from the first window. A window represents a portion of a displayed desktop provided to the user through the information handling system. For example, a window can include a system or application window associated with an operating system, such as the Microsoft Windows operating system. Alternatively, a window can include a portion of a desktop or display used to present a video stream to a user. The method also includes facilitating, at a first time, a modification of the first video stream to generate a modified first video stream having a first video characteristic different than the first video stream when the second window is active. For example, as the second window is made active, such as by setting the second window on top of the first window, audio and video properties for the first video stream can be made reduced in comparison to the second video stream. An advantage of at least one embodiment of the present invention is that a user's attention can be drawn to an active window when multiple windows are displayed. Another advantage of the present invention is that video streams not being focused for the user's attention can be provided at a reduced quality, reducing processing required by the system to present all available video streams at an optimum playback quality.","Referring now to , a block diagram illustrating a computer screen displaying multiple windows of video is shown and referenced generally as display , according to one embodiment of the present invention. Display  displays a menu bar , an active video window , a first nonactive video window , a second nonactive video window , a curser , and a user interface window . In one embodiment, display  includes a screen associated with a display device, such as a computer monitor.","A system providing images to display  is capable of displaying multiple video windows, such as video windows , , and , simultaneously. Video windows are used herein to describe portions of the video window used to describe portions of a screen, such s display , used to provide video. The video windows can include application, or system windows, associated with an operating system, used to present video to a user. Alternatively, video windows can also include a portion of another video window, such as Picture-In-Picture (PIP) windows used to alternate video within a video window. Similarly, a video window can be used to represent a portion of a video window used to display closed-captioning or logos as will subsequently be discussed. Other types of video windows can be included. It should be noted that a video window includes any portion of a desktop or display, such as display , used to present a particular video streamdata to a user. Furthermore, a video window is not intended to be limited to application or system windows, such as windows associated with the Microsoft Windows operating system, and video windows ,  and  can include portions or display areas of display  used for playback of video data associated with different video streams. The multiple video windows ,  and  can be assigned an activity priority level. For example in one embodiment, priority is based on user access, wherein priority is assigned based on which video windows have been selected by the user in a particular order. The active video window  represents a window that is currently \u201cin focus\u201d, wherein the user has currently selected the active video window , such as through the use of curser , or is capable of affecting video playback, such as through active video window , such as using keyboard input. Used, herein, the term \u201cactive video window\u201d is used to describe a current highest priority video window while the term \u201cnonactive video window\u201d is used to describe a video window having a lower priority than the active video window and the use of the term \u201cnonactive\u201d may not necessarily refer to a video window having no user activity or playback activity.","Priority for each video being played can also be based on an overlay level, also known as a z-order, which describes an order in which video windows are displayed in respect to each other. A current active window, such as active video window , can represent a \u201ctop window\u201d which is capable of being displayed over other windows, such as second nonactive video window . A \u201ctop window\u201d can be assigned a top priority, greater than priorities assigned to second nonactive video window . In comparison, the second nonactive video window  can represent a video window that is currently running but does not represent the \u201ctop window\u201d. Accordingly, second nonactive video window  is assigned a lower priority than active video window . Furthermore, priorities can be assigned among the nonactive video windows, as will subsequently be discussed. It should be noted that a \u201ctop window\u201d may not necessarily be considered the active window. For example, in the illustrated embodiment, the active video window  is displayed behind a portion of the first nonactive video window. However, the movement of curser  can select and effect changes in the active window, but a separate, non-active window, can still be set as a \u201ctop window\u201d, through separate settings.","Priority for each video window can also be based on a video event. For example, a detected scene change in the first nonactive video window  can trigger a priority change in which the first nonactive video window  is assigned a higher priority, such as higher than the current active video window . The scene change can be associated with a detected change in programming, such as based on a current time and\/or electronic program guide. Alternatively, the scene change can be detected based on a change in aspect ratio. In another embodiment, a change in programming determined through received closed-captioning information is used to identify the scene change or new priority. Accordingly, the user's attention is drawn to a video window to alert the user to a change. In one embodiment, the user can be alerted to an emergency broadcast by raising the priority of a video window displaying a detected emergency bulletin alert image, emergency text in the closed-captioning information, or having an emergency alert tone transmitted in audio associated with the video window.","The user interface window  provides a user input to control characteristics associated with the video windows, such as video windows ,  and , based on the assigned priority, when video is being displayed. The characteristics can include playback quality, such as an alpha blending, or transparency, level, a volume level, color setting, brightness, contrast, tint, hue, sharpness, resolution, gamma or frame-rate. The characteristics are altered to focus the attention of the user to higher priority video windows.","In the illustrated embodiment of , user interface window  provides a transparency control  to alter alpha blending associated with the video windows ,  and , based on priority. The alpha blending, or transparency, associated with a video window indicates an amount of blending performed on the video window with another image, such as an image behind the video window, or a background color. A greater transparency assigned to a video window, the more \u201csee-through\u201d the video window becomes. Transparency control  includes an active transparency control  to alter a percentage of transparency used to display a high priority window, such as active video window . In the illustrated embodiment, the active transparency control  is set to 0 percent, indicating the active video window  is opaque. Thereby, active video window  is not transparent. or \u201csee through\u201d, drawing attention from a user.","Transparency control  also includes a nonactive transparency control  to control a percent transparency associated with nonactive video windows, such as first nonactive video window  and second nonactive video window . In the illustrated embodiment, the nonactive transparency control  is set to a higher transparency than the active transparency control , making the nonactive video windows  and  less visible than the active video window . Accordingly, while a portion of the first nonactive video window  is displayed on top of the active video window , the active video window  can still be seen through the overlapping portion of the first nonactive video window . A dependant transparency control  allows the transparency used to display first nonactive video window  and second nonactive video window  to be dynamic, based on transparency associated with the active video window . Accordingly, with dependent transparency control  set, transparencies for the nonactive video windows  and  can be set to a proportion of what active video window  is set through active transparency control . For example, if the active transparency control  is set to 50 percent, the transparencies for nonactive video windows  and  will be set to 50 percent of the 50 percent the active video window  is set to provide 25 percent transparency.","The user interface window  includes a volume control  for controlling a playback volume of audio data that is generally received in audio streams associated with video streams of the video windows , , and , based on an associated priority level. Volume control  includes an active volume control  for assigning a percentage of the maximum volume used to play back the highest priority video window, such as active video window . Volume control  also includes a nonactive control  to assign an amount of volume to be associated with nonactive video windows, such as first nonactive video window  and second nonactive video window . A dependant volume control  allows the volume assigned to the nonactive video windows  and  to be based on a current volume assigned to the highest priority video window, such as active video window . If the dependent volume control  is set, volume for audio associated with nonactive video windows  and  change to remain a proportion of volume set for the active video window . For example, if active volume control  is set to 50 percent, the volume associated with nonactive video windows  and  can be automatically set to 25 percent when the dependent volume, such as the volume of the active video window , is set to 50 percent volume. While the availability of user interface window  has been described, it should be noted that the window control settings described may be preset and not available to the user.","Furthermore, it should be appreciated that other methods of applying settings to different video windows based on priority can be employed without departing from the scope of the present invention. For example, a frame rate associated with lower priority video windows, such as nonactive video windows  and , can be reduced in comparison to higher priority video windows, such as active video window , to highlight attention to the higher priority video windows. Video effects can be applied to different video windows based on priorities assigned to the video windows. For example, a pixelate video effect can be applied to lower priority video windows. Furthermore, by reducing playback quality, such as resolution or frame rates, in lower priority video windows, nonactive video windows  and , processing required for simultaneous playback of all video windows ,  and  is reduced in comparison to playback at normal or optimal playback quality. Some video windows can be display video data associated with a video stream broadcast over a network, such as the Internet. Accordingly, a video window with a lower priority can be provided a lower quality video stream image to reduce playback quality. For example, a video stream with a data can be modified to have a lower display bandwidth can be used for playback of than the video data of a received video stream would otherwise support when the received video stream is associated with the video window having a lower priority. Furthermore, less processing intensive de-interlacing or noise removal algorithms (denoise filtering) can be applied to video windows having a lower priority than higher priority video windows.","Referring now to , a flow diagram illustrating a method of displaying multiple windows of video is shown and discussed with respect to , according to one embodiment of the present invention. At step  a determination is made that a first video data and a second video data are being displayed in a first and second window, respectively. With respect to , the first nonactive video window  can display the first video data, while the active video window  can display the second video data.","In one embodiment, it can be determined that two sets of video data are being played because a common application is responsible for initiating playback with respect to the presentation of the second video data in the active window  and the presentation of the first video data in the first nonactive window  as well as for coordinating the generation of the video screen rendered for display within their respective windows. For example, a single video card supporting multiple streams of video, such as two tuners, could be controlled by a common application having visibility to determine when multiple streams of video are being displayed in different windows in accordance with the step .","In another embodiment, the active video window  and the first nonactive video window  can be associated with independent, unrelated, applications. For example, the first active video window could be displaying a video data accessed over a first medium such as through an Internet protocol, while the second nonactive video window would be displaying a video data accessed via a TV tuner, such as through a cable box or other antenna device. In this embodiment, it would be necessary to have a system protocol set up for determining that multiple video streams are providing the video data being displayed. For example, the user interface window  could be associated with a utility that is either automatically notified, based upon a specific system protocol, or by polling active windows in a known manner, to determined that video is being displayed within windows. For example, while separate applications are used, a common software driver may be called to generate the video to be displayed. Accordingly, when particular features of the software driver are accessed, it can be determined a video is to be played. In another embodiment, the user could indicate which windows are actually displaying video. For example, a separate application can provide a list of currently running applications. The user can select applications that are providing multimedia data. The separate application can then provide commands to a common audio or video driver to modify settings for audio or video data provided from the selected applications.","It should be noted that separate video windows of the multiple video windows, such as video windows  and , typically represent displayed playback of video data associated with separate video streams. The separate video windows can include operating system or application windows used to provide playback of a related video streamdata, or different portions of a screen or display desktop used to provide playback. It should be noted that a single system used to provide video playback can include separate display devices used to provide video to a user. The displayed desktop can be provided on each display screen or span over multiple display screens. The separate video windows can also span over multiple display screens or be displayed exclusively on a single screen of a plurality of available display screens. Furthermore, separate video windows can be displayed on separate display screens.","As multiple windows presenting video simultaneously can be distracting to a user, altering characteristics associated with higher or lower priority video windows can reduce distraction and highlight a user's attention to the higher priority video windows. At step , a determination is made whether the first window or the second window is a higher priority window. When the first window is the higher priority window, flow proceeds to step . When the second window has higher priority, the flow proceeds to step . In one embodiment, a current active video window is considered to have the highest priority. A window currently being controlled by a user, such as through a mouse curser or keyboard input, can be identified as the current active window. Similarly, a window more recently accessed by the user can be assigned a higher priority. Alternatively, the user can assign a specific priority to each window, regardless of the user's activity.","At step , the data stream associated with the nonactive window, determined to be the first window, is modified to have a characteristic that is different than that of its original video signal. For example, if the first window were associated with a video data to display a first television program in a normal mode, having regular picture and sound as would typically be preset by a user to their preference, the regular picture would be modified to have a different characteristic. For example, the original video data could be modified to display, on the first nonactive window , the video data having a different transparency level, brightness level, color level, frame rate, or other characteristics that would generally provide an image having a reduced quality level. By providing an image with a reduced quality level in accordance with the disclosure herein, it is possible to provide an overall experience for the user that is less distracting. For example, by modifying the image to be displayed in the first window to have a more transparent image, the images displayed in the first nonactive window will be less distracting to the user relative to the images displayed in the second, active window. Furthermore, in the case of multiple display screens, properties of display screens associated with a nonactive window can be altered to draw attention to a display screen used for playback of the active window. For example, a brightness of the display screen used to provide the nonactive window can be reduced.","Likewise, when the first window is the higher priority window, and the flow proceeds to step , the video data to be displayed at the second nonactive window is modified such that it will have a different characteristic. For example, the video data can also be displayed having a greater level of transparency than the active window.","By modifying a characteristic of the video data to be displayed in the nonactive window, while maintaining regular settings for a higher priority window, a less distracting experience can be provided to the user while still providing sufficient information to the user to monitor multiple video streams simultaneously. Furthermore, by providing images associated with lower priority video windows at a reduced quality, processing required to provide playback of video windows associated with the lower priority video windows can be reduced.","Referring now to , a block diagram illustrating a system for providing multiple video windows simultaneously is shown and referenced generally as system , according to one embodiment of the present disclosure. System  includes a first tuner\/decoder , a second tuner\/decoder , a video engine , a display interface , a display device , an audio controller , an audio output , a video application , an operating system , and an application programming interface (API) . Video engine  processes video streams  and , associated with tuners\/decoders  and , and generates video and audio data to be provided to display device  and audio output , respectively. Video associated with the video streams  and  is provided through windows generated through video application . The API  controls multimedia parameters related to video and audio data associated with the different video streams  and  based on priorities assigned to the windows of the video streams.","In one embodiment, video application  is an application of operating system  capable of providing an environment for playback of a plurality of video streams. In one embodiment, a user selects video to be displayed from a variety of multimedia sources, such as tuners  and , multimedia files, a DVD player, or a network address. Video application  can instruct video engine  to receive and process some of the selected video streams, such as video streams  and , to be presented. The video application  can assign separate video windows for different video streams to be presented. The API  identifies and assigns priority-based settings for each of the video windows generated by the video application . In one embodiment, the video application  and the API  represent programs of instructions stored in a computer readable medium, or memory, such as within a hard drive, a disk drive, or random access memory (RAM).","The API  provides an interface between the video application  and operating system . API  can provide commands to operating system  to support functions of video application , such as in the generation of separate video windows. In one embodiment, a first video window is generated to support video data from the first video stream  and a second video window is generated to support the video data from the second video stream . Sets of video window properties  and  store properties controlling playback within the first and second video windows, respectively. The video window properties  and  can include video properties, such as transparency, brightness or quality, and audio properties, such as volume, for controlling playback of video and audio associated with the first window and the second window. The API  is capable of altering the video window properties  and  based on a priority assigned to each of the video windows.","API  includes a priority-based characteristics database  that includes settings to be applied to the video data of video streams  and  based on a priority associated with a display window used to present each of the video streams  and . API  includes a video window monitor  to identify a plurality of windows, such as the first video window and the second video window, used to present particular video streams. A window priority monitor  is used to identify priority levels associated with individual video windows of the plurality of video windows identified by the video window monitor . For example in one embodiment, window priority monitor  monitors user activity in video application  to identify video windows that represent active video windows and nonactive video windows, as previously discussed. Window priority monitor  may monitor user input according to a user interface  to identify a top priority or an active video window that is currently being controlled by a user.","A video window controller  generates active settings , to apply characteristics associated with an active video window, based on priority-based characteristics database , to a video data associated with the current active window, as identified by window priority monitor . In the illustrated embodiment, the second video window is identified as the active video window. Accordingly, the active settings  are applied to the second video window properties . Video driver  represents a program used to translate commands to be provided to video engine  or display interface  by the operating system  or the video application . Video driver  can provide data  to the video engine  and\/or the first and second tuner\/decoder  and  that includes commands and data to display graphics  and properties for handling the video streams  and .","Graphics  can include images and application windows associated with operating system . Alternatively, graphics  can include program or channel logos or closed-captioning to be displayed with the video windows. Audio driver  represents an interface for providing commands for communicating with audio controller . Video settings associated with the second video window properties  can be provided to video engine , through video driver , to control rendering or playback of the second video stream . Alternatively, Video settings associated with video window properties  can be provided to the tuners\/decoders  and  to alter characteristics of their respective video streams, so that when rendered by the video engine , the associated video data will be modified based upon the altered characteristic. Similarly, audio settings associated with the playback of video in the second video window, are provided from second video window properties  to audio driver . Audio driver  uses the altered properties for providing audio stream data, associated with the second video stream , as a part of audio data  provided to the audio controller . While video driver  video engine  are shown and discussed for processing video settings, it should be appreciated that other methods of processing video settings can be used without departing from the scope of the present invention. In one embodiment, a software application is used to process the video settings associated with displaying the video streams  and .","Video window controller  also generates nonactive settings , to apply characteristics identified by the priority-based characteristics database  for nonactive windows to effect a video data, as identified by video window monitor  associated with windows that are given a nonactive priority, as identified by window priority monitor . In one embodiment video controller  provides the nonactive settings  to video engine  for use with generation of the video streams associated with the nonactive windows according to the nonactive window characteristic. Alternatively, video settings associated with video window properties , the non-active settings, can be provided to the tuners\/decoders  and  to alter characteristics of their respective video streams, so that when rendered by the video engine , the associated video data will be modified based upon the altered characteristic. In the illustrated embodiment, the first video window, used to present the first video data, is identified as a nonactive video window. Accordingly, the video controller  provides the nonactive settings  to the first video window properties . Video properties can be provided to the video engine  or one of the tuners\/decoders  , through the video driver , to affect playback of the first video stream . Similarly, audio properties associated with the first video window properties are provided to the audio driver  to affect properties of audio stream data, associated with the first video stream , provided, as a part of audio data , to the audio controller . Similarly, properties associated with video window properties  and  can be provided to operating system .","Video engine  receives and processes video streams from multimedia sources identified through the video application . For example, in the illustrated embodiment, video engine  processes video streams  and  from first tuner  and second tuner , respectively. Video engine  can perform separate processing based on the types of video streams received. For example, in one embodiment, tuners  and  include analog television tuners. Accordingly, video engine  can include demodulators to generate video and audio data related to the video streams  and . Alternatively, tuners  and  can include decoders such as digital video tuners or transport stream demultiplexors to identify separate video streams of a multimedia transport stream. Accordingly, video engine  can include digital video processing components, such as Motion Pictures Experts Group (MPEG) processing components, to generate video and audio data from the video streams  and . It should be appreciated that other forms of video streams can also be processed without departing from the scope of the present invention. Furthermore, while video engine  is illustrated as a single component, video engine  can include several components for processing separate video streams.","Video engine  processes video data associated with the video streams  and  based on properties received from video driver . To this end, video data associated with video streams  and  can be modified by making changes to characteristics within the video streams  and , or by instructing the video engine  to process the video data to implement different characteristics. The video engine  can provide additional data, such as processed audio stream data, associated with the video streams  and , to the API  for further processing. The video engine  can also receive other video data to be processed through video data . The video engine  processes received video data, including video data  and video streams  and , to generate display data . Video engine  provides the display data to display interface .","Display interface  provides video to be displayed, such as display data , to the display device  according to a particular display format or protocol, such as video graphics adapter (VGA) format. Video provided by display interface  can be viewed on a video screen that includes multiple windows of video, such as the first video window and the second video window used to simultaneously present the first video stream  and the second video stream , such as display  (). It should be appreciated that multiple display interfaces may be used, in addition to display interface . Different display screens can be provided for displaying multiple windows of video. Separate video windows can be provided for display on separate display interfaces or video windows can be displayed spanning multiple display screens. Audio driver  provides audio data, such as audio data , associated with video streams  and  and operating system  to audio output . Audio output  can represent a speaker system, an audio receiver, or other audio playback device.","Referring now to , a block diagram illustrating a computer screen similar to the display  of  is shown and referenced generally as display , according to one embodiment of the present invention. Display  includes a menu bar , an active video window , a primary nonactive video window , an auxiliary nonactive video window , an auxiliary nonactive video window , a graphics window , a curser , and a user interface window . Similar in operation to display , display  is used to simultaneously provide multiple windows of video, such as video windows , ,  and .","In one embodiment, video windows are assigned particular multimedia properties based on a level of priority associated with the video windows. The varying levels of priority can be assigned to the different video windows , ,  and . For example a window that is currently being accessed by a user, such as active video window , can be assigned a highest priority. In comparison, nonactive video windows ,  and  can be assigned a lower priority than the active video window . In the illustrated embodiment, different levels of priority may also be assigned to the nonactive video windows ,  and . For example, a primary nonactive video window  can be assigned a higher priority than auxiliary nonactive video windows  and . In one embodiment, the user is able to select a priority to be assigned to a video window, such as primary nonactive video window . For example, the user may use curser  to access a priority menu , such as through a clicking of a mouse. Alternatively, the user may access the priority menu through menu bar . Furthermore, the priority associated with a video window may be determined dynamically depending upon when a window was last accessed by a user, such as through curser  or through keyboard input. For example, the time when the user last made a change affecting a particular video window can determine the level of priority assigned to the video window. It will further be appreciated that a non-video window, such as a graphics window , whereby the video windows can be blended with the graphics window as well.","User interface window  is used to assign characteristics to the video windows , ,  and  based on the priority associated with the video windows. For example, a transparency control  can adjust a level of transparency associated with different video windows. An active transparency control  can be used to determine an amount of alpha blending, or transparency, associated with the video window having the top priority, such as active video window . In the illustrated embodiment, active transparency control  is set to 0% transparency indicating the active video window  is opaque. A primary nonactive transparency control  is used to identify an amount of transparency associated with the primary nonactive video window . Similarly, an auxiliary nonactive transparency control  is used to control the amount of transparency associated with the auxiliary nonactive video windows  and , having a priority lower than the primary nonactive video window .","In the illustrated embodiment, the primary nonactive transparency control  is set at a higher transparency level than the auxiliary nonactive transparency control , indicating the auxiliary nonactive video windows  and  are less visible than the primary nonactive video window , which in turn is less visible than the active video window . Accordingly, the active video window  can draw a user's attention greater than the nonactive video windows ,  and . In the illustrated embodiment, dependant transparency controls  and  are used to dynamically adjust the transparency associated with the nonactive video windows , and  based on the transparency setting of the active video window . Alternatively, the adjustment of the transparency associated with the primary nonactive video window  and the auxiliary nonactive video windows  and  can be made relative to a maximum transparency setting. It should be appreciated that further varying levels of priority, in addition to the active, primary nonactive and auxiliary nonactive, can be assigned to video windows. Similarly, the properties of the video windows affected by priority, such as transparency control, can be based dynamically on the level of priority of the video windows.","User interface window  can also include a volume control . The volume control  can be used to adjust a level of volume associated with the video windows , ,  and , based on the level of priority assigned to the video windows. An active volume control  is used to adjust the volume associated with the active video window . In the illustrated embodiment, the active volume control  is set to 100%, indicating that volume associated with the active video window  will be played back at the highest available volume. A primary nonactive volume control  is used to adjust volume associated with the primary nonactive video window . Similarly, the auxiliary nonactive volume control  is used to adjust the level of volume associated with the auxiliary nonactive video windows  and .","Dependant volume controls  and  can be used to allow the volumes associated with the primary nonactive video window  and auxiliary nonactive video windows  and  to be made relative to the current setting of the active video window , such as through active volume controls . For example, if the volume associated with the active video window  is reduced, the volumes associated with the primary nonactive video window  and the auxiliary nonactive video windows  and  are automatically lowered to ensure the volume associated with the active video window  is higher. It should be appreciated that other methods of providing settings to different video windows, such as video windows , ,  and , may be used without departing from the scope of the present invention. Furthermore, the settings associated with the different video windows may be preset to fixed values. Other characteristics may also be used, such as converting a video stream associated with a particular window to black and white, to highlight a user's attention to the active video window  or the primary nonactive video window  other than illustrated herein without departing from the spirit and scope of the present invention.","Referring now to , a block diagram illustrating a system for displaying multiple video windows is shown and generally referenced as system , according to at least one embodiment of the present invention. System  operates similar to system  of . Differences between system  and system  are highlighted with respect to the addition of a third video stream  provided by an alternate video source , video engine , API , and video application .","Video application  operates similar to video application  of . In addition to supporting simultaneous playback of video streams  and , video application  supports playback of a third video stream  from the alternate video source . In one embodiment, the alternate video source  represents video streamed from a network source, such as through the Internet. It should be appreciated that other video sources can also be used in place of or in addition to the video sources illustrated in , such as tuners ,  and alternate video source .","API  operates similar to API  of . API  supports video windows for presenting the video streams ,  and . For example, a first video window (not shown) is used to support playback of the first video stream , a second video window (not shown) is used to support playback of the second video stream  and a third video window (not shown) is used to support playback of the third video stream . API  includes properties for each of the video windows. A set of first video window properties  track properties for the first video window, a set of second video window properties  track properties for the second video window and a set of third video window properties  track properties for the third video window. API  further includes a video window controller  to alter the sets of properties ,  and  based on priorities assigned to each of the video windows.","The video controller  operates similar to video controller  of  and generates active settings , primary nonactive settings , and auxiliary nonactive settings , based video windows associated with particular video stream, as identified through video window monitor , the priority associated with a particular window, as identified through window priority monitor , and characteristics associated with a particular priority, as identified through priority-based characteristics database . In the illustrated embodiment, the window priority monitor  identifies the video window associated with the first video stream  as having the highest, or top, priority. For example, the first video window, used to display the first video stream, may be the last video window accessed or controlled by the user. Accordingly, the video controller  provides active settings , to the first video window properties . The first video window properties  can be applied to video data to be displayed on a first video window by providing the properties  to one or both of the video engine  and the first tuner\/decoder  through video driver , to apply the characteristics associated with the highest priority video window to the video data. Audio properties of the first video window properties  can be provided to the audio driver  to control playback of audio data associated with the first video stream .","Similarly to the highest priority video window, the window priority monitor  identifies the second video window, used to display the second video stream , as being a next highest priority video window, such as primary nonactive video window  of . The second video window is considered to have a higher priority than the third video window, but a lower priority than the first video window. As previously discussed, the priority of the second video window can be determined based on a time the second video window was accessed in comparison to other video window, such as the first video window and the second video window. In an alternate embodiment, the user can set the priority of the second video window. Furthermore, in another embodiment, the priority of the second video window is determined based on the source of the second video window. For example, a particular source, such as the second tuner , can always be assigned a higher priority than another source, such as the alternate video source . Accordingly, the video controller  provides the primary nonactive settings  to the second video window properties . The video window properties  can be applied to video data to be displayed on a second video window by providing the properties  to one or both of the video engine  and the second tuner\/decoder  through video driver , to apply the characteristics associated with the next priority video window to the video data. Audio properties of the second video window properties can be provided to audio driver  to control playback of audio data associated with the second video stream .","In addition, the window priority monitor  identifies the third video window, used to display the third video stream , as having a lowest priority, in comparison to the first video window and the second video window. In one embodiment, the third video window is considered an auxiliary nonactive video window, such as auxiliary nonactive video window  of . Accordingly, video controller  provides the auxiliary nonactive settings  to the third video window properties . The third video window properties  can be applied to video data to be displayed on a third video window by providing the properties  to one or both of the video engine  and a tuner\/decoder that provides the third video stream , through video driver , to apply the characteristics associated with the next priority video window to the first video stream . Audio data of the third video window properties  can be provided to the audio driver  to control properties associated with playback of audio data associated with the third video stream . It should be appreciated that other methods of applying characteristics to video windows based on priority may be used without departing from the spirit or scope of the present invention.","Video engine processes each of the received video streams ,  and  based on properties provided by the video stream and\/or the video driver , such as with video data . Video data  can also include other video to be displayed, such as graphics . In one embodiment, alternate video source  is a part of video engine . In one embodiment, the video engine  further provides data, such as audio data, associated with the video streams ,  and , to the API . While the video engine  is illustrated as a single component, it should be appreciated that the video engine  can include separate components for processing the video streams , and , as well as video data . Video engine  generates display data  to present the video streams  and  as well as video windows associated with the video application  to the display interface . Similarly, the audio driver  provides the audio data associated with the video streams ,  and  as well as operating system  to audio controller . It should be appreciated that other component not illustrated can be included as a part of system  without departing from the scope of the present invention.","Referring now to , a block diagram illustrating a video window displaying multiple forms of video images is shown and generally referenced as video window , according to at least one embodiment of the present invention. The video window  is primarily used to display active video . The video window  further includes a PIP video window  used to display a nonactive video . Furthermore, the video window  can be used to display closed-captioning  and a channel logo  associated with the active video .","As previously discussed, video windows can be used to refer to portions of video windows used to display alternate video. For example, the video window  is primarily used to display the active video . However, an additional video window, PIP video window , can be provided on top of the video window  to display alternate video, such as nonactive video . In one embodiment, the nonactive video  includes video that is assigned a lower priority than the active video . The priority determined for the videos  and  can be determined based on user access or selections. For example, a user can select the nonactive video  to be displayed in the PIP video window  while the active video  is to be displayed primarily on the video window  through system settings, such as through a remote control. Alternatively, the user may make use of keyboard controls or a mouse curser (not shown) to indicate which of the videos  or  are to be assigned higher priority. In accordance with the present invention, properties associated with the nonactive video , such as transparency and volume, can be altered to reduce distraction to the user from the active video . For example, while the nonactive video  is to be displayed on top of the active video , the transparency of the nonactive video  can be set to allow the user to see the active video  through the nonactive video .","Closed-captioning  includes closed-captioning text decoded from a transmission stream associated with the active video . Similarly, a channel logo  can be displayed to indicate the current channel associated with a carrier of the active video . The channel logo  can be provided by the user to identify the channel or carrier of the active video . Alternatively, the channel logo  can be provided by the carrier of active video . Similarly to closed-captioning , the channel logo  is displayed on top of the active video . In one embodiment, closed-captioning  and the channel logo  are considered additional video windows to be displayed on top of the active video .","In accordance with the present invention, properties associated with displaying the channel logo  and\/or the closed-captioning  are altered to reduce distraction to the user. For example, an alpha blending, or transparency, associated with blending the closed-captioning  and the channel logo  with the active video  is altered to ensure the active video  is visible through the closed-captioning  and the channel logo . It should be appreciated that priority associated with the closed-captioning  or the channel logo  can be altered to affect display properties. For example, a detection of a particular text, such as the word \u201calert\u201d, can be used to increase priority associated with closed-captioning . Accordingly, the visibility of closed-captioning  can be increased to alert the user of the detected text. Furthermore, the channel logo  can be made more visible when a change in channel, programming, or the image of the channel logo  is altered. Similarly, properties associated with the nonactive video  can be altered to draw the users attention to the PIP video window  when activity, such as a scene change, in the nonactive video  is detected.","The systems described herein may be part of an information handling system. The term \u201cinformation handling system\u201d refers to any system that is capable of processing information or transferring information from one source to another. An information handling system may be a single device, such as a computer, a personal digital assistant (PDA), a hand held computing device, a cable set top box, an internet capable device, such as a cellular phone, and the like. Alternatively, an information handling system may refer to a collection of such devices. It should be appreciated that the system described herein has the advantage of displaying multiple windows of video simultaneously while reducing the distraction of the user's attention generated by nonactive video windows.","In the preceding detailed description of the embodiments, reference has been made to the accompanying drawings which for a part thereof, and in which is shown by way of illustration specific embodiments in which the disclosure may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the disclosure, and it is to be understood that other embodiments may be utilized and logical, mechanical and electrical changes may be made without departing from the spirit or scope of the present disclosure. To avoid detail not necessary to enable those skilled in the art to practice the disclosure, the description may omit certain information known to those skilled in the art. Furthermore, many other varied embodiments that incorporate the teaching of the disclosure may be easily constructed by those skilled in the art. According, the present disclosure is not intended to be limited to the specific form set forth herein, but on the contrary, it is intended to cover such alternatives, modifications, and equivalents, as can be reasonably included within the spirit and scope of the disclosure. The preceding detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present disclosure is defined only by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Specific embodiments of the present disclosure are shown and described in the drawings presented herein. Various advantages, features and characteristics of the present disclosure, as well as methods, operations and functions of related elements of structure, and accommodation of parts and economies of manufacture, will become apparent upon consideration of the following description and claims with reference to the accompanying drawings, all of which form a part of this specification, and wherein:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
