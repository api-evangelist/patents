---
title: Method and apparatus for adaptive local image quantification verification
abstract: A method and apparatus are disclosed for testing the accuracy of digital images generated by a computer graphics program executed on a computer graphics system. A test program is utilized to compare test images with a set of reference images. Adaptive local image quantification verification aims at an image comparison that allows specified color value and spatial shifts. The color value for each pixel of a specified portion of the test image is compared to the average color value of an offset array of pixels in a reference image. A test image region may be unacceptably different from a reference image, if for any pixel of the test image region an offset reference image array is not found that has an array size, absolute color value difference, and spatial shift less than specified maximums.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06961468&OS=06961468&RS=06961468
owner: Sun Microsystems, Inc.
number: 06961468
owner_city: Santa Clara
owner_country: US
publication_date: 20020329
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF SEVERAL EMBODIMENTS"],"p":["1. Field of the Invention","This invention relates generally to the field of computer software and computer program testing. More specifically, it relates to verification of graphics images produced by a computer graphics program.","2. Description of the Related Art","Early graphics systems were limited to two-dimensional (2D) graphics and acted as simple translators or interfaces to a display device. Modem graphics systems, however, support three-dimensional (3D) graphics with textures and many special effects such as anti-aliasing, texture mapping, advanced shading, fogging, alpha-blending, and specular highlighting. Modem computer displays have many more pixels, greater color depth, and are able to display more complex images with higher refresh rates than earlier models. Consequently, modern graphics systems incorporate graphics processors with a great deal of complexity, and the color value of one pixel can be the accumulated result of many calculations involving several models and mathematical approximations.","Software testing has experienced a similar transformation. As the complexity of the calculations and the layering of effects increased, the amount of time required to test and evaluate graphics software also increased and has become a significant bottleneck in the software development timeline. The evaluation of new graphics software may involve thousands of tests and require the judgment and experience of a senior test engineer to sort through the many possible reasons for a test failure. There may be more than one bug in a software program, and the cumulative result may cause a pixel in an output image to be different from a pixel in a reference image. In addition, there are many combinations and versions of hardware and software that may be used to generate a test image. It is not practical to generate a set of reference images for each of these combinations.","One method of testing graphics software is known as sample point testing. In this method the expected values of each pixel in a reference image generated by a specific hardware\/software configuration is hardcoded in a test program. Each pixel of a test image is evaluated versus the hardcoded data in the test program. A difference image is formed by subtracting the value of a test image pixel from the value of the corresponding reference image pixel. Corresponding pixels are pixels located at the same x and y coordinates in both the test image and the reference image. Consequently, the test program user is easily overwhelmed, since the test evaluation output (the difference image) is as complex as the test image. In addition, the test program must be updated for any equipment or software modifications and each reference image requires a new test program. Maintaining and updating the test programs is both time consuming and error prone.","Other types of test programs are described in U.S. Pat. No. 6,226,406, issued on May 1, 2001, entitled \u201cMethod and Apparatus for Hybrid Sampling Image Verification\u201d by Teh-Ming Hsieh.","A more efficient, faster, automated method of testing images generated on various combinations of computer graphics software and hardware using a limited set of reference images is needed. It would be desirable for the method to accept insignificant rendering differences, and to provide a simple \u201cpass or fail\u201d decision or a simple quantifiable measurement of the image comparison.","The problems outlined above may, in some embodiments, be solved in part by limiting the number of reference images used for comparison in evaluating the accuracy of test images, by using a test program that renders a \u201cpass or fail\u201d decision for a test image, and\/or by relaxing the requirement that test image color values exactly match the color values in a reference image. Instead, test image color values that are within a user specified percentage of the average color value of a corresponding array of pixels in the reference image may be acceptable. In addition, the specified percentage can be tailored to fit the accuracy required for a given portion (or region) of the test image, or the rendering of a given object. In other embodiments, a test image may be deemed acceptable if there is an acceptable shift in corresponding pixel locations. This standard accepts a rendering process that shifts, enlarges, or shrinks an object within user specified limits. In still other embodiments, a user may define regions of interest with specific maximum differences for each region. This allows a user to specify the accuracy of certain regions of the test image as more critical than others and to focus a region on a particular object or group of objects with a narrow range of color values.","In some embodiments, the reference image may be an image generated by a given computer graphics program executing on a given computer graphics system. In another embodiment, the reference image may be generated by calculating the color values of each pixel, i.e. equations describing a given set of transformations and lighting processes may be applied to a given set of objects composing the image to determine the color value of each pixel. In still another embodiment, the reference image may be created by a combination of these two methods.","One embodiment of a test program identified herein as global image quantification verification may incorporate user-defined regions of interest with specific error tolerances for each region, and may generate one or more measurements of error or image difference for each region of the test image. Each region of the test image may be divided into sub-regions and an average color value may be calculated for each test image sub-region and the corresponding sub-region in the reference image. The absolute differences between the averages for the corresponding sub-regions in the test and reference images are calculated. A test image region may be unacceptably different from a reference image if a normalized sum of the absolute differences exceeds a user specified maximum difference. This method effectively blurs both the test image and the reference image.","Another embodiment of a test program for determining the accuracy of digital test images is identified herein as regional image quantification verification. This test program may incorporate user-defined regions of interest with specific error tolerances for each region and an image comparison that accepts minor color value and spatial shifts. Each region of the test image and reference image may be divided into sub-regions. The average color value for each sub-region of the test image may be compared to the average color value of the corresponding reference image sub-region and also to nearby reference image sub-regions. A test image region may be unacceptably different from a reference image if for any sub-region of the test image region, a reference image sub-region can not be found that has an average color value difference and spatial shift less than user specified maximums.","Still another embodiment of a test program for determining the accuracy of digital test images is identified herein as local image quantification verification. This test program may incorporate user-defined regions of interest with specific error tolerances for each region and may incorporate an image comparison that allows color value differences. Each pixel of a specified region of a test image may be compared to the corresponding pixel of a reference image, or to an average color value for a corresponding array of pixels in a reference image. If the color value of a test image pixel is within a specified difference from the color value of the corresponding reference image pixel, the test image pixel passes. If not, a larger array of pixels in the reference image is selected and the test is repeated. This sequence ends whenever the test image pixel passes, or when a specified maximum size array of reference image pixels is exceeded. A test image region may be unacceptably different from a reference image if for any pixel of the test image region, there is no corresponding reference image pixel or pixel array that has an array size or absolute color value difference less than or equal to user specified maximums. This method effectively blurs the reference image in progressive stages.","Yet still another embodiment of a test program for determining the accuracy of digital test images is identified herein as adaptive local image quantification verification. This test program may incorporate user-defined regions of interest with specific error tolerances for each region and may incorporate an image comparison that allows color value differences and spatial shifts. In addition to the process described for local image quantification verification, each pixel of a specified region of the test image may also be compared to the average color value of a corresponding, but possibly offset array of pixels in a reference image. A test image region may be unacceptably different from a reference image if for any pixel of the test image region, a reference image array can not be found that has an array size, absolute color value difference, and spatial shift less than user specified maximums.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the present invention as defined by the appended claims. Note, the headings are for organizational purposes only and are not meant to be used to limit or interpret the description or claims. Furthermore, note that the word \u201cmay\u201d is used throughout this application in a permissive sense (i.e., having the potential to, being able to), not a mandatory sense (i.e., must).\u201d The term \u201cinclude\u201d, and derivations thereof, mean \u201cincluding, but not limited to.\u201d The term \u201cconnected\u201d means \u201cdirectly or indirectly connected\u201d, and the term \u201ccoupled\u201d means \u201cdirectly or indirectly connected\u201d.","FIG. \u2014Computer System",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["80","80"]},"As shown, the computer system  includes a system unit  and a video monitor or display device  coupled to the system unit . The display device  may be any of various types of display monitors or devices (e.g., a CRT, LCD, or gas-plasma display). Various input devices may be connected to the computer system, including a keyboard  and\/or a mouse , or other input device (e.g., a trackball, digitizer, tablet, six-degree of freedom input device, head tracker, eye tracker, data glove, or body sensors). Application software may be executed by the computer system  to display graphical objects on display device  or to perform image quantification verification tests.","FIG. \u2014Computer System Block Diagram",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 1"],"b":["80","102","104","104","106","104"]},"Host CPU  may include one or more processors of varying types, e.g., microprocessors, multi-processors and CPUs. The main memory  may include any combination of different types of memory subsystems, including random access memories, (e.g., static random access memories or \u201cSRAMs,\u201d synchronous dynamic random access memories or \u201cSDRAMs,\u201d and Rambus dynamic random access memories or \u201cRDRAM,\u201d among others) and mass storage devices. The system bus or host bus  may include one or more communication or host computer buses (for communication between host processors, CPUs, and memory subsystems) as well as specialized subsystem buses.","A graphics system  is coupled to the high-speed memory bus . The graphics system  may be coupled to the bus  by, for example, a crossbar switch or other bus connectivity logic. It is assumed that various other peripheral devices, or other buses, may be connected to the high-speed memory bus . It is noted that the graphics system may be coupled to one or more of the buses in computer system  and\/or may be coupled to various types of buses. In addition, the graphics system may be coupled to a communication port and thereby directly receive graphics data from an external source, e.g., the Internet or a network. As shown in the figure, one or more display devices  may be connected to the graphics system  included in the computer system .","Host CPU  may transfer information to and from the graphics system  according to a programmed input\/output (I\/O) protocol over host bus . Alternately, graphics system  may access the main memory  according to a direct memory access (DMA) protocol or through intelligent bus mastering.","A graphics application program conforming to an application programming interface (API) such as OpenGL\u00ae or Java 3D\u2122 may execute on host CPU  and generate commands and data that define a geometric primitive (graphics data) such as a polygon for output on display device . Host CPU  may transfer this graphics data to the main memory subsystem . Thereafter, the host CPU  may operate to transfer the graphics data to the graphics system  over the host bus . In another embodiment, the graphics system  may read in geometry data arrays over the host bus  using DMA access cycles. In yet another embodiment, the graphics system  may be coupled to the main memory  through a direct port, such as the Advanced Graphics Port (AGP) promulgated by Intel Corporation.","The graphics system may receive graphics data from any of various sources, including the host CPU  and\/or the main memory , other memory, or from an external source such as a network, e.g., the Internet, or from a broadcast medium, e.g., television, or from other sources.","Note while graphics system  is depicted as part of computer system , graphics system  may also be configured as a stand-alone device (e.g., with its own built-in display). Graphics system  may also be configured as a single chip device or as part of a system-on-a-chip or a multi-chip module. Additionally, in some embodiments, certain elements of the illustrated graphics system  may be implemented in software.","FIG. \u2014Local Image Quantification Verification","Local image quantification verification is a self-adaptive image comparison test program. In one embodiment, the user defines one or more regions of the test image to be individually compared to a reference image and restricts the comparison to those pixels that are within the specified region or regions. A region of the test image may also be specified as the combination of two or more disjoint regions. This allows the test comparison to focus on one object, a small group of objects, a set of common objects, or a region with some common characteristic, such as a sky color. By repeating the comparison for several different portions of the test image, a set of Pass\/Fail results can be independently determined for different objects or regions.","The value of a test image pixel T(x,y) is first compared to the value of the corresponding reference image pixel R(x,y). Corresponding pixels are pixels located at the same x and y coordinates in image space, one each from the test image and the reference image. If the difference between the corresponding pixels is greater than a user specified limit (or maximum difference), the average value of an array of reference image pixels centered on the pixel R(x,y) is compared to the value of the test image pixel. In other embodiments, the array of reference image pixels may not be centered on the pixel R(x,y), but instead be offset and located near the pixel R(x,y) and may or may not include the pixel R(x,y). These methods effectively blur the reference image to identify an acceptable match.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 3","b":"300"},"The reference image array size may be controlled by an index parameter k=0, 1, 2, 3, . . . N and initially may be set equal to zero . The selected array of reference image pixels is (2k+1) by (2k+1). This selects one of the set of pixel arrays {1\u00d71, 3\u00d73, 5\u00d75, 7\u00d77, . . . , maximum size array} . In some embodiments, the reference image array may be a rectangular array of pixels, a circular array of pixels, or a specified grouping of pixels. The reference image pixel array is selected so that it is centered on the pixel that corresponds to the position of the test image pixel . The average value of the reference image array is calculated  and compared to the value of the test image pixel . If the absolute difference is greater than the specified limit, and the array size is less than the maximum array , then k is increased by one  and the comparison is repeated for k=k+1  through . If the absolute difference is greater than the specified limit, and the array size is equal to the maximum array  the test is terminated and the comparison is labeled a failure . If the absolute difference is less than the specified limit, the test pixel passes and the test program checks for untested pixels . If there is an untested pixel, a comparison is initiated . The array index parameter is re-set to zero  and the comparison process is repeated  through . If all pixels in the specified region of the test image have successfully passed the comparison test, the comparison is labeled a pass .","In some embodiments, the pass\/fail test result generated by the test program is output to a printer, a display, or is stored in a memory. In other embodiments, the test program may be configured to test all pixels even if some pixels fail the comparison test. This may be of special interest in cases where only a few pixels had failed by a narrow margin. The percent differences in values for all pixels may be stored and statistics calculated to characterize the distribution of results within the test image. The output information may be expanded beyond a pass\/fail criteria to a more detailed description of the pixels that failed or passed and the margin of failure individually or as a group. The output information may include one or more of the mean and variance of all absolute differences, a mean and variance of all acceptable absolute differences, a mean and variance of all unacceptable absolute differences, a maximum absolute difference, a minimum absolute difference and a range of absolute differences. This would give the user information on acceptable modifications of test parameter criteria that would enable the test image region to pass. In one embodiment, output information may include a histogram of differences, absolute differences, or % differences.","As used herein, the terms \u201carray of pixels, array size, pixel array, and array\u201d refer to one or more pixels, e.g., an array of pixels may include one pixel or may include a plurality of pixels. Where an array of pixels includes a single pixel, the average value of the array of pixels is the value of the single pixel.","As used herein, an average value of an array of pixels includes un-weighted averages or weighted averages. In some embodiments, the user may input a specific weighting function to be used to calculate weighting coefficients for each pixel position in the pixel array. Other weighting functions are possible and contemplated including functions with a radial dependence from a central pixel in an array, such as a conic function or a Gaussian function, and may include functions with both positively and negatively weighted regions.","As used herein, a \u201cvalue\u201d or a \u201ccolor value\u201d of a pixel may include any of various attribute values or other values of a pixel, including one or more of: color values (e.g., red, green, and\/or blue; or hue, saturation, and\/or intensity), gray scale value, or other values that may be used to form an image.","FIG. \u2014Adaptive Local Image Quantification Verification","Adaptive local image quantification verification is also a self-adaptive image comparison test program. In one embodiment, the user defines one or more regions (or portions) of the test image to be individually compared to a reference image and restricts the comparison to those pixels that are within the specified region or regions. A region of the test image may also be specified as the combination of two or more disjoint regions. This allows the test comparison to focus on one object, a small group of objects, a set of common objects, or a region with some common characteristic, such as a sky color. By repeating the comparison for several different regions of the test image, a set of Pass\/Fail results can be independently determined for different objects or regions.","The value of a test image pixel T(x,y) is first compared to the value of the corresponding reference image pixel R(x,y). (A pixel in the test image and a pixel in the reference image are said to correspond if they are located at the same x and y coordinates in image space.) If the difference between the values of the corresponding pixels is greater than a user specified limit, the average value of an array of reference image pixels centered on the pixel R(x,y) is compared to the value of the test image pixel T(x,y). If the value difference is still too large, the average value of an offset (shifted) reference image pixel array is compared to the value of the test image pixel. This effectively blurs the reference image to identify an acceptable match, and may allow an object (or objects) to have a small shift in position or size as compared to the same object in the reference image. In some embodiments, the magnitude of an acceptable value difference and pixel offset may be specified by the user.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4","b":"400"},"In some embodiments, the reference image array size may be controlled by an index parameter k=0, 1, 2, 3, . . . N and initially may be set equal to zero . The selected array of reference image pixels is (2k+1) by (2k+1). This selects one of the set of pixel arrays {1\u00d71, 3\u00d73, 5\u00d75, 7\u00d77, . . . , maximum array size} . In other embodiments, the reference image array may be a rectangular array of pixels, a circular array of pixels, or a specified grouping of pixels. The reference image pixel array is selected so that it is centered on the reference image pixel that corresponds to the position of the test image pixel . The average value of the reference image array is calculated  and compared to the value of the test image pixel . If the absolute difference is greater than the specified limit, and the array size is less than the maximum array , then k is increased by one  and the comparison is repeated for k=k+1  through . If the absolute difference is greater than the specified limit, and the array size is equal to the maximum array  then an offset array test is performed to check for a shift in object position or size . If the offset array test also fails, the test is terminated and the comparison is labeled a failure . The offset array test is discussed in detail in the description of . If the absolute difference is less than the specified limit, the test pixel passes and the test program checks for untested pixels . If there remains an untested pixel, a next pixel is selected for comparison . The array index parameter is re-set to zero  and the comparison process is repeated  through . If all pixels in the specified portion (or region) of the test image have successfully passed the comparison test, the comparison is labeled a pass .","In one embodiment, the pass\/fail test result generated by the test program is output to a printer, a display, or is stored in a memory. In other embodiments, the test program may be configured to test all pixels even if some pixels fail the comparison test. This may be of special interest in cases where only a few pixels had failed by a narrow margin. The percent differences in color values for all pixels may be stored and statistics calculated to characterize the distribution of results within the test image. The output information may be expanded beyond a pass\/fail criterion to a more detailed description of the pixels that failed or passed and the margin of failure individually or as a group. The output information may include one or more of the mean and variance of all absolute differences, a mean and variance of all acceptable absolute differences, a mean and variance of all unacceptable absolute differences, a maximum absolute difference, a minimum absolute difference, a range of absolute differences, and a histogram of differences, absolute differences, or % differences. This would give the user information on acceptable modifications of test parameter criteria that would enable the test image region to pass.","FIG. \u2014Offset Array Test",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 5","b":"500"},"The reference image offset array size is controlled by the index parameter k=1, 2, 3, . . . N. The selected array of reference image pixels is (2k+1) by (2k+1). This selects one of the set of pixel arrays {3\u00d73, 5\u00d75, 7\u00d77, . . . maximum array size} . The offset reference image pixel array is selected so that it is centered on the pixel P that is offset from the pixel that corresponds to the position of the test image pixel . The average value of the offset reference image array is calculated  and compared to the value of the test image pixel . If the absolute difference is greater than the specified limit and the offset array size is less than the maximum array , then k is increased by one  and the comparison is repeated for k=k+1  through . If the absolute difference is greater than the specified limit and the offset array size is equal to the maximum offset array , then the test image pixel fails the offset array test . If the absolute difference is less than the specified limit, the test pixel passes the offset array test .","In other embodiments, the offset array test may be centered reference image pixels other than P. The test may use a different algorithm that searches for an offset reference image array that has an average value within a specified limit of the value of the test image pixel and is positioned within a specified distance from the reference image pixel that corresponds to the position of the test image pixel.","FIG. \u2014Global Image Quantification Verification","Another set of embodiments of a test program involves blurring both the test image and the reference image. Global image quantification verification incorporates user-defined regions of interest with a specified error tolerance for each region. The user may specify certain regions as more important than others and focus a region on a particular object or group of objects. Global image quantification verification aims at a higher-level image comparison by generating one measurement of error or image difference for an entire region of the test image. Each region of the test image and the reference image is divided into sub-regions and an average value is calculated for each test image sub-region and the corresponding sub-region in the reference image. The differences between the averages for corresponding sub-regions in the test and reference images are calculated. A test image region may be unacceptably different from a reference image if a normalized sum of the absolute differences exceeds a user specified maximum error.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":"600"},"The test program calculates the difference between the average of the values of all pixels in a sub-region of T(i) and the average of the values of all pixels in a corresponding sub-region of R(i) . The test program then calculates the sum of the absolute differences for all sub-regions in T(i) and also calculates the sum of the average values for all sub-regions in R(i) . A normalized error(i) for region T(i) is calculated, e.g., by dividing the sum of the absolute differences for all sub-regions in T(i) by the sum of the average values for all sub-regions in R(i) . The normalized error(i) for region T(i) is then compared with the specified maximum error(i) . The test image region T(i) passes if error(i) is less than the specified maximum error(i) , and fails if error(i) is more than the specified maximum error(i) . If multiple regions have been specified, the test program checks for untested regions , and initiates, if needed, a new error calculation for another region . When all specified regions have been tested, the test program generates test results for each tested region .","In some embodiments, the test result generated may be a simple pass or fail output to any of various devices including a display, a printer, or storage medium. In other embodiments, generating a test result may include calculating and reporting statistics on the comparison that may allow the user to better interpret why the test image failed or to alter the test criteria. Test results for a test image region, may include one or more of a mean and variance of all absolute differences between respective averages for corresponding sub-regions in the test image region and the reference image region, a mean and variance of all absolute differences less than a specified threshold, a mean and variance of all absolute differences greater than a specified threshold, a list of the sub-region differences that exceeded the specified maximum error, a maximum absolute difference, a minimum absolute difference, a range of absolute differences, and a histogram of the sub-region differences. In still other embodiments, the test program may store the differences calculated for each sub-region and the statistics for all sub-regions within a test image region.","FIG. \u2014Regional Image Quantification Verification","Another set of embodiments of a test program involves blurring both the test image and the reference image and also allows for objects in the test image to be shifted in position or size relative to the same object in the reference image. Regional image quantification verification therefore aims at an image comparison that accepts minor pixel value differences and spatial shifts. One embodiment of the test program incorporates user-defined regions of interest with specified error tolerances for each region. This allows the user to specify certain regions as more important than others and to focus a region on a particular object or group of objects. Each region of the test image and reference image may be divided into sub-regions. The average value for each sub-region of the test image is compared to the average value of the corresponding reference image sub-region and also to nearby reference image sub-regions. A test image region may be unacceptably different from a corresponding reference image region, if for any one sub-region of the test image region, a reference image sub-region can not be found that has an average value difference and spatial shift less than user specified maximums.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7","b":"700"},"The test program calculates the difference between the average of the values of all pixels in a sub-region of T(i) and the average of the values of all pixels in a corresponding sub-region of R(i) . The test program compares the absolute difference with the specified maximum difference . The test image sub-region passes if the absolute difference is less than the maximum difference and if there are sub-regions of T(i) that remain untested, a new sub-region is tested . If the absolute difference is greater than the maximum difference, the test program searches the reference image for a shifted sub-region that has an absolute spatial shift less than the specified maximum shift and an absolute difference less than the maximum difference . As used herein, a spatial shift is the distance in image space between the center of the shifted reference image sub-region and the center of the reference image sub-region that corresponds in x and y position in image space to the x and y position of the center of the test image sub-region. If a shifted sub-region of the reference image that meets these criteria is found, the test image sub-region passes, and if there are sub-regions of T(i) that remain untested, a new sub-region is then tested . In some embodiments, if a reference image sub-region that meets these criteria is not found the test image sub-region fails and consequently, the test image region T(i) fails . In other embodiments, all test image sub-regions are evaluated and the differences and shifts are stored for analysis and included in the test results for each region. If multiple regions have been specified, the test program checks for untested regions . If there are any untested regions remaining, a new region T(i+1) is selected  and the testing continues for the new region \u2013. When all regions have been tested, the test program generates test results for each tested region .","In some embodiments, the test result generated may be a simple pass or fail and may be output to various devices including a display, a printer, or storage medium. In other embodiments, generating a test result may include calculating and reporting statistics on the comparison that may allow the user to better interpret why the test image failed or to alter the test criteria. Test results for a test image region, may include one or more of a mean and variance of all absolute differences between respective averages for corresponding sub-regions in the test image region and the reference image region, a mean and variance of all absolute differences less than a specified difference, a mean and variance of all absolute differences greater than a specified difference, a list of the sub-regions with differences that exceeded the specified maximum difference, a maximum absolute difference and shift, a minimum absolute difference and shift, a range of absolute differences and shifts, a histogram of differences, and a histogram of shifts. In still other embodiments, the test program may store the differences and shifts determined for each sub-region and the statistics for all sub-regions within a test image region.","Although the embodiments above have been described in considerable detail, other embodiments are possible and contemplated. Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications. Note the headings used herein are for organizational purposes only and are not meant to limit the description provided herein or the claims attached hereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing, as well as other objects, features, and advantages of this invention may be more completely understood by reference to the following detailed description when read together with the accompanying drawings in which:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
