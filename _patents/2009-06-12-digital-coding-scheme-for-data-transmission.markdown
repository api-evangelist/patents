---
title: Digital coding scheme for data transmission
abstract: Provided is a system and method of digitally encoding and decoding digital data during the transmission process using a combination of Direct Sequence Spread Spectrum (DSSS) and turbo coding. A DSSS de-spreading process is used in place of the outer decoder functional block of a turbo decoder, which removes the need for a dedicated outer ECC code. Removal of the dedicated outer ECC code allows for an increase in the actual data rate transmitted through the channel (compared with a system which uses a discrete DSSS stage after Turbo coding or some other ECC code) because the number of bits to be transmitted for a given data rate has been reduced.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08295326&OS=08295326&RS=08295326
owner: University of South Florida
number: 08295326
owner_city: Tampa
owner_country: US
publication_date: 20090612
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","STATEMENT OF GOVERNMENT INTEREST","FIELD OF INVENTION","BACKGROUND","SUMMARY OF INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","Example Implementation"],"p":["This application claims priority to U.S. Provisional Patent Application Ser. No. 61\/060,967, filed Jun. 12, 2008.","This invention was made with Government support under Grant No. DASG60-00-C-0089 awarded by the Army Research Office and Grant No. 2500 00 4100 awarded by United States Special Operations Command (SOCOM). The Government has certain rights in the invention.","This invention relates generally to communication and, more specifically, to digital data transmission in a wireless communication system.","Digital data transmission over cables, fibers, radio, or acoustic links suffers from interference by various sources of noise. This decreases the signal-to-noise ratio (SNR) available at the receiver, which, in turn, can lead to errors in decoding the received data.","Coding schemes (error checking and correction (ECC)) are used to improve the probability that each bit of received data will be decoded correctly. However, the penalty for improved bit error rates (BER) is a reduction in the effective transmitted data rate due to the additional bits that must be transmitted with the data to correct the errors. For example, if eight bits need to be transmitted and four bits must be added to ensure that the eight bits are decoded correctly, the data rate is reduced by 50%.","In very poor SNR environments, the tradeoff between BER and the actual data rate is especially challenging. The underwater acoustic communications channel is typically a very poor SNR environment. One way of improving the actual data rate for a given SNR is to decrease the overhead required to maintain a given BER.","Direct sequence spread spectrum (DSSS) and turbo coding are both widely used in radio and acoustic communications. The function of DSSS is to spread data over a larger bandwidth, allowing the data to be recombined at the receiver and the noise power to be reduced (i.e. an improved SNR). Turbo coding (or any other forward error correction scheme) is then applied to the decoded DSSS signal in an attempt to minimize the BER.","One approach to turbo coding uses serially concatenated codes. Serially concatenated turbo codes were invented in the mid-1990's and are now taken to be the gold standard for forward error correction in very noisy environments. They are widely used in satellite communications and in cell phone communications. In this approach, each of the two decoders uses a slightly different algorithm to decode the noisy data stream, then the decoders exchange data and repeat the decoding process on the data block already processed by the other decoder. Over the course of numerous iterations of swapping and decoding, the best possible BER for the given SNR is achieved.","Currently, when DSSS and turbo coding are both used in a particular application, the two technologies are treated as two completely separate functions: the DSSS functional block processes the data in isolation, and then sends it to the turbo coding block, where iterative decoding is performed. Both technologies are described below in further detail.","DSSS","DSSS is well-known technology. Raymond L. Pickholtz, et al., Theory Of Spread-Spectrum Communications\u2014A Tutorial, IEEE Trans Communications, Vol. COM-30, No. 5, p. 855-884 (May 1982); Harold P. E. Stern & Samy A. Mahmoud, Communication Systems Analysis and Design, Pearson Prentice Hall, NJ (2004). The purpose of DSSS is to spread the information contained in a signal over a wider bandwidth, then to de-spread it in a way that reduces the noise power relative to the signal power. This causes an effective increase in the SNR at the receiver, thereby decreasing the signal's susceptibility to interference from other signal sources or random noise. The spreading factor (N) is the increase in bandwidth resulting from the spreading operation; for example, a spreading factor of seven would increase the bandwidth by a factor of seven.","The standard method of spreading the signal is to create a pseudo-random binary code sequence (known as a pseudo random number or PRN) which is combined with the binary data to be transmitted. The PRN sequence is a multiple of the data block size. For example, if a spreading factor of seven were used, then the PRN would be seven times the size of the data block being transmitted. A number of algorithms can be used to create the PRN. The \u2018best\u2019 PRN is one that has the optimal combination of low autocorrelation and low cross-correlation with other codes of the same family. The autocorrelation property requires that if the PRN is correlated with any bit-shifted version of itself, the autocorrelation output will be significantly lower for any non-zero bit shift than for a bit shift of zero. This property allows the receiver to synchronize with the received PRN as reliably as possible. The cross-correlation property requires that the cross-correlation between any two codes in the PRN code family, for any bit shift, is much lower than the autocorrelation of each code with a bit shift of zero. This causes transmissions spread by other codes in the same PRN family to appear as random (uncorrelated) noise, maximizing the signal to noise ratio (SNR) of the decoded binary data. This allows simultaneous use of the same channel by several transmit\/receive pairs using the same PRN family with minimal interference.","To create the output signal from the PRN sequence and the data block, each bit in the data block is exclusive-or'd (XOR'd) with bits in the PRN sequence. The number of bits used is defined by the spreading factor. If a spreading factor of seven is used, each data bit is XOR'd with seven PRN bits. The resulting data stream is pseudo-random, and has a bandwidth that is wider than the data stream. This transmission bandwidth is the data bandwidth multiplied by the spreading factor. The effect is that the original data stream is replaced with a pseudo-random data stream of higher bandwidth.","To decode the DSSS, the received binary data stream is synchronized with the original PRN sequence and the XOR operation repeated. By the nature of the XOR operation, the result (if no noise were present between the transmitter and receiver) would be the reproduction of the original data stream, but with each bit repeated N times (where N is the spreading factor). In a noisy environment, the received bit stream will not match the transmitted stream (i.e the spread data stream). After dispreading, rather than getting N bits of the same value (the value of the data bit), some of those N bits will have the wrong value, and a mechanism is required to decide the value of the original data bit. The usual mechanism is to take the average of the decoded bits (e.g. for a spreading factor of seven, the average value of the seven bits XOR'd from the received data stream is obtained), threshold the average (to get a result of 1 or 0), and use this as the best estimate of the original data bit.","It should be noted that the de-spreading mechanism is not considered to be part of the ECC used to protect the integrity of the data stream during DSSS transmission. Typically, a completely different ECC layer is applied to the data stream that emerges from the DSSS de-spreading process. In recent years, various forms of trellis and turbo coding have been used for this.","Turbo Coding","ECCs are used to detect and correct errors introduced when binary digital data is stored or transmitted. The simplest such code is the familiar parity bit used in serial data transmission and digital data storage. A single parity bit is capable of detecting that data corruption has occurred, but cannot correct it. To allow error detection and correction, more bits must be added to each byte of the data stream, creating an overhead that increases the bandwidth of that data stream. The higher the overhead, the larger the number of ECC bits there are per data byte and the better the data is protected. The ratio of overhead to data bits is extremely important, as many data operations are bandwidth-limited. Data transmission or reception by wired or wireless means are always bandwidth limited. The more bandwidth used by the ECC, the less there is available for data. Therefore, the efficiency of the ECC is very important\u2014better data protection at a lower ECC overhead. Data integrity is usually measured as the BER, allowing performance comparison between different coding schemes.","The essence of turbo coding is to combine two relatively weak ECCs to provide much better ECC performance than previous ECC codes for a given overhead. The two codes are designed to be complementary, so that the overall coding scheme is much better at detecting and correcting errors than either code is on its own. The improvement in coding performance is highly non-linear. Christian B. Schlegel & Lance C. Perez, , IEEE Press, NJ, Ch. 12 (2004).","Two implementations of turbo codes are generally used: parallel concatenated and serially concatenated. The first implementations of turbo codes were parallel-concatenated codes, and the term turbo code is usually used to refer to parallel concatenation. However, the principles of the serial- and parallel-concatenated codes are very similar, and the term \u2018turbo code\u2019 is used herein to refer to both. Serially concatenated codes are more relevant to this discussion, and only serially concatenated codes will be described in detail.","Turbo Coding: Coding","A block diagram of Turbo coder , located on the transmitter side, is illustrated in . The data stream to be transmitted is divided into blocks (e.g. 4,096 bits). The block is processed by outer ECC coder , which transforms incoming uncoded words in the data block  to coded words in data block , also known as symbols, (which will be longer than the uncoded words of data block ). The uncoded word of data block  can consist of any number of bits; the number of bits added during the coding operation will depend on the ECC code used. At the end of this outer coding operation, the data block will have expanded as additional ECC bits are added to the data bits.","After coding, the data is interleaved by interleaver . That is, each bit in the encoded data block maps to an arbitrary (randomized) location in interleaved data block . The effect of this process is to spread the data uniformly through interleaved data block , maximizing the distance between bits that formed part of the same ECC code word during the coding process. This minimizes the effect of multiple bit errors on the data integrity, as multiple random errors are much less likely to disrupt any single code word. Multiple errors are likely to cause multiple single bit errors in number of code words, rather than causing multiple errors in a single code word (which might so corrupt the word as to make the original data unrecoverable). The same random interleaving scheme is used for all incoming data blocks. The interleaver design is a critical part of the turbo coding scheme design.","Interleaved encoded data block  is now processed by inner ECC coder . This process adds some coding overhead bits to interleaved encoded data block , further expanding the encoded data block.","At this point, interleaved encoded data block  is transmitted through channel .","Note that the turbo coding process is completely deterministic and computationally undemanding.","Turbo Coding: Decoding","A block diagram of Turbo decoder , located on the receiver side, is shown in . Decoding serially concatenated turbo codes starts by passing received data block  through inner decoder . Received data block  comprises the same number of bits as interleaved encoded data block  that emerged from inner coder  during turbo coding. Generally, some noise will have corrupted the data stream.","Inner decoder  does not produce a \u2018best estimate\u2019 binary data stream; instead, it produces a likelihood ratio (LHR) for each bit it decodes. LHRs are commonly used in processes that must represent probabilities that are to be combined in some fashion. The LHR represents the probability that the bit is a \u20181\u2019 to the probability that the bit is a \u20180\u2019. If a data bit is definitely a \u20181\u2019, then the LHR will be positive infinity. If the data bit is definitely a \u20180\u2019, then the LHR will be negative infinity. An LHR of \u20181\u2019 indicates that the data bit value is equally likely to be \u20181\u2019 or \u20180\u2019.","The LHR is determined by the decoding process. If no errors have occurred, the decoding process will produce a very high negative or positive LHR (indicating that the value of the decoded bit is known with high confidence). If multiple errors have occurred, then very the LHR values will be close to \u20181\u2019. These LHRs will be the same for all bits of a decoded word, as the Inner Decoder on its own cannot determine which of the bits in the word are more or less reliable.","LHR block  emerging from inner decoder  is then de-interleaved (by interleaver ) using the reverse of the randomized interleave mapping used during the coding process. The effect of this is to spread the LHRs through the data block, so that the LHRs are no longer next to the LHRs from the same word decoded in inner decoder .","At this point, de-interleaved LHR block  is of the same size, and in the same bit order, as encoded bit block  that emerged from outer coder  during the coding process. De-interleaved LHR block  is passed to outer decoder , which performs a probabilistic decode of data block  using the LHRs. The output from outer decoder  is a block of LHRs , indicating the confidence with which each bit value in the decoded word can be assigned. Again, the LHRs for a given code word will all show the same confidence level for each bit in the word.","The power of turbo coding stems from the next step, which is to interleave (at interleaver ) LHR block  produced by outer decoder , and to feed it back into inner decoder  as a priori probabilities. Inner decoder  uses a Bayesian mechanism to combine the prior probabilities produced by outer decoder  during the decoding process, and again produces an output, which is an interleaved sequence of LHRs. This interleaved LHR block is de-interleaved (by de-interleaver ), and introduced into outer decoder , which uses a Bayesian mechanism to perform a probabilistic decoding of the data block.","This passing of the LHR blocks between inner decoder  and outer decoder  continues until the LHRs produced at outer decoder  tend towards positive or negative infinity (indicating high confidence in the decoded bit values), or until the LHRs stagnate (no improvement in LHRs at the Outer Decoder on successive iterations) (decided at decision block ). At this point, the decoding process is complete, and the LHRs are converted (in conversion block ) to binary bit values.","During the iteration process, the LHRs emerging from the inner decoder  and outer decoder  are modified to remove the prior knowledge (i.e. the LHR values that were fed into the decoder), so that only the new knowledge (in the form of modified LHR values) is fed to the decoder.","As shown in , it is evident that the inner code should use feedback. Schlegel & Perez, Ch. 11. That is, the code word output for a given data word will depend on the previous code word output. The outer code can be any ECC, although convolutional codes are most efficient.","The turbo decoding process is non-deterministic, i.e. the number of iterations to produce a decoded bit block will vary with the amount of noise introduced during transmission. The implementation of turbo codes in software is complex compared to earlier coding schemes.","Turbo codes may be seen as trading simplicity of computational implementation for better performance. In many applications, the requirement for extra computing power at the decoder is justified by the improved BER.","Modulation","Digital data can be transmitted either as raw signal levels (e.g. +5V corresponding to a \u20181\u2019, 0V to a \u20180\u2019), or used to modulate some other waveform. Modulation serves two main purposes: it moves the data from baseband to the desired frequency for transmission and it can be used to increase the integrity of the data stream. This makes the demodulated signal less susceptible to corruption by noise during the transmission, propagation, and reception processes.","A number of different types of modulation are used: e.g. phase shift keying (PSK); amplitude shift keying (ASK); quadrature amplitude modulation (QAM); frequency shift keying (FSK) and chirp shift keying (CSK). This discussion will focus on the use of PSK, but the coding technique can be used for any modulation scheme, or combination of modulation schemes.","At its simplest, PSK uses a single bit's value to alter the relative phase of the sinusoid to be transmitted. For example, transmitting a \u20181\u2019 might correspond to a sine wave, and transmitting a \u20180\u2019 might correspond to a cosine wave. This is known as binary phase shift keying (BPSK), and the phase shift between \u20181\u2019 and \u20180\u2019 is 180 degrees. Quadrature Phase Shift Keying (QPSK) uses two bits together to define the phase of the output waveform. For example, \u201800\u2019 might correspond to a phase of 0 degrees, \u201801\u2019 to 90 degrees, \u201810\u2019 to 180 degrees, and \u201811\u2019 to 270 degrees. Clearly, other forms of PSK can be defined which will just use different phase offsets. For instance, 8PSK uses three bits and defines eight phase offsets.","Differential PSK is used to allow non-coherent demodulation of PSK. In this form of PSK, the phase offset used in for the transmission of the previous bit sequence is used as an input by the differential modulator, i.e., feedback of the modulation output is used to define the modulation for a given code word. For example, in QPSK the first time the sequence \u201800\u2019 is transmitted, it might correspond to a phase offset of 90 degrees, but a succeeding sequence of \u201800\u2019 might be given a phase offset of 180 degrees. Logic at the receiver tracks the phase of the incoming signal and applies a differential demodulation scheme to arrive at the original bit sequence.","Differential forms of other modulation schemes are also used, and can be substituted in this discussion.","Differential Coded Modulation","Differential Coded Modulation is a known modulation method. Sheryl L. Howard, & Christian Schlegel, , IEEE Trans Communications, p. 1397-1406 (August 2006); Sheryl L. Howard, et al., , Proc. of W.O.C. 2002, Banff, AB, Canada (July 2002). In this scheme, the inner coder is also used to define the modulation used by a data sequence, using a differential form of a modulation scheme (e.g. Differential PSK). Differential modulation uses feedback (as required for a serially concatenated turbo code), and, therefore, is eligible for use as an inner code in a serial concatenated scheme. The outer code suggested by Howard and Schlegel was a conventional parity check code. A block diagram of a decoder as described by Howard and Schlegel is shown in .","The present invention implements a combination Direct Sequence Spread Spectrum (DSSS) and turbo coding to create a novel system and method of digitally encoding and decoding digital data during the data transmission process.","In an embodiment, the method of method of DSSS turbo encoding comprises performing DSSS spreading on incoming data, interleaving the spread data, and applying an inner code to the interleaved, spread data. DSSS spreading of the incoming data may comprise exclusive or'ing (XOR'ing) the data bits of the incoming data and a PRN sequence.","In an embodiment, the DSSS turbo encoder comprises an outer encoder for performing DSSS spreading on incoming data, an interleaver coupled to the outer encoder for interleaving the spread data, and an inner encoder coupled to the interleaver for applying an inner code to the interleaved and spread data. The outer encoder may perform DSSS spreading on incoming data by exclusive or'ing (XOR'ing) the data bits of the incoming data and a PRN sequence.","In an embodiment, the method of DSSS turbo decoding begins by receiving an incoming data stream having a plurality of symbols, determining a probabilistic estimate of each of the symbols, and converting each of those probabilities into bit LHRs. The probabilistic estimate of the symbols may be determined using probabilistic differential demodulation. Further, the probabilistic differential demodulation may be performed using uniform a priori information.","Then, a priori probabilities are moved from the bit LHRs to create modified bit LHRs. The removal of a priori probabilities may comprise dividing the bit LHRs by a plurality of interleaved bit LHRs. The modified bit LHRs are de-interleaved and DSSS LHR de-spreading is performed on the de-interleaved bit LHRs. The method may further comprise outputting the de-spread, de-interleaved bit LHRs responsive to decoding being complete.","DSSS LHR de-spreading of de-interleaved bit LHRs may comprise obtaining a DSSS PRN sequence, which contains a plurality of PRN bits, generating a plurality of PRN LHRs by performing an XOR (exclusive or) operation on a first of the de-interleaved bit LHRs and the DSSS PRN sequence, and multiplying together each of the plurality of PRN LHRs derived from the first of the de-interleaved bit LHRs to obtain a decoded bit LHR for the first of the interleaved bit LHRs. The method may further comprise outputting the decoded bit LHR responsive to decoding being complete.","In another embodiment, the method further comprises removing a priori probabilities from the de-spread LHRs, interleaving the resulting set of modified bit LHRs, and then converting the interleaved, modified bit LHRs to symbols. The symbols are used as prior probabilities in determining the probabilistic estimate of the first set of symbols. The removal of a priori probabilities may comprise dividing the de-spread LHRs by the de-interleaved bit.","In an embodiment, the DSSS turbo decoder comprises an inner decoder for receiving an incoming data stream having a first plurality of symbols and determining a probabilistic estimate of the first plurality of symbols and symbol-to-LHR conversion circuitry coupled to the inner decoder for converting the probabilities of each of the first plurality of symbols into a plurality of bit likelihood ratios (LHRs). The inner decoder may determine the probabilistic estimate of each of the first plurality of symbols using probabilistic differential demodulation and it also may perform the probabilistic differential demodulation using uniform a priori information.","The DSSS turbo decoder further comprises a first divider coupled to the symbol-to-LHR conversion circuitry for removing a priori probabilities from the plurality of bit LHRs to create a first plurality of modified bit LHRs. The first divider may remove a priori probabilities from the plurality of bit LHRs by dividing the plurality of bit LHRs by a plurality of interleaved bit LHRs.","In addition, the DSSS turbo decoder comprises a de-interleaver coupled to the first divider for de-interleaving the first plurality of modified bit LHRs; and an outer decoder coupled to the de-interleaver for performing DSSS LHR de-spreading on the plurality of de-interleaved bit LHRs. The outer decoder may also output the de-spread, de-interleaved bit LHRs responsive to decoding being complete.","In another embodiment, the DSSS turbo decoder further comprises a second divider coupled to the de-interleaver and the outer decoder for removing a priori probabilities from the de-spread LHRs to create a second plurality of modified bit LHRs. The second divider may remove a priori probabilities from the de-spread LHRs by dividing the de-spread LHRs by the de-interleaved bit LHRs. This embodiment of the DSSS turbo decoder also comprises an interleaver coupled to the first divider and the second divider for interleaving the second set of modified bit LHRs to create a plurality of interleaved bit LHRs, and LHR-to-symbol conversion circuitry coupled to the interleaver and to the inner decoder for converting the plurality of interleaved bit LHRs to a second plurality of symbols, wherein the second plurality of symbols used as prior probabilities in determining the probabilistic estimate of the first plurality of symbols.","The outer decoder may perform DSSS LHR de-spreading on the plurality of de-interleaved bit LHRs by obtaining a DSSS PRN sequence comprising a plurality of PRN bits, generating a plurality of PRN LHRs by performing an XOR (exclusive or) operation on a first of the plurality of de-interleaved bit LHRs and the DSSS PRN sequence, and multiplying together each of the plurality of PRN LHRs derived from the first of the plurality of de-interleaved bit LHRs to obtain a decoded bit LHR for the first of the plurality of interleaved bit LHRs. The outer decoder may also output the decoded bit LHR responsive to decoding being complete.","In the following detailed description of the preferred embodiments, reference is made to the accompanying drawings, which form a part hereof, and within which are shown by way of illustration specific embodiments by which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the invention.","The present invention implements a combination Direct Sequence Spread Spectrum (DSSS) and serially concatenated turbo coding to create a novel system and method of digitally encoding and decoding digital data during the data transmission process.","Conventionally, the DSSS spreading\/de-spreading mechanism is considered as a different process from the error correction code (ECC) coding\/decoding mechanism, and usually both of these are also independent of the modulation scheme. Howard and Schlegel proposed making the modulation scheme part of the ECC (turbo) coding\/de-decoding scheme. The present invention takes that idea one step further, and integrates DSSS spreading\/de-spreading with the ECC\/modulation mechanism. This gives a single integrated DSSS\/ECC\/modulation mechanism.","In the present invention, a DSSS de-spreading process is used in place of the outer decoder functional block of a turbo decoder. This removes the need for a dedicated outer ECC code. The de-spreading mechanism of DSSS forms a very simple \u2018majority rule\u2019 ECC. That is, if seven bits are being de-spread, the output data bit value will be \u20181\u2019 if the average of the seven spread bits is greater than 0.5, and \u20180\u2019 if that average is less than 0.5. Compared with other possible ECCs with the same coding overhead, this is a very weak code, with poor error detection and correction capabilities. The DSSS de-spreading mechanism is used in the outer decoder, without in any way compromising the de-spreading.","The attraction of this technique is that there is no need for a dedicated outer ECC code, and its coding overhead can be removed. This means that the actual data rate transmitted through the channel is increased, because the number of bits to be transmitted for a given data rate has been reduced. This data rate increase is significant in circumstances where the presence of narrowband noise sources (e.g. multipath interference) dictates the use of DSSS in addition to conventional ECC techniques. Although the DSSS spreading is a very poor ECC for the number of bits used, typical spreading factors are large enough that the actual ECC power of the spreading\/de-spreading is more than adequate for use as an outer code in a serially concatenated turbo code, allowing low BERs to be achieved. Higher spectral efficiency has been attained for the same DSSS processing gain (G), allowing better narrowband interference rejection for a given transmission bandwidth.","In previous implementations of DSSS de-spreading, the information contained in the spreading bits has been discarded after the \u2018majority rule\u2019 determination of the data bit has been carried out. The use of DSSS de-spreading as the outer code of a turbo coding scheme means that all of this information is retained and used to improve the BER of the data stream, with no additional data overhead, as the differential modulation inner code incurs no overhead, and the DSSS outer code's overhead is already incurred as part of the DSSS process. Usually DSSS is used to increase the effective data rate over a channel, by improving the effective SNR of the signal, so using the present method will usually improve the BER of the resulting data stream without reducing the data rate. Typically, it will be found that no additional ECC is required.","The implemented DSSS turbo coding method shows properties consistent with other turbo codes, notably the \u2018Turbo Cliff\u2019\u2014a sharp drop in BER as the SNR of the received signal improves past some threshold value, as shown in .","The effectiveness of this approach is not dependent on any particular inner code. The example described below and shown in  uses differential modulation of PSK, but any valid inner code could be used. This makes the method useful in applications where no modulation is used (such as digital watermarking). Equally, the choice of PSK is arbitrary, and the other forms of modulation could equally be used as part of an inner coder using differential modulation.","The improved BER produced by this coding scheme can be utilized in several ways:\n\n","This coding method allows a unique trade-off between Eb\/No (energy per bit over noise power spectral density); G (DSSS processing gain, which determines the code's resistance to narrowband error sources, such as jamming or multipath); spectral efficiency, R\/W (the bandwidth used to transmit a given data bit rate); and the block size, N (which determines the code complexity and the two-way transmission latency).","Often the available bandwidth is fixed, so the best result will be obtained by reducing the spreading factor and increasing the data rate while keeping the transmission bandwidth constant, so that the system operates at the bottom of the \u2018turbo cliff\u2019 where the BER is acceptably low at any SNR the system will encounter.","This coding method is close to optimal for DSSS. The Shannon Limit or channel capacity is the amount of information a channel with given SNR and bandwidth is capable of carrying. Turbo codes typically give BER close to the Shannon Limit for the propagation channel, if the code properties are chosen to match the propagation channel characteristics. Schlegel & Perez, Ch. 11. Because a tradeoff between spreading factor and effective data rate can be carried out, the turbo coded DSSS system can be modified to match a very wide variety of channel characteristics, and will, therefore, also be close to optimal (the limitation to this is where the spreading factor is small, at which point the outer code's ECC properties become so poor that the turbo code does not perform close to the channel capacity).","This coding method allows a low BER to be achieved using quite small coding block sizes (N)\u20144 kbits or less\u2014making the coding scheme attractive for applications where small block sizes are the norm. This is the case, for example, in underwater acoustic communications where the low data rate and long signal propagation time dictate that small block sizes must be used.","The turbo-coded DSSS method can also be applied to digital watermarking and similar applications. In this case, the watermark would be spread through the digital intellectual property (IP) (e.g. an image) by using DSSS with a very large spreading factor (hundreds or thousands). The advantage of this technique in the watermarking application is that the watermark could be recovered even after a large degree of image corruption had occurred.","An example implementation of the DSSS turbo coder is shown in . DSSS turbo coder  begins by obtaining a DSSS PRN sequence at outer encoder . Outer encoder also receives incoming data stream . Outer encoder  then carries out the DSSS spreading operation as normal on incoming data stream  (the data bits of incoming data stream  are XOR'd with PRN sequence ). \u2018Spread\u2019 data block  is interleaved by interleaver  and then inner coder  is applied. After modulation, the data is transmitted through channel .","For decoding on the receiver side, the inner decoder and the data flow between the inner decoder and the outer decoder may be implemented as defined by Howard and Schlegel and illustrated in . Howard and Schlegel, -, IEEE Transactions on Communications, Vol. 54, No. 8, 1397-1406 (August 2006).","An example implementation of DSSS turbo decoder  is illustrated in . In this example, inner decoder  makes a probabilistic estimate of the code words of incoming data stream  using a priori probabilities  from outer decoder . During the first iteration, no a priori knowledge from outer decoder  is available, so uniform a priori probabilities are used. Code word probabilities  are then converted into bit probabilities in conversion operation blocks  and . On the second and subsequent iterations, the influence of a priori probabilities from outer decoder  is removed by dividing (via divider ) inner decoder's  output LHRs by input LHRs . The modified block of bit LHRs from inner decoder  is then de-interleaved by de-interleaver . Interleaved block of bit LHRs  is then sent to Outer Decoder  for DSSS LHR de-spreading.","Outer Decoder  obtains the DSSS PRN sequence (by the same algorithm used in coding). Bit LHRs are XOR'd with the PRN sequence. The XOR operation carried out on the bit LHRs is consistent with XOR on binary values, as shown in the table below.",{"@attributes":{"id":"p-0084","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Binary XOR","Binary\/LHR XOR"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Bit","Bit",{},"PRN",{},"LHR output from "]},{"entry":[{},"1","2","XOR","bit","LHR","XOR of PRN with LHR"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]},{"entry":[{},"0","0","0","0","<1","\u2009\u20091 * LHR"]},{"entry":[{},"0","1","1","0",">1","\u2009\u20091 * LHR"]},{"entry":[{},"1","0","1","1","<1","\u22121 * LHR"]},{"entry":[{},"1","1","0","1",">1","\u22121 * LHR"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"6","align":"center","rowsep":"1"}}]}]}}]}}},"The LHRs produced by the XOR operation for each PRN bit are combined by a Bayesian mechanism: the LHRs for each XOR'd LHR are multiplied (so for a spreading factor of 7, seven LHRs are multiplied together). (Multiplying LHRs in this way can be proved to be identical to using the Bayes' Rule for incorporating prior knowledge to form a probability estimate):",{"@attributes":{"id":"p-0086","num":"0089"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"P","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["A","B"],"mo":"\u2758"}}},"mo":"=","mfrac":{"mrow":[{"mrow":[{"mi":"P","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"A"}},{"mi":"P","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["B","A"],"mo":"\u2758"}}}],"mo":"\u2062"},{"mi":"P","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"B"}}]}}}}},"Schlegel & Perez, p. 29. The resulting single LHR is the LHR for the output data bit. If transmission, propagation, and reception were carried out without introducing noise, the LHR that resulted would be either positive or negative infinity, corresponding to a 1 or 0 in the data block that was transmitted.","If decoding is complete, i.e. there are no significant changes in data bit probabilities, demodulated, de-spread error corrected data bits  are output.","If decoding is incomplete, i.e. changes have occurred in the data bit probabilities compared with the last iteration, then the block of output data bit LHRs is generated.","The influence of the a priori LHRs, i.e. the probability information already known when the LHRs arrived at Outer Decoder , is removed by dividing (via divider ) the output LHRs by the input LHRs. The modified LHRs are then interleaved by interleaver . The interleaved LHRs  are converted to symbols  by converter operation blocks  and . LHR symbols  are used as prior probability inputs to inner decoder .","It will be seen that the advantages set forth above, and those made apparent from the foregoing description, are efficiently attained and since certain changes may be made in the above construction without departing from the scope of the invention, it is intended that all matters contained in the foregoing description or shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.","It is also to be understood that the following claims are intended to cover all of the generic and specific features of the invention herein described, and all statements of the scope of the invention which, as a matter of language, might be said to fall therebetween."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a fuller understanding of the invention, reference should be made to the following detailed description, taken in connection with the accompanying drawings, in which:",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
