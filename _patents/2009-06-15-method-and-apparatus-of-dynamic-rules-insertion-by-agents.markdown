---
title: Method and apparatus of dynamic rules insertion by agents
abstract: An approach is provided for dynamic modification of inference rules and deduction engines in an information base. Authorized agents are allowed to insert, delete or modify inference rules and deduction engines dynamically by signing their input using an authorized signature. Additionally, the functionalities of dynamic modification of inference rules and deduction engines can be provided through a direct application programming interface (API).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08290891&OS=08290891&RS=08290891
owner: Nokia Corporation
number: 08290891
owner_city: Espoo
owner_country: FI
publication_date: 20090615
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SOME EXEMPLARY EMBODIMENTS","DESCRIPTION OF PREFERRED EMBODIMENT","The required system \u201cT\u201d was not found","Two results were found using system \u201cK\u201d","Result 1={ }","Result2=\u201ce\u201d"],"p":["Large amount of information from various sources is readily available over the Internet and new sources of information are being introduced daily. The current trend has lead to a large combination of information bases that could be physically miles apart but contain information that need to be combined for accurate response to a request. In order for the user to be able to extract useful information that first, match as closely as possible with their requirements; and secondly is provided fast or within a minimal time delay, various strategies from the design of memories and access methods to database architecture design and inference rules and guidelines have been developed. In many occasions the information extraction rules need to be modified. For example, if information bases containing contradictory rules are combined, the contradiction issue needs to be addressed before user queries return wrong answers. Furthermore, modification of reasoning systems or deduction engines may be needed in order to achieve more accurate answers to queries imposed by information base users. Currently in the existing systems sets of deduction engines and inference rules are statically introduced in the system and any modifications must be performed by authorized system administrators. However, this process could slow down the information extraction process.","Therefore, there is a need for mechanisms for dynamic modification of deduction engines and inference rules in an information base where the modification can be done when necessary. There is also a need for an authorization system so that only authorized agents are allowed to conduct the modifications.","According to one embodiment, a method comprises receiving a new inference rule or new deduction engine signed by an agent using a signature. The method also comprises validating the signature of the agent. The method further comprises dynamically inserting the new inference rule or the new deduction engine if the signature is valid.","According to another embodiment, an apparatus comprises a processor and a memory storing executable instructions that if executed cause the apparatus to receive a new inference rule or new deduction engine signed by an agent using a signature; validate the signature of the agent; and dynamically insert the new inference rule or the new deduction engine if the signature is valid.","According to another embodiment, an apparatus comprises means for receiving a new inference rule or new deduction engine signed by an agent using a signature. The apparatus also comprises means for validating the signature of the agent. The apparatus further comprises means for dynamically inserting the new inference rule or the new deduction engine if the signature is valid.","According to yet another embodiment, a computer-readable medium carries one or more sequences of one or more instructions which, when executed by one or more processors, cause an apparatus to perform at least the following: receive a new inference rule or new deduction engine signed by an agent using a signature; validate the signature of the agent; and dynamically insert the new inference rule or the new deduction engine if the signature is valid.","Still other aspects, features, and advantages of the invention are readily apparent from the following detailed description, simply by illustrating a number of particular embodiments and implementations, including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments, and its several details can be modified in various obvious respects, all without departing from the spirit and scope of the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","A method and apparatus for dynamic modification of inference rules in an information system are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent, however, to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1A","FIG. 1A"],"b":["100","101","103","105","105","101","107","107","107","105","105"],"i":["a","n ","a","n. "]},"In one embodiment, insert\/retract\/update engines  are responsible for assertion, removal and updating information within the information store  based on instructions given by one or more agent -. Query engine  receives queries from agents -processes and parses the queries. The parse procedure detects any errors that may exist in the query and reports back to the agent for correction. After receiving a modified query from agent, query engine  parses the query again and if it is syntactically correct, the query engine  passes the processed query to deductive closure engine .","According to one embodiment, subscription engine  is responsible for managing agent subscriptions to the information store . Query engine  will verify agent's subscription before processing their queries. A query received from an unsubscribed entity will be terminated by the query engine .","In one embodiment, deductive closure engine  includes components for extracting the information requested through a query from information storage  and passes the query result back to the query engine . Deductive closure generator  manages process of fetching information from information store  and application of inference rules to the fetched information.","Rule manager  monitors (or subscribes) the inference rules and possible changes to those rules in information store . Upon finding a new rule, rule manager  checks the signatures (if any) of the new rule to determine whether it is valid according to a signature authority . If new rule is unsigned or signed by an unauthorized signature, it is marked as invalid or it can be removed from the information store  for security reasons. If new inference rules have been signed by authorized signatures and are valid according to the signatures, it is inserted into the information store .","Upon receiving a query, rule manager  signals for the rule fetcher  to gather the rules required for answering the query. Rule fetcher  is responsible for fetching and locally storing of the set of rules that will be used by the deductive closure generators . Rule fetcher  can store the rules locally (i.e., caching) for performance reasons or can leave the rules in the information store  and access them directly whenever needed. Deductive closure generator  uses fetched rules to extract results to queries and return results to query engine  which passes the results to agent that originated the query.","In one embodiment, an agent -with proper authorization can insert, retract or update deduction engines or reasoning systems that are used for extracting information from information store . The process of insertion, retraction and updating of deduction engines is similar to the one for inference rules. For this process, rewrite manager  is analogous component to rule manager  with the difference that rewrite manager  manages the loading and unloading of the deductive closure calculation engines -of  which are components of deductive closure generator . Also rewrite fetcher  is analogous to rule fetcher  with the difference that rewrite fetcher  gathers and stores suitable deduction closure calculation engines -of  required for query result extraction.","According to one embodiment, the design is targeted at managing the deductive closure engine  from the agents' -perspective. A direct Application Programming Interface (API)  can be provided if necessary for integration with other components inside the information base . All functionality inside the deductive closure engine  can be provided through direct API .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 1B","FIG. 1B"],"b":["127","121","129","129","127","121"],"i":["a","n "]},"Deductive closure calculation engines -are individual processors which generate the deductive closure by applying the given rewrite rules to the information store . After the deductions by deductive closure calculation engines -are completed, combinator  merges the results and then applies several checks on the combined result and, if necessary, forms a feedback loop to the engine selector  for another round of calculation. Otherwise, the result is returned to the query engine .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2A","FIGS. 1A and 1B"],"b":["201","105","105","203","103","205","103","207","209"],"i":["a","n"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2B","FIG. 2A","FIGS. 1A and 1B"],"b":["211","105","105","213","103","215","103","217","219"],"i":["a","n"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 2C","FIG. 2C","FIG. 2C"],"b":["221","105","105","111","113","223","123","125","225","227","119","121","125","229","227","129","129","227","117","131","231","233","111"],"i":["a","n","a","n"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIGS. 3A-3C","FIG. 3A"],"b":["300","301","303","305","307","309","311","301","303","305","307","307","309","309","309","311","305","303","309","307","311","4","5","311","303","305","307"]},"Languages such as Rule Markup Language (RuleML) provide a complete syntax and structure for expressing rules using Extensible Markup Language (XML) and forms of XML such as RDF\/XML, which is XML syntax for Resource Description Framework (RDF).  shows a sample RDF description for a rule named \u201cCD-Introduction\u201d for introducing conclusion (d) from premise (c) with a Closed Word Assumption (CWA) and using a First Order Predicate Logic (FOPL). In this example no unless clause is used. As seen in  each RDF statement or RDF triple consists of a \u201csubject\u201d which identifies what object the triple is describing (first column in ), a \u201cpredicate\u201d which defines the piece of data in the object that a value is assigned to (second column in ), and an \u201cobject\u201d which is the actual value assigned (third column in ). The rule \u201cCD-introduction\u201d of  could be interpreted as: \u201cIn a closed world using first order predicate logic, (a) implies (b).\u201d",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 3C","FIG. 3B","FIG. 3C","FIG. 3B","FIG. 3C"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 4A","b":["401","107","403","1","405","111","407","111","113","409","113","107","107","411","113","113","413","107","113","111","415","1","417"]},"In step , agent A inserts a new inference rule (c\u2192d) into the information store  signed by a certified signature authority. This rule that will allow deduction of (d) from (c) is expressed using RDF syntax as shown in . As in step  rule manager  reacts to the new rule inserted into the information store  and reads the rule. Rule manager  then passes the accompanying signature to the signature authority  in step  for evaluation. In this example the signature authority  confirms the validity of the rule in step  and signals back to the rule manager  as in step . In step , rule manager  signals the rule fetcher  to collect the new rule. The rule fetcher  collects and caches (stores) the new rule as in steps  and .","In step  agent A repeats the query for (d) that he had made in step . The process for steps ,  and  are respectively the same as steps ,  and . However, in step  information store  sends the inference rule for deducing (d) to deductive closure engine . The deductive closure engine  applies the rule and infers that (d) is derivable and returns (d) as the result to query engine  in step  and query engine passes the result to agent A in step . Although the reasoning system (logic) used as the basis for drawing the query result in this example is the First Order Predicate Logic (FOPL) which forms the basis for nearly all standard logics, but other types of predicate logic (second order predicate logic, many-sorted logic, etc.) and also non-predicate logics such as modal logic could be used for reasoning.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4B","FIG. 4A"],"b":["449","3","107","451","453","455","421","423","425","457","103","119","119","107","459"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 4C","FIG. 4A","FIG. 3C","FIG. 4A"],"b":["461","4","107","463","421","427","465","1","471","113","4","113","1","473","475","477","5","107","123","125","119","121","479","491","421","433","493","1","495","497","467","469","497","113","4991","5","113","107","4993","107","1","4997","4999"]},"In the above examples, combinator , a component of deductive closure generator , would additionally pass the result back for the result to be further processed if necessary. This would occur when the required logic does not exist in the system and a weaker logic is used instead or in cases where deduction requires many passes. The combinator effectively contains the decision procedures to check whether the application of rules has effectively terminated or not.","For example, if agent A removes the information about logic \u201cT\u201d from the information store , rewriter manager  and rewriter fetcher  will work to modify the information store  accordingly. Now if agent A inserts a new rewrite engine into the system for modal logic \u201cK\u201d (a weaker modal logic than \u201cT\u201d) again rewriter manager  and rewriter fetcher  will validate and store the new logic in the system. Logic \u201cK\u201d is weaker than logic \u201cT\u201d because it does not have the Lp\u2192p axiom. The axiom of \u201cK\u201d is L(p\u2192q)\u2192(Lp\u2192Lq). At this stage if agent A queries for \u201ce\u201d in a similar manner to that already described, when deductive closure engine  receives the rewrite engine it checks what logic is required and in this instance notices that the modal logic \u201cT\u201d is required. Since the suitable logic is not available, deductive closure engine  checks to see what other query engines are available, and in this instance select the next weakest engine \u201cK\u201d. The system \u201cK\u201d generates two results: an empty result and one with \u201ce\u201d as a result. The Combinator  receives both results and returns them both to the query engine  with an explanation of the deduction. As an example, the returned result could be as follows:","Ultimately, combinator  passes the final result(s) to query engine .","The processes described herein for dynamic modification of inference rules and deduction engines in an information system may be advantageously implemented via software, hardware (e.g., general processor, Digital Signal Processing (DSP) chip, an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Arrays (FPGAs), etc.), firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 5","b":["500","500","510","500"]},"A bus  includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors  for processing information are coupled with the bus .","A processor  performs a set of operations on information. The set of operations include bringing information in from the bus  and placing information on the bus . The set of operations also typically include comparing two or more units of information, shifting positions of units of information, and combining two or more units of information, such as by addition or multiplication or logical operations like OR, exclusive OR (XOR), and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions, such as an operation code of one or more digits. A sequence of operations to be executed by the processor , such as a sequence of operation codes, constitute processor instructions, also called computer system instructions or, simply, computer instructions. Processors may be implemented as mechanical, electrical, magnetic, optical, chemical or quantum components, among others, alone or in combination.","Computer system  also includes a memory  coupled to bus . The memory , such as a random access memory (RAM) or other dynamic storage device, stores information including processor instructions. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory  is also used by the processor  to store temporary values during execution of processor instructions. The computer system  also includes a read only memory (ROM)  or other static storage device coupled to the bus  for storing static information, including instructions, that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus  is a non-volatile (persistent) storage device , such as a magnetic disk, optical disk or flash card, for storing information, including instructions, that persists even when the computer system  is turned off or otherwise loses power.","Information, including instructions, is provided to the bus  for use by the processor from an external input device , such as a keyboard containing alphanumeric keys operated by a human user, or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus , used primarily for interacting with humans, include a display device , such as a cathode ray tube (CRT) or a liquid crystal display (LCD), or plasma screen or printer for presenting text or images, and a pointing device , such as a mouse or a trackball or cursor direction keys, or motion sensor, for controlling a position of a small cursor image presented on the display  and issuing commands associated with graphical elements presented on the display . In some embodiments, for example, in embodiments in which the computer system  performs all functions automatically without human input, one or more of external input device , display device  and pointing device  is omitted.","In the illustrated embodiment, special purpose hardware, such as an application specific integrated circuit (ASIC) , is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor  quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display , cryptographic boards for encrypting and decrypting messages sent over a network, speech recognition, and interfaces to special external devices, such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.","Computer system  also includes one or more instances of a communications interface  coupled to bus . Communication interface  provides a one-way or two-way communication coupling to a variety of external devices that operate with their own processors, such as printers, scanners and external disks. In general the coupling is with a network link  that is connected to a local network  to which a variety of external devices with their own processors are connected. For example, communication interface  may be a parallel port or a serial port or a universal serial bus (USB) port on a personal computer. In some embodiments, communications interface  is an integrated services digital network (ISDN) card or a digital subscriber line (DSL) card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments, a communication interface  is a cable modem that converts signals on bus  into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example, communications interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN, such as Ethernet. Wireless links may also be implemented. For wireless links, the communications interface  sends or receives or both sends and receives electrical, acoustic or electromagnetic signals, including infrared and optical signals, that carry information streams, such as digital data. For example, in wireless handheld devices, such as mobile telephones like cell phones, the communications interface  includes a radio band electromagnetic transmitter and receiver called a radio transceiver.","The term computer-readable medium is used herein to refer to any medium that participates in providing information to processor , including instructions for execution. Such a medium may take many forms, including, but not limited to, non-volatile media, volatile media and transmission media. Non-volatile media include, for example, optical or magnetic disks, such as storage device . Volatile media include, for example, dynamic memory . Transmission media include, for example, coaxial cables, copper wire, fiber optic cables, and carrier waves that travel through space without wires or cables, such as acoustic waves and electromagnetic waves, including radio, optical and infrared waves. Signals include man-made transient variations in amplitude, frequency, phase, polarization or other physical properties transmitted through the transmission media.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, a hard disk, a magnetic tape, or any other magnetic medium, a compact disk ROM (CD-ROM), a digital video disk (DVD) or any other optical medium, punch cards, paper tape, or any other physical medium with patterns of holes, a RAM, a programmable ROM (PROM), an erasable PROM (EPROM), a FLASH-EPROM, or any other memory chip or cartridge, a transmission medium such as a cable or carrier wave, or any other medium from which a computer can read. Information read by a computer from computer-readable media are variations in physical expression of a measurable phenomenon on the computer readable medium. Computer-readable storage medium is a subset of computer-readable medium which excludes transmission media that carry transient man-made signals.","Logic encoded in one or more tangible media includes one or both of processor instructions on a computer-readable storage media and special purpose hardware, such as ASIC .","Network link  typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example, network link  may provide a connection through local network  to a host computer  or to equipment  operated by an Internet Service Provider (ISP). ISP equipment  in turn provides data communication services through the public, world-wide packet-switching communication network of networks now commonly referred to as the Internet . A computer called a server host  connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example, server host  hosts a process that provides information representing video data for presentation at display .","At least some embodiments of the invention are related to the use of computer system  for implementing some or all of the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more processor instructions contained in memory . Such instructions, also called computer instructions, software and program code, may be read into memory  from another computer-readable medium such as storage device  or network link . Execution of the sequences of instructions contained in memory  causes processor  to perform one or more of the method steps described herein. In alternative embodiments, hardware, such as ASIC , may be used in place of or in combination with software to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware and software, unless otherwise explicitly stated herein.","The signals transmitted over network link  and other networks through communications interface , carry information to and from computer system . Computer system  can send and receive information, including program code, through the networks ,  among others, through network link  and communications interface . In an example using the Internet , a server host  transmits program code for a particular application, requested by a message sent from computer , through Internet , ISP equipment , local network  and communications interface . The received code may be executed by processor  as it is received, or may be stored in memory  or in storage device  or other non-volatile storage for later execution, or both. In this manner, computer system  may obtain application program code in the form of signals on a carrier wave.","Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor  for execution. For example, instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system  receives the instructions and data on a telephone line and uses an infra-red transmitter to convert the instructions and data to a signal on an infra-red carrier wave serving as the network link . An infrared detector serving as communications interface  receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus  carries the information to memory  from which processor  retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory  may optionally be stored on storage device , either before or after execution by the processor .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 6","FIG. 6"],"b":["600","600"]},"In one embodiment, the chip set  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a general purposed processor. Other specialized components to aid in performing the inventive functions described herein include one or more field programmable gate arrays (FPGA) (not shown), one or more controllers (not shown), or one or more other special-purpose computer chips.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein. The memory  also stores the data associated with or generated by the execution of the inventive steps.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 7","FIG. 1A"],"b":["703","705","707","709","711","711","711","713"]},"A radio section  amplifies power and converts frequency in order to communicate with a base station, which is included in a mobile communication system, via antenna . The power amplifier (PA)  and the transmitter\/modulation circuitry are operationally responsive to the MCU , with an output from the PA  coupled to the duplexer  or circulator or antenna switch, as known in the art. The PA  also couples to a battery interface and power control unit .","In use, a user of mobile station  speaks into the microphone  and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter (ADC) . The control unit  routes the digital signal into the DSP  for processing therein, such as speech encoding, channel encoding, encrypting, and interleaving. In the example embodiment, the processed voice signals are encoded, by units not separately shown, using a cellular transmission protocol such as global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wireless fidelity (WiFi), satellite, and the like.","The encoded signals are then routed to an equalizer  for compensation of any frequency-dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream, the modulator  combines the signal with a RF signal generated in the RF interface . The modulator  generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission, an up-converter  combines the sine wave output from the modulator  with another sine wave generated by a synthesizer  to achieve the desired frequency of transmission. The signal is then sent through a PA  to increase the signal to an appropriate power level. In practical systems, the PA  acts as a variable gain amplifier whose gain is controlled by the DSP  from information received from a network base station. The signal is then filtered within the duplexer  and optionally sent to an antenna coupler  to match impedances to provide maximum power transfer. Finally, the signal is transmitted via antenna  to a local base station. An automatic gain control (AGC) can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone, other mobile phone or a land-line connected to a Public Switched Telephone Network (PSTN), or other telephony networks.","Voice signals transmitted to the mobile station  are received via antenna  and immediately amplified by a low noise amplifier (LNA) . A down-converter  lowers the carrier frequency while the demodulator  strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer  and is processed by the DSP . A Digital to Analog Converter (DAC)  converts the signal and the resulting output is transmitted to the user through the speaker , all under control of a Main Control Unit (MCU) \u2014which can be implemented as a Central Processing Unit (CPU) (not shown).","The MCU  receives various signals including input signals from the keyboard . The MCU  delivers a display command and a switch command to the display  and to the speech output switching controller, respectively. Further, the MCU  exchanges information with the DSP  and can access an optionally incorporated SIM card  and a memory . In addition, the MCU  executes various control functions required of the station. The DSP  may, depending upon the implementation, perform any of a variety of conventional digital processing functions on the voice signals. Additionally, DSP  determines the background noise level of the local environment from the signals detected by microphone  and sets the gain of microphone  to a level selected to compensate for the natural tendency of the user of the mobile station .","The CODEC  includes the ADC  and DAC . The memory  stores various data including call incoming tone data and is capable of storing other data including music data received via, e.g., the global Internet. The software module could reside in RAM memory, flash memory, registers, or any other form of writable storage medium known in the art. The memory device  may be, but not limited to, a single memory, CD, DVD, ROM, RAM, EEPROM, optical storage, or any other non-volatile storage medium capable of storing digital data.","An optionally incorporated SIM card  carries, for instance, important information, such as the cellular phone number, the carrier supplying service, subscription details, and security information. The SIM card  serves primarily to identify the mobile station  on a radio network. The card  also contains a memory for storing a personal telephone number registry, text messages, and user specific mobile station settings.","While the invention has been described in connection with a number of embodiments and implementations, the invention is not so limited but covers various obvious modifications and equivalent arrangements, which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims, it is contemplated that these features can be arranged in any combination and order."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments of the invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 3A-3C"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
