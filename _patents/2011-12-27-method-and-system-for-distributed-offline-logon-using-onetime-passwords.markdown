---
title: Method and system for distributed off-line logon using one-time passwords
abstract: A method and a system for extending distributed logon services to an off-line computing device includes encrypting, on the off-line computing device, a one-time password (OTP), a nonce, and a unique identifier to generate an authorization request message. Using a mobile device as a proxy to forward the authorization request message to an access control server for authorization. Decrypting the authorization response message to obtain the nonce. Re-encrypting the nonce to generate an authorization response message. Using the mobile device as a proxy to forward the authorization response message to the off-line computing device. Decrypting the authorization response message to obtain the nonce. Comparing the nonce obtained from the authorization response message with the original nonce. The computing device to permit or deny access as result of comparing the nonce obtained from the authorization response message with the original nonce.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09118662&OS=09118662&RS=09118662
owner: Intel Corporation
number: 09118662
owner_city: Santa Clara
owner_country: US
publication_date: 20111227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["Computing devices have become ubiquitous with everyday life so much so that it is not uncommon for a person to interact with a large number of such devices throughout the day. For a number of reasons, many of those computing devices are always connected to one or more networks such as the Internet. Such connectivity allows computing devices to receive security patches, software updates, firmware updates, and various other forms of information and data from remote devices and servers.","However, due to a variety of factors, it may not feasible to provide robust connectivity to some devices. Many of these devices have limited or no access to a network, which makes managing and servicing such devices difficult. Moreover, due to their lack of connectivity, many of these devices are not capable of reliably communicating with a remote logon server and, as a result, are often configured using a common username and password. That practice leaves those devices open to a number of security threats because such devices lack the ability to quickly and securely change passwords or revoke a user's authorization.","While the concepts of the present disclosure are susceptible to various modifications and alternative forms, specific exemplary embodiments thereof have been shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives consistent with the present disclosure and the appended claims.","In the following description, numerous specific details such as logic implementations, opcodes, means to specify operands, resource partitioning\/sharing\/duplication implementations, types and interrelationships of system components, and logic partitioning\/integration choices are set forth in order to provide a more thorough understanding of the present disclosure. It will be appreciated, however, by one skilled in the art that embodiments of the disclosure may be practiced without such specific details. In other instances, control structures, gate level circuits and full software instruction sequences have not been shown in detail in order not to obscure the invention. Those of ordinary skill in the art, with the included descriptions, will be able to implement appropriate functionality without undue experimentation.","References in the specification to \u201cone embodiment,\u201d \u201can embodiment,\u201d \u201can example embodiment,\u201d etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","Embodiments of the invention may be implemented in hardware, firmware, software, or any combination thereof. Embodiments of the invention implemented in a computer system may include one or more bus-based interconnects or links between components and\/or one or more point-to-point interconnects between components. Embodiments of the invention may also be implemented as instructions carried by or stored on a transitory or non-transitory machine-readable medium, which may be read and executed by one or more processors. A machine-readable medium may be embodied as any device, mechanism, or physical structure for storing or transmitting information in a form readable by a machine (e.g., a computing device). For example, a machine-readable medium may be embodied as read only memory (ROM); random access memory (RAM); magnetic disk storage media; optical storage media; flash memory devices; mini- or micro-SD cards, memory sticks, electrical signals, and others.","In the drawings, specific arrangements or orderings of schematic elements, such as those representing devices, modules, instruction blocks and data elements, may be shown for ease of description. However, it should be understood by those skilled in the art that the specific ordering or arrangement of the schematic elements in the drawings is not meant to imply that a particular order or sequence of processing, or separation of processes, is required. Further, the inclusion of a schematic element in a drawing is not meant to imply that such element is required in all embodiments or that the features represented by such element may not be included in or combined with other elements in some embodiments.","In general, schematic elements used to represent instruction blocks may be implemented using any suitable form of machine-readable instruction, such as software or firmware applications, programs, functions, modules, routines, processes, procedures, plug-ins, applets, widgets, code fragments and\/or others, and that each such instruction may be implemented using any suitable programming language, library, application programming interface (API), and\/or other software development tools. For example, some embodiments may be implemented using Java, C++, and\/or other programming languages. Similarly, schematic elements used to represent data or information may be implemented using any suitable electronic arrangement or structure, such as a register, data store, table, record, array, index, hash, map, tree, list, graph, file (of any file type), folder, directory, database, and\/or others.","Further, in the drawings, where connecting elements, such as solid or dashed lines or arrows, are used to illustrate a connection, relationship or association between or among two or more other schematic elements, the absence of any such connecting elements is not meant to imply that no connection, relationship or association can exist. In other words, some connections, relationships or associations between elements may not be shown in the drawings so as not to obscure the disclosure. In addition, for ease of illustration, a single connecting element may be used to represent multiple connections, relationships or associations between elements. For example, where a connecting element represents a communication of signals, data or instructions, it should be understood by those skilled in the art that such element may represent one or multiple signal paths (e.g., a bus), as may be needed, to effect the communication.","Referring now to , a system  for extending distributed logon services to an off-line device includes a computing device  and an access control server . In some embodiments, the computing device  comprises an \u201coff-line\u201d device having limited or no access to one or more networks such as network . Additionally or alternatively, in other embodiments, the off-line computing device  may have access to a private network, but not to the network . In use, as discussed in more detail below, a mobile device  acts as a proxy for the off-line computing device  in authenticating a user with the access control server . To do so, the off-line computing device  generates an authorization request message to be verified by the access control server . The off-line computing device  generates a visual and\/or an electronic representation of the authorization request message, which is thereafter made available to be captured by the mobile device . Once obtained, the authorization request message is transmitted by the mobile device , acting as a proxy, to the access control server  over a network . Based on the information contained within the authorization request message, the access control server  determines whether access to the off-line computing device  should be authorized. In response to determining that access to the off-line computing device  is authorized, the access control server  generates and transmits an authorization response message to the mobile device , which again acts a proxy. Upon receipt, the mobile device  generates a visual and\/or an electronic representation of the authorization response message, which is thereafter made available to be captured by the off-line computing device . The off-line computing device then determines whether access should be permitted based on comparing the information contained within the authorization request message with the information contained within the authorization response message.","The computing device  may be embodied as any type of computing device capable of performing the functions described herein. For example, the computing device  may be embodied as a desktop computer, a laptop computer, a mobile internet device, a handheld computer, a smart phone, a tablet computer, a personal digital assistant, a telephony device, or other computing device. In one particular embodiment, the computing device  is embodied as an automated teller machine. In the illustrative embodiment of , the computing device  includes a processor , an I\/O subsystem , a memory , a data storage device , and one or more peripheral devices . In some embodiments, several of the foregoing components may be incorporated on a motherboard of the computing device , while other components may be communicatively coupled to the motherboard via, for example, a peripheral port. Furthermore, it should be appreciated that the computing device  may include other components, sub-components, and devices commonly found in a computer and\/or computing device, which are not illustrated in  for clarity of the description.","The processor  of the computing device  may be embodied as any type of processor capable of executing software\/firmware, such as a microprocessor, digital signal processor, microcontroller, or the like. The processor  is illustratively embodied as a single core processor having a processor core . However, in other embodiments, the processor  may be embodied as a multi-core processor having multiple processor cores . Additionally, the computing device  may include additional processors  having one or more processor cores .","The I\/O subsystem  of the computing device  may be embodied as circuitry and\/or components to facilitate input\/output operations with the processor  and\/or other components of the computing device . In some embodiments, the I\/O subsystem  may be embodied as a memory controller hub (MCH or \u201cnorthbridge\u201d), an input\/output controller hub (ICH or \u201csouthbridge\u201d), and a firmware device. In such embodiments, the firmware device of the I\/O subsystem  may be embodied as a memory device for storing Basic Input\/Output System (BIOS) data and\/or instructions and\/or other information (e.g., a BIOS driver used during booting of the computing device ). However, in other embodiments, I\/O subsystems having other configurations may be used. For example, in some embodiments, the I\/O subsystem  may be embodied as a platform controller hub (PCH). In such embodiments, the memory controller hub (MCH) may be incorporated in or otherwise associated with the processor , and the processor  may communicate directly with the memory  (as shown by the hashed line in ). Additionally, in other embodiments, the I\/O subsystem  may form a portion of a system-on-a-chip (SoC) and be incorporated, along with the processor  and other components of the computing device , on a single integrated circuit chip.","The I\/O subsystem  may include a Security Engine (SE) , which may be embodied as an embedded microprocessor, such as a security co-processor, that operates independently of the processor  to provide a secure and isolated environment that cannot be accessed by the processor  or other components of the computing device . In some embodiments, the SE  may manage the storage of one or more encryption keys used by the computing device  to secure data and or communications between the computing device  and the mobile device  and\/or the access control server . In such embodiments, the one or more encryption keys may be stored in a portion of memory  that is accessible to the SE  and inaccessible to other components of the computing device . In other embodiments, the SE  may generate a one-time password (OTP), which as will be discussed in more detail below, is utilized in part to extend distributed logon services to the off-line computing device .","The processor  is communicatively coupled to the I\/O subsystem  via a number of signal paths. These signal paths (and other signal paths illustrated in ) may be embodied as any type of signal paths capable of facilitating communication between the components of the computing device . For example, the signal paths may be embodied as any number of wires, cables, light guides, printed circuit board traces, via, bus, intervening devices, and\/or the like.","The memory  of the computing device  may be embodied as or otherwise include one or more memory devices or data storage locations including, for example, dynamic random access memory devices (DRAM), synchronous dynamic random access memory devices (SDRAM), double-data rate synchronous dynamic random access memory device (DDR SDRAM), mask read-only memory (ROM) devices, erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM) devices, flash memory devices, and\/or other volatile and\/or non-volatile memory devices. The memory  is communicatively coupled to the I\/O subsystem  via a number of signal paths. Various data and software may be stored in the memory device . For example, one or more operating systems, applications, programs, libraries, and drivers that make up the software stack executed by the processor  may reside in memory  during execution. Furthermore, software and data stored in memory  may be swapped between the memory  and the data storage device  as part of memory management operations.","The computing device  may include additional memory devices in other embodiments. For example, the computing device  may include secure memory , which as discussed in more detail below, may store one or more encryption keys  for securing data or communications of the computing device . The secure memory  may be embodied as an memory device separate from the main memory  or may as a secured partition of the memory . Although only two memory devices ,  are illustrated in , the computing device  may include any number of additional memory devices in other embodiments.","The computing device  may also include data storage device(s) . The data storage device(s)  may be embodied as any type of device or devices configured for the short-term or long-term storage of data such as, for example, memory devices and circuits, memory cards, hard disk drives, solid-state drives, or other data storage devices.","Additionally, the computing device  may include communication circuitry  to facilitate communication with one or more remote computing devices over the network . The computing device  may use any suitable communication protocol to communicate with other computing devices over the network  depending on, for example, the particular type of network(s) . The communication circuitry  may include near-field communication (NFC) circuitry  in some embodiments. The computing device  may use the NFC circuitry  to transfer information or data to one or more remote computing devices without using the network . For example, the computing device  may use the NFC circuitry  to transfer information or data to the mobile device , which as discussed below, may also include NFC circuitry .","In some embodiments, the computing device  may include a camera  or scanner for capturing a visual image or object displayed by one or more remote computing devices. For example, the computing device  may use the camera  to capture one or more images displayed by the mobile device . The camera  may be embodied as any type of camera, such as a still camera, a video camera, or the like, that is capable of generating images displayed by one or more remote computing devices or provided by a user of the computing device . In some embodiments, the camera  may be incorporated into a housing of the computing device  or may be a peripheral device  communicatively coupled to the computing device . For example, the camera  may be incorporated near a display screen of the computing device  or positioned in the proximity of the computing device .","The peripheral devices  of the computing device  may include any number of peripheral or interface devices. For example, the peripheral devices  may include a display, a touch screen, a keyboard, a mouse, external speakers, and\/or other peripheral devices. The peripheral devices  are communicatively coupled to the I\/O subsystem  via a number of signal paths thereby allowing the I\/O subsystem  and\/or processor  to receive inputs from and send outputs to the peripheral devices . The particular devices included in the peripheral devices  may depend upon, for example, the intended use of the computing device .","In the illustrative embodiment shown, the peripheral devices  includes graphics circuitry  embodied as a graphics processing unit of a graphics peripheral card. The graphics processing unit is used to perform various graphics processing functions such as accelerating the generation of graphics and the like. As such, the graphics processing unit is typically used to support the generation of graphics on the computing device . However, the graphics processing unit may also be used to process visual images captured by the camera  and\/or perform other tasks for the computing device . For example, the graphics processing unit may execute software\/firmware of the computing device in conjunction with or separate from the processor . In some embodiments, the processor  may also include the graphics circuitry  defined on a common die with the processor core .","The mobile device  may be embodied as any type of portable device capable of performing the proxy functions described below. Similar to the computing device , the mobile device  may include various components typically found in a portable computer. In the illustrative embodiment of , the mobile device  includes a processor , a memory , an I\/O subsystem , a data storage device , a camera , communication circuitry , and one or more peripheral devices . The communication circuitry  may include NFC circuitry  for direct communications between the mobile device  and the computing device  separate from the network . As shown in the illustrative embodiment of , the data storage device , the camera , the communication circuitry , and the NFC circuitry  may comprise separate components of the mobile device . Of course, it should be understood that in other embodiments the peripheral devices  may include one or more of the data storage device , the camera , the communication circuitry , and the NFC circuitry .","The access control server  may be embodied as any type of server capable of performing the authentication functions described herein. The access control server  may include various components typically found in a sever computer. In the illustrative embodiment of , the access control server  includes a processor , a memory , a data storage device , and communication circuitry . The memory  may store one or more encryption keys  used by the access control server  to secure data and\/or communications between the access control server  and the computing device  and\/or the mobile device . In some embodiments, the memory  may store a one-time password (OTP), which may be utilized to facilitate the extension of distributed logon services to the off-line computing device .","Referring now to , an illustrative embodiment of a method  for extending distributed logon services to the off-line computing device  is shown. In operation, the computing device  generates an authorization request packet in response to a user requesting access to the computing device . In such embodiments, the user may be requesting access to one or more components of the computing device , or the user may be requesting access to one or more functions or programs executing on the computing device . To generate the authorization request packet, the computing device  may encrypt a one-time password (OTP) generated by the computing device , a nonce generated by the computing device , and a unique identifier of the computing device  using an encryption key. The nonce is embodied as random or pseudo-random number intended to be used only once in cryptographic functions to thwart, for example, replay attacks.","In some embodiments, the computing device  shares the generated authorization request packet with the mobile device  in data transmission . In such embodiments, the computing device  may share the generated authorization request packet with the mobile device  using a barcode and\/or one or more NFC data exchanges.","Upon receiving the generated authorization request packet, the mobile device  may obtain user credentials from the user that is requesting access to the computing device . The user credentials in some embodiments are unique to the user requesting access to the computing device . After obtaining the user credentials from the user, the mobile device  transmits the authorization request packet and the user credentials to the access control server  over the network  in data transmission .","The access control server , upon receiving the authorization request packet and the user credentials from the mobile device , decrypts the authorization request packet using an encryption key to obtain the OTP, the nonce, and the unique identifier of the computing device . It should be understood that the encryption key used to decrypt the authorization request packet corresponds to the encryption key that was used to encrypt the authorization request packet. The access control server , in some embodiments, verifies the OTP and the unique identifier of the computing device . Additionally or alternatively, in some embodiments, the access control server  verifies the user credentials obtained by the mobile device .","In response to verifying the OTP, the unique identifier of the computing device , and the user credentials obtained by the mobile device , the access control server  re-encrypts the nonce using an encryption key to generate an authorization response packet. It should be understood that the encryption key used to re-encrypt the nonce may be a corresponding key or a different key than the encryption key used to encrypt the OTP, the nonce, and the unique identifier of the computing device . After re-encrypting the nonce, the access control server  transmits the generated authorization response packet to the mobile device  over the network  in data transmission .","Upon receiving the generated authorization response packet, the mobile device  shares the generated authorization response packet with the computing device  in data transmission . In such embodiments, the mobile device  shares the generated authorization response packet with the computing device  using a barcode and\/or one or more NFC data exchanges. It should be understood that the barcode and\/or the one or more NFC data exchanges used by the mobile device  to share the authorization response packet with the computing device  are different from the barcode and\/or the one or more NFC data exchanges used by the computing device  to share the authorization request packet with the mobile device .","The computing device , upon receiving the authorization response packet, decrypts the authorization response packet to obtain the nonce, which was re-encrypted by the access control server . It should be understood that the encryption key used to decrypt the authorization response packet corresponds to the encryption key that was used to encrypt the authorization response packet. The computing device , in some embodiments, confirms that the nonce that was re-encrypted by the access control server  is the same as the nonce that was originally generated by the computing device . Thereafter, the computing device  may determine whether to allow or deny access to computing device  based on confirming the nonce.","As discussed above, in some embodiments, the computing device  may be embodied as an automated teller machine (ATM) . In such embodiments, the ATM  may generate an authorization request packet in response to a user requesting access to one or more components or functions of the ATM . To do so, the ATM  may first generate an OTP and a nonce using, for example, one or more cryptographic algorithms. The ATM  then encrypts the OTP, the nonce, and a unique identifier of the ATM  to generate the authorization request packet.","In embodiments where the ATM  has limited or no access to the network , the ATM uses the mobile device  as a proxy to transmit the authorization request packet to the access control server . In those embodiments, the ATM  may encode or otherwise convert the authorization request packet into an NFC tag or a barcode, which may then be read or captured by the mobile device . Upon receiving the authorization request packet from the NFC tag or the barcode provided by the ATM , the mobile device  forwards the packet along with user credentials to the access control server  over the network .","The access control server  may then decrypt the authorization request packet and verify the information contained therein. If the information (i.e. the OTP, nonce, and unique identifier of the ATM ) is verified, the access control server  re-encrypts the nonce to generate an authorization response packet for transmission to the ATM .","As discussed above, the ATM  has limited or no access to the network  in some embodiments. Similar to before, the mobile device  may be used as a proxy between the access control server  and the ATM . In such embodiments, the access control server  transmits the authorization response packet to the mobile device  over the network . The mobile device  may encode or otherwise convert the authorization response packet into an NFC tag or a barcode, which may then be read or captured by the ATM .","The ATM , in such embodiments, decrypts the authorization response packet to obtain the nonce that was re-encrypted by the access control server . To determine whether access to the one or more requested components or functions should be permitted, the ATM  may compare the nonce obtained from authorization response packet with the nonce that the ATM  originally generated. In such embodiments, the ATM  may allow the user to access the one or more requested components or functions if the nonces match.","Referring now to , in use, the off-line computing device  may execute a method  for extending distributed logon services to the computing device . The method  begins with block  in which the computing device  determines whether a user is requesting access to the computing device . As discussed above, the user may request access to one or more components of the computing device  or to one or more functions or programs executing on the computing device . In response to determining the user is requesting access to the computing device , the method  advances to block .","In block , the computing device  generates a one-time password (OTP) as discussed above. To do so, the security engine (SE)  of the computing device  in some embodiments may use a suitable cryptographic algorithm to generate the OTP as a function of a seed provided to the computing device . Additionally, in order to prevent the OTP from being obtained by a malicious third party, the SE  may store the OTP, the algorithm, the seed, and\/or any other related data in the secure memory  of the computing device . It should be understood that although only one algorithm is used by the SE  to generate the OTP in the described embodiment, more than one algorithm may be used by the SE  in other embodiments.","Additionally, in block , the computing device  may generate a nonce. The nonce may be embodied as a random or pseudorandom number. The computing device  may use a suitable cryptographic algorithm to generate the nonce as a function of a seed provided to the computing device . In the illustrative embodiment, the algorithm and seed used to generate the nonce are different from the algorithm and seed used to generate the OTP. Additionally, it should be understood that in the illustrative embodiment each nonce generated is used once by the computing device .","The computing device  may also be associated with a unique identifier. The unique identifier may be embodied as a number, alphanumeric string of characters, a word, or any other appropriate marking that uniquely identifies the computing device  from one or more other computing devices. For example, in some embodiments, the unique identifier may comprise a unique serial number associated with the computing device . In such embodiments, the data storage device  of the access control server  may store a mapping of unique serial numbers to computing devices.","Referring back to , in block , the computing device  may encrypt the OTP, the nonce, and the unique identifier using an encryption key  retrieved from the secure memory  to generate the authorization request packet. Additionally or alternatively, the computing device  may encrypt the OTP, the nonce, and the unique identifier using one or more encryption keys stored in the memory  and\/or the data storage device  of the computing device  (which may be stored in those devices in an encrypted state). It should be understood that the computing device  may use any suitable encryption technique to encrypt the OTP, the nonce, and the unique identifier. For instance, the computing device  may use one or more symmetric key algorithms (i.e., shared keys), asymmetric key algorithms (i.e., public\/private key pair), or any other suitable encryption mechanism to encrypt the OTP, the nonce, and the unique identifier and generate the authorization request packet. After encrypting the OTP, the nonce, and the unique identifier of the computing device  to generate the authorization request packet, the method  advances to block .","In block , the computing device  transmits the generated authorization request packet to the access control server  for authorization. In such embodiments, the computing device  uses the mobile device  as a proxy by first sharing the generated authorization request packet with the mobile device . To do so, the computing device  may generate, in block , an NFC tag or a barcode comprising the authorization request packet. In such embodiments, the computing device  may encode or otherwise convert the authorization request packet into the NFC tag or the barcode. It should be understood that the NFC tag generated by the computing device  may embodied as either a physical NFC tag or a \u201csoft\u201d NFC tag on the computing device . Additionally, the computing device  may encode the authorization request packet in any barcode format suitable for capture by the mobile device . For example, the computing device  may encode the authorization request packet as a 2D barcode such as a Quick Response (QR) code, or any other appropriate barcode format. The mobile device  may capture or otherwise receive the authorization request packet from the computing device , and retransmit the authorization request packet to the access control server  for authorization.","In block , the computing device  determines whether an authorization response packet has been received from the access control server . In some embodiments, the authorization response packet comprises the nonce generated by the computing device , but later re-encrypted by the access control server . Additionally, as discussed above, the access control server  uses the mobile device  as a proxy for transmission of the authorization response packet. To do so, the computing device  may use the camera  and\/or the NFC circuitry  to capture and\/or receive the authorization response packet from a barcode or NFC tag generated by the mobile device . Upon determining that the authorization packet has been received from the access control server  using the mobile device  as a proxy, the method  advances to block .","In block , the computing device  decrypts the authorization response packet to obtain the nonce. To do so, the computing device  uses the encryption key  or a corresponding encryption key retrieved from the secure memory . Additionally or alternatively, the computing device  may decrypt the authorization response packet using one or more encryption keys stored in the memory  and\/or the data storage device  of the computing device . It should be understood that the computing device  may use any suitable decryption technique to decrypt the authorization response packet and obtain the nonce. For instance, the computing device  may use one or more symmetric key algorithms (i.e., shared keys), asymmetric key algorithms (i.e., public\/private key pair), or any other suitable encryption mechanism to decrypt the authorization response packet and obtain the nonce. After decrypting the authorization response packet and obtaining the nonce, the method  advances to block .","In block , the computing device  may determine whether the nonce obtained from the decrypted authorization response packet matches the nonce originally generated by the computing device . In some embodiments, the originally generated nonce may be retrieved from the secure memory , the memory , or the data storage device . If the computing device , at block , determines that the nonce obtained from the decrypted authorization response packet matches the nonce that was originally generated by the computing device , the method  advances to block  in which access is permitted to the computing device . If, however, the computing device  at block  determines that the nonce obtained from the decrypted authorization response packet does not match the nonce that was originally generated by the computing device , the method  advances to block  in which access is denied to the computing device .","As discussed above, the mobile device  is used as a proxy by the computing device . To do so, as shown in , the mobile device  may execute a method  for extending distributed logon services to the off-line computing device . The method  begins with block  in which the mobile device  determines whether the user is attempting to access the computing device . In such embodiments, the mobile device  may determine that the user is attempting to access the computing device  based on receiving an input from one or more of the peripheral devices  indicative of a request for access. For example, the mobile device  may determine that the user has pressed one or more keys of the mobile device, launched one or more applications for execution on the mobile device , and\/or performed any other action indicative of the user's desire to access the computing device . If the mobile device , at block , determines that the user is attempting to access the computing device , the method  advances to block .","In block , the mobile device  determines whether an authorization request packet has been received from the computing device . As discussed above, the computing device  may generate an authorization request packet in response to determining that the user is attempting to access one or more components, functions, and\/or programs of the computing device . The mobile device  may use the camera  and\/or the NFC circuitry  to capture and\/or receive the authorization request packet from a barcode or NFC tag generated by the computing device . After determining that an authorization request packet has been received, the method  advances to block .","In block , the mobile device  obtains user credentials from the user requesting access to the computing device . For example, the mobile device  may obtain a user name and a password of the user in some embodiments. Additionally or alternatively, in other embodiments, the mobile device  may obtain a personal identification number (PIN) from the user. The user credentials may be obtained from the user via one or more of the peripheral devices  (i.e., keypads, touch screens, voice recognition components, etc.) of the mobile device . In block , the mobile device  may also generate additional security data in some embodiments to be associated with the access request of the user. For example, the mobile device  may generate a location (i.e., latitude and longitude, city, state, country, etc.) of the mobile device . In such embodiments, the peripheral devices  of the mobile device  may also comprise location circuitry (i.e., Global Positioning System (GPS) circuitry, RF triangulation circuitry, etc.) for determining a location of the mobile device . Additionally or alternatively, the mobile device  may generate the date and\/or time that the user requested access to the computing device .","In block , after obtaining the user credentials and any other security data, the mobile device  transmits the authorization request packet received from the computing device  along with the user credentials and security data to the access control server . In such embodiments, the mobile device  transmits the authorization request packet, user credentials, and any security data to the access control server  over the network . The method  then advances to block .","In block , the mobile device  determines whether an authorization response packet has been received from the access control server  over the network . If the mobile device  determines that an authorization response packet has been received from the access control server , the method  advances to block .","In block , the mobile device  may generate an NFC tag or a barcode comprising the authorization response packet. In such embodiments, the mobile device  may encode or otherwise convert the authorization response packet into the NFC tag or the barcode. It should be understood that the NFC tag generated by the mobile device  may embodied as either a physical NFC tag or a \u201csoft\u201d NFC tag on the mobile device . Additionally, the mobile device  may encode the authorization response packet in any barcode format suitable for capture by the mobile device . For example, the mobile device  may encode the authorization response packet as a 2D barcode such as a Quick Response (QR) code, or any other appropriate barcode format. The computing device  may capture or otherwise receive the authorization response packet from the mobile device .","Referring now to , in use, the access control server  may execute a method  for extending distributed logon services to the off-line computing device . The method  begins with block  in which the access control server  determines whether an authorization request packet has been received from the computing device . In some embodiments, the authorization request packet comprises the OTP generated by the computing device , the nonce generated by the computing device , and the unique identifier of the computing device . As discussed above, the computing device  uses the mobile device  as a proxy for transmission of the authorization request packet to the access control server . As such, the access control server  may determine whether the mobile device  retransmitted the authorization request packet over the network . Upon determining that the authorization request packet has been received from the computing device  using the mobile device  as a proxy, the method  advances to block .","In block , the access control server  decrypts the authorization request packet using an encryption key to obtain the OTP, the nonce, and the unique identifier of the computing device . It should be understood that the encryption key used to decrypt the authorization request packet corresponds to the encryption key that was used to encrypt the authorization request packet. The method  then advances to block .","In block , the access control server  determines whether the user should be provided access to the computing device . To do so, the access control server  verifies the OTP and the unique identifier of the computing device  obtained from the authorization request packet. In some embodiments, the access control server  may include a security engine (SE) or other secure execution environment. The SE or other secure execution environment of such embodiments may use the same or a corresponding cryptographic algorithm and seed to generate an OTP on the access control server  that corresponds to the OTP generated by the computing device . As such, using the platform identifier, the access control server  may determine whether the OTP obtained from the authorization request packet matches the OTP generated on the access control server . In some embodiments, the access control server  may determine that the user should not be permitted to access the computing device  if the OTP obtained from the authorization request packet does not match the OTP generated by the access control server . If, however, the OTP obtained from the authorization request packet matches the OTP generated by the access control server , the access control server  may determine that the user should be provided access to the computing device .","Additionally, as discussed above, the mobile device  may transmit the authorization request packet along with the user credentials obtained from the user. As such, the access control server  may also verify that the user is authorized to access the computing device . In operation, the access control server  may compare the user credentials to one or more corresponding user credentials stored in the data storage device . For example, the access control server  may compare a user name and a password inputted by the user on the mobile device  and later received by the access control server  with a corresponding user name and password stored in the data storage device . In some embodiments, the access control server  may determine that the user should not be permitted to access the computing device  if the user credentials obtained by the mobile device  do not match the user credentials stored in the data storage device  of the access control server . In other embodiments, the access control server  may determine that a user should be permitted to access the computing device  if the user credentials obtained by the mobile device  match the user credentials stored in the storage device  of the access control server .","Additionally or alternatively, as previously discussed, the mobile device  may also transmit additional security data associated with the access request to the access control server . In operation, the access control server  may determine whether the additional security data complies with one or more access security policies set by an administrator of the computing device . For example, the access control server  may determine whether a particular user is permitted to access the computing device  at a specific time of day, from a specific location, within a reference proximity of the computing device , or based on any other access security policy corresponding to the usage of the computing device .","Returning back to block , if the access control server  determines that the user should not be permitted to access to the computing device , the method  loops back to block . If, however, the access control server  determines that the user should be permitted to access to the computing device , the method  advances to block .","At block , the access control server  re-encrypts the nonce generated by the computing device  in response to determining that the user is authorized to access the computing device . In operation, the access control server  re-encrypts the nonce using an encryption key to generate an authorization response packet. It should be understood that the encryption key used to re-encrypt the nonce may be a corresponding key or a different key than the encryption key used to encrypt the OTP, the nonce, and the unique identifier of the computing device . The method  then advances to block .","In block , after re-encrypting the nonce, the access control server  transmits the generated authorization response packet to the computing device . As discussed above, the access control server  transmits the authorization response packet to the computing device  using the mobile device  as a proxy. To do so, the access control server  transmits the authorization response packet to the mobile device  over the network . Thereafter, the mobile device  shares the generated authorization response packet with the computing device  using a barcode and\/or one or more NFC data exchanges.","While the disclosure has been illustrated and described in detail in the drawings and foregoing description, such an illustration and description is to be considered as exemplary and not restrictive in character, it being understood that only illustrative embodiments have been shown and described and that all changes and modifications consistent with the disclosure and recited claims are desired to be protected."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention described herein is illustrated by way of example and not by way of limitation in the accompanying figures. For simplicity and clarity of illustration, elements illustrated in the figures are not necessarily drawn to scale. For example, the dimensions of some elements may be exaggerated relative to other elements for clarity. Further, where considered appropriate, reference labels have been repeated among the figures to indicate corresponding or analogous elements.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 3","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 4","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 5","FIGS. 1 and 2"]}]},"DETDESC":[{},{}]}
