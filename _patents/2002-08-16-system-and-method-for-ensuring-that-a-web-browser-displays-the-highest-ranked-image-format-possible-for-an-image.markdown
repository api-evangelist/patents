---
title: System and method for ensuring that a web browser displays the highest ranked image format possible for an image
abstract: A system and method for ensuring that a web browser displays the highest ranked image format possible for an image is provided. In response to a request from a web browser for a dynamic web page, computer-executable code is integrated with the dynamic web page. The computer-executable code is programmed to determine web browser configuration information and request an image according to a set of image formats which are ranked according to ranking criteria and the web browser configuration information. The modified dynamic web page is sent to the web browser. A request for an image is received from the web browser which executes the computer-executable code. The image request identifies the image format for the image selected. The requested image is generated according to the indicated image format and sent to the web browser for display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07769895&OS=07769895&RS=07769895
owner: Corda Technologies, Inc.
number: 07769895
owner_city: Lindon
owner_country: US
publication_date: 20020816
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is a continuation-in-part of U.S. Patent Application Ser. No. 60\/313,436, filed Aug. 17, 2001, for \u201cBest Image Fallback,\u201d with inventors Mardell Cheney, Neal Williams, and Nathan Pilling, which is hereby incorporated by reference.","1. Field of the Invention","The present invention relates generally to the field of software web browsers and images displayable therein. More specifically, the present invention relates to a system and method for ensuring that a web browser displays the highest ranked image format possible for an image.","2. Description of Related Background Art","The World Wide Web continues to become mainstream and is used by more and more people each day. In fact, publishers of news and other information content often consider supporting and maintaining a website as vital to their business. A single website may be visited thousands of times a day. Each visit includes a request for a web page from a client web browser.","While standard protocols are used for communication between the web browsers and the web server implementing the web site, the web browsers (or simply browsers) may vary greatly. Web browsers are produced by various vendors. Generally, all browsers support basic image display functionality. For example, virtually all browsers support GIF (Graphic Interchange Format) and JPEG (Joint Photographic Experts Group). While some image formats such as PNG (Portable Network Graphics), are supported in certain browsers but not in others.","However, other image formats are unsupported by the browser directly. Instead, a browser may allow for a plug-in to be loaded to support image formats such as SVG (Scalable Vector Graphics), Macromedia's\u00ae Flash, and the like. These image formats may be of higher quality, include different interactive aspects, or may be new emerging technologies.","Developers for the web site desire to produce web pages which have mass appeal, meaning virtually all users who come to the web site can view the content of the website. Therefore, although the developers may prefer to use higher quality or more advanced image formats, the developers are conventionally forced to develop web pages for the lowest common denominator among the user's browsers to avoid disappointing any users.","To resolve this problem, web page developers may place computer-executable redirection code such as JavaScript in their web pages. Once a web page is read or interpreted by the browser, the computer-executable redirection code detects which image formats are supported by a user's browser. Based on the image formats supported by the browser, the web page redirects the user to another web page which provides the same image(s) but in a supported image format preferred by the developer.","Alternatively, the web page may be programmed to display a frame within which another page is loaded containing the image in a supported format such as GIF. This technique is referred to as \u201cframing\u201d.","Unfortunately, redirection has limitations. Redirection causes a delay as the other web page is loaded which annoys some users. Redirection requires maintenance of a separate web page for each image format available for redirection. Similarly, framing requires that separate web pages be maintained. This maintenance can significantly magnify a developer's workload if a new web page is added or updated on the website.","The maintenance overhead for multiple versions of web pages can increase exponentially. For example, a web page including multiple images in different formats may require that a separate web page for each combination of images having different formats be created. These combinations range from a web page in which all the images are of an advanced format to one in which all the images are of the most basic format.","The maintenance overhead problem is compounded when a website has content which changes rapidly or is produced on the fly. For example, new websites may add or change several hundreds of images in very short time periods depending on the nature of the news. If new web pages are required to support redirection for images in a number of formats, creating and maintaining these website may be impossible, or at least highly susceptible to errors.","In addition, different browser types may require different sets of computer-executable redirection code to detect which image formats are supported. For example, Microsoft's Internet Explorer\u00ae browser does not allow use of JavaScript to determine which plug-ins are loaded and enabled. Instead, VBScript (Visual Basic Script) or JScript must be used. Thus, the developer must include both VBScript or JScript and JavaScript in the web page because the developer does not know which type of browser will request the web page. This extra code increases the size of the web page and can slow performance for users.","Even though a browser includes a certain plug-in, the plug-in may not be enabled. Most browsers allow the user to determine which plug-ins are enabled. Therefore, the computer-executable redirection code must include code to determine whether an available plug-in is also enabled.","However, a principal limitation of redirection is the development overhead placed on web page developers. The developers must either include the redirection code in each web page with images, use the lowest common denominator for the image formats, or exclude certain users from access to images on the web pages.","Accordingly, what is needed is a system and method that overcomes the problems and disadvantages of the prior art. In particular, the system and method should allow a developer to develop one version of a web page which includes computer-executable code that ensures that the most preferred format for images on the page is used to display the images without using redirection. In addition, the system and method should automatically determine whether the most preferred image format is supported and enabled in a particular user's web browser and automatically request images on the web page in the most preferred image format which is supported and enabled. Furthermore, the system and method should provide an application programming interface which allows a web page developer to implement the system and method using a minimal amount of computer-executable code. The system and method should allow for display of the most preferred image format for both static and dynamically generated images. And, the system and method should automatically display images of the web page in the next most preferred image format without any additional code written by the web page developer.","The present invention relates to a system and method for ensuring that a web browser displays the highest ranked image format possible for an image that addresses all of the above-identified problems and disadvantages.","In one embodiment, a request from a web browser for a dynamic web page causes computer-executable code to be integrated within the dynamic web page. The computer-executable code is programmed to determine web browser configuration information and request an image according to the web browser configuration information and a set of image formats. The set of image formats are ranked according to ranking criteria. Next, the dynamic web page, including the computer-executable code, is sent to the web browser which made the request. The dynamic web page may be in HTML (Hyper Text Markup Language), DHTML (Dynamic Hyper Text Markup Language), XML (eXtensible Markup Language) or any other browser readable format.","An image request is received from the web browser which executes the computer-executable code of the dynamic web page. The image request comprises an indicator of the image format selected based on the web browser configuration information and the ranking criteria. The web browser configuration information may include information such as the type and version for the web browser, which plug-ins are installed, which plug-ins are enabled, which plug-in functionality is enabled, and the like. Next, the requested image is generated according to the indicated image format. The generated image is sent to the web browser for display. The image may be an interactive image.","In one aspect of the invention, the computer-executable code may include computer-executable detection code to detect web browser configuration information. The computer-executable code may also include computer-executable code to request the image according to a highest ranked image format which is displayable in the web browser according to the web browser configuration information. If the highest ranked image format is not displayable by the web browser, the computer-executable code is programmed to request the image according to an image format which is displayable and ranked subsequent to, or next highest to, the highest ranked image format within the ranked set of image formats according to the ranking criteria.","In one aspect of the invention, a set of image formats ranked according to ranking criteria is accessed. At least two image files which represent an image according to different image formats within the set of ranked image formats is generated. Computer-executable code for determining a user's web browser configuration information and for selecting one of the image files according to ranking criteria and web browser configuration information is generated. This computer executable code is integrated within a dynamic web page.","In another aspect of the invention, an application programming interface for detecting a web browser's configuration information and displaying images in an image format selected from a set of ranked image formats is provided. The selected image format is supported by the web browser configuration information and selected according to ranking criteria.","A software object is instantiated by calling functions of the application programming interface. The functions may be called by a web application or script. The software object is configured for use by an image server to provide a customized image. The software object is also configured to designate an image format from the set of ranked image formats as a preferred image format.","An application programming interface function is called for automatically generating browser-specific executable code to determine whether a user's web browser supports the preferred image format indicated by the software object.","The browser-specific executable code is programmed such that when the preferred image format is unsupported, a supported image format ranked next highest to the preferred image format is automatically selected. Accordingly, the browser-specific executable code requests an image from the image server in the supported image format which is ranked next highest to the preferred image format.","In certain embodiments, in response to a request for a dynamic web page, web browser configuration information is determined for the web browser initiating the request. This determination may be made by a web server or other software module.","Next, computer-executable code is integrated with the dynamic web page, the computer-executable code is programmed to request an image according to a set of image formats which are ranked according to ranking criteria and the web browser configuration information. In certain aspects, the computer-executable code is further programmed to request the image based on an image fallback identifier associated with the request in addition to the web browser configuration information and ranking criteria.","The dynamic web page, including the computer-executable code, is sent to the web browser which made the request. An image request is received from the web browser which executes the computer-executable code of the dynamic web page. The image request comprises an indicator of the image format selected based on the web browser configuration information, the ranking criteria, and\/or image fallback identifier. Next, the requested image is generated according to the indicated image format and sent to the web browser for display.","In one embodiment, a system is provided which includes a web server that generates computer-executable code based on a web browser identifier. The computer-executable code is integrated into a dynamic web page which is requested by a web browser. The computer-executable code is programmed to determine configuration information for the web browser and to request an image in an image format selected based on the configuration information and selected from a set of image formats which are ranked according to ranking criteria. The system also includes an image server in communication with the web server such that a request for an image from the web browser causes an image to be generated in the requested image format and sent to the web browser for display.","Reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, appearances of the phrases \u201cin one embodiment\u201d or \u201cin an embodiment\u201d in various places throughout this specification are not necessarily all referring to the same embodiment.","Furthermore, the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments. In the following description, numerous specific details are provided, such as examples of programming, user selections, network transactions, database queries, database structures, etc., to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, data sources, variables, parameters, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Referring now to , a logical diagram illustrating components of one embodiment for ensuring that a web browser displays the highest ranked image format possible for an image. The embodiment includes a web server . Web servers  are well known in the art and generally comprise software which serves up, generates, or transfers, web pages across a network in response to requests for the web pages from web browsers  (also referred to herein as browsers ). Such web servers  are also well known to have or access various types of computer-readable media. Examples of web servers  include Apache, from the Apache Software Foundation, an organization of developers, www.apache.org, IIS (Internet Information Server) from Microsoft\u00ae, of Redmond Wash., Iplanet\u2122 web server enterprise edition, from Sun\u00ae Microsystems of Santa Clara Calif., and the like.","This embodiment also includes a standalone image server . Those of skill in the art recognize that the web server  and image server  may be integrated into one software application. Alternatively, the web server  and image server  may execute on the same or different computer systems.","According to one embodiment, a process for ensuring that the highest ranked image is displayed in the web browser  begins with a web page request . The web page request  is received by the web server . The web page request  requests that a dynamic web page  residing on the web server  be sent to the browser .","Preferably, a dynamic web page  is one formatted according to the HTML (Hyper Text Markup Language) protocol. Alternatively, a dynamic web page  may be formatted according to DHTML, XML, the like, or a combination of these. Conventionally, dynamic HTML or a dynamic web page  refers to a web page  which is generated on the fly in response to a web page request . Today, a dynamic web page  refers to technologies for changing a web page  after the web page  is downloaded to the browser . (See http:\/\/www.webreference.com\/dhtml\/about.html)","A dynamic web page  is one which includes computer-executable code  which is executed by a computer (not shown) which executes the web browser . The dynamic web page  allows the content or appearance of a web page to change after the web page is downloaded. (See www.jessett.com\/web sites\/dhtml\/index.shtml.) The computer-executable code  is written in a language readable by the browser  and may be JavaScript, VBScript (Visual Basic Script), JScript, Java code, and other similar scripts and\/or languages which allow the browser  to change aspects of a web page as the web page is being displayed or interacted with by a user.","In one embodiment, the web page request  initiates generation of the dynamic web page  by the web server . The web server  executes a software program (not shown, also known as a web application) embodied in a script file (See ) stored on the web server . The web page request  identifies the script file to be executed.","The software program may dynamically generate the dynamic web page  and integrate the computer-executable code  into the generated dynamic web page . The software program may use parameters from the web page request  to alter the appearance and\/or content of the generated dynamic web page .","If the requested dynamic web page  is a pre-existing page which includes images, based on the web page request , the web server  may modify the requested dynamic web page  by adding computer-executable code . The computer-executable code  is preferably integrated with the existing web page elements (not shown) for the dynamic web page . Preferably, the computer-executable code  is added to the front of the dynamic web page  such that the computer-executable code  is executed essentially first by the web browser .","The computer-executable code  includes web browser detection code  and image format request code . The web browser detection code  is a segment of code for determining characteristics of the web browser  which executes, or reads, the web browser detection code . Certain characteristics may indicate which image formats the web browser  supports or is capable of displaying. Other characteristics comprise web browser configuration information (discussed in detail in relation to ).","Preferably, the web browser detection code  includes a number of boolean variables which are set as different characteristics of the browser  are evaluated. If a characteristic matches the expected value, the boolean variable is set to TRUE. Otherwise, the boolean value is set to FALSE.","The image format request code  preferably includes one or more conditions which change the content of the dynamic web page  based in part on the boolean variables (characteristics of the browser ). The content is changed such that image requests  within the page  request images in a preferred image format  or a next preferred image format (not shown) depending on the values for the boolean variables. Of course, the image requests  may be originally defined to request the images in a basic format, such as GIF which is supported by virtually all web browsers .","The preferred image format  is preferably one of a plurality of image formats within a set of image formats . For example, in the illustrated embodiment, the preferred image format  may be Flash, a proprietary format implemented through development tools provided by Macromedia, Inc. of San Francisco Calif. The preferred image format  is defined by a developer of the dynamic web page . Other image formats within the set  may include SVG, PNG, GIF, JPEG (Joint Photographic Experts Group), TIFF (Tagged Image File Format), BITMAP, and others. While these image formats are listed specifically, those of skill in the art readily understand that substantially any new image format may be included within the set .","Preferably, the set of image formats  are ranked according to ranking criteria . The ranking criteria  may include any criteria for ordering the image formats in some fashion. Generally, the ranking criteria  orders the set of image formats  according to a preference. The preference may be one of a developer or a user. The image formats may be ranked numerically by associating a rank  such as a number with each image format. Alternatively, only one or two image formats may be ranked by association with a rank . In one embodiment, ranking criteria  comprises a data structure such as an array associating the image formats with ranks . Alternatively, the ranking criteria  may comprise an abstract ordering of the image formats implemented by how computer-executable conditions testing for support of an image format are organized.","Referring still to , in the depicted embodiment, the lowest number represents the highest ranked image format (indicated by arrow ) and the next lowest number  represents the highest ranked image format. The ranking criteria  provides a sequence for the image formats. Thus, the next highest ranked image format is subsequent in the sequence to the highest ranked image format . The ranking of the other image formats proceeds in like manner such that the highest number represents the lowest ranked image format. Of course, the highest ranked image format  may not be the same as the preferred image format . The ranking criteria  may rank the preferred image format  first, although this is not a requirement.","Other ranking criteria  may be used, including ranks  based on quality, average size for images in the image format, popularity, level of interactivity provided, web page developer preference, user preference or the like. In one embodiment, a developer of the dynamic web page  defines the ranking criteria . Alternatively, a user of the web browser may be allowed to define the ranking criteria .","While a numerical ranking criteria  is used in this specification for clarity, references to the \u201chighest ranked image format,\u201d \u201cnext highest ranked image format,\u201d \u201cpreferred image format,\u201d and \u201cnext preferred image format\u201d will be understood by those of skill in the art to refer to ranked image formats regardless of the ranking criteria  used whether numerical, alphabetical, or the like.","The image format request code  is programmed to request an image  according to the preferred image format . If the preferred image format  is not supported by the web browser , the image format request code  requests an image  in an image format that is ranked subsequent, and closest, to the preferred image format  in the set of image formats .","The web browser  integrates the computer-executable code  into the dynamic web page . The dynamic web page  is sent to the web browser . The web browser  includes a set of displayable image formats . The set of displayable image formats  are the image formats which are currently supported by the web browser .","The web browser  reads the web page  and executes the computer-executable code . Based on the set of displayable image formats  and other web browser configuration information (discussed in more detail in relation to ), the computer-executable code  selects an image format from the set of displayable image formats . An indicator  of the image format selected (indicated by arrow ) is included in the image request . If the preferred image format  is in the set of displayable image formats , the preferred image format  is selected .","Otherwise, the next image format, according to the ranking criteria , which is ranked subsequent to the preferred image format , is selected. Alternatively, the image format ranked next highest to the preferred image format  is selected. Generally, the image format ranked next highest may also be the next preferred image format.","Referring still to , suppose, the preferred image format  is Flash. However, the set of displayable image formats  does not include Flash. Among the set of displayable image formats , PNG and GIF are within the set of image formats . According to the ranking criteria , PNG has a rank of three and GIF has a rank of four. Therefore, the image format request code  generates an image request  which includes an indicator  set for the PNG format.","The image request  is preferably received by an image server . The image request  may include the address, such as a URL (Uniform Resource Locator), for the image server . As mentioned above, the image server  may be physically local or remote in relation to the web server . Preferably, the image server  processes the image request  and generates an image  in the format indicated by the indicator . The generated image  is sent to the web browser .","The web browser  displays the image  and any other elements of the dynamic web page . Preferably, the image  is interactive, meaning that the image  responds to actions of a user. The image  may include user interface controls (not shown), an image map, and\/or other features which allow for interaction between a user and the image . Generally, these interactive elements, including image maps, are pre-generated along with the corresponding image  and included as part of the dynamic web page . Alternatively, in certain browsers , interactive elements such as image maps are loaded dynamically when the web page  is displayed.","For example, a region of the image  may change certain colors when a user passes a mouse cursor over the region. Similarly, passing the mouse cursor over the region may cause a pop-up window to display certain information. Alternatively, clicking a mouse over a certain portion may cause a new web page to display. Of course, there are various other interactive features which an image  may provide and which are well known to those of skill in the art.","Preferably, the image formats are ranked according to quality. While quality is subjective, the ranking may involve factors such as the visual quality of the image itself, the degree of interactive functionality provided by the image, and the like. Quality ranking may also involve the type of image format. For example, bitmapped images are different from vector based images. Generally, vector based image formats provide a higher quality image and are adaptable to different sizes for the display area for an image.","The dynamic web page  may include other image requests  which are generated in like manner to the one discussed above. Preferably, the image server  generates images  in image server formats  which correspond to those within the set of image formats . Alternatively, the image server  may generate images  in formats  which are a subset of the set of image formats .","Referring now to , a block diagram illustrates data components of web browser configuration information . As discussed above, the web browser configuration information  is information gathered by the computer-executable code  (See ) integrated with a dynamic web page  (See ). As mentioned, a developer of a web page  which includes images  (See ), both interactive and non-interactive, does not know what kind of web browser  (See ) a user may be using to view the web page .","Preferably, the web browser configuration information  includes the set of displayable image formats  (See ). In one embodiment, the set of displayable image formats  is determined by configuration information made available by the web browser . The browser  may allow computer-executable code  to evaluate properties and attributes of the browser . Certain properties may include a list or array of image formats supported by the web browser . For example, basic image formats supported may be listed in an array made available as a property of the browser .","Other displayable image formats  are supported in a browser  through use of plug-ins. Plug-ins are well known. Plug-ins may be installed or uninstalled as needed to extend the functionality of the browser .","Most browsers  allow computer-executable code  to query the browser  to determine which plug-ins are installed. The browser  may provide access to an array or other data structure which indicates installed plug-ins. The array may comprise software objects which provide the features and functions for the plug-ins installed on the browser . By checking for the existence of the software object, the installation of the plug-in can be verified.","By comparing the plug-ins installed with the plug-ins required to support the image formats of the set of image formats  (See ), the browser detection code  (See ) determines which image formats are supported and which are not. Preferably, the browser detection code  begins by querying for the plug-in associated with the highest ranked image format  (See ). If the associated plug-in is not installed, the browser detection code  queries for the plug-in associated with the next highest ranked image format. This querying process may continue until each of the image formats in the set  has been evaluated. Alternatively, the querying process may stop once a plug-in for the preferred image format  (See ) is identified as installed in the browser . As each plug-in installed is identified, the browser detection code  may set a boolean variable for use by the image format request code  (See ) to request an image  of the appropriate format.","Conventionally, although a plug-in is installed, the plug-in may not be enabled. A user may intentionally disable the plug-in. The user may disable a plug-in for security reasons, bandwidth reasons, or the like. In , the \u201cX\u201d  over the \u201cFlash\u201d format illustrates that the flash plug-in is installed but has been disabled. Alternatively, the browser  may disable a plug-in due to security settings, anti-virus precautions, plug-ins which repeatedly causes errors, or the like.","Therefore, the browser detection code  may include code for determining that installed plug-ins are also enabled. This may be done by using a simple attribute test condition for a software object implementing the plug-in. Of course, enabled plug-ins may also be represented and detected using various other methods.","Of course, web browser configuration information  may include other information beyond that illustrated in . In certain embodiments, other web browser configuration information  may be evaluated to determine which image formats are supported. For example, the browser type  and browser version  may be evaluated.","A browser type  is an indicator of the type of browser. For example, browser types  include Internet Explorer, Netscape, Opera, Mozilla, and the like. A browser version  is generally the version number associated with the browser . Version numbers generally indicate how many major and minor versions of software have been released. Typically, version numbers increase as a software application ages and matures.","As new image formats are introduced and adopted, a quick check of the browser type  and\/or browser version  may be sufficient to determine whether an image format is supported. Certain browser types  and browser versions  are known to support certain image formats. For example, all Internet Explorer browsers having a version of 4.01 and Netscape browsers having a version of 4.0 or greater are known to support the PNG image format. Thus, the browser detection code  may evaluate the browser type  and\/or browser version  alone to determine whether certain image formats are supported.","Referring now to , components of a web page request  are illustrated. Generally, a web page request  includes a page identifier  and a web browser identifier . The page identifier  is a URL which includes an address for the web server  (See ) and an identifier of the script file (See ) on the web server  to be executed. Alternatively, the page identifier  may indicate an application executing on the web server  configured to service the web page request .","The browser identifier  is generally a string which includes text identifying the browser type  and browser version . This string is known as a UserAgent string. An example of a UserAgent string follows: \u201cMozilla\/4.0 (compatible; MSIE 6.0; Windows 98; Q312461).\u201d In this example, \u201cMozilla\u201d is the browser type  and \u201c4.0\u201d is the browser version . Of course, the different types and versions of web browsers  (See ) may provide a different UserAgent strings. However, by evaluating the UserAgent string the browser detection code  (See ) may determine which image formats are supported by default for a particular browser .","Referring now generally for , A, and B, in a preferred embodiment, the web page request  causes the web server  to execute a script file (See ). The script file includes computer code written by a developer to generate a desired dynamic web page . Preferably, the script file includes instructions (not shown) which determine how rigorously the browser detection code  evaluates the features and capabilities of the requesting browser .","Preferably, the script file instructions include an image fallback identifier (not shown). An image fallback identifier is a variable which is set in the script file. The computer executable code  generated may vary based on the value of the image fallback identifier.","In one embodiment, the image fallback identifier may be set to the values of \u201cSTRICT,\u201d \u201cLOOSE,\u201d or \u201cNONE.\u201d If the value is \u201cSTRICT,\u201d the browser detection code  will attempt a plurality of means to determine which image formats are supported and enabled in the requesting web browser . In addition, if the value is \u201cSTRICT,\u201d the image format request code  is generated to ensure that an image format supported by the browser  is requested. Thus, an image is essentially guaranteed to be displayed.","Furthermore, the image format request code  includes conditions and other code to ensure that either the preferred image format  is requested, or that the image format ranked subsequent and closest to the preferred image format  is requested, as discussed above. In other words, where the image formats are ranked based on quality of the image format with the highest ranking being the highest quality, setting the image fallback identifier to \u201cSTRICT\u201d ensures that the image of the web page  will be displayed and that the quality of the image displayed will be the best quality supported and enabled by a user's web browser .","In addition, a developer may set the image fallback identifier to \u201cLOOSE.\u201d In this case, the browser detection code  generated will make a less rigorous attempt to determine which image formats are supported and enabled in the requesting web browser  than if the image fallback identifier were set to \u201cSTRICT.\u201d Instead, the browser detection code  will determine certain web browser configuration information , after which the code  will anticipate the displayable image formats . For example, the code  may simply process the browser identifier . Based on the browser type  and\/or browser version , the code  will anticipate that the browser  supports the preferred image format .","Thus, the image format request code  may request an image  in the preferred image format . If the browser detection code  incorrectly anticipated that the preferred image format  is supported, the image request  may result in a broken image icon rather than the intended image . Alternatively, if the image  is not supported, the image format request code  may include a request to download a plug-in or other software module to support the preferred image format  or highest ranked image format . However, if the user interrupts or refuses to install the necessary plug-in or software, a broken image icon may be displayed.","If a developer sets the image fallback identifier to \u201cNONE,\u201d no computer-executable code  is generated and the dynamic web page  is sent to the web browser . In this case, the dynamic web page  will request images in the image format specified in the dynamic web page , rather than having the requested image formats modified by the computer-executable code . If the image formats are unsupported, a user may get an error message, an offer to download a necessary plug-in, or a broken image icon.","Referring now generally to , A and B and specifically to , a flowchart of a method  for generating computer-executable code  based on a request  from a particular web browser  is illustrated. As mentioned above, certain web browsers  only support a particular format of computer-executable code , others only support certain aspects of a particular format, and still others do not support any computer-executable code .","For example, an Internet Explorer browser  does not fully support computer-executable code  written in JavaScript which is supported by most other types of browsers . The Internet Explorer browsers  fully support JScript or VBScript. However, accurate plug-in detection requires the use of VBScript. Thus, to accurately determine the displayable image formats , such as plug-ins, the computer-executable code  should be written in VBScript. Other browsers  may be configured to ignore computer-executable code . Alternatively, the feature allowing for execution of computer-executable code  may be intentionally disabled by a user.","Therefore, to accommodate these differences the method  is provided. Generally, the method  is implemented in a script file (See ) executed in response to a web page request . First, a determination  is made whether to examine the browser identifier  provided in the request . If not, a plurality of computer-executable code  sets are generated . A computer-executable code  set may be generated for substantially each type of web browser . For example, computer-executable code  may be generated in JavaScript, VBScript, and in plain HTML such that regardless of the type of browser  some form of supported computer-executable code  is provided.","If the browser  is to examine the browser identifier , the next step  is to interpret the browser identifier . As discussed above, generally interpretation of the browser identifier  identifies the browser type  and\/or browser version . Based on the browser type  and\/or version , the web server  may generate  computer-executable code  specific to the type of browser . For example, where the browser type  is Internet Explorer, a single set of computer-executable code  in VBScript may be generated.","Next, in certain embodiments, the image fallback identifier is evaluated . If the image fallback identifier is \u201cSTRICT,\u201d browser detection code  is generated  which uses one or more conditions to determine the set of displayable image formats  for the browser . Alternatively, if the image fallback identifier is \u201cLOOSE,\u201d browser detection code  is generated  which anticipates the set of displayable image formats  for the browser , based principally on the web browser identifier .","Referring now generally to , A and B and specifically to , a flowchart of a method  for requesting a supported image format is illustrated. Preferably, this method  is implemented in the image format request code . The image format request code  uses web browser configuration information  to make determinations in the method . As discussed above, browser type , browser version , the set of displayable image formats  or some combination of these may be used.","In one embodiment, the method  implements a series of conditions . The conditions  may be ordered according to the rank criteria . Thus, condition is evaluated to determine whether the highest ranked  or most preferred image format is supported. If the condition  evaluates to true, the dynamic web page  is modified to request  an image  in the image format corresponding the condition  executed and the method  stops. If the condition -evaluates to false, one or more subsequent conditions  are evaluated. If a condition -evaluates to true, the corresponding image format is requested -and the method  stops. For example, referring generally to , conditions -check to determine if image formats Flash, SVG, PNG and GIF are supported. The order of the conditions -corresponds to the order of the set of image formats  ranked by ranking criteria . If each of the conditions  evaluates to false, no image is requested  and a broken image icon is displayed. Generally, one of the conditions -will evaluate to true.","For example, most browsers  support the GIF format. Therefore, the \u201cDisplay GIF\u201d condition evaluates to true and a GIF image is requested . In certain embodiments, an image map (not shown) corresponding to the GIF image may be requested. An image map is well known in the art and provides limited interactivity when coupled with an image such as a GIF image. Thus, a GIF image coupled with an image map provides more interactivity than the GIF image alone. Of course, image maps may also be used with other formats such as JPEG, PNG, and the like.","Referring now to , a block diagram illustrates components of an alternative embodiment of the present invention. The embodiment of  performs substantially the same steps and includes similar process flow to that described in relation to . However, once a web server  receives a web page request , additional steps may be performed as illustrated in .","Conventionally, images  are being generated on-the-fly from dynamic data sources . A dynamic data source  refers to virtually any data source which is loaded and used as needed and changes with some regularity. Dynamic data sources  may be used due to the frequency of changes to the data. Alternatively, the size and configuration of the data may allow for such a high number of images  which may be produced that pre-generating and storing these images  is either inefficient or impractical. A dynamic data source  may include a database, a data file, an XML file, a web service, and the like.","Once the web server  receives the web page request  and the dynamic web page  includes images  produced from one or more dynamic data sources , the web server  communicates a dynamic data request  to an image server  for production of the image(s) . In response, the image server  caches data  from the dynamic data source . The image server  then sends a data identifier  back to the web server . The data identifier  associates the cached data  with the image  which will be requested and generated later.","In certain embodiments, the dynamic data request  includes an image fallback identifier (not shown). Based on the image fallback identifier, the image server  may also generate an image map (not shown). The image map is preferably also associated with the data identifier . If the fallback identifier is \u201cSTRICT\u201d, an image map may automatically be generated by the image server . If the fallback identifier is \u201cLOOSE\u201d, an image map may still be generated by the image server  in anticipation that the image map will be needed when the image  is requested.","The web server  receives the data identifier . Preferably, the data identifier  is incorporated into the computer-executable code  being generated. Specifically, the data identifier  is integrated with the image format request code . Thus, image requests  for the dynamically generated images  from dynamic data sources  include the data identifier . When the image server  receives the image request  including the data identifier , the image  is quickly generated because the data  is already cached in the image server .",{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 6","FIG. 1"],"b":["128","128","108"]},"A publishing module  allows a user to design, edit, and modify an image . The image  may be stored for later use in a variety of formats including Flash, SVG, PNG, GIF, and the like. The publishing module  includes a set of image formats . As in , publishing module  includes ranking criteria  associating a rank  with each image format.","Once, the image  is prepared for publication on a web server , the user may initiate a publication process. According to the publication process, the set of image formats  is accessed by the publishing module . Next, the publishing module  generates an image file  which stores a digital representation of the image . Preferably, a separate image file -is generated to represent the image  according to each of the image formats in the set of ranked image formats .","Next, computer-executable code  for determining a user's web browser configuration information  (See ) is generated. The computer-executable code  is programmed to select one of the image files -according to the ranking criteria  and web browser configuration information . This computer-executable code  operates in similar manner to that discussed in relation to , except that rather than requesting an image  be generated, an image file  is requested.","In addition, a plurality of computer-executable code  sets are generated because without a web page request  the type of web browser  which will make a request is undetermined. Generally, a computer-executable code  set is generated for substantially all of the types of web browsers .","Finally, the computer-executable code  is integrated into a web page  within which a developer desires to include the image  found in the file -. The web page  along with each of the image files -are stored on the web server . Now, when the web page  is accessed, a user's web browser  is evaluated to determine which image formats are supported. The web page  is modified to request images according the ranked image formats. The image requests  (See ) simply cause an image file -of a corresponding supported and selected image format to be retrieved for display.","Referring now to , in a preferred embodiment, the web page request  requests a dynamic web page  by causing the web server  to execute a script file . The script file includes computer code written by a developer to generate a desired dynamic web page . Preferably, the script file  includes instructions which invoke functions of an API  (application programming interface).","The API  is a library of functions which a developer may invoke to accomplish different tasks relating to integrating of an image  (See ) in a web page . The API  provides the functionality to produce the computer-executable code  for detecting a web browser's configuration information (See ) and displaying images in a supported image format. The image format being selected according to ranking criteria.","The API  is preferably computer object code. The API  may be written in various computer programming languages and\/or scripting languages including Java, JavaScript, COM (Component Object Model), .NET, PHP (PHP Hypertext Preprocessor), PERL (Practical Extraction and Reporting Language), C, C#, VB (Visual Basic), Cold Fusion, C++, and the like. In one embodiment, the API  is used to create a software object . The software object  itself may include functionality for generating the computer-executable code  discussed above. Alternatively, the software object  may communicate with an image server  (See ) which generates and returns the computer-executable code . Of course, while an image server  may be used in certain embodiments, those of skill in the art recognize that the software object  may communicate with practically any software module (remote or local) which is programmed to generate and return the computer-executable code .","The software object  is an object comprising attributes and methods for representing an actual or virtual object. Software objects  are well known in the art. Instructions in the script file  call functions of the API  to define an instance of the software object . Essentially any number of instances of a software object  may be created. Each instance may include different attribute  values. The process of defining a new instance of a software object  is referred to as instantiating a software object .","Generally, a new instance of a software object  is associated with a variable in the script file . Attributes may be set and methods may be invoked by reference to this variable. The setting of these attributes and calling of the methods is referred to as configuring the software object . Instructions for configuring the software object  are in the script file . Configuring the software object  allows a developer to control the \u201clook and feel,\u201d level of interactivity, a set of data used for the image  (See ), or the like.","In one embodiment, a developer (not shown) may set a presentation attribute . The presentation attribute  defines a template which will be used for generating an image . A data source  may also be set. The data source  defines where data, either static or dynamic, is located for use in generating an image . Setting the presentation attribute  and data source  configures the software object  for use by an image server  (See ) to provide a customized image (not shown).","A preferred format attribute  identifies the preferred image format  (See ) for the image . Setting the preferred format attribute  configures the software object  to use an image format from among the set of image formats  (See ).","An image fallback attribute  may also be set. An image fallback attribute  defines the image fallback identifier as described above in relation to , A, and B. Of course, other attributes may exist depending on the definition of the software object .","Once the software object  is configured, a function of the API  may be called. The function may use the software object  and the web browser identifier  (See ) to generate browser-specific executable code . Browser-specific executable code  (See ) may be substantially the same as the computer-executable code  discussed in relation to . However, the browser-specific executable code  may include code which is specific to the type of web browser  which made the web page request .","As discussed in relation to , the browser-specific executable code  is programmed such that when the preferred image format  (See ) is unsupported, a supported image format ranked next highest to the preferred image format  is automatically selected. The browser-specific executable code  further includes code to request the image  from an image server  (See ) in the selected image format  (See ).","The browser-specific executable code  may be combined with other HTML code  for the dynamic web page . The dynamic web page  is then sent back to the web browser . Of course, a single web page  may include multiple images in various formats.","Generally, the developer wants to impress the user and avoid disappointing a user with images which do not display, do not display properly, or are displayed in a poor quality format. The present invention allows a developer to develop the web page  with assurance that the computer-executable code  will request an image  (See ) which is closest in ranking to the preferred image format  (See ). The code required to provide this assurance may be automatically generated and determined for a developer based on configuring a few attributes of the software object  (See ). These benefits increase the efficiency and quality of web pages  (See ) developed by a developer.","Based on the foregoing, the present invention offers a number of advantages not available in conventional approaches. The present invention allows a developer to develop one version of a web page which includes computer-executable code that ensures that the most preferred image format is used to display images of a web page without using redirection. In addition, the present invention automatically determines whether the most preferred image format is supported and enabled in a particular user's web browser and requests images in the next most preferred image format without any additional code written by the web page developer. The system and method provides an application programming interface which allows a web page developer to implement the system and method using a minimal amount of computer-executable code.","While specific embodiments and applications of the present invention have been illustrated and described, it is to be understood that the invention is not limited to the precise configuration and components disclosed herein. Various modifications, changes, and variations apparent to those skilled in the art may be made in the arrangement, operation, and details of the methods and systems of the present invention disclosed herein without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Non-exhaustive embodiments of the invention are described with reference to the figures, in which:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
