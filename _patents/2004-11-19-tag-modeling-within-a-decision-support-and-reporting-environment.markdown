---
title: Tag modeling within a decision, support, and reporting environment
abstract: A system and methods for retrieving and presenting data in a tag-based component environment. The disclosed system provides an efficient mechanism for associating point and non-point data using selected modeling approaches to organize and reference the data. The modeling approaches provide the ability generate customized retrieval routines that support reusable components incorporating direct and indirect referencing techniques.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07689579&OS=07689579&RS=07689579
owner: Siemens Aktiengesellschaft
number: 07689579
owner_city: Munich
owner_country: DE
publication_date: 20041119
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of priority from U.S. Provisional Application No. 60\/526,891, filed on Dec. 3, 2003 entitled \u201cSystem and Methods for Retrieval, Presentation, and Synchronization of Real-Time Points\/Tags within a Class-Based Component and View Model\u201d.","The application generally relates to information management strategies and more particularly to a system and methods for providing scalable data collection, modeling, and access solutions.","Information retrieval and management within a business or organizational enterprise typically presents numerous technical issues associated with data integration and interpretation, especially when the data originates from multiple sources. For example, difficulties frequently arise when attempting to unify and\/or format large amounts of data for user visualization in terms of incurred administrative burden and complex programmatic logic. Additionally, integration of information from one or more sources configured to provide real-time data with other desired information presents accessibility, bandwidth, and latency problems limiting the flexibility and scalability of these systems as a whole.","A conventional computerized system associated with monitoring and controlling various operational parameters for components and sub-components of a manufacturing plant may be required to process large amounts of real-time and\/or near real-time data. This data, referred to as point data, may arise from independent sources with each source configured to provide substantially \u201craw\u201d or \u201cnative\u201d information at pre-defined intervals such as numerical values associated with various gauge\/monitor readings. Taken alone, this data may provide little or no context for its interpretation and require additional information to be associated with it to subsequently permit meaningful processing and analysis. It also may be desirable to capture, store and distribute the point data to other processing components requiring some degree of context be ascribed to the point data.","Modern industrial automation systems, supervisory control and data acquisition (SCADA) systems, general data acquisition systems and plant data historians represent but a few of the classes or categories of systems that may store and distribute real-time and\/or near real-time information in the form of point data. In such systems, a Tag represents a structural data element associated with point data arising from various components of the system which are made accessible to other components, systems, applications and\/or users. In general, point data is subject to dynamic change and is monitored, and reported through various operations and functions associated with processing the point data obtained from selected sources. In industrial automation and control systems, decision support and reporting capabilities may be provided based on Tag associated point data that is monitored over very short timeframes ranging in the sub-second to sub-minute range.","A limitation found in many conventional systems is that they provide only limited capabilities to access, interpret, and\/or manipulate tag-based point data collectively or in connection with other non-point data. Non-point data relates to a broad category of context-providing information associated with point data that, in one sense, extend the functionality and meaning of the point data. Non-point data may include descriptive and\/or attribute information characterizing the point data, as well as, other information such as limits, ranges, etc. In conventional systems, integral and flexible manipulation of tag-based point data and non-point data is restricted due to their inherent differences and properties.","A further difficulty encountered in conventional systems is the limited ability to integrate and relate tag-based data and non-tag-based data. Non-tag-based data may originate from numerous sources and relate to disparate aspects of an enterprise environment. For example, non-tag-based data may comprise data associated with conventional database applications\/environments and include transactional information, production data, business data, etc. Conventionally, attempts to integrate non-tag-based data with tag-based information may be hindered or prevented completely as a consequence of the underlying differences in structure and content between these data types. As a result, generating and implementing logical constructions or schema in which both tag-based data and non-tag-based data are integrally used is problematic in conventional systems. Such limitations limit the overall flexibility of the system and increase the difficulty of scaling such systems to complex, enterprise-level environments.","Another important consideration to the integral management of point data and non-point data relates to the recognition of differences in desirable update or acquisition frequencies. The dynamic properties of point data give rise to time critical retrieval restrictions on systems designed to acquire and evaluate point data. Rapidly changing point data is generally acquired or refreshed at a high frequency (e.g. short retrieval time interval) to insure that the information is up-to-date. Other point data and non-point data information may be more static in nature and not require a similar short acquisition interval. Developing efficient and customizable data acquisition strategies for information retrieval which take into account data characteristics and optimal acquisition rates is important to insure accuracy and timeliness in the data without imparting undue computational or transmission load.","Conventional systems are not well suited to provide integration of customizable data-dependent acquisition strategies or associated acquisition rates. As a result, these systems experience reduced performance, especially in complex environments where data or values to be retrieved possess different optimal or desired refresh rates. Furthermore, these conventional systems fail to provide the ability to easily customize or configure differential acquisition strategies for point data and non-point data in such a manner so as to improve overall system performance. Consequently, there is a need to overcome these limitations integrating and managing tag-based information to provide improved mechanisms to associate and work with point data and non-point data within the same programmatic or logical environment.","In one aspect, the present teachings describe a system for developing computer models for the collection and display of data. This system comprises a component builder that provides functionality for modeling component definitions that associate tag-based point data and first non-point data through inclusion in a joined table comprising both tag-based point data and first non-point data, wherein the point data comprises data collected from at least one addressable informational source and the first non-point data comprises context-defining data associated with the point data; and a view builder that provides functionality for generating views that correspond to instantiations of the component definitions generated by the component builder specifying how the point data and first non-point data are displayed.","In another aspect, the present teachings describe a method of generating a computer model for the collection and display of aggregated point data and non-point data. This method comprises the steps of: Defining a component definition representative of a collection of at least one point data element and at least one non-point data element; Instantiating at least one instance of the component definition wherein each point data element of the instance is associated with selected point data from at least one point data source and each non-point data element of the instance is associated with selected non-point data to give context to the point data; and Defining at least one view for displaying selected point data and non-point data wherein the at least one view references a portion of the point data and non-point data elements of the at least one instance to populate selected portions of the at least one view.","In still another aspect, the present teachings describe a method of generating a computer model for the collection and display of aggregated point data and non-point data. This method comprises: Defining a component collection representative of a collection of at least one point data reference and at least one non-point data reference; and Accessing point data associated with the at least one point data reference and non-point data associated with the at least one non-point data reference to define at least one view for displaying the selected point data and non-point data.","Neither this summary nor the following detailed description purports to define the invention. The invention is defined by the claims.","In various embodiments, the invention provides improved mechanisms for retrieving, manipulating, organizing, and analyzing information in systems where point data and non-point data coexist. In particular, novel mechanisms for organizing this information in a class-based representational model supporting Tags is disclosed. As will be described in greater detail below, certain aspects of the methods for data management provide formulations for data structures used to store and manipulate both point data and non-point data in a cohesive manner. Numerous benefits may be realized from the disclosed methods of integrated data management including improved system performance and reduced bandwidth consumption.","As used herein, point data may be characterized as current, real-time, or value data often associated with one or more instruments, components, or portions of a manufacturing, industrial, commercial, or other system. Any of these apparatuses may be configured to generate, measure, and\/or sample data that relates to one or more point data sources of interest. For example, a data acquisition system for a particular instrument or machine may continuously or periodically acquire data reflecting a motor's operating speed and\/or operating temperature as point data from a point data source associated with the motor. In certain instances, the point data may be a simple numerical or string value. Point data may further be associated with monitoring, control, and reporting functions of various instruments, components, and applications to provide information relating to the operation of a selected system. This information may also be made available for collection and review by various data acquisition and control systems.","Point data is often acquired in a raw or unstructured form wherein the point data reflects a numerical or string value without supporting details, description, and\/or attributes. As previously described, certain types of point data may be associated with real-time or near real-time information (e.g. current temperature, pressure, speed, voltage, current, etc.) that may be desirably sampled, updated or refreshed relatively frequently. The exact frequency of these operations is typically dependent on the characteristics of the point data itself and may be different across the multiple point data sources incorporated into a particular system. Providing a mechanism to allow for customization of the acquisition strategy for various classes of point data becomes increasingly significant as the size or complexity of the system grows to reduce unnecessary queries, data calls and computational load.","As will be appreciated by those of skill in the art, the context in which point data is to be interpreted may be readily lost or confused. To give point data context it may therefore be desirable to associate certain non-point data with the point data. Non-point data may take many forms, including but not limited to, attribute information, parameters, limits and other descriptive information. As used herein, the terms point data and non-point data encompass various categories of information which are not necessarily constrained to the examples described herein. As such, the various embodiments of the invention may be applied to a variety of different contexts embodied in the combination and use of point data and non-point data.","Other useful non-point data may include information such as maintenance work orders (relational data or API (Application Programming Interface) structure data from maintenance systems), equipment documentation (unstructured data usually contained within operating system files and documents), and information such as URL (Uniform Resource Locator) links to supplier web sites. These types of non-point data may be associated with non-tag based information contained, for example, within Oracle\u00ae or SAP\u00ae databases\/environments. Non-point data therefore represents a broad class of information that may be associated with point data providing a contextual and informational basis.","Various embodiments of the invention provide mechanisms to integrate tag-based data (including point data and non-point data) with non-tag-based data. Conventionally, these two types of data may be structurally or programmatically incompatible with one another due to the environment or applications in which they are used. Certain features of the invention overcome these conventional limitations to allow tag-based data and non-tag-based data to be better integrated, managed and utilized within the same environment. As will be described in greater detail below such integration desirably provides improved abilities to perform numerous tasks including presenting composite tag-based and non-tag-based views.","On exemplary architecture in which tag-based and non-tag-based data (as well as point data and non-point data) may be collectively utilized is the XHQ software platform (developed and distributed by IndX Software Corporation, Aliso Viejo, Calif.) The XHQ application may be configured to provide a data aggregation and modeling framework and tools for retrieving, manipulating, analyzing, and associating tag-based and non-tag-based data (as well as point data and non-point data) from one or more sources. A significant enhancement of the XHQ software architecture provided by the present teachings is the ability to bring tag-based and non-tag-based data (as well as point data and non-point data) together in a manner that is class-oriented and highly configurable. Furthermore, the present teachings allow for the generation of customizable \u201cviews\u201d capable of supporting a wide audience of users and specific application requirements. Additional details of the configuration and use of this system may be found in the XHQ user manuals.","Utilization of the various embodiments of the invention provides a mechanism by which to manage information obtained from one or more back-end data systems. Back-end data systems may include various conventional systems for receiving and processing point data and non-point data. In certain instances a back-end data system has only limited capabilities to provide, receive, or process point data whereas in other instances the back-end data system may process both point and non-point data. In the context of a tag-based architecture, various back-end data systems may be used to collect point data and perform operations in which non-point data is associated with point data. Each so called \u201cTag\u201d may therefore represent a data structure comprising a selected quanta of information associated with a particular point data informational source and may also comprise certain non-point data. The various embodiments of the invention provide a mechanism for extending tag-based data management capabilities allowing for improved integration of point data and non-point data. Such features are especially useful across enterprise-level environments wherein large amounts of point data and non-point data are to be collectively managed.","In the context of informational aggregation, tag presentation, and data warehousing, the various embodiments of the invention may be adapted to synchronize point data and non-point data and, additionally, \u201cjoin\u201d or merge this data in an object-oriented system or class-like manner to provide improved flexibility in the handling, processing and display. As will be described in greater detail below providing a coherent and current representation for each tag facilitates implementation of a flexible class-based component and view model.","In conventional systems, configuration of a data acquisition to acquire each Tag's current value (e.g. point data associated information) generally requires a unique configuration for each tag and possibly each tag's attributes (e.g. non-point data). Considering that it is not uncommon for complex industrial automation applications to contain upwards of 100,000 Tags, it will be appreciated that the individualized configuration and management of Tags in the aforementioned manner can be very time consuming, inefficient, and error prone. Furthermore, conventional mechanisms for control, monitoring, or archiving of Tag-based information tend to become even less useful when attempting to aggregate such information across multiple systems such as in the context of other plant production systems and applications.","The various embodiments of the invention provide mechanism by which to effectively address the aforementioned limitations using a novel approach that combines acquiring the non-point data (e.g. attributes and other information that does not change frequently) using a periodic query-based mechanism that does not change frequently with a rule-based or template approach that directs the acquisition of more rapidly or frequently changing point data (e.g. a Tag's real-time or current value). Furthermore, the rule-based or template acquisition approach generally does not require individual Tag configuration thus providing for more rapid development of data organization and visualization tools.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1","b":["100","102","103","104","105","106","107","100","110","112","102","103"]},"In addition to tag-based non-point data, non-tag-based non-point data may be associated with various back end system resources such as the enterprise resource planning data systems , human resource management systems , and customer relationship management systems . Conventionally, non-tag-based non-point data may be associated with various database and data management applications that provide such data in a form that is not readily compatible\/integrateable with certain components of the tag-based system data for the aforementioned reasons (e.g. format, structure, application-dependence, etc.). As will be described in greater detail below, the various embodiments of the invention overcome these limitations providing efficient mechanisms that allow tag-based point and non-point data to be integrated and related within the same environment for purposes including but not limited to management\/retrieval\/development\/review.","The various components of the back-end data environment  are connected to an application environment  such that the point data  and non-point data  (both tag-based and non-tag-based) are accessible to the application environment  and may be stored and processed therein. In this context, the term connected means directly or indirectly capable of communicating over a direct wired, network or wireless connection. The application environment  may comprise an enterprise server , a web server , and\/or one or more solution servers . The application environment  may further be connected to a development environment . The development environment  comprises one or more development clients . In various embodiments, the enterprise server , solution servers  and development clients  may consist of application programs developed, for example, in a language such as Java and\/or C++ which run under an operating system such as the Windows\u2122 (a product of Microsoft Corp.) family of operating systems.","The application environment  may further be connected to a browsing environment . The browsing environment  comprises one or more browsing terminals . Each browsing terminal  comprises a communication program such as a web browser. In various embodiments, the browsing terminals  are connected to the application environment  through the Internet using a web browser such as Netscape Communicator or Internet Explorer launched from the browsing terminals . In other embodiments, the browsing terminals  are connected to the application environment  through an Intranet.","In various embodiments, the invention provides a mechanism to integrate acquired point data  and non-point data  in a unified manner using an object-oriented representational model for data acquisition and management. Further provided is a mechanism to customize the data acquisition process by associating configurable acquisition frequencies or fetch intervals for the information to improve overall system efficiency. The configurable acquisition frequencies can be adjusted to accommodate the both point data  and non-point data , as well as, the rate at which this data will change or be refreshed to provide the application environment  with up-to-date information.","The aforementioned informational acquisition and management features desirably improve system performance and decrease bandwidth consumption by avoiding unnecessary or redundant data requests from the back-end data environment . More specifically, the system provides options and functionality for conveniently specifying and grouping various information to be fetched from the back-end environment  and processed by the application environment . In various embodiments, the data grouping functionality utilizes Tag collections to model point data acquisitions from one or more point data sources. The Tag collections further facilitate defining and modeling components within the back-end data environment  and provide a reusable resource that can be used to enhance the development process especially in large or complex systems.","In conventional systems lacking the aforementioned features of easily combinable point data and non-point data accessibility, significant penalties can be observed in terms of increased development time, complex system modeling, and inefficient data reporting. A common problem observed in conventional systems is that data fetching occurs too frequently for data that does not require refreshing or updating at the rate at which it is refreshed. Consequently, these systems may be subject to potentially wasted system resources and adverse affects in overall data accessibility. Additionally, conventional systems that fail to fetch data frequently enough present a problem as the data may become unacceptably out-dated (e.g. \u201cstale\u201d) and inaccurately reflect the current status or state of the point source from which the information was acquired. The various embodiments of the invention overcome these and other limitations by providing a highly configurable means to tune data acquisition rates or fetching frequencies helping to insure accurate and timely representation of the point data .","Unlike the rudimentarily configurable data fetching capabilities of some conventional systems, the various embodiments of the invention may be adapted for ease of use in a class-based environment. The various embodiments of the invention may further provide class-based arrangements allowing for configuration, control, and monitoring of point data  and non-point data  with customizable fetch frequencies.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 2","b":["110","112","204","205","206","207","204","208","205","110","112","204","112","204","110","112","110"]},"In one aspect, point data sources  correspond to addressable points of the informational sources  and may be referred to as a Tag. A Tag comprises a collection of desired point data  and non-point data  utilized or processed by the application environment . Each Tag may further reflect a data structure used for storing point data  and\/or non-point data  acted upon by the application environment . It will be appreciated that \u201cpoint data\u201d and \u201cTags\u201d reflect terms used in various processing and manufacturing industries to define sources of uniquely identifiable values for various instrument and apparatus functionalities and features but may also be applied in other contexts and systems.","Each point data source  may be associated with a measurable or monitorable feature from which point data  may be requested and collected. For a given instrument or device , a plurality of such point data sources may exist with the point data  generated by, or associated with, each point data source  subject to relatively frequent change and generally representative of a current state or operational condition of that point data source . Point data  may further be acquired either directly or indirectly by components of the application environment  and associated with non-point data  which is recognized by the components of the application environment . In various embodiments, association of certain non-point data  with the point data  may be accomplished by the instrument  or alternatively non-point data  associations may be performed by other components of the system. In various instances, association of point data  with non-point data  may occur substantially transparently to the point data sources  and\/or various associated back-end data systems.","In general, non-point data  is associated with point data  and reflected in the Tag data structure. Together this information may be used by the application environment  for the purposes of monitoring, control, and analysis and to assess the state or condition of selected instruments or systems within the back-end data environment .","Point data  and non-point data  may be received by a data acquisition system  configured to collect information from various point data sources  or other back-end data systems  associated with corresponding point data sources . In various embodiments, the data acquisition system  and back-end data systems  typically provide only limited functionality in terms of data acquisition and management but may serve as a source of point data  and non-point data  for the application environment . Alternatively, the application environment  may be configured to acquire point data  and non-point data  directly from the various back-end data systems  and point data sources . In such instances, the application environment  is capable of interacting with the various components of the back-end data environment , systems ,  and\/or point data sources  to collect information about each desired point data source  and associated non-point data .","As previously described, point data  may originate from many point data sources with each having differing volatility or longevity characteristics. In one aspect, these characteristics describe how dynamic the point data  is expected to be wherein certain point data may be characterized as relatively static or infrequently changing and other point data may be characterized as relatively dynamic or more frequently changing. Thus, the point data  acquired from the systems ,  or point data sources  may posses a wide range of temporal qualities ranging from substantially never changing to changing substantially every instant. One feature of the data acquisition and management system of the various embodiments of the invention is that it provides a mechanism for conveniently associating with each point data source , a configurable data fetch or acquisition frequency such that the application environment  can be configured to obtain, refresh, or update the point data  as needed or desired.","In various embodiments, the point data  may comprise a wide variety of different constructions of data. For example, the point data  may relate to real-time operational data for an informational source  or back-end data system ,  including temperature, pressure, speed, etc. In certain instances, the point data  may be a primitive value not carrying with it a description of the point data source  from which it was obtained. In other instances the point data  may be associated with non-point data  including attribute information which characterizes the point data source  (e.g. instrument name) or point data  itself (e.g. data units). Certain non-point data or attributes  may be further defined for the point data sources . These may include for example, operational ranges, point data source names or associations, and other information. The non-point data or attribute information  may be assigned by the data acquisition systems ,  used to acquire the point data  or may be assigned directly by components of the application environment . In various embodiments, non-point data or attribute information  reflects more static information than point data  and typically does not change at the same frequency as the point data  itself. As a result of the more static character of this information the acquisition rate or fetch frequency may be desirably adjusted to be correspondingly lower.","In one aspect, a component builder  and solution builder  may be associated with the application environment . The component builder  provides functionality for defining, generating, managing, and visualizing various component data structures used for point and non-point data acquisition\/integration in accordance with various embodiments of the invention. The solution builder  provides functionality for creating views or visualizations of components generated with the component builder .","In one aspect, the component builder  and solution builder  allow point and non-point data ,  to be flexibly organized and presented using a graphically driven approach. In such an approach, a user is able to create one or more components and views in an iconically and menu-driven manner. Furthermore, these builders ,  may utilize intuitive and semi-automated mechanisms for point data and non-point data integration which facilitates design and manipulation of the data ,  at small and large scales alike.","The aforementioned XHQ software platform represents an exemplary architecture that may be configured to benefit from the implementation of the component builder and solution builder functionalities , . While depicted as being associated with the application environment , it will be appreciated that the component builder  and solution builder  may be integrated with various components of the system  such as the development environment .",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 3","b":["110","112","100","120","110","112","208","217","215","120","305","310","310","305","110","112"]},"In one aspect, each Tag  is representative of a reusable component which may comprise one or more tag component members  associated with point data  and\/or non-point data . Each Tag  may further be associated with one or more \u201cviews\u201d each of which are representative of a reusable visualization of the information contained within the Tag . In certain embodiments, each view references certain Tag member information including portions of the point data  and non-point data  which may be displayed or visualized in a specified manner. Aspects of Tag visualization in this manner may include the use of animation techniques to graphically depict the Tag's conditions and information.","In various embodiments, each Tag collection  contains a plurality of similarly-defined Tags  each of which may be associated with different selected informational sources , point data sources , or other system components or subcomponents for which point data  and non-point data  may be desirably accessed and visualized. One benefit conferred through the use of the Tag collection  and constituent Tags  is that each Tag  sets forth the principal information and fields for inclusion of a point data source  into the Tag collection . Each Tag  may comprise a similar structure and may further provide predefined or default data access rules and operations for accessing point data  and non-point data . Consequently, adding new Tags  (e.g. newly monitored point data sources ) may comprise appending additional Tags  to the Tag collection  as needed or desired.","Because of the logical organization of the Tags  and the information contained therein, data integrity even in very large monitoring environments is relatively easy to preserve and the system is highly scalable. Another benefit imparted by the use of Tags  in the aforementioned manner is that rules and operations may be applied across a multiplicity of Tags  with relative ease without the need to independently edit or modify each Tag . Such a feature is useful, for example, when specifying the refresh\/update frequency and\/or instructions for informational access. The construction of each Tag  provides a mechanism for defining operations \u201cglobally\u201d that are subsequently resolved to identify the appropriate point data source  or other component from which the point data  and non-point data  may be obtained.","Performance in the system is improved by providing the ability to define data access constructs for point data  and non-point data  that are suited to the task of acquiring the information at the appropriate frequency. For example, non-point data  may be obtained by database query language queries  such as SQL (Structured Query Language) or SQL-like queries to refresh selected information contained within the Tag collection . Such queries  are suited to access and retrieve generally static information such as non-point data  associated with a selected Tag . In certain implementations, each construct  is configured to access and provide the results of various query columns associated with selected tag component members . Queries  may be associated with both point data  and non-point data  although, in general, queries  are typically directed towards information which changes infrequently (e.g. non-point data ).","One or more \u201cTag\u201d value connections  may further be defined for selected point data associated tag component members  that are determined to change relatively frequently (e.g. current value or set point). In various embodiments, a \u201cTag\u201d value connection  need be specified only once per Tag component member  of interest. The Tag value connection  may further be based on a template or rule which can be generically applied across a portion or substantially all of the Tags  without requiring explicit specification for each Tag .","To improve the flexibility of the system, each Tag  and associated tag component member(s)  may be associated with a name identifier . The name identifier  provides a convenient mechanism to access a specific or desired Tag  and component member(s)  contained therein. Furthermore the name identifier  may be used in connection with formulas, expressions, or rules to provide improved accessibility to the information contained within the Tag . The name identifier  may further be configured such that this information may be used as a reference to indicate an appropriate tag component member  whose value is to be associated with information (e.g. point data  or non point data ) from the back-end environment .","Tag rules provide instructions for accessing the appropriate value or information from the desired resource(s) of the back-end data environment . For example, a rule may be defined such that the name identifier  of a selected Tag  is used as a reference to populate a selected tag component member, Current Value  with point data  obtained from a designated resource of the back-end data environment .","As another example, a selected back-end environment resource may comprise an addressable point data source , the value of which is stored in the Current Value field  of a selected Tag . The Current Value field  (as well as other tag component members ) may store a wide variety of point data information including current temperatures, speeds, pressures, and other real-time\/near real-time information which are desirably monitored and refreshed at a relatively high frequency. Likewise, non-point data  may include attributes associated with the point data  such as machine or instrument names, area, region, organization, unit, high-ranges, low-ranges, units associated with the point data , descriptions of the Tag , and other information. This information may be populated within a selected Tag  using the aforementioned data queries  to provide context to the point data .","In various embodiments, the application environment  may be configured to utilize a combination of data queries  and tag value connections  to identify and acquire appropriate data and information to be accessed from the back-end data environment  and store this information within an appropriate tag component member  (e.g. for example in a temperature-associated TAG and a pressure-associated TAG). As previously indicated to preserve bandwidth and improve system performance each point data  and non-point data  request may be associated with various selected refresh frequencies to maintain a balance between keeping information within the Tag  up-to-date and avoiding unnecessary data requests.","While the Tag collection shown in  is composed of a plurality of Tags of homogeneous composition, it will be appreciated that other Tag collections can be readily devised in accordance with the various embodiments of the invention, the composition of which may comprise additional\/different tag component members . It one aspect, it may be desirable to maintain a Tag collection having a singular Tag composition defined by substantially identical tag component members  (e.g. similar to that shown). Such a configuration desirably conveys uniformity amongst all point data \/non-point data  acquisitions. However, it is conceived that instances exist where a Tag collection may be desirably formed as a plurality of Tags of heterogeneous composition. Providing multiple compositions of Tags may be useful in accommodating a variety of different point data \/non-point data  acquisitions that may or may not be logically or functionally compatible with one another.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIGS. 4A-D","b":["110","112","110","112","405","406","405","410","208","100","410","405","112","120","315","405","100","215","217","120"]},"In the illustrated example, the fields  of the table  correspond to a NAME field (identifier string) , an ID field (identifier number) , a HLIMIT field (high limit) , a LLIMIT field (low limit) , an EUNIT field (unit associated with point data) , and a DESC field (informational) . Each field may be configured as desired and may for example represent string data or numerical values (real, integer, etc). Each of the fields  serve to characterize or give context to a selected component or point data source  within the system which is to be monitored and associate certain attributes with the component or point data source  in the form of non-point data . The attributes associated with the selected component or point data source  may include descriptive information, operational parameters, as well as, other desired information.","For example, the component entries identified as P-P reflect non-point data\/attribute information used to characterize various operational parameters for point data \/point data sources  associated with an exemplary pump (e.g. Pump Temperature, Pump Pressure, and Pump Speed). This information may include a designated name (stored in the NAME field), a numerical identifier (stored in the ID field), an upper operational limit (stored in the HLIMIT field), a lower operational limit (stored in the LLIMIT field), units to be associated with point data  obtained from the point data source  (stored in the EUNIT field), and a corresponding brief description of the selected component (stored in the DESC field). Information stored in the fields  may be selectively accessed through the aforementioned data queries  or other retrieval mechanisms to provide tag attribute information which may be subsequently associated with point data  relating to a specific component or point data source  within the back-end data environment .","Similarly, these fields  may also be used in connection with point data \/point data sources  associated with an exemplary conveyor (e.g. Conveyor Speed and Conveyor Operational Status). As applied to the conveyor, the fields  may take on different values and context. For example, the name , ID , limits , , units , and description  may be populated to reflect values appropriate to point data sources  associated with the conveyor. Furthermore, certain fields may be left unpopulated, associated with a default value, associated with a void or null value, or populated in other manners depending on the nature of the point data \/point data source  which they are associated (e.g. note differences in conveyor speed fields and conveyor operating status fields). Based on the foregoing, it will be appreciated that the fields  of the non-point data\/attribute table  may be constructed so as to accommodate substantially all of the information desired to be associated with point data sources  within the system.","Similarly, point data  relating to those components described above may be separately stored in an analogous manner to the aforementioned non-point data as exemplified in table . The information in this table  may comprise one or more fields  including a NAME field (identifier string) , an ID field (identifier number) , and a VALUE field (current\/real-time value) . In one aspect, the table  containing point data  may represent only limited information relating to each component or point data source  and lack the corresponding descriptive qualities and attribute information associated with the non-point data table . The point data  stored in this table  may represent the current or real-time values for each selected component or point data source  which is to be desirably accessed at a relatively high frequency to insure that the information contained in the application environment  is up-to-date. As previously indicated, the information contained in this table  may be acquired through the use of tag value connections  designed to extract selected information from the table  at a desired rate or frequency.","In one aspect, each point data value for a selected point data source  (stored in the VALUE field) may be associated with corresponding identification information (stored in the NAME and ID fields) which may be used to relate the point data  of the table  with the non-point data  of the table . In other embodiments, the point data values may lack corresponding identification information and present only raw-data values. In instances where the point data  lacks or possesses minimal corresponding identification information the application environment  may provide the proper mapping functionalities to associate the point data  with the appropriate non-point data  contained in the table . Taken together the two sources of point data  (acquired from table ) and non-point data  (acquired from table ) may be used to populate a selected tag collection  defined in the application environment .","The exemplary tag collection , tags , and tag component members  shown in  depict the mapping of information from the point data database  and non-point data database . As previously indicated the tag collection  comprises a grouping of Tags or tag instances  representing data structures used for acquisition and association of point data  and non-point data . In various embodiments, the tag collection  comprises instantiations of previously defined tag components represented by the one or more tag instances . Each tag instance  comprises tag component members  that may further comprise a member name  and an associated member type . The member type  defines the expected data types of the various tag component members  for each tag instance , for example as real or string values.","The tag collection  may be constructed as a plurality of instantiations of a singular tag component definition or may utilize more than one tag component definition. In general, the tag component definition provides a logical framework for associating point data  and non-point data  in a user-selectable\/configurable manner. In one aspect, the tag component definition is constructed in such a manner so as to allow it to be used in a variety of different contexts without being constrained to a particular point data\/non-point data association. In certain implementations, a singular tag component definition may be sufficient to accommodate a number of different point data and non-point data associations through one or more instantiations contained within the tag collection .","In one aspect, tag component members  of the tag collection  may be mapped to selected information contained in the point data and non-point data databases ,  using the aforementioned data query \/tag value connection  approach. This is shown at a high level in  where selected information reflecting particular point data sources  contained in fields  of the point data and non-point data databases ,  is mapped to corresponding component members  populating them with the appropriate values or information.","In one aspect, population of the component members  using the data query approach is facilitated by simplified query language. The simplified query language may take the form of a query such as \u201cSELECT NAME, HLIMIT, LLIMIT, EUNIT, DESC FROM TAG_TABLE\u201d. The aforementioned simplified query may be translated by the application environment  to one or more suitable database queries (for example in SQL) that may be used to extract information from the non-point data table . The form of the simplified query provides a more intuitive understanding of the operations to be performed in mapping the information without having detailed knowledge of the underlying operations themselves.",{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 4B","FIG. 4A"],"b":["405","310","410","405","482","322","405","482","322","305","310","405","322","305"]},"Population of point data , which may be updated more frequently, may proceed in a similar manner wherein a mapping functionality is used to associate fields  contained in the point data database  with selected component members  for appropriate tags  in the tag collection . , illustrates an exemplary point data access\/association  for a selected component member  associated with a particular tag  of the tag collection  corresponding to \u201cCurrent Value\u201d  for which a point data connection may be desirably made. The tag member \u201cCurrentValue\u201d  may be desirably populated with point data  extracted from a selected back-end tag system or point data source  specified as a connection group  (PHD in this example). As previously indicated, the point data information  may be acquired from the point table  using a tag value connection  or extracted\/sampled directly from the appropriate point data source . In each instance, the corresponding point data  is desirably accessed from the specified location with a desired refresh rate and stored in the appropriate component member  (Current Value in this example).","As described above, tag value connections  and data queries  may be used to \u201cpopulate\u201d selected tag component members  with desired information from point data and non-point data sources. In various embodiments, query results from data queries  are used in a selected tag instance  to fill in the parameters or information associated with the tag value connection(s) defined for the tag . An efficient mechanism for implementing data query information retrieval is to have a single query  perform the operations necessary to return non-point data associated information for a plurality of tag instances . Such a configuration improves resource utilization and reduces overhead associated with executing multiple data queries to achieve similar results.","The tag value connections  may be associated with the point data members  in a singular manner such that a specific tag value connection  is associated with a selected point data member  of a selected tag instance . Here the tag value connection  may be used to define a \u201cformula\u201d or mechanism by which to utilize the non-point data  for a selected tag instance  in addition to other configuration information associated with the tag value connection  to retrieve and populate the point data  for each tag .","In one aspect, as shown in , forming a tag value connection  comprises specifying the NAME or ID  of the tag  associated with the point data table  or point data source  to identify the information to acquire and the desired field\/information  to be extracted (e.g. VALUE). A simplified referencing mechanism for associating a component member  to store extracted point data  with the relevant point data  to be extracted from the table  or point data source  may comprise: Specifying the Tagname identifier (e.g. \u201c% TagName\u201d)  along with the request to establish a connection  with a corresponding connection group (e.g. \u201cPHD\u201d)  to populate a selected component member with point data  corresponding to the selected field (e.g. \u201cVALUE\u201d) . Here, the Tagname identifier \u201c% TagName\u201d indicates that the request to populate the component member  of the Tag  will use this Tag's name field (e.g. \u201c% TagName\u201d) at runtime and pass this information to the appropriate back-end data source or connection group (e.g. \u201cPHD\u201d)  where the associated information contained in the selected field (e.g. \u201cVALUE\u201d)  will be sufficient to uniquely identify the desired value to be accessed.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 4D","b":["494","110","112","406","405","494","305","322","305","494","322","305","110","112"]},"As will be appreciated from the aforementioned description, different data acquisition strategies (e.g. structured queries\/tag value connections), as well as, different data acquisition times\/retrieval intervals may be implemented to populate the various fields (e.g. component members ) relating to one of more Tags  described by the joined table . One desirable benefit provided by ordering the information in such a manner is that a portion or the substantial entirety of non-point data  may be identified and acquired by as little as a single structured query  thus significantly reducing computational load, programmatic complexity, and communications bandwidth.","In various embodiments, the joined table  comprising tag-based point data  and non-point data  desirably provides a mechanism by which to unite tag-based information with non-tag based information. As previously indicated, conventional systems lack the ability or are significantly limited in their ability to integrally manage tag-based data and non-tag-based data. In one aspect, the joining of tag-based point and non-point data ,  in the joined table  overcomes this limitation providing the tag-based data in a form\/format that may be conveniently associated with non-tag based information as shown in .","Tag-based point data and non-point data in the joined table  may be presented\/stored in a form that is compatible with other conventional non-tag-based non-point data sources. For example, workorder schedules  and maintenance history tables\/records  that may be associated with non-tag-based back end data sources\/systems may be stored as records in conventional databases\/applications. It will be appreciated by those of skill in the art that information arising from these sources may be readily associated with the tag-based information following integration in the joined table  due in part to the similarity in structure or organization of the data.","Broad and disparate classes of other non-tag-based data sources may be integrated with the tag-based information contained within the joined table . Such information may include that found in human resource databases , customer relationship databases , and other sources of non-tag-based information . It will be appreciated that a wide variety of different sources of non-tag-based non-point data exist and such information may be desirably related to tag-based point and non-point data through application of the present teachings.","In various embodiments, the present teachings contextualize tag-based information in a manner that allows it to be integrated with non-tag-based information without requiring significant modification or re-configuration of the non-tag-based information. Consequently, tag-based information and non-tag-based information may be operated upon in the application environment in a joint manner and desirably configured for integrated use. One aspect of such integration is the ability to provide combined \u201cviews\u201d representative of tag-based and non-tag-based information within the same visual context. As will be described in greater detail below creation of such views is significantly enhanced by the ability to \u201ctreat\u201d tag-based data and non-tag-based data in similar manners with respect to \u201cview\u201d design. Furthermore, the present teachings allow tag-based data and non-tag-based data to be utilized within the same data structures providing for improved class-based component development.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIGS. 5A-B","b":["305","110","112","305","305","110","120","305","322","110","112"]},"Each component member  may further have an associated member name  and member type  delineating accessibility and constraints upon the data contained within the component member . In one aspect, the member type  indicates an inheritance property, composition, grouping, or restriction associated with a selected component . For example, the member types for Tag  comprise expected forms of the data being of type real  (associated with hiLimit, lowLimit, and Current Value) and of type string  (associated with Tag Name, Units, and Description). The member type may further be used to specify other logical constructions such as type Tag and higher level-components\/collections to provide a mechanism for class-based modeling as will be described in greater detail below.","A higher-level Pump component  illustrates how Tags  may be utilized and reused in the definition of other logical components or informational groupings. For example, the exemplary Pump component  contains and, therefore, instantiates Tags  comprising a Temperature-associated Tag  and a Pressure-associated Tag . Each of these Tags ,  are indicated by the member type \u201cTag\u201d  delineating separate Tag instances of the exemplary Pump component. This manner of component definition is highly efficient as it reuses the base component Tag  and allows associations to be formed with diverse and complex logical groups without having to explicitly define each of the component members within a selected higher-level group. Thus, association of the Temperature-associated Tag  and Pressure-associated Tag  with the member type \u201cTag\u201d  allows the characteristics and definitions for the Tag component  to be automatically inherited\/instantiated by the temperature and pressure component members of the Pump component  using a single association.","In various embodiments, components and logical groupings may be defined in several ways. In one aspect, a selected component may be constructed by explicitly indicating each point data  and non-point data  component member association to be included in the component definition. This approach is useful in defining low-level Tag components where each component member  within the Tag component  is explicitly associated with a point data  or non-point data  source. Conversely, component definition may also be accomplished wherein existing components may be used to \u201cbuild\u201d new components which comprise or instantiate one or more previously defined components or Tags, thereby inheriting by containment the characteristics of these previously defined components. In various embodiments, component definition according to the aforementioned manner provides a mechanism by which to reuse existing components and Tag definitions to thereby facilitate development of Tag collections that may be used to model large numbers of point data  and non-point data sources .","In one aspect, the reusability of components is particularly useful when defining multiple instances of objects, devices, apparatuses, etc. For example, when defining multiple pump component instances, it is not necessary to explicitly enumerate each component member. Instead, a selected component may be defined by associating or inheriting from a previously defined component or Tag having the requisite component members embedded within the component definition.","In certain embodiments, component definitions may be constructed using combined approaches wherein the associations of components, containing components, and sub-components are explicitly defined as illustrated in  and, alternatively, where the usage of contained and related components does not require the explicit definition of all intervening component relationships (e.g. the Tags related or belonging to the Area component  can be accessed by either defining the explicit relationship between every component Area , Pump , Conveyor , and Tags , or, alternatively by defining a general relationship of many Tags  belonging to the Area component  and providing a means for appropriately referencing an individual Tag  as needed). This flexibility in component design further enhances the developer's ability to create increasingly complex components within the system with reduced effort.","Functionality may be provided for \u201cmasking\u201d portions of selected component definitions such that only the unmasked portions are actively utilized or displayed. Thus, a mask of the unnecessary component members of a first component that has one or more component members that are not required for construction of a second component may be performed to leave only the unmasked component members that may be used in the construction of the second component. This approach simplifies component construction and avoids confusion when incorporating undesirable\/unnecessary component members in components derived from other components.","Referring again to , a Conveyor component  may be defined reusing the same or similar structural definition for a Tag  as the Pump component . The Conveyor component  may relate these Tags  to different sources of point data  and non-point data  as previously described however, the underlying component members  for each Tag  possess similar logical constructions. Thus, defining a Speed Tag  and Operating Status Tag  associated with the Conveyor component  may be accomplished using substantially the same Tag  component definition as was used in defining the Pump component tags of Temp  and Pressure .","Building upon the component definitions for the Pump component  and the Conveyor component , an Area component  may be defined by an intake Pump  and outlet Pump  having a member type Pump . Likewise, a first conveyor component  and a second conveyor component  may be defined using member type Conveyor . It will be appreciated that the Area component  with a moderate to large number of high-level components (e.g. Pumps and Conveyors and similar components numbering in only the 10s to 20s) and possibly even greater levels of depth of complexity could in total (i.e. counting all the Tags contained by the Area component and any of its sub-components) contain a relatively large number of Tags  and or component members  that would have to be individually defined for the Area component . However, by applying a hierarchical class-based component definition approach the many Tag instances associated with an Area component  can be readily defined and managed by incorporating higher level component definitions (e.g. Pump and Conveyor) that define their own sub-component and Tag associations as compared to explicitly defining each Tag component member as immediate members of the Area component .","In one aspect, component definition in this manner is more intuitive to the user\/developer who can design more complex components using previously defined components as \u201cbuilding blocks\u201d. Thus, rather than having to identify each low-level Tag associated with a complex system, a representation of the modeled system and associated views can be constructed based on high level component design wherein the appropriate Tags  are automatically inherited\/instantiated by virtue of the underlying component definitions.","As an example of how high level component definition and reusability operates, a Plant component  may be defined as a single Area component  whose member type  is Area . Through this relatively simple component definition, all of the underlying components , ,  and Tags  associated with the various lower level components are automatically instantiated when the Plant component  is instantiated, thereby, generating a representation of a complex \u201cplant\u201d through the relatively little effort required to define the appropriate component members associated with the Plant component .",{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 5B","FIG. 5A"],"b":["590","580","580","570","555","535","305","590","590","580","1","585","572","574","1","576","2","578","572","574","545","550","576","578","560","565","545","550","560","565","305","322"]},{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 5C","FIGS. 5A-B"],"b":["570","535","555","591","593"]},"Integration of non-tag-based information into a component may be accomplished in a similar manner as described above wherein the member type  of the area component  specifies lower level components ,  that define non-tag-based non-point data relations. For example, the WorkOrder collection  may comprise various non-tag-based non-point data references  (e.g. description, service number, division, submit date, expected completion date, etc) having associated members types  (e.g. string, real, date, etc). These non-tag-based components ,  may be utilized in a similar manner as tag-based components and configured through appropriate referencing and acquisition of data associated with non-tag-based data sources such as the aforementioned workorder data sources , maintenance history data sources , human resource database , customer relationship database , and other non-tag-based data sources .","Like the mechanisms for tag-based component definition, the mechanisms for non-tag-based component definition provide a convenient mechanism to convey a class-based or object oriented structure to a system having many potential data sources that are to be monitored, visualized, and grouped. It is conceived that a further extension of such implementations are the development and use of hybrid components that contain both tag-based information and non-tag based information. Taken together these various manners of component definition provide for highly-flexible methods of associating data of various types\/classes.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIGS. 6A-B","b":["110","112","110","112"]},"As shown in , a component definition  may be used to represent a data structure that sets forth and groups selected point data  and non-point data  for one or more logical and\/or physical components of a system. For example, component definitions  may be devised for low-level, relatively simple entities within a system such as dials, gauges, readouts, counters, etc. Similarly, component definitions  may be devised for higher-level components including by way of example, pumps, conveyors, areas, and plants. Higher-level components may further be represented by various combinations and\/or groupings of lower-level components; defined by explicit references to the underlying point data and non-point data connections; or combinations thereof.","In various embodiments, component definition  of a tag representation  may be used with either a modeled  and non-modeled approach  (or a combination thereof). The choice of which approach to use may depend upon various factors including but not limited to: user preferences, system complexity, existing sources\/availability of information, etc. Additionally, use of modeled or non-modeled approaches ,  may depend in part upon the type or characteristics of the component being defined. For certain components and configurations one approach may provide beneficial capabilities and functionality over the other and as a consequence may be preferentially used. One rationale for providing a dual approach is to improve flexibility and customizability in the data collection system thereby improving the efficiency with which selected data aggregation, data retrieval, and data presentation tasks may be performed.","In the modeled approach  tags and components (previously exemplified by instantiated elements , , , , and ) are explicitly defined and associated with the selected component definition . Thus as shown in , the modeled approach  to tag representation  for exemplary components ,  (Component A, B) may comprise invoking one or more tag instances (Tag, Tag, Tag, etc.)  each of which is associated with selected point data  or non-point data  within the system that relates to the exemplary components , .","In the modeled approach , multiple components ,  of the same category or class may be defined based on discrete instantiations of the tag instances  in the component definition . In one aspect, the tag instances  may be configured with pre-defined non-point data associations (e.g. default associations) that may be common for each tag instance . For example, attributes such as units, ranges, limits, etc. may be acquired by default upon instantiation of the tag  without having to configure each tag component member  individually. It will be appreciated that such a configuration helps to eliminate having to create redundant non-point data associations that might otherwise have to be configured individually. Such a benefit may become increasingly significant as the size of the system to be monitored increases.","In addition to the use of default non-point data associations, the tag component members  of each tag instance  may also be configured individually as needed or desired. For example, point data associations may be defined for each tag instance  such that a selected tag instance  may be associated with one or more point data sources thereby relating the selected tag instance  to particularized or relevant point data . Thus, during the tag instantiation process, virtually any addressable point or attribute within the system may be configured to be associated with selected tag component members .","As previously described, another benefit to the modeled approach  is to provide a structured or class-based development mechanism to represent component definitions. The class-based approach allows increasingly complex components to be \u201cbuilt\u201d from other previously defined components. Such an approach facilitates organization and grouping of tags  and may be used to form logical associations between tags  and point data\/non-point data sources. Furthermore, modeling of component definitions  allows customizable \u201cviews\u201d to be created which may be based in part on the hierarchical ordering of tags and components.","Additional information related to the implementation of \u201cviews\u201d within the context of a data acquisition system may be found in XHQ application documentation\/manuals including the XHQ User Guide, the XHQ Administrator Guide, and the XHQ Connection Guide. Further details may also be obtained from commonly assigned patents and patent applications including: U.S. patent application Ser. No. 10\/726,430 entitled Modeling system for retrieving and displaying data from multiple sources; U.S. patent application Ser. No. 60\/526,891 entitled System and Methods for Retrieval, Presentation, and Synchronization of Real-Time Points\/Tags within a Class-Based Component and View Model; U.S. patent application Ser. No. 09\/704,471 entitled System and method for retrieving and presenting data using class-based component and view model; and U.S. patent application Ser. No. 60\/162,975 entitled System to Provide Real Time Information Portal Using Class-Based Component and View Model.","As noted above, components definitions  may also be represented using the non-modeled approach . The non-modeled approach  differs from the modeled approach  in that explicit definition\/invocation of instantiations of tags for each instance of a component member is not used. In the non-modeled approach , a tag collection  may instead be defined which comprises one or more tags  with each tag comprising members  (i.e. the tag's component definition\u2014equivalent to the tag definition  in  used in the modeled approach). The tag collection  obtains its tags  through the methods described that created the tag collection  in . Therefore, the tags within the tag collection ,  are not instantiated on a component by component basis (or tag by tag basis) as in the modeled approach . The tags  within the tag collection ,  may be accessed\/referenced by various mechanisms as will be described in greater detail below. In one aspect, the non-modeled approach  may be used to develop a tag collection  where any of its tags  may be associated with a tag member of a modeled component as in component definitions , .","In certain implementations, it may be desirable to utilize the non-modeled approach  during component definition  when the class-based organization of the modeled approach  is not readily needed or desired. For example, use of the non-modeled approach  may be preferential for very large tag-based systems where the reusable sub-components that would contain the individual tags are not useful in themselves or where the display of tags in many views at a higher-level such as an area or plant is more important than the association of each tag to a lower-level component that contains each tag. In such systems, imposition of a class-based organizational scheme for associating point data  and non-point data  may be less of a concern and sufficient organizational simplicity and accessibility may be preserved through the use of a tag collection. Additionally, it is conceived that data acquisition systems may be developed which have a hybrid character in which modeled and non-modeled approaches ,  are used together so as to capitalize on the features and benefits of both. For example, various components of a system may include both modeled tag instances as well as non-modeled tags organized within tag collections.","In one aspect, the tag collection comprises a set of tags that can be identified and associated with various point data  and non-point data  within the system or back-end data system , data acquisition system , or point data source  within the back-end environment . The non-modeled approach  differs from the modeled approach  by allowing a multiplicity of tags to be represented as a tag collection that is \u201cpopulated\u201d with tags  through the techniques described in creating the \u201cjoined\u201d table  in . These tags  would otherwise require explicit definition as in the modeled approach .","Using the aforementioned tag and component development approaches , , a system may be developed to acquire point data  and non-point data in an efficient, flexible, and relatively straightforward manner. Examples of systems that may benefit from the manner of data organization of the present teachings include, but are not limited to: control systems, SCADA systems, plant data historians or other generic data acquisition systems primarily involving the monitoring, collection, control, and reporting of tag data sources (i.e. systems containing both point and non-point aspects for tag data), point data sources, and the combination of tag data sources, point data sources, and non-tag data sources such as business applications, general purpose databases, and other sources of data relating to the operation of a business that is not tag-based in nature. In general, solutions provided by the various embodiments of the invention allow sufficient attributes and information to be associated with selected point data sources and tag data sources and provide mechanisms for the storage and management of information for use in control, monitoring, reporting and other automation system and business system uses.",{"@attributes":{"id":"p-0116","num":"0115"},"figref":"FIGS. 7A-C","b":["614","616","614","616","614","616","614","616"]},"As previously discussed, situations may be encountered where the non-modeled approach  may be beneficially or desirably implemented over the modeled approach . For example, smaller systems or systems with many unique (non-redundant\/non-similarly defined) components may give rise to considerations of reduced complexity and administrative overhead when designing point data  and non-point data  acquisition schemas. Whereas complex systems having multiple components of redundant or similar character may benefit from implementation of the modeled approach  through aspects of component reuse, use of the non-modeled approach  in smaller systems, systems with no or limited benefit of explicit modeling of the non-tag components of the system, or systems with many unique components may give comparable or improved results in terms of reduced organizational complexity and ease of development.","Using the tag component definition  previously described in connection with ,  illustrates an exemplary view (e.g. Value view)  that may be constructed to display information that corresponds to point data  representative of current values for an individual tag associated with any given pump and non-point data  that corresponds to units for the point data  related to the pumps (e.g. IntakePump\/OutletPump) within Area .","In one aspect, the term \u201cview\u201d describes a visualization for selected point data  and\/or non-point data  representing a logical or physical component within the system. Views may be constructed to bring together data and information in a manner that may be more readily\/easily interpreted. Views may also provide the ability to convey the class-based nature or organization of components within the system. In various implementations, views may be configured as reusable elements to allow the display of information for various tags and components within the system. The reusable aspect of these views desirably conveys a degree of flexibility to the data acquisition and monitoring system and reduces development time in constructing multiple\/complex system views. It will be appreciated that the exemplary views and methods for constructing them may be adapted for use in creating numerous different view representations and as such the exemplary views described herein should not be interpreted as limiting upon the scope of the invention.","In one aspect, the exemplary Value view  is configured to display the tag component members corresponding to CurrentValue  and Units  for a selected tag\/tag instance . It will be appreciated that such a view  might be used in connection with an application configured to display such items for a user. In the below-described description the exemplary view  will be implemented in the context of both the modeled and non-modeled approaches , .","The Value view  further comprises two view elements , . The first view element  may be representative of a point data view element where the actual value for the point data  (e.g. CurrentValue) referenced\/acquired by the view  is presented. The indicated value \u201c1.234\u201d shown further represents a placeholder for the point data value associated with the tag component member CurrentValue  (e.g. a \u201creal\u201d type value). It will be appreciated that the information contained within this view element  may change at runtime in accordance with the point data  associated with CurrentValue .","In a similar manner the second view element  may be representative of a non-point data view element where the actual value for the non-point data  (e.g. Units) referenced\/acquired within the view  is presented. The indicated value \u201cABCD\u201d shown further represents a placeholder for the non-point data value associated with the tag component member Units  (e.g. a \u201cstring\u201d type value). As above, it will be appreciated that the information contained within this view element  may change at runtime in accordance with the non-point data  associated with the Units tag component member .","According to one implementation of the modeled approach , a view for a high-level component (e.g. Area component) may be developed based on views created for low-level or intermediate-level components that make up the higher level component (e.g. conveyors, pumps, tags, etc.). Hierarchical or inherited component development in this manner provides a mechanism to display the details of the low-level and intermediate-level components\/tags within the high-level component. In the illustrated example, Area  has been instantiated as shown in . Area  therefore is representative of an instance of the high-level component Area  and comprises\/contains modeled instantiations of the low-level\/intermediate-level components contained within the Area component  and the underlying components\/tags contained within each of these components as illustrated in .","According to the modeled approach , views may be developed for each of the components to display the information associated with the tags  for the lower level components (e.g. pumps) that make up the higher level components (e.g. Area). The illustrated examples contained herein depict an exemplary view for the lower level Pump component and the resulting selected view for the high level Area component that is configured to display the associated tag values.","As shown in  a pump component value view  may be developed for a Pump component. In the illustrated view , selected tag-associated point data  and non-point data  from the Pump component is configured to be displayed. Thus, a first value view  may be \u201cembedded\u201d within the pump component value view  representative of the temp tag  and a second value view  may be \u201cembedded\u201d within the pump component value view  representative of the pressure Tag . Embedding the value views associated with each of the pump component members therefore provides a mechanism to display point data  and non-point data  associated with any given or selected instance of the Pump component .","It will be appreciated that this view  can be configured to display the tag values (point data \/non-point data ) for one or more selected pump component instances for which, according to , there are two such pump instances. While the aforementioned example shows the display of both tags of the Pump component it will be appreciated that the information in this and other views may be modified\/configured as desired. For example, in a system having many similar components, selected components can be configured for display as a collection or group. Similarly, the point data \/non-point data  display in connection with each component can be individually configured\/customized according to user preferences. Additionally, different configurations of views (e.g. value views) may be assigned to similar component types as desired.","As shown in , a high-level component corresponding to an Area Component Pump View  may be devised as a representative view for the Area component . Constructed according to the modeled approach , this view  may be developed through the inclusion of a first and second pump component value view  corresponding to the intake Pump and outlet Pump of the area component . Thus this view  depicts each of the pumps (e.g. Intake Pump\/Outlet Pump) within the Area component. In one aspect, in addition to inclusion of the of the pump component value views  additional information may be included within the Area Component Pump View  such as textual attributes\/labels  used to differentiate the embedded pump components from one other.","Modeling of components and views in the aforementioned manner provides a useful and flexible mechanism by which to define relationships for integration of point data  and non-point data . Furthermore, increasingly complex components\/views can be built upon previous work thereby reducing redundant operations and tasks. Additionally, components\/views that are physically distinct from one another in terms of their content or makeup (e.g. pump vs conveyor) may be found to share a significant degree of commonality (e.g. similar data collection\/presentation requirements) which can be capitalized upon through component\/view reuse in the aforementioned manner. Furthermore, as previously described, components\/views may be configured to selectively acquire\/present\/combine data in distinctive manners as desired.","In certain embodiments, the modeled approach  described above may be implemented by establishing a connection between each of the tags\/components (or more specifically selected tag component members) to an appropriate informational source (e.g. point data from a point data source or table \/non-point data from a non-point data source or table ) associated with the tag collection. For example, each of the tags component members  associated with each of the instantiated tags may be linked with the appropriate back-end data sources for example through appropriate identifiers or keys , . In the case described above for the area component pump view , configuring the connections for an instance of the area component to a \u201crecord\u201d found in the point data table \/non-point data table  in the tag collection may be accomplished through the use of \u201cconfiguration\u201d sequences  for each tag instance  represented as a Tag value view  contained within the area component pump view  (of which there would be 4 in the illustrated example). In the case of configuring connections for each tag instance  represented as a tag value view instance , individual tag component members  used to acquire point data (e.g. CurrentValue)  and non-point data (e.g. Units)  may be accomplished using \u201cconfiguration\u201d sequences  in a similar manner (of which there would be 8 in the illustrated example). The aforementioned configuration sequences may comprise command structures recognized by the data acquisition system for retrieving point data  and non-point data in a manner similar to that previously described in connection with .","In one aspect, an exemplary configuration sequence for the selected tag instances may comprise connecting the CurrentValue member and the Units member for each tag. Since the aforementioned members are the only members used in this example only these members would be configured. However, it will be appreciated from this example that one might typically configure each of the members  of a tag .","An exemplary sequence for each member might comprise specifying a back-end system or connection group which identifies the back-end system and specifying the tag in the back-end system, for example, by specifying the tagname or tag ID that associates the tag in this system with the tag in the back-end system. Thereafter, an \u201cattribute\u201d of interest may be specified (e.g. Value, Units, HiLimit, etc.). Typically, connectivity to various back-end systems provides some mechanism to identify which point or non-point data for the tag is desired.","In one aspect, for increasingly complex components\/views implemented under the modeled approach  development of the appropriate connections to point data  and non-point data  may be accomplished through the of inclusion of multiple previously defined components\/views. Thus the modeled approach  derives certain benefits from class-based structure and organization when high-level components\/views may be represented through the use of lower-level components\/views with or without the inclusion of additional information as needed.",{"@attributes":{"id":"p-0133","num":"0132"},"figref":"FIG. 8","b":["616","770","614","616","650","110","112","570","650","305","322","570","322","650","570","580","570","570"]},"In the non-modeled approach , the \u201cassociation\u201d of embedded views for selected tags\/components to a \u201crecord\u201d in the tag collection may constitute forming an appropriate \u201cconnection\u201d similar to that described above to route the desired data to the appropriate tag\/component display. For example, embedding the tag component's value view for the pump's temperature tag may comprise selecting the correct tag\/component by specifying the tags collection  and \u201cselecting\u201d the individual tag  by specifying a key\/unique identifier  within the point data table  or non-point data table  shown in . For example, acquisition of appropriate temperature point data  and non-point data  associated with an embedded value view  of the intake pump  may be obtained through the tag reference  corresponding to \u201cP\u201d in the joined data table  shown in . Similarly, the tag reference  corresponding to \u201cP\u201d in the joined data table  may be used to configure connections to acquire appropriate pressure point data  and non-point data  for the embedded value view . The outlet pump  may be similarly configured with analogous embedded value views ,  corresponding to temperature and pressure point data  and non-point data  (tags and key references for the exemplary outlet pump not shown in ).","Therefore, in the case of the non-modeled approach  to the development of the area component pump overview , the number of \u201cconfigurations\u201d used to achieve a similar result as the modeled example may be less (e.g. 4 in the illustrated example). From the foregoing, it will be appreciated that the non-modeled approach  therefore may be desirably implemented in various situations and require fewer connections\/less labor as compared to the modeled approach . In such instances, certain aspects of the class-based organization of components\/views may be preserved while others forgone as compared to the modeled approach .",{"@attributes":{"id":"p-0136","num":"0135"},"figref":["FIG. 9","FIG. 8","FIG. 5C"],"b":["802","805","810","802","815","820","802","810","614","616"]},"Collectively, the present teachings significantly enhance\/extend the functionality and capabilities of conventional tag-based and non-tag-based data acquisition\/management\/development systems providing features that have been otherwise unavailable due to limitations in manipulating tag-based and non-tag-based data as well as point and non-point data. Although the foregoing description has shown, described and pointed out novel features of the invention, it will be understood that various omissions, substitutions, and changes in the form of the detail of the apparatus as illustrated, as well as the uses thereof, may be made by those skilled in the art without departing from the spirit of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["These and other aspects, advantages, and novel features of the various embodiments of the invention are set forth in the following detailed description and upon reference to the accompanying drawings. In the drawings, same elements have the same reference numerals in which:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 4A-D"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4E"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 5A-B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 7A-C"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
