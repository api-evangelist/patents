---
title: Techniques for controlling authentication
abstract: Techniques for controlling authentication are provided. An enterprise injects a control and/or audit manager into the enterprise environment to control and in some instances audit third-party authentication services. A user attempts to access a resource that uses a third-party authentication service. The attempt is intercepted and third-party authentication handled by the manager. After authentication, a session between the user and the resource is established during which auditing services may be enacted. The user authenticates to the enterprise environment and the manager provides authentication for the user to the resource via the third-party authentication service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09519777&OS=09519777&RS=09519777
owner: Novell, Inc.
number: 09519777
owner_city: Provo
owner_country: US
publication_date: 20111031
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Increasingly, the physical location and management of physical and logical (software) assets for an enterprise are being outsourced to what is referred to in the industry as cloud environments. The ability to outsource the management and support of both physical and logical assets has a tremendous upside to enterprises.","One technology area that consumes a lot of Information Technology (IT) resources is authentication. A typical IT department has to deploy a variety of protocols, storage, and services to support authentication for access to enterprise resources. The industry has recognized this issue and has responded with OpenID.","OpenID is a non-profit consortium of developers, entrepreneurs, designers, and enterprises dedicated to improving identity-based technologies, security-based technologies, and privacy-based technologies.","OpenID permits an enterprise to outsource authentication for access to the enterprise's resources. This is done by permitting users to use one OpenID identifier and password to access multiple different enterprise sites. The enterprise benefits in that authentication is outsourced to a cloud, such that management and support is no longer an internal issue to the enterprise. The user benefits in that authentication to multiple sites require only a single identifier and password, such that multiple identifiers and passwords need not be remembered.","Essentially, OpenID is an authentication protocol being used in cloud environments to provide authentication for low to medium value web services. The protocol has proved to be very popular because it provides basic security with a very simple setup implementation.","One of the perceived weaknesses of OpenID is that almost any service provider can request authentication from almost any identity provider. However, in most enterprise environments access control of sites that can be authenticated is needed as well as auditing of access to such sites; this is needed for providing required compliance and security. Moreover, for internal enterprise users to gain access to other services via the OpenID protocol requires them to remember an additional OpenID identity for that which is used to authentication within the enterprise.","Various embodiments of the invention provide techniques for controlling authentication. Specifically, a method for authentication control is presented.","A \u201cresource\u201d includes a user, service, system, device, directory, data store, groups of users, combinations and\/or collections of these things, etc. A \u201cprincipal\u201d is a specific type of resource, such as an automated service or user that acquires an identity. A designation as to what is a resource and what is a principal can change depending upon the context of any given network transaction. Thus, if one resource attempts to access another resource, the actor of the transaction may be viewed as a principal.","An \u201cidentity\u201d is something that is formulated from one or more identifiers and secrets that provide a statement of roles and\/or permissions that the identity has in relation to resources. An \u201cidentifier\u201d is information, which may be private and permits an identity to be formed, and some portions of an identifier may be public information, such as a user identifier, name, etc. Some examples of identifiers include social security number (SSN), user identifier and password pair, account number, retina scan, fingerprint, face scan, etc.","A \u201cprocessing environment\u201d defines a set of cooperating computing resources, such as machines (processor and memory-enabled devices), storage, software libraries, software systems, etc. that form a logical computing infrastructure. A \u201clogical computing infrastructure\u201d means that computing resources can be geographically distributed across a network, such as the Internet. So, one computing resource at network site X can be logically combined with another computing resource at network site Y to form a logical processing environment.","The phrases \u201cprocessing environment,\u201d \u201ccloud processing environment,\u201d and the term \u201ccloud\u201d may be used interchangeably and synonymously herein.","Moreover, it is noted that a \u201ccloud\u201d refers to a logical and\/or physical processing environment as discussed above.","Various embodiments of this invention can be implemented in existing network architectures. For example, in some embodiments, the techniques presented herein are implemented in whole or in part in the Novell\u00ae operating system products, directory-based products, cloud-computing-based products, proxy products, and other products distributed by Novell\u00ae, Inc., of Waltham, Mass.","Also, the techniques presented herein are implemented in machines, such as processor or processor-enabled devices. These machines are configured to specifically perform the processing of the methods and systems presented herein. Moreover, the methods and systems are implemented and reside within a non-transitory computer-readable storage media or machine-readable storage medium and are processed on the machines configured to perform the methods.","Of course, the embodiments of the invention can be implemented in a variety of architectural platforms, devices, operating and server systems, and\/or applications. Any particular architectural layout or implementation presented herein is provided for purposes of illustration and comprehension only and is not intended to limit aspects of the invention.","It is within this context that embodiments of the invention are now discussed within the context of the .",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1","FIG. 1"]},"The components of the  are implemented in non-transitory and processor-readable storage medium and are executed on physical processors on one or more networks. Each processor specifically configured to execute the components.","The  is presented with reference to a specific example situation that an enterprise and an enterprise user may encounter. This is presented for purposes of illustration only as other situations can occur as well and still benefit from the techniques presented herein and below.","As will be demonstrated herein and below, embodiments provided herein eliminate the need for enterprise users to remember an OpenID identity. The techniques also eliminate the need for the OpenID protocol to ask users to validate whether a site should be allowed access; use of the OpenID identity as an implied trust is established to take care of this. The selection of which identity provider to use is also left to the end user. As is already well understood, the risk of fraud and user confusion can be very problematic for the enterprise.","The techniques herein: 1) Provide access control, allowing only specified sites to be authenticated, this provides an implied trust, eliminating the need for the user to allow access to the site via a prompt; 2) provide auditing (at various levels) about access activity for a service; 3) provide access to specified sites without the need for users to remember the OpenID identifier established by the enterprise; this reduces help desk support costs and reduces risk of fraud and user confusion; and 4) reduces the inputs an end user must make in order to access services using the OpenID protocol; that is, the user will not be asked to input an OpenID identity nor will the user be asked to confirm that the service should be authenticated.","It is noted that the techniques described herein do not change the OpenID protocol; rather, the techniques just introduce an agent into the protocol flow of the OpenID process. These techniques can be used with any third-party authentication that is outsourced by an enterprise, such that the techniques are not exclusively tied to the OpenID implementation. Yet, OpenID is currently very popular and as such is understood in the industry and as such the examples that follow with scenarios of two embodiments of the invention are discussed in the context of OpenID.","The primary embodiments of the invention are provided. In the first embodiment, all authentication service access is captured and run through a WorkLoad IQ Agent (may be referred to herein as \u201cagent; the benefits of this are increased auditing capability with increased setup complexity. In the second embodiment (shown and discussed with reference to the ) authentication access only is captured via the WorkLoad IQ Agent requiring significantly less setup complexity.","The techniques described herein assume that corporations pre identify a list of services to provide access to (sites for which a third-party authentication is being used). The WorkLoad IQ Agent is configured to allow access to such sites using OpenID (or as discussed above, other third-party single sign-on authentication services). Access to such services is done through the agent. It is assumed that end users are provided access to their identity via credentials such as name and password. In the embodiment, a user's identity is enhanced by the automated creation of an OpenID identity (that is typically unknown to the user) that allows the enterprise OpenID Provider to authenticate services.","When a user wants to access a service, a Uniform Resource Locator (URL) link at the WorkLoad IQ Agent (agent) identifies the activation of the link processed by the user. The agent redirects to the OpenID provider where credentials are entered. The agent then redirects to the desired service injecting the OpenID identity for the user into the request. The service then uses the OpenID protocol to interact with the enterprise OpenID provider to authenticate the user. Since access to the service was initiated at the enterprise, this implies that access should be granted and no further prompting for permission is necessary. At various points along the request\/response chain, auditing events are generated providing an access to the history of events. Using these techniques, at no time does the user need to remember the OpenID identity as it is always injected automatically by the techniques (for both embodiments discussed in ).","For purposes of illustration, a typical OpenID process flow is now discussed before referencing the  that discussed techniques presented herein. Assume for the example that Zzyzx.com is a company that needs to use cloud services but, does not want to setup a more complex Security Assertion Markup Language (SAML) protocol or other federation protocol. John (sample user) is an employee of the ZZYZX.com enterprise and needs to use Widgets.com to do his job. Widgets.com is a company that has an OpenID consumer enabled service.","Things to note for the example are that John can go to any service he chooses and use any OpenID Provider. He must use the passwords and ID he set on the OpenID Provider (OIDP) and any authentication done at Zzyzx.com cannot be used. There is not a practical way for Zzyzx.com to audit the use of the Widgets.com service. Additionally, the Zzyzx.com does not have any control over the identity of the user.","A typical OpenID process flow proceeds as follows (this is not shown in the ). John inputs the URL address of the service he wants to access; for example \u201cwidgets.com\/serviceA.\u201d The Browser (User Agent process referred to as \u201cUA\u201d) request the URL from the OpenID Consumer (OIDC). The OIDC requests the OpenID identifier. The UA prompts the user for his OpenID name identifier and John inputs a valid OpenID name identifier (e.g., John.Oidp.com). John must know his name identifier and the corporate system has no control of what the John inputs. The UA send the OpenID name to the OIDC. The OIDC now requests the location of the OpenID provider for OIDP. The OIDP returns a link to the OIDP provider. The OIDC and the OIDP now negotiate using the OpenID protocol. The OIDC now responds to the request, by redirecting the user to the OIDP. The OIDP sends a form requesting a password. The UA prompts John for his OIDP.COM password. John inputs his password and presses the submit button. At this point, the user (John in the example scenario) may also be asked to validate that the service provider should be authenticated. The form is posted to the OIDP and validated. The OIDP redirects the UA to the OIDC, including the original URL, OIDP validation of credentials in an authentication proof of trust statement and which may have other user attributes. The user, via the UA, now continues using the OIDC services. It is noted that in this typical OpenID process there is no way for the enterprise to audit or control what services are being used by the employee user.","The first embodiment where control and auditing are interjected into the OpenID process flow is now discussed to solve the typical limitations of the OpenID process.","Reference is now made to the  and the embodiment or scenario number  is discussed. Scenario  includes the OpenID WorkloadIQ agent (referred to as \u201cOWIQ\u201d in the ) and an OpenID Provider (OIDP).","Again Zzyzx.com is a company that needs to use single sign on to cloud services by using John's local credentials to authenticate him but, these local credentials cannot leave the corporate control. Zzyzx.com needs to control and audit all use of Widgets.com.","Widgets.com is a company that has an OpenID consumer (OIDC) enabled service. John has been provisioned to Widgets.com by some mechanism and as part of the provisioning process the ID used by John at Widgets.com is known to the invention OIDP+ component (enhanced service provided by the techniques herein).","The entity process flow for embodiment 1 proceeds as follows.","At A, John selects the web service he wishes to use. This is most likely be done by clicking on a hypertext link (URL link) on the enterprise web page or portal. The link does not point directly to the widgets.com page but, points to the enterprise OpenID WorkloadIQ Agent (OWIQ) that is an alias to the widgets.com site. An example URL might be appear as follows: http:\/\/zzyzx.com\/OutSideServices\/widgets\/serviceA.","At B, the browser requests the URL from the (OWIQ).","At C, if the OWIQ has a valid session with John's browser, the processing sequence goes to E. If the OWIQ does not have a valid session with John's browser, the OWIQ redirects the browser to the OpenID Provider+ (OIDP+).","At D, if the OIDP+ has a valid session with John's browser, the processing sequence goes to E. If the OIDP+ does not have a valid session with John's browser the processing sequence goes to D.","At D, the OIDP issues a request to negotiate client-based authentication, such as NTLM (NT Local Area Network (LAN) Manager) or Kerberos. If John used a domain-based authentication to authenticate his desktop this returns an \u201cAuth Token\u201d via D. If it does, the token is validated and the processing sequence goes to E.","At D, if there is no session on the browser or the client machine, then the user is prompted to enter his credentials into the browser and the credentials are sent to the OIDP, via D, where the credentials are validated. It is noted that this particular user interaction does not happen very often if the system is setup for Single Sign On (SSO) within the enterprise. Most of the time, John will not have any interaction to get SSO to cloud Software as a Service (SaaS) services that have been enabled by the administrator.","At E, the OIDP redirects the UA to the OIDC, via OWIQ, and includes with the redirection the original requested URL and OIDP validation of credentials for the OWIQ in an authentication proof of trust statement. This statement has other user attributes included with it, such as the OpenID identifier. This statement is now used to authenticate the OWIQ.","At F, the OWIQ now allows the flow to the OIDC. The OWIQ now posts the OpenID identifier to the OIDC.","At G, the OIDC now requests the location of the OpenID provider for OIDP.","At H, the OIDP returns a link to the OIDP provider (which is its own location).","At I, the OIDC and the OIDP now negotiate using the OpenID protocol.","At J, the OIDC now responds to the request in E by redirecting the user to the OIDP. The OIDP already knows who the user is so no passwords or other proof are required. Additionally, no user interaction is required to grant permission.","At K, the OIDP now redirects the UA to the OIDC and is granted authenticated access.","At Z, the user, via the UA, now continues using the OIDC services. It is noted that the processing flow is now though the OWIQ. This allows complete audit and control of the services used by John; the same as if the SaaS workload were hosted in the enterprise firewall.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 2","FIG. 2"]},"The  is presented with reference to the specific example situation (presented initially above with reference to the ) that an enterprise and an enterprise user may encounter. This is presented for purposes of illustration only as other situations can occur as well and still benefit from the techniques presented herein and below.","The second embodiment or second scenario includes the OpenID WorkloadIQ agent (OWIQ) and OpenID Provider (OIDP). Here, control over authentication is managed but auditing is not used as it was in the  embodiment.","Once again, Zzyzx.com is a company that needs to use Single Sign On (SSO) to Cloud services by using John's local credentials to authenticate him but, these local credentials do not leave the enterprise's control. Zzyzx.com needs to control the authentication only to Widgets.com.","Widgets.com is an enterprise that has an OpenID consumer (OIDC) enabled service. John has been provisioned to Widgets.com by some mechanism and as part of the provisioning process the ID used by John at Widgets.com is known the techniques presented.","Now authentication control for the second embodiment is presented with reference to the .","At A, John selects the web service he wishes to use. This is most likely done by clicking on a hypertext URL link on the company web page or portal. The link does not point directly to the widgets.com page but, points to the company OpenID WorkloadIQ Agent (OWIQ) that is an alias to the widgets.com site. For example, URL might be appear as follows: http:\/\/zzyzx.com\/OutSideServices\/widgets\/serviceA.","At B, the browser requests the URL from the (OWIQ).","At C, if the OWIQ has a valid session with John's browser, the processing sequence goes to E. If the OWIQ does not have a valid session with John's browser, the OWIQ redirects the browser to the OpenID Provider+ (OIDP+).","It is noted that the processing of D, D, D, and D are used to authenticate the OIDP by using local enterprise credentials for John and not using the OIDP credentials, which John is completely unaware of.","At D, if the OIDP+ has a valid session with John's browser, the processing sequence goes to E. If the OIDP+ does not have a valid session with John's browser the processing sequence goes to D.","At D, the OIDP issues a request to negotiate client based authentication, such as NTLM or Kerberos. If John used a domain-based authentication to authenticate his desktop this returns an \u201cAuth Token\u201d via D. If it does, the token is validated and the processing sequence flow goes to E.","At D, if there is no session on the browser or the client machine, the user is prompted to enter his credentials into the browser and the credentials are sent to the OIDP, via D, where the credentials are validated. It is noted that this user interaction does not happen very often if the system is setup for SSO within the enterprise. In fact, most of the time John does not have any interaction to get SSO to cloud SaaS services that have been enabled by the administrator.","At E, the OIDP redirects the UA to the OIDC with an auto submitting form that posts the OpenID identifier that belongs to John to the OIDC.","At G, the OIDC now requests the location of the OpenID provider for OIDP.","At H, the OIDP returns a link to the OIDP provider (which is its own location).","At I, the OIDC and the OIDP now negotiate using the OpenID protocol.","At J, the OIDC now responds to the request in E, by redirecting the user to the OIDP. The OIDP already knows who the user is so no passwords or other proof is required. Additionally, no user interaction is required to grant permission.","At K, the OIDP now redirects the UA (browser) to the OIDC with the OpenID parameters and is granted authenticated access.","At Z, the user via the UA now continues using the OIDC services. It is noted that the processing flow is not though the OWIQ. This technique for the second embodiment does not allow auditing of anything more than the authentication of the service but, does reduce the traffic and complexity of enterprise management and control of third-party SSO services.","The techniques herein solve several problems with easy to use web applications. It does this by using the Open ID protocol to authenticate to SaaS services in the cloud, while removing most if not all user interaction and control. Conventionally, if the Open ID protocol were used, the user selects an OpenID vendor and must remember new passwords and names to use. Herein, the techniques allow a local authentication to be used to an external SSO SaaS service without sharing the internal credentials with the SSO SaaS vendor or an external Open ID Provider. This is done without user interaction or knowledge, because the end user does not know or need to know the ID or passwords, the system can control access to the OpenID service.","The first embodiment also proxies interaction between the user and the SSO SaaS vendor and thereby allows the use of the SSO SaaS service to be audited. The technique automates the use of Open ID and can control the Identity Providers (IDPs) that can be used by limiting the selection list of services. Furthermore, the technique allows an Open ID IDP to be used by employees or those the company grants access to. The techniques add control and access policies to the Open ID protocol, without altering or changing the existing Open ID protocol. The techniques also allow enterprises to enable compliance by guaranteeing the use a SOS SaaS service.","The remaining  now provide specific embodiments of the overall techniques discussed above with reference to the .",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 3","b":["300","300"]},"The authentication audit manager is presented from the perspective of the first embodiment, discussed in detail above with reference to the .","At , the authentication audit manager intercepts a request from a principal (user or automated resource, such as a program or application). The request is made to access a resource that is external to an enterprise processing environment. The principal and the authentication audit manager operate from within the enterprise processing environment and the resource is externally accessible over a network connection, such as but not limited to the Internet. In an embodiment, the resource is accessible via a website, such as was discussed with the example presented in the discussion of the . The authentication audit manager acts as a transparent proxy to a client device of the principal; so, the client device is not preconfigured to access the transparent proxy. External communication ports can be monitored by the authentication audit manager to detect the request made from the principal via the client device.","According to an embodiment, at , the authentication audit manager authenticates the principal for access to the enterprise processing environment using enterprise credentials, which are different from third-party credentials (discussed below at ).","At , the authentication audit manager determines that the resource utilizes a third-party authentication provider for authenticating access to the resource. That is, the resource permits authentication to it to be outsourced to the third-party authentication provider.","In an embodiment, at , the authentication audit manager detects a redirection from an interface of the resource to the third-party authentication provider. The interface from the third-party authentication provider requests a third-party identifier and third-party credentials.","At , the authentication audit manager supplies third-party credentials to the third-party authentication provider for purposes of authenticating the principal for access to the resource. The principal is unaware of this authentication and the actions of the authentication audit manager.","According to an embodiment, at , the authentication audit manager manages the third-party credentials securely within the enterprise processing environment. Moreover, the third-party credentials are unknown to and unavailable to the principal.","In another case, at , the authentication audit manager registers the principal for authentication services of the third-party authentication provider when the third-party credentials are not present within the enterprise processing environment for the principal. So, an Application Programming Interface (API and can be via automated inspection of and input to web pages) for the third-party authentication provider is used to initially acquire the third-party credentials for the principal when the principal was not previously registered with the third-party authentication provider.","At , the authentication audit manager proxies an authentication session between the principal and the resource after successful authentication via the third-party authentication provider. The proxy services are done from the enterprise processing environment. This permits a number of beneficial operations or features for the enterprise associated with the enterprise processing environment.","According to an embodiment, at , the authentication audit manager terminates the authenticated session when an action of the principal or the resource during the authenticated session violates a predefined policy condition(s).","In another situation, at , the authentication audit manager provides a warning message to the principal during the authenticated session when an action of the principal violates a predefined policy condition(s).","Continuing with the embodiment of  and at , the authentication audit manager logs the violating action for subsequent automated reporting and notification actions of the authentication audit manager.","In an embodiment, at , the authentication audit manager tracks actions of the principal during the authenticated session.","Continuing with the embodiment of  and at , the authentication audit manager reports any of the actions that violate policy.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 4","b":["400","400"]},"The authentication control agent provides processing from the perspective of the second embodiment, discussed above with reference to the .","At , the authentication control agent detects an attempt by a principal (user or automated resource (program, service, etc.)) of an enterprise processing environment to access an external resource that uses a third-party authentication provider.","The authentication control agent provides similar features with respect to controlling authentication that is outsourced from the enterprise environment to a third-party authentication provider but does not proxy the subsequent authenticated session, as discussed more completely below.","According to an embodiment, at , the authentication control agent ensures that the principal is authenticated to the enterprise processing environment. That is, a determination is made as to whether the principal has an enterprise authenticated session with the enterprise processing environment.","Continuing with the embodiment of  and at , the authentication control agent authenticates the principal when the principal is not already authenticated to the enterprise processing environment. The authentication to the enterprise processing environment uses different credentials from that which is used with the third-party authentication provider.","Still continuing with the embodiment of  and at , the authentication control agent interacts with the principal to acquire enterprise specific credentials for authentication to the enterprise processing environment.","At , the authentication control agent identifies a third-party authentication provider for the external resource.","For example, at , the authentication control agent selects the third-party authentication provider from a list of available third-party authentication providers for the external resource.","At , the authentication control agent authenticates the principal to the external resource via the third-party authentication provider.","In an embodiment, at , the authentication control agent supplies a third-party identifier and a third-party credential to the third-party authentication provider. Here, the third-party identifier and the third-party credential are unknown and unavailable to the principal.","Continuing with the embodiment of  and at , the authentication control agent redirects an interface of the principal to the third-party authentication provider after the third-party identifier and the third-party credential are supplied on behalf of the principal. Here, the third-party authentication provider establishes the authenticated session between the principal and the external resource.","Still continuing with the embodiment of  and at , the authentication control agent provides the third-party identifier as an Open ID identifier and the third-party credential as an OpenID credential. The third-party authentication provider provides single sign on (SSO) services to the principal, the external resource, and other external resources accessible to the principal from the enterprise processing environment.","At , the authentication control agent permits the principal and the external resource to proceed with interactions with one another via an authenticated session, which is provided and established by the third-party authentication provider. So, unlike the authentication audit manager of the , the authentication control agent does not proxy or host the authentication session and no audit features are enabled.",{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 5","b":["500","500"]},"The authentication management system  implements, inter alia, various aspects of the , and the methods  and  of the , respectively.","The authentication management system  includes an authentication audit manager  and an authentication control agent . Each of these and their interactions with one another will be discussed in turn.","The authentication management system  includes one or more processors configured with the authentication audit manager , which is implemented in a non-transitory computer-readable storage medium as executable instructions that process on the processor(s).","In an embodiment, the processors are a server or cloud-based set of servers for a particular source cloud environment.","Example processing associated with the authentication audit manager  was presented above with reference to the .","The authentication management system  also includes another and different set of processors (may in some embodiments be the same set of processors as well) configured with the authentication control agent . The authentication control agent  is implemented in a non-transitory computer-readable storage medium as executable instructions that process on the processor(s).","Example processing associated with the authentication control agent  was presented in detail above with respect to the .","The authentication control agent  is configured to intercept an access request to an external resource made by a principal. The authentication control agent  is also configured to identify a third-party authentication provider for the external resource and provide credentials on behalf of the principal for purposes of the principal being authenticated to the external resource for an authenticated session with the external resource. The credentials are not known and not available to the principal.","The authentication audit manager  is configured to proxy the authenticated session from the enterprise processing environment. The authentication audit manager  is also configured to monitor actions of the principal during the authenticated session.","According to an embodiment, the third-party authentication provider is an Open ID provider that provides SSO services to the principal via the credentials to the external resource and other external resources accessible to the principal via the enterprise processing environment.","The above description is illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of embodiments should therefore be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
