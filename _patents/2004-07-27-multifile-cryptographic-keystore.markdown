---
title: Multi-file cryptographic keystore
abstract: A system including an application configured to request a key, a keystore configured to provide the key, wherein the keystore comprises a non-application specific directory, and an application-specific subdirectory.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07549174&OS=07549174&RS=07549174
owner: Sun Microsystems, Inc.
number: 07549174
owner_city: Santa Clara
owner_country: US
publication_date: 20040727
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["As reliance has computers has increased, so has the concern for the computer security. The threat of hackers breaking into computer systems or eavesdropping on communications has prompted many corporations and individuals to implement security strategies. Some of these strategies include encrypting data communication using Secure Socket Layer (SSL) protocol and signing digital documents with digital signatures. The aforementioned security mechanisms require encryption keys (i.e., public and private encryption keys) as well as certificates to authenticate the encryption keys.","Depending on the computer system configuration (e.g., the number of users, the number and types of applications, the level of security, etc.) the computer system may store a number of encryption keys and a number of corresponding certificates. The encryption keys and corresponding certificates are typically stored in a central location, commonly referred to a keystore. In many cases, the keystore is a single file containing all the encryption keys and corresponding certifications for the computer system. Further, the keystore may also be password protected as an extra security precaution.","When an application (or process) requires an encryption key, the application sends a request to the keystore. The entire keystore is subsequently retrieved and queried to obtain the particular encryption key. The first matching encryption key is subsequently returned to the application. Prior to returning the encryption key to the application, the keystore may authenticate the encryption key using the corresponding certificates. Typically, only one application may access the keystore at a time because the keystore is a single file.","In general, in one aspect the invention relates to a system comprising an application configured to request a key, a keystore configured to provide the key, wherein the keystore comprises a non-application specific directory, and an application-specific subdirectory.","In general, in one aspect, the invention relates to a method for obtaining a key from a keystore, comprising receiving a request for the key from an application, searching for the key in a secure area of an application-specific subdirectory of the keystore, determining whether the application has permission to retrieve the key from the secure area of the application-specific subdirectory, if the key is found in the secure area of the application-specific subdirectory, retrieving the key from the secure area application-specific subdirectory, if the application has permission to retrieve the key from the secure area of the application-specific subdirectory, searching for the key in a non-secure area of an application-specific subdirectory, if the key is not found in the secure area of the application-specific subdirectory, retrieving the key from the non-secure area of the application-specific subdirectory, if the key is found in the non-secure area of the application-specific subdirectory, searching for the key in a secure area of a non-application specific directory, if the key is not found in the non-secure area of the application-specific directory, determining whether the application has permission to retrieve the key from the secure area of the non-application specific directory, if the key is found in the secure area of the non-application specific directory, retrieving the key from the secure area of the non-application specific directory, if the application has permission to retrieve the key from the secure area of the non-application specific directory, searching for the key in a non-secure area of the non-application specific directory, if the key is not found in the secure area of the non-application specific directory, and retrieving the key from the non-secure area of the non-application specific directory, if the key is found in the non-secure area of the non-application specific directory.","In general, in one aspect, the invention relates to a plurality of nodes, comprising an application configured to request a key, a keystore configured to provide the key, wherein the keystore comprises a non-application specific directory, and an application-specific subdirectory, wherein the application is executing on at least one of the plurality of nodes, and wherein the keystore is executing on at least one of the plurality of nodes.","In general, in one aspect, the invention relates to a computer for obtaining a key from a keystore, comprising a processor, memory, a storage device, and software instructions stored in the memory for enabling the computer system under control of the processor, to: receive a request for the key from an application, search for the key in a secure area of an application-specific subdirectory of the keystore, determine whether the application has permission to retrieve the key from the secure area of the application-specific subdirectory, if the key is found in the secure area of the application-specific subdirectory, retrieve the key from the secure area application-specific subdirectory, if the application has permission to retrieve the key from the secure area of the application-specific subdirectory, search for the key in a non-secure area of an application-specific subdirectory, if the key is not found in the secure area of the application-specific subdirectory, retrieve the key from the non-secure area of the application-specific subdirectory, if the key is found in the non-secure area of the application-specific subdirectory, search for the key in a secure area of a non-application specific directory, if the key is not found in the non-secure area of the application-specific directory, determine whether the application has permission to retrieve the key from the secure area of the non-application specific directory, if the key is found in the secure area of the non-application specific directory, retrieve the key from the secure area of the non-application specific directory, if the application has permission to retrieve the key from the secure area of the non-application specific directory, search for the key in a non-secure area of the non-application specific directory, if the key is not found in the secure area of the non-application specific directory, and retrieve the key from the non-secure area of the non-application specific directory, if the key is found in the non-secure area of the non-application specific directory.","Other aspects of the invention will be apparent from the following description and the appended claims.","Exemplary embodiments of the invention will be described with reference to the accompanying drawings. Like items in the drawings are shown with the same reference numbers.","In an embodiment of the invention, numerous specific details are set forth in order to provide a more thorough understanding of the invention. However, it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail to avoid obscuring the invention.","In general, embodiments of the invention, relate to a method and apparatus for a multi-file cryptographic keystore. More specifically, one or more embodiments for the invention provide a method and apparatus for configuring a multi-file cryptographic keystore. Further, one or embodiments of the invention provide a multi-file cryptographic keystore including non-application specific directories and application-specific subdirectories. Further, one or more embodiments of the invention provide a multi-file cryptographic keystore in which each directory and subdirectory includes secure and non-secures areas. Further, one or more embodiments of the invention provide a method and apparatus for allowing multiple applications (or processes) to access the multi-file cryptographic keystore simultaneously. Further, one or more embodiments of the invention provide a method and apparatus for isolating individual files within the multi-file cryptographic keystore. Further, one or more embodiments of the invention provide a method and apparatus allowing administrators to configure the multi-file cryptographic keystore at various levels of granularity.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","102","102","104","100","104","102"]},"The request is forwarded from the application () to the keystore API (). In one embodiment of the invention, the keystore API () includes functionality to interface the application () and the keystore (). More specifically, in one embodiment of the invention, the keystore API () includes functionality to publish the various interfaces necessary for the application () to access the keystore (). The request is subsequently forwarded to the keystore (). In one embodiment of the invention, the keystore () may include functionality to receive the request, search for the key, determine whether the application () has permission to retrieve the key (e.g., by verifying the password), obtain certificates related to the key, forward the key to the requesting application () (via the keystore API ()), etc. Further, the keystore () may include functionality to allow multiple applications to access the keystore () simultaneously. An embodiment of the keystore () is shown in .",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2","b":["104","110","110","110"]},"The keystore () may also include a number of application-specific subdirectories (i.e., application-specific subdirectory A () and application-specific subdirectory N ()). The application-specific subdirectories (i.e., application-specific subdirectory A () and application-specific subdirectory N ()) typically include keys (and corresponding certificates) that are associated with a particular application. Further, the application-specific subdirectories (i.e., application-specific subdirectory A () and application-specific subdirectory N ()) may also hold per-application user keys (and corresponding certificates) depending on the granularity of the security measures used by the application and\/or system on which the application is executing.","The non-application specific directory () and each of the non-application specific subdirectories (i.e., application-specific subdirectory A () and application-specific subdirectory N ()) may be further subdivided into a secure key area and a non-secure key area. Thus, non-application specific directory () includes secure area () and non-secure area (). Further, application-specific subdirectory A () includes secure key area () and non-secure key area (), and application-specific subdirectory N () includes secure key area () and non-secure key area (). Though not shown in , the secure and non-secure areas within a given directory or subdirectory may be stored as a single file. For example, the secure and non-secure areas may be stored as a single file using the Personal Information Exchange Syntax Standard (PKCS#12).","In general, keys and certificates stored in the secure key area of the respective directory or subdirectory are password protected or otherwise protected in a manner which requires the keystore (or a related process) to verify that the application (or process) requesting the key has sufficient privileges to access the key (and corresponding certificates). In one embodiment of the invention, the keys (and corresponding certificates) are stored in encrypted form and may only be decrypted if the requesting application has permission to retrieve the key (and corresponding certificates) as determined by the keystore (or a related process). Further, in one embodiment of the invention, each of the keys (and corresponding certificates) may be encrypted using a different encryption key and\/or may be protected using a different password. In contrast, the keys and certificates stored in the non-secure key area of the respective directory or subdirectories are typically not password protected and may be retrieved for use by any requesting application without requiring any verification of the requesting application.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3","b":["100","102","104"]},"Continuing with the discussion of , once the information about the key has been extracted from the request, a determination is then made as to whether the requested key is an application-specific key (ST). In one embodiment of the invention, this determination may be made by comparing the name of the requesting application with the available application-specific subdirectories. If the name of the requesting application has a corresponding application-specific subdirectory, then the requested key may be considered an application-specific key. Those skilled in the art will art will appreciate that a first application may request an application-specific key corresponding to second application, in which case ST corresponds to determining whether there is a application-specific subdirectory for the second application (even though the first application is requesting the key).","Those skilled in the art will appreciate that ST is conducted to increase the efficiency of the search for the key. Specifically, if the requesting application does not have a corresponding application-specific subdirectory, then the keystore need not waste resources by searching in any of the application-specific directories. However, those skilled in the art will appreciate implementations may exist in which application-specific directories are searched regardless of whether or not the key is considered to be an application-specific key.","Continuing with the discussion of , if the key is an application-specific key (ST), then the keystore proceeds to the corresponding application-specific subdirectory (i.e., the application-specific subdirectory corresponding the requesting application) (ST). Within the application-specific subdirectory, the keystore initially searches the secure area of the application-specific subdirectory to determine whether the requested key is present (ST). If the requested key is present in the secure area, then the keystore proceeds to determine whether the requesting application has permission to retrieve the key (ST). In one embodiment of the invention, the permission is determined by comparing a password supplied by the requesting application to the password stored in the keystore. Those skilled in the art will appreciate that any method of verification may be used to determine that the requesting application (or process) has permission to access the key.","If the keystore (or a related process) determines that the requesting application has the necessary permission to retrieve the requested key, the keystore proceeds to retrieve the key and forward the key to the requesting application (ST ). In one embodiment of the invention, retrieving the key may include decrypting the key. Alternatively, if the key is not stored in encrypted form, then the key is retrieved from the keystore and forwarded to the requesting application. If the keystore determines that the requesting application does not have sufficient privileges, then the operation fails and\/or the user\/application is notified accordingly (not shown).","If the key is not in the secure area of the application-specific subdirectory (ST), then the non-secure area in the application-specific subdirectory is searched by the keystore (ST). If the key is found in the non-secure area of the application-specific subdirectory, then the key is retrieved from the keystore and forwarded to the requesting application (ST).","Continuing with the discussion of , if the key is not located in the application-specific subdirectory or the key is not an application-specific key (ST), then the keystore proceeds to the non-application specific directory (ST). Those skilled in the art will appreciate that all application-specific directories are not searched; rather only the one that corresponds the particular requesting application is searched. The keystore then proceeds to search for the key in the secure-area of the non-application specific directory (ST). If the requested key is present in the secure area of the non-application specific directory, then the keystore proceeds to determine whether the requesting application has permission to retrieve the key (ST ). If the keystore (or a related process) determines that the requesting application has the necessary permission to retrieve the requested key, the keystore proceeds to retrieve and forward the key to the requesting application (ST ). If the keystore determines that the requesting application does not have sufficient privileges, then the operation fails and\/or the user\/application is notified accordingly (not shown).","If the key is not in the secure area of the non-application specific directory (ST), then the non-secure area in the non-application specific directory is searched by the keystore (ST). If the key is found in the non-secure area of the non-application specific directory, then the key is retrieved from the keystore and forwarded to the requesting application (ST). Alternatively, if the request key is not found in the non-application specific directory, then the operation fails and\/or the user\/application is notified accordingly (not shown).","Those skilled in the art will appreciate that multiple copies of a given key (and corresponding certificates) may be present in the keystore. However, the keystore only returns the first requested key that is encountered during the search. Further, those skilled in the art will appreciate the while the invention was described with respect to embodiment of the keystore shown in , there may be alternate hierarchical configurations of the keystore that have the same properties as the hierarchical configuration shown in .","The invention may be implemented on virtually any type of computer regardless of the platform being used. For example, as shown in , a computer system () includes a processor (), associated memory (), a storage device (), and numerous other elements and functionalities typical of today's computers (not shown). The computer system () may also include input means, such as a keyboard () and a mouse (), and output means, such as a monitor (). The computer system () may be connected to a local area network (LAN) or a wide area network (e.g., the Internet) (not shown) via a network interface connection (not shown). Those skilled in the art will appreciate that these input and output means may take other forms. Further, those skilled in the art will appreciate that one or more elements of the aforementioned computer () may be located at a remote location and connected to the other elements over a network.","Further, the invention may be implemented on a distributed system having a plurality of nodes, where each portion of the invention (e.g., the application keystore, etc.) may be located on a different node within the distributed system. In one embodiment of the invention, the node corresponds to a computer system. Alternatively, the node may correspond to a processor with associated physical memory.","While the invention has been described with respect to a limited number of embodiments, those skilled in the art, having benefit of this disclosure, will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly, the scope of the invention should be limited only by the attached claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
