---
title: Method and apparatus for providing automatic controlled value expansion of information
abstract: An approach is provided for automatic controlled value expansion of information. A value expansion controller detects a request at a device to perform an information operation on a set of data elements of an information space, wherein the request identifies the set by a name and the information operation applies to each data element within the set. The value expansion controller intercepts the request based on the detection and determines the location of the data elements within a communication network based on the name. The value expansion controller retrieves the data elements from the location and populates an expansion table with the retrieved data elements, wherein the expansion table is correlated to the set. The value expansion controller performs the information operation on each data element in the expansion table and causes transmission of one or more results of the information operation to the device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08271433&OS=08271433&RS=08271433
owner: Nokia Corporation
number: 08271433
owner_city: Espoo
owner_country: FI
publication_date: 20091230
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SOME EXAMPLE EMBODIMENTS","DESCRIPTION OF SOME EMBODIMENTS"],"p":["Modern users rely on a host of connected devices and services such as Internet-enabled mobile devices, personal computers, servers, applications, and the like, for information storage and processing. As part of this trend, service providers and device manufacturers are combining and providing interoperability among these myriad information processing devices, applications, and services. More specifically, one area of development has been the processing of information through numerous, individual and personal spaces in which persons, groups of persons, etc. can place, share, interact and manipulate webs of information with their own locally agreed semantics without necessarily conforming to an unobtainable, global whole. These information spaces, often referred to as smart spaces, are projections of the \u2018Giant Global Graph\u2019 in which one can apply semantics and reasoning at a local level. In one embodiment, information spaces are made of distributed components of information which are stored, maintained and processed in different forms by systems having different architectures and using different technologies. However, because of the distributed nature of such information, information may need to be transferred from device or system to another for access or processing, thereby using valuable network bandwidth and resources. As a result, service providers and device manufacturers face significant technical challenges in reducing the amount of network resources for information processing.","Therefore, there is a need for an approach for providing automatic controlled value expansion of information contained within information spaces.","According to one embodiment, a method comprises acting on a request to perform an information operation on a set of data elements of an information space. The request identifies the set by a name and the information operation applies to one or more data elements within the set. The method also comprises determining a location of the one or more data elements based on the name. The method further comprises causing, at least in part, retrieval of the one or more data elements from the location. The method further comprises populating an expansion table with at least the retrieved data elements, wherein the expansion table is at least substantially correlated to the set. The method further comprises performing the information operation on all or a portion of the retrieved data elements in the expansion table.","According to another embodiment, an apparatus comprising at least one processor, and at least one memory including computer program code, the at least one memory and the computer program code configured to, with the at least one processor, cause, at least in part, the apparatus to act on a request to perform an information operation on a set of data elements of an information space. The request identifies the set by a name and the information operation applies to one or more data elements within the set. The apparatus is also caused to determine a location of the one or more data elements based on the name. The apparatus further causes, at least in part, retrieval of the one or more data elements from the location. The apparatus is further caused to populate an expansion table with at least the retrieved data elements, wherein the expansion table is at least substantially correlated to the set. The apparatus is further caused to perform the information operation on all or a portion of the retrieved data elements in the expansion table.","According to another embodiment, a computer-readable storage medium carrying one or more sequences of one or more instructions which, when executed by one or more processors, cause, at least in part, an apparatus to act on a request to perform an information operation on a set of data elements of an information space. The request identifies the set by a name and the information operation applies to one or more data elements within the set. The apparatus is also caused to determine a location of the one or more data elements based on the name. The apparatus further causes, at least in part, retrieval of the one or more data elements from the location. The apparatus is further caused to populate an expansion table with at least the retrieved data elements, wherein the expansion table is at least substantially correlated to the set. The apparatus is further caused to perform the information operation on all or a portion of the retrieved data elements in the expansion table.","According to yet another embodiment, an apparatus comprises means for acting on a request to perform an information operation on a set of data elements of an information space. The request identifies the set by a name and the information operation applies to one or more data elements within the set. The apparatus also comprises means for determining a location of the one or more data elements based on the name. The apparatus further comprises means for causing, at least in part, retrieval of the one or more data elements from the location. The apparatus further comprises means for populating an expansion table with at least the retrieved data elements, wherein the expansion table is at least substantially correlated to the set. The apparatus further comprises means for performing the information operation on all or a portion of the retrieved data elements in the expansion table.","Still other aspects, features, and advantages of the invention are readily apparent from the following detailed description, simply by illustrating a number of particular embodiments and implementations, including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments, and its several details can be modified in various obvious respects, all without departing from the spirit and scope of the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","Examples of a method, apparatus, and computer program for providing automatic controlled value expansion of information are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent, however, to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.","As used herein, the term \u201cinformation space\u201d or \u201csmart space\u201d refers to an aggregated information set from different sources. This multi-sourcing is very flexible since it accounts and relies on that the observation that the same piece of information can come from different sources. In one embodiment, information within the information space or smart space is represented using Semantic Web standards such as Resource Description Framework (RDF), RDF Schema (RDFS), OWL (Web Ontology Language), FOAF (Friend of a Friend ontology), rule sets in RuleML (Rule Markup Language), etc. Furthermore, as used herein, the RDF refers to a family of World Wide Web Consortium (W3C) specifications originally designed as a metadata data model. It has come to be used as a general method for conceptual description or modeling of information that is implemented in web resources; using a variety of syntax formats. Although various embodiments are described with respect to information spaces and RDF, it is contemplated that the approach described herein may be used with other structures and conceptual description methods used to create models of information.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},"As an example, the semantic information broker may contain a list representing a set of data elements (e.g., list of people), and a device may then want to perform some information operation on the list such as extracting a subset of the information in the list to create a list including only those people who are friends according to the view point of the device or a user associated with the device. The device may have the identifiers of the people on the list in an internal list or use the RDF property mechanism to express the friend relation on the semantic information broker. As another example, a user may want to invite all of his\/her friends to an event by creating a relation between each person in a stored list and the event. The user will have to iterate the internal list he\/she locally maintains and insert the invitations. This iteration can involve transferring or otherwise manipulating a significant amount information depending on the size of the list.","In another instance, a user may need to find out which one of his\/her friends know each other. The user will have to make a two-leveled iteration through the internal list of friends to essentially generate all queries of triple form (friend1, :knows, friend2), (friend1, :knows, friend3), etc. If the relation is a one way relation (e.g., envies) even more queries are generated because the subject and object of the triple may not be interchangeable. In other words (friend1, :envies, friend2) is not an equivalent for (friend2, :envies, friend1). As the number of involving relations increases, the amount of iteration rapidly grows. Queries of this kind which require excessive amounts of memory space and processing power can impose high loads on a device and interfere with the normal functionalities of the device. Furthermore, because of the potential for creating multiple interdependent relationships and connections among the multiple sets or lists of information, tracking and enforcing information access and security policies can become quite cumbersome.","To address these problems, a system  of  introduces the capability of providing automatic controlled value expansion of information. By way of example, value expansion enables a device to identify one or more sets of data elements on which a query or other information operation is to be performed by a name (e.g., a Universal Resource Identifier (URI)) for each set and to send the names and the requested query or operation to a semantic information broker of an information space. In this way, the system  advantageously reduces the amount of bandwidth and computing resources for processing information sets because the system  includes means transmitting only the names or other identifiers of the information set rather than the actual data elements of the sets, and then means for expanding the values (or data elements) referenced by the names. In one embodiment, the semantic information broker keeps a synchronized duplicate of the data elements of the sets so that the semantic information broker can reference local copies of the data elements when perform value expansion. As part of the value expansion process, the semantic information broker applies the received query or operation on the data elements of the sets, and permutations of the elements if necessary, and returns the results to the requesting device. As noted, this process reduces the volume of data exchanged between the device and the semantic information broker because instead of sending a complete set of data elements from the device to the semantic information broker, only the name of the set is being sent. This will result in lower bandwidth usage for data exchange over the communication network. In one embodiment, the value expansion is performed by semantic information broker or another component specifically designated for value expansion and is triggered by predetermined and negotiated family of URIs. In yet another embodiment, the semantic information broker can detect and intercept requests for operations involving value expansion and then transmit the results of the value expansion to the appropriate device or node.","Furthermore, storing multiple copies of the data elements in, for instance, the local storage of the device and in the semantic information broker, advantageously increases data security because the duplicate copies of the data elements can be used as backups with respect to one another. Additionally, an access control mechanism can be assigned to a set or to subsets of a set so that access to value expansions is granted only to authorized entities.","Semantic information brokers as main components of information spaces may be equipped with more powerful processors compared to individual devices (e.g. user equipment). Therefore, application of a query or other operation on data elements of a set by the semantic information broker may take remarkably less processing time compared to the case where the query is processed by the device. This will improve overall efficiency of the whole information space system.","In distributed, ontology based information sharing systems such as information spaces (smart spaces) the information bases are distributed devices that communicate by exchanging information (e.g., RDF graphs) via a shared memory. RDF graphs consist of a set of unique triples of form subject, predicate, object, which allow expressing graphs. The simplest form of an RDF graph is a single triple and an information store may contain several unconnected graphs. RDF is a family of World Wide Web Consortium (W3C) specifications originally designed as a metadata data model. RDF has come to be used as a general method for conceptual description or modeling of information that is implemented in web resources; using a variety of syntax formats. The underlying structure of any expression in RDF is a collection of triples, each consisting of three disjointed sets of nodes including a subject, a predicate and an object. In one embodiment, a subject is an RDF Uniform Resource Identifier (URI) reference (U) or a blank node (B), a predicate is an RDF URI reference (U), and an object is an RDF URI reference (U), a literal (L) or a blank node (B). A set of such triples is called an RDF graph. Table 1 shows sample RDF triples. The information communicated among devices can be free formed RDF triples or governed by an ontology, which describes the properties and relations of classes of information.",{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RDF structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Subject","Predicate","Object"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["uri:\/\/... ...\/rule#CD-introduction,","rdf:type,","uri:\/\/... ... ... ...\/Rule"]},{"entry":["uri:\/\/... ...\/rule#CD-introduction,","uri:\/\/... ...\/rule#assumption,","\u201cc\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"A knowledge processor is an entity that contains the logic and functionality to establish communication between a device and various information spaces. A knowledge processor generally runs on a single device, even though it may have internal distribution and may initiate information operations on data sets and lists as described herein. Such a device may be a mobile device\/phone, personal computer, active sensor, Radio Frequency Identification (RFID) tag, etc. Connectivity is over some network protocol to a semantic information broker. A semantic information broker contains the logic for parsing messages and pointers to subscription handlers between the knowledge processor and the information space. A knowledge processor may potentially connect to more than one information spaces at a time thus distributing and synchronizing the operations across all connected information spaces.","As shown in , the system  comprises a user equipment (UE)  having connectivity to an information space  via a communication network . By way of example, the communication network  of system  includes one or more networks such as a data network (not shown), a wireless network (not shown), a telephony network (not shown), or any combination thereof. It is contemplated that the data network may be any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), a public data network (e.g., the Internet), or any other suitable packet-switched network, such as a commercially owned, proprietary packet-switched network, e.g., a proprietary cable or fiber-optic network. In addition, the wireless network may be, for example, a cellular network and may employ various technologies including enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., worldwide interoperability for microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi) or other short range networks, satellite, mobile ad-hoc network (MANET), and the like.","The UE  is any type of mobile terminal, fixed terminal, or portable terminal including a mobile handset, station, unit, device, multimedia computer, multimedia tablet, Internet node, communicator, desktop computer, laptop computer, Personal Digital Assistants (PDAs), or any combination thereof. It is also contemplated that the UE  can support any type of interface to the user (such as \u201cwearable\u201d circuitry, etc.).","A device -of  creates a request including a command to register a name or identifier (e.g., a URI) for a set of data elements in the semantic information broker -of the information space  and a query or other operation that is to be applied to the set of data elements. After detecting and intercepting the request the semantic information broker -registers the name and sends the request to the value expansion controller -. The value expansion controller retrieves the data elements correlated to the set with the received name from the information store -. Additionally, the value expansion controller analyzes the request and extracts the query or operation that is to be applied on the elements of the retrieved set. The request may include conditions identifying a subset of data elements to be selected and for the query or operation to be applied only on the data elements in the selected subset. In such case, the value expansion controller extracts the subset by applying the condition to the retrieved elements of the set.","A request may include more than one set name, meaning that the query needs to be applied on the data elements of two or more sets. If more than one set names exist in the request, the value expansion controller will generate all permutations of the values and applies the query on all of them. This allows the device to offload potentially heavy computation to the semantic information broker. In one embodiment, the process of value expansion may be delayed or the value expansion requests may be processed in an order different from the order they have been received in, based on the context or due to other conditions and\/or priorities. For example, a request by a user may be delayed until a request sent by an administrator is processed because the modifications applied by the administrator are essential for the user request to return a correct result.","Some of the requested value expansions may already exist in the information store -from past processes. There can be a negotiation mechanism between the requesting device and the semantic information broker based on which, the semantic information broker may reveal a subset of the existing value expansion to the device. This will be done only if it is allowed by the security restrictions on the existing data. The results of performing the query on data permutations are returned to the device -by the semantic information broker.","In one embodiment a value expansion controller  may generate new value expansions not triggered by a query or operation from a device but based on its own internal functions including actions related to the access protocol for devices. For example, a user u may request value expansion for all his\/her friends x and y who know each other. Assuming that friends(u) is a set containing list of u's friends, the result that u will expect to receive to the request would be values of form (x, y) where\n\nx\u03b5friends(u)y\u03b5friends(u)x\u03b5friends(y)y\u03b5friends(x)\n\nUpon receiving the request the value expansion controller may generate value expansions friends(u) and friends(k) for every k in friends(u).\n","In other embodiments, a value expansion controller may generate an \u201cundo\u201d expansion upon receiving a deletion request, in order to avoid information loss in cases where deletion request has been sent erroneously. Additionally, the value expansion controller may update one or more counters to keep track of statistics such as the number of queries on certain information, the number of queries by a certain device, etc. Furthermore, the value expansion controller may automatically execute a predetermined sequence of commands after insertion, deletion, updating or querying information in order to produce a new value expansion or update an existing expansion.","In one embodiment, a user may alter the combination of value expansions by adding one or more of information items such as, one or more value expansions generated by the semantic information broker, results of the queries to the semantic information broker, user produced free-form information and user produced formatted information to the configuration.","In another embodiment, the value expansion mechanism can be implemented on the device side, meaning that the value expansion process is triggered by a component within the device and interception is done in the device. However value expansions generated by the device may not be available to any other entity besides the generating device.","In yet another embodiment, the interception is performed by the semantic information broker but the values are stored in the device. This would require the semantic information broker to be able to query the device for required values before generating the value expansion.","In one embodiment, the described approach can be used to provide a lightweight privacy mechanism wherein it is possible to attach policies for example to control visibility of the values of variables (e.g., of the set names). By way of example, the value expansion controller  can restrict the expansion of names individually, such that a restricted name is not expanded when referred to by unauthorized entities. Therefore, unauthorized entities (e.g., entities without the corresponding access rights) can be prevented from accessing the actual values of variables. In addition to restricting individual names, the value expansion controller  can also restrict access to multiple names based on their naming (e.g., names with a common prefix are restricted, or for names which are URIs, URIs with certain structure are restricted). The policies are easily enforced as the variable expansion is generally performed by the value expansion controller  within the semantic information broker , and the values may be stored separately from the information graph.","By way of example, the UE , semantic information brokers  and value expansion controller  communicate with each other and other components of the communication network  using well known, new or still developing protocols. In this context, a protocol includes a set of rules defining how the network nodes within the communication network  interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node, from generating and receiving physical signals of various types, to selecting a link for transferring those signals, to the format of information indicated by those signals, to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection (OSI) Reference Model.","Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises (1) header information associated with a particular protocol, and (2) payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols, the packet includes (3) trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet, its destination, the length of the payload, and other properties used by the protocol. Often, the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different, higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks, such as the Internet, typically include a physical (layer 1) header, a data-link (layer 2) header, an internetwork (layer 3) header and a transport (layer 4) header, and various application headers (layer 5, layer 6 and layer 7) as defined by the OSI Reference Model.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 2","b":["111","111","201","203","205","207","209"]},"The value expansion controller  receives a request for value expansion from a device or other component of the information space  (e.g., SIBs -, value expansion controllers -). More specifically, the request may originate as an internal request (e.g., from the SIB  and\/or value expansion controller ), an external request (e.g., from the UE ), or a combination thereof. In one embodiment, the request may consist of statements where each statement consists of various components identifying commands and parameters for the statement. The request processor  receives the request, extracts the components of every statement of the request and stores a list of the request statements including the extracted components in the expansion data store . Table 2 shows an exemplary structure for a statement of a request. The statement of Table 2 consists of, for instance, five components. It is noted, however, that depending on the implementation, the exact types and number of components may vary. As seen in table 2, a statement may include a command for the semantic information broker, identifying the purpose of the request. For instance, if it is the first time that a device is requesting value expansion for a set, the device can register the name of the set at the value expansion controller . Value expansion can be then requested for a set that has already been registered. The command identifies whether the request is a registration or a value expansion request.","A statement may also include a subject identifying context of the data elements that the value expansion is applied to. A subject is a set of unique names for data elements so that no two data elements are referred to with the same subject. The subject may also identify the location of the data elements. By way of example, the location of the data elements may be local with respect to the value expansion controller  or the SIB  (e.g., stored in information store ) or can be any other component of the network  (e.g., the UE ). Furthermore, a subject may be accompanied by a modifier. Existence of a modifier in the subject prompts the request processor  that the statement does not represent a value expansion request but it rather contains instructions for modifications to the expansion variables to be performed before value expansion. For example, the statement subject may include a modifier create which is issued for a value expansion which does not exist and therefore a new entry need to be created for it in the expansion table. An expansion table is the list of expanded values and is stored on the data store . Other modifiers include read, update, delete, abolish, etc. New modifiers can be implemented for use in specific cases. As an example, for value expansion in a namespace concerning statistical data, the modifier average may be added.","A request may contain more than one statement with modifiers. In this case the statements need to be sorted in a certain order for modifications to be applied in a correct order. The data preparation module  is responsible for sorting the statements such that for example creates modifiers are always evaluated before any other modifiers and abolish modifiers are always evaluated after all the other modifiers are evaluated. For modifiers such as read, update and delete no specific order is needed. The data preparation module  stores the ordered statements in the data store .",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary structure of a request statement"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["COMMAND","MODIFIER","SUBJECT","PREDICATE","OBJECT"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"The predicate component of a request statement represents the type of expansion. Several expansion types may exist. For example, basic expansion is when the subject is expanded into a list of names. In addition, an expansion may be a limited expansion, meaning that the subject may be expanded up to a predefined number of items, or no more than a predefined number of values may be given for a subject. In another expansion type, the values may be obtained piecewise in chunks of a predefined size. A one-shot expansion is a type of expansion where the expanded data elements are deleted after being read. In some other scenarios, a statistical function or other functions are applied on data elements during value expansion. For example a correlation for all odd and even values associated with the name may be calculated and returned as the expansion.","The value acquisition module  locates and retrieves data element values by using the subject of the request statement. The value expansion module  calculates the expansion by applying the predicate on the data acquired by the value expansion acquisition module  utilizing the conditions introduced by the object component of the request statement. Furthermore, rules may be applied so that the value expansion module  honor modifiers only if the subject belongs to a certain predetermined namespace. The value expansion module stores the calculated value expansion in the expansion data store .","In one embodiment value expansions can be used as a side backup of the device state by the semantic information broker. A device that gets disconnected from the network and joins the network again can rebuild its current state based on the value expansions.","In another embodiment, conditions can be set forth such that different devices connected to the network can have different access authority to value expansions. For instance, a device may be allowed to only access the variable names while another device may be able to access either names or values.","The names and associated values for data elements are stored in the expansion data store  as, for instance, one or more expansion tables. The expansion data store  may consist of one or more logically separate storage areas classified by their subjects. The storage areas may be placed under access control, which effectively implements policy mechanism for trusted information.","In one embodiment, the logical separation of the expansion data store  can be implemented such that the expansions are not stored at the semantic information broker side, but at the device. This will allows keeping information physically separate from the semantic information broker.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 3","FIG. 2","FIG. 11","FIG. 2"],"b":["111","300","301","111","113","111","111","303","111","209","305","111","111","209","307","111","305","209","309"]},"In step , the data expansion controller applies the conditions defined in the request, modifier or predicate of Table 2. If the request includes a modifier (e.g. create), the data is not expanded. Instead, the data expansion controller  modifies the expansion variables in the expansion store accordingly. For example, if the request includes a create indicator issued for an expansion that does not exist, the data expansion controller can create a new entry in the expansion table. Furthermore, the data expansion controller may honor the create indicator only for requests involving certain predetermined namespace. In step , the data expansion controller  transmits the results to the requesting device.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 4","b":["401","111","101","109","403","203","203","405","407","111"]},{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Modifiers"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MODIFIER","PROCESS"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Create","Add an entry for a variable to expansion table after"]},{"entry":[{},"checking credentials"]},{"entry":["Abolish","Remove an entry for a variable from expansion table"]},{"entry":[{},"after checking credentials"]},{"entry":["Update","Add the OBJECT of an RDF triple to the content of"]},{"entry":[{},"entry for the specified variable in the expansion table"]},{"entry":["Delete","Remove OBJECT of an RDF triple from the content of"]},{"entry":[{},"entry for the specified variable in the expansion table"]},{"entry":["Read","Find variables from RDF triples (SUBJECT, PREDICATE,"]},{"entry":[{},"OBJECT), expand found variables into an auxiliary table and"]},{"entry":[{},"replace any triple with variables in the expansion table with "]},{"entry":[{},"the triples containing the values in the expansion."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"If unprocessed statements exist, per step , the value expansion controller  checks whether the next statement includes a modifier such as read, create, abolish, delete or update. If a modifier is found, it is processed as per step . As seen in Table 3, the read modifiers may store the intermediate results of modifications in an auxiliary table so that further modifications can be applied on the results before they are ready to be written in the expansion table. All of the modifiers deal with an expansion table whose structure is shown in Table 4. The modification results are written in the expansion table 4 per step .","In case of create modifier the data expansion controller  may verify credentials of the requesting device. If the credentials are not approved, the device access to the expansion is denied.","If evaluation of step  indicates that there is no modifier in the statement, the value expansion controller  checks for expansions in the expansion table per step . If no expansions are found, the process will return to step  for next statement to be processed. However, if expansions are found in the expansion table, their values are stored in an auxiliary table which consists of expansions pertaining to the current request. The process then returns to step  for next statement to be processed.","The set of processes between steps  to  are repeated until all statements of the request are processed. When no more statements are left, step  will lead to step  where the full set of possible combinations for the values of the expansions is generated. The process of generating value expansions may be performed using Augmented Binary Decision Diagrams (AugBDD) () or based on data signatures. In step , the operation identified by PREDICATE in table 2 is performed on all the value combinations generated for SUBJECT and OBJECT. In step  the calculated results is transmitted to the requesting device.","If a set name (e.g., a URI) is postfixed with a modifier, no value expansion is performed; instead the variable store is modified according to the modifier. A special case is when a URI or name contains create modifier which is issued for an expansion that does not yet exist. In this case a new entry is created in the expansion table. Furthermore, the create modifier may only be considered if the URI or name belongs to certain predetermined namespace (for instance val:\/\/m3.org\/e\/). Other modifiers such as read, update, delete and abolish exist, but new modifiers can be implemented.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Expansion Table"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EXPANSION NAME","CREDENTIALS","EXPANSIONS"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["val:\/\/m3.org\/e\/a123","0xad43","\u201cJohn\u201d, \u201cMary\u201d, . . ."]},{"entry":["val:\/\/m3.org\/e\/a123#friends,","0x3214","\u201cJen\u201d, \u201cDavid\u201d, \u201cFred\u201d"]},{"entry":[". . .",". . .",". . ."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"203"},{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ins(val:\/\/m3.org\/e\/a123#create, m3:val, sib:any)","# creates"]},{"entry":[{},"the expansion"]},{"entry":["ins(val:\/\/m3.org\/e\/a123#update, m3:val, \u201cMatti\u201d)","# insert"]},{"entry":[{},"value \u201cMatti\u201d"]},{"entry":["ins(val:\/\/m3.org\/e\/a123#update, m3:val, \u201cMaija\u201d)","# insert"]},{"entry":[{},"value \u201cMaija\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":[{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"in-line-formulae":[{},{},{},{},{},{},{},{},{},{},{},{},{},{}]},"It is noted that the predicate in triples from above examples may be modified and new conditions are added to them. For example, the predicate m3:val may be replaced with predicate m3:tripleval, or for create modifier credentials may be added to the predicate which act as access control or policy mechanisms.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 5A","FIG. 5A","FIG. 5A","FIG. 5A"],"b":["501","503","501"],"br":{},"in-line-formulae":[{},{}],"img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00004","he":"2.46mm","wi":"1.78mm","file":"US08271433-20120918-P00002.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00005","he":"2.79mm","wi":"3.89mm","file":"US08271433-20120918-P00003.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00006","he":"2.79mm","wi":"3.89mm","file":"US08271433-20120918-P00003.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00007","he":"3.13mm","wi":"2.12mm","file":"US08271433-20120918-P00004.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00008","he":"2.46mm","wi":"1.78mm","file":"US08271433-20120918-P00005.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00009","he":"2.46mm","wi":"1.78mm","file":"US08271433-20120918-P00006.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00010","he":"2.46mm","wi":"1.78mm","file":"US08271433-20120918-P00007.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00011","he":"3.13mm","wi":"2.12mm","file":"US08271433-20120918-P00008.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00012","he":"2.46mm","wi":"1.78mm","file":"US08271433-20120918-P00009.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00013","he":"2.46mm","wi":"4.23mm","file":"US08271433-20120918-P00010.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00014","he":"3.13mm","wi":"2.12mm","file":"US08271433-20120918-P00011.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00015","he":"2.46mm","wi":"1.78mm","file":"US08271433-20120918-P00012.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00016","he":"2.46mm","wi":"1.78mm","file":"US08271433-20120918-P00013.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}],"sub":["1","2","3","1","2","3","1","2","3","1","2","3"]},{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 5B","FIG. 4"],"b":["419","505"]},"ROBDDs represent a set of bits or a relation and they can be constructed from a binary decision tree (representing a set of bits) by means of reduction rules. The constructed BDD is canonical for the set of bits it represents and for the order of its variables. A Reduced Ordered Binary Decision Diagram (BDD in short) is an efficient representation for a set.","The basic logical operations AND, \u201cOR, NOT Equivalence(=), Existential (\u2203), and Universal(\u2200) abstractions are defined for BDDs. Therefore, it is possible to construct a new BDD by means of logical operations over BDD(s). From a constructed BDD a possible solution to the logical formula the BDD represents can be drawn by traversing the BDD graph. This can be done in polynomial time (with respect to the number of variables or bits). Also, the order of variables will affect the size of the constructed BDD and there are known pathological cases of sets whose BDD representations are always large. However, in practice BDDs have proven to be a very efficient way of encoding and operating on large sets.","Reduced ordered binary decision diagrams (ROBDD) are used as the basis for the consistency verification technology. Various ways may be used to convert an information graph (e.g., RDF graph) into the representation of, for example, a BDD or an ROBDD. General BDD encoding is based on creating a triple (a, b, c) in which pieces of information \u201ca,\u201d \u201cb,\u201d and \u201cc\u201d are represented using three bits per each piece of information. This encoding scheme results in a triple represented, for instance, as (101, 001, 011), that is in turn maintained in a dictionary, e.g., as (a=101, b=001, c=011). BDD encoding can be accomplished by performing logical \u201cOR\u201d  operations with each bit sequence associated with a query result. For instance, the BDD representing triple (a, b, c) (BDD1) gets the following variable assignment for the nine bit variables V1 to V9:\n\nBDD=VVVVV{circle around ( )}VVVV\n\nEach variable is a bit. The satisfying variable assignment to this BDD is precisely the encoding of the above-mentioned triple.\n","Another triple (b, a, c) or (001,101,011) can also be represented by a BDD (BDD2) by same means as above;\n\nBDD=VVVVVVVVV\n\nNow it is possible to combine the two BDDs to form a new BDD as follows:\n\nBDD=BDDBDD\u2003\u2003(1)\n\nThis can be repeated for all triples in an answer to a query and the resulting BDD will contain all unique triples.\n",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIGS. 6A and 6B","FIG. 6A"],"b":["601","601"],"sub":["1 ","8","a ","b ","a ","b ","a ","b ","a ","b "]},"Binary Decision Diagrams can be used in order to construct an expansion table to find an answer to the request for: \u201cwhich two friends of u1 know each other?\u201d. The request is represented by the following logical formula:\n\n(u,u)(u,u)(u,u)\u2003\u2003(2)\n\nTable  in  illustrates the answer to the request for the example of table .\n","In order to create the expansion table  using BDDs, for every three users u, uand u(where 1\u2266a, b, c\u22668) the BDD  of  can be created. As seen in BDD , for every u, uand uthe value of the table will be one only if all 3 components of formula (2) are true (their value is 1).","In another embodiment, the mapping between names and values in a value expansion table can be done using data signatures. An added benefit of this approach is that encrypted information can be mapped as well as unencrypted information.","Using data signatures, data may be identified that is relevant to a set of one or more queries. The location of the relevant data and\/or the identification of the information sources (e.g., information stores) storing the relevant data, within, for example, network or a memory device, may also be determined. Based on the identification of the information sources that hold relevant information or data, an information source vector can be generated. The information source vector may, as a result, indicate where relevant data to the set of queries may be found. The information source vector may also be verified by determining whether an equivalence class representation of the information vector can be generated. The information source vector may then be used to generate a cyclotomic polynomial. The cyclotomic polynomial may then be factored to generate a plurality of orthogonal data signatures. By generating the data signatures in this manner, two or more data signatures of the plurality of data signatures may be combined to reconstruct the cyclotomic polynomial and, accordingly, the original data used to generate the cyclotomic polynomial. In some example embodiments, dispersion of the data signatures to information stores of a dynamic distributed device environment can be advantageous since data loss may be decreased by the combination properties associated with the data signatures.","Logical separation of value expansions can be implemented in several ways. In one extreme the table containing the expansion names and values may be an internal table. This is an efficient approach for the case where expansions are implemented using Augmented Binary Decision Diagrams (AugBDD). In other extreme it is possible to keep both the value names and the actual values on the information store  where other information is stored. This means that for each request the semantic information broker  would have to be queried to check whether the expansion exists.","A middle ground is that the names from expansion table are replicated (partly, if needed for access control or security reasons) on the information store . This allows querying the expansion names in the access protocol level, which may be useful for negotiation. In this case, the negotiating device will not be able to access the data values until its authority is approved. Table 4 is a logical view of the expansion table with names, values and access control as credentials.","An implementation alternative is to utilize the value expansion as part of the information space architecture. It is noted that the consistency checking can be available in arbitrary locations in the functional architecture. A knowledge processor may send its constraints to the semantic information broker and the semantic information broker may send its constraints to the knowledge processor or to other semantic information brokers.","For example, the device may create an insert command where the subject is a URI with predetermined prefix and a predetermined modifier name to register a name and a similar mechanism to associate RDF values (URIs or literals) to them. The basic modifiers are create, update, delete, read and abolish. However, particular modifiers required by certain types of URI may be added.","In one embodiment, the create modifier can be used as a login mechanism for access control to a single expansion URI. After a URI name is registered, every access protocol message is scanned for that particular URI. If the registered URI is found, the semantic information broker expands it so that a new instance of the particular access protocol message is generated for each value associated with the URI. If more than one such URI is in the message, the semantic information broker will generate all permutations of the values. This allows the device to offload potentially heavy computation to the semantic information broker while expressing it in a fairly concise way.","In one embodiment there can be a negotiation mechanism, during which the semantic information broker reveals a subset of the existing value expansion URIs which are present in the semantic information broker or in other devices.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIGS. 7A and 7B"},"The user interface can be implemented in many different ways.  show a simple implementation using RDF graphs as an example. As seen in , in this implementation the user interface elements are a set of simple text boxes  augmented with a drop down list. For instance, user can choose options by pointing at a touch screen. Diagram  of  shows a single user interface element. The dropdown box of diagram  contains the available value expansion names , which may have an access control status (e.g., public, private). The dropdown list may also contain other RDF URIs which may be originating from semantic information broker or the user's own device. Boxes  and  show some sample URIs that are part of the dropdown list. The user may input free form text to the text field  or select a value from the dropdown list.","These elements can be aggregated to form a combination. For RDF configuration a configuration of three boxes (e.g., boxes -) as the subject, the predicate and the object is required, however there is no limit on the number of elements that. For example, five boxes (e.g., boxes -) may correspond to path of two arcs and three nodes in RDF graph. One way of clustering a group of boxes is to group them in sets of three where the groups can be combined with different operations (e.g. logical operations AND, OR, etc.).",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 7B","b":["711","713","715","709","717","719"]},"From a user's perspective, the controlled value expansion manifests itself as a configuration of user interface elements. As seen in , the user may select one or more of these interface elements and perform an operation  (including messaging, email, call, add to social network, etc.). It is possible to alter the combinations by various means such as adding to the configuration expansions generated by the semantic information broker which pertain to a certain named expansion or to combination of multiple expansions, adding to the configuration URIs which are result of querying the semantic information broker, adding to the configuration user produced free-form information, or adding to the configuration user produced URIs.","In one embodiment, the basic implementation is performed at the access protocol access point such that triples in each message are scanned for the predetermined (or negotiated) URIs, which may reside in a table. Upon collecting the expansions, the value expansion module  expands all of the values and their combinations and for each combination performs the access protocol command contained in the expansions. If the expansions are represented as AugBDDs, the generation of the combinations can be effectively performed by means of the BDD OR operation over the AugBDDs of the expansions.","By way of example, irreducible polynomial expressions or data signatures can be obtained through the transformation or synthesis of partial data closures, using cyclotomic polynomial extensions. The partial data closures may be local to a device, such as a device within a dynamic distributed device network, and can be generated based on a received set of one or more queries. The data signatures represent smaller sized data packages, compared to partial data closures that may be used to reproduce a full or deductive data closure through a process of combination and transformation. The data signatures may be dispersed within an information space using a dispersion technique such as a uniform or skewed\/non-uniform dispersion technique. Due to changes in a dynamic distributed device network and\/or associated changes to data within the network, data signatures may be regularly or irregularly re-synthesized or updated to ensure that the data signatures accurately represent the data upon which the data signatures are based. The data signatures may be subsequently stored to facilitate use of the data signatures with respect to later queries. If the values are signatures the same can be achieved by unfolding the signature.","A straightforward extension of expansion of nodes to expansion of triples can be made. A distinct class of URIs can be defined that trigger expansion to triples and allow inserting values to the collections. This allows identification of subgraphs. Triple expansions can be implemented so that each expansion name has specific subject, predicate, object postfixes in the expansion URI such as: ins(val:\/\/m3.org\/e\/sib_activity\/a123\/s#update,m3:val,:Matti). In such cases where there are references to the expansion name without subject, predicate, object selectors, the triple can be produced automatically during the expansion.",{"@attributes":{"id":"p-0095","num":"0094"},"figref":["FIG. 8","FIG. 8"],"b":["801","113","109","1","113","109","2","1","801","3","1","4","113"]},{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 9","FIG. 9","FIG. 9"],"b":["901","903","113","109","109","1","901","2","3"]},"The processes described herein for providing automatic controlled value expansion of information may be advantageously implemented via software, hardware (e.g., general processor, Digital Signal Processing (DSP) chip, an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Arrays (FPGAs), etc.), firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 10","FIG. 10"],"b":["1000","1000","1000","1000","1010","1000","1000"]},"A bus  includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors  for processing information are coupled with the bus .","A processor  performs a set of operations on information as specified by computer program code related to providing automatic controlled value expansion of information. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and\/or the computer system to perform specified functions. The code, for example, may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set (e.g., machine language). The set of operations include bringing information in from the bus  and placing information on the bus . The set of operations also typically include comparing two or more units of information, shifting positions of units of information, and combining two or more units of information, such as by addition or multiplication or logical operations like OR, exclusive OR (XOR), and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions, such as an operation code of one or more digits. A sequence of operations to be executed by the processor , such as a sequence of operation codes, constitute processor instructions, also called computer system instructions or, simply, computer instructions. Processors may be implemented as mechanical, electrical, magnetic, optical, chemical or quantum components, among others, alone or in combination.","Computer system  also includes a memory  coupled to bus . The memory , such as a random access memory (RAM) or other dynamic storage device, stores information including processor instructions for providing automatic controlled value expansion of information. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory  is also used by the processor  to store temporary values during execution of processor instructions. The computer system  also includes a read only memory (ROM)  or other static storage device coupled to the bus  for storing static information, including instructions, that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus  is a non-volatile (persistent) storage device , such as a magnetic disk, optical disk or flash card, for storing information, including instructions, that persists even when the computer system  is turned off or otherwise loses power.","Information, including instructions for providing automatic controlled value expansion of information, is provided to the bus  for use by the processor from an external input device , such as a keyboard containing alphanumeric keys operated by a human user, or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus , used primarily for interacting with humans, include a display device , such as a cathode ray tube (CRT) or a liquid crystal display (LCD), or plasma screen or printer for presenting text or images, and a pointing device , such as a mouse or a trackball or cursor direction keys, or motion sensor, for controlling a position of a small cursor image presented on the display  and issuing commands associated with graphical elements presented on the display . In some embodiments, for example, in embodiments in which the computer system  performs all functions automatically without human input, one or more of external input device , display device  and pointing device  is omitted.","In the illustrated embodiment, special purpose hardware, such as an application specific integrated circuit (ASIC) , is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor  quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display , cryptographic boards for encrypting and decrypting messages sent over a network, speech recognition, and interfaces to special external devices, such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.","Computer system  also includes one or more instances of a communications interface  coupled to bus . Communication interface  provides a one-way or two-way communication coupling to a variety of external devices that operate with their own processors, such as printers, scanners and external disks. In general the coupling is with a network link  that is connected to a local network  to which a variety of external devices with their own processors are connected. For example, communication interface  may be a parallel port or a serial port or a universal serial bus (USB) port on a personal computer. In some embodiments, communications interface  is an integrated services digital network (ISDN) card or a digital subscriber line (DSL) card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments, a communication interface  is a cable modem that converts signals on bus  into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example, communications interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN, such as Ethernet. Wireless links may also be implemented. For wireless links, the communications interface  sends or receives or both sends and receives electrical, acoustic or electromagnetic signals, including infrared and optical signals, that carry information streams, such as digital data. For example, in wireless handheld devices, such as mobile telephones like cell phones, the communications interface  includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments, the communications interface  enables connection to the communication network  for providing automatic controlled value expansion of information to the UE .","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing information to processor , including instructions for execution. Such a medium may take many forms, including, but not limited to computer-readable storage medium (e.g., non-volatile media, volatile media), and transmission media. Non-transitory media, such as non-volatile media, include, for example, optical or magnetic disks, such as storage device . Volatile media include, for example, dynamic memory . Transmission media include, for example, coaxial cables, copper wire, fiber optic cables, and carrier waves that travel through space without wires or cables, such as acoustic waves and electromagnetic waves, including radio, optical and infrared waves. Signals include man-made transient variations in amplitude, frequency, phase, polarization or other physical properties transmitted through the transmission media. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, CDRW, DVD, any other optical medium, punch cards, paper tape, optical mark sheets, any other physical medium with patterns of holes or other optically recognizable indicia, a RAM, a PROM, an EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave, or any other medium from which a computer can read. The term computer-readable storage medium is used herein to refer to any computer-readable medium except transmission media.","Logic encoded in one or more tangible media includes one or both of processor instructions on a computer-readable storage media and special purpose hardware, such as ASIC .","Network link  typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example, network link  may provide a connection through local network  to a host computer  or to equipment  operated by an Internet Service Provider (ISP). ISP equipment  in turn provides data communication services through the public, world-wide packet-switching communication network of networks now commonly referred to as the Internet .","A computer called a server host  connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example, server host  hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system  can be deployed in various configurations within other computer systems, e.g., host  and server .","At least some embodiments of the invention are related to the use of computer system  for implementing some or all of the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more processor instructions contained in memory . Such instructions, also called computer instructions, software and program code, may be read into memory  from another computer-readable medium such as storage device  or network link . Execution of the sequences of instructions contained in memory  causes processor  to perform one or more of the method steps described herein. In alternative embodiments, hardware, such as ASIC , may be used in place of or in combination with software to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware and software, unless otherwise explicitly stated herein.","The signals transmitted over network link  and other networks through communications interface , carry information to and from computer system . Computer system  can send and receive information, including program code, through the networks ,  among others, through network link  and communications interface . In an example using the Internet , a server host  transmits program code for a particular application, requested by a message sent from computer , through Internet , ISP equipment , local network  and communications interface . The received code may be executed by processor  as it is received, or may be stored in memory  or in storage device  or other non-volatile storage for later execution, or both. In this manner, computer system  may obtain application program code in the form of signals on a carrier wave.","Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor  for execution. For example, instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system  receives the instructions and data on a telephone line and uses an infra-red transmitter to convert the instructions and data to a signal on an infra-red carrier wave serving as the network link . An infrared detector serving as communications interface  receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus  carries the information to memory  from which processor  retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory  may optionally be stored on storage device , either before or after execution by the processor .",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 11","FIG. 10"],"b":["1100","1100","1100"]},"In one embodiment, the chip set  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a general purposed processor. Other specialized components to aid in performing the inventive functions described herein include one or more field programmable gate arrays (FPGA) (not shown), one or more controllers (not shown), or one or more other special-purpose computer chips.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein to provide automatic controlled value expansion of information. The memory  also stores the data associated with or generated by the execution of the inventive steps.",{"@attributes":{"id":"p-0115","num":"0114"},"figref":["FIG. 12","FIG. 1"],"b":"1200"},"Pertinent internal components of the telephone include a Main Control Unit (MCU) , a Digital Signal Processor (DSP) , and a receiver\/transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit  provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of providing automatic controlled value expansion of information. The display  includes display circuitry configured to display at least a portion of a user interface of the mobile terminal (e.g., mobile telephone). Additionally, the display  and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry  includes a microphone  and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone  is fed to a coder\/decoder (CODEC) .","A radio section  amplifies power and converts frequency in order to communicate with a base station, which is included in a mobile communication system, via antenna . The power amplifier (PA)  and the transmitter\/modulation circuitry are operationally responsive to the MCU , with an output from the PA  coupled to the duplexer  or circulator or antenna switch, as known in the art. The PA  also couples to a battery interface and power control unit .","In use, a user of mobile terminal  speaks into the microphone  and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter (ADC) . The control unit  routes the digital signal into the DSP  for processing therein, such as speech encoding, channel encoding, encrypting, and interleaving. In one embodiment, the processed voice signals are encoded, by units not separately shown, using a cellular transmission protocol such as global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, and the like.","The encoded signals are then routed to an equalizer  for compensation of any frequency-dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream, the modulator  combines the signal with a RF signal generated in the RF interface . The modulator  generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission, an up-converter  combines the sine wave output from the modulator  with another sine wave generated by a synthesizer  to achieve the desired frequency of transmission. The signal is then sent through a PA  to increase the signal to an appropriate power level. In practical systems, the PA  acts as a variable gain amplifier whose gain is controlled by the DSP  from information received from a network base station. The signal is then filtered within the duplexer  and optionally sent to an antenna coupler  to match impedances to provide maximum power transfer. Finally, the signal is transmitted via antenna  to a local base station. An automatic gain control (AGC) can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone, other mobile phone or a land-line connected to a Public Switched Telephone Network (PSTN), or other telephony networks.","Voice signals transmitted to the mobile terminal  are received via antenna  and immediately amplified by a low noise amplifier (LNA) . A down-converter  lowers the carrier frequency while the demodulator  strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer  and is processed by the DSP . A Digital to Analog Converter (DAC)  converts the signal and the resulting output is transmitted to the user through the speaker , all under control of a Main Control Unit (MCU) \u2014which can be implemented as a Central Processing Unit (CPU) (not shown).","The MCU  receives various signals including input signals from the keyboard . The keyboard  and\/or the MCU  in combination with other user input components (e.g., the microphone ) comprise a user interface circuitry for managing user input. The MCU  runs a user interface software to facilitate user control of at least some functions of the mobile terminal  to provide automatic controlled value expansion of information. The MCU  also delivers a display command and a switch command to the display  and to the speech output switching controller, respectively. Further, the MCU  exchanges information with the DSP  and can access an optionally incorporated SIM card  and a memory . In addition, the MCU  executes various control functions required of the terminal. The DSP  may, depending upon the implementation, perform any of a variety of conventional digital processing functions on the voice signals. Additionally, DSP  determines the background noise level of the local environment from the signals detected by microphone  and sets the gain of microphone  to a level selected to compensate for the natural tendency of the user of the mobile terminal .","The CODEC  includes the ADC  and DAC . The memory  stores various data including call incoming tone data and is capable of storing other data including music data received via, e.g., the global Internet. The software module could reside in RAM memory, flash memory, registers, or any other form of writable storage medium known in the art. The memory device  may be, but not limited to, a single memory, CD, DVD, ROM, RAM, EEPROM, optical storage, or any other non-volatile storage medium capable of storing digital data.","An optionally incorporated SIM card  carries, for instance, important information, such as the cellular phone number, the carrier supplying service, subscription details, and security information. The SIM card  serves primarily to identify the mobile terminal  on a radio network. The card  also contains a memory for storing a personal telephone number registry, text messages, and user specific mobile terminal settings.","While the invention has been described in connection with a number of embodiments and implementations, the invention is not so limited but covers various obvious modifications and equivalent arrangements, which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims, it is contemplated that these features can be arranged in any combination and order."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments of the invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 6A and 6B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
