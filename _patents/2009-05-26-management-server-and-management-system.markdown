---
title: Management server and management system
abstract: An operation management system  alleviates the burden on an administrator  who carries out reappearance monitoring of a failure that occurred in a computer system . The operation management system  detects one or more detected events occurring in the computer system , and selects a first causal laws code  included in a causal laws information  based on the causal laws information  and the detected event. The operation management system , in a case where the composition of the computer system  has been changed to eliminate the cause of generation of the detected event, selects a second causal laws code  included in a post-change causal laws information  based on the post-change causal laws information  and the first causal laws code , and notifies the administrator  of information related to the selected second causal laws code 
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08381038&OS=08381038&RS=08381038
owner: Hitachi, Ltd.
number: 08381038
owner_city: Tokyo
owner_country: JP
publication_date: 20090526
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["This application is the National Phase of PCT\/JP2009\/002319, filed May 26, 2009. The entire content of the foregoing application is incorporated by reference in its entirety.","The present invention relates to management server and management system technology for managing a computer system, and particularly to technology for monitoring the reappearance of a failure.","Technology for managing a computer system comprising a plurality of machines (computers, storage apparatuses, network apparatuses, and so forth) is known. A system for managing a computer system will be called an \u201coperation management system\u201d below.","For example, Patent Citation 1 discloses an operation management system comprising a function (a root cause analysis (RCA) function) for detecting a failure that occurs in the computer system and identifying the cause of this failure. In the disclosure of Patent Citation 1, the operation management system maintains information (causal laws information) for defining a causal relationship between the cause and the event (error symptom) generated by this cause. Then, in a case where an event occurs in a machine comprising the computer system or in a component mounted to this machine (called \u201cmachine et al\u201d below as needed), the operation management system acquires the generated event and identifies the cause based on this acquired event and the causal laws information.","Also, for example, Patent Citation 2 discloses an operation management system comprising a function for recognizing the fact that the configuration of the computer system has changed. In the disclosure of Patent Citation 2, a program for detecting a configuration change is disposed in the respective machines inside the computer system. The operation management system recognizes the configuration change in the computer system by acquiring configuration change-related information from the above-mentioned program.",{"@attributes":{"id":"p-0007","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":["[Patent Citation 1] U.S. Pat. No. 7,107,185","[Patent Citation 2] U.S. Pat. No. 7,188,201"]}},"However, the process for handling a failure in a case where a failure has occurred in the computer system is generally carried out in the order of failure detection, cause identification, cause elimination, and reappearance monitoring. As used here, \u201cfailure detection\u201d refers to detecting the symptom (that is, the event) of the failure that occurred in the computer system. \u201cCause identification\u201d refers to examining the symptom of the failure detected via failure detection, and identifying the cause of the failure. \u201cCause elimination\u201d refers to the administrator eliminating the cause identified via cause identification (and thereby eliminating the failure). \u201cReappearance monitoring\u201d refers to monitoring the problem machine et al for a fixed period of time in order to reduce the reappearance, during a fixed latency period subsequent to failure elimination, of the failure that has been eliminated or a failure (that is, a secondary failure) caused by the measures (for example, the replacement of a machine et al) taken to eliminate the failure. Examples of reappearance may include the reoccurrence of the same memory defect in a replaced server device subsequent to a memory defect that occurred in the server device having been eliminated by replacing the server device, or software that stops running as a result of a user configuration error at the time the server device was replaced.","The operation management system disclosed in the above-mentioned Patent Literature 1 carries out failure detection and cause identification. That is, this type of operation management system detects an event and identifies the cause of this detected event based on the detected event and the causal laws information. In the meantime, cause elimination is normally carried out by the administrator. That is, the administrator, who has been notified of the cause from the operation management system, carries out the measures required to eliminate this cause (for example, the replacement of the machine et al or the repair of the software). Then, reappearance monitoring is also normally carried out under the management of the administrator based on the knowhow of the administrator. For example, the administrator is able to carry out reappearance monitoring by referring to the causal relationship, included in the causal laws information, between the cause that has been eliminated (called the \u201celiminated cause\u201d below) and an event that has been generated by this eliminated cause, selecting the machine et al, which is somehow linked to the eliminated cause, as the machine et al to focus attention on, and preferentially monitoring this selected machine et al for the occurrence of the event. Preferentially monitoring the machine et al that is somehow linked to the eliminated cause in this way alleviates the reappearance monitoring burden placed on the administrator.","There may be a case here in which the measure taken for cause elimination involves changing the composition of the computer system (for example, replacing the machine et al). Normally, when a change occurs in the composition of the computer system, the causal laws information is changed to reflect this post-change composition. In a case where a change occurs in the composition of the computer system and the causal laws information is changed like this, a problem arises in that the administrator is not able to readily determine which machine et al should be monitored on a priority basis. This is because, as a result of the causal laws information having been changed, information related to the eliminated cause is often times not included in the post-change causal laws information and information related to the event that occurred due to the eliminated cause may also not be included in the post-change causal laws information, making it difficult to select the machine et al that is somehow linked to the eliminated cause.","Accordingly, an object of the present invention is to alleviate the burden on the administrator who monitors for the reappearance of a failure that occurred in the computer system.","A management server detects one or more first events that occur in the computer system, and selects a first cause identification code included in an event cause information based on the event cause information and the first event. The management server, in a case where the composition of the computer system has been changed to eliminate the cause that generated the first event, selects a second cause identification code included in the post-change event cause information based on the post-change event cause information and the first cause identification code, and notifies the administrator of the information related to the selected second cause identification code.","Furthermore, the \u201cevent cause information\u201d is information that includes a cause identification code for each symptom event set. The \u201csymptom event set\u201d is a combination of one or more symptoms and events. A \u201ccause event\u201d is an event that is the cause. A \u201csymptom event\u201d is an event that causes the cause event.","In a case where the composition of the computer system has been changed to eliminate the cause that generated the first event, the content of the event cause information is changed. For example, the management server is able to select as the second cause identification code, from among the cause identification codes included in the post-change event cause information, a cause identification code in which this symptom event set matches the symptom event set of the first cause identification code.","The process performed by the management server in accordance with the present invention may be carried out by a processor inside the management computer executing a computer program. The computer program may be installed from a remote server, or may be installed from a storage medium (for example, a CD-ROM, DVD (Digital Versatile Disk), or other such portable storage medium). Furthermore, at least one part of the management server process may be realized using a hardware circuit.",{"@attributes":{"id":"p-0056","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":[{"@attributes":{"id":"ul0002-0001","num":"0056"},"b":"11"},{"@attributes":{"id":"ul0002-0002","num":"0057"},"b":"101"},{"@attributes":{"id":"ul0002-0003","num":"0058"},"b":"102"},{"@attributes":{"id":"ul0002-0004","num":"0059"},"b":"103"},{"@attributes":{"id":"ul0002-0005","num":"0060"},"b":"104"},{"@attributes":{"id":"ul0002-0006","num":"0061"},"b":"108"},{"@attributes":{"id":"ul0002-0007","num":"0062"},"b":"110"},{"@attributes":{"id":"ul0002-0008","num":"0063"},"b":"111"},{"@attributes":{"id":"ul0002-0009","num":"0064"},"b":"112"},{"@attributes":{"id":"ul0002-0010","num":"0065"},"b":["121","131","141"]},{"@attributes":{"id":"ul0002-0011","num":"0066"},"b":["122","132","142"]},{"@attributes":{"id":"ul0002-0012","num":"0067"},"b":["123","133","143"]},{"@attributes":{"id":"ul0002-0013","num":"0068"},"b":["124","134","144"]},{"@attributes":{"id":"ul0002-0014","num":"0069"},"b":["135","145"]},{"@attributes":{"id":"ul0002-0015","num":"0070"},"b":"137"},{"@attributes":{"id":"ul0002-0016","num":"0071"},"b":"161"},{"@attributes":{"id":"ul0002-0017","num":"0072"},"b":"162"},{"@attributes":{"id":"ul0002-0018","num":"0073"},"b":"163"},{"@attributes":{"id":"ul0002-0019","num":"0074"},"b":"164"},{"@attributes":{"id":"ul0002-0020","num":"0075"},"b":"165"},{"@attributes":{"id":"ul0002-0021","num":"0076"},"b":"166"},{"@attributes":{"id":"ul0002-0022","num":"0077"},"b":"167"},{"@attributes":{"id":"ul0002-0023","num":"0078"},"b":"168"},{"@attributes":{"id":"ul0002-0024","num":"0079"},"b":"169"},{"@attributes":{"id":"ul0002-0025","num":"0080"},"b":"170"},{"@attributes":{"id":"ul0002-0026","num":"0081"},"b":"171"},{"@attributes":{"id":"ul0002-0027","num":"0082"},"b":"172"}]}},"A number of examples of the present invention will be explained below while referring to the drawings.","Furthermore, in the following explanation, information will be denoted using expressions like \u201cxxx table\u201d, \u201cxxx list\u201d, \u201cxxx DB\u201d, and \u201cxxx queue\u201d. However, information may also be expressed in forms other than data structures, such as a table, a list, a DB, and a queue. In order to show that information is not dependent on a data structure, \u201cxxx table\u201d, \u201cxxx list\u201d, \u201cxxx DB\u201d, and \u201cxxx queue\u201d may be called \u201cxxx information\u201d. Further, when explaining the content of the information, there may be cases in which expressions such as \u201cidentification information\u201d, \u201cidentifier\u201d, \u201cname\u201d and \u201cID\u201d will be used, and these terms are interchangeable.","Also, in the following explanation, there may be cases in which the term computer program is used as the subject of an explanation, but in actuality, the stipulated process will be performed by a processor (typically a microprocessor) executing the program. A storage resource, such as a memory, and a communication port (communication control device) may also be used at this time. The processor may also be the subject when explaining a process carried out by the processor executing the program. A process, which is explained using the program as the subject, may also be a process performed by the computer. Further, either a part or all of a program may be realized in accordance with dedicated hardware.","The program may also be installed in the computer from a program source, such as a program distribution server or a storage medium.",{"@attributes":{"id":"p-0061","num":"0087"},"figref":"FIG. 1","b":"1"},"The information processing system , for example, comprises a computer system , and an operation management system . In this example, the computer system , for example, comprises one or more job servers , one or more storage apparatuses , and one or more network apparatuses (not shown in the drawing) for configuring either a communication network  or a SAN (Storage Area Network) . Below, the machines (job server , storage apparatus , and network apparatus) comprising the computer system  will be called node devices. The computer system , for example, may also have a printer and file server as node devices in addition to the job server  and storage apparatus . The job server  and storage apparatus , for example, are coupled by way of the SAN . The operation management system  is for managing the computer system . The operation management system , for example, comprises a management server , and an input\/output terminal . The management server  and the input\/output terminal , for example, are coupled by way of the communication network . Furthermore, the SAN  coupling scheme, for example, uses FC (Fibre Channel), but a coupling scheme other than FC (for example, iSCSI) may also be used. The communication network  and the SAN  may also be the same network.","The job server , for example, comprises a CPU (Central Processing Unit) , a memory , a disk , a communication I\/F (interface) , and a port . The storage apparatus , for example, comprises a CPU , a memory , a disk , a communication I\/F , and a port . The disk  of the job server  will be called the \u201cserver disk\u201d below, and the disk  of the storage apparatus  will be called the \u201cstorage disk\u201d. Although not shown in the drawing, a LU (Logical Unit) is created in the storage apparatus  based on a storage area of the storage disk .","The management server , for example, is coupled to the respective node devices via the communication network . The management server  carries out the various processes described below (for example, a process for analyzing the cause of a failure) based on a variety of information acquired from the node devices (for example, information denoting an event that has occurred in the node device), and notifies the result of this processing to an administrator . The administrator  refers to the notified processing result, and carries out the operational management of the computer system  (for example, failure elimination, reappearance monitoring, and so forth).","The management server , for example, comprises a CPU , a memory , a disk , and a communication I\/F . The memory  of the management server , for example, stores a composition management program , a RCA program , a code relation program , a code reappearance monitor program , and an event receive program . Further, the memory  of the management server , for example, also stores composition management information , causal laws information , cause definition information , symptoms definition information , and event information  in addition to the various programs mentioned above. Furthermore, the memory  may be either a volatile memory or a nonvolatile memory, and a storage area on the disk  may be used as either a part or all of the memory  storage area.","Furthermore, the management server  may also comprise an input\/output device. The input\/output device, for example, is a display, a keyboard, or a pointer device. Further, an interface device (for example, a serial interface or an Ethernet interface) may also be used as the input\/output device. In accordance with this, the relevant interface device is coupled to a display computer, display information is sent to the display computer, and input\/output information is received from the display computer. In this example, the input\/output terminal  serves the role of the above-mentioned display computer, and substitutes for the input and the display of the above-mentioned input\/output device.","In this example, the operation management system  is comprised of the management server  and the input\/output terminal , but this system  is not necessarily limited to a composition like this. For example, in a case where the management server  itself comprises an input\/output device, the operation management system  does not need to have the input\/output terminal , and the same processing as that of the management server  may be realized via a plurality of computers for increasing the speed and enhancing the reliability of the management process, and in accordance with this, the relevant plurality of computers (including the display computer as well when the display computer carries out a display) comprise the management system .","The information stored in the memory  of the operation management system  and the processing carried out by the operation management system  will be explained in detail below. First, an explanation of the key terminology used in this example and other examples below will be explained.","(1) Monitoring Target Object:","Refers to the object that the operation management system  is targeting for management from among the either physical or logical devices that exist on the computer system . The either physical or logical device that exists on the computer system  here, for example, may include the node device (that is, a machine comprising the computer system , such as the job server , the storage apparatus  or the network apparatus), a component mounted to the node device (such as the server disk , storage disk , or ports , ), a logical device created inside the node device (for example, a LU created in the storage apparatus ), and a functional module realized on the node device by executing a computer program.","(2) Data Model:","Refers to a model of a monitoring target object provided for making it possible to manage various data related to the monitoring target object (\u201cobject data\u201d) on the computer. The data model, for example, is expressed combining data items of object data.","As used here, object data, for example, comprises data showing the attribute of the monitoring target object, and data showing the relationship between monitoring target objects (coupling relation, dependence relation, or inclusive relation). Then, for example, in a case where the monitoring target object is the job server  or the storage apparatus , the attribute of the monitoring target object comprises the ID of the job server  or the like, the name of the job server  or the like, and the IP address that has been allocated to the job server  or the like. Further, for example, in a case where the monitoring target object is a network device (for example, a switch device) comprising either the communication network  or the SAN , the attribute of the monitoring target object will comprise the network device ID or the number of ports that the network device possesses.","(3) Data Entry:","Refers to the data created in accordance with the data model for each monitoring target object. That is, a combination of the respective values (values related to the targeted monitoring target object) of the data items that define the data model is the data entry. For example, in a case where the data model is expressed as a combination of the monitoring target object ID, the IP address and the ID of the device having a dependence relation, the data entry related to the storage apparatus  in  becomes the combination of the storage apparatus  ID (for example, \u201cST1\u201d), the IP address allocated to the storage apparatus , and the respective IDs (for example, \u201cSV1\u201d, \u201cSV2\u201d and \u201cSV3) of the devices that have a dependence relation with the storage apparatus  (that is, the job server , the job server , and the job server ).","The management server , by referring to the data entry, is able to know the monitoring target object that exists in the computer system , and is able to know the object data of each monitoring target object (that is, the attribute of this device, and its dependence relation with another device).","(4) Event:","Refers to an event that could occur in the monitoring target object. In this example, it is supposed that the event signifies an event involving a failure. For example, an event such as \u201cdata cannot be read out from inside the storage disk\u201d, or an event such as \u201cthe data read out from the storage disk has been corrupted\u201d is the event.","(5) Event Model:","Refers to a model of the event provided for making it possible to manage various data related to the event (called the \u201cevent data\u201d below) on the computer. The event model for example, is expressed as a combination of data items of event data.","Here, event data, for example, comprises the event ID, the event type, the time the event occurred, and the location where the event occurred (that is, the monitoring target object in which the event occurred). The event type, for example, may include a \u201cserver disk failure\u201d, a \u201cstorage disk failure\u201d or a \u201ccommunication I\/F failure\u201d. The above-mentioned events \u201cdata cannot be read out from inside the storage disk\u201d and \u201cthe data read out from the storage disk has been corrupted\u201d are both classified as a \u201cstorage disk failure\u201d. Furthermore, event data may also comprise the type of the location where the event occurred (that is, the type of the monitoring target object in which the event occurred). The type of the location where the event occurred, for example, may include \u201cjob server\u201d, \u201cstorage apparatus\u201d, \u201cserver disk\u201d and \u201cstorage disk\u201d. The job servers ,  and  in  are each classified as a \u201cjob server\u201d.","(6) Event Entry:","Refers to data created in accordance with the event model for a certain event (either an event that has actually occurred, or an event that could occur). That is, a combination of the respective values (the values related to the targeted event) of the data items that define the event model is the event entry. For example, in a case where the event model is expressed as a combination of the event ID, the event type and the location where the event occurred, the event entry of the event (regarded as event A) in which \u201cdata cannot be read out from inside the storage disk\u201d, which has either occurred or could occur in the storage disk  of the storage apparatus , becomes the combination of the event A ID, the \u201cstorage disk failure\u201d, which is the type of the event A, and data (for example, \u201cST1-D2\u201d) showing the storage disk  of the storage apparatus , which is the location where the event A occurred.","Furthermore, in the explanations of this example and the other examples, it is supposed that the event and the event entry related to this event are furnished with respectively corresponding names. For example, in a case where the event name is \u201cevent A\u201d, the name of the event entry related to event A will be \u201cevent entry A\u201d.","(7) Event Propagation Model:","Refers to a model that uses the event model (in particular, a model that is expressed as a combination of the event type and the type of the location where the event occurred (a model expressed as the event type in a case where the event type is also capable of identifying the location where the event occurred)) to define a propagation relation between events. In the event propagation model, for example, a propagation relation, such as the \u201cstorage disk failure\u201d propagates to the \u201cserver disk failure\u201d, is defined.","Furthermore, of the above-mentioned definitions, the \u201cxxx model\u201d and \u201cxxx entry\u201d were named on the assumption that they were developed in accordance with either an object oriented language or a development environment (that is, the \u201cxxx model\u201d is equivalent to a \u201cclass\u201d, and the \u201cxxx entry\u201d is equivalent to an \u201cinstance\u201d), but the implementation format is not limited to this. The \u201cxxx entry\u201d is specific information that accords with the \u201cxxx model\u201d, and as such, the object data regarding the device, component or program corresponding to the data entry may be stored in the memory  of the management server .","First, the various information , , ,  and  stored in the memory  of the management server  will be explained.","The composition management information  refers to information showing the composition of the computer system , that is, information showing which node devices comprise the computer system , how each node device is comprised (for example, what component is mounted to the node device), what the coupling relation between the node devices and between the components is like, and what the inclusive relation between the node device and the component is like. The composition of the node device comprises the physical attribute of the node device (a serial number or MAC (Media Access Control) address), the logical attribute of the node device (the IP address or performance information), and the composition of the component inside the node device.","In this example, since a group of data entries respectively related to the monitoring target object that exists on the computer system  shows the composition of the computer system , the above-mentioned data entry group is used as the composition management information .","The event information  is information comprising one or more event entries related to the event that occurred in the computer system . The event information , for example, is updated as follows. That is, when an event occurs in a certain node device, this node device creates an event entry related to the event that occurred, and sends the created event entry to the management server . The event receive program  of the management server  updates the event information  by adding the event entry received from the node device to the event information . Furthermore, instead of the method that updates the event information  at the timing at which the event entry was received from the node device as described above, the event receive program  may carry out processing as follows. That is, the event receive program , either regularly or irregularly, queries the respective node devices as to whether or not an event has occurred (whether or not an event entry has been created), and in a case where the event entry has been created, may acquire this created event entry and add it to the event information . Further, the exchange of the event entry between the management server  and the respective node devices may be carried out via the communication network , or may be carried out via storage media.",{"@attributes":{"id":"p-0085","num":"0111"},"figref":"FIG. 2","b":"168"},"The causal laws information  is information showing the relationship between one or more events and the cause in a case in which these one or more events have occurred. The cause is also a kind of event. Accordingly, an event which is the cause of an event that has occurred will be called the \u201ccause event\u201d. Further, a combination of events that occur having the cause event as the cause will be called the \u201csymptom event set\u201d. In addition, the respective events that belong to the symptom event set will be called the \u201csymptom event\u201d. The symptom event is an event that occurs having the cause event as the cause.","The causal laws information , for example, is expressed in a matrix format as shown in . Column item  lists the IDs (e, e, e, . . . em) of the events (called the \u201csymptom event candidate\u201d below) capable of becoming symptom events. Further, row item  lists the IDs (p, . . . pn) of the cause events. Each value in the matrix shows whether or not the symptom event candidate of the corresponding column item  is the symptom event for the cause event of the corresponding row item . In this example, the symptom event candidate having a value of \u201c1\u201d is the symptom event.","Each row in the causal laws information  shows one causal relation between the symptom event (symptom event set) and the cause event. For example, the row corresponding to cause event p in  shows that the value corresponding to each of the symptom event candidates e, e, and e is \u201c1\u201d, and that each of the symptom event candidates e, e, and e is a symptom event for the cause event p (the values of the portions in the drawing marked \u201c . . . \u201d are all \u201c0\u201d. The same holds true below.). That is, in a case where the symptom events e, e, and e occur, it is concluded that p is the cause event. The data that shows this single causal relation (data comprising the value of each row, and the ID of the cause event corresponding to this row)  will be called the \u201ccausal laws code\u201d. In this example, the content of the causal laws code  is expressed as \u201c[symptom event ID, symptom event ID . . . ]\u2192cause event ID\u201d. In a case where this expression method is used, the causal laws code  shown by the row corresponding to the cause event p in  is expressed as \u201c[e, e, e]\u2192p\u201d.",{"@attributes":{"id":"p-0089","num":"0115"},"figref":"FIG. 3","b":"169"},"The symptoms definition information  comprises event entries respectively related to events (symptom event candidates) listed as the column items  of the causal laws information . In the example of , each row shows one event entry. Each event entry, for example, comprises a corresponding symptom event candidate ID , the event type  of the corresponding symptom event candidate, and data (called \u201cgeneration-source identification data\u201d below)  for identifying the monitoring target object in which the corresponding symptom event candidate occurred (called the \u201cgeneration source\u201d below).",{"@attributes":{"id":"p-0091","num":"0117"},"figref":"FIG. 4","b":"170"},"The cause definition information  comprises event entries respectively related to the cause events listed as the row items  of the causal laws information . In the example of , each row shows a single event entry the same as , and each event entry, for example, comprises a corresponding cause event ID , an event type  of the corresponding cause event, and generation-source identification data  of the corresponding cause event. Furthermore, the above-mentioned causal laws information, symptoms definition information, and cause definition information may be of any data structure, and may be integrated together as one piece of information. Further, the expression format of the above-mentioned causal laws information, symptoms definition information, and cause definition information may express a cause with respect to one or more symptoms in accordance with a rule format.","The processing performed by the operation management system  will be explained below.","The composition management program  acquires the required information by using SNMP (Simple Network Management Protocol) or the API (Application Programming Interface) provided by each node device, and creates the composition management information . In a case where the composition of the computer system  changes, the composition management program  updates the contents of the composition management information  so that it corresponds to the post-update composition.",{"@attributes":{"id":"p-0095","num":"0121"},"figref":"FIG. 5"},"When the RCA program  is booted up, the RCA program  first of all creates the causal laws information , the symptoms definition information , and the cause definition information  based on the event model, the event propagation model and the composition management information  (S).","Thereafter, the RCA program  monitors for an event occurring inside the computer system  by checking the event information  updates at all times (S).","When an event occurs inside the computer system  (in this example, when an event occurs in the monitoring target object), the event receive program  receives the event entry of this event that occurred. Then, the event receive program  adds the received event entry to the event information .","When the event information  is updated, the RCA program  acquires the event entry that was added anew to the event information . In accordance with this, the RCA program  detects the event that occurred in the computer system . For example, the RCA program  is able to acquire as the newly added event entry one or more of a plurality of event entries included in the event information  (for example, event entries that have been added from a predetermined time in the past until the present). The combination of the one or more events (events respectively shown by the above-mentioned acquired one or more event entries) detected by the RCA program  will be called the \u201cdetected event set\u201d. Further, each of the one or more events detected by the RCA program  will be called the \u201cdetected event\u201d. That is, the detected event is an event belonging to the detected event set.","Next, the RCA program  identifies a root cause of a failure that occurred in the computer system  by referring to the causal laws information  and analyzing the cause of the detected event (S). Specifically, the RCA program  determines whether or not this symptom event set matches the detected event set for each of the causal laws codes  included in the causal laws information . The determination as to whether or not the symptom event set matches the detected event set here is carried out by determining whether or not the events belonging to the combination (the corresponding events) match. Also, a determination as to whether or not the symptom event matches the detected event is carried out by determining whether or not either a part or all of the information of the respectively related event entries (for example, the generation-source identification data and event type) match. Then, the RCA program  concludes that the cause event of the causal laws code  (called the \u201cignited code\u201d below) in which this symptom event set matched the detected event set is the root cause of the failure that occurred in the computer system .","Of the cause events listed in the row item  of the causal laws information , the event that was actually determined to be the cause (that is, the cause event of the ignited code) will be called the \u201cconcluded cause event\u201d below. Further, the symptom event set that matches the detected event set (that is, the symptom event set of the ignited code) will be called the \u201cdetected symptom event set\u201d. In addition, each of the events belonging to the detected symptom event set (that is, the symptom event of the ignited code) will be called the \u201cdetected symptom event\u201d. That is, the concluded cause event is concluded to be the root cause of the failure in accordance with all of the events belonging to the detected symptom event set (detected symptom events) having occurred in the computer system .","Thereafter, the RCA program  collects the various information needed to create a screen for notifying the cause of the failure to the administrator  (called the \u201ccause analysis result display screen\u201d below), and creates the cause analysis result display screen based on this collected information (S). Then, the RCA program  sends the created cause analysis result display screen to the input\/output terminal . The input\/output terminal  that receives the cause analysis result display screen displays the received cause analysis result display screen on a display device . Furthermore, in addition to displaying the cause analysis result display screen on the input\/output terminal , the RCA program  may also notify the administrator  by e-mail or phone to the effect that the cause of the failure has been identified. The cause analysis result display screen will be explained here by referring to .",{"@attributes":{"id":"p-0103","num":"0129"},"figref":"FIG. 6","b":"1001"},"In the cause analysis result display screen , for example, there is disposed a system topology display area , a display area  for a list of detected symptom event entries, and a display area  for a list of concluded cause event entries. Further, the cause analysis result display screen  is also provided with an OK button  and a CANCEL button . The administrator  is able to use these buttons ,  to select whether or not to move the failure handling process from cause identification to cause elimination.","The coupling relation of the monitoring target object related to the ignited code is displayed in the system topology display area . The monitoring target object related to the ignited code here refers respectively to the ignited code symptom event (that is, the detected symptom event) generation source (the monitoring target object shown in the generation-source identification data  of the detected symptom event entry), and the ignited code cause event (that is, the concluded cause event) generation source (the monitoring target object shown in the generation-source identification data  of the concluded cause event entry). Therefore, the system topology display area  displays the coupling relation between the generation source of the detected symptom event and the generation source of the concluded cause event. This coupling relation is obtained by referring to the composition management information . Furthermore, for example, the system topology display area  also displays the monitoring target object, which has an inclusive relation with the generation source of the detected symptom event or the generation source of the concluded cause event (that is, in a case where the generation source is the storage disk , the storage apparatus  to which this is mounted).","The detected symptom event entry list display area  displays either a part or all of the information included in this event entry for each of one or more of the detected symptom event entries (in this example, the generation-source identification data  and the event type ).","The concluded cause event entry list display area  displays either a part or all of the information included in the concluded cause event entry (in this example, the generation-source identification data  and the event type ).","Refer to  once again. Thereafter, the RCA program  determines whether or not the composition of the computer system  has changed (S).","In a case where the composition of the computer system  has changed (S: Change), the RCA program  performs processing of Step S. That is, the RCA program  creates the causal laws information (that is, the post-cause elimination causal laws information)  corresponding to the post-change composition. The pre-cause elimination causal laws information  is normally deleted from the memory  at this point. For example, the ignited code, which is included in the pre-cause elimination causal laws information , is stored in the memory  at this time.","By contrast, in a case where the composition of the computer system  has not changed (S: No Change), the RCA program  carries out the processing of Step S. That is, the RCA program  monitors the event generated in the computer system  once again without changing the causal laws information .","Furthermore, upon detecting a composition change in the computer system , the composition management program  updates the composition management information , and is also able to notify the RCA program  to the effect that the composition has been updated. Upon receiving the notification to the effect that the above-mentioned composition has changed, the RCA program  may determine that the composition of the computer system  has changed, and may carry out the processing of Step S.","The preceding has been an explanation of the processing carried out by the RCA program . In accordance with this processing, failure detection and cause identification are performed in the failure handling process. Then, the administrator, who grasps the cause in accordance with the cause analysis result display screen , carries out the processing needed to eliminate the cause. In this example, it is supposed that a process by which a change occurs on the composition of the computer system  (for example, the replacement of the storage apparatus ) is adopted as the process for eliminating the cause.","The operation management system  related to this example is able to alleviate the burden of reappearance monitoring on the administrator  by determining the target object or event to be monitored on a priority basis during reappearance monitoring, monitoring for the presence or absence of a failure reappearance candidate based thereon, and notifying the administrator  of this information in a case where a reappearance candidate is found. The above-mentioned process for alleviating the burden on the administrator  for reappearance monitoring is carried out by the code relation program  and the code reappearance monitor program .",{"@attributes":{"id":"p-0114","num":"0140"},"figref":"FIG. 7","b":"163"},"The code relation program , subsequent to being booted up, stands by until the RCA program  concludes the cause event in Step S of  (S).","As for the code relation program , when the RCA program  concludes the cause event, the code relation program  acquires the ignited code (the causal laws code  comprising the cause event that has been concluded (that is, the concluded cause event)) from the RCA program  (S). Then, the code relation program  once again stands by until the RCA program  creates the post-cause elimination causal laws information  (S).","When the post-cause elimination causal laws information  has been created, the code relation program  receives the post-cause elimination causal laws information  from the RCA program  (S).","Thereafter, the code relation program  selects from the post-cause elimination causal laws information  acquired in Step S the causal laws code  related to the ignited code acquired in Step S (S). The causal laws code  related to the ignited code, which was selected from the post-cause elimination causal laws information , will be called the \u201cmonitor code\u201d below. Further, the cause event of the monitor code will be called the \u201cmonitoring cause event\u201d. In addition, the symptom event set of the monitor code will be called the \u201cmonitoring symptom event set\u201d, and the symptom event of the monitor code (that is, the event belonging to the monitoring symptom event set) will be called the \u201cmonitoring symptom event\u201d.","The monitor code is used as information for selecting the monitoring target object or event to be monitored on a priority basis. In this example, the monitoring cause event becomes the event to be monitored on a priority basis. Further, the monitoring symptom event, the generation source of the monitoring cause event and the generation source of the monitoring symptom event respectively attached thereto are also monitored on a priority basis. That is, the operation management system  (code reappearance monitor program ) perceives the occurrence of the monitoring cause event as the reappearance of the failure, and monitors for the occurrence of the monitoring symptom event in order to monitor for the presence or absence of the failure reappearance candidate.","For example, from among the causal laws codes  included in the post-cause elimination causal laws information , the code relation program  is able to select as the monitor code the causal laws code  for which this symptom event set matches the symptom event set of the ignited code. The determination here as to whether or not the event sets match, as described above, is carried out by determining whether or not the events belonging to the event sets (the corresponding events) match. Then, the determination as to whether or not the events match is carried out by determining whether or not either a part or all of the information of the event entries related thereto (for example, the generation-source identification data and the event type) match.","The reason the causal laws code  for which this symptom event set matches the detected symptom event set is selected as the monitor code like this is based, for example, on the fact that when a pre-replacement machine has been providing a function of some sort to another machine, and the post-replacement machine will most likely also provide the same function to the above-mentioned other machine. In other words, in a case where the detected symptom event has occurred in the above-mentioned other machine, it is conceivable that the reason this detected symptom event occurred (that is, the reason for the event having propagated) was because of the function provision relation. Then, in a case where the post-replacement machine also provides the same function as the pre-replacement machine and the same event as the cause event, which occurred in the pre-replacement machine, has occurred in the post-replacement machine, this is due to the possibility that this event will propagate and that the detected symptom event that occurred prior to cause elimination will occur in the above-mentioned other machine.","Thereafter, the code relation program  determines whether or not the monitor code was able to be selected (S).","In a case where the monitor code was not able to be selected (S: Failed), the code relation program  carries out the processing of Step S. That is, the code relation program  stands by until the post-cause elimination causal laws information  has been created.","By contrast, in a case where the monitor code was able to be selected (S: Succeeded), the code relation program  collects the various information needed to create the screen (called the \u201cverification of reasonably display screen\u201d below) for verifying the reasonableness of the cause elimination to the administrator , and, based on this collected information, creates the verification of reasonably display screen (S). Then, the code relation program  sends the created verification of reasonably display screen to the input\/output terminal . The input\/output terminal , which receives the verification of reasonably display screen, displays the received verification of reasonably display screen on the display device . Furthermore, the same as in the case of the above-described the cause analysis result display screen , in addition to displaying the verification of reasonably display screen on the input\/output terminal , the code relation program  may also notify the administrator  by e-mail or phone to the effect that preparations for verifying the reasonableness of the cause elimination have been made. The verification of reasonably display screen will be explained later by referring to .","Thereafter, the code relation program  notifies the monitor code to the code reappearance monitor program  (S), and once again stands by in Step S.",{"@attributes":{"id":"p-0126","num":"0152"},"figref":"FIG. 11","b":"1002"},"In the verification of reasonably display screen , for example, there is provided a system topology display area , a display area  for a list of detected symptom event entries, a display area  for a list of concluded cause event entries, and a display area  for a list of monitored cause event entries. Further, the verification of reasonably display screen  is also provided with an OK button  and a CANCEL button . The administrator  is able to use these buttons ,  to select whether or not the failure handling process will proceed to reappearance monitoring.","Information, which is displayed respectively in the detected symptom event entry list display area  and the concluded cause event entry list display area  of these display areas, is substantially the same as the information displayed in the cause analysis result display screen .","The system topology display area  displays the coupling relation of each of the monitoring target object related to the ignited code and the monitoring target object related to the monitor code. The monitoring target object related to the ignited code here, as described above, refers to the generation source of the detected symptom event and the generation source of the concluded cause event, respectively. Further, the monitoring target object related to the monitor code refers respectively to the monitor code symptom event (that is, the monitored symptom event) generation source (the monitoring target object shown in the generation-source identification data  of the monitored symptom event entries) and the monitor code cause event (that is, the monitored cause event) generation source (the monitoring target object shown in the generation-source identification data  of the monitored cause event entries). Furthermore, since the monitored symptom event and the detected symptom event match, they have the same generation source. For example, in the system topology display area , the monitoring target object related to the ignited code (that is, the pre-failure elimination one) is rendered using a dotted line, and the monitoring target object related to the monitor code (that is, the post-failure elimination one) is rendered using a solid line. Displaying these monitoring target objects like this makes it possible for the administrator to easily understand how the monitoring target objects have changed in accordance with the elimination of the failure.","The monitored cause event entry list display area  displays either a part or all of the information included in the monitored cause event entry (in this example, the generation-source identification data  and the event type ). By viewing the display area , the administrator is able to learn information related to the monitored cause event, which is regarded as the event to be monitored on a priority basis.",{"@attributes":{"id":"p-0131","num":"0157"},"figref":"FIG. 12","b":"164"},"The code reappearance monitor program , subsequent to being booted up, stands by until being notified of the monitor code by the code relation program  (S).","The code reappearance monitor program  receives the monitor code in accordance with the code relation program  executing the processing of Step S in  (S).","Thereafter, the code reappearance monitor program  monitors for an event occurring inside the computer system  by checking the updating of the event information  at all times (S). This event monitoring is continued until a predetermined monitoring period (for example, a fixed period from the point in time at which the operation management system  detects the elimination of the cause) has elapsed.","Furthermore, the event monitoring carried out by this code reappearance monitor program  is carried out using the same method as the event monitoring that the RCA program  carries out in Step S of . That is, when an event occurs inside the computer system , an event entry related to this event is added to the event information , and the code reappearance monitor program  detects the event that occurred in the computer system  by acquiring this added event entry from the event information . The combination of one or more events detected by the code reappearance monitor program  will be called the \u201cevent set at reappearance monitoring\u201d below. Further, each of the one or more events detected by the code reappearance monitor program  (that is, the events belonging to the event set at reappearance monitoring) will be called the \u201cevent at reappearance monitoring\u201d.","In a case where an event is detected prior to the passage of the monitoring period (S: Within Monitoring Period), the code reappearance monitor program  determines whether or not there is a reappearance candidate based on the event entry at reappearance monitoring (the event entry acquired from the event information ) and the monitor code received in Step S. Specifically, for example, the code reappearance monitor program  is able to determine that a reappearance candidate exists in a case where the event set at reappearance monitoring and the monitored symptom event set (monitor code symptom event set) match at least partially (for example, a case in which any of the events at reappearance monitoring match any of the monitored symptom events). The monitored symptom event that matches with any of the events at reappearance monitoring, that is, the monitored symptom event that has reappeared will be called the \u201creappearance symptom event\u201d below.","In a case where a reappearance candidate is determined to exist, the code reappearance monitor program  collects the various information needed to create a screen (will be called the \u201creappearance caution result display screen\u201d below) for notifying the reappearance candidate to the administrator , and creates this reappearance caution result display screen based on this collected information (S). Then, the code reappearance monitor program  sends the created reappearance caution result display screen to the input\/output terminal . The input\/output terminal , which receives the reappearance caution result display screen, displays the received reappearance caution result display screen on the display device . Furthermore, the same as in the cases of the cause analysis result display screen  and the verification of reasonably display screen  described above, in addition to displaying the reappearance caution result display screen on the input\/output terminal , the code reappearance monitor program  may notify the administrator  via e-mail or phone to the effect that a reappearance candidate exists. The reappearance caution result display screen will be explained later by referring to .","In a case where the predetermined monitoring period has elapsed (S: Outside Monitoring Period), the code reappearance monitor program  ends the reappearance monitoring (S). Thereafter, the processing of Step  is carried out once again. Furthermore, the code reappearance monitor program  is able to notify the administrator  that the predetermined monitoring period has elapsed.",{"@attributes":{"id":"p-0139","num":"0165"},"figref":"FIG. 13","b":"1003"},"In the reappearance caution result display screen , for example, there is disposed a system topology display area , a display area  for a list of detected symptom event entries, a display area  for a list of concluded cause event entries, a display area  for a list of monitored cause event entries, and a display area  for a list of reappearance symptom event entries.","Information, which is displayed respectively in the system topology display area , the detected symptom event entry list display area , the concluded cause event entry list display area  and the monitored cause event entry list display area  of these display areas, is substantially the same as the information displayed in the verification of reasonably display screen .","The reappearance symptom event entry list display area  displays either a part or all of the information included in the event entry for each of the one or more reappearance symptom event entries (in this example, the generation-source identification data  and the event type ). The administrator is able to learn about information related to the event (reappearance symptom event), which was the basis of the determination that a reappearance candidate exists, by viewing the display area .","The preceding has been explanations of the processing carried out by the code relation program  and the code reappearance monitor program .","Next, the processing of the operation management system , which has been explained up to this point, will be explained using the series of scenarios (A1) through (D1) below. Furthermore, the following scenarios are merely examples, and do not purport to limit the applicable scope of this example thereto.","(A1) As shown in , the administrator  uses the management server  to operate and manage the computer system , to which three job servers  (job server , job server  and job server ) and one storage apparatus  (storage apparatus ) are coupled. The data used respectively by the job servers , , and  here is stored in the storage disk  of the storage apparatus . Further, the fact that a \u201cstorage disk failure\u201d in the storage apparatus  propagates to a \u201cserver disk failure\u201d in the job server  that uses this storage apparatus  is defined in the event propagation model.","(B1) Subsequent to the start of operation, a server disk  failure event occurs in the server disk  of each of the job servers , , and  caused by the failure in the storage disk  of the storage apparatus . The server disk  failure event that occurs in the server disk  of each of the job server , the job server , and the job server  will respectively be called a \u201cserver disk failure event \u201d, a \u201cserver disk failure event \u201d, and a \u201cserver disk failure event \u201d below. The RCA program , which detects the server disk failure events ,  and , carries out the processing of , concludes that the cause event is the event in which the storage disk  of the storage apparatus  failed (called the \u201cstorage disk failure event \u201d below), and identifies the fact that the cause of the failure lies in the storage disk  of the storage apparatus .","(C1) The administrator , who learns of the cause of the failure from the cause analysis result display screen , replaces the storage apparatus  with a storage apparatus  that differs from the storage apparatus  to eliminated the cause, and performs the configuration of the storage apparatus  so that the respective job servers , , and  are able to access the storage disk  of the storage apparatus .","(D1) Since there was an error in the configuration of the storage disk  of the storage apparatus  after the passage of several hours from the cause elimination in accordance with (C1) above, the server disk failure event  reappeared in the server disk  of the job server . The administrator , who recognizes a reappearance candidate from the reappearance caution result display screen , readjusts the storage apparatus . Thereafter, due to the passage of the predetermined monitoring period following the cause elimination in accordance with (C1) above, the code reappearance monitor program  notifies the administrator  that reappearance monitoring has ended.","The first example will be explained more specifically in accordance with the scenario (A1) through (D1) described above.","After the start of the computer system  operation in , the administrator  respectively boots up the event receive program , the composition management program , the RCA program , the code relation program  and the code reappearance monitor program  on the management server .","The RCA program  creates the various information of  by executing the Step S of . That is,  show the pre-cause elimination causal laws information , the symptoms definition information , and the cause definition information .","As used here, \u201cSV1-D1\u201d, \u201cSV2-D1\u201d, and \u201cSV3-D1\u201d in  refer respectively to the generation-source identification data denoting the server disk  of the job server , the generation-source identification data denoting the server disk  of the job server , and the generation-source identification data denoting the server disk  of the job server . Further, \u201cE1\u201d signifies the event type \u201cserver disk failure\u201d. Therefore, the events e, e, and e respectively signify the server disk failure event , the server disk failure event , and the server disk failure event . The \u201cST1-L1\u201d in  is the generation-source identification data denoting the storage disk  of the storage apparatus . \u201cP\u201d signifies the event type \u201cstorage disk failure\u201d. Therefore, the event p signifies the storage disk failure event .","Thereafter, the RCA program  detects the server disk failures ,  and , and identifies the cause by referring to the causal laws information . As shown in , a causal laws code \u201c[e, e, e]\u2192p\u201d is included in the causal laws information  here. Therefore, since the server disk failure events ,  and  match the symptom event set (e, e, e), the cause event p (that is, the storage disk failure event ) is concluded to be the root cause. Furthermore, the above-mentioned causal laws code \u201c[e, e, e]\u2192p\u201d is the ignited code. Then, an event entry related to the storage disk failure event  is displayed in the concluded cause event entry list display area  in the cause analysis result display screen .","Thereafter, the administrator, who found out the cause in accordance with the cause analysis result display screen , carries out the processing of the above-mentioned scenario (C1) in order to eliminate the cause.","When the cause has been eliminated and the composition of the computer system  has been changed, the RCA program  creates causal laws information  corresponding to the post-change composition.  respectively show the post-cause elimination causal laws information , the symptoms definition information , and the cause definition information . Furthermore, in , \u201cST2-L1\u201d is the generation-source identification data denoting the storage disk  of the storage apparatus . The event in which the storage disk  of the storage apparatus  fails will be called the \u201cstorage disk failure event \u201d below. That is, the event p signifies the storage disk failure event .","As is clear from , the ignited code (\u201c[e, e, e]\u2192p\u201d) does not exist in the pre-cause elimination causal laws information , and instead, there exists the ignited code (\u201c[e, e, e]\u2192p\u201d). This is because the storage apparatus  was replaced with the storage apparatus , and the storage disk  of the storage apparatus  is being used instead of the storage disk  of the storage apparatus .","Thereafter, the code relation program  selects the ignited code \u201c[e, e, e]\u2192p\u201d as the monitor code because the symptom event set of the ignited code (\u201c[e, e, e]\u2192p\u201d) matches the symptom event set of the ignited code \u201c[e, e, e]\u2192p\u201d included in the post-cause elimination causal laws information . That is, the combination of the events e, e, and e is the monitored symptom event set, and the event p is the monitored cause event. Then, an event entry related to the storage disk failure event , which is the monitored cause event, is displayed in the display area  of the verification of reasonably display screen .","Thereafter, as described in the above-mentioned scenario (D1), the server disk failure event  is detected during reappearance monitoring as the event at reappearance monitoring. The code reappearance monitor program  determines that a reappearance candidate exists because the server disk failure event  is the monitored symptom event. Then, the code reappearance monitor program  displays the reappearance caution result display screen  on the display device . An event entry related to the storage disk failure event , which is the monitored cause event, is displayed in the display area  of the reappearance caution result display screen  the same as it is in the display area  of the verification of reasonably display screen . Further, an event entry related to the server disk failure event , which is the reappearance symptom event, is displayed in the display area  of the reappearance caution result display screen .","Thereafter, the administrator, who recognizes the reappearance candidate in accordance with the reappearance caution result display screen , deals with this reappearance candidate by readjusting the storage apparatus .","According to the first example described above, the causal laws code  related to the ignited code is selected from the post-cause elimination causal laws information  as the monitor code. The operation management system  notifies the information related to the monitor code to the administrator , and also monitors for the presence or absence of a failure reappearance candidate by regarding the occurrence of a monitored cause event as the reappearance of the failure, and monitoring for the occurrence of the monitored symptom event. Then, in a case where any of one or more monitored symptom events occurs, the operation management system  determines that a reappearance candidate has appeared and notifies the administrator  to this effect. In accordance with this, the burden placed on the administrator  for reappearance monitoring is alleviated.","A second example of the present invention will be explained below. In so doing, the points of difference with the first example will mainly be explained, and explanations of the points in common with the first example will be simplified or omitted.",{"@attributes":{"id":"p-0162","num":"0188"},"figref":"FIG. 14","b":"1"},"A server virtualization program , which is a computer program (for example, VMware (registered trademark)) for running a virtual server , is stored in the memory  of the job server . Executing the server virtualization program  runs a virtual server  on the job server . Furthermore, although not shown in the drawing, the virtual server  virtually comprises a CPU, a memory, a disk, a communication I\/F and a port. The disk of the virtual server  will be called the \u201cvirtual disk\u201d below. The virtual disk is created based on the storage capacity of the server disk .","Also physical\/logical attributes relation information  is stored in the memory  of the management server . The physical\/logical attributes relation information  is information showing the relationship between a physical device comprising the job server  and a virtual device (the logical device in ) comprising the virtual server . As shown in , the physical\/logical attributes relation information  comprises the corresponding relationship between the job server  and the virtual server  that is running on the job server , and the corresponding relationship between the server disk  and the virtual disk created based on this server disk . In a case where the composition of the computer system  has changed, the contents of the physical\/logical attributes relation information  are updated so as to correspond to the post-change composition.","The processing of the second example is substantially the same as the processing of the first example except for the monitor code selection method (the processing method of Step S of ). In the second example, the code relation program  selects the monitor code by referring to the post-cause elimination physical\/logical attributes relation information  in addition to the post-cause elimination causal laws information  and the ignited code. The method of selecting the monitor code will be described further below.","The second example will be explained using the following series of scenarios (A2) through (C2). Furthermore, the following scenarios are merely examples, and do not purport to limit the applicable scope of this example.","(A2) As shown in , a virtual server  is running on the job server , a virtual server  is running on the job server , and a virtual server  and a virtual server  are running on the job server . Then, the virtual disk (called the \u201cvirtual disk \u201d below) of the virtual server  is created by being allocating either part or all of the storage capacity of the virtual disk (called the \u201cvirtual disk \u201d below) of the virtual server . Similarly, the virtual disk (called the \u201cvirtual disk \u201d below) of the virtual server  is created by being allocating either part or all of the storage capacity of the virtual disk (called the \u201cvirtual disk \u201d below) of the virtual server . Then, the fact that a \u201cvirtual disk failure\u201d in the allocation-source virtual disk will propagate to a \u201cvirtual disk failure\u201d in the allocation-destination virtual disk is defined in the event propagation model.","(B2) After the start of operation, there occurs an event (called the \u201cvirtual disk failure event \u201d below) in which virtual disk  fails due to a failure in virtual disk . The RCA program , which detects the virtual disk failure event , carries out the processing of , concludes that the cause event is the virtual disk  failure event (called the \u201cvirtual disk failure event \u201d below), and identifies the fact that the cause of the failure lies in the server disk  of the job server , which is basis for virtual disk .","(C2) The administrator , who learns about the cause of the failure in accordance with the cause analysis result display screen , replaces the job server  with the job server , which is different from the job server , in order to eliminate the cause.","The second example will be explained in detail in accordance with the above scenarios (A2) through (C2).",{"@attributes":{"id":"p-0171","num":"0197"},"figref":"FIG. 15","b":["171","1","2","3","4","3","4","1","2","3","133","3","263","1","1","267","3","133","3"]},"The RCA program  creates the various information of  by executing the Step S in . That is,  show the pre-cause elimination causal laws information , the symptoms definition information , and the cause definition information  of the second example. In the second example, the event e signifies the virtual disk failure event , and the event p signifies the virtual disk failure event .","Thereafter, the RCA program  detects the virtual disk failure event , and identifies the cause by referring to the causal laws information . Here, as shown in , the causal laws information  comprises a causal laws code \u201c[e]\u2192p\u201d. Therefore, since the virtual disk failure event  matches the symptom event set (e), the cause event p (that is, the virtual disk failure event ) is concluded to be the root cause. Furthermore, the above causal laws code \u201c[e]\u2192p\u201d is the ignited code. Then, an event entry related to the virtual disk failure event  is displayed in the display area  of the cause analysis result display screen .","Thereafter, the administrator, who discerns the cause in accordance with the cause analysis result display screen , carries out the measures of the above-mentioned scenario (C2) in order to eliminate the cause.","When the cause has been eliminated and the composition of the computer system  has been changed, the physical\/logical attributes relation information  is updated, and the RCA program  creates causal laws information  corresponding to the post-change composition.",{"@attributes":{"id":"p-0176","num":"0202"},"figref":"FIG. 16","b":["171","3","4","4","133","4"]},"Further,  respectively show the post-cause elimination causal laws information , the symptoms definition information  and the cause definition information  of the second example. As is clear from , the content of the causal laws information  is not changed after the cause has been eliminated in the second example. This is because the information related to the virtual device object (the physical device) comprising the virtual server  is concealed from the other devices of the management server . That is, since there is no change in the composition of the virtual device recognized by the management server  even when the physical device has been changed, the content of the causal laws information  is the same subsequent to the cause being eliminated.","Thereafter, the code relation program  selects the monitor code as follows. That is, first, the code relation program  acquires the generation-source identification data (that is, the \u201cLSV3-LD1\u201d) denoting the generation source (the virtual disk ) of the concluded cause event from the event entry related to the concluded cause event (the virtual disk failure event ). Next, the code relation program  refers to the post-cause elimination physical\/logical attributes relation information  and acquires the identification data of the physical device (called \u201crelated physical device\u201d below), which is related to the generation source (the virtual disk ) of the concluded cause event. Since the virtual disk  and the server disk  of the job server  are associated in the post-cause elimination physical\/logical attributes relation information  here, the server disk  of the job server  is regarded as the related physical device, and this identification data (that is, the \u201cPSV4-PD1\u201d) is acquired. Then, the code relation program  once again refers to the post-cause elimination physical\/logical attributes relation information  and acquires the identification data of all of the virtual devices (called the \u201crelated virtual device\u201d below), which are related to the related physical device (the server disk  of the job server ). In addition to the virtual disk  being associated to the server disk  of the job server  in the post-cause elimination physical\/logical attributes relation information , the virtual disk  and the server disk  of the job server  are also associated in the post-cause elimination physical\/logical attributes relation information  here, so that the virtual server  and the virtual server  are regarded as the related virtual device, and the identification data thereof (that is, the \u201cLSV3-LD1\u201d and the \u201cLSV4-LD1\u201d) are acquired. Then, from among the causal laws codes  included in the post-cause elimination causal laws information , the code relation program  selects as the monitor code either a part or all of the causal laws code  in which the generation source of this cause event is the related virtual device (in this example, either the virtual disk  or the virtual disk ). That is, the causal laws code \u201c[e]\u2192p\u201d and\/or \u201c[e]\u2192p\u201d is\/are selected as the monitor code. By the monitor code being selected like this, even though there is no superficial link (the event propagation relation) with the concluded cause event (p), the administrator  is also able to monitor on a priority basis the event (p) that has as its generation source the monitoring target object (the virtual disk ), which is substantially linked via the physical device to the generation source (the virtual disk ) of the concluded cause event (p).",{"@attributes":{"id":"p-0179","num":"0205"},"figref":"FIG. 17","b":"1002"},"Similar to the first example, the coupling relations of each of the monitoring target object related to the ignited code and the monitoring target object related to the monitor code are displayed in the system topology display area . Further, as shown in , for example, the physical device (the server disk  of the b servers  and ), which is related to either the monitoring target object related to the ignited code or the monitoring target object related to the monitor code is also displayed, and the coupling relations thereof are displayed as well.","Either part or all of the information included in the event entry (in this example, the generation-source identification data  and the event type ) is displayed in the monitored cause event entry list display area  for both p and p, which are regarded as the monitored cause events.","According to the second example above, in a case where the generation source of the concluded cause event is the virtual device, the causal laws code  in which the related virtual device (which also includes the generation source of the concluded cause event) is regarded as the generation source of this cause event is selected as the monitor code. Consequently, even though there is no superficial link (the event propagation relation) with the concluded cause event, the administrator  is also able to monitor on a priority basis the event that has as its generation source the monitoring target object, which is substantially linked via the physical device to the generation source of the concluded cause event.","A third example of the present invention will be explained below. In so doing, the points of difference with the first example will mainly be explained, and explanations of the points in common with the first example will be simplified or omitted.",{"@attributes":{"id":"p-0184","num":"0210"},"figref":"FIG. 18","b":"1"},"The job server  comprises a HBA (Host Bus Adapter) . Two ports  (port  and port ) are disposed in the HBA . The job server  is coupled to the SAN  through either one of the ports . Aggregation relation definition information  is stored in the memory  of the management server .",{"@attributes":{"id":"p-0186","num":"0212"},"figref":"FIG. 19","b":"172"},"The aggregation relation definition information  is information for defining the aggregation relationship (the inclusive relation) between monitoring target objects. A lower-level device  is the identification data of the monitoring target object (called \u201clower-level device\u201d below) of the aggregated side (the lower-level side). A higher-level device  is the identification data of the monitoring target object (called \u201chigher-level device\u201d below) of the aggregation side (the higher-level side). A function interchangeability  is information showing whether or not the higher-level device is capable of providing the lower-level device functions in place of the lower-level device in the corresponding aggregation relation.","As used here, \u201cD\u201d, \u201cHBA\u201d, \u201cHBA-P\u201d, \u201cL\u201d, \u201cFC-P\u201d, \u201cSV\u201d and \u201cST\u201d in  are identification data respectively denoting the server disk , the HBA , the port  of the job server  (called the \u201cserver port\u201d below), the storage disk , the port  of the storage apparatus  (called the \u201cstorage port\u201d below), and the storage apparatus . Therefore, for example, row  shows the fact that the server disk  is aggregated in the job server , and the fact that the job server  is not able to substitute for the functions of the server disk . Similarly, row  shows that fact that the server port  is aggregated in the HBA , and the fact that the HBA  is able to substitute for the function of the server port .","The processing of the third example is substantially the same as the processing of the first example except for the method of selecting the monitor code (the processing method of the Step S of ). When selecting the monitor code in the third example, the code relation program  may select the monitor code by also referring to the aggregation relation definition information  in addition to the post-cause elimination causal laws information  and the ignited code. The method for selecting the monitor code will be described further below.","The third example will be explained using the following series of scenarios (A3) through (C3). Furthermore, the scenarios that follow are merely examples, and do not purport to limit the applicable scope of this example.","(A3) As shown in , the administrator  uses the management server  to operate and manage the computer system  to which are coupled two job servers  (a job server  and a job server ) and one storage apparatus  (a storage apparatus ). The job servers  and  here both comprise two server ports  (a server port  and a server port ), and are both coupled to the SAN  via the server port . A server port M of a job server N (where N and M are either  or ) will be notated as \u201cserver port N-M\u201d below. That is, for example, the server port  of the job server  is \u201cserver port -\u201d. Further, the data respectively used by the job servers  and  is stored in the storage disk  of the storage apparatus . Furthermore, the fact that a \u201cstorage port failure\u201d in the storage apparatus  will propagate to a \u201cserver port failure\u201d in the job server  that uses this storage apparatus  is defined in the event propagation model.","(B3) After the start of operation, there occurs an event in which there is a server port  failure in both the server port - and the server port - due to a failure in the storage port  of the storage apparatus . The server port  failure events that occur in the server port - and the server port - will respectively be called \u201cserver port failure event -\u201d and \u201cserver port failure event -\u201d below. The RCA program , which detects the server port failure events - and -, carries out the processing of , determines that the cause event is an event in which the storage port  of the storage apparatus  failed (called \u201cstorage port failure event \u201d below), and identifies the cause of the failure as the storage port  of the storage apparatus .","(C3) The administrator , who learns of the cause of the failure in accordance with the cause analysis result display screen , replaces the storage apparatus  with a storage apparatus , which is different from the storage apparatus , in order to eliminate the cause. At this point, the administrator  changes the server port  for coupling to the SAN  (called \u201cSAN coupling port\u201d below) of the job server  from the server port - to the server port -.","The third example will be explained in detail in accordance with the above-mentioned scenarios (A3) through (C3).","The RCA program  creates the various information of  by executing the Step S of . That is,  show the pre-cause elimination causal laws information , the symptoms definition information , and the cause definition information  of the third example. In the third example, the event e signifies the server port failure event -, the event e signifies the server port failure event -, and the event p signifies the storage port failure event .","Thereafter, the RCA program  detects the server port failure events - and -, and identifies the cause by referring to the causal laws information . As shown in , the causal laws information  here comprises the causal laws code \u201c[e, e]\u2192p\u201d. Therefore, since the server port failure events - and - match the symptom event set (e, e), it is concluded that the cause event p (that is, the storage port failure event ) is the root cause. Furthermore, the above-mentioned causal laws code \u201c[e, e]\u2192p\u201d is the ignited code. Then, an event entry related to the storage port failure event  is displayed in the display area  of the cause analysis result display screen .","Thereafter, the administrator, who discerns the cause in accordance with the cause analysis result display screen , carries out the measure of the above-mentioned scenario (C3) in order to eliminate the cause.","When the cause has been eliminated and the composition of the computer system  has been changed, the RCA program  creates causal laws information  corresponding to the post-change composition.  respectively show the post-cause elimination causal laws information , the symptoms definition information , and the cause definition information  of the third example. Furthermore, in the third example, an event e signifies a failure event of the server port  that occurred in the server port - (called \u201cserver port failure event -\u201d below), and an event p signifies an event in which the storage port  of the storage apparatus  fails (called \u201cstorage port failure event \u201d below).","As is clear from , the ignited code (\u201c[e, e]\u2192p\u201d) does not exist in the pre-cause elimination causal laws information , and instead, there exists the causal laws code \u201c[e, e]\u2192p\u201d. Here, in addition to the cause event, the deleted ignited code \u201c[e, e]\u2192p\u201d and the added causal laws code \u201c[e, e]\u2192p\u201d also cease to match the symptom event set. This is because, in addition to the generation source of the concluded cause event, the generation source of the detected symptom event has also changed. That is, it is because the storage apparatus  has been changed to the storage apparatus , and the SAN coupling port of the job server  has been changed from server port - to server port -.","In a case where the generation source of the detected symptom event (in this example, the SAN coupling port of the job server ) has also been changed, the code relation program  is not able to select the monitor code using the same method as the first example. This is because, as explained above, the symptom event set of the causal laws code  added to the post-cause elimination causal laws information  does not match with the detected event set, and normally the causal laws code , in which this symptom event set matches with the detected symptom event set, no longer exists in the post-update causal laws information .","For this reason, the code relation program  selects the monitor code as follows. That is, first, the code relation program  selects, from among the causal laws codes  included in the post-cause elimination causal laws information , a single causal laws code  to use as a target (called \u201ctarget causal laws code\u201d below) for determining whether or not this target causal laws code will become the monitor code.","Then, the code relation program  refers to the aggregation relation definition information , and for both the generation source of the detected symptom event and the generation source of the symptom event of the target causal laws code  (called \u201ctarget symptom event\u201d below), determines whether or not there exists a higher-level device, which uses this generation source as a lower-level device, and, in addition, which is able to substitute for the function of this lower-level device (called \u201caggregatable device\u201d below). Then, in a case where an aggregatable device exists, the code relation program  treats this generation source as the aggregatable device in making the determination as to whether or not the target causal laws code  will become the monitor code.","In this example, in a case where the causal laws code \u201c[e, e]\u2192p\u201d is selected as the target causal laws code , the target symptom events are the event e and the event e and the generations sources thereof are the server port - and the server port -, respectively. Row  of the aggregation relation definition information  here shows that the server ports  are aggregated in the HBA , and that the HBA  is able to substitute for the functions of the server ports . Therefore, in the determination as to whether or not the target causal laws code  will become the monitor code, the server port - is handled as the HBA  of the job server , and the server port - is handled as the HBA  of the job server . Meanwhile, the detected symptom events are the event e and the event e and the generation sources thereof are the server port - and the server port -, respectively. Then, since an aggregatable device exists for these generation sources the same as described above, these generation sources are handled as the aggregatable device. That is, in the determination as to whether or not the target causal laws code  will become the monitor code, the server port - is handled as the HBA  of the job server , and the server port - is handled as the HBA  of the job server .","On the basis of the above handling, the code relation program  determines whether or not the detected symptom event set matches with the symptom event set of the target causal laws code . In this example, the detected symptom event set (e, e) and the symptom event set of the target causal laws code  (e, e) match because the generation source of the event e and the generation source of the event e are both managed as the HBA  of the job server  on the basis of the above-described handling. Further, the event type of the event e and the event type of the event e also match. Therefore, the event e and the event e are determined to be a match. Further, the event e included in both symptom event sets is the same. Therefore, as a result of this, the detected symptom event set (e, e) is determined to match the target causal laws code  symptom event set (e, e), and the target causal laws code \u201c[e, e]\u2192p\u201d is selected as the monitor code.","The code relation program  is able to use the same processing as that described above to determine whether or not a causal laws code  will become the monitor code for all the causal laws codes  included in the post-cause elimination causal laws information .",{"@attributes":{"id":"p-0206","num":"0232"},"figref":"FIG. 26","b":"1002"},"Either a part or all of the information included in the event entry for p, which is regarded as the monitored cause event (in this example, the generation-source identification data  and the event type ), is displayed in the monitored cause event entry list display area .","Furthermore, in this example, the aggregatable device is limited to a function interchangeable device for the following reason. That is, it is because in a case where a limitation like this does not exist, for example, it becomes possible to make a determination as to whether or not generation sources match in units of node devices, which are the highest level devices (in other words, the determination granularity is likely to become too rough), thereby raising the possibility of a causal laws code  that is not suitable as the monitor code being selected as the monitor code.","According to the third example above, the comparison of symptom event sets (the detected symptom event set and the target causal laws code  symptom event set) in the processing for selecting the monitor code is carried out as follows. That is, when a determination (a generation-source determination) is made as to whether or not the generation source of the detected symptom event (a first device) matches the generation source of the symptom event of the target causal laws code  (a second device) in the comparison of the symptom event sets, in a case where the aggregatable device of the first device and the aggregatable device of the second device were a match, the generation-source determination is carried out by regarding the first device and the second device as being a match. Consequently, the operation management system  is able to select a suitable monitor code even in a case where a change occurs in the generation source of the detected symptom event in accordance with cause elimination measures.","A fourth example of the present invention will be explained below. In so doing, the points of difference with the third example will mainly be explained, and explanations of the points in common with the third example will be simplified or omitted.","The composition of the fourth example is the same as that of the third example. That is,  is a diagram showing the overall composition of the information processing system  related to the fourth example.","The fourth example will be explained using the following series of scenarios (A4) through (C4). Furthermore, the following scenarios are merely examples, and do not purport to limit the applicable scope of this example.","(A4) As shown in , the administrator  uses the management server  to operate and manage the computer system  to which is coupled two job servers  (a job server  and a job server ) and one storage apparatus  (a storage apparatus ). The data used by the respective job servers  and  here is stored in the storage disk  of the storage apparatus . Furthermore, the fact that a \u201cstorage disk failure\u201d in the storage apparatus  will propagate to a \u201cstorage port failure\u201d in this storage apparatus  and to a \u201cserver disk failure\u201d in the job server  that uses this storage apparatus  is defined in the event propagation model.","(B4) After the start of operation, a storage port failure event , a server disk failure event  and a server disk failure event  occur due to a failure in the storage disk  of the storage apparatus . The RCA program , which detects the storage port failure event  and the server disk failure events  and , carries out the processing of , determines that the cause event is a storage disk failure event , and identifies the cause of the failure as the storage disk  of the storage apparatus .","(C4) The administrator , who learns of the cause of the failure in accordance with the cause analysis result display screen , in order to eliminate the cause, replaces the storage apparatus  with a storage apparatus , which is different from the storage apparatus , and configures the storage apparatus  such that the respective job servers  and  are able to access the storage disk  of the storage apparatus .","The fourth example will be explained in details in accordance with the above-described scenarios (A4) through (C4).","The RCA program  creates the various information of  by executing the Step S of . That is,  show the pre-cause elimination causal laws information , the symptoms definition information , and the cause definition information  of the fourth example. In the fourth example, the event e signifies the server disk failure event , the event e signifies the server disk failure event , the event e signifies the storage port failure event , and the event p signifies the storage disk failure event .","Thereafter, the RCA program  detects the storage port failure event  and the server disk failure events  and , and identifies the cause by referring to the causal laws information . As shown in , the causal laws information  here comprises a causal laws code \u201c[e, e, e]\u2192p\u201d. Therefore, since the storage port failure event  and the server disk failure events  and  match the symptom event set (e, e, e), the cause event p (that is, the storage disk failure event ) is concluded to be the root cause. Furthermore, the above-mentioned causal laws code \u201c[e, e, e]\u2192p\u201d is the ignited code. Then, an event entry related to the storage disk failure event  is displayed in the display area  of the cause analysis result display screen .","Thereafter, the administrator, who discerns the cause in accordance with the cause analysis result display screen , carries out the measures of the above-mentioned scenario (C4) in order to eliminate the cause.","When the cause has been eliminated and the composition of the computer system  has been changed, the RCA program  creates causal laws information  corresponding to the post-change composition.  respectively show the post-cause elimination causal laws information , the symptoms definition information , and the cause definition information  of the fourth example. Furthermore, in the fourth example, an event e signifies a storage port failure event , and the event p signifies the storage disk failure event .","As is clear from , the ignited code (\u201c[e, e, e]\u2192p\u201d) does not exist in the pre-cause elimination causal laws information , and instead, there exists the causal laws code \u201c[e, e, e]\u2192p\u201d. The same as in the third example, in addition to the cause event, the deleted ignited code \u201c[e, e, e]\u2192p\u201d and the added causal laws code \u201c[e, e, e]\u2192p\u201d also cease to match the symptom event set. This is because the generation source of the concluded cause event and the generation source of the detected symptom event are mounted in the same node device, and the generation source of the detected symptom event has also been changed in addition to the generation source of the concluded cause event in accordance with the replacing of the node device, which was carried out for cause elimination. That is, it is because a change occurred in the storage port  of the storage port  (it ceased to exist) in accordance with the storage apparatus  having been changed to the storage apparatus .","The same as in the third example, since a change also occurred in the generation source of the detected symptom event (in this example, the storage port  of the storage port ), the code relation program  is not able to select the monitor code using the same method as the first example.","For this reason, the code relation program  selects the monitor code as follows. That is, first, the code relation program  selects, from among the causal laws codes  included in the post-cause elimination causal laws information , a single causal laws code  to use as a target (the target causal laws code) for determining whether or not this target causal laws code will become the monitor code.","Then, the code relation program  determines whether or not the higher-level device of the generation source of this cause event matches the higher-level device of the generation source of this symptom event for each of the ignited code and the target causal laws code . It is possible for the code relation program  to know the generation-source higher-level device here by referring to the aggregation relation definition information . Further, in a case where there is a plurality of higher-level devices, the code relation program , for example, is able to use the highest level device as the higher-level device. Then, in a case where the generation-source higher-level device of the cause event matches the generation-source higher-level device of the symptom event, the code relation program  ignores this generation-source higher-level device-matched symptom event (called a \u201chigher-level matched symptom event\u201d below) and makes a determination as to whether or not this target causal laws code  will become the monitor code, that is, makes a determination as to whether or not the detected symptom event set matches the target causal laws code  symptom event set.","In a case where the causal laws code \u201ce, e, e]\u2192p\u201d is selected as the target causal laws code  in this example, the target causal laws code  symptom events (the target symptom events) are an event e, an event e and an event e, and the generations sources thereof are the server disk  of the job server , the server disk  of the job server , and the storage port , respectively. Then, because row  of the aggregation relation definition information  shows the fact that the server disk  is aggregated in the job server , it is concluded that the higher-level device of the server disk  of the job server  is job server . Similarly, it is concluded that the higher-level device of the server disk  of the job server  is job server . Further, since row  of the aggregation relation definition information  shows that the storage port  is aggregated in the storage apparatus , it is concluded that the higher-level device of the storage port  is the storage apparatus .","Meanwhile, the cause event of the target causal laws code  (called a \u201ctarget cause event\u201d below) is the event p, and the generation source thereof is the storage disk  of the storage apparatus . Then, since row  of the aggregation relation definition information  shows that the storage disk  is aggregated in the storage apparatus , it is determined that the higher-level device of the storage disk  of the storage apparatus  is the storage apparatus .","When comparing the generation-source higher-level device of the target cause event and the generation-source higher-level device of the target symptom event here, the higher-level device of the storage port , which is the generation source of the event e, and the higher-level device of the storage disk  of the storage apparatus, which is the generation source of the event p, match up in the storage apparatus . Therefore, this generation-source higher-level device-matched symptom event e is the higher-level matched symptom event, and is ignored at the time of the comparison with the detected symptom event set.","The same holds true for the ignited code \u201c[e, e, e]\u2192p\u201d. That is, the generation sources of the detected symptom events e, e, e are the server disk  of the job server , the server disk  of the job server , and the storage port , respectively. Then, the higher-level device of the server disk  of the job server  is determined to be the job server , the higher-level device of the server disk  of the job server  is determined to be the job server , and the higher-level device of the storage port  is determined to be the storage apparatus . Meanwhile, the generation source of the concluded cause event p is the storage disk  of the storage apparatus . Then, the higher-level device of the storage disk  of the storage apparatus  is determined to be the storage apparatus . Therefore, the detected symptom event e for the ignited code \u201c[e, e, e]\u2192p\u201d is the higher-level matched symptom event, and is ignored at the time of comparison with the target causal laws code  symptom event set.","Based on the above, the code relation program  determines whether or not the detected symptom event set and the symptom event set of the target causal laws code  are a match. In this example, since the higher-level matching symptom events e and e are ignored in the comparison of the detected symptom event set (e, e, e) and the target causal laws code  symptom event set (e, e, e), the parts (e, e) that are not ignored match, and a determination is made that the two event sets are a match. Therefore, the target causal laws code \u201c[e, e, e]\u2192p\u201d is selected as the monitor code. []","The code relation program , using the same processing as that described above, is able to determine whether or not a causal laws code  will become the monitor code for all the causal laws codes  included in the post-cause elimination causal laws information .",{"@attributes":{"id":"p-0231","num":"0257"},"figref":"FIG. 33","b":"1002"},"Either part or all of the information (in this example, the generation-source identification data  and event type ) included in the event entry for p, which is regarded as the monitored cause event, is displayed in the monitored cause event entry list display area .","According to the fourth example above, in the process for selecting the monitor code, a comparison of the symptom event sets (the detected symptom event set and the target causal laws code  symptom event set) is carried out as follows. That is, when a determination is made as to whether or not the detected symptom event set matches the target causal laws code  symptom event set, an exclusive event is determined based on the relationship between the symptom event generation source and the cause event generation source for both the ignited code and the target causal laws code . Then, in a case where the event set of the detected symptom event set minus the exclusive event matches the event set of the target causal laws code  symptom event set minus the exclusive event, the detected symptom event set and the target causal laws code  symptom event set are regarded as a match, and the above-mentioned second code selection determination is carried out. Consequently, since the concluded cause event generation source and the detected symptom event generation source are mounted to the same node device, the operation management system  is able to select a suitable monitor code even in a case where the detected symptom event generation source has been changed in accordance with the measures taken for cause elimination.",{"@attributes":{"id":"p-0234","num":"0260"},"figref":"FIG. 34","b":"34104"},"The program distribution server  comprises a CPU , a memory (a semiconductor memory  and\/or a disk  or other such storage device), and a communication I\/F . The memory  stores an installation program , which is a computer program for installing in the management server  various computer programs (called a \u201ctarget program\u201d below), such as the code relation program  and the code reappearance monitor program , and a distribution program , which is a computer program for distributing the installation program . The distribution program , in response to a request from either the management server  or another device, sends the installation program to the device that issued this request.","The numerous examples of the present invention described above are merely examples for use in explaining the present invention, and do not purport to limit the scope of the present invention solely to these examples. The present invention may be put into practice using various other modes without departing from the gist thereof."],"heading":["TECHNICAL FIELD","BACKGROUND ART","PRIOR PATENT CITATION","Patent Citation","DISCLOSURE OF INVENTION","Technical Problem","Technical Solution","EXPLANATION OF REFERENCE","BEST MODE FOR CARRYING OUT THE INVENTION","Mode for the Invention 1","Mode for the Invention 2","Mode for the Invention 3","Mode for the Invention 4"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0027"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0028"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0029","num":"0029"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0030","num":"0030"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0031","num":"0031"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0032","num":"0032"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0033","num":"0033"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0034","num":"0034"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0035","num":"0035"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0036","num":"0036"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0037","num":"0037"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0038","num":"0038"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0039","num":"0039"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0040","num":"0040"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0041","num":"0041"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0042","num":"0042"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0043","num":"0043"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0044","num":"0044"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0045","num":"0045"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0046","num":"0046"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0047","num":"0047"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0048","num":"0048"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0049","num":"0049"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0050","num":"0050"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0051","num":"0051"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0052","num":"0052"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0053","num":"0053"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0054","num":"0054"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0055","num":"0055"},"figref":"FIG. 40"}]},"DETDESC":[{},{}]}
