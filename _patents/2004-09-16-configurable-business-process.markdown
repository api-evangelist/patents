---
title: Configurable business process
abstract: A configurable business process adapted to be created from a user interface includes defining flow tasks that identify value objects and obtaining the value objects used by the flow tasks. The value objects are evaluated using evaluation rules to produce a result. The result is used, in turn, to generate instructions to a system user relating to the value objects. The configurable business process operates through a business flow engine accessible to the system user through the user interface. A business flow configuration file and an adapter configuration file are defined. The adapter configuration file maps components, methods, arguments, and return values using an XML engine. Component APIs and an evaluation rules database are provided. The business flow configuration file defines selected component APIs to be executed to perform a user-defined operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07577953&OS=07577953&RS=07577953
owner: DST Innovis, Inc.
number: 07577953
owner_city: El Dorado Hills
owner_country: US
publication_date: 20040916
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","Dynamic Rule"],"p":["Related subject matter is disclosed in co-pending, commonly assigned patent applications entitled: \u201cPOLICY GROUP RULES ENGINE\u201d assigned U.S. patent application Ser. No. 10\/856,537; \u201cPOLICY CONFIGURATION USER INTERFACE\u201d assigned U.S. patent application Ser. No. 10\/856,538; \u201cPOLICY GROUP RULES ENGINE DATA MODEL\u201d assigned U.S. patent application Ser. No. 10\/856,384, all filed May 28, 2004, and \u201cMETHOD FOR GENERATING A PROFILE AND EVALUATING THE PROFILE USING DYNAMIC RULES\u201d assigned U.S. patent application Ser. No. 10\/944,015 filed on Sep. 16, 2004, the disclosures of which are incorporated by reference herein.","The present invention relates, generally, to business enterprise applications and, more particularly, to methods for configuring a business process by a system user in real time to adapt the enterprise system to the needs of the system user.","Driven by strong market demand, the technologies supporting automated data processing of customer data have matured rapidly and become quite powerful in a relatively short time period. As a result, processing system hardware is now powerful enough and fast enough to execute complex calculations on large volumes of customer data for a multitude of purposes. The rapid advances in processing system hardware, however, tend to outpace corresponding advances in software.","As one example, past approaches to processing customer data (e.g., preparing invoices) generally relied upon inflexible hard-coded processing steps. While the software might have captured the desired processing steps at the time the software was written, its hard-coded nature made the software inflexible, and in some cases, unsuitable for the software owner at a later date. With such software, the software owner could only initiate changes, if at all, through an expensive, time consuming re-programming process that required a software vendor programmer to modify the software by hand to suit customer specifications.","Even when a software owner was willing to incur the expense and delay, the modified software still had drawbacks. As an example, with every custom software release came the need for individuals to track, understand, and support the software. Consequently, custom software increased the costs for the software vendor as well as the software owner, and led to a general lack of standardization that hampered efficient production, delivery, and support of the software. Accordingly, a need existed for an automated data processing method that is interactive and will allow a user to develop or change the system operation on a real-time basis.","Methods and systems consistent with the invention provide a flexible, modifiable, and sophisticated customer profile generation method using and evaluation against administrator dynamic rules for processing. The dynamic build process may apply a wide range of attributes relating to the object of the profile. As a result, the software owner\/administrator may develop sophisticated profile instances using their own input data, without intervention from a software vendor.","In one embodiment, a configurable business process adapted to be created from a user interface includes defining flow tasks that identify value objects and obtaining the value objects used by the flow tasks. The value objects are evaluated using evaluation rules to produce a result. The result is used to generate instructions to a system user relating to the value objects.","In another embodiment of the invention, a configurable business process includes providing a business flow engine accessible to a system user through a user interface. An adapter configuration file is defined maps components, methods, arguments, and return values using an XML engine. Component APIs and an evaluation rules database are provided and a business flow configuration file is defined that contains selected component APIs to be executed. The component APIs are executed to perform a user-defined operation and instructions to the system user are provided based upon an outcome of the user-defined operation.","In yet another embodiment of the invention, a method for building and using a profile instance in real time by a system user includes defining an adapter configuration file that maps components, methods, arguments, and return values using an XML engine. Component APIs and an evaluation rules database are provided and a profile definition is created. Data for an object is provided and a business flow configuration file is defined that contains selected component APIs to be executed. The component APIs are executed to build a profile instance from the profile definition and the data for the object, and to evaluate the profile instance the using evaluation rules. Instructions are provide to the system user based on evaluation of the profile instance.","The present invention is intended for use with an enterprise system that provides customer care and billing business processes. Although the enterprise system is flexible and can address a variety of applications, the instant system ideally supports lines of business, such as cable television, direct home satellite services, telephony, utilities, internet services, and the like. Within this context, the portion of the enterprise system to which the instant invention is directed provides a wide variety of services, including customer management, service provider management, account financial management, billing, and the like.","The enterprise system is designed to provide services to a variety of users within and associated with a business enterprise. The users include the system administrator, customers, system operator, sales agents or retailers, suppliers, network operators, and the like.","In accordance with an embodiment of the invention, a user can configure a business process to be performed by the enterprise system through a user interface. The business process can be customized, in real time by the system user, such as an administrator, to suit the needs of the user for the user's particular industry, market requirements, business practices, and the like. Further, the user can add capability to its version of the enterprise system as its needs change over time.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["10","10","12","14","12","16","12","18","20","14","22"]},"A system user can define the flow configuration file to execute a predetermined series of tasks in order to carry out a particular business process. Business flow engine  manages the business flow configuration file, which defines the component APIs that are to be executed together as a single flow. The task components identify methods in adapter program structure , which returns value objects though XML engine . One such value object is a profile. In the exemplary embodiment described herein, the user evaluates profile instances for customers against evaluation rules to determine whether or not the customer is eligible to receive a particular product or service. Those skilled in the art will recognize the system for executing the configurable business process described herein can be used for a variety of business methods, including profile evaluations for other objects, such as retailers, and the like.","In general, the XML APIs provide a means for third-party systems to utilize the enterprise system to execute business transactions. The XML APIs provide a subset of all APIs available to system users for a given component. XML\/HTTP is the preferred interface to the components because it supports business-to-business and business-to-customer services. Also, this interface provides a common language medium for different user systems that individually employ a variety of programming languages.","The XML APIs map to a component's corresponding Java public API. For example, identifying a particular sales agent, assembling orders, and evaluating customer profiles represent single-step transactions that can be carried out by the business flow configuration files. Once control is passed to a Java API, the API can call many other API's to perform the desired task. In the context of the present invention, a public API is an API that can be called by systems that are external to the business enterprise system. In the context of customer profile evaluations, the XML APIs follow specific protocols and conventions. For example, data conventions, request and layer flows, and delivery and messaging all follow predefined protocols. Table I below shows examples of data conventions used by the XML APIs.",{"@attributes":{"id":"p-0024","num":"0023"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE I"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Data Conventions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Data to Represent","Representation Convention"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Boolean\/Boolean","0, 1, true, false (as allowed by XML"]},{"entry":[{},{},"Schema boolean data type)."]},{"entry":[{},"Common codes","CommonCodeId"]},{"entry":[{},"Currency","Requires two attributes - Currency"]},{"entry":[{},{},"type in ISO 4217 format and"]},{"entry":[{},{},"Amount."]},{"entry":[{},{},"For example:"]},{"entry":[{},{},"<Price currency_type=\u201cUSD\u201d>"]},{"entry":[{},{},"12.35<Price>"]},{"entry":[{},"Date","ISO 8601 format: YYYY-MM-DD"]},{"entry":[{},{},"For example: 2004-01-26"]},{"entry":[{},"DateTime","Always in ISO 8601 format where T"]},{"entry":[{},"(Complete date and","represents time and Z represent"]},{"entry":[{},"time in hours,","zero meridian."]},{"entry":[{},"minutes, and"]},{"entry":[{},"seconds)"]},{"entry":[{},"DateTime","YYYY-MM-DDThH:mm:ss.sZ"]},{"entry":[{},"(Complete date and","For example: 2004-01-"]},{"entry":[{},"time in hours,","26T19:20:30.45Z"]},{"entry":[{},"minutes, seconds,"]},{"entry":[{},"and decimal fraction"]},{"entry":[{},"of a second)"]},{"entry":[{},"Empty string","Element with no content, attribute = \u201c\u201d\u201d\u201d"]},{"entry":[{},"Empty container,","Element with tag name identical to"]},{"entry":[{},"such as a collection,","collection name, no content."]},{"entry":[{},"map, or table"]},{"entry":[{},"Locale","ISO639 and ISO 3166. For"]},{"entry":[{},{},"example, en-US."]},{"entry":[{},"NULL value","Element or attribute not present in"]},{"entry":[{},{},"XML."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"XML engine  organizes requests and layer flows into a hierarchy that is illustrated in below in Table II.",{"@attributes":{"id":"p-0026","num":"0025"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"XML API Request And Layer Flows"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"chemistry":{"@attributes":{"id":"CHEM-US-00001","num":"00001"},"img":{"@attributes":{"id":"EMI-C00001","he":"63.42mm","wi":"52.92mm","file":"US07577953-20090818-C00001.TIF","alt":"embedded image","img-content":"table","img-format":"tif"}}}}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In a preferred embodiment, the XML APIs follow an HTTP protocol to receive the incoming XML document, convert it to a String object, and passes it on to the Payload. The delivery protocol also extracts the resulting XML document from the Payload and returns it to the user. The preferred messaging protocol for exchanging information is Simple Object Access Protocol (SOAP). The SOAP defines the header and body of all requests and responses.","The XML API Payload receives the incoming XML document, parses out the name of the business service being invoked, for example, \u201cidentify sales agent,\u201d \u201cget eligible products,\u201d and the like, identifies a specific implementation object for the particular business service, and transfers the document to the correct processing location. The implementation object parses the XML document into the appropriate JAVA objects and performs any required validation needed for the business service. The implementation object also executes the business flow associated with the business service and builds the resulting output XML document, or if necessary, an error document. A diagram of XML document processing and data transformation for input and output in accordance with an embodiment of the invention is shown below in Table III.",{"@attributes":{"id":"p-0029","num":"0028"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE III"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Payload Data Flow"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"chemistry":{"@attributes":{"id":"CHEM-US-00002","num":"00002"},"img":{"@attributes":{"id":"EMI-C00002","he":"30.48mm","wi":"75.52mm","file":"US07577953-20090818-C00002.TIF","alt":"embedded image","img-content":"table","img-format":"tif"}}}}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Business flow engine  determines how the associated business services map into a particular Java API. The associated business flow configuration file  and adapter file  determine the mapping, as described above.","A user accesses the XML APIs by constructing an appropriate SOAP XML document and posting the document to the appropriate URL across the HTTP. Table IV below shows the elements and attributes contained in the SOAP request.",{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE IV"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SOAP Request Header Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SOAP Header",{}]},{"entry":[{},"Elements\/Attributes","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Request name","(required) The name of the XML"]},{"entry":[{},{},"API."]},{"entry":[{},"UsernameToken","(required) Contains both the"]},{"entry":[{},{},"Username and the Password."]},{"entry":[{},{},"The Username attribute is the"]},{"entry":[{},{},"Concorde user name."]},{"entry":[{},{},"The Password attribute is the"]},{"entry":[{},{},"Concorde password and is"]},{"entry":[{},{},"encrypted."]},{"entry":[{},"Retailer ID","(required) The Retailer ID tied to the"]},{"entry":[{},{},"Username for purposes of"]},{"entry":[{},{},"authentication on each XML API"]},{"entry":[{},{},"call."]},{"entry":[{},"ContextInfo","Provides a way for the end user to"]},{"entry":[{},{},"pass along pieces of information into"]},{"entry":[{},{},"Concorde. See \u201cContextInfo\u201d on"]},{"entry":[{},{},"page 25 for further information about"]},{"entry":[{},{},"ContextInfo."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"When the XML API framework parses the SOAP header, it looks for the element ContextInfo. The XML API framework uses this element to create a HashMap. Every attribute and value of the element is added to the HashMap as a key\/value. After the framework creates the HashMap, it places the HashMap in the session state object along with the remaining header information and transfers the HashMap to Business flow engine . Since the session state contains the Contextinfo HashMap, the business flow can be configured to send the HashMap as an argument to a task, step, or method as an argument. Within the present invention, the contents of the HashMap can be modified by the task, step, or method and returns the contents to its place of origin. The XML API framework extracts all the keys and values and transforms them into attributes and values in the SOAP response header ContexInfo object.","The XML APIs can be employed for a wide variety of tasks within the enterprise system. One example of the a business transaction carried facilitated by XML APIs within the business enterprise system is the evaluation of profiles to determine eligibility of an entity for various services and the generation of information to a system user to carry out a particular action. For example, the enterprise system uses profiles to control processing-based characteristics of the users and other entities, such as customers, retailers, accounts, targets, and the like. As used herein, customers are end users of the services provided by an operator of the enterprise system. Retailers are providers of the products sold by the operator, accounts are the business record files of customers and retailers, and targets are devices or device components that send and receive electronic signals.","Profiles are convenience classes within the enterprise system that are used to characterize one or more enterprise classes. Profiles are constructed from enterprise class attributes. There are several types of profiles within the enterprise system. For example, profiles can be created for various classes, such as customer, customer account, target, retailer, and the like. The profiles are composed of a subset of attributes from the enterprise classes. For example, a customer profile may contain attributes, such as identity, address, credit rating, and the like. The customer account may contain various attributes, such as balance, status, account type, hardware owned, current product portfolio, related accounts, and the like. A retailer profile, for example, may include retailer identification, number of accounts serviced, account identifiers, customer identifiers, target identifiers, and the like.","In accordance with one embodiment of the invention, during the custom configuration of the business process, profiles are passed to different software components by a user configurable business flow engine. The business flow engine manages the steps within a transaction. For example, an administrator uses business flow to set the specific steps and their sequence to process the creation of a new account. The business flow can be customized to add steps and remove steps as desired by the user to adapt the business process, for example, to a particular line of business, or particular customer or retailer requirements, and the like.","The business flow passes the profile information to a software component where rules are applied to evaluate profile components against the rules for the purpose of generating user instructions. Each application programming interface is enabled with business flow software that allows addition and subtraction of processing steps in the business flow. Further, an XML engine is provided that allows changing of the data elements passed in the programming interfaces without the need to change software code. As will subsequently be described, the XML engine also passes value objects through the interfaces to the various system components. In a preferred embodiment of the invention, the business flow and XML engines is deployed in Java\/J2EE.","The class definitions within a profile are used by the enterprise system to create processing rules. Dynamic rules are provided in which the class attributes are used as arguments and the values of the attributes are used as constraints within the rules. The values for a particular customer or retailer, for example, are used by the enterprise system to evaluate the rules. Thus, the inventive method enables a user to modify the data processing system in real-time without the need to re-program the operating software. Further, once a profile is established, it can be changed to accommodate various needs. For example, attributes can be added or deleted from the profile.","A profile definition contains information needed to build an instance of a profile. The profile definition is used as an input to define rules. There may be multiple profile definitions in the enterprise system established for different entities (examples include customer and retailer profiles). Profile definitions constrain the definition of dynamic rules by establishing a set of classes, attributes, and valid values to choose from when setting up rules. In accordance with one embodiment of the invention, a profile definition contains at least one profile class database (the source of profile information) plus any required attributes from the profile class database and their valid values.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 1"],"b":["100","100","102","104","106","100","108","110","100","16","22","12","14"]},"As described above, the invention will be set forth in the context of applying dynamic rules against information data bases to evaluate a profile instance and provide user instructions. Memory  temporarily stores data, for example customer data , internal data , and programs, for example, a rule definition program  and evaluation program . A user interface  enables access to business flow engine  that enables an operator to build profiles for application to the customer data . The build profile database  implements a data model for the rules engine, including, as examples, profile classes , profile class attributes , and validation values .","The particular implementation described herein is exemplary in nature. For example, although selected aspects, features, or components of the implementations are depicted as being stored in the memory  and profile database , all or part of systems and methods consistent with the present invention may be stored on or read from other machine-readable media, for example, secondary storage devices such as hard disks, floppy disks, and CD-ROMs; a signal received from a network; or other forms of machine readable memory either currently known or later developed.","Furthermore, the specific components of the data processing system , such as methods, systems, and articles of manufacture consistent with the profile build process may include additional components or different components. For example, the processor  may be a microprocessor, microcontroller, application specific integrated circuit (ASIC), discrete logic, or a combination of other types of circuits acting as explained below. Similarly, the memory  may be DRAM, SRAM, Flash or any other type of memory. Build profile database  may be separately stored and managed, split into multiple databases, and generally logically and physically organized in many different ways. Furthermore, dynamic rules database  may more generally represent data files searchable using techniques other than relational database queries. Also, the individual programs may be parts of a single program, separate programs, program libraries, or distributed across several memories, processors, and the like.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":["130","130","132","134","134","130","136","138","140"]},"Profile classes database  is contained within profile class database  of build profile database . The number of available profile classes is limited to the contents of the database and additions to the number of profile changes may, in some circumstances, require that the programming code be changed.","In the case of a customer profile definition, the profile can include the following classes: customer, account, contact points, customer products, equipment, and addressable targets. In accordance with an embodiment of the invention, each class includes attributes which can be selected by the user during the profile definition process. During the profile definition process, the user selects profile class attributes from attributes data base  for each class through user interface . A portion of the attributes for each class have validation values. The validation values are contained in validation values database . The validation values provide range limits for certain attributes, provide identifiers, define acceptable values for certain attributes, and the like.","An exemplary customer profile definition is shown in Table V below.",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE V"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Customer Profile Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Source",{},"Customer",{}]},{"entry":["Class","Attribute","Role","Valid Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Customer","Customer","Payer","As determined from a"]},{"entry":[{},"Credit Rating",{},"credit agency. Numeric 0"]},{"entry":[{},{},{},"to 100; 0-50 (Low), 51-80"]},{"entry":[{},{},{},"(Medium), 81-100 (High)"]},{"entry":["Account","Account","Payer","Valid Account"]},{"entry":[{},"Classification",{},"Classification by"]},{"entry":[{},{},{},"account\/retailer"]},{"entry":[{},{},{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00001","he":"2.46mm","wi":"3.56mm","file":"US07577953-20090818-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}}]},{"entry":[{},{},{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00002","he":"2.46mm","wi":"3.56mm","file":"US07577953-20090818-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}}]},{"entry":[{},{},{},{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00003","he":"2.46mm","wi":"3.56mm","file":"US07577953-20090818-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}}]},{"entry":["Account","Account","Consumer","Postal code by"]},{"entry":[{},"Location -",{},"account\/retailer"]},{"entry":[{},"Postal Code"]},{"entry":["Account","Account","Payer","Current account balance"]},{"entry":[{},"Balance",{},"by account\/retailer"]},{"entry":["Account","Account","Payer","Current account past due"]},{"entry":[{},"Past Due",{},"balance by"]},{"entry":[{},{},{},"account\/retailer"]},{"entry":["Account","Account","Consumer","Valid list of products on"]},{"entry":[{},"Current",{},"customer account by"]},{"entry":[{},"Product's",{},"account\/retailer"]},{"entry":["Account","Account","Consumer","List of equipment at"]},{"entry":[{},"Equipment",{},"consumers service"]},{"entry":[{},{},{},"address"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The customer profile definition includes classes for customer and account and attributes for each class. The profile definition also identifies the role of the customer and account classes as payer, one who pays for products and services, or consumer, one who consumes the products and services, but may not pay for them. Validation values are provided for the customer rating attribute to specify the credit rating depending upon a numeric rating. Similarly, values are also provided for type of account classification. Other values are provided for account financial analysis, account balances, and past due amounts. In addition, to range and qualification values, the validation values also include lists of products and equipment associated with an account.","Using the method illustrated in the data model of , similar profile definitions to the profile definition shown in Table V can also be generated for another object, such as retailers, suppliers, sales agents, and the like. As noted in Table V, valid values include account attributes that can apply to a customer or a retailer.","The profile definition can be used to establish a profile instance for a particular customer, retailer, or other object within the enterprise system.  illustrates a data model  for a profile instance in accordance with an embodiment of the invention. Within data model , a profile class database  and a profile attribute class database  are associated as defined by profile definition data model . A value class  contains a specific value for the particular object of the profile instance, for example, a customer or a retailer.","Data model  produces a profile instance  that is associated with a profile version class . An example of a customer profile produced by data model  is shown below in Table VI.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE VI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Customer Profile"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Attribute","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Customer Credit Rating","Medium"]},{"entry":[{},"Account Classification","Regular"]},{"entry":[{},"Account Location - Postal Code","28901"]},{"entry":[{},"Account Balance","$50"]},{"entry":[{},"Account Past Due","\u2002$0"]},{"entry":[{},"Account Product History","Null"]},{"entry":[{},"Account Equipment","DSTB 2000"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"As described above, profile instances, such as the profile instance shown in Table VI, are developed through the application of dynamic rules. Dynamic rules operate to constrain the relationships within the profile data model. For example, a product eligibility rule defines product eligibility for a particular customer depending upon customer qualifications. Further, a product-price eligibility rule defines customer qualifications necessary for the customer to be charged a particular price for the product.","In accordance with an embodiment of the invention, a particular rule is set up using a visual editor, such as display  and user interface . In general, user interface  may be implemented in many formats. For example, user interface  may employ radio buttons, drop down lists, selection boxes, text entry fields, scroll bars, drop down menus, selection buttons, toggle buttons, or any other type of user interface element for implementing the dynamic rule processing technique of the present invention.","An example of a user definable rule for product eligibility is set forth as follows:",{"@attributes":{"id":"p-0057","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["If Customer Credit Rating>Low and Postal Code>28*","Then Customer is eligible=True\n\nIn the dynamic rule shown above, the class attributes \u201ccustomer credit rating\u201d and \u201cpostal code\u201d are used as arguments, and the values \u201clow\u201d and \u201c28*\u201d are used as constraints. A user, such as an administrator, selects the attributes customer credit rating and postal code from lists available within profile definition data model . The user enters the values \u201cLow\u201d and \u201c28*\u201d and a system editor, which can be contained in build profile data base , provides the remaining text and user prompts.\n"]}}}},"Accordingly, product eligibility can be defined by an administrator based on a customer credit rating qualification and a particular characteristic, such as customer geographical location. Those skilled in the art will appreciate that many different rules similar to the rule illustrated above can be created for the numerous attributes associated with customers, retailers, suppliers, sales agents, and the like.","Those skilled in the art will recognize that the dynamic rule set forth above is one example of many different relationships that can be established in accordance with the inventive method. For example, rules can be established for numerous attributes with a given class. The rules are designed to be used by a user of the enterprise system and are configured for a particular line of business.","An exemplary method for maintaining and using a customer profile employing dynamic rules processing is illustrated in . The illustrated method can be employed by a user, such as an administrator, a customer service representative, and the like, to create and maintain a customer profile definition, such as described above.","In accordance with the illustrated embodiment, a customer profile definition  is created and maintained by a manage customer profile application . Eligibility rules are employed by a define eligibility rules application , which provides an eligibility rule , such as the rule illustrated above. Eligibility rules application  defines eligibility rules for numerous attributes, such as products, prices, and discounts, and the like. The rules application can be administered, for example, by rule definition program .","Once eligibility rule  is established, it can be evaluated by evaluate eligibility rule application . Evaluation application  performs several kinds of evaluations using rules from rules definition application . For example, application  will evaluate proposed products for a customer and provide a list of acceptable products that the customer is eligible to purchase. Evaluation application  can be administered, for example, by evaluation program .","When an order is received to create a new customer profile, build customer profile application  is initiated. Customer profile application  uses customer profile definition  to build a customer profile  in accordance with the process described above. Customer profile application  accesses files  that contain varies customer information, such as financial information and contract information as needed, to construct customer profile .","As customer profile  is being created, a lookup eligible products application  is initiated to provide a list of products and services for customer profile . The potential products are evaluated by products application  using eligibility rule application . Product application  returns eligible products to customer profile .","Shown in  is a schematic diagram of a system and method in accordance with an embodiment of the invention for profile generation and evaluation within an enterprise system. The system includes three subsystems, a profile definition subsystem , a profile build subsystem , and a rules definition subsystem .","Referring to , profile definition subsystem  includes data structure  that contains profile classes database , profile class attributes database , and validation values database . Profile definitions are maintained in a profile data structure . Processor  acts on instructions provided by a system user through user interface  to generates profile definition .","Referring to , , and  profile build subsystem  includes a customer database . Upon instructions from user interface , processor  acquires data from customer database  and a profile definition from profile definition subsystem  and generates profile instance .","Referring to , rules definition subsystem  includes dynamic rules database  and product catalog . Upon instructions from user interface , processor  acquires profile attributes from subsystem , a set of rules from rules database , and a product list from product catalog . Rule definition program  is executed to provide a list of eligible products  based on the acquired rules and the profile attributes. Evaluation program is executed to determine which products are eligible for the customer.","Those skilled in the art will recognize that system and method of the invention can be applied to a wide variety of objects, such as suppliers, retailers, sales agents, and the like. Accordingly, the foregoing description set forth in the context of a customer and product eligibility is merely illustrative of one embodiment of the invention. For example, database  can contain credit rating information and rules database  can contain rules that determine the extension of credit to a customer, how to treat late payment of a bill, and the like. Further, database  can contain data for a retailer, sales agent, supplier, and the like, and rules database  can contain rules that apply to a rating for retailers that sell products and services for the enterprise system.","As shown in , each of the hardware processing components includes an XML applications interface that enables profile data to be passed between the system components. As described above, the process of passing profiles and rule evaluations between the applications interface is preferable carried out by business flow engine . Business flow engine  accesses XML configuration files that are resident on data processing system  and enables a system user to change the business process configuration, such that the change takes effect in real time, but without affecting flows that are in process.","As described above, the business flow engine employs flow configuration files  for task definition and adapter configuration files  for mapping. As will subsequently be described, adapter configuration files  contain AdapterConfiguration code that defines the components, the methods on those components, and the locations in the session state containing the arguments for those methods and where to store the results. The AdapterConfiguration includes descriptions of components, methods, arguments, and return values, and the content to session containers. The adapter code also defines mapping between the values in the session containers and the arguments and return values. The AdapterConfiguration is organized into three sections as shown below.\n\n","As shown above, the component, method, argument, and return each have unique identifiers. The argument code also includes name and argument type identifiers. The session and context lists have a structure similar to the component list shown above.","The method executed in the exemplary code illustrated above executes a process component \u201cgetEligibleProductsAndPrices,\u201d which is illustrated in  as step . Business flow engine  calls component API , which identifies a dynamic rule similar to that shown above obtains a rule executes rules database . In this case, the rule relates to product eligibility as shown in . The AdapterConfiguration code also maps arguments to obtain a profile instance, \u201cprofile VO,\u201d return values shown as step  in , and eligible products \u201csearch criteria VO,\u201d shown as step  in .","Flow configuration files  include FlowConfiguration code that defines the flows, for example, the components and methods that are to be executed and the order of execution. This configuration is preferable kept simple so that a business analyst will be able to easily maintain this file. An example of the XML flow configuration code for GEPP is shown below.\n\n","Business flow engine  is configured to accept input from the user interfaces for the logging of flows and tasks, where the log includes the user name, beginning and end identifiers of each flow and task, a timestamp, and a flow\/task name. Further, a method on a subsystem may be called from multiple business flows, where each business flow may use a different source in the session state to supply the arguments for the methods. Business flow engine  also allows a system user to open value objects in the session state to retrieve arguments by calling getter methods and to store results by calling putter methods. In one embodiment, a business flow executes as a single J2EE transaction, including any nested business flows.","Thus, it is apparent that there has been described in accordance with the invention, a method for profile generation using dynamic rules processing that fully provides the advantages set forth above. Although the invention has been described and illustrated with reference to specific illustrative embodiments thereof, it is not intended that the invention be limited to those illustrative embodiments. Those skilled in the art will recognize that variations and modifications can be made without departing from the spirit of the invention. For example, the order of processing described above can be changed and databases can be established in different order. It is therefore intended to include within the invention all such variations and modifications that fall within the scope of the appended claims and equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
