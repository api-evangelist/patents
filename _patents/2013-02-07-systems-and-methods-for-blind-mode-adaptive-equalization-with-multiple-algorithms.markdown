---
title: Systems and methods for blind mode adaptive equalization with multiple algorithms
abstract: Various embodiments described herein are directed to methods and systems for blind mode adaptive equalizer system to recover complex valued data symbols from the signal transmitted over time-varying dispersive diversity wireless channels. For example, various embodiments may utilize an architecture comprised of a bank of estimation units, a normalizing gain estimator, a DSP unit and a feedback shift register providing the equalizer feedback state vector. The estimation unit may be further comprised of a multiplicity of adaptive algorithms providing various filtered estimates of the data symbol to the DSP unit or providing the joint estimate of the transmitted data symbol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08831082&OS=08831082&RS=08831082
owner: 
number: 08831082
owner_city: Cerritos
owner_country: US
publication_date: 20130207
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["Broadband wireless systems are currently in a rapid evolutionary phase in terms of development of various technologies, development of various applications, deployment of various services and generation of many important standards in the field. The increasing demand on various services justifies the need for the transmission of data on various communication channels at the highest possible data rates. The multipath and fading characteristics of the wireless channels result in various distortions, the most important of those being the intersymbol interference (ISI) especially at relatively high data rates. Adaptive equalizers are employed to mitigate the ISI introduced by the time varying dispersive channels and possibly arising from other sources. In one class of adaptive equalizers, a training sequence known to the receiver is transmitted that is used by adaptive equalizer for adjusting the equalizer parameter vector to a value that results in a relatively small residual ISI. After the training sequence, the data is transmitted during which period the equalizer continues to adapt to slow channel variations using decision directed method.","Among the various algorithms to adapt the equalizer parameter vector are the recursive least squares (RLS) algorithm, exponentially weighted Kalman filter, LMS algorithm, and the quantized state (QS) algorithm, the last one taught by Kumar et. al. in, \u201cAdaptive Equalization Via Fast Quantized-State Methods\u201d, IEEE Transactions on Communications, Vol. COM-29, No. 10, October 1981. Kumar at. al. teach orthogonalization process to arrive at fast and computationally efficient identification algorithms in,\u201d State Inverse and Decorrelated State Stochastic Approximation\u201d, Automatica, Vol. 16, May 1980. The training approach, however, is not desirable in many communication applications such as those involving video conference type of applications that will require a training sequence every time a different speaker talks. Moreover, the need for training sequence results in a significant reduction in capacity as for example, in GSM standard, a very significant part of each frame is used for the equalizer training sequence. Also, if during the decision-directed mode the equalizer deviates significantly due to burst of noise or interference, all the subsequent data will be erroneously received by the receiver until the loss of equalization is detected and the training sequence is retransmitted and so on.","There are many other applications where the equalizers are applied as in antenna beam forming, adaptive antenna focusing of the antenna, radio astronomy, navigation, etc. For example, Kumar et. al. teach in Method and Apparatus for Reducing Multipath Signal Error Using Deconvolution, U.S. Pat. No. 5,918,161, June 1999, an equalizer approach for a very different problem of precise elimination of the multipath error in the range measurement in GPS receiver. In all of various applications of equalizers and due to various considerations such as the logistics and efficiency of systems, it has been of great interest to have the equalizer adapt without the need for a training sequence. Such equalizers are the termed the blind mode equalizers.","Among some of the approaches to blind mode equalization is the Sato's algorithm that is similar to the LMS algorithm except that it does not have any training period. Kumar in, \u201cConvergence of A Decision-Directed Adaptive Equalizer,\u201d Proceedings of the 22IEEE Conference on Decision and Control, 1983, Vol. 22, teaches a technique wherein an intentional noise with relatively high variance is injected into the decision-directed adaptive algorithm with the noise variance reduced as the convergence progressed and shows that the domain of convergence of the blind mode equalizer was considerably increased with the increase in the noise variance at the start of the algorithm. The technique taught by Kumar is analogous to the annealing in the steel process industry and in fact the term simulated annealing was coined after the introduction by Kumar. Lambert et. al., teach the estimation of the channel impulse response from the detected data in, \u201cForward\/Inverse Blind Equalization,\u201d 1995 Conference Record of the 28Asilomar Conference on Signals, Systems and Computers, Vol. 2, 1995.","Another blind mode equalization method applicable to the case where the modulated data symbols have a constant envelope and known as Goddard or constant modulus algorithm (CMA) is based on minimization of the magnitude square of the estimate of the estimate of the data symbol and a constant that may be selected to be 1. An example of references for the CMA is W. Chung, et. al., \u201cThe local minima of fractionally-spaced CMA blind equalizer cost function in the presence of channel noise,\u201d Proc. IEEE International Conference on Acoustics, Speech, and Signal Processing, pp. 3345-8, 12-15 May, 1998.","Some of the prior blind mode equalizers have relatively long convergence period and are not universally applicable in terms of the channels to be equalized and in some cases methods such as the one based on polyspectra analysis are computationally very expensive. The CMA method is limited to only constant envelope modulation schemes such as M-phase shift keying (MPSK) and thus are not applicable to modulation schemes such as M-quadrature amplitude modulation (MQAM) and M-amplitude shift keying (MASK) modulation that are extensively used in wireless communication systems due to their desirable characteristics. Tsuie et. al. in, Selective Slicing Equalizer, Pub. No. US 2008\/0260017 A1, Oct. 23, 2008, taught a selective slicing equalizer wherein in a decision feedback equalizer configuration, the input to the feedback path may be selected either from the combiner output or the output of the slicer depending upon the combiner output. Kumar in, Systems and Methods for Adaptive Blind Mode Equalization, U.S. patent application Ser. No. 13\/434,498, Mar. 29, 2012, teaches blind mode equalizer with hierarchical architecture.","The prior blind mode equalization techniques are for the case of a single channel that may be the result of combining the signals received over multiple diversity channels before equalization. Such an approach does not take advantage of the differences that may exist among the diversity channels. Some of the algorithms have relatively slow convergence rate and may be limited in terms of their applicability to various modulation formats. It is desirable to have blind mode adaptive equalizers that are efficient for the case of the signal received over dispersive diversity channels, possess robustness and some level of inherent redundancy to avoid convergence to any local minima, have wide applicability without, for example, restriction of constant modulus signals, are relatively fast in convergence, are computationally efficient, have modular configuration to provide a tradeoff between complexity and performance. The equalizers of this invention possess these and various other benefits.","Various embodiments described herein are directed to methods and systems for blind mode multiple algorithms adaptive equalizer system (BMMAES) to recover the in general complex valued data symbols from the signal transmitted over time-varying dispersive wireless channels. For example, various embodiments may utilize an architecture comprised of a normalizing gain estimator, an estimation unit for providing a multiplicity N filtered estimates of the data symbols, and a DSP unit for providing a jointly detected data symbol based on the multiplicity N filtered estimates. In the decision feedback configuration, the architecture is further comprised of a feedback shift register for providing a feedback state vector, comprised of the delayed versions of the jointly detected data symbol, to the estimation unit for eliminating the inter symbol interference (ISI) due to the past symbols.","In the feed forward mode of the equalizer architecture, the estimation unit is further comprised of a feed forward shift register for providing a feed forward state vector to a first multiplicity N inner product operators providing the N feed forward signals, on the basis of the respective equalizer forward weight vectors, for generating the N error signals for updating the multiplicity N adaptive algorithms that provide the N equalizer forward weight vectors.","In the decision feedback mode of the equalizer architecture, the estimation unit is further comprised of a second multiplicity N inner product operators providing the N feedback signals on the basis of the respective equalizer feedback weight vectors, for modifying the N error signals for updating the multiplicity N adaptive algorithms that provide the N equalizer weight vectors comprised of the respective feed forward and feedback weight vectors.","The normalizing gain estimator is further comprised of a bank of N parameter \u03b1 estimators wherein the iparameter \u25a1 estimator provides the estimate of the parameter \u03b1, for normalizing the filtered estimate, on the basis of the ifiltered estimate sof the data symbol and the equalizer forward weight vector from the iadaptive algorithm for i=1, 2, . . . , N. The parameter \u03b1 estimator is further comprised of an estimator of the power in the filtered estimate, and an estimator of the power in the noise component of the filtered estimate, for obtaining the estimate of the power of the signal component of the filtered estimate.","The DSP unit is further comprised of a bank of phase alignment subsystem units for providing gain normalization and phase alignment of the N filtered signals, a reference phase generator for generating the reference phase, a means of further adjusting the phase of the filtered signals, a combiner weights generator, a weighted combiner for weighted combining of the phase adjusted signals, and a decision device for providing the jointly detected data symbol.","The iphase alignment subsystem unit for i=1, 2, . . . , N, is further comprised of a gain normalizer for normalizing the power in the signal component of the filtered estimate to the signal power in the data symbols, a phase accumulator unit for providing the phase alignment of the ifiltered estimate, a decision device for providing the idetected data symbol based on the ifiltered estimate, a phase threshold device for providing the detected phase \u03c6, and a means for estimating the signal to residual inter symbol interference (ISI) plus noise power ratio \u0393for the ifiltered estimate.","The phase threshold device determines the sector in the signal constellation diagram of the data symbol in which the phase aligned filtered estimate lies, wherein the sector in the signal constellation diagram may be one of the sectors of rotational symmetry in the constellation diagram. For example, the data symbol may be a MQAM modulated signal with the order of modulation M=Nfor some integer N, and has four sectors of rotational symmetry. In various other embodiments of the invention, the sectors may correspond to the four quadrants of the constellation diagram for any signal constellation diagram.","Various embodiments of the blind mode multiple algorithms equalizer system (BMMAES) to recover the in general complex valued data symbols from the signal transmitted over dispersive diversity wireless channels with order of diversity Nmay utilize an architecture comprised of a normalizing gain estimator, a bank of Nestimation units wherein the estimation unit is for receiving the signal over one of the Ndiversity channels and providing Nfiltered estimates on the basis of Nadaptive algorithms, a a collator for collating the filtered estimates of the data symbols from the bank of Nestimation units providing the collated N filtered estimates of the data symbols provided by the Nestimation units, and a DSP unit for providing the jointly detected data symbol based on the collated N filtered estimates of the data symbols. In the feedback configuration, the architecture is further comprised of a feedback shift register for providing a feedback state vector, comprised of the delayed versions of the jointly detected data symbol, to the Nestimation units for eliminating the inter symbol interference (ISI) due to the past symbols.","The various adaptive algorithms in the Nestimation units may all be distinct and, for example, may be selected from the group consisting of the recursive least squares (RLS) algorithm, various quantized state (QS) algorithms, LMS algorithm, Sato's algorithm, Goddard algorithm, neural based algorithm, the blind mode algorithm with hierarchical structure, or any other more general linear or nonlinear algorithm for obtaining the filtered estimates of the data symbols. In some embodiments, several versions of the same algorithm with different algorithm parameters, for example, the initial estimate of the equalizer weight vector, may be used in the estimation units.","The following description is provided to enable any person skilled in the art to make and use the invention and sets forth the best modes contemplated by the inventor of carrying out his invention. Various modifications, however, will remain readily apparent to those skilled in the art, since the generic principles of the present invention have been defined herein specifically to provide systems and methods for blind mode equalization of signals received over time varying dispersive channels, and for recovering the data symbols transmitted from a source in blind mode.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 1","FIG. 1"],"b":["10","1"],"sub":["1","1 "]},"The data symbol a(k) may take values from a set of M possible values for some integer M. For example, for the case of the QPSK modulation in digital communication systems, a=a+j a, with j=\u221a{square root over (\u22121)}, and with aand adenoting the real and imaginary components of ataking possible values +Aand \u2212Afor some constant A>0. For the case of MQAM modulation with the number of points M in the signal constellation equal to Nfor some positive integer N that is normally selected to be an integer power of 2, each of aand amay take possible values from the set of N values given by {\u00b11,\u00b13, . . . , \u00b1(N\u22121)} A. Similarly for the MPSK modulation, atakes possible values from the set of M values given by {Aexp(j((2m\u22121)\u03c0\/M); m=1, 2, . . . , M}.","The output z(k) of the discrete-time channel is given by",{"@attributes":{"id":"p-0029","num":"0028"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":{"mrow":[{"msub":{"mi":["y","c"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mrow":{"mo":"-","msub":{"mi":"M","mn":"1"}}},"msub":{"mi":"M","mn":"1"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":[{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"i"}},{"mi":"a","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["k","i"],"mo":"-"}}}],"mo":"\u2062"}},{"msup":{"mover":{"mi":["h","_"]},"mi":"H"},"mo":"\u2062","msub":{"mover":{"mi":["\u03c7","_"]},"mi":"k"}}],"mo":"="}],"mo":"="},"mo":";"},{"msub":{"mover":{"mi":["\u03c7","_"]},"mi":"k"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}},"mrow":{"mo":"\u2003","mrow":{"mo":["=","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}},"msup":{"mrow":{"mo":["[","]"],"mrow":{"mrow":[{"mi":"a","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"k","mn":"0"},{"mi":"M","mn":"1"}],"mo":"+"}}},{"mi":"a","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"k","mn":"0"}}},{"mi":"a","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"k","mn":"0"},{"mi":"M","mn":"1"}],"mo":"-"}}}],"mo":[",","\u2062",",",",","\u2062",","],"mi":["\u2026","\u2026"],"mstyle":[{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]}},"mi":"T"}}}}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"\u2062","mi":"a"}}}]}}}},"br":[{},{},{}],"in-line-formulae":[{},{},{},{}],"i":[{"o":"h"},"=[h","M","h","h","h","h","M","z","k","y","k","n","k","k="],"sup":"T","sub":["1","1","c"]},"Referring to , the complex valued signal z(k+K) is inputted to the estimation unit . The complex valued signal z(k+K) is inputted to the feed forward shift register  of length Kproviding the delayed versions  z(k+K\u22121), . . . , z(k) of the input z(k+K) to the scalar to vector converter  that provides the forward state vector  x(k)=[z(k+K)z(k+K\u22121) . . . z(k)]at the output of the scalar to vector converter . Referring to , the forward state vector x(k) is inputted to the N vector inner product operators a, b, . . . , N. Throughout the description of the invention, the notations **a, b, . . . , N and **1, 2, . . . , N for any integer ** are equivalent and both refer to the enumeration between 1 and N. The other inputs of the N vector inner product operators  are provided with the N equalizer forward weight vectors  w(k), w(k), . . . , w(k). Referring to , the N equalizer forward weight vectors  a, b, . . . , N are provided by the N adaptive algorithm blocks a, b, . . . , N respectively. Referring to , the outputs a, b, . . . , N y(k), y(k), . . . , y(k) are inputted to the adders a, b, . . . , N respectively. The other inputs of the adders a, b, . . . , N are provided with the feedback signals  y(k), y(k), . . . , y(k) respectively.","Referring to , the outputs a, b, . . . , N s(k), s(k), . . . , s(k) of the adders  denoting the N filtered estimates of the discrete-time channel input symbol a(k) are inputted to the DSP unit block . The DSP unit  is also inputted with the \u03b1 parameters a, b, . . . , N \u03b1(k), \u03b1(k), . . . , \u03b1(k) made available from the normalizer gain estimator . The DSP unit processes the N filtered estimates  of the symbol a(k) and the N \u03b1 parameter estimates  and provides the joint estimate  \u00e2(k) of the symbol at the output of the DSP unit. Referring to , the normalizer gain estimator  is inputted with the equalizer forward weight vectors a, b, . . . , N provided by the adaptive algorithm blocks a, b, . . . , N.","Referring to , the joint estimate  \u00e2(k) is inputted to the feedback shift register  that provides the Kdelayed versions  of the joint estimate a(k) given by \u00e2(k\u22121), \u00e2(k\u22122), . . . , \u00e2(k\u2212K) at the output of the feedback shift register. The delayed versions  \u00e2(k\u22121), \u00e2(k\u22122), . . . , \u00e2(k\u2212K) are inputted to the scalar to vector converter  that provides the feedback state vector x(k)=[\u00e2(k\u22121) \u00e2(k\u22122) . . . \u00e2(k\u2212K)]to the N vector inner product operators a, b, . . . , N. The other inputs of the N vector inner product operators  are provided with the N equalizer feedback weight vectors  w(k), w(k), . . . , w(k). Referring to FIG. , the N equalizer feedback weight vectors  a, b, . . . , N are provided by the N adaptive algorithm blocks a, b, . . . , N respectively.","In some embodiments of the invention, none of the N equalizer adaptive algorithms may be of the decision feedback type and thus Kis set equal to zero. In such embodiments, the feed forward shift register  is of length (K+K) providing the delayed versions  z(k+K\u22121), . . . , z(k), . . . , z(k\u2212K) of the input z(k+K) to the scalar to vector converter .","Referring to , the outputs a, b, . . . , N y(k), y(k), . . . , y(k) are inputted to the adders a, b, N respectively. The signals a, b, . . . , N y(k), y(k) are to compensate for any inter symbol interference contribution due to the past symbols wherein the y(k), y(k), . . . , y(k) inputs to the adders  compensate for the inter symbol interference contribution due to the future symbols.","Referring to , the N filtered estimates of the symbol a(k) given by s(k), s(k), . . . , s(k) at the outputs of the adders  are inputted to the adders  a, b, . . . , N respectively. The other inputs of the adders  a, b, . . . , N are provided with the joint estimate of the symbol \u00e2(k). The adders a, b, . . . , N compare the filtered estimates s(k), s(k), . . . , s(k) with the joint estimate of the symbol \u00e2(k) providing the error signals e(k), e(k), . . . , e(k) to the N adaptive algorithm blocks a, b, . . . , N respectively. The adaptive algorithms adjust their estimates of the equalizer forward and feedback weight vectors so as to adaptively minimize some appropriate measures of the error signals e(k), e(k), . . . , e(k), such as the mean squared error, wherein different adaptive algorithm may use different such measures. Referring to , the N adaptive algorithm blocks a, b, . . . , N are inputted with the feed forward state vector x(k) and the feedback state vector x(k) for the adaptation of the equalizer weight vectors.","Referring to , the N adaptive algorithms a, b, . . . , N in various embodiments of the invention, may be selected from the various linear or nonlinear adaptive algorithms such as the LMS algorithm, the recursive least squares (RLS) algorithm, or the quantizes state algorithm with \u00e2(k) as the reference input, may be one of the blind mode algorithms such as the Sato or the Goddard algorithm or any other linear or nonlinear adaptive algorithm such as the one based on the neural networks. In various embodiments of the invention, some of the N adaptive algorithms may be same but with different algorithm parameters and possibly with different initial estimates for the equalizer weight vectors. Use of different adaptive algorithms in obtaining the joint estimate of the symbol a(k) may result in inheriting distinct advantages of the various adaptive algorithms, for example, some of the algorithms have faster convergence speed while the others may be more robust against modeling inaccuracies while some may be advantageous in terms of possibility of diverging to some spurious weight vectors.","Taking into account the gain introduced by the parameter \u03b1(k), the LMS adaptive algorithm is given by\n\n(1)=()+\u03bc()()(()\u2212())*;()=();0,1, . . . \u2003\u2003(2a)\n\n(1)=\u03b1()(1)\u2003\u2003(2b)\n\nIn (2a, b) \u00e2(k) is the joint symbol estimate provided by the DSP unit , \u03bc(k) may be an appropriately selected sufficiently small positive scalar constant to achieve convergence or may be a decreasing positive function of k, * denotes complex conjugate operation and the equalizer state vector x(k) and the equalizer weight vector w(k) of dimension K=(K+K+1) given by\n\n()=[()()]()=[()()]\u2003\u2003(3)\n\nIn (3) H denotes the Hermitian transpose and in (2) the initial estimate for the vector w(k) at k=0 may be selected equal to [0 0 . . . 0 1 0 . . . 0]with the only nonzero element in the (K+1)position equal to 1 and with \u03b1(0) selected equal to 1.\n","In various embodiments of the invention, one or more of the adaptive algorithms  may be the RLS algorithm given by\n\n (1)= ()+\u03bc()(()\u2212())*;()=();\u2003\u2003(4a)\n\n()=\u03bb(1)\u2212(1)((1)+\u03bb)(1)];1,2, . . . \u2003\u2003(4b)\n\n(1)=\u03b1()(1)\u2003\u2003(4c)\n","In (4b) \u00e2(k) is the joint symbol estimate provided by the DSP unit , \u03bb with 0<x\u22661 is the exponential weighting coefficient that determines the effective averaging period in the evaluation of R(k) that may be initialized at time k=0 by a diagonal matrix \u03b5Ifor some small positive scalar \u03b5with Idenoting the (K\u00d7K) identity matrix. Use of the RLS algorithm as one of the N algorithms  in the system of  may result in a faster convergence of the multiple algorithm blind mode equalizer. In various embodiments of the invention that involve use of the RLS algorithms in more than one of the algorithm blocks a, b, . . . , N, the different versions of the RLS algorithm may have different initial conditions for w(k) at k=0 and possibly use different values of \u03bb.","In various other embodiments of the invention one of the adaptive algorithms  may be one of the quantized state algorithms such as the QS1 algorithm given by",{"@attributes":{"id":"p-0041","num":"0040"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":{"mrow":[{"msub":{"mi":["w","iu"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"k","mo":"+","mn":"1"}}},{"mrow":[{"msub":{"mi":["w","iu"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mrow":[{"mi":"\u03bc","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mrow":[{"msubsup":{"mi":["P","I","q"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mo":["[","]"],"mrow":{"mrow":[{"msup":{"mi":["x","q"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mfrac":{"mrow":[{"mrow":[{"msup":{"mi":["x","qH"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mi":"x","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}}],"mo":"\u2062"},{"mrow":[{"msup":{"mi":["x","q"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"mi":"x","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}}],"mo":"\u2062"}]},"mo":"\u2062","mrow":{"mi":"x","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}}}],"mo":"+"}}],"mo":"\u2061"}],"mo":["\u2062","\u00d7"],"msup":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mover":{"mi":"a","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"msub":{"mi":["s","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}}],"mo":"-"}},"mo":"*"}}],"mo":"+"}],"mo":"="},"mo":";"},{"mrow":[{"msub":{"mi":["s","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}},{"msubsup":{"mi":["w","iu","H"]},"mo":"\u2062","mrow":{"mi":"x","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"k"}}}],"mo":"="}],"mo":["\u2062","\u2062","\u2062"],"mstyle":[{"mtext":{}},{"mspace":{"@attributes":{"width":"4.4em","height":"4.4ex"}}}]}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"5","mo":"\u2062","mi":"a"}}}]}}}},"br":[{},{}],"in-line-formulae":[{},{},{},{}],"sup":["q","q","q","H ","qH ","\u22121","q","q","\u22121"],"i":["w","k+","k","w","k+","P","k","P","k"],"sub":["i","i","iu","I"]},"In (5b, c) the matrix P(k) may be updated directly without requiring the matrix inversion with the application of the matrix inversion lemma to the update in (5b) and P(k) at k=0 may be initialized by a diagonal matrix \u03b5Ifor some small positive scalar \u03b5with Idenoting the (K\u00d7K) identity matrix. In (5) the vector x(k) is obtained by replacing both the real and imaginary components of the various elements of the vector x(k) with their quantized versions. The icomponent of x(k) is given by (6).\n\n()=((()))+((()));=\u221a{square root over (\u22121)}=1,2\u2003\u2003(6)\n\nIn (6) g(x) for x real is the threshold function defined in (7), and Re(z) and Im(z) denote the real and imaginary components of z for any complex variable z.\n",{"@attributes":{"id":"p-0043","num":"0042"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["g","T"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mo":"{","mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mo":"+","mn":"1"},{"mi":"x","mo":">","msub":{"mi":["v","th"]}}],"mo":";"}}},{"mtd":{"mrow":{"mrow":[{"mo":"-","mn":"1"},{"mi":"x","mo":"<","mrow":{"mo":"-","msub":{"mi":["v","th"]}}}],"mo":";"}}},{"mtd":{"mrow":{"mn":"0","mo":";","mrow":{"mrow":{"mo":["\uf603","\uf604"],"mi":"x"},"mo":"<","msub":{"mi":["v","th"]}}}}}]}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"7"}}]}}}}},"In (7) vis some positive threshold value that may be set equal to 0 in which case the function g(x) reduces to the signum function. The function g(x) may be modified such that for |x|<v, the function g(x) is equal to \u03b5 sgn(x) for some small positive scalar \u03b5 and with the signum function sgn(x) given by (10).","In various embodiments of the invention one of the adaptive algorithms  may be the Sato's algorithm given by\n\n(1)=()+\u03bc()()[\u03b3(())\u2212()]*;()=();0,1, . . . \u2003\u2003(8a)\n\n(1)=\u03b1()(1)\u2003\u2003(8b)\n\nIn (8a) \u03b3is given by\n\n\u03b3()|()|]}\u2003\u2003(8c)\n\nand sgn(s(k)) in (8a) is obtained by replacing both the real and imaginary components of s(k) with 1 bit quantized versions with\n\n()=(())+(());=\u221a{square root over (\u22121)}\u2003\u2003(9)\n\nIn (9) Re(z) and Im(z) denote the real and imaginary components of z for any complex variable z and sgn(x) for x real is the signum function defined in (10).\n",{"@attributes":{"id":"p-0046","num":"0045"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"sgn","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mo":"{","mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mo":"+","mn":"1"},{"mi":"x","mo":">","mn":"0"}],"mo":";"}}},{"mtd":{"mrow":{"mrow":[{"mo":"-","mn":"1"},{"mi":"x","mo":"\u2264","mn":"0"}],"mo":";"}}}]}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}}},"For the specific case of BPSK modulation wherein a(k) takes values +1 and \u22121 with probability 0.5, \u03b3 in (8c) is equal to 1 and the Sato's algorithm is same as the LMS algorithm in the decision directed mode.","In the various embodiments of the invention one of the adaptive algorithms  may be the Godard's algorithm given by\n\n(1)=()+\u03bc()()*()|()|[\u03b3()|];\u2003\u2003(11a)\n\n(1)=\u03b1()(1);()=();\u03b3()|()|]}\u2003\u2003(11b)\n\nIn (11) p is any positive integer wherein for the case of p=2 the algorithm in (11a) reduces to\n\n(1)=()+\u03bc()()*()[\u03b3()|];\u2003\u2003(12)\n","In case of Sato's and Goddard's algorithms in (8)-(12), the correction term in the weight update algorithm depends directly upon the filtered signal s(k) instead of the error term e(k)=(\u00e2(k)\u2212s(k)). In such cases the estimation unit  in  may be modified by feeding back the signal i s(k) to the adaptive algorithm i.","In some of the various embodiments of the invention one of the adaptive algorithms  may be a nonlinear algorithm wherein the estimate of the symbol s(k) is a nonlinear function of the state vector x(k) instead of the linear function given in the algorithms described by (4)-(12). For example, the estimate of the symbol s(k) may be obtained by neural network based implementation. For example, a superfast neural network based algorithm is taught in, \u201cSuperfast and Efficient Channel Equalizer Architecture Based on Neural Network,\u201d IEEE International Conference on Aerospace Engineering, Big Sky, Mont., March 2012, pp. 1-11, that is included in its entirety as part of this application. While the neural network based algorithm is very fast in convergence, it requires a training sequence. With one of the N algorithms  in  selected to be the neural network based algorithm with another one, for example, based on Sato's algorithm an overall very fast convergence may be achieved in the blind mode.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 1","FIG. 1"],"b":["90","100","100","30","45","95","185","60"],"sub":["if","i","i "]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 2A","FIG. 2A"],"b":["100","30","105","110","120","120","125","120","45"],"sub":["i ","if","if","n","n","n,i ","i"],"sup":["2 ","2","2","th "]},"Referring to , the iequalizer output i s(k) is inputted to the power estimator block  that provides the estimate of the total power P(k) in the signal s(k) at the output . The power estimate block  may estimate the power P(k) according to (13).\n\n()=\u03bb(1)+|()|1,2; . . . \u2003\u2003(13a)\n\n()=()(1\u2212\u03bb)\/(1\u2212\u03bb)\u2003\u2003(13b)\n\nIn (13), \u03bbwith 0<\u03bb<1 is the exponential weighting coefficient that determines the effective averaging period in the evaluation of the power P(k) wherein the initial value of P(0) may be set equal to 0.\n","Referring to , the iequalizer output noise power Pis subtracted from the total power estimate P(k) by the adder  providing the signal power estimate  Pto the input of the divider . The other input  of the divider  is provided with the average power Pof the symbol aat the discrete-time channel output with P=[E|a|] wherein E denotes the expected value operator. The divider block  divides the power Pby the estimate of the signal power Pat the iequalizer output and provides the result  (P\/P) to the square root block . The square root block provides the estimate of the parameter \u03b1at the output i. The parameter \u03b1is used by the DSP unit  to scale the signal s(k) such that the signal power at the output of the iequalizer is close to P=E[|a|] as would be the case when the equalizer has converged and thus speeds up the convergence of the multi algorithm equalizer of . In some embodiments of the invention, the parameter \u03b1, may not be updated after an initial convergence period.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 3","FIG. 3"],"b":["60","185","45","210","210","45","215","210","2","215"],"sub":["1","1","1","s ","1 ","1","2","N","p,1","2","N","s ","2","N","2","N","1","p,2","p,N"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 4","FIG. 4","FIG. 4","FIG. 4"],"b":["210","45","40","305","305","185","305","308","310","310","340","342","310","215","350","355"],"sub":["i","i","g,i","i","i","c,i","c,i","i","p,i ","i"],"sup":"th "},"The selection of the decision function \u0394( ) depends upon the probability distribution of the data symbols a=a+j a, with j=\u221a{square root over (\u22121)}, and with aand adenoting the real and imaginary components of a. For example, for the case of the discrete type of the probability distribution of the data symbols awith both the real and imaginary components aand aof ataking possible values from the finite sets \u03a3and \u03a3respectively and where the components aand aare statistically independent as is the case, for example, for the MQAM modulated signals, the decision function may be given by (14).\n\n()=()+()\u2003\u2003(14)\n\nIn (14) the functions \u0394( ) and \u0394( ) may be the slicer functions. For the specific case when both the sets \u03a3and \u03a3are equal to the set {\u00b11,\u00b13, . . . ,\u00b1(N\u22121)} Afor some positive constant Aand some integer N, the two slicer functions \u0394(x) and \u0394(x) with x real, are identical and are given by (15).\n\n()=()=(||)()\u2003\u2003(15)\n\nIn (15), sgn(x) is the signum function given by (10) and the function D(|x|) is given by\n\n(||)=1,22\u2003\u2003(16)\n\nIn (16), Vfor i=0, 1, . . . ,N\/2 are the threshold levels given by\n",{"@attributes":{"id":"p-0058","num":"0057"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":"V","msub":{"mi":["t","i"]}},"mo":"=","mrow":{"mo":"{","mtable":{"mtr":[{"mtd":{"mrow":{"mn":"0","mo":";","mrow":{"mi":"i","mo":"=","mn":"0"}}}},{"mtd":{"mrow":{"mrow":[{"mn":"2","mo":"\u2062","msub":{"mi":"iA","mn":"0"}},{"mn":"0","mo":["<","<"],"mi":"i","mrow":{"mi":"N","mo":"\/","mn":"2"}}],"mo":";"}}},{"mtd":{"mrow":{"mi":"\u221e","mo":";","mrow":{"mi":"i","mo":"=","mrow":{"mi":"N","mo":"\/","mn":"2"}}}}}]}}}},{"mrow":{"mo":["(",")"],"mn":"17"}}]}}}},"br":[{},{},{},{},{}],"sub":["k ","I,k ","Q,k","I,k","Q,k","i","i","i","i","i","p","i","p","i","r,j","t",{"sub2":"j\u2266\u03b8"},"i","t",{"sub2":"j+1"}],"sup":"2","in-line-formulae":[{},{},{},{}],"i":["D","\u00e2","j\u00e2","sgn","\u00e2","jsgn","\u00e2","k","D","k","k",";j=",", . . . ,S\u2212"],"figref":"FIG. 4","b":["355","365","382","382","385","220"]},"In (19) Ndenotes the order of symmetry of the signal constellation diagram of the symbol \u00e2(k) equal to the number of distinct phase rotations of the signal constellation diagram that leave the signal constellation unchanged and is equal to the number of phase ambiguities that may be introduced by the blind mode equalizer. In (19) \u03b8; j=0, 1, . . . , Nare the Nthreshold levels of the phase threshold device .","As an example of the threshold values in (19), the signal constellation diagram of the MQAM signal with a square grid constellation with the number of points in the signal constellation M equal to Nfor some integer N, has order of symmetry Nequal to 4 with the possible phase ambiguities equal to 0, \u03c0\/2, \u03c0, 3\u03c0\/2 as the rotation of the signal constellation diagram by any of the four values 0, \u03c0\/2, \u03c0, 3\u03c0\/2 leaves the signal constellation unchanged. The threshold levels for the MQAM signal are given by \u03b8=0, \u03b8=\u03c0\/2, \u03b8=\u03c0, \u03b8=3\u03c0\/2. The range of the phase given by \u03b8\u2266\u03b8(k)<\u03b8defines the isector of the signal constellation diagram equal to the iquadrant of the signal constellation diagram for i=0, 1, 2, 3. The output of the phase threshold device  is equal to one of the phase values \u03b8=\u03c0\/4, \u03b8=3\u03c0\/4, \u03b8=5\u03c0\/4, and \u03b83=7\u03c0\/4 depending upon the sector in which the input phase \u03b8(k) lies.","For the case of MPSK signal, wherein atakes possible values Aexp[j(m+0.5)2\u03c0\/M], j=; m=0, 1, . . . , (M\u22121) for some integer M that is normally taken equal to an integer power of 2. For the case of MPSK modulation, order of symmetry Nequal to M with the possible phase ambiguities equal to 0, 2\u03c0\/M, \u03c0, 4\u03c0\/M, . . . [2(M\u22121)\u03c0\/M] resulting in M sectors with the msector defined in terms of the phase \u03b8 by the interval 2\u03c0m\/M\u2266\u03b8<2\u03c0(m+1)\/M, m=0, 1, . . . , M\u22121. In various alternative embodiments of the invention, the number of sectors may be selected equal to 4 corresponding to the four quadrants of the signal space for any signal constellation. For the case of real symbols a(k) and real channel impulse response h(k), the number of sectors may be just equal to 2 corresponding to the sign of the signal  sand phase rotation is replaced by a sign inversion.","As the different adaptive algorithms  may converge with any of the S possible phase ambiguities, to achieve coherence among the N different algorithms and thereby speed up the convergence, the phase of the filtered signals s(k), . . . , s(k) are aligned to a common phase reference. The phase alignment may be achieved by first determining a reference \u03c6(k) among the N phase outputs \u03c6)(k), i=0, N and then aligning all the phase of s(k), i=0, 1, . . . , N by adjusting the phase of s(k) by the difference \u03c6(k)=(\u03c6(k)\u2212\u03c6(k)). The phase reference \u03c6(k), for example, may be selected on the basis of the estimate of the signal to interference plus noise power ratio in the detected signal \u00e2(k).","Referring to , the gain normalized and phase aligned signal  sis inputted to the power estimator  that provides the estimate of the total power  Ppresent in the signal sto the input of the divider . The power Pmay be estimated according to (13) with sreplaced by s. Referring to , the signals  sand the detected symbol \u00e2(k) are inputted to the adder  that provides the difference  equal to \u00e3(k)=(s(k)\u2212\u00e2(k)) to the power estimator .","After the convergence of the iequalizer the detected symbol \u00e2(k) is equal to the correct symbol with a possible phase ambiguity and is the equalization error \u00e3(k) comprised of the residual noise and intersymbol interference. Referring to , the equalization error \u00e3(k) is inputted to the power estimator  that provides the estimate of the residual noise and intersymbol interference power Pto the divider . Referring to , the power estimate  Pis inputted to the adder . The adder  provides the estimate of the signal power  P=(P\u2212P) to the divider . Referring to , the divider  divides the estimate of the signal power Pby the estimate of the residual noise and inter symbol interference power Pproviding the signal to residual noise plus interference power ratio  \u0393(k)=(P\/P) at the output of the divider .","Referring to , the N phase outputs \u03c6(k), \u03c6(k), . . . , \u03c6(k) at the outputs of the phase alignment subsystems  1, . . . , N are inputted to the reference phase generator . The reference phase generator  partitions the phase outputs \u03c6(k), \u03c6(k), . . . , \u03c6(k) into a number of Nsets such that the phase of all the terms in any one of the partitions are equal and equal to one of the reference phase. For example, for the case of MQAM signal with square grid constellation S is equal to 4 and the reference phase are equal to \u03b8=\u03c0\/4, \u03b8=3\u03c0\/4, \u03b8=5\u03c0\/4, and \u03b8=7\u03c0\/4. Referring to , the set Sof the indices of the terms in the partition with the maximum number of phase terms, wherein the indices take values in the range of 1 to N, and the number of terms min Sis inputted to the combiner weights generator block . For the case wherein, more than one partitions have the number of terms equal to the maximum value m, the partition containing the term with the highest SNR \u0393is selected to break the tie. Referring to , the SNR \u0393is made available to the reference phase generator  by the phase alignment subsystem  for i equal to a through N, not shown in the Figure. Referring to , the reference phase is set equal to the value of the phase \u03c6(k), i=1, 2, . . . , N in the partition thus selected.","Referring to , the reference phase \u03c6(k) generated by the reference phase generator  is inputted to the adders  a, b, . . . , N. Referring to , the phase \u03c6(k) at the output i of the phase alignment subsystem i is inputted to the adder i for i equal to a through N. The adder i subtracts the phase \u03c6(k) from the reference phase and feeds back the difference i \u03c6(k) to the input of the phase alignment subsystem i.","Referring to , the difference phase i \u03c6(k) is accumulated by the accumulator comprised of the adder  and the delay  providing the accumulated phase  \u03c6(k). The delayed version  \u03c6(k\u22121) of the phase  \u03c6(k) is inputted to the complex exponential operation block . Referring to , the output  of the complex exponential operation block  given by exp [j\u03c6(k\u22121)], j=\u221a{square root over (\u22121)} is inputted to the multiplier  that introduces a phase rotation of \u03c6(k\u22121) in the phase of the other input  s(k) of the multiplier . Referring to , the phase aligned signal  sis made available to the decision device .","Referring to , the difference phase i the difference phase i \u03c6(k) is inputted to the exponential function block i that provides the output exp[j \u03c6(k)], j=\u221a{square root over (\u22121)} to the multiplier i for i equal to 1 through N. Referring to , the other input of the multiplier i is connected to the gain normalized and phase aligned signal soutput i made available by the phase alignment subsystem i. Referring to , the multiplier i adjusts the phase of the signal sby the difference phase i \u03c6(k) and provides the phase adjusted signal sat the output  i to the input of the multiplier i for i equal to 1 through N.","Referring to , the outputs of the multipliers i, i=1, 2, . . . , N are inputted to the adder . The adder  provides the weighted sum s(k) of the phase adjusted signals s, . . . , Sat the output . The multipliers i, i=1, 2, . . . , N and the adder  constitute the weighted combiner for the phase adjusted signals s(k).","Referring to , the SNR \u0393is made available to the combiner weight generator  by the phase alignment subsystem , for i equal to a through N. On the basis of the SNRs \u0393equal to a through N, and the set Sand the number of elements min the set Smade available by the reference phase generator , the combiner weight generator  generates the weights \u03c8, \u03c8, . . . , \u03c8that may be in general complex valued. The complex conjugates of the combiner weights \u03c8, . . . , \u03c8are made available to the multipliers i, i=1, 2, . . . , N by the combiner weight generator .","In various embodiments of the invention, the combiner weights may be based on the maximal ratio combining technique wherein the combiner weights are given by (20).",{"@attributes":{"id":"p-0072","num":"0071"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mi":["\u03c8","i"]},"mo":"=","mrow":{"msub":{"mi":["\u0393","i"]},"mo":"\/","mi":"\u0393"}},{"mi":"\u0393","mo":"=","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"N"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u0393","i"]}}},{"mi":"i","mo":"=","mn":"1"}],"mo":[";",";"]},"mo":[",",",","\u2062",","],"mn":"2","mi":["\u2026","N"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"20"}}]}}}}},"In various embodiments of the invention, all of the weights \u03c8may be set equal to 1\/N corresponding to the equal gain diversity combining technique. In yet other embodiments of the invention, the weight corresponding to the highest SNR \u0393may be set equal to 1 with all of the other (N\u22121) weights set equal to 0 corresponding to the switched diversity combining technique.","In some of the embodiments of the invention, nonzero weights may be assigned only to the signals with their indices in the set Swith the signals with their indices not in the set Sassigned zero weights. The weights with their indices within the set Smay be given by (21).",{"@attributes":{"id":"p-0075","num":"0074"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["\u03c8","i"]},"mo":"=","mrow":{"msub":[{"mi":["\u0393","i"]},{"mi":["\u0393","s"]}],"mo":"\/"}},{"msub":{"mi":["\u0393","s"]},"mo":"=","mrow":{"mrow":{"munder":{"mo":"\u2211","mrow":{"mi":"i","mo":["\u2208","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["S","p"]}}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["\u0393","i"]},"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["for","i"]}},"mo":"\u2208","msub":{"mi":["S","p"]}}},{"msub":{"mi":["\u03c8","i"]},"mo":"=","mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["for","i"]},"mo":"\u2209","mi":"Sp"}}],"mo":[";",";"]}},{"mrow":{"mo":["(",")"],"mn":"21"}}]}}}}},"In alternative embodiments of the invention, all of the weights with their indices in the set Smay be set equal to 1\/mwherein mis the number of indices in the set S, with the weights with their indices not in the set Sassigned the value 0. In yet other embodiments of the invention, the weight with its index in the set Scorresponding to the highest SNR may be set equal to 1 with all of the (N\u22121) weights set equal to 0.","In various other embodiments of the invention, the combiner weights may be based on one of the adaptive algorithm selected from the set of RLS, LMS, QS, Sato's and Goddard's algorithms. For example, using the Sato's algorithm the combiner weight vector \u03c8=[\u03c8\u03c8, . . . , \u03c8]may be updated by (22).\n\n\u03a8(1)=\u03c8()+\u03bc()\u03be()[\u03b3(())\u2212()]*;()=\u03c8()\u03be()\u2003\u2003(22a)\n\n\u03be()=[()() . . . ()]0,1, . . . \u2003\u2003(22b)\n\n\u03b3()|()|]}\u2003\u2003(22c)\n","In (22a) \u03bc(k) may be an appropriately selected sufficiently small positive scalar constant to achieve convergence or may be a decreasing positive function of k.","In various embodiments of the invention, the data symbols a(k) are transmitted over Ndiversity channels with impulse responses h(k), i=1, 2, . . . , Nand the receiver jointly detects the data symbol a(k) on the basis of the Nsignals received over the Ndiversity channels. The impulse responses may be slowly varying functions of time to which the receiver adapts. In addition to the wireless communication, such situations arise in many other fields, for example, in Radar systems.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIG. 1","FIG. 5","FIG. 1","FIG. 5"],"sub":["c","c ","1","1","1","1 ","c ","c ","jf","j","c ","a "],"b":["510","2","510","95","2","95","95","95"],"sup":["1","2","N ","i","i "]},"Referring to , the estimation unit i generates the filtered signals i(1, 2, . . . , N) s, s, . . . , swherein Nis the number of adaptive algorithms in the estimation unit i. In some embodiments of the invention, the number of adaptive algorithms in the various estimation units may be different. Referring to , the N=NNfiltered signals s, s, . . . , s, . . . , s, s, . . . , sare inputted to the collator  that collates the N filtered signals and makes the collated filtered signals a though N s(k), . . . , s(k) available to the normalizing gain estimator block .","Referring to , the estimation unit  i makes available the Nequalizer feed forward weight vectors w, w, wfor i=1, 2, . . . , Nto the collator . The collator  collates the N equalizer feed forward weight vectors and provides the collated equalizer feed forward weight vectors  a through N w(k), . . . , w(k) to the normalizing gain estimator block .  shows the block diagram of the normalizing gain estimator that provides the N parameter \u03b1 estimates \u03b1, . . . , \u03b1to the DSP unit .","Referring to , the collated filtered signals a though N s(k), . . . , s(k) are made available to the DSP unit. On the basis of the N filtered signals s(k), . . . , s(k), the DSP unit makes a joint estimate of the data symbol \u00e2(k). Referring to , the joint estimate of the data symbol \u00e2(k) is fed back to the bank of the estimation units  for providing the error signals for the update of the N adaptive algorithms.","Referring to , the joint estimate of the data symbol  \u00e2(k) is inputted to the feedback shift register  of length Kfor some integer K. The feedback shift register makes available the Kdelayed versions  \u00e2(k\u22121), . . . , \u00e2(k\u2212K) of the joint estimate of the data symbol  \u00e2(k) to the scalar to vector converter . The scalar to vector converter  provides the equalizer feedback state vector x(k)=[\u00e2(k\u22121)\u00e2(k\u22122) . . . \u00e2(k\u2212K)]to the bank of the estimation units  for cancelling the inter symbol interference due to the past Ksymbols. In various alternative embodiments of the invention, none of the N equalizer adaptive algorithms may be of the decision feedback type and thus Kis zero.","In various embodiments of the invention, the number and type of the adaptive algorithms in the various estimation units  may be different or use the same algorithm type but with different algorithm parameters such as the initial values of the equalizer weight vectors. In one example of the various embodiments, the number of diversity channels Nmay be 3 with Nequal to 1 for all three estimation units . The three estimation units in the example case may use the Goddard's algorithm, the Sato's algorithm and the RLS algorithm respectively.","Various modifications and other embodiments of the invention applicable to various problems in Engineering and other fields will be readily apparent to those skilled in the art in the field of invention. The multiple algorithm architectures of the invention can be readily modified and applied to various fields where such an architecture is applicable. Examples of such fields in addition to various communication systems include Radars, sonar, digital audio systems, seismology, astronomy, and so on.","It is to be understood that the figures and descriptions of the present invention have been simplified to illustrate elements that are relevant for a clear understanding of the present invention, while eliminating other elements, for purposes of clarity. Those of ordinary skill in the art will recognize that these and other elements may be desirable. However, because such elements are well known in the art and because they do not facilitate a better understanding of the present invention, a discussion of such elements is not provided herein.","In general, it will be apparent to one of ordinary skill in the art that at least some of the embodiments described herein, including, for example, all of the modules of , may be implemented in many different embodiments of software, firmware, and\/or hardware, for example, based on Field Programmable Gate Array (FPGA) chips or implemented in Application Specific Integrated Circuits (ASICS). The software and firmware code may be executed by a computer or computing device comprising a processor (e.g., a DSP or any other similar processing circuit) including, for example, the computing device  described below. The processor may be in communication with memory or another computer readable medium comprising the software code. The software code or specialized control hardware that may be used to implement embodiments is not limiting. For example, embodiments described herein may be implemented in computer software using any suitable computer software language type, using, for example, conventional or object-oriented techniques. Such software may be stored on any type of suitable computer-readable medium or media, such as, for example, a magnetic or optical storage medium. According to various embodiments, the software may be firmware stored at an EEPROM and\/or other non-volatile memory associated a DSP or other similar processing circuit. The operation and behavior of the embodiments may be described without specific reference to specific software code or specialized hardware components. The absence of such specific references is feasible, because it is clearly understood that artisans of ordinary skill would be able to design software and control hardware to implement the embodiments based on the present description with no more than reasonable effort and without undue experimentation.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 6","b":["600","600"]},"In the example of , the computing device  comprises one or more processor circuits or processing units , one or more memory circuits and\/or storage circuit component(s)  and one or more input\/output (I\/O) circuit devices . Additionally, the computing device  comprises a bus  that allows the various circuit components and devices to communicate with one another. The bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. The bus  may comprise wired and\/or wireless buses.","The processing unit  may be responsible for executing various software programs such as system programs, applications programs, and\/or program modules\/blocks to provide computing and processing operations for the computing device . The processing unit  may be responsible for performing various voice and data communications operations for the computing device  such as transmitting and receiving voice and data information over one or more wired or wireless communications channels. Although the processing unit  of the computing device  is shown in the context of a single processor architecture, it may be appreciated that the computing device  may use any suitable processor architecture and\/or any suitable number of processors in accordance with the described embodiments. In one embodiment, the processing unit  may be implemented using a single integrated processor.","The processing unit  may be implemented as a host central processing unit (CPU) using any suitable processor circuit or logic device (circuit), such as a as a general purpose processor. The processing unit  also may be implemented as a chip multiprocessor (CMP), dedicated processor, embedded processor, media processor, input\/output (I\/O) processor, co-processor, microprocessor, controller, microcontroller, application specific integrated circuit (ASIC), field programmable gate array (FPGA), programmable logic device (PLD), or other processing device in accordance with the described embodiments.","As shown, the processing unit  may be coupled to the memory and\/or storage component(s)  through the bus . The bus  may comprise any suitable interface and\/or bus architecture for allowing the processing unit  to access the memory and\/or storage component(s) . Although the memory and\/or storage component(s)  may be shown as being separate from the processing unit  for purposes of illustration, it is worthy to note that in various embodiments some portion or the entire memory and\/or storage component(s)  may be included on the same integrated circuit as the processing unit . Alternatively, some portion or the entire memory and\/or storage component(s)  may be disposed on an integrated circuit or other medium (e.g., hard disk drive) external to the integrated circuit of the processing unit . In various embodiments, the computing device  may comprise an expansion slot to support a multimedia and\/or memory card, for example.","The memory and\/or storage component(s)  represent one or more computer-readable media. The memory and\/or storage component(s)  may be implemented using any computer-readable media capable of storing data such as volatile or non-volatile memory, removable or non-removable memory, erasable or non-erasable memory, writeable or re-writeable memory, and so forth. The memory and\/or storage component(s)  may comprise volatile media (e.g., random access memory (RAM)) and\/or nonvolatile media (e.g., read only memory (ROM), Flash memory, optical disks, magnetic disks and the like). The memory and\/or storage component(s)  may comprise fixed media (e.g., RAM, ROM, a fixed hard drive, etc.) as well as removable media (e.g., a Flash memory drive, a removable hard drive, an optical disk). Examples of computer-readable storage media may include, without limitation, RAM, dynamic RAM (DRAM), Double-Data-Rate DRAM (DDRAM), synchronous DRAM (SDRAM), static RAM (SRAM), read-only memory (ROM), programmable ROM (PROM), erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), flash memory (e.g., NOR or NAND flash memory), content addressable memory (CAM), polymer memory (e.g., ferroelectric polymer memory), phase-change memory, ovonic memory, ferroelectric memory, silicon-oxide-nitride-oxide-silicon (SONOS) memory, magnetic or optical cards, or any other type of media suitable for storing information.","The one or more I\/O devices  allow a user to enter commands and information to the computing device , and also allow information to be presented to the user and\/or other components or devices. Examples of input devices include data ports, analog to digital converters (ADCs), digital to analog converters (DACs), a keyboard, a cursor control device (e.g., a mouse), a microphone, a scanner and the like. Examples of output devices include data ports, ADC's, DAC's, a display device (e.g., a monitor or projector, speakers, a printer, a network card). The computing device  may comprise an alphanumeric keypad coupled to the processing unit . The keypad may comprise, for example, a QWERTY key layout and an integrated number dial pad. The computing device  may comprise a display coupled to the processing unit . The display may comprise any suitable visual interface for displaying content to a user of the computing device . In one embodiment, for example, the display may be implemented by a liquid crystal display (LCD) such as a touch-sensitive color (e.g., 76-bit color) thin-film transistor (TFT) LCD screen. The touch-sensitive LCD may be used with a stylus and\/or a handwriting recognizer program.","The processing unit  may be arranged to provide processing or computing resources to the computing device . For example, the processing unit  may be responsible for executing various software programs including system programs such as operating system (OS) and application programs. System programs generally may assist in the running of the computing device  and may be directly responsible for controlling, integrating, and managing the individual hardware components of the computer system. The OS may be implemented, for example, as a Microsoft\u00ae Windows OS, Symbian OS\u2122, Embedix OS, Linux OS, Binary Run-time Environment for Wireless (BREW) OS, JavaOS, or other suitable OS in accordance with the described embodiments. The computing device  may comprise other system programs such as device drivers, programming tools, utility programs, software libraries, application programming interfaces (APIs), and so forth.","In various embodiments disclosed herein, a single component may be replaced by multiple components and multiple components may be replaced by a single component to perform a given function or functions. Except where such substitution would not be operative, such substitution is within the intended scope of the embodiments.","While various embodiments have been described herein, it should be apparent that various modifications, alterations, and adaptations to those embodiments may occur to persons skilled in the art with attainment of at least some of the advantages. The disclosed embodiments are therefore intended to include all such modifications, alterations, and adaptations without departing from the scope of the embodiments as set forth herein.","Embodiments may be provided as a computer program product including a non-transitory machine-readable storage medium having stored thereon instructions (in compressed or uncompressed form) that may be used to program a computer (or other electronic device) to perform processes or methods described herein. The machine-readable storage medium may include, but is not limited to, hard drives, floppy diskettes, optical disks, CD-ROMs, DVDs, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, flash memory, magnetic or optical cards, solid-state memory devices, or other types of media\/machine-readable medium suitable for storing electronic instructions. Further, embodiments may also be provided as a computer program product including a transitory machine-readable signal (in compressed or uncompressed form). Examples of machine-readable signals, whether modulated using a carrier or not include, but are not limited to, signals that a computer system or machine hosting or running a computer program can be configured to access, including signals downloaded through the Internet or other networks. For example, the distribution of software may be an Internet download."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the present invention are described here by way of example in conjunction with the following figures, wherein",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
