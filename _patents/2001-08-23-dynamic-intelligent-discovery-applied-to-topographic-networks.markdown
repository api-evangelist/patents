---
title: Dynamic intelligent discovery applied to topographic networks
abstract: A method, system, and computer program product for discovering status of a network topology. A network management framework provides the ability to specify a method for determining how to gather status of a data processing system. A data gathering technique (DGT) may be dynamically adjusted to discovery or monitoring of devices within the data processing system. Different data gathering techniques may be employed in an effort to discover or monitor the devices. In addition, results of previous network data gathering may be stored for later use. These stored results may used to develop an order of relative capabilities for a managed device or devices as compared to other device or devices in the same network. Discovery and monitoring information may be obtained about one device or N devices within the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07139823&OS=07139823&RS=07139823
owner: International Business Machines Corporation
number: 07139823
owner_city: Armonk
owner_country: US
publication_date: 20010823
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to an improved data processing system and, in particular, to a method and system for multiple computer or process coordinating. Still more particularly, the present invention provides a method and system for network management.","2. Description of Related Art","Technology expenditures have become a significant portion of operating costs for most enterprises, and businesses are constantly seeking ways to reduce information technology (IT) costs. This has given rise to an increasing number of outsourcing service providers, each promising, often contractually, to deliver reliable service while offloading the costly burdens of staffing, procuring, and maintaining an IT organization. While most service providers started as network pipe providers, they are moving into server outsourcing, application hosting, and desktop management. For those enterprises that do not outsource, they are demanding more accountability from their IT organizations as well as demanding that IT is integrated into their business goals. In both cases, \u201cservice level agreements\u201d have been employed to contractually guarantee service delivery between an IT organization and its customers. As a result, IT teams now require management solutions that focus on and support \u201cbusiness processes\u201d and \u201cservice delivery\u201d rather than just disk space monitoring and network pings.","Distributed data processing systems with thousands of nodes are known in the prior art. The nodes can be geographically dispersed, and the overall computing environment can be managed in a distributed manner. The managed environment can be logically separated into a series of loosely connected managed regions, each with its management server for managing local resources. The management servers can coordinate activities across the enterprise and can permit remote site management and operation. Local resources within one region can be exported for the use of other regions.","However, currently network status gathering relies on discovery commands such as a \u201cping\u201d or a SNMP. Such a procedure is inefficient on systems where the \u201cping\u201d is invalid or in networks where most systems are SNMP compliant (where no \u201cping\u201d is necessary). At present there is no mechanism for allowing administrators to choose a method for determining how to gather a status of the network. At present, administrators cannot choose to perform SNMP commands first, \u201cping\u201d commands first, SNMP commands only, or allow for dynamic solutions to be generated. Furthermore, dynamic solutions cannot be created by keeping track of how many machines are SNMP compliant and how many \u201cping\u201d commands fail, being able to reverse the order of gathering the status of the network, or excluding one command or the other.","Therefore, it would be advantageous to provide a method and system that dynamically gathers status of a network based on specified status gathering parameters so as to eliminate impact on system performance that is caused by invalid or unnecessary network monitoring operations.","The present invention provides a method, system, and computer program product for discovering status of a network topology. A network management framework provides the ability to specify a method for determining how to gather status of a data processing system. A data gathering technique (DGT) may be dynamically adjusted to discovery or monitoring of devices within the data processing system. Different data gathering techniques may be employed in an effort to discover or monitor the devices. In addition, results of previous network data gathering may be stored for later use. These stored results may be used to develop an order of relative capabilities for a managed device or devices as compared to other device or devices in the same network. Discovery and monitoring information may be obtained about one device or N devices within the network.","The present invention provides a methodology for managing a network. Discovery and monitoring information may be obtained about one device or N devices within the network. The present invention provides a mechanism by which alternative data gathering methods for discovery and monitoring may be used in different circumstances as configured by, for example, a user or system administrator or programmatically determined based on a best method to a user at runtime.","The present invention dynamically adjusts a data gathering technique (DGT) for discovery or monitoring of devices within the data processing system based on, for example, network characteristics, a device's relative abilities to other devices in the data processing system, abilities to support different data gathering techniques, and the like. The network characteristics may be based on link speeds or other devices in the data processing system. A link speed is speed of which data is sent between two endpoints. A device's relative abilities to other devices in the network may be based on ordering capabilities using a speed of the device or the number of devices in the network, which may yield information about each device and physical characteristics of each device.","The ability to support different data gathering techniques may be performed by a Simple Network Management Protocol (SNMP), an Internet Protocol Packet Internet Groper (IP ping), a point-to-point protocol over ethernet (PPPoE), dynamic host configuration protocol (DHCP) or any other client which broadcast to a server requesting an IP address. SNMP is a monitoring and control protocol in which data is passed from SNMP agents, which are hardware and\/or software processes reporting activity for each device connected to the network. This activity is reported to a management interface which oversees the network.","SNMP agents return information contained in a Management Information Base (MIB), which may be a data structure that defines what information is obtainable from the device and how the device may be controlled. IP ping is an Internet utility that may be used to determine whether a particular IP address is online. IP ping is used to test and debug a network by sending out a packet and waiting for a response.","In addition, results of previous network data gathering may be stored for later use. These results may used to develop an order of relative capabilities for the managed device or devices as compared to other device or devices in the same network. These results may also be used to supply a number of a device in which the DGT is capable of supplying information about. A multiple device DGT, such as a SNMP address resolution protocol (ARP) table, queries and yields information about a group of devices. Furthermore, ordering data may be provided to discovery scanning engines as well as monitoring engines for use in determining which DGT to use as first, second, and so on.","Discovery scanning engines scan the network and create a representation of the network. Depending upon the state of discovery in a network or the number of devices yet to be polled in the network, the DGT may be altered. After determining a physical topology of the network, if the number of devices in the network of interest is small, then the DGT may be altered to a different type. Obtaining information about a group of devices takes more time than getting information from a single device. However, receiving information about a single device congests the network because it requires more queries in obtaining the information. Therefore, it is desirable to be able to dynamically alter the DGT to perform discovery of the network in a most optimal manner.","In a preferred embodiment, metrics are stored to determine an efficient process for discovering or monitoring a network. Examples of metrics which may be stored are, for example, results of a previous monitoring, information about types of devices connected to the network after discovery of the network, and topology of the network. Results of previous monitoring may include, for example, number of times a device connected to the network was found dead or alive, time taken to perform a SNMP or \u201cping\u201d query of a device, number of devices a SNMP query supplied information about, number of queries made to a specific device, and likelihood of discovering another device. Information about types of devices connected to the network may include, for example, whether the device is SNMP capable, whether the device is \u201cping\u201d capable, whether the device is SNMP capable and is a router device, and whether the device is SNMP capable and is a firewall device. The topology of the network may include, for example, a determination whether devices that are heavily burdened by data gathering require limiting the number of queries on a device and which resources within the network utilize these resources at a single time.","With reference now to , a diagram depicting a known logical configuration of software and hardware resources is provided. In this example, the software is organized in an object-oriented system. Application object , device driver object , and operating system object  communicate across network  with other objects and with hardware resources \u2013. An object is an application programming interface which may be performed using an endpoint.","In general, objects \u2013 require some type of processing, input\/output, or storage capability from hardware resources \u2013. Objects \u2013 may execute on the same device to which the hardware resource is connected, or objects \u2013 may be physically dispersed throughout a distributed computing environment. Objects \u2013 request access to the hardware resource in a variety of manners, e.g., operating system calls to device drivers. Hardware resources are generally available on a first-come, first-serve basis in conjunction with some type of arbitration scheme to ensure that the requests for resources are fairly handled. In some cases, priority may be given to certain requesters, but in most implementations, all requests are eventually processed.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2A","FIG. 1"],"b":["210","212","214","212","108","214","214","216","218","214","214"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2B","FIG. 2B","FIG. 2B"],"b":["250","251","252","253","254","255","256","256","256","256","256","254","257","258"],"i":["a","b","c ","d"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 3","FIG. 3"],"b":["302","304","306","308","302"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 4","FIG. 3"],"b":"302"},"In this example, IP driver subsystem  contains a conglomeration of components, including one or more IP drivers . Every IP driver manages its own \u201cscope\u201d, which is described in more detail further below, and every IP driver is assigned to a topology manager within Topology Service , which can serve as more than one IP driver. Topology Service  stores topology information obtained from discovery controller . The information stored within Topology Service  may include graphs, arcs, and relationships between nodes determined by IP mapper . Users can be provided with a GUI to navigate the topology, which can be stored within a database within Topology Service .","IPOP service  provides a persistent repository  for discovered IP objects. Persistent repository  contains attributes of IP objects without presentation information. Discovery controller  detects IP objects in Physical IP networks , and monitor controller  monitors IP objects. A persistent repository, such as IPOP database , is updated to contain information about discovered and monitored IP objects. IP driver may use temporary IP data store component  and IP data cache component  as necessary for caching IP objects or storing IP objects in persistent repository , respectively. As discovery controller  and monitor controller  perform detection and monitoring functions, events can be written to network event manager application  to alert network administrators of certain occurrences within the network, such as the discovery of duplicate IP addresses or invalid network masks.","External applications\/users  can be other users, such as network administrators at management consoles, or applications that use IP driver GUI interface  to configure IP driver , manage\/unmanage IP objects, and manipulate objects in persistent repository . Configuration service  provides configuration information to IP driver . IP driver controller  serves as central control of all other IP driver components.","IPOP Service  in  manages discovered IP objects, and to do so, IPOP Service  uses a distributed database in order to efficiently service query requests by a gateway to determine routing, identity, or a variety of details about an endpoint. IPOP Service  also services queries by Topology Service  in order to display a physical network or map a physical network to a logical network, which is a subset of a physical network that is defined programmatically or by an administrator. IPOP fault tolerance is also achieved by distribution of IPOP data and IPOP Service  among many endpoint ORBs.","One or more IP drivers can be deployed to provide distribution of IP discovery and promote scalability of IP driver subsystem services in large networks where a single IP driver subsystem is not sufficient to discover and monitor all IP objects. Each IP discovery driver performs discovery and monitoring on a collection of IP resources within the driver's \u201cscope\u201d. A driver's scope, which is explained in more detail below, is a set of IP subnets for which the driver is responsible for discovering and monitoring. Network administrators generally partition their networks into as many scopes as needed to provide distributed discovery and satisfactory performance.","A potential risk exists if the scope of one driver overlaps the scope of another, i.e. if two drivers attempt to discover\/monitor the same device. Accurately defining unique and independent scopes may require development of a scope configuration tool to verify uniqueness of scope definitions. Routers also pose a potential problem in that while the networks serviced by the routers will be in different scopes, a convention needs to be established to specify to which network the router \u201cbelongs\u201d, thereby limiting the router itself to the scope of a single driver.","Some ISPs may have to manage private networks whose addresses may not be unique across an installation, like 10.0.0.0 network. In order to manage private networks properly, first, the IP driver has to be installed inside internal networks in order to be able to discover and manage the networks. Second, since discovered IP addresses may not be unique across an entire installation that consists of multiple regions, multiple customers, etc., a private network ID has to be assigned to the private network addresses. In the preferred embodiment, a unique name of a subnet becomes \u201cprivateNetworkId\\subnetAddress\u201d. Those customers that do not have duplicate network addresses can just ignore the private network ID and a default private network ID is 0.","If Network Address Translator (NAT) is installed to translate the internal IP addresses to Internet IP addresses, users can install the IP drivers outside of NAT and manage the IP addresses inside the NAT. In this case, an IP driver will see only translated IP addresses and discover only the IP addresses translated. If not all IP addresses inside the NAT are translated, an IP driver will not able to discover all of them. However, if IP drivers are installed this way, users do not have to configure the private network ID.","Scope configuration is important to the proper operation of the IP drivers because IP drivers assume that there are no overlaps in the drivers' scopes. Since there should be no overlaps, every IP driver has complete control over the objects within its scope. A particular IP driver does not need to know anything about other IP drivers because there is no synchronization of information between IP drivers. A Configuration Service provides the services to allow DKS components to store and retrieve configuration information for a variety of other services from anywhere in the networks. In particular, scope configuration will be stored in the Configuration Services so that IP drivers and other applications can access the information.","Ranges of addresses that a driver will discover and monitor are determined by associating a subnet address with a subnet mask and associating a resulting range of addresses with a subnet priority. An IP driver is a collection of such ranges of addresses, and the subnet priority is used to help decide the system address. A system can belong to two or more subnets, such as is commonly seen with a gateway. The system address is the address of one of the NICs that is used to make SNMP queries. A user interface can be provided, such as an administrator console, to write scope information into the Configuration Service. System administrators do not need to provide this information at all, however, as the IP drivers can use default values.","An IP driver gets its scope configuration information from the Configuration Service, which may be stored using the following format:\n\n","Typically, one IP driver manages only one scope. Hence, the \u201cscopeID\u201d and \u201cdriverID\u201d would be the same. However, the configuration can provide for more than one scope managed by the same driver. \u201cAnchorname\u201d is the name in the name space in which Topology Service  will put IP networks objects.","A scope does not have to include an actual subnet configured in the network. Instead, users\/administrators can group subnets into a single, logical scope by applying a bigger subnet mask to the network address. For example, if a system has subnet \u201c147.0.0.0\u201d with mask of \u201c255.255.0.0\u201d and subnet \u201c147.1.0.0\u201d with a subnet mask of \u201c255.255.0.0\u201d, the subnets can be grouped into a single scope by applying a mask of \u201c255.254.0.0\u201d. Assume that the following table is the scope of IP Driver . The scope configuration for IP Driver  from the Configuration Service would be: 2=2,ip,147.0.0.0:255.254.0.0,146.100.0.0:255.255.0.0, 69.0.0.0:255.0.0.0.",{"@attributes":{"id":"p-0049","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Subnet address","Subnet mask"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"147.0.0.0","255.255.0.0"]},{"entry":[{},"147.1.0.0","255.255.0.0"]},{"entry":[{},"146.100.0.0","255.255.0.0"]},{"entry":[{},"\u200269.0.0.0","255.0.0.0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"In general, an IP system is associated with a single IP address, and a \u201cscoping\u201d process is a straightforward association of a driver's ID with the system's IP address.","Routers and multi-homed systems, however, complicate discovery and monitoring processes because these devices may contain interfaces that are associated with different subnets. If all subnets of routers and multi-homed systems are in the scope of the same driver, the IP driver will manage the whole system. However, if the subnets of routers and multi-homed systems are across scopes of different drivers, a convention is needed to determine a dominant interface: the IP driver that manages the dominant interface will manage a router object so that the router is not being detected and monitored by multiple drivers; each interface is still managed by the IP driver determined by its scope; the IP address of the dominant interface will be assigned as the system address of the router or multi-homed system; and the smallest (lowest) IP address of any interface on the router will determine which driver includes the router object within its scope.","Users can customize the configuration by using the subnet priority in the scope configuration. The subnet priority will be used to determine the dominant interface before using the lowest IP address. If the subnet priorities are the same, the lowest IP address is then used. Since the default subnet priority would be \u201c0\u201d, then the lowest IP address would be used by default.",{"@attributes":{"id":"p-0053","num":"0053"},"figref":"FIG. 5","b":["502","504","506"]},"Discovery engine , similar to discovery controller  in , detects IP objects within an IP network. Polling engine , similar to monitor controller  in , monitors IP objects. A persistent repository, such as IPOP database , is updated to contain information about discovered and monitored IP objects. IPOP  also obtains a list of all users from the security subsystem which queries all-users database  when initially creating a DSC. During subsequent operations to map a location of a user to an ORB, device scope context (DSC) manager  will query the active user database .","DSC manager  queries IPOP  for all endpoint data during the initial creation of DSCs and any additional information needed, such as decoding an ORB address to an endpoint in IPOP  and back to a DSC using an IPOPOid. The IPOPid is the ID of a network object as opposed to an address.","As explained in more detail further below with respect to , an administrator will fill out security information with respect to access user or endpoint access and designate which users and endpoints will have a DSC. If not configured by the administrator, the default DSC will be used. While not all endpoints will have an associated DSC, IPOP endpoint data , login security subsystem , and security information  are needed in order to create the initial DSCs.","DSC manager , acting as a DSC data consumer, explained in more detail further below, then listens to this data waiting for new endpoints or users or changes to existing ones. DSC configuration changes are advertised by a responsible network management application. Some configuration changes will trigger creation of more DSCs, while others will cause DSC data in DSC database  to be updated.","All DSCs are stored in DSC database  by DSC creator , which also fetches DSCs upon configuration changes in order to determine whether or not a DSC already exists. DSC manager  primarily fetches DSCs from DSC database , but also adds runtime information, such as ORB ID, which is ultimately used to determine a manner in which polling engine  should adapt to a particular user or endpoint.","IPOP  also incorporates scope manager , which stores information about scopes, such as the maximum number of endpoints within each scope . Scope manager  computes relationships between endpoints and scopes, as necessary. IPOP  also stores the number of endpoints that have been discovered for each network or scope , which is used by discovery life cycle engine .",{"@attributes":{"id":"p-0060","num":"0060"},"figref":"FIG. 6","b":["602","604","606","606","606","606","608","610"]},"The number of multiple devices from which poll data was received from for this DGT in the historical data is recorded (step ). A response time for polling of the endpoint for the DGT is recorded in the historical DGT data storage (step ). A determination is then made as to whether or not all endpoints in the ordered list have been polled (step ). If all endpoints in the ordered list have not been polled (step :NO), the operation returns to step  in which an endpoint is polled with the DGT. If all endpoints in the ordered list have been polled (step :YES), results are stored in the IPOP from a poll status of all endpoints in the ordered list (step ), and thereafter the operation terminates.","The present invention is applicable to variety of uses, and the previous figures described a general manner in which a device scope context can be associated with a source user or a source endpoint. The following figures describe a particular use of the present invention in which discovery and monitoring information may be obtained from a device or devices connected to a network. Retrieval of the network discovery and monitoring information may be configured by a user or administrator or may be programmatically determined in order to provide the most appropriate method of discovery and monitoring of the network to use at runtime.",{"@attributes":{"id":"p-0063","num":"0063"},"figref":"FIG. 7","b":["700","702","704","704","705","706","707","708","709","710"]},"Radio button  allows for a user or system administrator to specify, in input field , to switch to an IP ping when a number of devices in a SNMP table is less than a specified number. Radio button  allows for a user or system administrator to specify, in input field , to switch to an IP ping when a number of devices in the network equals a specified number. Radio button  allow for a user or system administrator to specify, in input field , to switch to an IP ping when time of a single SNMP query reaches a certain time interval, and this value in input field  may be expressed in milliseconds in this example. Radio button  allows for a user or system administrator to specify that a mixture of SNMP and IP ping queries are to be used in the adaptive gathering method as shown in graphical user interface . Buttons  and  allow the user or system administrator to set inputted values as necessary.",{"@attributes":{"id":"p-0065","num":"0065"},"figref":"FIG. 8","b":["808","810","812","814","808","806","802","806","804","802","804","808"]},"Physical network data  may contain information about NIC speed, latency to router, SNMP latency to router, fastest device NIC ordered list of device, largest numbers of devices that have been yielded in an ordered list, shortest latency ordered list of devices, data gathering order, device gathering order and the like. Endpoint device data  may contain information about a point in which a device was sensed to be alive, number of retries allowed, whether a device is SNMP capable, whether a device is IP ping capable, whether a device is PPPoE capable, and ordered list of SNMP devices used most often, number of devices which gave information during the last monitoring or discovery period, number of new devices which gave information during a monitoring or discovery period, and the like. Gathering method  may contain information about a number of retires specified or a data gathering order as specified by DGTD .",{"@attributes":{"id":"p-0067","num":"0067"},"figref":["FIGS. 9A\u20139B","FIG. 7"],"b":["902","904","700","904","908","912"]},"If a data gathering technique has been configured (step :YES), data gathering order is received from the gathering data technique (step ). A best data ordering is determined for the device (step ). A determination is then made as to whether or not historical data for this device exists (step ). If historical data for this device does not exist (step :NO), then a determination is made as to whether or not any additional devices are available to be monitored (step ). If no additional devices are available to be monitored (step :NO), the operation terminates. If additional devices are available to be monitored (step :YES), the operation returns to step  in which a best data gathering order for the device is determined.","Returning to step , if historical data does exist for this device (step :YES), then a determination is made as to whether or not the device is SNMP capable (step ). If the device does not have a SNMP agent then SNMP cannot be used to discover the device. If the device is not SNMP capable (step :NO), the operation continues to step  in which the determination is made as to whether or not there are any additional devices available to monitor. If the device is SNMP capable (step :YES), a determination is made as to whether or not a last data gathering retry has been reached (step ). If the last data gathering retry was too large for the device (step :YES), the SNMP data gathering technique is not acceptable (step ) and the operation then continues to step  in which the determination is made as to whether or not there are any additional devices available to monitor.","If the last data gathering retry was not too large for the device (step :NO), a determination is then made as to whether or not a last data gathering time latency was too long for the device (step ). If a timeout value has been reached then a time latency has been reached. If the last data gathering time latency was too long for the device (step :YES), the operation continues to step  in which the SNMP data gathering technique is not acceptable for this device.","If the last data gathering time latency was not too long for the device (step :NO), a determination is made as to whether or not a number of devices in which data was obtained during a last data gathering was too small (step ). If the number of devices in which data was obtained during a last data gathering was too small (step :YES), the operation continues to step  in which the SNMP data gathering technique is not acceptable. If the number of devices in which data was obtained during the last data gathering was not too small (step :NO), the SNMP data gathering technique is acceptable (step ). The operation then returns to step  in which a determination is made as to whether or not there are any additional devices to monitor.",{"@attributes":{"id":"p-0072","num":"0072"},"figref":["FIG. 9C","FIG. 7"],"b":["940","942","700","942","946","950"]},"If a data gathering technique has been configured (step :YES), data gathering is received from the gathering data technique (step ). A best data ordering is determined for the device (step ). A determination is then made as to whether or not historical data for this device exists (step ). If historical data for this device does not exist (step :NO), then a determination is made as to whether or not any additional devices are available to be monitored (step ). If no additional devices are available to be monitored (step :NO), the operation terminates. If additional devices are available to be monitored (step :YES), the operation returns to step  in which the determination is made as to whether or not a data gathering technique has been configured for the device.","Returning to step , if historical data does exist for this device (step :YES), then data gathering is ordered by a fastest NIC (step ). As stated above, a NIC is a network interface card. Data gathering is ordered by the largest number of devices in an interface (IF) table (step ). Data gathering it then ordered by a shortest latency time in which may be the time in which the device took to respond. A determination is then made as to whether or not there are any additional devices to monitor (step ). If there are not additional devices to monitor (step :NO), the operation terminates. If there are additional devices to monitor (step :YES), the operation returns to step  in which data is gathered on all devices within the network.",{"@attributes":{"id":"p-0075","num":"0075"},"figref":"FIG. 9D","b":["960","962","964","964","966","970"]},"If a data gathering technique has been configured for the device (step :YES), a device order is received for the network (step ). The data gathering technique for the device is then used to gather data about the device (step ). At this point, a retry value equals zero (step ). A determination is made as to whether or nor the device is being retried for monitoring (step ). If the device is not being retried for monitoring (step :NO), a determination is made as to whether or not any additional devices are available for monitoring (step ). If there are not any additional devices available for monitoring (step :NO), the operation terminates. If there are additional devices available for monitoring (step :YES), the operation returns to step  in which a device is located.","Returning to step , if the device is being retried for monitoring (step :YES), the retry value equals the retry value in step  plus one (step ). An attempt is made to gather data about the device (step ). A determination is then made as to whether or not there was a successful attempt in gathering data about the device (step ). If there was not a successful attempt in gathering data about the device (step :NO), the operation returns to step  in which a determination is made as to whether or not the device is being retried for monitoring. If there was a successful attempt to gather data about the device (step :YES), results of the gathered data is stored in a data gathering techniques database (step ) and the operation returns to step  in which a determination is made as to whether or not there are any additional devices to monitor.","In a highly distributed system, monitoring operations are performed by multiple components throughout the system. As described with respect to , an IP driver is responsible for monitoring one or more scopes, and multiple IP drivers are distributed throughout the overall distributed system. For example, a service provider may have a set of multiple IP drivers that are responsible for monitoring the networks of one customer, and the service provider could have another set of IP drivers that are responsible for monitoring the networks of another customer.","The advantages of the present invention should be apparent in view of the detailed description of the invention that is provided above. In prior art systems, monitoring\/scanning applications have global configuration parameters that apply to all endpoints within a network or set of networks, and these prior art solutions are stymied by routers, firewalls, etc., to prevent dynamic discovery of endpoints. Hence, the prior art systems cannot dynamically adapt discovery and monitoring methods in accordance with a specific device or network.","In contrast, the present invention applies data gathering techniques for the network and devices on the network in a dynamic manner which corresponds to the device being observed. Data gathering techniques, such as, for example, SNMP, IP ping, PPPoE, and the like may be chosen to gather this data without wasting valuable time and resources be sending signals to devices which are not equipped to receive a certain signal. In addition, a value may be specified for retrying to discover or monitor a device. This retry value may be specified for any data gathering technique included in a network management system. Furthermore, a switch may be made between data gathering techniques so that each device is properly tested.","It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of instructions in a computer readable medium and a variety of other forms, regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include media such as EPROM, ROM, tape, paper, floppy disc, hard disk drive, RAM, and CD-ROMs and transmission-type media, such as digital and analog communications links.","The description of the present invention has been presented for purposes of illustration but is not intended to be exhaustive or limited to the disclosed embodiments. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiments were chosen to explain the principles of the invention and its practical applications and to enable others of ordinary skill in the art to understand the invention in order to implement various embodiments with various modifications as might be suited to other contemplated uses."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, further objectives, and advantages thereof, will be best understood by reference to the following detailed description when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 9A\u20139B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9C"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9D"}]},"DETDESC":[{},{}]}
