---
title: System and method for testing hardware devices
abstract: A system for testing hardware devices applies a multi-level architecture including a Graphical User Interface (GUI) level (), a Dynamic Link Library (DLL) level (), and a device driving level (). The GUI level selects test items and test units for a test project based on test requirements, stores the test project in a test script file, configures test parameters for performing the test project, and stores the test parameters in a test parameter configuration file. The DLL level transmits test results of each hardware device () to the GUI level. The device driving level includes a device driving module () for obtaining test information on the hardware device, comparing the test information with standard information in the test parameter configuration file, and generating a comparison result. A related method is also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07409603&OS=07409603&RS=07409603
owner: Hon Hai Precision Industry Co., Ltd.
number: 07409603
owner_city: Tu-Cheng, Taipei Hsien
owner_country: TW
publication_date: 20041229
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["1. Field of the invention","The present invention relates to electronic device testing systems and methods, and particularly to a system and method which can test hardware devices of a computer.","2. Prior Art of the invention","Original Equipment Manufacturing (OEM) in the computer industry includes the manufacturing of all kinds of components and products, such as motherboards, Central Processing Units (CPUs), Compact Disc Read-Only Memories (CDROMs), and modems. Customers continue to demand increased performance and reliability of the products purchased, and OEM manufacturers need to ensure that their products meet high quality standards. OEM manufacturers routinely conduct numerous functional tests on the finished products before the products are shipped to customers.","Nowadays, function testing has become very important in the field of motherboard production and computer assembly. There are all kinds of test software tools available for testing computer products. Some of these utilities focus on a particular device such as a hard disk drive and its associated control electronics. The art of these utilities has been disclosed in literature such as U.S. Pat. No. 6,393,588 issued on May 21, 2002 and entitled \u201cTesting of USB Hub.\u201d The patent discloses a test apparatus for testing the function of a USB (Universal Serial Bus) hub under the control of a USB host computer. However, this test apparatus and like tools can only test one kind of computer product. They are not intended to test all kinds of computer products. Many OEM manufacturers produce a variety of computer products, and need a testing system and method which can be used to test all the computer products produced.","Accordingly, what is needed is a hardware device testing system and method which readily provides functional testing of all kinds of computer products.","A main objective of the present invention is to provide a system for testing hardware devices which can rapidly test one or more hardware devices.","Another objective of the present invention is to provide a method for testing hardware devices which can rapidly test one or more hardware devices.","To accomplish the first objective, a system for testing hardware devices in accordance with a preferred embodiment of the present invention has a multi-level architecture. The multi-level architecture comprises a Graphical User Interface (GUI) level, a Dynamic Link Library (DLL) level, and a device driving level.","The GUI level is for selecting test items and test units for a testing project based on testing requirements, storing the test project in a test script file, configuring test parameters for performing the test project, and storing the test parameters in a test parameter configuration file. The GUI level comprises a number of graphical user interfaces. The graphical user interfaces are: a test project editing interface for selecting test items and test units for a test project based on test requirements, and storing the test project in the test script file; a test parameter configuring interface for configuring test parameters for performing the test project, and generating a test parameter configuration file; and a test project performing interface for loading the test script file and the test parameter configuration file, controlling test procedures, and displaying the test results.","The DLL level is for transmitting test results of the hardware device to the GUI level, and includes a DLL module and a plurality of Application Programming Interfaces (APIs). The DLL module includes comprises a plurality of DLL files corresponding to the hardware devices, for transmitting test results of the hardware devices. The device driving level includes a device driving module for obtaining test information on each hardware device, comparing the test information with the standard information in the test parameter configuration file, and generating a comparison result.","To achieve the second objective, the present invention provides a method for testing hardware devices, which can be performed by utilizing the above-described system. The method comprises the steps of: (a) selecting test items and test units for a test project, and storing the test project in a test script file; (b) configuring test parameters, and generating a test parameter configuration file; (c) loading the test script file and the test parameter configuration file; (d) loading a DLL file corresponding to one of the test items in the test script file; (e) loading a device driving interface corresponding to the DLL file; (f) testing a hardware device corresponding to the test item based on the test configuration file, and recording the test results; (g) transmitting the test results to the DLL module; (h) closing the device driving interface; and (i) determining whether any test items have not been tested, and displaying the test results if all test items have been tested.","Other objects, advantages and novel features of the present invention will be drawn from the following detailed description of the preferred embodiment and a preferred method of the present invention with the attached drawings, in which:","In the following description, a test project is a plan for testing hardware devices, and includes one or more test items. Each test item represents a hardware device to be tested, such as a Central Processing Unit (CPU), a Compact Disc Read-Only Memory (CD-ROM), or a modem. Each test item includes one or more test units. Each test unit represents a test feature of a test item. For example, the test units for a CPU may comprise a CPU number, a CPU signature, a CPU brand identification (ID), a CPU ratio, a system bus frequency, and a CPU vendor ID.","Now referring to the drawings,  is essentially a schematic diagram of hardware and software infrastructure of a system for testing hardware devices (hereafter, \u201cthe system\u201d) in accordance with the preferred embodiment of the present invention. The system is connected to one or more hardware devices  to be tested (only one shown). The system applies a multi-level architecture including a Graphical User Interface (GUI) level , a Dynamic Link Library (DLL) level , and a device driving level .","The GUI level  comprises a test project editing interface , a test parameter configuring interface , and a test project performing interface . The test project editing interface  is operable for selecting test items and test units for a test project, the selection being based on test requirements, and thereby generating the test project. The test project is stored in a test script file in a designated format. The test parameter configuring interface  is provided for configuring test parameters for performing the test project. The test parameters are stored in a test parameter configuration file. The test project performing interface  is for loading the test script file and the test parameter configuration file, and controlling test procedures and test modes according to test requirements. For example, via the test project performing interface , users can instruct that one or more test units be skipped, or instruct that a test unit be tested repeatedly.","The DLL level  comprises a plurality of Application Programming Interfaces (APIs)  (only one shown), and a DLL module . The DLL module  includes a plurality of DLL files. Each DLL file corresponds to a particular hardware device  and a particular API . Before starting the testing of a hardware device , the test project performing interface  loads a DLL file corresponding to the hardware device  through the corresponding API . After finishing the testing of the hardware device , the DLL file transmits test results to the test project performing interface  through the API .","The device driving level  comprises a plurality of device driving interfaces  (only one shown) and a device driving module . The device driving module  includes a plurality of Windows Kernel Driver (WKD) programs. In the preferred embodiment, the system is based on a windows operating system, under which each WKD program corresponds to a particular hardware device . Additionally, each WKD program corresponds to a particular device driving interface . The (WKD) program is used for driving the hardware device , in order to obtain test information on the hardware device . The device driving module  is for obtaining test information on the hardware device  through the corresponding WKD program, and performing the testing of the hardware device .",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2","b":["200","101","201","102","108","108","103"]},"In step S, the test project performing interface  loads the test script file, and sets a storing path for the test parameter configuration file. When the test script file is executed, the test project performing interface  loads the test parameter configuration file according to the storing path, thereby obtains standard information on all test units of each test item from the test parameter configuration file, and obtains information on the test units of the test items from the test script file. In step S, the test project performing interface  loads a DLL file through an API  corresponding to a test item in the test project. In step S, the DLL module  loads a device driving interface  corresponding to the test item.","In step S, the device driving module  obtains test information on the hardware device  corresponding to the test item, via the corresponding WKD program. The device driving module  compares the test information on the hardware device  with the standard information in the test parameter configuration file, and generating a comparison result. A test result comprises a name of the test item, names of test units in the test item, result codes, and comparison results (i.e. remark information). In step S, the device driving module  transmits the test result to the DLL module  via the device driving interface . Then, in step S, the DLL module  closes the device driving interface  corresponding to the test item.","In step S, the test project performing interface  determines whether there are any test items that have not been tested in the test script file. If there are any test items that have not been tested, the procedure returns to step S described above. If all test items have been tested, in step S, the DLL module  transmits the test results of all the test items to the test project performing interface  via respective APIs , whereupon the test project performing interface  displays the test results.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["101","101","101","301","302","303","304","301","302","301","303","304"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4","b":["103","103","103","401","402","403","404","405","406","401","402","401","403","404","405","406"]},"Although the present invention has been specifically described on the basis of a preferred embodiment and preferred method, the invention is not to be construed as being limited thereto. Various changes and modifications may be made to the embodiment and method without departing from the scope and the spirit of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
