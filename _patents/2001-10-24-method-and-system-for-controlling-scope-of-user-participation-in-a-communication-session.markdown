---
title: Method and system for controlling scope of user participation in a communication session
abstract: A method and system for controlling the scope of user participation in an ongoing communication session. A communication controller receives a predefined control signal, such as from one of the conference participants, during the ongoing session. The control signal indicates a request to change the scope of participation of at least one user in the session. In response, the server changes the scope of participation of at least one user, while retaining participation of that user in the session. For instance, the request may be to switch one of the users to a listen-only mode, and the server may respond accordingly.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07636750&OS=07636750&RS=07636750
owner: Sprint Spectrum L.P.
number: 07636750
owner_city: Overland Park
owner_country: US
publication_date: 20011024
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF AN EXEMPLARY EMBODIMENT"],"p":["1. Field of the Invention","The present invention is directed to a method and system for controlling scope of user participation in an ongoing communication session. The techniques described here can extend to use with respect to various types of communication sessions, whether circuit-switched or packet-switched.","2. Description of Related Art","As a general matter, it is known to establish a conference session over a telecommunications network between multiple user stations, each operated by a respective user. An multipoint control unit (MCU) can reside in the telecommunications network and can function as a bridging or switching device between the participating stations, to support the conference session.","A participating station can initiate the conference session by sending a session setup message to the MCU, identifying the other desired participant(s). The MCU may then seek to connect with the designated other participants, such as by forwarding the session setup message to each other party. Upon successful setup of the session, the MCU may then establish a communication session respectively with each participating station, and the MCU may bridge together the communication sessions, so that the users at the stations can confer with each other via the MCU.","By way of example, consider two users, A and B, operating respective user stations. A wishes to engage in a conference session with B and therefore instructs his user station to initiate the conference. A's user station may then responsively execute a session initiation protocol (SIP) client application to generate and send a SIP INVITE message to the MCU, seeking to invite B to the conference session. The MCU will then treat that INVITE message as a request to establish a conference session with B. To establish the conference session, the MCU may send another INVITE to B's station, seeking to set up a session with B.","Upon receipt of the INVITE from the MCU, B's station may execute a SIP client application to accept the invitation, by sending a SIP 200 OKAY message back to the MCU. Upon receipt of the 200 OKAY, the MCU would then send a 200 OKAY to A's station. In turn, A's station would send a SIP ACKNOWLEDGEMENT to the MCU, and the MCU would send an ACKNOWLEDGEMENT to B's station. As a result, two communication sessions or \u201clegs\u201d will have been initiated, one between A's station and the MCU, and another between the MCU and B's station.","Once these legs have been initiated, the two stations may then begin communicating with the MCU via respective real time protocol (RTP) sessions. Client A's station would communicate with the MCU via one RTP session, and client B's station would communicate with the MCU via another RTP session. The MCU would then bridge together the two sessions, thereby allowing A and B to communicate with each other. A real-time control protocol (RTCP) could be used to manage each session and to tear down the sessions when they are finished.","According to an exemplary embodiment of the invention, a mechanism is provided for controlling the scope of user participation during an ongoing communication session (i.e., between the times that the session is set up and torn down). As a general matter, a central communication server (e.g., a conference server) will receive a control signal during the ongoing session and will respond to the control signal by changing the scope of at least one user's participation in the session, while retaining the user's participation in the session. Thus, the server will effectively switch the user from one mode of participation to another.","For example, the server may receive from one of the participants in the session a control code that indicates a request to switch the participant from an active (bi-directional) mode of participation in the session to a listen-only mode of participation in the session, and vice versa. And the server may respond to the control code by blocking communications from being transmitted from the requesting participant to one or more other participants in the session, while still allowing communications to be transmitted to the requesting participant from one or more other participants in the session.","As another example, given a group of participants in the session, the server may receive a control code that indicates a request to establish a private session of a subset of those participants, i.e., a sub-session within the session. In response, the server may allow that subset of participants to communicate with each other in a sub-session, while preventing their communications from being transmitted to one or more other participants in the session. (The other(s) may be put on \u201chold\u201d or may engage continue communicating during this period.) In turn, the server may receive a restore code that indicates a request to restore the full session. And, in response, the server may then restore the full session between the group of participants. Many other examples are possible as well.","These as well as other aspects and advantages of the present invention will become apparent to those of ordinary skill in the art by reading the following detailed description, with appropriate reference to the accompanying drawings.","Referring to the drawings,  illustrates a simplified block diagram of a communication system  in which an exemplary embodiment of the present invention can be employed. System  includes at its core a conference bridge or other central communication server , which is arranged to bridge together communications between a number of user stations or client stations.  depicts four exemplary client stations, A, B, C and D. However, server  may support communication between more or fewer client stations at a time.","With the arrangement shown in , the server might engage in bi-directional communication respectively with each of the client stations, and the server may then bridge together those communications so as to allow users at the stations to communicate with each other. As shown, for instance, the server may communicate with station A via a link , the server may communicate with station B via a link , the server may communicate with station C via a link , and the server may communicate with station D via a link .","Each of these communication links may take various forms. As examples, one or more of the links may include a wireless component such as a radio frequency (RF), microwave, satellite or other such link. As another example, one or more of the links may include a landline component, such as an Ethernet, twisted pair, coaxial or other such link. Other examples are also possible.","Generally, or when in communication with server , each of the client stations will preferably have a respective network address and\/or other station identifier. The station identifier might depend on the type of link that ties the station to the server. For instance, the station identifier could be an IP address, a telephone number (e.g., a mobile identification number (MIN), or a network address identifier or SIP address that is correlated with the station by a central registry. Other examples are possible as well.","Server  may also take various forms. As indicated above, the server preferably functions to bridge communications between client stations A, B, C and D, via links , ,  and . As such, the server preferably includes ports to send and receive communication signals via these links. Further, the server preferably includes logic to control the bridge between communications on the various links.","Referring next to , a generalized block diagram of a representative server  is shown. As illustrated, exemplary server  includes a number of communication interfaces (or ports) , a processor , and data storage , all tied together via a system bus .","Communication interfaces  are tied respectively to links , ,  and . The server may thus send and receive communication signals (such as user data and control signals) via these links. The communication interfaces  may take various forms (and may vary among each other), depending for instance on the type of links to which they are tied. For example, if the links are RF links, then the interfaces may include an antenna and RF communication circuitry.","Additionally, the server includes a processor  and data storage . Data storage  preferably holds machine language instructions and\/or other logic executable by processor  to carry out various functions described herein. (Alternatively, some such functions could be carried out by hardware and\/or firmware).","For example, data storage  may include logic to set up and tear down communications with the various client stations. This logic can vary depending on the type of links and protocols used for communication. By way of example, the logic could be a SIP client application. As such, it could receive an INVITE requests from one of the client stations, which seeks to set up a communication session with the other client stations. In response, it may send INVITE requests of its own to the other client stations and ultimately set up communications respectively between itself and each client station, as described in the background section above. Further, at the end of a bridged session, the SIP client application can function to tear down communications with each client station.","As another example, data storage  may include logic to communicate real-time media signals with the client stations. Again, this logic can vary depending on the type of links and protocols that are employed. For instance, the logic might function to communicate according to the UDP\/IP (or TCP\/IP) and RTP protocols.","Further, data storage  preferably includes logic to bridge together communications between the various client stations. Similarly, this logic would vary depending on the type of protocols employed. For instance, assuming each client station communicates signals as UDP\/IP packets, the logic might function to depacketize and uncover the underlying signals received from each client station, combine the signals together (or select a strongest signal), and re-packetize and transmit the resulting signal out to the stations. Other examples are possible as well.","In addition, data storage  preferably includes logic to control communications between the various client stations. For instance, this logic may take the form of a set of access control rules (e.g., a table of rules) that specify allowed or disallowed bridging of communications between the client stations. For example, an access control rule might specify (or provide by default, without specifying) that, when the server receives real-time media signals from any client station in the group A, B, C and D, the server should transmit those signals to each of the other stations in the group. As another example, an access control rule might specify that when the server receives real-time media signals from client station A, the server should not transmit those signals to other stations in the group (thereby facilitating a \u201clisten-only\u201d mode for station A). In operation, processor  may follow these rules, so as to restrict communications accordingly.","The access control logic effectively indicates the state of participation of each client station. In addition, data storage  may include a rolled up state-table that processor can use to quickly determine the state of a given client station.  sets forth such a table by way of example. The table of  shows that client stations A, B and D are in an active mode, while client station C is in a listen-only mode.","Still further, data storage  preferably includes logic to allow server  to receive and respond to predefined control codes that indicate requests to change the scope of user participation during an ongoing communication session. The server will preferably receive those control codes from one of the participating client stations, during the ongoing communication session between the stations. However, the server may alternatively receive such a control code from some other entity during the ongoing session.","The manner in which the server receives a given predefined control code could take various forms. For example, the server could receive the control codes in an RTCP message in the same media channel that is used to carry real-time media signals (i.e., as an \u201cin-band\u201d message). Alternatively or additionally, the server could receive the control codes via some other control channel (i.e., as an \u201cout-of-band\u201d message).","As is known in the art, the RTCP protocol functions to allow a network entity to tear down an RTP session. Further, it functions to allow network entities to control aspects of the transmission channel, such as bandwidth, and other channel characteristics. As such, RTCP defines certain types of control packets, each designated by a respective header field, and each having a respective payload block. One type of control packet is an APPLICATION type.","According to the exemplary embodiment, the server can receive a predefined control code carried as payload in an APPLICATION type RTCP packet. Thus, the server logic may include an RTCP client that functions to receive RTCP packets. Further, the server logic may function to detect an APPLICATION type RTCP packet and to responsively look to the payload block of that packet (e.g., to a predetermined position in the payload block) to find a control code.","The logic may then define certain control codes and corresponding changes in scope of user participation. This correlation may take the form of a table that processor  can reference. An exemplary table is shown in . Referring to , five exemplary control codes are defined, a MUTE code, an UNMUTE code, a BLOCK code, an UNBLOCK code and a PRIVATE code. It should be understood that these are specified by way of example only, and other control codes are possible as well.","The table defines the MUTE code to be indicated by the value \u201c135\u201d carried in the payload block of an APPLICATION type packet. The table then indicates that the processor should respond to the MUTE code by switching the sender of the code to a listen-only mode. Thus, when the processor detects the value \u201c135\u201d in the payload block of an APPLICATION type packet sent from client station A, the processor may update the access control rules so as to indicate that (i) communications that the server receives from client station A should not be sent to client stations B, C and D, but (ii) communications that the server receives from any of client stations B, C and D can still be sent to client station A.","Next, the table defines an UNMUTE code to be indicated by the value \u201c137\u201d carried in the payload block of an APPLICATION type packet. The table then indicates that the processor should respond to the UNMUTE code by switching the sender of the code to an active participation mode (assuming the sender was in a listen-only mode\u2014otherwise, the processor may ignore or reject the request). Thus, when the processor detects the value \u201c137\u201d in the payload block of an APPLICATION type packet sent from client station A, the processor may update the access control rules so as to indicate that communications that the server receives from client station A can be sent to client stations B, C and D.","In turn, the table defines a BLOCK code to be indicated by the value \u201c139\u201d (and, optionally, a designation of the participant to be blocked) carried in a predetermined position of the payload block of an APPLICATION type packet. And the table indicates that the processor should respond to the BLOCK code by switching the sender of the code to a transmit-only mode (possibly with respect to a designated other participant), i.e., by blocking communications to the sender from one or more other participating stations. Thus, when the processor receives an APPLICATION type packet from client station A (sender) and detects in the payload block of the packet the value \u201c139\u201d together with a designation of client station B (target), the processor may update the access control rules so as to indicate that the communications that the server receives from client station B should not be sent to client station A.","The table then defines an UNBLOCK code to be indicated by the value \u201c141\u201d (and, again, optionally a designation of the participant to be unblocked) carried in a predetermined position of the payload block of an APPLICATION type packet. And the table indicates that the processor should respond to the UNBLOCK code by switching the sender of the code to an active (bi-directional) mode (possibly with respect to a designated other participant). Thus, when the processor receives an APPLICATION type packet from client station A and detects in the payload block of the packet the value \u201c141\u201d together with a designation of client station B, the processor may update the access control rules so as to indicate that the communications that the server receives from client station B can be sent to client station A.","It should be understood that the predefined control codes employed in the exemplary embodiment can call for a change in scope of participation of a single participant or can call for a change in scope of participation of multiple participants at once. A good example of changing the scope of participation of multiple participants at once might be establishing a sub-session among a subset of participants in a larger session. For example, when stations A, B, C and D are participating in a bridged session, a control code received by the sever might direct the server to establish a sub-session between stations A and B, to the exclusion of stations C and D.","To this end, as further shown in , the table may define a PRIVATE code to be indicated by the value \u201c143\u201d together with a designation of other participants with whom the sender wishes to engage in a private session. (Alternatively, the logic may indicate that a PRIVATE code from a particular station, without a designation of one or more other participants, should be treated as a request to establish a sub-session among the sender and one or more particular other stations of those participating in the current session.)","The table then may then indicate that the processor should respond to the PRIVATE code by maintaining a bridge between the sender and the other designated participant(s), while temporarily blocking communications between them and the other participant(s) in the session. Thus, for instance, when the processor receives an APPLICATION type packet from client station A and detects in the payload block of the packet the value \u201c141\u201d together with a designation of client station B, the processor may update the access control rules so as to indicate that the bi-directional communications should be allowed between stations A and B, but that stations C and D should not be allowed to communicate with stations A and B. Although not shown, the table may then also define a RESTORE control code that station A or B could send so as to restore the larger session between A, B, C and D, ending the sub-session.","Although  depicts server  as a single component, it should be understood that the function of the server could in fact be distributed among a number of components. For instance, two servers could be provided and, by establishing communication between the servers, communications between stations served by the respective servers could be bridged. An example of this arrangement is shown in .","Referring to , a first server X is shown serving client stations A, B and C, and a second server Y is shown serving client stations D and E. Server X might sit at one network address, while server Y sits at another network address. It is possible that server X might be owned and operated by company X, while server Y might be owned and operated by company Y. Further, one or more additional communication servers might be interposed between servers X and Y.","Assume now that a user at station A wishes to engage in a conference session with (i) users at stations B, C, D and E. To initiate the conference session, station A may send a setup message to server-X, identifying the requested other participants. In identifying the participants served by server-Y, the setup message may identify server-Y by network address. Alternatively, server-X may have access to a routing table or other data source that points server-X to server-Y for purposes of establishing a session with stations D and E.","Thus, server-X may establish communication legs , ,  respectively with users A, B and C and a communication leg  with server-Y, and can bridge those legs together. And server-Y may then establish communication legs ,  respectively with stations D and E, and bridge those legs together with leg  between server X and server Y. As a result, all of the stations can communicate with each other.","The sub-session mechanism described above can work particularly well in this multiple-server arrangement. For instance, station A may send a PRIVATE control code to server-X, which server-X may be programmed to understand as a request to establish a sub-session between the stations served by server-X (namely, stations A, B and C), to the exclusion of the stations served by server-Y (namely, stations D and E). In response, server-X may block communications with server-Y, thereby blocking communications between (i) stations A, B and C on the one hand and (ii) users D and E on the other, while still maintaining communications among users A, B and C. Many variations are possible as well. (For instance, rather than blocking off users D and E entirely, the server could just block communications from server-X to server-Y, while allowing incoming communications from server-Y to server-X.)","Client stations A, B, C and D, in turn, are each preferably arranged to communicate (send and receive) real-time media signals via their respective links with server , and to interface with respective users. As such, each client station preferably includes suitable signal handling logic, a suitable communication interface and a suitable user interface.","Referring next to , for example, a generalized block diagram of a representative client station  is shown. Client station  includes a processor , data storage , a communication interface  and a user interface , all of which may be tied together by a system bus .","In the exemplary embodiment, data storage  contains machine language instructions that are executable by processor  to carry out various functions described herein. (As with the logic in the server, some of these functions could alternatively be embodied in hardware and\/or firmware).","For example, data storage  may include logic to set up and tear down communications with server . This logic can vary depending on the type of link and protocol(s) used for communication. Consistent with the example above, the logic could be a SIP client application. Further, the logic can define a user-selection mechanism, such as a menu graphic or the like, that a user of the station can employ to set up or tear down a communication session. Thus, the logic could be arranged to receive a user request to initiate a bridged communication session with users at designated other stations, and to responsively send out a SIP INVITE request to server , seeking to set up the requested session. Ultimately, a leg of the bridged session would then be set up between the station and the server.","As another example, data storage  preferably includes logic to interface user communications with the respective communication link to server . This interface logic will likely vary depending on the type of communication link and protocols employed, as well as the type of real-time media involved.","For example, if the user speaks, the logic might function to digitize the analog speech signal, to encode the resulting digitized speech signal (using a suitable encoder, such as G.723.1, for instance), and to packetize the encoded signal so as to produce a sequence of RTP packets representing the underlying signal. The processor  could then send those packets via the communication link to server . Similarly, when the processor receives incoming RTP packets from server , the logic might function to depacketize the packets, decode the encapsulated signals, and convert the resulting digital signals into analog signals to be played out to the user of the station.","As yet another example, data storage  preferably includes logic to provide predefined control codes to server  during an ongoing communication session, so as to request changes in the scope of user participation. This logic can also take various forms, depending on the means of communication between the station and the server. Again consistent with the example described above, the logic may include an RTCP client and may function to insert into an APPLICATION type RTCP packet a predefined control code indicative of a specific request to change the scope of user participation during a communication session.","Further, the logic preferably includes a user-selection mechanism, such as a menu graphic or the like, that a user of the station can employ, during the communication session, to direct the station to send to the server a request to change the scope of user participation. For example, the logic might include an HDML or WML card that processor  may cause to be displayed to the user during an ongoing session. The card might provide the user with choices such as MUTE, UNMUTE, BLOCK, UNBLOCK, PRIVATE and RESTORE, in line with the example described above. (Preferably, the station will maintain an indication of its own state and may display only choices that make sense given the current state. For instance, the station might be programmed to display the UNMUTE option only if the server has the station in a mute mode.)","In response to the user selection of the MUTE option, logic underlying the card might then cause processor  to insert the associated control code value \u201c135\u201d into the payload block of an APPLICATION type RTCP packet and to then send the packet to server . As described above, the server would then adjust the station's mode of participation in the session accordingly.","Communication interface , in turn, functions to send and receive user data (e.g., real-time media signals) and control signals (e.g., session participation control signals) over a respective communication link (or links). As such, interface  may vary depending on the type of communication link. For example, if the link is an RF wireless link, then interface  may include an antenna and may function to send and receive RF signals. Alternatively, if the link is an Ethernet link, then interface  might include a packet-network interface.","User interface  then functions to interface with a user of the client station. As such, user interface  preferably includes equipment for receiving user input, such as a microphone, a video camera, and\/or a keypad. Further, the user interface preferably includes equipment for presenting signals to a user, such as a speaker and\/or a screen display. Thus, by way of example, the processor may cause to be displayed on the user interface the selection-mechanisms described above. Further, the processor may receive an outgoing speech signal from the user, and may present an incoming speech signal to the user. Other examples are possible as well.","System  is generally representative of many possible communication systems in which the exemplary embodiment can be employed. As such, the components and links of system  can take various forms. Referring next to , for instance, a more specific example of a communication system, designated as system , is shown.","As illustrated in , communication system  includes an IP network , such as the Internet or a private Ethernet for instance. Coupled with (or as nodes on) the IP network are an MCU , a network access server (NAS) , a wireless access gateway (WAG) , and a packet data serving node (PDSN) . NAS , WAG  and PDSN  each function to provide IP network connectivity for one or more client stations, so that the client stations can communicate via the IP network with MCU  (for instance).","By way of example, NAS  is shown connecting a multimedia personal computer  to the IP network. As such, computer  may engage in packet-based communication with NAS  over a suitable link (e.g., a point-to-point protocol (PPP) session over a telephone channel, or a LAN connection), and NAS  may route packets between the IP network and the computer. When the computer is coupled with the IP network, it may have an assigned IP address.","In the exemplary embodiment, computer  may include a microphone and speakers as well as a voice-over-IP mechanism suitable for communicating speech signals as packet data. By way of example, the computer may include an analog\/digital converter, a G.723.1 vocoder, and a packetizer\/depacketizer. Thus, when a user is operating the computer, the user can engage in speech communications over the IP network. Further, the computer may include mechanisms for communicating other forms of real-time media signals, such as video for instance.","WAG , in turn, is shown providing connectivity for a mobile station (MS) , which may be a cellular telephone, personal digital assistant, or other such device. In particular, WAG  is linked to a base transceiver station (BTS) , which communicates with MS  over an air interface . Similar to computer , MS  may be equipped with a mechanism for converting between speech signals and packet data. Packetized speech may then flow via WAG , BTS  and air interface , between MS  and the IP network. Thus, when a user is operating the MS, the user can similarly engage in speech communications with other users via the IP network. Further, similar to computer , MS  may be able to communicate other sorts of real-time media signals as well.","Next, PDSN  is shown providing connectivity for mobile stations , . As such, PDSN  is coupled with a base station controller (BSC) , which is in turn coupled with a BTS . BTS  then communicates with mobile stations ,  over respective air interfaces , . In normal operation, PDSN  can conventionally establish a PPP session with each of these mobile stations. In turn, each mobile station may be equipped to convert between speech signals and packet data. Thus, a user operating either mobile station may engage in speech communications with other users via the IP network.","Comparing the exemplary arrangement of  to that shown in , mobile station  corresponds with client station A, personal computer  corresponds with client station B, mobile station  corresponds with client station C, and mobile station  corresponds with client station D. In turn, MCU  corresponds with server . The descriptions above may thus extend by analogy to each of these components.","Referring next to , a flow chart is provided to illustrate some of the functions that may be carried out in accordance with the exemplary embodiment. In particular,  depicts a method of controlling the scope of user participation during an ongoing session (such as a conference call) in which multiple client stations communicate with each other through a central server, such as server  in .","As shown in , at block , the server receives a predefined control code during the ongoing session. According to the exemplary embodiment, the predefined control code requests (e.g., is indicative of a request for) a change in scope of user participation in the session. At block , the server responds to the control code by changing the scope of participation of at least one of the client stations in the session, while retaining participation of the at least one client station in the session. For instance, the server may switch a client station from an active mode of participation to a listen-only mode of participation. With the switch, the client station would still be participating, albeit in a less than complete mode (a listen-only mode).","As presented in the table at , a MUTE code is defined as a code that switches a sender to listen-only mode. An UNMUTE codes is defined as a code that switches a sender to active mode allowing a participant to listen and to talk. A BLOCK code is defined as a code that stops bridging communications from a target to a sender so that a given client station is permitted to transmit, but not receive, communications. An UNBLOCK code is defined as a code that starts bridging communications from a target to a sender allowing a participant to listen and to talk. Finally, a PRIVATE code is defined as a code that establishes a sub-session between a sender and one or more other designated stations(s).","An exemplary embodiment of the present invention has been described above. Those skilled in the art will understand, however, that changes and modifications may be made to this embodiment without departing from the true scope and spirit of the present invention, which is defined by the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["An exemplary embodiment of the present invention is described herein with reference to the drawings, in which:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
