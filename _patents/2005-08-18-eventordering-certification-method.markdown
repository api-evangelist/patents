---
title: Event-ordering certification method
abstract: An event-ordering certification system  includes a certification apparatus , a plurality of user apparatuses (i=a, b, . . . , n), an audit apparatus  for performing an audit of an event-ordering receipt published by the certification apparatus  and a network  for connecting these elements with each other. In response to an event-ordering request from one user apparatus , the certification apparatus  publishes the event-ordering receipt and sends it to the user apparatus . If a mistrust is produced in the event-ordering receipt, the user apparatus verifies the event-ordering receipt with the use of data published by the certification apparatus  and an audit result by the audit apparatus 
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07634653&OS=07634653&RS=07634653
owner: Nippon Telegraph and Telephone Corporation
number: 07634653
owner_city: 
owner_country: JP
publication_date: 20050818
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF ART","DISCLOSURE OF THE INVENTION","PREFERRED EMBODIMENTS FOR EMBODYING THE INVENTION","1. Embodiment","1-1. System Structure","1-2. System Operation","1-3. Method of Auditing Event Ordering","2. Embodiment","2-1. System Structure","2-2. System Operation","2-3. 1. Modification of 2. Embodiment","2-4. 2. Modification of 2. Embodiment","2-5. 3. Modification of 2. Embodiment","3. Embodiment","3-1. System Structure","3-2. System Operation","3-3. Modification of 3. Embodiment","4. Embodiment","4-1. System Structure","4-2 System Operation","5. Embodiment","5-1. System Structure","5-2 System Operation","INDUSTRIAL APPLICABILITY"],"p":["The present invention relates to an event-ordering certification technology for certifying an occurrence order of events accompanied with generation of digital data.","The event-ordering certification technology contains a technology for certifying the occurrence order of a plurality of events accompanied with generation of digital data and a technology for certifying contents of the digital data generated by the events.","With activisation of Web-based commerce on the Internet and magnified availability in managing digital documents in recent years, there is required a mechanism of electronic authentication for a third party to certify who and when the digital data was generated and\/or communicated and what the digital data was formed by. The electronic authentication includes various functions of: specifying transmitter\/receiver of the digital data; confirming arrival of the data; certifying context of digital documents, such as transmission\/reception; detecting a tamper; storing electronic documents and so on. The event-ordering certification technology accomplishes the functions of certifying the context of digital documents and detecting the tamper.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 1","FIG. 1"],"b":["900","30","10","30","30","30"]},"As for this event-ordering certification system adopting the digital signature as a main base for authenticity of this event-ordering receipt, there are pointed out various problems in view of falseness in the event-ordering certification apparatus , term of validity of the event-ordering receipt, aspects of system operation and so on. Therefore, there is also proposed an event-ordering certification method that does not adopt the digital signature as the main base for authenticity of this event-ordering receipt. For instance, a method with Linear Linking Protocol is disclosed in nonpatent literatures No. 1 (S. Haber and W. Stornetta, How to Time-Stamp a Digital Document, Journal of Crytology, Vol. 3, No. 2, pp 99-111, 1991) and No. 2 (J.-J. Quisquater, H. Massias, J. S. Avila, B. Van Rompay: Specification and implementation of a timstamping System, Technical Report of Universite Cathoilique de Louvain, 1999, URL: www dice.ucl.ac.be\/crpto\/TIMESEC\/TR4.tgzl). With this method with Linear Linking Protocol, it is possible to provide the system as a whole with high safety even if the event-ordering certification apparatus  is not reliable.  is a diagram to explain an event-ordering certification system by Linear Linking Protocol that does not rely upon PKI. In , the event-ordering certification system  is constructed so as to produce a link information Lcorrelating a plurality of users' data (hash values) objective of event-ordering certification with each other and send event-ordering receipts including the link information Lto the users . Each of the event-ordering receipts is adapted so as to depend on all of the event-ordering receipts that have been produced previously. Then, as parts (L, L) of the link information are published on mass-media (e.g. newspapers) periodically, it is possible to prevent falseness of the event-ordering certification apparatus , whereby the reliability of the whole system can be improved.","However, the above-mentioned method of Linear Linking Protocol requires mutual collaboration among the users  in order to detect the falseness of the event-ordering certification apparatus . Additionally, in order to allow the users  to verify the obtained event-ordering receipts and verify that the published information is related to the event-ordering receipts in an orderly manner, the users  are required to gobble down great volume of data from the event-ordering certification apparatus .","Methods for solving part of the above-mentioned problems partially are also proposed. For example, in nonpatent literatures No. 3 (A. Buldas, P. Land, H Lipmaa and J. Villemson: Time-stamping with binary linking schemes, in Processings of Advances on Cryptology (CRYPTO'98), ed. H. Krawczyk, pp. 486-501, Springer-Verlag, 1998) and No. 4 (A. Buldas, H Lipmaa and B. Schoenmakers, Optimally efficient accountable time-stamping, in Proceedings of Public Key Crytography 2000 (PKC2000), eds. Y Zheng and H. Imai, pp. 293-305, Springer-Verlag, January 2000), there is proposed a method of adopting a tree structure in place of the linear lists used in the nonpatent literatures Nos. 1 and 2, in order to calculate publication data collecting up event-ordering requests processed by an event-ordering certification apparatus for a certain period, thereby remarkably reducing the amount of data required for the user  to verify an event-ordering receipt, from the amount of data proportional to the number of event-ordering requests accepted for the certain period to the amount of data proportional to a logarithm (base 2) of the former amount.","In the above-mentioned method described in the nonpatent literatures Nos. 3 and 4, however, there are problems as follows.","Assuming that two different users send their respective event-ordering requests to an event-ordering certification apparatus and subsequently, these event-ordering requests are accepted by the event-ordering certification apparatus, it is impossible to provide evidence that the acceptance of one event-ordering request by the first user has been carried out before the acceptance of another event-ordering request by the second user unless the publication data collecting up the event-ordering requests is published with a completion of the above certain period. Thus, the above method is inferior to users' convenience against the event-ordering certification system. Additionally, if the event-ordering certification apparatus has a malfunction, then it becomes impossible for the users to verify the event-ordering receipts.","In order to solve the above-mentioned problem, an object of the present invention is to provide, in an event-ordering certification system for certifying an event-ordering with the use of a tree structure, an event-ordering certification method, an event-ordering certification audit method, certification and audit apparatuses in an event-ordering certification system and programs for event-ordering certification, event-ordering certification audit, validation of event-ordering certificates and validation of event-times, all of which can verify event-ordering receipts published by an event-ordering certification organization without using publication data collecting up event-ordering requests.","According to a first aspect of the present invention, there is provided an event-ordering certification method for an event-ordering certification system having a user apparatus performing an event-ordering request for certifying a chronological sequence of a certain event in time-series events generating a designated digital information, a certification apparatus for drafting a certificate for the event-ordering request of the user apparatus, an audit apparatus for auditing authenticity of the certificate and a communication network for connecting the user apparatus, the certification apparatus and the audit apparatus with each other, the method comprising: an event-ordering request receiving step where the certification apparatus receives the event-ordering request from the user apparatus; a sequentially assigned data-item calculating step where the certification apparatus drafts a sequentially assigned data-item from the digital information included in the event-ordering request in accordance with a predetermined procedure; an event-ordering request aggregating step where, in sequential aggregation trees each of which is completed at regular time intervals by sequentially assigning a series of sequentially assigned data-items to leaves of a directed tree from left thereof, the certification apparatus calculates assigned values for calculable nodes and a root value to be assigned for a root of each sequential aggregation tree after completion of each regular time interval, in accordance with a calculating method of establishing, as an assigned value for a parent, a result value obtained by applying a designated collision-resistant hash function on a juncture value to which respective assigned values assigned to a plurality of nodes having a parent in common are connected; a certificate drafting step where the certification apparatus drafts a certificate containing the sequentially assigned data-item and a first sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the sequentially assigned data-item assigned thereto; a certificate sending step where the certification apparatus sends the certificate to the user apparatus; assuming that: a leaf of the sequential aggregation tree to which the event-ordering request is assigned is defined as a registration point; an information about nodes necessary to calculate a root value of the sequential aggregation tree from the registration point is defined as a complementary information of the certificate; and in the complementary information, a complementary information acquirable at a point of assigning the event-ordering request to the sequential aggregation tree is defined as an immediate complementary information, an audit certificate drafting step where after assigning the event-ordering request to the sequential aggregation tree, the certification apparatus assigns a first audit request to the sequential aggregation tree thereby drafting a first audit certificate in the same way as drafting the certificate, acquires a first immediate complementary information for audit at the point of assigning the first audit request to the sequential aggregation tree, from the sequential aggregation tree and incorporates the first immediate complementary information into the first audit certificate; an audit certificate sending step where the certification apparatus sends the first audit certificate to the audit apparatus; a complementary information request receiving step where after assigning the first audit request to the sequential aggregation tree, the certification apparatus receives a request of the complementary information of the certificate from the user apparatus; a late complementary information drafting step where the certification apparatus acquires a second sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the request of the complementary information assigned thereto and a complementary information acquirable at the point of assigning the request of the complementary information, from the sequential aggregation tree, thereby forming a late complementary information; and a late complementary information sending step where the certification apparatus sends the late complementary information about the certificate to the user apparatus.","According to the second aspect of the present invention, there is also provided an event-ordering certification audit method for an event-ordering certification system having at least one user apparatus performing an event-ordering request for certifying a chronological sequence of a certain event in time-series events generating a designated digital information, a certification apparatus for drafting a certificate for the event-ordering request of the user apparatus, an audit apparatus for auditing authenticity of the certificate and a communication network for connecting the user apparatus, the certification apparatus and the audit apparatus with each other, the method comprising: an event-ordering request receiving step where the certification apparatus receives a first event-ordering request from the user apparatus; a sequentially assigned data-item calculating step where the certification apparatus drafts a sequentially assigned data-item from a digital information included in the first event-ordering request in accordance with a predetermined procedure; an event-ordering request aggregating step where, in sequential aggregation trees each of which is completed at regular time intervals by sequentially assigning a series of sequentially assigned data-items to leaves of a directed tree from left thereof, the certification apparatus calculates assigned values for calculable nodes and a root value to be assigned for a root of each sequential aggregation tree after completion of each regular time interval, in accordance with a calculating method of establishing, as an assigned value for a parent, a result value obtained by applying a designated collision-resistant hash function on a juncture value to which respective assigned values assigned to a plurality of nodes having a parent in common are connected; a certificate drafting step where the certification apparatus drafts a first certificate containing the sequentially assigned data-item and a first sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the sequentially assigned data-item assigned thereto; a certificate sending step where the certification apparatus sends the first certificate to the user apparatus; assuming that: a leaf of the sequential aggregation tree to which the first event-ordering request is assigned is defined as a registration point; an information about nodes necessary to calculate a root value of the sequential aggregation tree from the registration point is defined as a complementary information of the first certificate; and in the complementary information, a complementary information acquirable at a point of assigning the first event-ordering request to the sequential aggregation tree is defined as an immediate complementary information, an audit certificate drafting step where the certification apparatus assigns a plurality of audit requests to the sequential aggregation tree thereby drafting a plurality of audit certificates in the same way as drafting the certificate, acquires immediate complementary information for audit at the point of assigning the respective audit requests to the sequential aggregation tree, from the sequential aggregation tree and incorporates the immediate complementary information for audit into the respective audit certificates; an audit certificate sending step where the certification apparatus sends the audit certificates to the audit apparatus; a complementary information request receiving step where after sending the first certificate to the user apparatus, the certification apparatus receives a request of the complementary information of the first certificate from the user apparatus; a late complementary information drafting step where the certification apparatus acquires a second sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the request of the complementary information assigned thereto and a complementary information acquirable at the point of assigning the request of the complementary information, from the sequential aggregation tree, thereby forming a late complementary information; a late complementary information sending step where the certification apparatus sends the late complementary information about the first certificate to the user apparatus; an audit certificate receiving step where the audit apparatus receives the audit certificates from the certification apparatus; an audit request receiving step where the audit apparatus receives an audit request for the first certificate from the user apparatus, the audit request containing the first certificate and the late complementary information about the first certificate; a first audit certificate selecting step where the audit apparatus selects an audit certificate from the audit certificates on a basis of the first and second sequential aggregation tree specifying information in the audit request for the first certificate, the one audit certificate being generated after the first certificate and before the late complementary information in chronological sequence; a first certificate audit step where the audit apparatus audits validity of the first certificate by verifying, for a specified node in the sequential aggregation tree, whether an assigned value for the specified node contained in the audit certificate selected at the first audit certificate selecting step coincides with an assigned value for the specified node calculated from the audit request for the first certificate or not and, where the audit apparatus further certifies a temporal context between a receipt time of the event-ordering request for the first certificate and a receipt time of the audit request for the audit certificate selected at the first audit certificate selecting step; and an audit result sending step where the audit apparatus sends an audit result of the first certificate to the user apparatus.","According to the third aspect of the present invention, there is also provided an event-ordering certification apparatus connected to both a user apparatus performing an event-ordering request for certifying a chronological sequence of a certain event in time-series events generating a designated digital information thereby promoting the event-ordering certification apparatus to draft a certificate and an audit apparatus for auditing authenticity of the certificate through a communication network mutually, for drafting the certificate, for the event-ordering request of the user apparatus, the event-ordering certification apparatus comprising: event-ordering request receiving means configured to receive the event-ordering request from the user apparatus; sequentially assigned data-item calculating means configured to draft a sequentially assigned data-item from a digital information included in the event-ordering request in accordance with a predetermined procedure; event-ordering request aggregating means configured, in sequential aggregation trees each of which is completed at regular time intervals by sequentially assigning a series of sequentially assigned data-items to leaves of a directed tree from left thereof, to calculate assigned values for calculable nodes and a root value to be assigned for a root of each sequential aggregation tree after completion of each regular time interval, in accordance with a calculating method of establishing, as an assigned value for a parent, a result value obtained by applying a designated collision-resistant hash function on a juncture value to which respective assigned values assigned to a plurality of nodes having a parent in common are connected; certificate drafting means configured to draft a certificate containing the sequentially assigned data-item and a first sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the sequentially assigned data-item assigned thereto; certificate sending means configured to send the certificate to the user apparatus; assuming that: a leaf of the sequential aggregation tree to which the event-ordering request is assigned is defined as a registration point; an information about nodes necessary to calculate a root value of the sequential aggregation tree from the registration point is defined as a complementary information of the certificate; and in the complementary information, a complementary information acquirable at a point of assigning the event-ordering request to the sequential aggregation tree is defined as an immediate complementary information, audit certificate drafting means configured, after assigning the event-ordering request to the sequential aggregation tree, to assign a first audit request to the sequential aggregation tree thereby drafting a first audit certificate in the same way as drafting the certificate, acquire a first immediate complementary information for audit at the point of assigning the first audit request to the sequential aggregation tree, from the sequential aggregation tree and incorporate the first immediate complementary information into the first audit certificate; audit certificate sending means configured to send the first audit certificate to the audit apparatus; complementary information request receiving means configured, after assigning the first audit request to the sequential aggregation tree, to receive a request of the complementary information of the certificate from the user apparatus; late complementary information drafting means configured to acquire a second sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the request of the complementary information assigned thereto and a complementary information acquirable at the point of assigning the request of the complementary information, from the sequential aggregation tree, thereby forming a late complementary information; and complementary information sending means configured to send the late complementary information about the certificate to the user apparatus.","According to the fourth aspect of the present invention, there is also provided an event-ordering certification audit apparatus connected to both at least one user apparatus performing an event-ordering request for certifying a chronological sequence of a certain event in time-series events generating a designated digital information and a certification apparatus for drafting a certificate for the event-ordering request of the user apparatus, through a communication network, for auditing authenticity of the certificate, wherein the certification apparatus comprises: event-ordering request receiving means configured to receive a first event-ordering request from the user apparatus; sequentially assigned data-item calculating means configured to draft a sequentially assigned data-item from a digital information included in the first event-ordering request in accordance with a predetermined procedure; event-ordering request aggregating means configured, in sequential aggregation trees each of which is completed at regular time intervals by sequentially assigning a series of sequentially assigned data-items to leaves of a directed tree from left thereof, to calculate assigned values for calculable nodes and a root value to be assigned for a root of each sequential aggregation tree after completion of each regular time interval, in accordance with a calculating method of establishing, as an assigned value for a parent, a result value obtained by applying a designated collision-resistant hash function on a juncture value to which respective assigned values assigned to a plurality of nodes having a parent in common are connected; certificate drafting means configured to draft a first certificate containing the sequentially assigned data-item and a first sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the sequentially assigned data-item assigned thereto; certificate sending means configured to send the first certificate to the user apparatus; assuming that: a leaf of the sequential aggregation tree to which the first event-ordering request is assigned is defined as a registration point; an information about nodes necessary to calculate a root value of the sequential aggregation tree from the registration point is defined as a complementary information of the first certificate; and in the complementary information, a complementary information acquirable at a point of assigning the first event-ordering request to the sequential aggregation tree is defined as an immediate complementary information, audit certificate drafting means configured to assign a plurality of audit requests to the sequential aggregation tree thereby drafting a plurality of audit certificates in the same way as drafting the certificate, acquire immediate complementary information for audit at the point of assigning the respective audit requests to the sequential aggregation tree from the sequential aggregation tree and incorporate the immediate complementary information for audit into the respective audit certificates; audit certificate sending means configured to send the audit certificates to the audit apparatus; complementary information request receiving means configured, after sending the first certificate to the user apparatus, to receive a request of the complementary information of the first certificate from the user apparatus; late complementary information drafting means configured to acquire a second sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the request of the complementary information assigned thereto and a complementary information acquirable at the point of assigning the request of the complementary information, from the sequential aggregation tree, thereby forming a late complementary information; and late complementary information sending means configured to send the late complementary information about the first certificate to the user apparatus, and wherein the event-ordering certification audit apparatus comprises: audit certificate receiving means configured to receive the audit certificates from the certification apparatus; audit request receiving means configured to receive an audit request for the first certificate from the user apparatus, the audit request containing the first certificate and the late complementary information about the first certificate; first audit certificate selecting means configured to select an audit certificate from the audit certificates on a basis of the first and second sequential aggregation tree specifying information in the audit request for the first certificate, the audit certificate being generated after the first certificate and before the late complementary information in chronological sequence; first certificate audit means configured to audit validity of the first certificate by verifying, for a specified node in the sequential aggregation tree, whether an assigned value for the specified node contained in the audit certificate selected by the first audit certificate selecting means coincides with an assigned value for the specified node calculated from the audit request for the first certificate or not and, also configured to further certify a temporal context between a receipt time of the event-ordering request for the first certificate and a receipt time of the audit request for the audit certificate selected by the first audit certificate selecting means; and audit result sending means configured to send an audit result of the first certificate to the user apparatus.","The fifth aspect of the present invention resides in the provision of an event-ordering certification program that allows the certification apparatus to perform respective steps of the above-mentioned event-ordering certification method.","The sixth aspect of the present invention resides in the provision of an event-ordering certification audit program that allows the certification apparatus to perform respective steps of the above-mentioned event-ordering certification audit method.","According to the seventh aspect of the present invention, there is also provided a program for validation of event-ordering certificates for a user apparatus in an event-ordering certification audit system where at least one user apparatus performing an event-ordering request for certifying a chronological sequence of a certain event in time-series events generating a designated digital information, a certification apparatus for drafting a certificate for the event-ordering request of the user apparatus and an audit apparatus for auditing authenticity of the certificate are connected with each other through a communication network, wherein the certification apparatus comprises: event-ordering request receiving means configured to receive a first event-ordering request from the user apparatus; sequentially assigned data-item calculating means configured to draft a sequentially assigned data-item from a digital information included in the first event-ordering request in accordance with a predetermined procedure; event-ordering request aggregating means configured, in sequential aggregation trees each of which is completed at regular time intervals by sequentially assigning a series of sequentially assigned data-items to leaves of a directed tree from left thereof, to calculate assigned values for calculable nodes and a root value to be assigned for a root of each sequential aggregation tree after completion of each regular time interval, in accordance with a calculating method of establishing, as an assigned value for a parent, a result value obtained by applying a designated collision-resistant hash function on a juncture value to which respective assigned values assigned to a plurality of nodes having a parent in common are connected; certificate drafting means configured to draft a first certificate containing the sequentially assigned data-item and a first sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the sequentially assigned data-item assigned thereto; certificate sending means configured to send the first certificate to the user apparatus; assuming that: a leaf of the sequential aggregation tree to which the first event-ordering request is assigned is defined as a registration point; an information about nodes necessary to calculate a root value of the sequential aggregation tree from the registration point is defined as a complementary information of the first certificate; and in the complementary information, a complementary information acquirable at a point of assigning the first event-ordering request to the sequential aggregation tree is defined as an immediate complementary information, audit certificate drafting means configured to assign a plurality of audit requests to the sequential aggregation tree thereby drafting a plurality of audit certificates in the same way as drafting the certificate, acquire immediate complementary information for audit at the point of assigning the respective audit requests to the sequential aggregation tree from the sequential aggregation tree and incorporate the immediate complementary information for audit into the respective audit certificates; audit certificate sending means configured to send the audit certificates to the audit apparatus; complementary information request receiving means configured, after sending the first certificate to the user apparatus, to receive a request of the complementary information of the first certificate from the user apparatus; late complementary information drafting means configured to acquire a second sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the request of the complementary information assigned thereto and a complementary information acquirable at the point of assigning the request of the complementary information, from the sequential aggregation tree, thereby forming a late complementary information; and late complementary information sending means configured to send the late complementary information about the first certificate to the user apparatus, and wherein the audit apparatus comprises: audit certificate receiving means configured to receive the audit certificates from the certification apparatus; audit request receiving means configured to receive an audit request for the first certificate from the user apparatus, the audit request containing the first certificate and the late complementary information about the first certificate; first audit certificate selecting means configured to select an audit certificate from the audit certificates on a basis of the first and second sequential aggregation tree specifying information in the audit request for the first certificate, the audit certificate being generated after the first certificate and before the late complementary information in chronological sequence; first certificate audit means configured to audit validity of the first certificate by verifying, for a specified node in the sequential aggregation tree, whether an assigned value for the specified node contained in the audit certificate selected by the first audit certificate selecting means coincides with an assigned value for the specified node calculated from the audit request for the first certificate or not and, also configured to further certify a temporal context between a receipt time of the event-ordering request for the first certificate and a receipt time of the audit request for the audit-certificate selected by the first audit certificate selecting means; and audit result sending means configured to send an audit result of the first certificate to the user apparatus, and wherein the event-ordering certification program allows the user apparatus to perform: an event-ordering request sending step of sending the first event-ordering request to the certification apparatus; a certificate receiving step of receiving first event-ordering request from the certification apparatus; a complementary information request sending step of sending the request of the complementary information of the first certificate to the certification apparatus; a complementary information receiving step of receiving the complementary information of the first certificate from the certification apparatus; an audit request sending step of sending the audit request to the audit apparatus; and an audit result receiving step of receiving the audit result for the first certificate.","According to the eighth aspect of the present invention, there is also provided a program for validation of event-ordering certificates for allowing a computer to verify authenticity of certificates, the computer being connected to first and second user apparatuses, each of which performs an event-ordering request for certifying a chronological sequence of a certain event in time-series events generating a designated digital information, and an event-ordering certification apparatus for drafting the certificates for a plurality of event-ordering requests of the first and second user apparatuses through a communication network, wherein the event-ordering certification apparatus comprises: event-ordering request receiving means configured to receive the event-ordering requests from the first and second user apparatuses; sequentially assigned data-item calculating means configured to draft sequentially assigned data-items from digital information included in the event-ordering requests in accordance with a predetermined procedure; event-ordering request aggregating means configured, in sequential aggregation trees each of which is completed at regular time intervals by sequentially assigning a series of sequentially assigned data-items to leaves of a directed tree from left thereof, to calculate assigned values for calculable nodes and a root value to be assigned for a root of each sequential aggregation tree after completion of each regular time interval, in accordance with a calculating method of establishing, as an assigned value for a parent, a result value obtained by applying a designated collision-resistant hash function on a juncture value to which respective assigned values assigned to a plurality of nodes having a parent in common are connected; sequential aggregation tree storing means configured to store an information about the sequential aggregation trees produced by the event-ordering request aggregating means; assuming that: a leaf of the sequential aggregation tree to which the sequentially-assigned data-item drafted from each of the event-ordering requests is assigned is defined as a registration point; an information about nodes necessary to calculate a root value of the sequential aggregation tree from the registration point is defined as a complementary information of the registration point; in the complementary information, a complementary information acquirable at a point of assigning each of the sequentially assigned data-item to the sequential aggregation tree is defined as an immediate complementary information, while a complementary information acquirable after the point of assigning each of the sequentially assigned data-item to the sequential aggregation tree is defined as a late complementary information; the late complementary information of a leaf a determined at a point of completing an assignation for a leaf a on the right of the leaf a in the sequential aggregation tree is defined as \u201clate complementary information of the leaf a at the leaf a\u201d; and further a leaf of the sequential aggregation tree to which the sequential assigned data-item drafted by a new event-ordering request is defined as a new registration point, registration point storing means configured to store an information about the registration points of the event-ordering requests with respect to each of the user apparatuses; certificate drafting means configured to integrate, from the information stored in the respective storing means, a sequentially assigned data-item for the new registration point, a sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the sequentially assigned data-item assigned thereto, an immediate complementary information about the new registration point and a late complementary information of all past registration points of each of the user apparatuses, thereby drafting a certificate for the new registration point; and certificate sending means configured to send the certificates to the user apparatuses; wherein each of the user apparatuses comprises: event-ordering request sending means configured to send the event-ordering requests to the event-ordering certification apparatus; certificate receiving means configured to receive the certificates for the event-ordering requests from the event-ordering certification apparatus; certificate storing means configured to store the certificates received; validation request sending means configured to send a certificate for validation to the computer; and validation result receiving means configured to receive a validation result of the certificate for validation from the computer; wherein the program for validation of event-ordering certificates allows the computer to perform: a certificate receiving step of receiving two certificates for validation from the first and second user apparatuses respectively or two certificates for validation from the first user apparatus; assuming that one of the two certificates judged as being temporally former in publishing order is a first certificate, while the other of the two certificates judged as being temporally latter in publishing order is a second certificate, based on the sequential aggregation tree specifying information of the two certificates received, a sequential aggregation tree specifying information sending step of sending the sequential aggregation tree specifying information in the second certificate to the user apparatus receiving the first certificate; a late complementary information receiving step of receiving the late complementary information about the first certificate at a registration point after publishing the second certificate, from the user apparatus receiving the first certificate; a validation step of verifying, for a specified node in the sequential aggregation tree, whether an assigned value for the specified node contained in the second certificate coincides with an assigned value for the specified node calculated from the first certificate and the late complementary information or not, thereby certifying validity of the first and second certificates and that the registration point of the first certificate is temporally ahead of the registration point of the second certificate, based on a validation result; and a validation result sending step of sending the validation result to both or either of the first and second user apparatuses.","According to the ninth aspect of the present invention, there is also provided a program for validation of event-ordering certificates for allowing a computer to verify authenticity of certificates, the computer being connected to first and second user apparatuses, each of which performs an event-ordering request for certifying a chronological sequence of a certain event in time-series events generating a designated digital information, and an event-ordering certification apparatus for drafting the certificates for a plurality of event-ordering requests of the first and second user apparatuses through a communication network, wherein the event-ordering certification apparatus comprises: event-ordering request receiving means configured to receive the event-ordering requests from the first and second user apparatuses; sequentially assigned data-item calculating means configured to draft sequentially assigned data-items from digital information included in the event-ordering requests in accordance with a predetermined procedure; event-ordering request aggregating means configured, in sequential aggregation trees each of which is completed at regular time intervals by sequentially assigning a series of sequentially assigned data-items to leaves of a directed tree from left thereof, to calculate assigned values for calculable nodes and a root value to be assigned for a root of each sequential aggregation tree after completion of each regular time interval, in accordance with a calculating method of establishing, as an assigned value for a parent, a result value obtained by applying a designated collision-resistant hash function on a juncture value to which respective assigned values assigned to a plurality of nodes having a parent in common are connected; sequential aggregation tree storing means configured to store an information about the sequential aggregation trees produced by the event-ordering request aggregating means; assuming that: a leaf of the sequential aggregation tree to which the sequentially-assigned data-item drafted from each of the event-ordering requests is assigned is defined as a registration point; an information about other nodes necessary to calculate a root value of the sequential aggregation tree from the registration point is defined as a complementary information of the registration point; in the complementary information, a complementary information acquirable at a point of assigning each of the sequentially assigned data-item to the sequential aggregation tree is defined as an immediate complementary information, while a complementary information acquirable after the point of assigning each of the sequentially assigned data-item to the sequential aggregation tree is defined as a late complementary information; the late complementary information of a leaf a determined at a point of completing an assignation for a leaf a on the right of the leaf a in the sequential aggregation tree is defined as \u201clate complementary information of the leaf a at the leaf a\u201d; and further a leaf of the sequential aggregation tree to which the sequential assigned data-item drafted by a new event-ordering request is defined as a new registration point, registration point storing means configured to store an information about an immediately preceding registration point with respect to each of the user apparatuses; certificate drafting means configured to integrate, from the information stored in the respective storing means, a sequentially assigned data-item for the new registration point, a sequential aggregation tree specifying information for specifying the sequential aggregation tree and a leaf thereof both having the sequentially assigned data-item assigned thereto, an immediate complementary information about the new registration point and a late complementary information about the immediately preceding registration point of each of the user apparatuses at the new registration point, thereby drafting a certificate for the new registration point; and certificate sending means configured to send the certificates to the user apparatuses; defining that a rightmost registration point of the respective registration points of each of the user apparatuses is referred to as a provisional terminal point and that to calculate all of the complementary information about a designated registration point acquirable at a point of completing an assignment for the provisional terminal point is referred to as an incremental completion for a certificate of the designated registration point, wherein each of the user apparatuses comprises: event-ordering request sending means configured to send the event-ordering requests to the event-ordering certification apparatus; certificate receiving means configured to receive the certificates for the event-ordering requests from the event-ordering certification apparatus; certificate storing means configured to store the certificates received; incremental completion means configured to perform the incremental completion to a certificate for validation of the plural certificates received and stored; validation request sending means configured to send a certificate for validation to the computer; and validation result receiving means configured to receive a validation result of the certificate for validation from the computer; wherein the program for validation of event-ordering certificates allows the computer to perform: a certificate receiving step of receiving two certificates for validation from the first and second user apparatuses respectively or two certificates for validation from the first user apparatus; assuming that one of the two certificates judged as being temporally former in publishing order is a first certificate, while the other of the two certificates judged as being temporally latter in publishing order is a second certificate, based on the sequential aggregation tree specifying information of the two certificates received, a sequential aggregation tree specifying information sending step of sending the sequential aggregation tree specifying information in the second certificate to the user apparatus receiving the first certificate; a late complementary information receiving step of receiving the late complementary information about the first certificate at a registration point after publishing the second certificate, from the user apparatus receiving the first certificate; a validation step of verifying, for a specified node in the sequential aggregation tree, whether an assigned value for the specified node contained in the second certificate coincides with an assigned value for the specified node calculated from the first certificate and the late complementary information or not, thereby certifying validity of the first and second certificates and that the registration point of the first certificate is temporally ahead of the registration point of the second certificate, based on a validation result; and validation result sending step of sending the validation result to both or either of the first and second user apparatuses.","According to the tenth aspect of the present invention, there is also provided an event-time validation program readable by a computer for verifying a time that the user apparatus executing the above-mentioned program for validation of event-ordering certificates applies on the event-ordering request.","Embodiments of the present invention will be described below in detail, with reference to drawings.",{"@attributes":{"id":"p-0108","num":"0107"},"figref":"FIG. 3","b":["100","100","1","2","3","1","4","1","2","2","2","1","3"],"i":["i ","i ","i "]},"Note that the system architecture of the event-ordering certification system  is not limited to this only and therefore, it may be modified to various forms so long as its identity in function. For instance, as shown in , event-ordering certification user verifying apparatuses (referred to as \u201cuser verifying apparatuses\u201d below) (i=a, b, . . . , n) may verify the receipts in place of the user apparatuses . Additionally, in place of the user apparatuses , an electronic-information publication apparatus  may obtain published data from the certification apparatus  and discloses the published data. Moreover, the computer network  may be replaced by other communicating means, such as postal mail. Note that the constitution and operation of the event-ordering certification system will be described with reference to the system  of .","The certification apparatus  comprises a transmitting\/receiving part  for transmitting and receiving data to and from the user apparatuses and the audit apparatus  through the computer network , an event-ordering request aggregation part  for arranging digital data (as event-ordering requests) transmitted from the user apparatuses with the use of a sequential aggregation tree, an audit-information drafting part  for drafting audit information to be transmitted to the audit apparatus , a complementary data acquiring part  for acquiring complementary data in response to complementary data requests from the user apparatuses , a digital-signature drafting part  for attaching attach a high-intensity digital signature to data where respective contents of plural receipts issued by the certification apparatus  for a constant period are associated with each other, an electronic information publishing part  for giving publicity to the data having the high-intensity digital signature and a memory part  for memorizing the receipts and information about the event-ordering certification.","As mentioned above, the event-ordering request aggregation part  operates to aggregate the event-ordering requests with the use of the sequential aggregation tree. This sequential aggregation tree will be described with reference to . The sequential aggregation tree of  is a sequential aggregation tree that is completed for a certain period (e.g. one week, a cycle for the ordering apparatus  to give publicity to coordinating data, which will be referred to as \u201csequential aggregation period\u201d). In the sequential aggregation tree, digital data produced from all or part of digital data included in the event-ordering requests from the users' apparatuses in accordance with a designated \u201csequentially assigned data\u201d calculating procedure is sequentially assigned to respective leaves from the left side with time (note: the assigned digital data will be referred to as \u201csequentially assigned data-item\u201d, for example, a hash value of the digital data included in the event-ordering request).","A calculating method of values assigned to respective nodes (except leaf) in the sequential aggregation tree is as follows. An assigned value of a parent in the sequential aggregation tree is obtained by calculating a hash value as a result of connecting an assigned value H\u2032 of a left-side child with an assigned value H\u2033 of a right-side child (conjunction between a bit row and a bit row) and further applying a designated \u201ccollision-resistant\u201d one-way hash function. Here, the resultant value is expressed by h(H\u2032\u2225H\u2033). In this way, it is performed to calculate an assigned value at high level by assigned values at low level and finally calculate an assigned value (root value) at the highest level (root).","We now describe an example of a sequential aggregation tree having sixteen leaves, as shown in . The number of leaves of the sequential aggregation tree and its height do not become definite unless the sequential aggregation period is completed. Further, in the sequential aggregation tree, the assignment of values to the leaves is carried out from left, in sequence. The assignments of values to nodes higher than level  (i.e. non-leaves) are carried out incrementally if possible. Accordingly, for a plurality of nodes on the same vertical line of , the assignments of values to the nodes are carried out at about the same time in the same processing unit. Under the notation that a node at level j and numbered (index) i is represented by (j, i) and an assigned value of (j, i) is represented by V(j, i), the concrete example of  will be described.","Suppose a situation that sequential assigned data is assigned to node (, ), in other words, a hash value to be assigned to a certain \u201csequential aggregation tree\u201d leaf is represented by V(, ). Then, in order to calculate a root value H (=V(, )) from this hash value V(, ), it has only to link V(, ) to V(, ) from the left side thereby calculating a hash value h\u2032; V(, ) to the hash value h\u2032 from the right side thereby calculating a hash value h\u2032; V(, ) to the hash value h\u2032 from the left side thereby calculating a hash value h\u2032; and link V(, ) to the hash value h\u2032 from the right side thereby calculating a hash value H(=V(, )), in order. With the above procedure, when it becomes possible to calculate the root value H from V(, ) and its complementary data (e.g. V(, ), V(, ), V(, ), V(, ) in this case), we can say \u201cV(, ) links with the root value H through the hash function h\u201d. Additionally, the complementary data of V(, ) in the sequential aggregation tree (referred to as \u201csequentially-aggregated complementary data\u201d) is given by\n\n","The event-ordering reply drafting part  drafts a certification reply containing a receipt EOC(y) as shown in  and sends it to the user apparatus . The receipt EOC(y) is constructed so as to contain: digital data y sent from a user; sequentially assigned data-item z calculated from the digital data y by the above-mentioned calculation procedure for sequentially assigned data-item; a \u201csequential-aggregation\u201d tree number enabling a sequential aggregation tree having the data-item z assigned to be identified uniquely; a \u201csequential aggregation tree\u201d leaf number enabling a \u201csequential aggregation tree\u201d leaf having the data-item z assigned to be identified uniquely; and a part HK of sequentially-aggregated complementary data acquirable at that time. The above data part HK will be referred to as \u201cimmediate complementary data\u201d. In the modification, the receipt EOC(y) may be constructed on deletion of the immediate complementary data HK.","The event receipt EOC(y) is allowed to be sent with a digital signature using a secret key (secret key for signature) of a public key cryptosystem key-pair that the certification apparatus  prepares in advance. In this case, it is established that the user apparatus has access to a public key of the public key cryptosystem key-pair by means of a public-key cryptography board or the like.","Note that sequential aggregation complementary data acquirable after publishing a receipt EOC(y) in question will be referred to as \u201clate complementary data\u201d. That is, at that stage of drafting the receipt EOC(y), only the immediate complementary data is transmitted to the user apparatus , while the late complementary data is transmitted to the user apparatus when it is required after publishing the receipt EOC(y) in question. In , for instance, node assigned values V(, ) and V(, ) constitute the immediate complementary data about node (, ), while node assigned values V(, ) and V(, ) constitute the late complementary data acquirable on and after node (, ) has been assigned. For a sequential aggregation tree leaf number i, V(, i) may be represented by V(i) in short.","In operation, when the complementary data acquiring part  receives a request for the above-mentioned late complementary data from the user apparatus , the part  sends back all of the information at the present moment (i.e. tree number and leaf number to which the relevant request is assigned) and the sequential aggregation complementary data (positional information, assigned value) which has been already determined at this moment, to the user apparatus ","Referring to , the contents of the sequential aggregation complementary data will be described in detail.","As for one leaf  of the sequential aggregation tree, its complementary data CToken(t, t\u2032) at another leaf t\u2032 positioned on the right of the leaf t will be defined as follows.","A path extending from the leaf  up to a root of the sequential aggregation tree is called \u201croot path of t\u201d. Further, a row of nodes consisting of brotherly nodes for nodes belonging to the above root path of t but the root itself is called \u201cauthentication path of t\u201d. Note that a detailed definition of the authentication path will be described later. In respective constituents (nodes) of an authentication path, a row of constituents whose assigned values have already become definite at the point of the establishment of an assigned value for a leaf t on the right of t will be referred to as \u201cauthPathD(t, t)\u201d and also called \u201cauthentication path for t at t\u201d hereinafter. In connection, one resulting from adding the information about assigned values to the above row of constituents will be referred to as \u201cauthPathDV(t, t)\u201d and also called \u201cvalued authentication path for t at t\u201d hereinafter.","From above, it will be understood that authPathDV(t, t\u2032) constitutes the complementary data CToken(t, t\u2032) while involving even information that the receipt EOC(y) does not involve.","Even when t\u2032 is one leaf of a next sequential aggregation tree SBT\u2032 produced after completing a generative period (i.e. sequential aggregation period) of the preceding sequential aggregation tree SBT containing t, authPathDV(t, t\u2032) involves only the information about the tree SBT. At this time, CToken(t, t\u2032) in combination with the receipt EOC(y) contains information enough to calculate the root value of the sequential aggregation tree for the relevant sequential aggregation period.","In , for instance, CToken(t, t\u2032) contains one row composed of a first pair of positional information of a and its assigned value (pair: ((, ), V(a))) and a second pair of positional information of a and its assigned value (pair: ((, ), V(a))). The row is represented by [((, ), V(a)), ((, ), V(a))].","In the following descriptions, we define complementary data that allows a root value of a sequential aggregation tree to be calculated in combination with an assigned value of the sequential aggregation tree contained in a receipt as \u201ccomplete complementary data of the receipt\u201d. In connection, we refer to complementary data that would allow the root value of the sequential aggregation tree to be calculated in combination with the assigned value and the immediate complementary data contained in the receipt as \u201ccomplete late complementary data\u201d.","The audit information drafting part  acquires audit information from the sequential aggregation tree and sends it to the audit apparatus . More in detail, the audit information is formed by an event-ordering receipt certificate for audit, which is produced at an audit point in the sequential aggregation tree as follows. Note that the terminology \u201cevent-ordering receipt certificate for audit\u201d will be referred to as\u2014audit receipt\u2014below. Here, the audit point designates a leaf in a sequential aggregation binary tree that an event-ordering request for audit from the audit apparatus  is assigned. Note that the terminology \u201cevent-ordering request for audit\u201d will be referred to as\u2014audit request\u2014below.","Although a single audit point is shown in , it is a matter of course that there may be provided some audit points in accordance with a designated algorithm. For the purpose of a later-mentioned audit against a receipt for an event-ordering request, the audit point may be positioned in anyplace so long as it coincides with one leaf (e.g. node (, ) in ) corresponding to the event-ordering request or another leaf on the right (temporally behind).","The format of an audit receipt is identical to that of a receipt to be sent to the user apparatus . Note that digital data y as a basis of calculating a sequentially assigned data-item may be data that was sent from the audit apparatus  to the certification apparatus , as an audit request. Alternatively, the digital data y may be produced by the relevant certification apparatus  in accordance with a predetermined procedure for the audit apparatus  in question. Additionally, on the assumption of drafting a digital document as an object of event-ordering certification in the audit receipt in accordance with a predetermined procedure, a hash value as a result of applying a predetermined hash function on the digital document may be adopt as the digital data for calculating the sequentially assigned data-item.","The user apparatus comprises a transmitting\/receiving part  for transferring data to and from the certification apparatus  and the audit apparatus  through the computer network , an event-ordering certification requesting part  for performing the event-ordering requests containing designated digital data, a complementary data requesting part  for requesting complementary data for a receipt (receipt certificate) acquirable at the point of requesting, an event-ordering certification verifying part  for verifying the receipt and a memory part  for storing the information about event-ordering certification containing the receipt.","Here, it is noted that the event-ordering certification verifying part  has the following validation functions for the receipt.","First, the event-ordering certification verifying part  has the zeroth (0.) validation function to perform a digital-signature validation to a digital signature if it is included in the receipt.","As the first validation function, it is performed to verify whether the sequentially assigned data-item contained in the receipt is linked with the public information published with assured authenticity, such as high-intensity digital signature by the certification apparatus .","As described below, the event-ordering certification verifying part  has the second function of verifying the validity of the receipt by using the audit apparatus  even before publishing the public information from the certification apparatus .","The audit apparatus  comprises a transmitting receiving part  for transferring data to and from the certification apparatus  and the user apparatuses through the computer network , an event-ordering certification audit part  that verifies a receipt by using both audit request information from the user apparatus and part's own audit information when receiving an audit request for the receipt from the user apparatus and sends a result of validation to the user apparatus , and a memory part  for storing audit information including the audit receipt.","Here, we now describe the function of the event-ordering certification audit part  with reference to . In , because of an audit point (, ), the audit information that the audit apparatus  receives at this point of time comprises V(, ) and V(, ) as mentioned above. On the other hand, the user apparatus sends, as the audit request information, V(, ) and V(, ), V(, ) and V(, ) as the sequential aggregation complementary data. Regarding the incorporation of V(, ) into the audit request information, it is noted that it becomes possible for the user apparatus to acquire V(, ) (not included in the immediate complementary data) from the certification apparatus  at the point of requesting the validation (i.e. on and after the audit point (, ) temporally behind the issue of the point (, )) and therefore, the user apparatus actually acquires V(, ) as the late complementary data from the certification apparatus  and incorporates it into the audit request information. In this way, the event-ordering certification audit part  verifies whether its own audit information V(, ) coincides with V(, ) introduced by the audit request information from the user apparatus ","Hereinafter, a \u201csequential aggregation tree\u201d leaf to which a sequentially assigned data-item drafted by an event-ordering request from the user apparatus is assigned will be referred to as \u201cuser point\u201d, while a \u201csequential aggregation tree\u201d leaf to which a sequentially assigned data-item drafted by an audit request from the audit apparatus  is assigned will be referred to as \u201caudit point\u201d.","We refer to a node ((, ) in ) in the sequential aggregation tree to be verified comparatively as \u201cauthentication point\u201d, after. Generally, when a certain user point number is smaller than an audit point number, a label (assigned value) for the authentication point is included in the audit information. Further, the label for the authentication point is included in a label calculable from the late complementary data that the user apparatus could receive on and after the point of completing an event-ordering certification process at the audit point. In a sequential aggregation tree, therefore, if there are sequentially arranged a user point, an audit point and a request point for late complementary data in order from left, the above-mentioned validation could be accomplished constantly. This reason of accomplishment will be described later (see later-mentioned Feature 2 of Sequential Aggregation Tree, Item 3).","In order for the user apparatus to ask the audit apparatus  to perform the second validation for a certain receipt, an audit point of the audit apparatus  has to be present between one leaf \u03c4 where an event-ordering request for the above receipt is assigned and another leaf \u03c4\u2032 where a request of late complementary data for the above receipt is assigned (including also leaves \u03c4, \u03c4\u2032).","Note that the above apparatuses are formed by electronic apparatuses each having a CPU (Central Processing Unit) having at least a calculating function and a control function, a main memory having a function to store programs and data, such as RAM (Random Access Memory), and a secondary memory capable of continuing to memorize data even at powered-off, such as HD) (Hard Disc). The operations of respective parts of the certification apparatus  (i.e. the event-ordering request aggregating part , the event-ordering drafting part , the audit information drafting part , the complementary data acquiring part , the digital signature drafting part  and the electronic information publishing part ), the operations of respective parts of the user apparatus (i.e. the event-ordering requesting part , the complementary data requesting part  and the event-ordering verifying part ) and the operation of the event-ordering certification audit part  of the audit apparatus , are nothing but respective crystallizations of the above calculating\/control functions of the above central processing unit. Additionally, the memory part  of the certification apparatus , the memory part  of the user apparatus and the memory part  of the audit apparatus  are respectively equipped with the above-mentioned functions of either the main memory or the secondary memory.","Each program for executing a variety of processes in this embodiment is stored in either the main memory or the secondary memory mentioned above. In connection, this program may be recorded in a computer-readable recording medium (e.g. hard disc, flexible disc, CD-ROM, MO, DVD-ROM, etc.) or delivered through a communication network.","In the event-ordering certification system  constructed above, an event-ordering certification method and an event-ordering certification validation method will be described with reference to . In the figures,  is a sequence diagram to explain the operation of the certification apparatus  to draft a receipt (i.e. a receiving certificate) and an audit receipt (i.e. a receiving certificate for audit) for one sequential aggregation period.  is a flow chart to explain the operation of the user apparatus to apply a first validation on the receipt.  is a sequence diagram to explain the operation of the user apparatus to apply a second validation on the receipt.","First of all, the event-ordering certification method will be described with reference to .","When the user apparatus sends an event-ordering request including digital data  to the event-ordering certification apparatus , it receives the event-ordering request including the digital data y through the transmitting\/receiving part  (steps S, S).","Next, the event-ordering request aggregation part  calculates a sequentially-assigned data-item z from the digital data y as partial or all input and further assigns the sequentially-assigned data-item z to a \u201csequential aggregation tree\u201d leaf to construct a sequential aggregation tree incrementally. While, the event-ordering certification drafting part  drafts a receipt EOC(y) and successively sends it to the user apparatus through the transmitting\/receiving part  (steps S, S, S).","In this way, the user apparatus can acquire the receipt EOC(y) (step S). In connection, the user apparatus may incorporate immediate complementary data acquirable at that time into the receipt EOC(y). However, it should be noted that the receipt EOC(y) does not include the late complementary data.","In the same way, when the audit apparatus  sends an audit event-ordering request, the event-ordering certification apparatus  receives the audit event-ordering request including through the transmitting\/receiving part  (steps S, S).","Next, the event-ordering request aggregation part  assigns a sequentially assigned data-item for audit calculated by the audit event-ordering request to a sequential aggregation-tree leaf to construct a sequential aggregation-tree incrementally. While, the audit-information drafting part  drafts a receipt certificate for audit (referred to as \u201caudit receipt\u201d after) and successively sends it to the audit apparatus  through the transmitting\/receiving part  (steps S, S, S).","In this way, the audit apparatus  can obtain the audit receipt (step S).","Next, when the user apparatus sends a request of late complementary data for the obtained receipt to the event-ordering certification apparatus , it receives the request of late complementary data through the transmitting\/receiving part  (steps S, S).","Then, the complementary-data acquiring part  of the certification apparatus  acquires complementary data for the receipt, which can be acquired at that time and further sends this late complementary data to the user apparatus through the transmitting\/receiving part  (steps S, S).","In this way, the user apparatus can acquire the late complementary data necessary for audit (step s).","The above-mentioned operation of the certification apparatus  is repeated in a certain period for sequential aggregation (i.e. sequential aggregation period). When the sequential aggregation period is completed, a root value in the sequential aggregation tree is calculated. Then, the electronic-information publishing part  gives publicity to the root value (steps S, S, S). In connection, in view of assuring the authenticity of the information, the electronic-information publishing part  may disclose published information having a high-intensity digital signature with the use of the \u201chigh-intensity\u201d digital-signature drafting part .","According to the event-ordering certification method of , the audit apparatus  transmits the request of audit information to the certification apparatus  and correspondingly, it transmits the audit information to the audit apparatus . Alternatively, the certification apparatus  may send the audit information to the audit apparatus  automatically.","Referring to , we now describe a method for validation of event-ordering certificates utilizing the published information disclosed electronically. This corresponds to the first validation function of the user apparatus .","First, the user apparatus calculates a root value \u201cRhcal\u201d in the sequential aggregation tree by the digital data y as the request of certification that the apparatus has sent to the certification apparatus , the receipt EOC(y), the sequential aggregation complementary data included in the late complementary data (note: At this point, all sequential aggregation complementary data can be acquired) (step S).","Next, it is executed to acquire a root value RH for the same sequential aggregation period published with the high-intensity digital signature electronically and further, it is executed to judge whether this root value RH is identical to the calculated root value \u201cRhcal\u201d (steps S, S).","If the above validation is completed in success, then it is possible to confirm that the receipt is not subjected to tamper (step S). On the other hand, if the above validation is failed, it is possible to confirm that the receipt is subjected to tamper (step S). Consequently, after the information is published electronically while ensuring the authenticity by means of the high-intensity digital signature, it is possible to verify that the receipt published by the certification apparatus  is one which has been issued, during said sequential aggregation period, in an order distinguishable with a \u201csequential aggregation tree\u201d leaf number included in the receipt, against original data included in the receipt.","Referring to , we now describe the method for validation of event-ordering certificates using the audit apparatus . This corresponds to the second validation function of the user apparatus ","Before an audit request, the user apparatus requests late complementary data of a receipt objective of validation for the certification apparatus  (step S). When the certification apparatus  receives this request through the transmitting\/receiving part , complementary-data acquiring part  acquires either the late complementary data obtained by subtracting instant complementary data from all of the late complementary data acquirable at that time (case: the instant complementary data is included in the receipt) or all of the late complementary data acquirable at that time (case: no instant complementary data is included in the receipt) and successively, the part  sends the so-acquired late complementary data to the user apparatus through the transmitting\/receiving part  (steps S, S, S). With this acquirement of the complementary data by the user apparatus , the event-ordering certification verifying part  sends audit request information including the receipts received in advance to the audit apparatus  (steps S, S).","The audit apparatus  receives the audit request information through the transmitting\/receiving part  (step S). In respective leaves of a sequential aggregation tree where audit receipts on previous reception are assigned, the event-ordering certification audit part  calculates an audit point a between a \u201csequential aggregation tree\u201d leaf \u03c4 that the receipt in the above audit request information on this reception is assigned and a leaf \u03c4\u2032 included in the late complementary information (step S). Next, the audit apparatus  calculates a certification point for the leaf \u03c4 by the audit point \u03b1 from the audit request information and further calculates an assigned value \u201cAcal\u201d for the so-calculated certification point (step S). On the other hand, the event-ordering certification audit part  acquires an assigned value A of this certification point that the apparatus  has already acquired as the audit information, from the memory part  and judges whether the assigned value A of the certification point coincides with the assigned value \u201cAcal\u201d of the certification point on calculation (steps S, S).","If the above validation is completed in success, then it is possible to confirm that the receipt is not subjected to tamper (step S). On the other hand, if the above validation is failed, it is possible to confirm that the receipt is subjected to tamper (step S). The event-ordering certification audit part  sends this audit result to the user apparatus through the transmitting\/receiving part , while the user apparatus receives the audit result (step S, S).","Consequently, even before publication an electronic publishing organization, each user apparatus can absolutely verify that the receipt published by the certification apparatus  is one that was issued, during said sequential aggregation period, in an order distinguishable with a \u201csequential aggregation tree\u201d leaf number included in the receipt, against original data included in the receipt. Note that the above audit result may contain an identifier of the audit point \u03b1. In this case, the user apparatus can obtain an assurance that the registration of an event-ordering request corresponding to the receipt requiring the above audit was carried out before the registration of an audit event-ordering request corresponding to the audit point \u03b1, from the audit apparatus .","Note that in the process at step S, it may be carried out for the audit apparatus  to attach a digital signature to the information containing the complementary data that the audit apparatus  has received, with the use of a signature secret key of the certification audit apparatus . Then, the result of validation with the digital signature is transmitted to the user apparatus . Consequently, even if an effective digital signature is not available for the root value of the sequential aggregation tree on the presupposition that the digital signature by the audit apparatus  is credible, it becomes possible for a user using the user apparatus to certify the validity of event-ordering certification using the above receipt against a third person, objectively.","Next, we describe the second validation, that is, a validation method of event-ordering certification using the audit apparatus , in detail.","Note that the following description is based on the premise that a point of time of starting the service of the event-ordering certification system  coincides with an origin of time; one parameter (e.g. one second, one milli-second, etc.) is established as a clocking unit; and a time point is represented by an integral number as a result of clocking a passage of time since the above origin of time by the above clocking unit.","Here, some preliminary definitions are given to explain the validation method of event-ordering certification.","In a sequential aggregation tree SBT, one node is identified by its level j and its in-level number i. As for this node p, its level and number are expressed by \u201clevel(p)\u201d and \u201cindex(p)\u201d, respectively.","Additionally, \u201cleaf(SBT, i)\u201d represents a leaf in the sequential aggregation tree SBT, which is identified with the leaf number i in the sequential aggregation tree. A series of processes of accepting an event-ordering request forming the origin of assigning assigned values to the leaf(SBT, i) sequentially and further assigning an assigned value to the same leaf will be referred to as \u201cprocessing round\u201d and represented by \u201cround(SBT, i)\u201d. When it is obvious from the context that which of sequential aggregation tress is being discussed now, they may be represented by \u201cleaf(i)\u201d and \u201cround(i)\u201d simply.","Identification numbers starting from zero are applied to sequential aggregation trees in order of generation. This number will be referred to as \u201csequential aggregation tree number\u201d hereinafter. The number of leaves in an nsequential aggregation tree will be represented by \u201cN(n)\u201d.","Both sequential aggregation tree-number n and sequential aggregation tree leaf-number i are given to each receipt. Thus, a sequential aggregation tree leaf having the receipt issued can be designated with these two numbers in pairs. The order between two extended leaf identifiers \u03c5=(n, i) and \u03c5=(n, i) is defined with the use of lexicographic order. That is, \u03c5<\u03c5 defines either n<n or n=n and i<i. Further, \u03c5<\u03c5 defines either \u03c5<\u03c5 or \u03c5=\u03c5. \u201c\u03c5=(n, i)\u201d designates an extended leaf identifier. If there exists sequential aggregation tree leaf identified with this extended leaf identifier, then this leaf is represented by leaf(\u03c5)=leaf(n, i). In some cases, \u201cleaf(\u03c5)\u201d may be referred to as \u201cleaf \u03c5\u201d simply. In case of an audit point (or user point), \u201cleaf(\u03c5)\u201d may be referred to as \u201caudit point (or user point) \u03c5\u201d.","Additionally, as for a leaf(SBT, i) in a sequential aggregation tree SBT in question, the receipt time of an event-ordering request forming the origin of assigning assigned values to respective leaves of the above sequential aggregation tree SBT will be referred to as \u201ctime corresponding to the leaf\u201d and represented by \u201ctime(SBT, i)\u201d or \u201ctime(i)\u201d simply. Similarly, as for the leaf(\u03c5), the receipt time of an event-ordering request forming the origin of assigning an assigned value to this leaf is represented by \u201ctime(\u03c5)\u201d.","In order to allow the user apparatus to perform the second validation against one receipt with the use of the audit apparatus , the audit point \u03b1 of the audit apparatus  has to be present between a sequential aggregation tree leaf \u03c4 corresponding to the receipt and another sequential aggregation tree leaf \u03c4\u2032 corresponding to a request of late complementary data for the receipt as mentioned above (also including leaves \u03c4 and \u03c4\u2032). For this purpose, it is good enough if three following conditions (1) to (3) for a positive integer are fulfilled:","(1) The time of a first audit point of the audit apparatus  is smaller than T;","(2) Let one optional audit point by the audit apparatus  and the next point be \u03b1 and \u03b1\u2032 respectively. Then,\n\ntime(\u03b1\u2032)\u2212time(\u03b1)\u2266\n\nis satisfied.\n","(3) Assume that after receiving a receipt by a sequential aggregation tree leaf of the extended leaf identifier \u03c4, the user apparatus receives the late complementary data for the receipt at a certain sequential aggregation tree leaf \u03c4\u2032. Then,\n\ntime(\u03c4\u2032)\u2212time(\u03c4)\u2267\n\nis satisfied.\n","Note that the reason for sufficiency of these conditions will be described later (see items (1) and (2) in Feature 3 of Next Aggregation Tree mentioned later).","It is assumed that the audit apparatus  receives an audit receipt at an audit point \u03b1 belonging to a certain sequential aggregation tree shown in . Then, the audit receipt contains instant complementary data at the audit point \u03b1. In spite of positioning on the left side of the audit point \u03b1 in an optional leaf \u03c4 in the sequential aggregation tree SBT, the above instant complementary data incorporates an assigned value V(\u03c4) in the following sense. Thus, an assigned value V(p) of a certification point p for \u03c4 by \u03b1 is included in the above instant complementary data. This assigned value at the certification point can be calculated by starting from V(\u03c4) and linking assigned values of some nodes belonging to an authPath(\u03c4) with each other be means of hash function (reason for establishment: see item (1) in Feature 2 of Sequential Aggregation Tree mentioned later).","Consequently, by judging whether the above value V(p) is included in the instant complementary data in the audit receipt received at the audit point \u03b1, it is possible to verify that both transmission of a request underlying the receipt acquired at the user point \u03c4 by a user and acceptance of the request by the certification apparatus  are in advance of the reception of the audit receipt by the audit apparatus  at the audit point \u03b1 (referred to as \u201cvalidation result No. \u201d. See ).","Here, we now describe serialisablity of the certification apparatus . The serialisablity of the certification apparatus  is defined as a situation that in case of a plurality of event-ordering requests, the certification apparatus  sequentially accepts these requests in accordance with a certain ordering for arranging a plurality of requests in series and sequentially sends receipts in response to these requests in accordance with the certain ordering.","The serialisablity of the certification apparatus is an important requirement. According to this embodiment, the certification apparatus is provided with means for ensuring serialisablity. In detail, the means for ensuring serialisablity may be formed by a serialisablity audit apparatus that is constructed so as to monitor a situation where if the certification apparatus  accepts a single event-ordering request, then the apparatus  firstly sends a receipt for this event-ordering request and subsequently, the apparatus  accepts a next request.","If adopting the serialisablity, then it is possible to form a conclusion that the ordering relationship between the user point and the audit point is stronger than that of the validation result No. . Provided that the serialisablity of the certification apparatus  is ensured until the reception of the receipt by the apparatus  at the audit point \u03b1, for instance, it is possible to form a conclusion that the acceptance of the event-ordering request corresponding to the user point \u03c4 has been carried out previously to the acceptance of the audit event-ordering request corresponding to the audit point \u03b1, owing to the above validation (referred to as \u201cvaridation result No. \u201d. See ). This reason is as follows. Let's say that in the serialized process of event-ordering requests, the acceptance of the audit event-ordering request corresponding to the audit point \u03b1 has been carried out previously to the acceptance of the event-ordering request corresponding to the user point \u03c4. In this case, it means that the receipt EOC(\u03b1) for the point \u03b1 is transmitted previously to the acceptance of the audit receipt EOC(\u03c4) for the point \u03c4, so that it becomes impossible to allow the receipt EOC(\u03b1) to include data that an event value included in the EOC(\u03c4) is incorporated through the hash function. From above, when expecting the serialisablity of the certification apparatus  until the reception of the audit receipt by the audit apparatus  at the audit point \u03b1, it can be presumed that the acceptance of the event-ordering request corresponding to the user point \u03c4 was carried out previously to the acceptance of the audit event-ordering request corresponding to the audit point \u03b1. Hereinafter, this operation will be referred to as \u201cfuture bounding of user point\u201d.","It should be noted that the above argument couldn't be effected unless the audit apparatus  receives the instant complementary data forming the receipt in part despite that the serialisablity of the certification apparatus  is ensured until the reception of the audit receipt by the apparatus  at the audit point \u03b1. Because it is impossible to eliminate a possibility that the certification apparatus  changes an assigned value at T after the reception of the audit receipt by the apparatus  at the audit point \u03b1.","According to the event-ordering certification system  of the first embodiment, when accepting an event-ordering request from the user apparatus , the certification apparatus  operates to publish a receipt (incl. a sequential assigned value calculated from the digital data in the event-ordering request, positional information of a sequential aggregation tree where the sequentially assigned data-item is assigned) and its complementary data and additionally, the apparatus  publishes the information electronically while ensuring the authenticity, for instance, by means of attaching a high-intensity digital signature to a root value forming a sequential aggregation tree for complementary information. Therefore, the user apparatus  can verify the receipt from the published information and the complementary data with ease. In addition, even before electronically publishing the root value in the sequential aggregation tree, the audit apparatus  can audit the receipt on acceptance of an audit request from the user apparatus since the same apparatus  possesses the audit information about an audit point in the sequential aggregation tree.","As a result, when the legality of the receipt can be validated, then it is possible to certify that the operation of the apparatus  to receive the event-ordering request for a receipt objective of audit was carried out before the operation to receive the event-ordering request for an audit receipt used in the audit.",{"@attributes":{"id":"p-0185","num":"0185"},"figref":"FIG. 13","b":["200","200","7","2","8","7","4","7","2","2","2","7","8"],"i":["i ","i ","i "]},"The system structure of the second embodiment is similar to that of the first embodiment. The second embodiment differs from the first embodiment in that after completing each of sequential aggregation periods (or based on a pre-contract), the audit apparatus  requests completed late complementary data for each audit receipt, which has been acquired for the sequential aggregation period, to the certification apparatus  and subsequently, the audit apparatus  acquires the completed late complementary data from the apparatus . Note that in this embodiment, constitutions and functions different from those of the first embodiment will be described. Regarding the other constitutions and functions, their descriptions are eliminated while elements identical to those of the first embodiment are indicated with the same reference numerals, respectively.","Similarly to the first embodiment, the system architecture of the event-ordering certification system  is not limited to this only and therefore, it may be modified to various forms so long as its identity in function. For instance, as shown in , event-ordering certification user validation apparatuses (referred to as \u201cuser validation apparatuses\u201d below) (i=a, b, . . . , n) may verify the receipts in place of the user apparatuses . Additionally, in place of the certification apparatus , the electronic-information publication apparatus  of  may obtain published data from the certification apparatus  and release the published data to the public. Moreover, the computer network  may be replaced by other communicating means, such as postal mail.","The certification apparatus  comprises the transmitting\/receiving part  for transmitting and receiving data to and from the user apparatuses and the audit apparatus  through the computer network , the event-ordering request aggregation part  for arranging digital data transmitted from the user apparatuses with the use of a sequential aggregation tree, an audit-information drafting part  for drafting audit information to be transmitted to the audit apparatus , the complementary-data acquiring part  for acquiring complementary data in response to complementary-data requests from the user apparatuses , the digital-signature drafting part  for attaching attach a high-intensity digital signature to data where respective contents of plural receipts issued by the certification apparatus  for a constant period are associated with each other, the electronic-information publishing part  for giving publicity to the data having the high-intensity digital signature and a memory part  for memorizing the receipts and information about the event-ordering certification.","The audit-information drafting part  drafts not only the audit receipts at the respective audit points through the sequential aggregation tree but also the completed late complementary data of the respective audit receipts acquired for the sequential aggregation period.","The audit apparatus  comprises the transmitting\/receiving part  for transmitting and receiving data to and from the certification apparatus  and the user apparatuses through the computer network , a complementary-data requesting part  for requesting the completed late complementary data of each audit receipt to the certification apparatus , an event-ordering certification audit part  and a memory part . In detail, when receiving an audit request for one receipt from the user apparatus , the event-ordering certification audit part  verifies the receipt with the use of the audit respect information transmitted from the user apparatus and the audit information (incl. the audit receipt and its completed late complementary data) and subsequently sends the audit result to the user apparatus . Note that the memory part  stores the audit information including the receipt certificate for audit (i.e. audit receipt).","In addition to the function of the event-ordering certification audit part  of the first embodiment (i.e. future bounding of user point), the event-ordering certification audit part  has a function of \u201cpast bounding of user point\u201d mentioned later. This means that the same part  is capable of auditing not only the positioning of a certain user point on the left side of one audit point (namely, former positioning with time) but the positioning of a certain user point on the right side of one audit point (namely, later positioning with time).","Referring to , the meaning of \u201cpast bounding of user point\u201d will be described below.","In the following descriptions, the above-mentioned operation of the audit apparatus  to acquire, after completing each sequential aggregation period, the completed late complementary data for each of audit receipts that the apparatus  acquired in the relevant sequential aggregation period, will be referred to as \u201cthe audit apparatus  carries out combined complete complement\u201d.","In this embodiment, as the audit apparatus  acquires the completed late complementary data for the audit receipts received for the sequential aggregation period with respect to each completion of the sequential aggregation periods, this combining of the instant complementary data included in the audit receipts with the late complementary data allows the audit apparatus  to acquire full complementary data for the audit \u201cevent\u201d receipts received for the sequential aggregation period.","Suppose that the user apparatus and the audit apparatus  satisfy with the conditions (1) to (3) mentioned in the first embodiment. Let \u03c4 be a user point by the user apparatus . Suppose that T\u2266time(\u03c4) is satisfied. Under this condition T\u2266time(\u03c4), by the above condition (1), there exist audit points by the audit apparatus  on the left side (namely, former positioning with time) of \u03c4. Let one of such audit points be \u03b1. Alternatively, \u03b1 may be defined as being a rightmost one of audit points satisfying with the above conditions. The audit will be carried out in accordance with the following procedure.","(1) The user apparatus sends the receipt (sequential aggregation tree number, instant complementary data) acquired at the user point \u03c4 to the audit apparatus .","(2) The audit apparatus  picks up the sequential aggregation tree number from the receipt sent from the user apparatus , specifies a sequential aggregation tree leaf \u03c4 corresponding to the receipt and selects an audit receipt, which corresponds to one sequential aggregation tree leaf positioned on the left of the leaf \u03c4, from the audit receipts that the apparatus  has acquired. In the audit receipts on the left of the leaf \u03c4, alternatively, there may be selected an audit receipt whose corresponding sequential aggregation tree leaf is positioned on the rightmost side. This sequential aggregation tree leaf corresponding to such a selected audit receipt will be called \u201c\u03b1\u201d.","(3) Performing the above-mentioned combined complete complement, the audit apparatus  acquires completed late complementary data of an audit receipt corresponding to the audit point \u03b1. A sequential aggregation tree leaf corresponding to the completed late complementary data is identical to the leaf \u03c4 or positioned on the right of the leaf \u03c4 (namely, later positioning with time).","(4) By the audit receipt corresponding to the audit point \u03b1 and the corresponding late complementary data, the audit apparatus  can calculate an assigned value of a validation point p by the user point \u03c4 of the audit point \u03b1.","(5) Therefore, the audit apparatus  can audit that the point \u03b1 is positioned on the left of the point \u03c4 by verifying the calculated assigned value of the validation point p by the user point \u03c4 of the audit point \u03b1 is included in the instant complementary data in the receipt corresponding to the sequential aggregation tree leaf \u03c4, which was sent from the user apparatus ","All one can firstly say from this validation result is as follows. Let t, t and t\u2032 denote a time when the audit event-ordering request of the audit apparatus  corresponding to the audit point \u03b1 is received by the certification apparatus , a time when the event-ordering request of the user apparatus corresponding to the user point \u03c4 is received by the certification apparatus  and a time when the receipt against the event-ordering request is transmitted from the certification apparatus , respectively. Then, the inequality t<t\u2032 is satisfied.","It is noted that the serialisablity of the certification apparatus  is ensured in this embodiment as well. That is, assuming that the serialisablity of the certification apparatus  is ensured until the point of time t\u2032, there could be concluded another inequality t<t, furthermore. From above, when expecting the serialisablity of the certification apparatus  until the time when the certification apparatus  sends the receipt corresponding to the user point \u03c4 to the user apparatus , it can be presumed that the acceptance of the audit event-ordering request corresponding to the audit point \u03b1 was carried out previously to the user apparatus' acceptance of the event-ordering request corresponding to the user point \u03c4.","It should be noted that the above argument couldn't be effected unless the user apparatus receives the instant complementary data forming the receipt despite that the serialisablity of the certification apparatus  is ensured until the time t\u2032. Because it is impossible to eliminate a possibility that the certification apparatus  changes an assigned value at \u03b1 after the time t\u2032.","Note that the above apparatuses are formed by electronic apparatuses each having a CPU (Central Processing Unit) having at least a calculating function and a control function, a main memory having a function to store programs and data, such as RAM (Random Access Memory), and a secondary memory capable of continuing to memorize data even at powered-off, such as HD (Hard Disc). The operation of the audit information drafting part  of the certification apparatus , the operation of the complementary data requesting part  of the audit apparatus  and the operation of the event-ordering certification audit part  of the audit apparatus  are nothing but respective crystallizations of the above calculating\/control functions of the above central processing units. Additionally, the memory part  of the certification apparatus  and the memory part  of the audit apparatus  are equipped with the above-mentioned functions of either the main memory or the secondary memory.","Each program for executing a variety of processes in this embodiment is stored in either the main memory or the secondary memory mentioned above. In connection, this program may be recorded in a computer-readable recording medium (e.g. hard disc, flexible disc, CD-ROM, MO, DVD-ROM, etc.) or delivered through a communication network.","In the event-ordering certification system  constructed above, the event-ordering certification method and the event-ordering certification validation method will be described with reference to . In these figures,  is a sequence diagram to explain the operation of the certification apparatus  to draft an event receipt and an audit receipt for one sequential aggregation period, while  is a sequence diagram to explain the operation of one user apparatus to carry out the second validation against the even receipt.","We first describe the event-ordering certification method of . As for the event-ordering certification method of the second embodiment, constituent processes are almost similar to those of the first embodiment. Thus, the operations at steps S to S of  are identical to those at steps S to S of the . The event-ordering certification method of the second embodiment differs from that of the first embodiment in the addition of subsequent steps S to S. The following description is directed to these steps S to S.","On completion of the constant period for sequential aggregation, the audit information drafting part  of the audit apparatus  acquires the completed late complementary data of respective audit receipts issued for this aggregation period in response to the completed late complementary data request from the audit apparatus  and successively sends the data to the audit apparatus  (steps S, S, S, S).","Then, the audit apparatus  receives the completed late complementary data of the respective audit receipts (step S).","In connection with the above-mentioned event-ordering certification method of  where the audit apparatus  sends the completed late complementary data request to the certification apparatus  and it subsequently sends the completed late complementary data to the audit apparatus , the method may be modified in a manner that the certification apparatus  sends the completed late complementary data to the audit apparatus  automatically.","Next, the event-ordering certification validation method using the audit apparatus  will be described with reference to . This method corresponds to the second validation function of the user apparatus . The second validation function of the user apparatus is identical to the validation function of the first embodiment (i.e. future bounding of user point) plus a new validation function (i.e. past bounding of user point).  illustrates this new validation function. In this embodiment, the validation processes about \u201cfuture bounding of user point\u201d are identical to those of the first embodiment of  and therefore, their descriptions are eliminated. Additionally, the validation method corresponding to the first validation function of the user apparatus is identical to that of the first embodiment and therefore, its descriptions are eliminated similarly.","In , the user apparatus sends audit request information including a receipt as an audit target (but including the instant complementary data) to the audit apparatus  (steps S, S).","Then, when the audit apparatus  receives the audit request information through the transmitting\/receiving part , the event-ordering certification audit part  specifies a sequential aggregation tree leaf \u03c4 where the receipt in the audit request information is assigned and calculates an audit point \u03b1 positioned on the left of the so-specified leaf \u03c4 (steps S, S). Next, the audit apparatus  acquires an audit receipt of the audit point \u03b1 and completed late complementary data for the audit receipt (step S).","In succession, the audit apparatus  calculates a certification point for the audit point \u03b1 by the leaf \u03c4 and further calculates an assigned value \u201cAcal\u201d of the above certification point from the audit receipt of the audit point \u03b1 and completed late complementary data for the audit receipt (steps S, S). On the other hand, the event-ordering certification audit part  acquires an assigned value A of this certification point that the part  has already received as the audit request information and verifies whether the assigned value A of the certification point coincides with the assigned value Acal on calculation (steps S, S).","If the above validation is completed in success, then it is possible to confirm that the receipt is not subjected to tamper (step S). On the other hand, if the above validation is failed, it is possible to confirm that the receipt is subjected to tamper (step S). The event-ordering certification audit part  sends this audit result to the user apparatus through the transmitting\/receiving part , while the user apparatus receives the audit result (step S, S).","Consequently, even before publishing by an electronic publishing organization, each user apparatus can absolutely verify that the receipt published by the certification apparatus  is one that was issued during the relevant sequential aggregation period and also issued against original data included in the receipt, in order identified by a \u201csequential aggregation tree\u201d leaf number included in the receipt. Additionally, the apparatus can verify the past bounding of the user point. Note that the above audit result may contain an identifier of the audit point \u03b1. In this case, the user apparatus can obtain an assurance that the registration of an event-ordering request corresponding to the receipt requiring the above audit was carried out before the registration of an audit event-ordering request corresponding to the audit point \u03b1, from the audit apparatus  absolutely.","Note that the above description is related to the operation of validation about the past bounding of a user point. Besides, the audit apparatus may perform a validation about \u201cpast bounding of user point\u201d together with the future bounding of a user point. In this case, the receipt and the late complementary data in the first embodiment would be required as the audit information.","According to the event-ordering certification system  of the second embodiment, it is possible to bring about the same effects as the first embodiment. In addition, when the legitimacy of a receipt can be verified, it is possible to certify that the certification apparatus' receiving of an event-ordering request of the receipt as audit target has occurred behind the same apparatus' receiving of an event-ordering request of the audit receipt temporally.","Regarding the second embodiment mentioned above, various modifications and changes can be made. Such modifications of the second embodiment will be described below.","The audit apparatus  is also capable of judging the sequential order between two user points owing to the above-mentioned functions of \u201cfuture bounding of user point\u201d and \u201cpast bounding of user point\u201d. Suppose, two user apparatuses and acquire receipts at sequential aggregation tree leaves \u03c4 and \u03c4, respectively. We now describe a method of the audit apparatus  for auditing the temporal context between \u03c4 and \u03c4 with reference to .  is a flow chart showing the operation of the audit apparatus  for auditing the temporal context between \u03c4 and \u03c4.","In the following descriptions about the sequential aggregation tree leaves \u03c4 and \u03c4, a terminology \u201ctime point \u03c4 (or \u03c4)\u201d represents a point of time when an event-ordering request assigned to \u03c4 (or \u03c4) is received. Therefore, \u03c4\u2266\u03c4 represents that the time point \u03c4 is present after the time point \u03c4. Assume in the following descriptions \u03c4 represents a larger one in \u03c4 and \u03c4, and additionally, the serialisablity of the certification apparatus  is ensured until its transmission of a receipt against an event-ordering request received at the leaf \u03c4.","Suppose that the user apparatuses , and the audit apparatus  respectively satisfy with the conditions (1) to (3) described in \u201cfuture bounding of user point\u201d of the first embodiment.","When the audit apparatus  receives judgment requests of the sequential order of the receipts between the users from the user apparatuses and , it is determined to let either a point equal to \u03c4 or a leftmost point of the audit points on the right of \u03c4 be represented by \u03b1 and also let a point equal to \u03c4 or a leftmost point of the audit points on the right of \u03c4 be represented by \u201c\u03b1\u201d (steps S, S, S).","Next, the temporal context between \u03b1 and \u03b1 is verified (step S). This operation is accomplished by judging both sequential aggregation tree number and sequential aggregation tree leaf number of the audit receipts of the respective audit points.","If \u03b1<\u03b1, then \u03c4<\u03c4 is introduced in accordance with the method of \u201cfuture bounding of user point\u201d of the first embodiment and the above-mentioned method of \u201cpast bounding of user point\u201d, as follows (step S).","Let a point equal to \u03c4 or a rightmost point of the audit points on the left of \u03c4 be represented by \u03b1. Then, \u03b1\u2266\u03b1 is established. Additionally, as \u03c4\u2266\u03b1 is shown by the method of \u201cfuture bounding of user point\u201d while \u03b1\u2266\u03c4 is shown by the method of \u201cpast bounding of user point\u201d, \u03c4<\u03b1\u2266\u03b1<\u03c4 is established and therefore \u03c4<\u03c4 is introduced.","Similarly, if \u03b1<\u03b1, then \u03c4<\u03c4 is introduced (step S).","If \u03b1=\u03b1, then the judgment in temporal context between \u03c4 and \u03c4 is carried out in the following procedures (1) to (3).","(1) From information that the user apparatus has acquired at \u03c4 and its late complementary point \u03c4\u2032, the position of a certification point for the user point \u03c4 by the audit point \u03b1 and an assigned value of the certification point are calculated. If this assigned value of the certification point is included in instant complementary data in the audit receipt acquired at the audit point \u03b1 by the audit apparatus , then it judges that \u03c4 is present on the left of the point \u03b1 and further verifies how far \u03c4 is apart from \u03b1 to the left (i.e. by the number of points). Assume here, \u03c4 is present at an n. point to the left of a (step S).","(2) Similarly, from information that the user apparatus has acquired at \u03c4 and its late complementary point \u03c4\u2032, the position of a certification point for the user point \u03c4 by the audit point \u03b1 and an assigned value of the certification point are calculated. If this assigned value of the certification point is included in instant complementary data in the audit receipt acquired at the audit point \u03b1 by the audit apparatus , then it judges that \u03c4 is present on the left of the point \u03b1 and further verifies how far \u03c4 is apart from \u03b1 to the left (i.e. by the number of points). Assume here, \u03c4 is positioned at an n. point to the left of \u03b1 (step S).","If n>n, then the audit apparatus  can exhibit that the user point \u03c4 by the user apparatus is present on the left of the user point \u03c4 by the user apparatus (step S). While, if n<n, then the audit apparatus  can exhibit that the user point \u03c4 by the user apparatus is present on the right of the user point \u03c4 by the user apparatus (step S).","According to the first modification of the second embodiment, it is possible to judge the temporal context of receipts in addition to the effects of the second embodiment.","Alternatively, after completion of each sequential aggregation period, the audit apparatus  may acquire the completed late complementary data of respective audit receipts acquired for the sequential aggregation period, simultaneously calculate a root value in the sequential aggregation tree from each audit receipt and its complete complementary data and verify whether the so-calculated root value coincides with a root value on publication. This operation of the audit apparatus  will be referred to as \u201croot-value validation by combined completion\u201d.","The above-mentioned operations of the audit apparatus  are direct to an aim to verify that no falseness is carried out by the certification apparatus , as shown in  (steps S, S, S, S, S).","Additionally, the audit apparatus  can verify the legitimacy of audit request information included in the audit request of the user apparatus due to the function of \u201croot-value validation by combined completion\u201d.","Suppose, after completing to form a sequential aggregation tree, the user apparatus changes the assigned value for a leaf(, \u03c4) from an intrinsic assigned value V(\u03c4) to an assigned value v\u2032 and argues that this assigned value v\u2032 links V(root (SBT)) by hash function. Then, in order to allow a third person to admit this argument, the user apparatus has to prepare complementary data for the leaf(, \u03c4):\n\n","Thus, according to the second modification of the second embodiment, it is possible to verify the legitimacy of a root value of the sequential aggregation tree published by an electronic-information publishing organization in addition to the effect of the second embodiment. Additionally, even if there arises a falseness in either the certification apparatus  or the user apparatus , it is possible to curve the falseness due to the root-value validation function of the audit apparatus .","Additionally, the audit apparatus  has a function of providing each of the user apparatuses with the complete complementary data. Below, this operation will be referred to as \u201ccomplementary data completion\u201d. This function will operate effectively if the certification apparatus  stops its service due to an obstacle or the like. Further, even if the certification apparatus  does not stop the service, the function would be of assistance to lightening of burden on the apparatus  when the public data is published or the requests for complementary data irrupt temporarily.","The complementary data completion will be described with reference to .","Assume in , the audit apparatus  possesses complete complementary data for an audit point a. In this case, by combining the complete complementary data with information that the user apparatus can acquire at a user point u to obtain an event-ordering receipt and another point u\u2032 to obtain its late complementary data, it is possible for the user apparatus to calculate complete complementary data for the user point u. Note that this possibility will be referred to as \u201cfeature P\u201d after.","In , let j be a level of a certification point for the user point u by the audit point a. The reason about the apparatus' possibility is that in the authentication path information at the user point u, the information about nodes each lower than the level j is acquired by the user, while the information about a node higher than the level j and lower than a level k is acquired by the audit apparatus .","Consider as one example, we are given an \u201cone-day type\u201d audit apparatus  disclosing at one-week intervals (i.e. acquiring the audit information at least one time per day, thereby acquiring the complete complementary data of each audit point). Provided that the audit apparatus  acquires late complementary data after the lapse of one or more days since the user apparatus receives a receipt, then it becomes possible to construct complete complementary data for the receipt by combining the information acquired by the user apparatus with the information acquired by the audit apparatus  (due to the above feature P).","Referring to , a method for the user apparatus to acquire complete complementary data through two or more audit apparatuses (i=a, b, n) will be described. Suppose as the audit apparatuses , we are given an \u201cone-day type\u201d audit apparatus (i.e. acquiring the audit information at least one time per day, thereby acquiring the complete complementary data of each audit point) mentioned above and an \u201cone-hour type\u201d audit apparatus (i.e. acquiring the audit information at least one time per hour and establishing respective late complementary-data points of respective audit points so as to interleave the audit point of the audit apparatus ) which depends on the apparatus ","In the above supposition, the user apparatus acquires late complementary data after the lapse of one or more hours since receiving a receipt. In such a case, by combining the information acquired by the user apparatus with the information acquired by the audit apparatus and the information acquired by the audit apparatus , it becomes possible to construct complete complementary data of the user point.","This possibility can be accomplished represented by using the above feature P repeatedly. First, by combining the information acquired by the audit apparatus with that by the audit apparatus , authentication path information for an audit point a is obtained. Thus, as similar to the case of , there can be acquired authentication path information for a user point u.","As for the audit points of the above-mentioned audit apparatuses and , for instance, the \u201cone-hour type\u201d audit apparatus depending on the audit apparatus may acquire the late complementary data for one's own each audit point after the lapse of one or more days since the user apparatus' reception of the receipt. Alternatively, so long as it is recognized that the audit point of the one-day type audit apparatus is acquired at the fixed time in one day (e.g. AM 0:00), the late complementary data for the audit point everyday may be collected up after the end of each day. Although there are adopted two audit apparatuses in the above example, three or more audit apparatuses may be adopted in modifications.",{"@attributes":{"id":"p-0247","num":"0248"},"figref":"FIG. 21","b":["300","300","1","90","10","20","9","4","300","20","2","20","10","10","20","1","20","20","7","8","20"],"i":["j ","i ","i ","i ","i ","j ","j","i ","i","i ","i "]},"Note that in this embodiment, constitutions and functions different from those of the above embodiments will be described. Regarding the other constitutions and functions, their descriptions are eliminated while elements identical to those of the first embodiment are indicated with the same reference numerals, respectively.","Similarly to the first embodiment, the system architecture of the event-ordering certification system  is not limited to this only and therefore, it may be modified to various forms so long as its identity in function. For instance, user validation apparatuses (time-stamping apparatuses) may verify the receipts in place of the user time-stamping apparatuses . Additionally, in place of the certification apparatus , the electronic-information publication apparatus  may obtain published data from the certification apparatus  and release the published data to the public. Moreover, the computer network  may be replaced by other communicating means, such as postal mail.","Assume also in this embodiment, the serialisablity of the certification apparatus  is ensured as similar to the first embodiment. As ensuring means, a serialisablity audit apparatus may be employed as similar to the first embodiment.","The time information offering apparatus  retains accurate time information and supplies the user time-stamping apparatuses and the audit apparatus  with the time information.","Each user apparatus requests a time stamping containing designated data to the corresponding user time-stamping apparatus and subsequently acquires a time receipt having the time information from the user time-stamping apparatus ","The user time-stamping apparatus has the function of a time-stamping apparatus in addition to the function of the user apparatus , as mentioned above. The user time-stamping apparatus comprises a transmitting\/receiving part  for transferring data to and from the audit apparatus , the user apparatus and the time information offering apparatus , a time stamp drafting part  for drafting a time receipt on acceptance of a time-stamping request from the user apparatus , an event-ordering requesting part  for requesting a certification containing a time receipt digest, a complementary data requesting part  for requesting complementary data of a receipt, which is acquirable at the present moment, an event-ordering certification verifying part  for verifying the receipt and a memory part  for storing information about event-ordering certification including the receipt and information about time-stamping including the time receipt. Note that although this embodiment adopts a user apparatus doubling as a time-stamping apparatus, there may exists a user apparatus that does not double as the time-stamping apparatus, allowing provision of a system structure where the user time-stamping apparatuses  and the user apparatuses are mixed together.","In detail, the time stamp drafting part  accepts the time-stamping request including designated digital data transmitted from the user apparatus and successively drafts the time receipt where the time information from the time information offering apparatus  is attached to the digital data.","The event-ordering requesting part  operates to incorporate the time receipt digest (i.e. a hash value of the time receipt drafted for the time-stamping request from the user apparatus ) into an event-ordering request. In detail, this time receipt digest corresponds to a result of applying a \u201ccollision-resistant\u201d one-way hash function, which is prepared by the user time-stamping apparatus in advance, on the time receipt. Accordingly, the receipt that the user time-stamping apparatus receives from the certification apparatus  has a structure shown in . However, as mentioned above, the original digital data  in the certificate contains the time receipt digest.","In addition to the function of the audit apparatus  of the first embodiment, the audit apparatus  of this embodiment has a function as a time auditing apparatus. The audit apparatus  comprises the transmitting\/receiving part , the event-ordering certification audit part , a block-time-stamping certificate drafting part  and a memory part . In detail, the transmitting\/receiving part  transfers data to and from the certification apparatus , the user time-stamping apparatuses and the time information offering apparatus  through the computer network . When receiving the audit request for a certain receipt from the user time-stamping apparatus , the event-ordering certification audit part  verifies the receipt while using the audit request information transmitted from the user time-stamping apparatuses and the audit information and sends the audit result to the user time-stamping apparatuses . The block-time-stamping certificate drafting part  drafts a block-time-stamping certificate for certifying a time block including the time attached on the time receipt corresponding to the receipt on audit. The memory part  stores the audit information including the audit receipt and the block-time certificate. Note that although this embodiment adopts, as the event-ordering certification audit apparatus, an audit apparatus doubling as an event-time audit apparatus, there may exist an audit apparatus that does not double as the event-time audit apparatus, allowing provision of a system structure where the audit apparatus  and the audit apparatus  are mixed together.","The block-time-stamping certificate drafting part  acquires the time of its receiving an audit receipt from the certification apparatus , from the time information offering apparatus  and further attaches the time to the block-time certificate. Thus, in this embodiment, the block-time certificate drafted by the block-time-stamping certificate drafting part  includes a time stamp bounding on the future side. As previously mentioned in the first embodiment, since the validation of an event-ordering certificate using the audit apparatus  (i.e. the second validation by the user apparatus ) makes it possible to certify that the leaf of the sequential aggregation tree where the event-ordering request is assigned is temporally former of the leaf of the audit point, the time stamp bounding on the future side certifies nothing but the acceptance of a time stamping request from the user apparatus having its origin in requesting the event-ordering certificate is temporally former of the time when the audit apparatus  received the audit receipt. This block-time certificate in this embodiment will be referred to as \u201cthe first-class block-time certificate\u201d after.","Note that the above apparatuses are formed by electronic apparatuses each having a CPU (Central Processing Unit) having at least a calculating function and a control function, a main memory having a function to store programs and data, such as RAM (Random Access Memory), and a secondary memory capable of continuing to memorize data even at powered-off, such as HD (Hard Disc). The operations of respective parts of the user time-stamping apparatus (i.e. the time stamp drafting part , the event-ordering requesting part , the complementary data requesting part , the event-ordering certification verifying part ) and the operation of the block-time-stamping certificate drafting part  of the audit apparatus  are nothing but respective crystallizations of the above calculating\/control functions of the above central processing unit. Additionally, the memory part  of the user time-stamping apparatus and the memory part  of the audit apparatus  are respectively equipped with the above-mentioned functions of either the main memory or the secondary memory.","Each program for executing a variety of processes in this embodiment is stored in either the main memory or the secondary memory mentioned above. In connection, this program may be recorded in a computer-readable recording medium (e.g. hard disc, flexible disc, CD-ROM, MO, DVD-ROM, etc.) or delivered through a communication network.","In the event-ordering certification system  constructed above, the event-ordering certification method and the event-ordering certification validation method will be described with reference to .","Regarding the event-ordering certification method, its overall operation is substantially the same as the operation of , assuming that the user time-stamping apparatuses and the audit apparatus  correspond to the user apparatuses and the audit apparatus , respectively. Therefore, the following descriptions are mainly directed to an interaction between the user time-stamping apparatus and the user apparatus , which is different from the operation of .  are sequence diagrams to closely explain the operation of step S\u2032 to send an event-ordering request, corresponding to step S. Note that  also contains step S\u2032 for receiving the receipt, corresponding to step S of . Further,  is a sequence diagram to closely explain the operation of step S\u2032 to receive a receipt certificate for audit (referred to as \u201caudit receipt\u201d later), corresponding to step S of .","Further, in the first validation of the event-ordering validation method, if assuming that the user time-stamping apparatus corresponds to the user apparatus , then the operation of validation is identical to that of  and therefore, its description is eliminated. In the second validation of the event-ordering validation method, if assuming that the audit apparatus  corresponds to the audit apparatus , then the operation of validation is identical to that of  and therefore, we now explain the drafting of a block-time certificate by the audit apparatus , which is different from the operation of .  is a sequence diagram explaining step S\u2032 in case of succeeding the validation of an event receipt corresponding to step S of , in detail.","Referring to , we first describe step S\u2032 of sending an event-ordering request of the event-ordering certification method.","When the user apparatus sends a time stamping request including digital data to the user time-stamping apparatus , it receives the time stamping request including digital data through the transmitting\/receiving part  (steps S\u2032, S\u2032). Next, the time stamp drafting part  of the apparatus acquires the time of receiving the time stamping request from the time information offering apparatus , drafts a time receipt certificate (referred to as \u201ctime receipt\u201d after) having the time applied on the digital data and send the time receipt to the user apparatus (steps S\u2032, S\u2032, S). In this way, the user apparatus can acquire the time receipt (step S\u2032).","Next, the event-ordering requesting part  of the user time-stamping apparatus drafts a digest of the time receipt, further drafts an event-ordering request including this \u201ctime receipt\u201d digest and sends it to the certification apparatus  (steps S\u2032, S\u2032). In this way, the certification apparatus  receives the event-ordering request through the transmitting\/receiving part  (step S\u2032).","Although only the time receipt is sent to the user apparatus in the above-mentioned method, there may be expected a method of sending a receipt in addition to the time receipt to the user apparatus ","In , at the event-ordering requesting step (step S\u2032), it is not executed to send back the time receipt. Instead, at the event receipt receiving step (step S\u2032) corresponding to step S of , it is executed to send back the time receipt and the receipt. That is, the user time-stamping apparatus sends the receipt and the corresponding time receipt to the user apparatus when receiving the receipt from the certification apparatus  (steps S\u2032, S\u2032). In this way, the user apparatus receives both the receipt and the time receipt (step S\u2032).","Referring to , we now describe the operation of step S\u2032 to receive the audit receipt.","When receiving the audit receipt from the certification apparatus  through the transmitting\/receiving part , the audit apparatus  acquires the time of receiving the audit receipt from the time information offering apparatus  and memorizes the time in the memory part  while coordinating the audit receipt (steps S\u2032, S\u2032, S\u2032).","Referring to , we now describe the operation of step S\u2032 when the audit apparatus  succeeds in verifying an event receipt.","The event-ordering certification audit part  of the audit apparatus  audits a receipt in response to the audit request from the user time-stamping apparatus . When the audit result is well (OK), the audit part  publishes the first-class block-time certificate by the time accompanied with the audit receipt and incorporates the first-class block-time certificate into the audit result (steps S\u2032, S\u2032, S\u2032).","Accordingly, according to the event-ordering certification system  of the third embodiment, it is possible to bring about the same effect as the first embodiment. Additionally, owing to the publication of the first-class block-time certificate, it is possible to provide a time stamp bounding on the future side.","In the third embodiment, the audit apparatus  having a function as the time audit apparatus is employed in place of the audit apparatus  of the first embodiment. In one modification of the third embodiment, an audit apparatus \u2032 having the function of the time audit apparatus may be employed in place of the audit apparatus  of the second embodiment.","According to the modification of the third embodiment, the block-time-stamping certificate drafting part \u2032 acquires the time of its sending the audit event-ordering request to the certification apparatus , from the time information offering apparatus  and further attaches the time to the block-time certificate. Thus, in this modification, the block-time certificate drafted by the block-time-stamping certificate drafting part \u2032 includes a time stamp bounding on the past side","As previously mentioned in the second embodiment, since the validation of an event-ordering certificate using the audit apparatus  (i.e. the second validation by the user apparatus makes it possible to certify that the leaf of the sequential aggregation tree where the event-ordering request is assigned is temporally later of the leaf of one audit point, the time stamp bounding on the future side certifies nothing but the transmission of the time receipt by the user time-stamping apparatus against a time stamping request from the user apparatus having its origin in requesting the event-ordering certification is temporally former of the time when the audit apparatus \u2032 sent the audit event-ordering request. This block-time certificate in this embodiment will be referred to as \u201cthe second-class block-time certificate\u201d after.","In this modification, since the audit apparatus \u2032 has a function to publish \u201cthe first-class block-time certificate\u201d justifiably, it is possible to publish \u201cthe third-class block-time certificate\u201d being a block-time certificate having time stamps bounding on the future and past sides. This is provided to certify that the acceptance of a time stamping request from the user apparatus having its origin in requesting the event-ordering certificate is temporally former of the time when the audit apparatus  received the audit receipt and that the transmission of a time receipt by the user time-stamping apparatus against the time stamping request of the user apparatus is temporally later of the time when the audit apparatus  sent the audit event-ordering request.","In a further modification of the third embodiment, an event-ordering system \u2032 may be provided with an event-time validation apparatus (not shown in ). In operation, this event-time validation apparatus operates to acquire a time receipt published by each of the user time-stamping apparatuses and one or more block-time certificates for certifying a temporally-former boundary of the time applied on the time receipt, a temporally-later boundary of the time or both boundaries of the time. Based on the so-acquired certificates, the event-time validation apparatus judges the validity of the time applied on the time receipt. In detail, if a probability that the time applied on the time receipt is included in a time block certified by the block-time certificates with a predetermined allowable error is larger than a predetermined value, then the event-time validation apparatus judges the validity of the time applied on the time receipt.","The certification apparatuses ,  and the electronic information publishing part  were not explained in the above descriptions in detail. Nevertheless, preferably, information publishing in the computerized society is required to meet with the following requirements.","(1) A plurality of independent entities publishes the same information.","(2) Anybody can have access to each of the above entities at any time.","(3) When each of the above entities acquires information to be published, an entity certification of a resource center is provided, while the perfectibility of information on provision is ensured by the resource center.","In these requirements, the requirement (1) could be realized since some service organizations provide their occupations with a certain category of information. It is noted that the above-mentioned embodiment fills the requirement (1) since the certification apparatus and the plural audit apparatuses provide, as their occupations, the information about the root value etc. of the sequential aggregation tree.","The requirement (2) can be accomplished due to information provision through WWW (World Wide Web) in widespread use of recent years.","The requirement (3) can be accomplished by applying a digital signature based on the public key cryptosystem to information for provision. In this application, it is necessary that the digital signature has sufficient intensity and the effectiveness of a private key for signature and a public key pairing with this at that time is ensured by PKI (Public Key Infrastructure) with the use of a public-key certificate, CRL (Certificate Revocation List), OCSP (Online Certificate Status Protocol) service, etc. The pair of keys are adequate so long as being effective at the point of acquiring the information by an information demandant. By renewing the pair of keys as needed, it is possible to maintain the effectiveness of the key pair. In replacing one key pair KP=(SK, PK) by a new key pair KP=(SK, PK), it is not indispensable to create a digital signature by the private key SK of the key pair KP within an available period of the key pair KP. Required is that when a user has access to the above entities, a digital signature is produced by using a key pair that is effective at that time.","Hitherto, it has been carried out to make the information public to mass-media, such as newspapers, as means for information publishing. However, it should be noted that this publishing method is not necessarily appropriate as measure for information publishing in this computer-controlled society. Because it is difficult to meet the requirement (2) since it is not easy for a user using the above method to access information published on a specific mass-media, for example, 10 years after. Even if possible to access, it is impossible for the user to acquire the information while meeting the above requirement (3).","(Constitution and Feature of Sequential Aggregation Tree)","As for the sequential aggregation tree employed in the above-mentioned embodiments in common, its dynamic constitutive method and feature will be described below. On the assumption, we first explain a basic function essential to the constitution of the sequential aggregation tree.","(Basic Function)","A sequential aggregation tree of height k is formed by respective nodes at levels  to k. Since the number of nodes at level j (j=0, 1, . . . , k) is 2, under the notation that (j, i) denotes a node at level j and by number i, then i=0, 1, . . . , 2\u22121.","Assume ceiling(x) denotes a minimum integer more than x and floor(x) denotes a maximum integer less than x for a real number x.","Since a parent of node (j, i) where j<k is represented by (j+1, floor(i\/2)), the parent is defined as\n\nparent()=(1,floor(2)).\n\nFurther, since a left child of node (j, i) where 0<j is represented by (j+1, floor(i\/2)) and the right child of node (j, i) is represented by (j\u22121, \u00b7i+1), they are defined as\n\nleftChild()=(1, 2),\n\nrightChild()=(1, 21),\n\nrespectively. Now, a root path rtPathk(j, i) represents a row of nodes from node (j, i) to the root. Then, the root path rtPathk(j, i) of node (j, i) where 0\u2266i<2of the sequential aggregation tree of height k can be represented as\n\n","Let V(j, i) be an assigned value of node (j, i), and V(, i) be expressed by V(i). Further, assume that L is a negative integer satisfying L\u2266k and SBT is a certain sequential aggregation tree. Then, it is defined \u201ca subgraph B of SBT is a partial tree at level L\u201d as \u201cthere exists a certain node p at level L belonging to SBT so that B is a subgraph of SBT composed of the node p and its descendants\u201d.","Assume that B is a partial tree of SBT. Then, leafs(B) represents a set of leaves forming the tree B. Assume that X is a non-empty set composed of leaves of SBT. Then, first(X) represents a leftmost leaf in the set X and last(X) represents a rightmost leaf in the set X.","Let [i . . . i] be the set (interval) of integers i satisfying i\u2266i\u2266i for two integers i and i; [i . . . i] be the set (interval) of integers i satisfying i<i\u2266i; (i . . . i) be the set (interval) of integers i satisfying i\u2266i<i; and [i . . . i] be the set (interval) of integers i satisfying i<i<i.","(Method of Forming Sequential Aggregation Tree)","1. Method of Forming Sequential Aggregation Tree","In accordance with the above definitions about the basic function, we now describe a first method of forming an aggregation tree dynamically. In the first method, a difference in depth is suppressed less than 1 and no dummy node is produced.","Assume that the number of event-ordering requests to be accepted for an aggregation period (e.g. one week) is previously fixed by a method of some kind. Let n be the fixed number of requests. Then, the height of the aggregation tree is k=ceiling(log(n)). Here, the maximum number of leaves in the tree of height k is 2. Thus, on condition d=2\u2212n, if only eliminating nodes at level  in the number of 2d, then it becomes possible to assign the event-ordering requests (number: n) to respective leaves without producing any dummy node. The reason is as follows: If the number of leaves at level  is reduced by number 2d, then new leaves at level  (number: n) are produced. As a result, due to a reduction in the number of leaves by number d, the total number of leaves results in n=2\u2212d.","Let LW=2(the number of nodes at level ), LL=2\u2212d (the number of nodes at level  having children), and LL=2(2\u2212d) (the number of nodes at level ). If for n event-ordering requests (n: the number of requests) first arranging LL requests at level  first and subsequently arranging while the remaining requests at level , then a function place(i) representing a destination of an ievent-ordering request can be described as","place(i)=(, i) (\u2266i<LL),","place(i)=(, LL+i\u2212LL) (LL<i\u2266n)","where place(i)=(level, number).",{"@attributes":{"id":"p-0299","num":"0301"},"figref":["FIG. 26","FIG. 26","FIG. 24"],"sub":"2","sup":["4","3"],"b":["0","1","2","1","0","0","1"]},"2. Method of Forming Sequential Aggregation Tree","Next the second method of forming a sequential aggregation tree will be described. The second method is the same as the first method in terms of forming the sequential aggregation tree incrementally and differs from the first method in point of assuming that the number of event-ordering requests to be accepted at predetermined intervals (every sequential aggregation period) cannot be anticipated.","Here, the above terminology \u201cincremental\u201d means that it is executed with respect to each acceptance of the event-ordering requests to calculate a part of the sequential aggregation tree that could be calculated by the acceptance. Although the number of event-ordering requests on acceptance cannot be anticipated, we describes on the assumption that the upper limit N can be estimated. Assume in this method, the event-ordering requests are all assigned at level  and a dummy node is employed to calculate a root value for a binary tree.","In forming a sequential aggregation tree by this method, if representing the number of event-ordering requests accepted for a designated aggregation period (e.g. one week) by N, then a height k of the sequential aggregation tree is represented by k=ceiling(log(N)). As the number of the sequential aggregation tree of height k is 2at the maximum, n event-ordering requests (0, 1, . . . , n\u22121) are assigned to respective nodes at level  (i.e. from node(, ) to node(, n\u22121)).","Assume, for a rightmost one (, n\u22121) of the nodes at level , its root path rtPathk(j, i) is represented by\n\n","In general, rtPathk(j, i) is represented by rtPathk(j, i)=[(j, r(j)), . . . , (k, r(k))]. Assume here that r(j)=floor(i\/2) for j\u03b5[j . . . k]. Then, at respective levels j (j=0, . . . , k\u22121), the followings are established:","If r(j) is an even number, nodes (j, r(j)+1) become dummy nodes and respective nodes (j, i) for i under r(j)+1>i>2are eliminated;","If r(j) is an odd number, respective nodes (j, i) under r(j)+1>i>2are eliminated.","In the sequential aggregation tree based on the above method, the dummy node appears only on the right end at each level. The number of dummy nodes drafted is less than k.",{"@attributes":{"id":"p-0309","num":"0312"},"figref":"FIGS. 27 and 28","ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":{"@attributes":{"id":"ul0009-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":["K=ceiling(log(N));","n is an integer variable, representing the number of event-ordering request on acceptance. The initial value of n is 0;","k is a variable representing a height of the sequential aggregation tree when the fixed interval (aggregation period) is completed;","A row of (K+1) counters are represented by i, . . . , iK. The initial value of \u201cij\u201d is 0 (j=0, . . . , K). The \u201cij\u201d represents the number of nodes already produced at level j and simultaneously represents a number of a node at level j, which will be next produced;","A row of (K+1) Boolean variables are represented by b, . . . , bK. The initial value of \u201cbj\u201d is \u201cfalse\u201d (j=0, . . . , K). The \u201cbj\u201d represents whether a dummy node is present at level j or not;","A row of (K+1) alignments are represented by A, . . . , bK. Each alignment has a length of 2and retains values to be assigned to nodes at level j (j=0, . . . , K);","r is a variable to store dummy values assigned to dummy nodes;","R(j, i) is a function to calculate a dummy value to be assigned to node (j, i) for two arguments i, j;","x, x, x, and x are variables representing values assigned to nodes;","x\u2225x is a junction of two values represented by a row of bits; and","h(x) is a \u201ccollision-resistant\u201d one-way hash function."]}}}},"Under the above definitions, when a processing procedure  of  is completed (namely, when the designated sequential aggregation period is completed), n, k, ij, bj, and Aj represent the number of time-processing requests, the height of a so-formed sequential aggregation tree, the number of nodes at level j, whether or not there is a dummy node at level j and an alignment of values assigned to the nodes at level j, respectively.",{"@attributes":{"id":"p-0311","num":"0325"},"figref":"FIG. 29","sub":"2","b":["0","0","0","1","1","0","1","2","3","4"]},"Then, by (2.2) of the processing procedure , root path rtPath(, ) of node (, ) is represented by\n\n","At level , node (, ) becomes a dummy node by step (...). At level , a value is assigned to node (, ) by step (....), so that node (, ) forms a dummy node. At level , a value is assigned to node (, ) by step (....), so that node (, ) forms a dummy node. At level , a value is assigned to node (, ) by step (...). At level , a value is assigned to node (, ) by step (...).","As a result, the sequential aggregation tree as shown in  can be constructed incrementally. At each level, there is only one dummy node at most. It is necessary to assign a dummy label (assigned dummy value) to the dummy node in accordance with any procedure determined in advance. As a simple definition of such a procedure, there exists a method of defining a dummy label as the function of level. Thus, this method may be adopted.",{"@attributes":{"id":"p-0315","num":"0330"},"figref":"FIG. 30"},"The first to third embodiments mentioned above are provided on the assumption that the sequential aggregation tree is completed with the use of dummy nodes on each occasion of publishing information. However, the other method may be adopted as one concrete method of forming a sequential aggregation tree.","In detail, the event-ordering certification systems ,  and  in the above-mentioned embodiments can employ any one of the above-mentioned methods of dynamically forming the sequential aggregation tree. Therefore, due to the possibility of coping with quantitative alteration in the number of even-ordering requests from the user apparatuses with flexibility, it is possible to build an even-ordering certification system having improved scalability.","(Definition of Authentication Path and Calculation Method of Root Value by Definition)","For nodes in an incrementally-formed sequential aggregation tree having no predetermined height, it is possible to define a root path and an authentication path at a certain point of time as follows. Note that this definition is applicable for a situation such that the number of requests accepted during a predetermined sequential aggregation period cannot be anticipated in advance, in the first to third embodiments.","Assume that \u03ba(m)=min{h|m+1\u22662} when a maximum value in the leaf number at the present moment is m (\u22670) (and therefore the number of leaves is m+1), and curSBT(m) denote a sequential aggregation tree having height \u03ba(m).","Assume that p=(i, j)\u03b5curSBT(m) and a row of nodes from p to a root of curSBT(m) is represent by a root path \u201crtPath(p, m)\u201d.","\u201crtPath(p, m)\u201d represents a row of nodes whose assigned values are to be determined at the point when an assigned value for an m. leaf of leaves belonging to the root path rtPath(p, m) is determined.","If rtPath(p, m)=[(0, i(), . . . , (k, i(k))), then there exists k satisfying","0\u2266k\u2266k, and","rtPathD(p, m)=[(0, i(), . . . , (k, i(k)))","is satisfied.","\u201crtPathDV(p, m)\u201d is rtPathD(p, m) having respective nodes where assigned values are assigned.","If rtPathD(p, m)=[(, i(), . . . , (k, i(k))], then rtPathDV(p, m) is represented as","rtPathDV(p, m)=[((0, i(), v()), . . . , ((k, i(k)), v(k))).","An aggregate of nodes p\u2032=(j\u2032, i\u2032) essential to calculate a root value of curSBT(m) from node p=(j, i) will be called \u201cauthentication path of the node\u201d and represented by \u201cauthPathT(p, m)\u201d. Note that for each node belonging to an authentication path it includes information about a direction (left or right) junctural to the node, in the form of tags.","If \u03ba(m)=k, and","rtPath(p, m)=[(j, r(j)), . . . , (k, r(k))],","then \u201cauthPathT(p, m)\u201d can be expressed by using \u201crtPath(p, m)\u201d as follows:\n\nauthPath()=[((()), ()), . . . , ((1,(1), (1)))\n\nwhere when r(j\u2032) is an even number, a(j\u2032)=r(j\u2032)+1, LR(j\u2032)=R, and when r(j\u2032) is an odd number, a(j\u2032)=r(j\u2032)\u22121, LR(j\u2032)=L, (for j\u2032\u03b5[j . . . k\u22121]).\n","As for the element ((j, a(j)), LR(j)) of \u201cauthathT(p, m)\u201d, part \u201cLR(j)\u201d will be called \u201c(LR)tag\u201d. Further, regarding the element (j, r(j)) of \u201crtPath(p, m)\u201d, (j, r(j)+1) in case of an even number of r(j) will be called \u201cright complementary point of (j, r(j))\u201d, while (j, r(j)\u22121) in case of an odd number of r(j) will be called \u201cleft complementary point of (j, r(j))\u201d, after.","Then, authPathT(p, m) consists of right or left complementary points of points except the root of rtPath(p, m).","The \u201cauthPathT(p, m)\u201d except for information of LR-tag will be called \u201cauthPathT(p,m)\u201d. That is, if\n\nauthPath()=[(()), ()), . . . , ((1,(1)), (1))],\n\nthen\n\nauthPath()=[(()), . . . , (1,(1))]\n\nis established. On the contrary, if\n\nauthPath()=[((()), ()), . . . , ((1,(1)), (1))],\n\nis given, then authPathT(p, m) can be calculated as follows: For j\u03b5[j . . . k), a node at level j forming rtPath(p, m) is presented by\n\n","For authPath(p, m) and authPathT(p, m), respective aggregates of nodes, that their assigned values have been already determined at that time when an assigned value of m. leaf becomes definite, are defined as\n\nauthPathD(p,m) and authPathTD(p,m),\n\nrespectively. When authPath(p, m) and authPathT(p, m) are expressed as above, there exist\n\nsatisfying \u201c1\u2266\u201d, and\n","nonnegative integers j(), . . . , j(k\u22121) satisfying j\u2266j()<j()< . . . <j(k\u22121).","They are expressed as follows:\n\nauthPath()=[((0), ((0))), . . . ((1\u22121), ((1\u22121)))], and\n\nauthPath()=[(((0), ((0))), ((0))), . . . (((1\u22121), ((1\u22121))), ((1\u22121)))].\n","Additionally, assume that authPathDV(p, m) and authiPathTDV(p, m) represents authPathD(t, m) and authPathTD(t, m) plus assigned values of respective nodes belonging to authPathD(p, m) and authPathTD(p, m), respectively. In detail, when authPathDV(p, m) and authPathTDV(p, m) are expressed as above, there are established:\n\nauthPath()=[(((0), ((0)), ((0)), . . . , (((1\u22121), ((1\u22121))), ((1\u22121)))], and\n\nauthPath()=[(((0), ((0)), ((0)), . . . , (((1\u22121), ((1\u22121))), ((0)), . . . , (((1\u22121), ((1\u22121))), ((1\u22121)), ((1\u22121)))]\n\nwhere v\u2032(j)=V(j, a(j\u2032)) for each j\u2032\u03b5{j(), . . . , j(k\u22121)}.\n","On condition that a relevant sequential aggregation tree is completed at that stage of assigning an assigned value to a leaf numbered \u201cm\u201d in accordance with any of the above-mentioned forming methods and that authPathTDV(p, m) is represented as above, it is possible to calculate a root value of the sequential aggregation tree by an assigned value V(p) of node p (=(j, i)) and also authPathTDV(p, m) in the following manner. For j\u03b5[j . . . k], v\u2032(j) is defined by the following (1) and (2) recursively. Then, v\u2032(k) becomes a root value of the sequential aggregation tree.\n\n","Suppose that m, m denote respective leaf-numbers of leaves in a sequential aggregation tree where m\u2266m. Then,\n\ncurSBT(m1)curSBT(m2)\n\nis satisfied.\n","Assume that p=(j, i)\u03b5curSBT(m). Then, the followings (1), (2), and (3) are established:","(1) rtPath(p, m)rtPath(p, m);","(2) authPath(p, m)authPath(p, m); and","(3) authPathD(p, m)authPathD(p, m).","<Various Features of Sequential Aggregation Tree>","In the following descriptions, assuming that \u201cm\u201d represents a maximum value of leaf-numbers at the present moment about an incrementally-formed sequential aggregation tree, the terminologies:","\u201crtPath((, i), m)\u201d, \u201crtPathD((, i), m)\u201d, and \u201crtPathDV((, i), m)\u201d may be abbreviated to","\u201crtPath(i, m)\u201d, \u201crtPathD(i, m)\u201d, and \u201crtPathDV(i, m)\u201d, respectively. Similarly, the terminologies:","authPath((, i), m), authPathT((, i), m), authPathD((, i), m), authPathTD((, i), m), authPathDV((, i), m), and authPathTDV((, i), m) may be abbreviated to","authPath(i, m), authPathT(i, m), authPathD(i, m), authPathTD(i, m), authPathDV(i, m), and authPathTDV(i, m), respectively.","We now explain an algorithm to calculate an authentication point of a user point by an audit point in the sequential aggregation tree. Let \u201ck\u201d denote a height of a sequential aggregation tree, \u201ci\u201d an identification number of the user point and let \u201ci\u201d denote an identification number of the audit point where i<i. For node (, i) of the sequential aggregation tree, generally, rtPath((, i), m) can be calculated as\n\nPath((0,),)=[(0,(0), . . . , (())]\n\nwhere k=\u03ba(m), and r(j)=floor(i\/2) for j\u03b5[0 . . . k].\n","By this procedure, it is carried out to calculate both root path rtPath((, i), m) for node (, i) and root path rtPath((, i), m) for node (, i). As a result, rtPath((, i), m) comes to coincide with rtPath((, i), m) since a certain element. Then, the element where rtPath((, i), m) coincides with rtPath((, i), m) at first is called \u201cconfluent point\u201d between node (, i) and node (, i). Further, a left child of the confluent point is referred to as \u201cauthentication point of node (, i) (i.e. user point) by node (, i) (i.e. audit point)\u201d.","Described above is the definition of an authentication point where a user point and an audit point belong to an identical sequential aggregation tree together. Nevertheless, in case that a sequential aggregation tree that another sequential aggregation tree containing the audit point does belong to, is produced after the formation of a sequential aggregation tree SBT that the user point belongs to, a root of SBT is defined as \u201cauthentication point of the user point by the audit point\u201d.","(Feature 1 of Sequential Aggregation Tree)","Let \u201cB\u201d be a partial sequential aggregation tree forming a certain sequential aggregation tree. Also assume that the processing of a round corresponding to last(leafs(B)) has been already completed at a certain point of time. At that point of time, assigned values for respective nodes belonging to \u201cB\u201d have been calculated and assigned to these nodes.","Certification of Feature 1","In accordance with the method of  to form a sequent aggregation tree incrementally, it is executed at each completion of respective rounds to calculate all assigned values for other nodes (except leaves calculable by assigned values for leaves acquired until the round in question) and assign the calculated values to these nodes.","At the point of finishing the processing of the round corresponding to last(leafs(B)), there are already determined assigned values of respective leaves belonging to leafs(B), allowing assigned values of each node forming the partial tree B to be calculated. Thus, at this stage, the assigned values of respective nodes forming the tree B are calculated and assigned to the nodes. For the sequential aggregation tree whose height is not determined yet and which is formed incrementally, a feature 2 will be established as follows.","(Feature 2 of Sequential Aggregation Tree)","Let C, Z, i and i denote a user apparatus, an audit apparatus and two \u201csequential aggregation tree\u201d leaf numbers respectively, where i<i. Assume that C received a receipt at round(i), while Z received an audit receipt at round(i). Then, an authentication point of \u201ci\u201d by \u201ci\u201d has characteristics as follows.","(1) An assigned value of the authentication point is included in complementary data in the receipt at the audit point, that is, node (, i).","(2) If the above authentication point is expressed by (j\u2032, i\u2032), then assigned values for nodes belonging to authPath((, i), j) and each having its level smaller than j\u2032 are included in either late complementary data that a user receiving a receipt at a round corresponding to node (, i) could receive after the above round or complementary data in the receipt.","That is, if i\u2266i, then assigned values for nodes belonging to authPath((, i), j) and each having its level smaller than j\u2032 are included in either EOC(i) or CToken(i, i).","(3) The assigned value of the above authentication point and the assigned values of nodes belonging to rtPath((, i), i), whose level is smaller than the level of the authentication point can be calculated from the receipt (incl. in-receipt complementary data) that a user has received at node (, i) and the late complementary data that the user receives on and after a round corresponding to node (, i).","Certification of Feature 2","We now describe a case of incorporating in-receipt complementary data (immediate complementary data) into a receipt to be delivered to a user. Even when not incorporating the in-receipt complementary data into the receipt but instead incorporating the same information into late complementary data, the same conclusion could be attained with similar argument.","(1) First, an item (1) will be described with reference to . Assume here, (j, i) denotes a confluent point. Let (j\u2032, i\u2032) be an authentication point being a left child of the above confluent point. In rtPath((, i), i) of node (, i) in surSBT(i), it is assumed that (j\u2033, i\u2033) represents a node originating in node (, i) and just before the confluent point. Then, the authentication point coincides with a left complementary point of (j\u2033, i\u2033). Thus, according to the definition of the authentication path authPathT(i, i), ((j\u2032, i\u2032), L) is included in the authentication path of node (, i) in curSBT(i). The assignment of a value for node (j\u2032, i\u2032) has been completed before round(i). Therefore, ((j\u2032, i\u2032), L, V(j\u2032, i\u2032)) is included in an in-receipt complementary data against node (, i).","(2) Item (2) will be described with reference to .","Assume that k=\u03ba(i).","The authentication point (j\u2032, r(j\u2032)) is included in root path rtPath((, i), i) for node (, i). Assume here that\n\nPath((0,0),1)=[(0,(0)), . . . , ((\u2032)), (1), . . . , (()))].\n","Further, an array (row) of nodes formed by elements of authPath((, i), j) and having each level smaller than j\u2032 is represented by\n\n[(0, s(0)), . . . , (j\u2032\u22121, s(j\u2032\u22121))].\n","Then, it has only to certify that V(j, r(j)) is included in either EOC(i) or CToken(i, i) for each j (i.e. j\u03b5[0 . . . j\u2032\u22121]).","By the definition of authPath((, i), i), it is noted that an element p=(j, s(j)) at level j of authPath((, i), i) is either a right of an element p at level j+1 of rtPath((, i), i) and the left child. We describe both cases respectively.","(Case 1) When p is the right child of p, an assigned value V(p) for p is included in the late complementary data CToken(i, i) that the apparatus C can receive at i satisfying i\u2266j, as shown in . The reason is as follows. By the feature 1 of the sequential aggregation tree, when the event-ordering certification process on the round corresponding to leaf (, i) is completed, it has already become possible to calculate an assigned value for a partial tree of curSBT(i) indicated with B of . As a matter of fact, the assigned values have been already calculated and assigned. Accordingly, the late complementary data published on and after the above point of completion contains the assigned value V(p) for the root p of the partial tree B.","(Case 2) When p is the left child of p, an assigned value V(p) for node p is included in an in-receipt complementary data for event-ordering demanders on the round(i), as shown in . The reason is that","\u2200i\u03b5leafs(B) [i<i]","is satisfied for the partial tree B having the root p of .","Accordingly, at the start of a round distinguished by i under BcurSBT(i), an assigned value for leafs(B) has become definite already. Thus, according to the feature 1 of the sequential aggregation tree, an assigned value for p=root(B) has become definite at the round distinguished by i. Therefore, p is included in authPathD((, i).","(3) By the definition of authentication path and item (2), it is possible to calculate V(j, r(j)) for each j\u03b5[0 . . . j\u2032] recursively, as follows.","First, assume that V(, r()) denotes an assigned value for node (, i) included in an event receipt.","Assume that (V(j, r(j)) was calculated for j\u03b5[0 . . . j\u2032\u22121]. Then, V(j+1, r(j+1)) is calculated as follows:\n\n(1+1,(1+1))=((1,(1))\u2225(1,(1))) for (1)<(1), and\n\n(1+1,(1+1))=((1,(1))\u2225(1,(1))) for (1)<(1).\n","Note that the following description is based on the premise that a point of time of starting the service of the event-ordering certification system coincides with an origin of time; one parameter (e.g. one second, one milli-second, etc.) is established as a clocking unit; and a time point is represented by an integral number as a result of clocking a passage of time since the above origin of time by the above clocking unit. Assume furthermore, at a first audit point in each sequential aggregation period T, each audit apparatus Z receives not only audit information closed in the period T but also a previously-obtained root value. For instance, the previously-obtained root value is formed by a value V(root(T\u2032)) assigned to a root during a sequential aggregation period T\u2032 just before the first audit point.","For an incrementally-constructed sequential aggregation tree because of no predetermined height, there is established a next feature 3.","(Feature 3 of Sequential Aggregation Tree)","Below, let T be a positive integer and let \u03b1, \u03b1, \u03c4 and \u03c4\u2032 be respective identifiers of extended leaves. Assuming that Z denotes an audit apparatus, at an audit point \u03b1 of the audit apparatus Z, the following condition (*1) is satisfied:\n\ntime(\u03b10)\u03b5=[0 \u2003\u2003(*1)\n","Additionally, assuming that \u03b1 and \u03b1\u2032 represent one optional audit point of the audit apparatus and the next audit point, respectively, the following condition (*2) is satisfied:\n\ntime(\u03b1\u2032)\u2212time(\u03b1)\u2266\u2003\u2003(*2)\n\nAssuming that a user A sends a certain event-ordering request; \u03c4 denotes a leaf (of a sequential aggregation tree) against this request; subsequently, the user A requests late complementary data for its event receipt; \u03c4\u2032 denotes another leaf against this request for late complementary data, the following condition (*3) is satisfied:\n\ntime(\u03c4\u2032)\u2212time(\u03c4)\u2267\u2003\u2003(*3)\n\nAssume, at a first audit point belonging to each sequential aggregation period on and after the second sequential aggregation period, the audit apparatus Z receives a root value of a preceding sequential aggregation period from an event-ordering certification organization.\n","Under the above assumption, the following items (1) to (4) are satisfied:","(1) There exists a certain audit point a by the audit apparatus Z, which satisfies \u03b1\u03b5[\u03c4 . . . \u03c4\u2032];","(2) For the audit point \u03b1 satisfying \u03b1\u03b5[\u03c4 . . . \u03c4\u2032], an assigned value (label) for an authentication point of \u03c4 by \u03b1 is included in an audit receipt that the audit apparatus Z receives at a certain leaf (e.g. \u03c4\u2032) after the audit point \u03b1.","(3) There exists an audit point \u03b1\u2032 by the audit apparatus Z for an optional leaf \u03c4, and the following condition (*4) is then satisfied:\n\ntime(\u03c4)\u2266time(\u03b1)<time(\u03c4)+\u2003\u2003(*4)\n","(4) For an optional user point \u03c4 satisfying T\u2266time(\u03c4), there exists an audit point \u03b1 by the audit apparatus Z, which satisfies \u03b1<\u03c4.","(Certification of Feature 3)","(1) Suppose that there exists no audit point \u03b1 by the audit apparatus Z, which satisfies \u03b1\u03b5[\u03c4 . . . \u03c4\u2032]. Situations are classified depending on whether there exists an audit point \u03b1 of the audit apparatus Z positioned on the left of \u03c4 or not.","(Case 1) The situation where there exists an audit point of Z on the left of \u03c4 is discussed. Assume that an audit point on the left of \u03c4 and also closest to \u03c4 is represented by \u03b1 and another audit point on the right of \u03c4\u2032 and also closest to \u03c4\u2032 is represented by \u03b1. Since\n\ntime(\u03b11)<time(\u03c4) and time(\u03c4\u2032)<time(\u03b12)\n\nis satisfied depending on setting \u03b1 and \u03b1, time(\u03b1)<time(\u03c4), that is, \u2212time(\u03b1)>\u2212time(\u03c4) is obtained.\n\nAccordingly,\n\ntime(\u03b12)\u2212time(\u03b11)>time(\u03c4\u2032)\u2212time(\u03c4)\u2267\n\nis obtained. On the other hand, since there exists no audit point \u03b1 satisfying time(\u03b1)\u03b5[time(\u03c4) . . . time(\u03c4)], \u03b1 is a next audit point of \u03b1. Thus, by the above condition (*2),\n\ntime(\u03b12)\u2212time(\u03b11)\u2266\n\nhas to be satisfied. This leads to the following conclusion:\n\ntime(\u03b12)\u2212time(\u03b11)>and time(\u03b12)\u2212time(\u03b11)\u2266\n\nHowever, this conclusion contradicts the assumption of absence of an audit point \u03b1 by Z satisfying time(\u03b1)\u03b5[time(\u03c4) . . . time(\u03c4\u2032)]. Consequently, there exists an audit point \u03b1 satisfying\n\ntime(\u03b1)\u03b5[time(\u03c4) . . . time(\u03c4\u2032)].\n","(Case 2) The situation where there exists no audit point of Z on the left of \u03c4 is discussed. Then, for the audit point \u03b1 satisfying time(\u03b1)\u03b5[0 . . . T],\n\n\u03b1\u03b5[\u03c4 . . . \u03c4\u2032]\n\nis shown.\n","(2) It is led straightforward by the above Feature 2 of sequential aggregation tree and item (1).","(3) It is classified on whether there exists an audit point by Z before \u03c4.","(Case 1) The situation where there exists an audit point of Z before \u03c4 is discussed. Assume that an audit point before \u03c4 and latest to \u03c4 is represented by \u03b1 and the time of the next audit point is represented by \u03b1\u2032. Then,\n\ntime(\u03b1)<time(\u03c4)\u2266time(\u03b1\u2032)\n\nis satisfied. Thus, by the condition (*2),\n\ntime(\u03b1\u2032)\u2212time(\u03c4)<time(\u03b1\u2032)\u2212time(\u03b1)\u2266\n\nis obtained. Therefore,\n\ntime(\u03b1\u2032)<time(\u03c4)+\n\nis satisfied. From above, the condition (*4) is obtained.\n","(Case 2) The situation where there exists no audit point of Z before \u03c4 is discussed. Then, by the assumption of Feature 3, there exists an audit point \u03b1 by Z satisfying time(\u03b1)<T.","Thus,\n\ntime(\u03c4)\u2266time(\u03b10)<\n\nis satisfied and thus\n\ntime(\u03b10)\u2212time(\u03c4)<\u2212time(\u03c4)\u2266\n\nis satisfied. Therefore,\n\ntime(\u03b10)<time(\u03c4)+\n\nis led. From above, by \u03b1\u2032=\u03b1, the condition (*4) is obtained.\n","(4) It is led straightforward by the above assumption (*1) that there exists an audit point \u03b1 of Z satisfying time(\u03b1)\u03b5[0 . . . T].","(Feature 4 of Sequential Aggregation Tree)","Let SBT be a sequential aggregation tree having a height k. Then, i represents a leaf-number of SBT. Assume that k\u2266k and \u201cauthPathTk()\u201d denotes an array of first \u201ck\u201d elements of \u201cauthPathTk(i)\u201d where \u201ck\u201d is the number of elements.","Assume that authPathTk()=[((, i()), LR()), . . . , ((k\u22121, i(k\u22121))], LR(k\u22121))]. Additionally, let v and v be different hash values. We are given AP and AP as follows:\n\n1=[((0), 1\u2032(0)), ((1), 1\u2032(1)), . . . , (((1\u22121), 1\u2032(1\u22121))],\n\n2=[((0), 2\u2032(0)), ((1), 1\u2032(2)), . . . , (((1\u22121), 2\u2032(1\u22121))].\n\nThen, it is noted that v\u2033(k) calculated from v and AP as below (*1) does not coincide with v\u2033(k) calculated from v and AP as below (*2), excepting practically-negligible probability.\n","(*1) For each j\u2032\u03b5[0 . . . k], v\u2032(j\u2032) is recursively defined as\n\n1\u2033(0)=1.\n\nIf j\u2032>0 and (1)=, then\n\n1\u2033(\u2032)=(1\u2032(1)\u22251\u2033(1)).\n\nIf j\u2032>0 and (1)=, then\n\n1\u2033(\u2032)=(1\u2033(1)\u22251\u2032(1)).\n","(*2) For each j\u2032\u03b5[0 . . . k], v\u2033(j\u2032) is recursively defined as\n\n2\u2033(0)=2.\n\nIf j\u2032>0 and (1)=, then\n\n2\u2033(\u2032)=(2\u2032(1)\u22252\u2033(1)).\n\nIf j\u2032>0 and (1)=, then\n\n2\u2033(\u2032)=(2\u2033(1)\u22252\u2032(1)).\n","Certification of Feature 4.","Assume that v\u2033(k)=v\u2033(k). A minimum of j\u2032 under j\u2032\u03b5[0 . . . k] and v\u2033(j\u2032)=v\u2033(j\u2032) is represented by j.","Since v\u2260v, that is, v\u2033(0)\u2260v\u2033(0), j>0 is satisfied.","Assume that j=j\u22121.","Depending on whether LR(j) is L or R, the situations are classified as follows:","(Case 1) This is a case with LR(j)=L. Depending on setting j and j,\n\n1\u2033(0)\u22602\u2033(0)\n\nis shown.\n","Thus,\n\n1\u2032(0)\u22251\u2033(0)\u22601\u2032(0)\u22252\u2033(0)\n\nis satisfied. Also, the conditions (*1), (*2) lead to\n\n1\u2033(1)=(1\u2032(0)\u22251\u2033(0)),\n\n2\u2033(1)=(2\u2032(0)\u22252\u2032(0)).\n\nThus,\n\n(1\u2032(0)\u22251\u2033(0))=(2\u2032(0)\u22252\u2033(0))\n\nis satisfied, and thus v\u2032(j)\u2225v\u2033(j) and v\u2032(j)\u2225v\u2033(j) make a collision of the collision-resistant hash function h.\n","(Case 2) This is a case with LR(j)=R. In the same way as case 1, it is led that v\u2033(j)\u2225v\u2032(j)) and (v\u2033(j)\u2225v\u2032(j)) make a collision of the collision-resistant hash function h.","From above, the collision of the collision-resistant hash function h appears in both cases. Such a situation is not meant to be (except a practically-negligible probability). Thus, a situation of v\u2033(k)=v\u2033(k) is not also meant to be (except a practically-negligible probability).","In connection with the first to third embodiments mentioned above, we now describe more practical embodiments of the event-ordering certification system and the event-ordering certification audit system. Concretely, these embodiments are more practical with respect to various conditions about both resource and performance of respective apparatuses forming the above systems and the same of the network connecting the apparatuses mutually. More in detail, we now cite an example of certifying the event ordering by using a nonrepeating oriented graph, such as tree structure. In order to realize the event-ordering certification with scalability such that the event-ordering could be accomplished even if the nonrepeating oriented graph cannot be stored in a computer memory, any of the apparatuses (i.e. an event-ordering certification apparatus and related user apparatuses) is required to concern the event-ordering certification by a method making it unnecessary to extract the nonrepeating oriented graph on the memory. Additionally, from the same view of scalability, it is required that even if the nonrepeating oriented graph gets large, communication traffic between the event-ordering certification apparatus and the user apparatuses would not become excessive. If the communication traffic between the apparatuses could be suppressed within the order of a logarithm of the number of nodes belonging to the corresponding nonrepeating oriented graph, this requirement would be satisfied. In general, there exists a trade-off relationship between communication traffic (i.e. traffic between memory capacity necessary for realizing a designated function by a computing system connected through a network and apparatuses) and individual processing throughput of the apparatuses. Therefore, in order to allow a system with a designated function to be applicable under various situations about memory quantity, processing capability of the apparatuses and transmission capacity of the network, it is valuable to provide an implementation method that a system throughput within a practical range reduces both memory quantity and communication traffic and another implementation method that both memory quantity and communication traffic within their practical ranges reduce the system throughput, conversely.",{"@attributes":{"id":"p-0408","num":"0426"},"figref":"FIG. 34","b":["100","100","1","2","3","2","1","2","2","1"],"i":["a ","a ","a","a ","a ","a. "]},"The certification apparatus comprises a transmitting\/receiving part for transmitting and receiving data to and from the user apparatuses I through the computer network , an event-ordering request aggregation part for arranging digital data (as event-ordering requests) transmitted from the user apparatuses I with the use of a sequential aggregation tree, an event-ordering reply drafting part for drafting a certification reply containing the receipt, a digital signature drafting part for applying a high-intensity digital signature on data where respective contents of a plurality of receipts published for a constant period by the certification apparatus are aggregated, thereby forming publication data, an electronic information publishing part for publishing the publication data electronically and a memory part for storing the receipts and information about event-ordering certification.","As mentioned above, the event-ordering request aggregation part operates to aggregate the event-ordering requests with the use of the sequential aggregation tree. This sequential aggregation tree will be described with reference to .  shows one concrete example of a sequential aggregation tree where digital data is sequentially assigned from the left side with time during a certain period (e.g. one week, a cycle that the certification apparatus publishes coordinated data, which will be referred to as \u201csequential aggregation period\u201d). Note that the digital data is obtained by calculating all or part of digital data included in the event-ordering requests from the users' apparatuses I, in accordance with a designated \u201csequentially assigned data\u201d calculating procedure. Note that the so-obtained data (e.g. hash values of the digital data included in the event-ordering requests) will be referred to as \u201csequentially assigned data-item\u201d. Note that a leaf of the sequential aggregation tree where each event-ordering request from the user apparatus I is assigned is also referred to as \u201cregistration point\u201d.","A calculating method of values assigned to respective nodes (except leaf) in the sequential aggregation tree is as follows. An assigned value of a parent in the sequential aggregation tree is obtained by calculating a hash value as a result of connecting an assigned value H\u2032 of a left child with an assigned value H\u2033 of a right child (conjunction between a bit row and a bit row) and further applying a designated \u201ccollision-resistant\u201d one-way hash function h. Here, the resultant value is expressed by h(H\u2032\u2225H\u2033). In this way, it is performed to calculate a higher-leveled assigned value from lower-leveled assigned values, finally reaching a highest-leveled assigned value, namely, a root value H.","We now describe an example of a sequential aggregation tree having sixteen leaves, as shown in . The number of leaves of the sequential aggregation tree and its height do not become definite unless the sequential aggregation period is completed. Further, in the sequential aggregation tree, the assignment of values to the leaves is carried out from left, in sequence. The assignments of values to nodes higher than level  (i.e. non-leaves) are carried out incrementally if possible. Accordingly, for a plurality of nodes on the same vertical line of , the assignments of values to the nodes are carried out at about the same time in the same processing unit.","Assuming that a node of level j and number i is represented by (j, i) and an assigned value of (j, i) is represented by V(j, i), the concrete example of  will be described.","Suppose, the hash value to be assigned to a certain leaf is identical to V(, ) (i.e. a registration point of (, )). In order to calculate a root value H (=V(, )) from this hash value V(, ), it has only to link V(, ) to V(, ) from the left side thereby calculating a hash value h\u2032; V(, ) to the hash value h\u2032 from the right side thereby calculating a hash value h\u2032; V(, ) to the hash value h\u2032 from the left side thereby calculating a hash value h\u2032; and link V(, ) to the hash value h\u2032 from the right side thereby calculating a hash value H (=V(, )), in order. With the above procedure, when it becomes possible to calculate the root value H from V(, ) and its complementary data (e.g. V(, ), V(, ), V(, ), V(, ) in this case), we can say \u201cV(, ) links with the root value H through the hash function h\u201d. Additionally, the complementary data of V(, ) in the sequential aggregation tree is given by","[(V(, ), L), (V(, ), R), (V(, ), L), (V(, ), R)].","where L and R represent \u201cto link from the left side in linking two digital data\u201d and \u201cto link from the right side in linking two digital data\u201d, respectively.","The event-ordering reply drafting part drafts a certification reply containing a receipt EOC(y) as shown in  and sends it to the user apparatus I. The receipt EOC(y) is constructed so as to contain: digital data y sent from a user; sequentially assigned data-item z calculated from the digital data y by the above-mentioned calculation procedure for sequentially assigned data-item; a \u201csequential-aggregation\u201d tree number enabling a sequential aggregation tree having the data-item z assigned to be identified uniquely; a \u201csequential aggregation tree\u201d leaf number enabling a \u201csequential aggregation tree\u201d leaf having the data-item z assigned to be identified uniquely; and both positional information and assigned value of sequential aggregation complementary data (part) SK acquirable at that time. The above data part SK will be referred to as \u201cimmediate complementary data of registration point\u201d.","Again, the certification reply is constructed so as to contain the positional information of late complementary data TK of respective registration points of the user apparatus I in the past and their assigned values. Note that the late complementary data TK designates sequential aggregation complementary data which is acquirable after publishing the certification reply in question. In , for instance, the late complementary data of V(, ) is formed by V(, ) and V(, ). While, V(, ) and V(, ) constitute the late complementary data that is acquirable on and after an assignment of V(, ). As for one leaf a and another leaf a on the right of the leaf a, generally, late complementary data of the leaf a determined at the time of completing the assignment of the leaf a will be referred to as \u201ccomplementary data of a at a\u201d. In , the complementary data of node (, ) at node (, ) is formed by node (, ).","Referring to , we now describe a concrete example of the certification reply in accordance with this embodiment. Note that the format of a certification reply in the embodiment will be referred to as \u201csequence complementary procedure\u201d hereinafter. Suppose now, the registration points from a certain user apparatus I consist of X(node (, )), X(node (, )), X(node (, )), X(node (, )), X(node (, )) and X(node (, )).","In the sequence complementary procedure, it is executed at respective registration points to return the following data to the user apparatus I.","(1) For the certification reply at the point X, there is returned immediate complementary data of the point X [i.e. assigned value of node (, )).","(2) For the certification reply at the point X, there are returned immediate complementary data of the point X and X's late complementary data at point X [i.e. immediate complementary data of X: assigned values of nodes (, ), (, ), (, ); X's late complementary data at X: assigned values of nodes (, ), (, )].","(3) For the certification reply at the point X, there are returned immediate complementary data of the point X and X\/X's late complementary data at point X [i.e. immediate complementary data of X: assigned, values of nodes (, ), (, ); X's late complementary data at X: assigned values of nodes (, ), (, ); X's late complementary data at X: assigned value of node (, )].","(4) For the certification reply at the point X, there are returned immediate complementary data of the point X and X\/X\/X's late complementary data at point X [i.e. immediate complementary data of X: assigned values of nodes (, ), (, ), (, ); X's late complementary data at X: assigned values of nodes(, ), (, ), (, ); X's late complementary data at X: assigned value of node (, ); X's late complementary data at X: assigned value of node (, )].","Much the same will be true on the points X and X. In this way, with respect to a certain registration point, the certification reply is formed so as to contain the immediate complementary data of this registration point and the late complementary data (data-items) of respective registration points at the registration point, which have been registered before the above registration point, in accordance with the sequence complementary procedure. Note that the respective certification replies are managed with respect to each user apparatus I.","The user apparatus I comprises a transmitting\/receiving part for transferring data to and from the certification apparatus through the computer network , an event-ordering certification requesting part for performing the event-ordering requests containing designated digital data by several times, an event-ordering certification verifying part for verifying a receipt contained in the certification reply in response to the event-ordering request and a memory part for storing the certification reply containing the receipt and the information about event-ordering certification.","The event-ordering certification verifying part has the following functions against the receipt.","As a first function of validation, the event-ordering certification verifying part verifies that the sequential assigned data-item is linked with the information published through the digital signature drafting part of the certification apparatus and the electronic information publishing part . In detail, it is executed to validate whether a value published as the root value of the sequential aggregation tree coincides with a root value calculated by the user apparatus I or not.","As a second function of validation, the event-ordering certification verifying part verifies the temporal context of receipts among the user apparatuses I even before the information is published.","The second function of validation will be described with reference to . First, we now explain the relationship between a confluent point and an authentication point.","Regarding a leaf a in a certain sequential aggregation tree, a path from a to a root of the tree is called \u201croot path of a\u201d and represented by rtPath(a). Additionally, a row of sibling nodes for the nodes belonging to rtPath(a) but the root will be called \u201cauthentication path\u201d and represented by authPath(a).","Suppose, we are given a certain sequential aggregation tree having two leaves a and a where the leaf a is positioned on the right of the leaf a. Then, a point where a path traveling from a to the root intersects with a path traveling from a to the root will be referred to as \u201cconfluent point between a and a\u201d. Additionally, a left child of the confluent point will be called \u201cauthentication point of a by a\u201d or \u201ca authentication point of a by a\u201d. For instance, in , an authentication point of the registration point X by X is a point (, ). Similarly, an authentication point of the registration point X by X is a point (, ).","Suppose, two user apparatuses A and B respectively acquire the certification replies of respective registration points by the sequence complementary procedure. In , let a, a, a and af be respective registration points of the user apparatus A and let b be a registration point of the user apparatus B. Note that af is referred to as \u201ctemporary terminal point\u201d and also positioned on the rightmost side of the registration points of the user apparatus A. In , there exist the registration point a of the user apparatus A, the registration point b of the user apparatus B on the right of the point a and the registration point af of the user apparatus A on the further right of the point b.","Here, according to the sequence complementary procedure, when the registration point a is positioned on the left of the registration point b, a label (assigned value) of the authentication point is included in a certification reply (immediate complementary data) of the registration point b. Additionally, on and after the event-ordering certification process at the registration point b is completed (e.g. position of the registration point af), the label of the authentication point is included in a label calculable from the late complementary data of the registration point a. Therefore, by verifying whether the assigned value of the authentication point calculated from the late complementary data of the registration point a at the registration point af coincides with the assigned value of the authentication point included in the immediate complementary data of the registration point b, it is possible to verify the temporal context between the registration point a and the registration point b (detail: see later-mentioned Feature of Sequential Aggregation, item (3)).","In , if only existing a coincidence about an assigned value V(o) for an authentication point o of the registration point a by the registration point b in the present sequential aggregation tree at the present moment (i.e. at the registration point af), it is possible to certify that the registration of the registration point a was carried out in advance of the registration of the registration point b, objectively. The event-ordering certification verifying part verifies this temporal context due to its operation mentioned later.","Note that the above apparatuses are formed by electronic apparatuses each having a CPU (Central Processing Unit) having at least a calculating function and a control function, a main memory having a function to store programs and data, such as RAM (Random Access Memory), and a secondary memory capable of continuing to memorize data even at powered-off, such as HD (Hard Disc). The operations of the certification apparatus (i.e. the event-ordering request aggregation part , the event-ordering reply drafting part , the digital signature drafting part and the electronic information publishing part ) and the operations of the user apparatus I (i.e. the event-ordering requesting part and the event-ordering certification validating part ) are nothing but respective crystallizations of the above calculating\/control functions of the above central processing units. Additionally, the memory part of the certification apparatus and the memory part of the user apparatus I are equipped with the above-mentioned functions of either the main memory or the secondary memory.","In the event-ordering certification system constructed above, an event-ordering certification method and an event-ordering certification validation method will be described with reference to . In the figures,  is a sequence diagram to explain the operation of the certification apparatus to draft a certification reply containing a receipt for one sequential aggregation period by the event-ordering certification apparatus .  are sequence diagrams to explain the operation of the user apparatus I to perform a second validation for the receipt.","First of all, the event-ordering certification method will be described with reference to .","When the user apparatus I sends an event-ordering request including digital data y to the event-ordering certification apparatus , it receives the event-ordering request including the digital data y through the transmitting\/receiving part (steps S, S).","Next, the event-ordering request aggregation part calculates a sequentially-assigned data-item z from the digital data y as partial or all input and further assigns the sequentially-assigned data-item z to a \u201csequential aggregation tree\u201d leaf to construct a sequential aggregation tree incrementally. While, the event-ordering reply drafting part drafts the certification reply containing the receipt (sequence complementary procedure: immediate complementary data of a registration point and late complementary data of previous registration points at the above registration point, the previous registration points being registered before the above registration point) and successively sends the certification reply to the user apparatus through the transmitting\/receiving part (steps S, S, S).","In this way, the user apparatus can acquire the certification reply containing the receipt (step S). Subsequently, the user apparatus repeats both transmitting of the certification reply at step Sand receiving of the certification reply at step S","In the certification apparatus , meanwhile, the above-mentioned operation is repeated for a constant period for sequential aggregation (i.e. sequential aggregation period). When the sequential aggregation period is completed, the electronic information publishing part calculates a root value of the sequential aggregation tree and publishes the root value electronically (steps S, S, S).","Referring to , the event-ordering certification validation method will be described. This corresponds to the second function of validation in the user apparatus I.  shows data interaction between the user apparatus A and the user apparatus B. Here, the user apparatus A requests judgment of a postpositive point to the user apparatus B. In detail, the user apparatus A asks the user apparatus B to judge the ordering of a postpositive receipt after the registration point of a receipt that the user apparatus A did receive.","First, the user apparatus A sends a postpositive-point judging request to the user apparatus B together with a receipt EOC(a) for validation (i.e. the receipt at a registration point a) (step S). Receiving the postpositive-point judging request, the user apparatus B extracts a leaf number n(a) out of the receipt EOC(a) and searches a larger leaf number than the leaf number n(a) from the registration points of the user apparatus B (steps S, S). If the registration points of the user apparatus B contains at least one registration point each having a leaf number larger than the leaf number n(a), then the user apparatus B selects one registration point b whose leaf number n(b) is larger than the leaf number n(a) and sends the leaf number n(b) to the user apparatus A (steps S, S). On the contrary, if the registration points of the user apparatus B does not contain a leaf number larger than the leaf number n(a), user apparatus B sends a message indicating \u201cabsence of comparable data\u201d to the user apparatus A (step S).","Receiving the leaf number n(b) from the user apparatus B, the user apparatus A selects a provisional registration point af having a leaf number larger than the leaf number n(b), acquires late complementary data lateData(a, af) of the registration point a at the provisional registration point af and sends the data lateData(a, af) to the user apparatus B (steps S, S, S, S). When receiving the message indicating \u201cabsence of comparable data\u201d from the user apparatus B, this validation is finished (step S).","After receiving the late complementary data lateData(a, af) from the user apparatus A, the user apparatus B calculates an authentication point o of the registration point a by the registration point b from the leaf \u201cidentifier\u201d numbers n(a) and n(b) and further calculates an assigned value of the authentication point o from the receipt EOC(a) and the data lateData(a, af) (step S). Next, the user apparatus B verifies whether the calculated assigned value is included in late complementary data contained in a receipt EOC(b) of the registration point b or not. If the assigned value is included, the user apparatus B sends a judgment that the registration point a has been registered in advance of the registration point b to the user apparatus A (steps S, S). On the contrary, if the assigned value is not included, the user apparatus B sends a judgment that there exists any falseness due to the impossibility of certifying that the registration point a has been registered in advance of the registration point b, to the user apparatus A (steps S, S).","Consequently, the user apparatus A can verify the temporal context in publishing the receipt between the user apparatus A and the user apparatus B since the apparatus A acquires the judgment (steps S, S).","The above-mentioned event-ordering certification validation method is directed to the request for judgment of the postpositive point from the user apparatus A to the user apparatus B. In the modification, the user apparatus A may request judgment of a prepositive point to the user apparatus B. In detail, the user apparatus A may ask the user apparatus B to judge the ordering of a prepositive receipt before the registration point of a receipt that the user apparatus A did receive.  is a sequence diagram showing data interaction between the user apparatus A and the user apparatus B when the apparatus A requests the judgment of the prepositive point to the apparatus B.","First, the user apparatus A sends a prepositive-point judging request to the user apparatus B together with the receipt EOC(a) for validation (i.e. the receipt at the registration point a) (step S). Receiving the prepositive-point judging request, the user apparatus B extracts the leaf number n(a) out of the receipt EOC(a) and searches a smaller leaf number than the leaf number n(a) and a larger leaf number than the leaf number n(a) from the registration points of the user apparatus B (steps S, S). If the registration points of the user apparatus B contains a leaf number smaller than the leaf number n(a) and a leaf number larger than the leaf number n(a), then the user apparatus B selects one registration point b whose leaf number n(b) is smaller than the leaf number n(a) and another provisional registration point bf whose leaf number n(b) is larger than the leaf number n(a) (steps S, S). On the contrary, if the registration points of the user apparatus B contain neither a leaf number smaller than the leaf number n(a) nor a leaf number larger than the leaf number n(a), the user apparatus B sends a message indicating \u201cabsence of comparable data\u201d to the user apparatus A (step S). When receiving the message indicating \u201cabsence of comparable data\u201d from the user apparatus B, the user apparatus A finishes the validation (step S).","Next, the user apparatus B acquires late complementary data lateData(b, bf) of the registration point b at the provisional registration point bf, calculates an authentication point o of the registration point a by the registration point b from the leaf \u201cidentifier\u201d numbers n(a) and n(b) and further calculates an assigned value of the authentication point o from the receipt EOC(a) and the data lateData(b, bf) (steps S, ). Next, the user apparatus B verifies whether the calculated assigned value is included in late complementary data contained in a receipt EOC(a) of the registration point a or not. If the assigned value is included, the user apparatus B sends a judgment that the registration point a has been registered after the registration point b to the user apparatus A (steps S, S). On the contrary, if the assigned value is not included, the user apparatus B sends a judgment that there exists any falseness due to the impossibility of certifying that the registration point a has been registered after the registration point b, to the user apparatus A (steps S, S).","Consequently, the user apparatus A can verify the temporal context in publishing the receipt between the user apparatus A and the user apparatus B since the apparatus A acquires the judgment (steps S, S).","In the above-mentioned event-ordering certification validation method, the user apparatuses A and B verify the temporal context of the publication of the receipts. The present invention is not limited to this and a third organization other than parties concerned (e.g. the event-ordering certification audit apparatus  of the first to third embodiments) may verify the temporal context. In this case, the user apparatuses A and B transmit information essential to validation to the third organization where the validation is carried out.","The fourth embodiment will be summarized as follows. In the event-ordering certification system for certifying the event ordering with the use of a tree structure, the certification apparatus on receipt of an event-ordering request from the user apparatus I publishes a certification reply in the sequence complementary method (the certification reply containing the immediate complementary data of a registration point and the late complementary data of respective registration points registered before the registration point at the registration point). Therefore, it is possible for the user apparatus I to verify the temporal context in publishing respective receipts between the user apparatuses I while using the certification reply. Therefore, even if this validation is carried out before publishing data collecting up the event-ordering requests is published electronically, it is possible to verify the validity of the receipts.",{"@attributes":{"id":"p-0453","num":"0471"},"figref":"FIG. 42","b":["200","200","4","5","3","5","1","5","2","4"],"i":["a ","a ","a","a ","a ","a. "]},"The fifth embodiment differs from the fourth embodiment with respect to the format of certification reply. According to the fifth embodiment, the certification reply is drafted in later-mentioned chain complementary procedure different from the above sequence complementary procedure. In the sequence complementary procedure mentioned above, at each registration point of one user apparatus I, the certification apparatus has to return the late complementary data about all \u201cpast\u201d registration points of the relevant use apparatus I to the same apparatus I. Therefore, the amount of data for the certification reply increases with an increase in the number of past registration points. On the contrary, according to the chain complementary procedure, the amount of data of the certification reply is suppressed from increasing. In the fifth embodiment, both constitutions and functions different from those in the previous embodiments will be described below. As to the other constitutions and functions, their descriptions are eliminated while applying the same reference numerals to the identical elements respectively.","The certification apparatus comprises the transmitting\/receiving part for transmitting and receiving data to and from the user apparatuses I through the computer network , the event-ordering request aggregation part for arranging digital data (as event-ordering requests) transmitted from the user apparatuses I with the use of a sequential aggregation tree, an event-ordering reply drafting part for drafting a certification reply containing a receipt (receipt certificate), the digital signature drafting part for applying a high-intensity digital signature on data where respective contents of a plurality of receipts published for a constant period by the certification apparatus are aggregated, thereby forming publication data, the electronic information publishing part for electronically publishing the publication data having the high-intensity digital signature applied thereon and a memory part for storing the receipts and information about event-ordering certification.","The event-ordering reply drafting part drafts the certification reply containing a receipt EOC(y) as shown in  and sends it to the user apparatus I. The receipt EOC(y) is constructed so as to contain: digital data y sent from a user; sequentially assigned data-item z calculated from the digital data y by the above-mentioned calculation procedure for sequentially assigned data-item; a \u201csequential-aggregation\u201d tree number enabling a sequential aggregation tree having the data-item z assigned to be identified uniquely; a \u201csequential aggregation tree\u201d leaf number enabling a \u201csequential aggregation tree\u201d leaf having the data-item z assigned to be identified uniquely; and both positional information and assigned value of sequential aggregation complementary data (part) SK acquirable at that time. The above data part SK will be referred to as \u201cimmediate complementary data of registration point\u201d.","Again, the certification reply is constructed so as to contain the positional information of late complementary data TK of an immediately-preceding registration point of the user apparatus I in the past and their assigned values.","Referring to , we now describe a concrete example of the certification reply in accordance with this embodiment Note that the format of the certification reply in the embodiment will be referred to as \u201cchain complementary procedure\u201d hereinafter. Suppose now, the registration points from a certain user apparatus I consist of X(node(, )), X(node(, )), X(node(, )), X(node(, )), X(node(, )), and X(node(, )).","In the chain complementary procedure, it is executed at respective registration points to return the following data to the user apparatus I.","(1) For the certification reply at the point X, there is returned immediate complementary data of the point X [i.e. assigned value of node (, )].","(2) For the certification reply at the point X, there are returned immediate complementary data of the point X and X's late complementary data at point X [i.e. immediate complementary data of X: respective assigned values of nodes (, ), (, ), (, ); X's late complementary data at X: assigned values of nodes (, ), (, )].","(3) For the certification reply at the point X, there are returned immediate complementary data of the point X and X's late complementary data at point X [i.e. immediate complementary data of X: assigned values of nodes (, ), (, ); X's late complementary data at X: assigned value of node (, )].","(4) For the certification reply at the point X, there are returned immediate complementary data of the point X and X's late complementary data at point X [i.e. immediate complementary data of X: assigned values of nodes (, ), (, ), (, ); X's late complementary data at X: assigned value of node (, )].","Much the same will be true on the points X and X. Therefore, according to chain complementary procedure, as for a certain registration point, the certification reply is formed so as to contain the immediate complementary data of this registration point and the late complementary data (data-item) of an immediately-preceding registration point at the above registration point. Consequently, as the amount of data in the certification reply against the event-ordering request does not increase proportionally in spite of an increase in the number of past registration points, it is possible to reduce the amount of communication data between the certification apparatus and the user apparatus I. Note that the respective certification replies are managed with respect to each user apparatus I.","In spite of the certification reply in the chain complementary procedure, the user apparatuses I can acquire data identical to the data in the sequence complementary procedure. The reason will be described with reference to .","Assume that we are given a sequential aggregation tree ST where three leaves a, a and a are arranged in this order from the left, as shown in . Then, from the late complementary data of a point a at a point a, the immediate complementary data of a and the late complementary data of a at a, the late complementary data of a at a is calculated as follows.","First, assume that j denotes a level of the highest node in the late complementary data of a at a. Additionally, an authentication point of a by a, a brotherly node of the authentication point and a level of the brotherly node are presented by AP(a, a), AP\u2032(a, a), and j, respectively.","On the above assumption, it is firstly noted that in authentication path nodes contained the late complementary data of a of a, assigned values of nodes of level smaller than j are included in the late complementary data of a at a.","Secondly, in the authentication path nodes contained the late complementary data of a of a, assigned values of nodes of level equal to j can be calculated by the late complementary data of a at a and the immediate complementary data of a.","Thirdly, in the authentication path nodes contained the late complementary data of a of a, an aggregate of nodes of level larger than j is identical to an aggregate of nodes of level larger than j in the authentication path nodes contained the late complementary data of a at a. Therefore, in the authentication path nodes contained the late complementary data of a at a, assigned values of nodes of level larger than j can be calculated by the late complementary data of a at a","From above, the late complementary data of a at a can be calculated from the following three data:","(1) the late complementary data of a at a;","(2) the immediate complementary data of a; and","(3) the late complementary data of a at a.","Note, from above (1) to (3), a process of calculating the late complementary data of a at a will be referred to as \u201cpropagation procedure for completion\u201d hereinafter.","With the use of propagation procedure for completion, the user apparatus I can calculate the certification reply in accordance with the sequence complementary procedure from the certification reply in accordance with the chain complementary procedure.  is a diagram showing this calculating method.  shows the immediate complementary data and the late complementary data essential to respective registration points in both the sequence complementary procedure and the chain complementary procedure. Note that both the immediate complementary data and the late complementary data in the certification replies in the chain complementary procedure are framed in by double-line of . In , respective arrows designate calculating directions. For instance,  shows that it is possible to calculate the late complementary data (P) of a at a from the late complementary data (P) of a at a, the immediate complementary data (P) of a and the late complementary data (P) of a at a.","Similarly, it is possible to calculate the late complementary data (P) of a at a from the late complementary data (P) of a at a, the immediate complementary data (P) of a and the late complementary data (P) of a at a. Then, by repeating this operation, it becomes possible to calculate all the late complementary data of  in spite of the chain complementary procedure, finally. This is no less the late complementary data than the certification replies in the sequence complementary procedure.","Accordingly, in spite of the chain complementary procedure of this embodiment, the user apparatuses I can carry out the validation similar to the first embodiment due to the propagation procedure for completion as shown in . Note that the propagation procedure for completion will be described as a later-mentioned incremental completion, in detail.","The user apparatus I comprises the transmitting\/receiving part for transferring data to and from the certification apparatus through the computer network , the event-ordering certification requesting part for performing the event-ordering requests containing designated digital data by several times, an event-ordering certification verifying part for verifying a receipt contained in the certification reply in response to the event-ordering request and a memory part for storing the information about event-ordering certification and the certification reply containing the receipt.","In addition to the function of the event-ordering certification verifying part of the fourth embodiment, the event-ordering certification verifying part has a function of performing the incremental completion mentioned later and includes the following functions of validation against the receipt.","As a first function of validation, the event-ordering certification verifying part verifies that the sequential assigned data-item is linked with the information published through the digital signature drafting part of the certification apparatus and the electronic information publishing part . In detail, it is executed to validate whether a value published as the root value of the sequential aggregation tree coincides with a root value calculated by the user apparatus I or not.","As a second function of validation, the event-ordering certification verifying part verifies the temporal context of receipts among the user apparatuses I even before the information is published.","The second function of validation will be described with reference to .","Suppose, two user apparatuses A and B respectively acquire the certification replies of respective registration points by the chain complementary procedure. In , let a, a, a and af be respective registration points of the user apparatus A and let b be a registration point of the user apparatus B. Note that \u201caf\u201d is referred to as \u201ctemporary terminal point\u201d. In , there exist the registration point a of the user apparatus A, the registration point b of the user apparatus B on the right of the point a and the registration point af of the user apparatus A on the further right of the point b.","According to the embodiment, at first, the propagation procedure for completion of  is applied to the registration point a of the user apparatus A while establishing af as the temporary terminal point. Consequently, the certification reply identical to that of the sequence complementary procedure is obtained. Subsequently, by carrying out the same method as the fourth embodiment, it is possible verify the temporal context between the registration point a and the registration point b. Thus, also in this embodiment, if only there is a coincidence about an assigned value V(o) for an authentication point o of the registration point a by the registration point b in the present sequential aggregation tree at the present moment (i.e. at the registration point af), it is possible to verify that the registration of the registration point a was carried out in advance of the registration of the registration point b, objectively.","Note that the above apparatuses are formed by electronic apparatuses each having a CPU (Central Processing Unit) having at least a calculating function and a control function, a main memory having a function to store programs and data, such as RAM (Random Access Memory), and a secondary memory capable of continuing to memorize data even at powered-off, such as HD (Hard Disc). The operation of the event-ordering reply drafting part in the certification apparatus and the operation of the event-ordering certification verifying part of the user apparatus I are nothing but respective crystallizations of the above calculating\/control functions of the above central processing units. Additionally, the memory part of the certification apparatus and the memory part of the user apparatus I are equipped with the above-mentioned functions of either the main memory or the secondary memory.","As for the event-ordering certification method in the event-ordering certification system constructed above, the description of the method is eliminated due to the identity achieved by replacing the certification apparatus and the user apparatuses I of  with the certification apparatus and the user apparatuses I, respectively. As for the method for varidation of event-ordering certificates, there is no difference between the fourth embodiment and the fifth embodiment but replacing the user apparatuses A, B of  by the user apparatuses A, B, respectively. Further, if only executing a later-mentioned incremental completion process in each of the user apparatuses A and B as an advance step, subsequent operations of the apparatuses A and B would be the same as those of . Therefore, an explanation about the method for varidation of event-ordering certificates is eliminated.","(2-3. Data Storing Method of Certification Apparatus )","(1. Method)","The data storing method of the certification apparatus in the chain complementary procedure will be described in detail. First, the first method is a method A of accomplishing the above-mentioned chain complementary procedure since the certification apparatus builds a sequential aggregation tree on the memory part ",{"@attributes":{"id":"p-0489","num":"0507"},"figref":"FIG. 46","b":["42","42","5"],"i":["a ","a "]},"According to the method A, it is carried out to add a node at level  (i.e. a leaf) to the sequential aggregation tree on the memory part whenever the certification apparatus receives an event-ordering request. Additionally, for a node more than level  whose assigned value is calculable, the certification apparatus adds the node and the assigned value to the sequential aggregation tree.","The operation of the certification apparatus in the method A will be described with reference to .  is a flow chart showing the functions of the event-ordering request aggregation part and the event-ordering reply drafting part ","First, when receiving an event-ordering request from the user apparatus I, the certification apparatus drafts a sequentially assigned data-item from the event-ordering request, assigns the data-item to a new leaf of the sequential aggregation tree to make a new registration point and stores node information (positional information and the assigned value) about the new registration point (steps S, S).","Next, in accordance with the definition of immediate complementary data, the certification apparatus acquires immediate complementary data of the new registration point from the sequential aggregation tree stored in the memory part (step S).","Next, for a node at level more than 1 whose assigned value becomes calculable as a result of the addition of the new registration point, the certification apparatus calculates the assigned value and stores the positional information of the node and the assigned value in the memory part (step S).","Next, in accordance with the definition of late complementary data, the certification apparatus acquires late complementary data of an immediately-preceding registration point from the immediately-preceding registration point with respect to each user apparatus I and the sequential aggregation tree stored in the memory part (step S).","Next, the certification apparatus replaces the immediately-preceding registration point with the new registration point and stores it as an immediately-preceding registration point for the user apparatus I, drafts a certification reply including the immediate complementary data and the late complementary data acquired at steps Sand S, and sends the certification reply to the user apparatus I (steps S, S, S).","(2. Method)","The second method is a method of accomplishing the above-mentioned chain complementary procedure by the certification apparatus's forming a stack structure in the memory part in place of the formation of a sequential aggregation tree on the memory part . The second method will be referred to as \u201cmethod B\u201d hereinafter. The method B is directed to an improvement of the above-mentioned method A where necessary memory capacity increases in substantially-proportional to the size of the sequential aggregation tree. Thus, according to the method B, since respective assigned values for the nodes in the sequential aggregation tree, the immediate complementary data for each event-ordering request and the late complementary data are calculated by using the stack structure, it is possible to reduce the necessary memory capacity, allowing a handling of a sequential aggregation tree whose size is so large that the memory part cannot store.",{"@attributes":{"id":"p-0498","num":"0516"},"figref":"FIG. 48","b":["42","42","421","422","5","422","424","423","424"],"i":["a ","a ","a ","a ","a ","a ","a ","a"]},"In the above stacks, the first stack is provided with data structure used up to now. For instance, R. Markle discloses one recursive procedure H(a, b) for calculating an assigned value for a root node of a binary tree (see Secrecy, Authentication, and Public Key System, UMI Research Press, 1982, page 36). When applying this recursive procedure H(a, b) on one stack for its standard packaging, this stack will be treated in the similar way as the above first stack.","The operation of the certification apparatus in the method B will be described with reference to .  is a flow chart showing the functions of the event-ordering request aggregation part and the event-ordering reply drafting part ","First, when receiving an event-ordering request from the user apparatus I, the certification apparatus drafts a sequentially assigned data-item from the event-ordering request and assigns the data-item to a new leaf of the sequential aggregation tree to make a new registration point (steps S, S).","Next, the certification apparatus acquires the immediate complementary data of the new registration point from the first stack (step S).","Next, it is carried out to add a stack frame including the positional information of the new registration point and its assigned value to the first stack (step S). At this time, if the above stack frame corresponds to the complementary data for an immediately-preceding registration point in any one of the other user apparatuses I, the stack frame is added to the second stack of the relevant user apparatus I (steps S, S).","Next, so long as the first stack includes two stack frames corresponding to two nodes as the brotherly nodes, the certification apparatus produces a stack frame including the positional information about a parent node for the two nodes above and its assigned value, next deletes the stack frames corresponding to the two nodes from the first stack and instead adds the so-produced new stack frame to the first stack (steps S, S, , ). At this time, if the new stack frame corresponds to the complementary data for an immediately-preceding registration point in any one of the other user apparatuses I, the stack frame is added to the second stack of the relevant user apparatus I (steps S, S).","Next, the certification apparatus acquires the late complementary data of the immediately-preceding registration point at the new registration point from the second stack for the relevant user apparatus and simultaneously empties the second stack (step S).","Next, the certification apparatus replaces the immediately-preceding registration point with the new registration point and stores it as an immediately-preceding registration point for the relevant user apparatus I, drafts a certification reply including the immediate complementary data and the late complementary data acquired at steps Sand S, and sends the certification reply to the user apparatus I (steps S, S, S).","The above-mentioned operation will be described with a concrete example of , in detail. Suppose that X denotes a new registration point.","First, when receiving an event-ordering request from the user apparatus I, the certification apparatus drafts a sequentially assigned data-item from the event-ordering request and assigns the data-item to a new leaf (i.e. the registration point X) of the sequential aggregation tree to make the new registration point (steps S, S).","Next, it is carried out to acquire an assigned value for node(, ) being the immediate complementary data of the new registration point X from a stack frame  of the first stack , an assigned value for node(, ) from a stack frame  of the first stack and an assigned value for node(, ) from a stack frame  of the first stack , respectively (step S).","Next, a stack frame  including the positional information about the new registration point (, ) and its assigned value is added to the first stack (step S). Then, if the stack frame newly added to the first stack corresponds to the complementary data for an immediately-preceding registration point in any one of the other user apparatuses I, the same stack frame is added to the second stack of the relevant user apparatus I (steps S, S).","Next, since the first stack includes two stack frames ( and ) corresponding to the brotherly nodes, the certification apparatus produces a stack frame including the positional information about node (, ) corresponding a parent node of the two nodes and its assigned value, next deletes stack frames (and ) corresponding to the brotherly nodes from the first stack and adds the so-produced new stack frame to the first stack, as a new stack frame (steps S, S, , ). At this time, if the stack frame newly added to the first stack corresponds to the complementary data for an immediately-preceding registration point in any one of the other user apparatuses I, the stack frame is added to the second stack of the relevant user apparatus I (steps S, S).","Next, it is carried out to acquire an assigned value for node (, ), which is the late complementary data of the immediately-preceding registration point X at the new registration point X, from the stack frame  of the second stack for the relevant user apparatus I and simultaneously empty the second stack (step S).","Next, it is carried out to replace the immediately-preceding registration point X with the new registration point X and store it as an immediately-preceding registration point for the relevant user apparatus I, draft a certification reply including the immediate complementary data and the late complementary data acquired at steps Sand S, and send the certification reply to the user apparatus I (steps S, S, S).","(Packaging Example of 2Method)","We now explain one packaging example when the certification apparatus using the second method drafts a certification reply.",{"@attributes":{"id":"p-0515","num":"0533"},"figref":["FIG. 50","FIG. 50"],"b":["42","4","42"],"i":["a ","a","a "]},"The terminology \u201c_chain_comple_data_vec\u201d designates an array of data structure \u201cchain_comple_data\u201d. The data structure \u201cchain_comple_data\u201d comprises a \u201clate_comple_stack\u201d part, a \u201cprev_point\u201d part, a \u201cprev_point_old\u201d part, and an \u201cold_tree_id\u201d part. The late_comple_stack part has a stack structure of stack frames, as similar to the _stack. The prev_point part represents an identification number (nonnegative integer or nil) showing an immediately-preceding point. The prev_point old part represents an identification number (nonnegative integer or nil) showing an immediately-preceding point in a sequential aggregation tree produced in advance of the present sequential aggregation tree. The old_tree_id part represents an identification number (nonnegative integer or nil) of a sequential aggregation tree to which a registration point indicated with the prev_point_old part belongs when the prev_point_old part is not nil.",{"@attributes":{"id":"p-0517","num":"0535"},"figref":"FIG. 51","b":"4","i":"a","ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":{"@attributes":{"id":"ul0017-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0018","list-style":"none"},"li":["v: a variable for retaining digital data (hash function, normally);","idx: a variable for retaining an integer representing a user identification number;","_lev_ptr: a variable for retaining a leaf identification number to which an event-ordering request on next acceptance will be assigned; initial value: 0;","place: a variable for retaining a place representing a node position in a sequential aggregation tree;","sflm: a variable for retaining a stack frame;","F(v): a function to convert the digital data v included in an event-ordering request to data for assigning a leaf in a sequential aggregation tree. The function F(v) may be equal to v or may be a result of applying a designated hash function (e.g. SHA);","_tree_id: a variable for retaining an identification number of a sequential aggregation tree;","_make-stackflm(place, V): a function for returning the stack frame The function has place and digital data V as both arguments, place as the place part and V as the value part;","stack_buf: a variable for retaining a stack condition in a certain moment; and","handle_chain_comple(id, tree_id, idx, V, prev_point, immed_stack_data, late_stack_): a function for drafting a receipt formed by: the identifier of sequential aggregation tree tree_id; the leaf identifier idx; the assigned data V; the immediate complementary data mmed_stack_data; and the late complementary data late_stack_, and for sending the receipt to the user apparatus I having the user identification number id."]}}}},"On establishment of V as the digital data from a demander and id as an identification number of the demander whenever the certification apparatus receives an event-ordering request, this procedure is called out (steps STto ST).",{"@attributes":{"id":"p-0519","num":"0547"},"figref":["FIG. 52","FIG. 51"],"ul":{"@attributes":{"id":"ul0019","list-style":"none"},"li":{"@attributes":{"id":"ul0019-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0020","list-style":"none"},"li":["sflm: a variable for retaining a stack frame;","place: a variable for retaining a place;","idx: a variable for retaining an integer;","lev: a variable for retaining a stack frame;","val: a variable for retaining digital data (hash function, normally);","sflm: a variable for retaining a stack frame;","place: a variable for retaining a place;","lev: a variable for retaining a stack frame;","lev_nw and idx_nw: variables for retaining a stack frame;","floor(x): a function for returning a maximum integer that does not exceed x (x: an actual number as argument). For y (\u22600), floor(x, y)=floor(x\/y). That is, floor(x, y) is an integral quotient as a result of dividing x by y; and","hash_comp (val, val): a function for returning a result of applying a designated hash function (SHA etc.) on a junction between val and val (val, val: two digital data represented by bit rows as arguments):"]}}}},{"@attributes":{"id":"p-0520","num":"0559"},"figref":["FIG. 53","FIG. 51"],"ul":{"@attributes":{"id":"ul0021","list-style":"none"},"li":{"@attributes":{"id":"ul0021-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0022","list-style":"none"},"li":["place: a variable for retaining a place; sflm: a variable for retaining a stack frame;","id: a variable for retaining an integer representing a user identification number;","N: a variable for retaining the total number of users on registration;","auth_node_p (prev_pont, place): Having arguments of a sequential leaf identification number \u201cprev_pont\u201d and \u201cplace\u201d, the \u201cauth_node_p (prev_pont, place)\u201d is a function for returning \u201ctrue\u201d or \u201cfalse\u201d when an assigned value of the \u201cplace\u201d is to be included in the late complementary data of \u201cprev_pont\u201d. In connection, if assuming \u201cplace\u201d=(j, i), the requisite\/sufficient condition to accomplish \u201ctrue\u201d in the auth_node_p (prev_pont, place) is to attain \u201cfloor(prev_pont, 2)\u201d is an even number, and i=floor(prev_pont, 2)+1."]}}}},"Referring to , we now describe a \u201csequential aggregation tree\u201d changing process of completing to form a sequential aggregation tree on completion of one aggregating period and successively initializing to form a next sequential aggregation tree for a next aggregation period.",{"@attributes":{"id":"p-0522","num":"0565"},"figref":["FIG. 54","FIG. 55","FIG. 56","FIG. 51"],"b":["1","2","0"]},"In the subroutine TERMINATE_STREE_SUB of , there are is executed to add nodes as occasion demands on a basis of a sequential aggregation tree under construction at the point of completing the aggregation period, assign designated hash values to these nodes in accordance with a predetermined procedure and further define a root value of the relevant sequential aggregation tree.","Referring to , the operation of TERMINATE_STREE_SUB will be described in response to a specific situation, in detail. Suppose a situation where the aggregation period has finished after completing the process of a leaf identification number (ID. No.)  and before staring the process of a leaf ID. No.  and therefore, the operation of TERMINATE_STREE_SUB  is called out. It is noted that \u201c_stack\u201d contains [(, ), V(, )] and [(, ), V(, )] in view from top. Owing to the operation of TERMINATE_STREE_SUB, it becomes possible to assign dummy hash values to nodes (, ) and (, ) thereby determining a root value of this sequential aggregation tree and simultaneously possible to define the perfect authentication path data (i.e. an aggregate of authentication path nodes allowing calculation of a root value), as follows.","(1) At step ST, it is executed to set [(, ), V(, )] to the local variable sfml_xb, so that \u201c_stack\u201d contains [(, ), V(, )] only. Next, at step ST, it is executed to set (, ) to the local variable place_xb and 4 to the local variable idx_xb.","At step ST, it is executed to judge whether the idx_xb is an even number or an odd number. In this case, because of \u201c4\u201d, the routine goes to step ST","At step ST, it is executed to judge whether the _stack is nil or not. In this case, as the _stack is not nil, the routine goes to step ST","At step ST, it is executed to set  to the local variable lev_xb, V(, ) to val_xb and set (=1+4) to idx_. Further, (lev_xb, idx_)=(1, 5) is set to place_. This positional information (, ) represents a first dummy node. Then, it is executed to call out a function \u201cdummy hash\u201d to calculate a hash value to be assigned to the first dummy node and further executed to set its return value to \u201cdum_val_\u201d. Additionally, it is executed to set \u201csfml_\u201d as","make-stackflm(place_, dum_val_)=[(, ), dum_val_].","Here, \u201cmake-stackflm\u201d is a function of producing a stack frame while setting the positional information about node and its hash value as arguments. Here, while setting place_and sfml_as arguments, there is called out REGISTER_COMPLE_DATA (defined with ).","At next step S, it is executed to set  to \u201clev_nw\u201d, floor(idx_xb, )=floor(, )=2 to \u201cidex_nw\u201d and set(, ) to \u201cplace_nw\u201d. In succession, it is executed to set hash_comb(val_xb, dum_val_) to \u201cval_nw\u201d. On establishment of two hash values as arguments, \u201chash_comb\u201d is a function of returning a result of applying a designated hash function to a junction between these hash values. Setting \u201cmake_stackflm(place_nw, val_nw)\u201d to \u201csflm_nw\u201d, \u201csflm_nw\u201d is pushed against \u201c_stack\u201d. Consequently, \u201c_stack\u201d has a structure including [(, ), V(, )] and [(, ), V(, )]. Further setting both place_nw and sflm_nw as arguments, there is called out REGISTER_COMPLE_DATA. Then, the routine is returned to step S","(2) At step ST, it is execute to pop \u201c_stack\u201d by one and set [(, ), V(, )] to \u201csflm_xb\u201d (Here, the state of \u201c_stack\u201d becomes [(, ), V(, )].). Additionally, it is executed to set (, ) and 2 to \u201cplace_xb\u201d and \u201cidx_xb\u2019, respectively.","At step S, it is judged that the value \u201cidx_xb\u201d of 2 is an even number and successively, the routine goes to step S. As the value \u201c_stack\u201d is not nil, the routine goes to step S. At this step, there are established 2 for \u201clev_xb\u201d, V(, ) for \u201cval13 for \u201cidx1\u201d, (, ) for \u201cplace1\u201d and a return value of dummy_hash for \u201cdum_val1\u201d, respectively. Assume that this return value of dummy_hash is represented by V(, ). Further, it is executed to set make-stackflm(place1, dum_val1)=[(, ), V(, )] to \u201csflm1\u201d. Here, setting both \u201cplace1\u201d and \u201csflm1\u201d as arguments, there is called out REGISTER_COMPLE_DATA.","Next, at step ST, it is executed to set  to \u201clev_nw\u201d, floor(val_xb, )=floor(, )=1 to \u201cidex_nw\u201d and set (, ) to \u201cplace_nw\u201d. In succession, it is executed to set hash_comb(val_xb, dum_val1) to \u201cval_nw\u201d. This value is represented by V(, ). Setting \u201cmake_stackflm((, ), V(, ))\u201d to \u201csflm_nw\u201d, \u201csflm_nw\u201d is pushed against \u201c_stack\u201d. Consequently, \u201cstack\u201d has a structure including [(, ), V(, )] and [(, ), V(, )]. Further setting both place_nw and sflm_nw as arguments, there is called out REGISTER_COMPLE_DATA. Then, the routine is returned to step S","(3) At step ST, it is execute to pop \u201c_stack\u201d by one and set[(, ), V(, )] to \u201csflm_xb\u201d (Here, the state of \u201c_stack\u201d becomes [(, ), V(, )].). Additionally, it is executed to set (, ) and 1 to \u201cplace_xb\u201d and \u201cidx_xb\u2019, respectively.","At step S, it is judged that the value \u201cidx_xb\u201d of I is an odd number and successively, the routine goes to step S. At this step, there are established 3 for \u201clev_xb\u201d and V(, ) for \u201cval1\u201d, respectively. It is execute to pop \u201c_stack\u201d by one and further establish so-popped [(, ), V(, )] to \u201csflm\u201d. Further, there are established \u201cplace0\u201d of (, ), \u201clev0\u201d of 0, \u201cidx0\u201d of 0 and \u201cval0\u201d of V(, ), respectively.","Next, at step ST, it is executed to set  to \u201clev_nw\u201d, floor(, )=0 to \u201cidex_nw\u201d and set (, ) to \u201cplace_nw\u201d. In succession, it is executed to set hash_comb(V(, ), V(, )) to \u201cval_nw\u201d. This value is represented by V(, ). Setting \u201cmake_stackflm((, ), V(, ))\u201d to \u201csfml_nw\u201d, \u201csfml_nw\u201d is pushed against \u201c_stack\u201d. Consequently, \u201c_stack\u201d has a structure including [(, ), V(, )]. Further setting both place_nw and sflm_nw as arguments, there is called out REGISTER_COMPLE_DATA. Then, the routine is returned to step S","(4) At step ST, it is execute to pop \u201c_stack\u201d by one and set [(, ), V(, )] to \u201csflm_xb\u201d (Here, the state of \u201c_stack\u201d becomes nil.). Additionally, it is executed to set (, ) and 0 to \u201cplace_xb\u201d and \u201cidx_xb\u2019, respectively. At step S, it is judged that the value \u201cidx_xb\u201d of 0 is an even number and successively, the routine goes to step S. As the value \u201c_stack\u201d is nil, the routine goes to step Sto set V(, ) as a return value and thereafter, the routine is ended.","Consequently, the return value in this procedure becomes V(, ) that is a root value of the relevant sequential aggregation tree.","Next, we describe a subroutine TERMINATE_STREE_SUB of .","First, the following variables and functions are employed:\n\n","Next, the operation of TERMINATE_STREE_SUB will be described.","For each \u201cid\u201d (id=0, 1, . . . , N\u22121), the block  of  is carried out.","In the block, the following operations are performed:","It is executed to set \u201c_chain_comple_data_vec[id]\u201d to \u201cchain_comple_data\u201d and further set \u201cprev_point\u201d part of \u201cchain_comple_data\u201d to \u201cprev_chain_point\u201d (step ST);","If \u201cprev_chain_point\u201d is nil, then it is executed to complete the block  (step ST).","If not, there are established \u201cprev_chain_point\u201d for \u201cprev_point_old\u201d part of \u201cchain_comple_data\u201d, nil for \u201cprev_point\u201d part, the present sequential aggregation tree for \u201cold_tree\u201d part, respectively. Next, \u201cchain_comple_data\u201d is set to \u201c_chain_comple_data_vec[id]\u201d (step ST).","<5-4. Incremental Completion in User Apparatus I>","Next, the incremental completion in each user apparatus I will be described in detail. The incremental completion is roughly classified to (1) incremental individual completion and (2) incremental aggregate completion, either of which is carried out by the user apparatus I. Note that the above-mentioned \u201cpropagation procedure of completion\u201d relates to an explanation of one function of the incremental aggregate completion.","(Incremental Individual Completion)","Assume that a registration point af is a provisional terminal point that belongs a certain aggregation interval I of the user apparatus A or coincides with a first registration point in the next aggregation interval.","In case of the first registration point in the next aggregation interval to the certain aggregation interval, \u201caf\u201d will be referred to as \u201cpostscript point to the relevant aggregation interval\u201d.","Assume that an aggregate of registration points registered till the provisional terminal point af during the aggregation interval I is represented by a(), a(), . . . , a(n). [Note, although there is normally established a(n)=af, this relationship is not realized in case of \u201caf\u201d of a postscript point.]","Then, by the aggregate of registration points, one or more sequential aggregation small trees are formed with the provisional terminal point of \u201caf\u201d. This aggregate of sequential aggregation small trees will be referred to as \u201csequential aggregation forest having the provisional terminal point af\u201d, after.","Referring to , the sequential aggregation forest and small trees will be described in detail.","When \u201caf\u201d is in the relevant aggregation interval, it is assumed that \u201caf\u201d represents a leaf number (nonnegative integer) and that \u201c1\u201d stands at k(), k(), . . . , k(m)-digit in the binary-coded notation of \u201caf\u201d. However, the minimum digit is established as 0-digit. In , \u201cm\u201d is set to 4 (m=4). Here, k(m) may be equal to 0. The relationship of k()>k()>k()> . . . >k(m) has to be established. Then, the number of leaves in the n. sequential aggregation small tree belonging to the above sequential aggregation forest amounts to 2. In , ST(), . . . , ST() denote sequential aggregation small trees.","The incremental individual completion is to perform the following calculations (1) to (3) for designated a\u03b5{a(), a(), . . . , a(n)}:","(1) Calculating of a sequential aggregation small tree (determined uniquely) belonging to a;","(2) Calculating of one or more assigned values for one or more roots of one or more sequential aggregation small trees positioned on the left of the above ST in the sequential aggregation forest from the complementary data at the leaves a(), . . . , a(n) (and \u201caf\u201d); and","(3) Calculating of assigned values of nodes belonging to authPathST(a) from the complementary data at the leaves a(), . . . , a(n) (and \u201caf\u201d). Here \u201cauthPathST(a)\u201d represents an authentication path of a in ST.","Note that the definition of incremental individual completion may be accomplished with the use of a \u201cpresent-moment\u201d sequential aggregation tree defined as follows. In connection with the \u201cpresent-moment\u201d sequential aggregation tree, a minimum binary tree including a sequential aggregation tree having the provisional terminal point \u201caf\u201d will be referred to as \u201cpresent-moment sequential aggregation tree having the provisional terminal point af\u201d, after.",{"@attributes":{"id":"p-0560","num":"0607"},"figref":"FIG. 59","b":["0","0","1"]},"Note that if the total number of leaves in the sequential aggregation forest is represented by N, a height h of the sequential aggregation tree at the present moment becomes a minimum nonnegative integer k satisfying N\u22662.","Returning to  for explanation of the second validation function in the light of the above-mentioned argument, when performing the incremental individual completion with \u201caf\u201d as the provisional terminal point against the registration point a, it becomes possible to calculate an assigned value V(o) for an authentication point o. Consequently, if the immediate complementary data acquired at the registration point b contains the calculated assigned value V(o) for an authentication point o of the registration point a by the registration point b in the present-moment sequential aggregation tree having the registration point \u201caf\u201d as the present moment, the it is possible to certify that the registration of the registration point a occurred in advance of the registration of the registration point b.","Next, referring to , the operation of incremental individual completion will be described.  is a flow chart showing the operation of incremental individual completion.","First, it is executed to indicate one registration point a which precedes the provisional registration point af and belongs to the aggregation interval I (step S). In a sequential aggregation forest of , a leaf with index  [i.e. node(, )] constitutes a.","Next, it is executed to calculate the sequential aggregation small tree ST to which the registration point a (step S). In the sequential aggregation forest shown in , the second sequential aggregation small tree ST() from the left constitutes the tree ST.","Next, it is executed to calculate respective late authentication path nodes s of the registration point a in the tree ST (step S). In the sequential aggregation forest of . Both leaf (node(, )) of index  and node(, ) of index  at level  form the late authentication path nodes.","Next, it is executed to determine acquisitive reference points of the respective late authentication path nodes s (step S). Now, we describe the acquisitive reference points and acquisitive timing points. Note that in the following descriptions, a combination between the immediate complementary data of a certain registration point a and the late complementary data of the point a acquired at the next registration point a will be referred to as \u201cchain complementary data of the registration point a\u201d, hereinafter.","If a registration point a is given, a requested registration point that allows information enough to calculate an assigned value V(j, s(j)) of a node (j, s(j)) at level j in the authPath(a) to be acquired from either its complementary data or a calculation based on the complementary data, will be referred to as \u201cacquisitive reference point of V(j, s(j))\u201d. Then, we refer to a registration point to receive the above necessary complementary data as \u201cacquisitive timing point\u201d.","For instance, if a registration point X is given in the sequential aggregation tree of , the acquisitive reference point of a node(, ) being one of the late complementary data becomes a registration point X (node(, )), while the acquisitive timing point becomes a registration point X (node(, )). Again, if the registration point X is given, the acquisitive reference point and acquisitive timing point of a node(, ) being one of the immediate complementary data become a registration point X (node(, )). As for the immediate complementary data, generally, the acquisitive reference point coincides with the acquisitive timing point.","Next, based on the acquisitive reference point determined at step S, it is executed to calculate assigned value for the respective authentication path nodes s (step S).","In this way, the procedure for incremental completion at the registration point a is completed. When applying a \u201ccollision-resistant\u201d hash function on an input containing the assigned value for the registration point a, with the use of the above calculation result, it becomes possible to calculate V(root(ST)). Note that the possibility of the above-mentioned calculation is based on the premise that both of the acquisitive reference point of each path node s and the acquisitive timing point are together positioned formerly of the provisional registration point af","(Packaging Example of Incremental Individual Completion)","We now describe one example of the above-mentioned incremental individual completion.",{"@attributes":{"id":"p-0573","num":"0620"},"figref":["FIG. 62","FIG. 60"],"b":"520","i":"a "},"Variables and functions used in this procedure are as follows:\n\n","Inputting the leaf identifier a (nonnegative integer) and the identifier \u201cfin\u201d (nonnegative integer) of the provisional terminal point and further assuming that \u201cST\u201d represents a sequential aggregation small tree containing a and also belonging to the sequential aggregation tree at the point of completing the registration of the provisional terminal point, this algorithm outputs the leftmost leaf identifier \u201cstart\u201d (nonnegative integer) and the rightmost leaf identifier \u201clast\u201d (nonnegative integer) in pairs. The number of leaves in the relevant sequential aggregation small tree amounts to \u201clast\u2212start+1\u201d and the height of the relevant sequential aggregation small tree becomes log(last\u2212start+1).","The concrete example of  on application of the procedure of  is as follows. Let the leaf identifier a and the identifier \u201cfin\u201d of the provisional terminal point be 18 and 26, respectively. Then, the calculation in accordance with the procedure of  allows 16 to be returned as \u201cstart\u201d while 23 to be returned as \u201clast\u201d. From these outputs, it will be found that a sequential aggregation small tree to which \u201ca\u201d belongs is the tree ST() in .",{"@attributes":{"id":"p-0577","num":"0628"},"figref":["FIG. 63","FIG. 60"],"b":"540","i":"a "},{"@attributes":{"id":"p-0578","num":"0629"},"figref":"FIG. 64","b":"5"},"The other variables and functions used in this procedure are as follows:\n\n","Next, with reference to , we describe grounds for algorithm of the procedure (DECIDE_GET_POINT_A) of deciding the acquisitive reference point of the \u201cauthentication path node\u201d assigned value in the incremental completion of .","Assume here that a sequential aggregation small tree that \u201ca\u201d belongs to, which is one of small trees in the completed forest having the provisional terminal point of \u201caf\u201d, is represented by \u201cST\u201d (a\u03b5leafs(ST)).","Further, the authentication path of \u201ca\u201d in the small tree ST is represented by authPathST(a) where\n\nauthPath(0)=[(0, (0)), (1, (1)), . . . , (1, (1))].\n\n(Note that  is a height of the sequential aggregation small tree ST that \u201ca\u201d in the completed forest belongs to. That is, k=height(ST).) In the following descriptions, for nonnegative integers n and m, it is assumed that [n . . . m] represents an aggregate of integers more than n and less than m.\n","For each j\u03b5[0 . . . k\u22121], the algorithm to decide which of requested registration points does provide (j, s(j)) through its complementary data will be shown below.","Let \u201crtPathST(a) ST\u201d denote a root path of \u201ca\u201d in the tree ST, where","rtPathST(a)=[(, r()), (, r()), . . . , (k\u22121, r(k\u22121)), (k, r(k))], r()=a, and root(ST)=(k, r(k)). Assume that j\u03b5[ . . . k\u22121].","(1) If a node (j, r(j)) is a left-child of (j+1, r(j+1)), then s(j)=r(j)+1 while a node (j, s(j)) becomes a right-child of (j+1, r(j+1)). A rightmost point in the requested registration points belonging to leafs(subTree(j, r(j))) is calculated and represented by \u201ca\u201d.","(1-1) If a\u2260af, it is assumes that the next requested registration point to \u201ca\u201d is represented by \u201ca\u201d (there exists such \u201ca\u201d where a\u2266af because a\u2260af).","(1-1-1) If a\u03b5leafs(subTree(j, s(j))), a rightmost point in the requested registration points belonging to leafs(subTree(j, s(j))) is represented by \u201ca\u201d.","(1-1-1-1) If a=last(leafs(subTree(j, s(j)))) (see ), the immediate complementary data immedData(a) contains complete complementary data cmpltDATA(subTree(j, s(j)), a) of the point \u201ca\u201d in a tree subTree(j, s(j)). Thus,\n\nimmedData(a3)|\u2212V(j,s(j))\n\nis established. (Note that \u201cX|\u2212Y\u201d represents that Y can be calculated from X.)\n","Then, both the acquisitive reference point and the acquisitive timing point of V(j, s(j)) may be set to \u201ca\u201d together.","(1-1-1-2) If a\u2260last(leafs(subTree, s(j)))):","(1-1-1-2-1) If a\u2260af (see ), the next requested registration point to \u201ca\u201d is represented by \u201ca\u201d (there exists such \u201ca\u201d where a\u2266af because a\u2260af. The point \u201ca\u201d may be a postscript point.).","If the level of an authentication point of \u201ca\u201d by \u201ca\u201d is represented by j\u2032, then j\u2032\u2267j+1.","Thus, by the feature of a sequential aggregation tree, V(j, s(j)) can be calculated from the immediate complementary data acquired at \u201ca\u201d and the late complementary data (for \u201ca\u201d) acquired at \u201ca\u201d. That is,\n\nimmedData(a3)\u222alateData(a3,a4)|\u2212V(j,s(j))\n\nis established. (Provided that a is an authentication point of \u201ca\u201d by \u201ca\u201d, V(a) is included in the immediate complementary data \u201cimmedData(a)\u201d. However it should be noted that it does not necessarily mean that V(a) coincides with V(j, s(j)).)\n","Then, the acquisitive reference point of V(j, s(j)) and its acquisitive timing point may be set to \u201ca\u201d and \u201ca\u201d, respectively. Then, a\u2266af and a\u2266af.","(1-1-1-2-2) If a=af (see ):","Then, in the completed forest having the provisional terminal point of \u201caf\u201d, there is no sequential aggregation small tree containing (j, s(j)).","Therefore, there is no possibility that ST contains (j, s(j)). That is, such a situation is impossible.","(1-1-2) If not a\u03b5leafs(subTree(j, s(j))) (see ), there is realized V(j, s(j))\u03b5lateData(a, a).","The acquisitive reference point of V(j, s(j)) may be set to \u201ca\u201d while setting the acquisitive timing point V(j, s(j)) to \u201ca\u201d.","Then, a\u2266af and a\u2266af.","(1-2) If a=af (see ):","Then, in the completed forest having the provisional terminal point of \u201caf\u201d, there is no sequential aggregation small tree containing (j, s(j)).","Therefore, there is no possibility that ST contains (j, s(j)). That is, such a situation is impossible.","(2) If a node (j, r(j)) is a right-child of (j+1, r(j+1)) (see ), then r(j)=s(j)+1 while a node (j, s(j)) becomes a left-child of (j+1, r(j+1)).","V(j, s(j))\u03b5immedData(a).","Both the acquisitive reference point of V(j, s(j)) and the acquisitive timing point may be set to \u201ca\u201d together. Then, a\u2266af.","From above, since the procedure (DECIDE_GET_POINT_A) of deciding the acquisitive reference point of the \u201cauthentication path node\u201d assigned value in the incremental completion of  is formed by steps on consideration of all situations, it is found that the algorithm of  is reasonable.",{"@attributes":{"id":"p-0609","num":"0665"},"figref":["FIG. 66","FIG. 66","FIG. 70"],"b":["1","550"],"i":"a "},"Variables and functions employed in this procedure are as follows:\n\n","Each element forming the array has a structure of \u201cchaindata\u201d defined with . In the array, an i. element contains the immediate complementary data of an i. registration point in the relevant aggregation period and the late complementary data of the i. registration point, which is acquired at a registration point just behind the i. registration point.","(1) It is executed to establish an integer i representing an index of the array chaindata_store as the first argument, and an integer j representing level of a sequential aggregation tree as the second argument (step S).","(2) It is executed to establish chaindata_store[i] for the local variable chaindata (step S), leaf_index part of chaindata for the local variable a (step S) and establish indexes of respective nodes at level j in authPath(a) for the variable \u201ca\u201d (step S).","(3) In accordance with the above procedure DECIDE_GET_POINT_A described with , it is executed to determine an acquisitive reference point a of V(j, a(j)) (step S). Note that \u201ca\u201d is one of registration points, which allows a calculating of V(j, a(j)) from the chain complementary data acquired at the one registration point.","(4) It is executed to search the array chaindata_store and decide an integer \u201ci\u201d forming the index of an array element whose leaf_index part is \u201ca\u201d (step S).","(5) It is executed to establish chaindata_store[i] for the variable chaindata (step S).","(6) It is executed to establish \u201crgt_val\u201d part of chaindata for the variable rgt_val, \u201cimmediate part\u201d of chaindata for the variable immedData and establish \u201clate\u201d part of chaindata for the variable lateData (step S).","(7) It is executed to judge whether a stack frame having its \u201cplace\u201d part of (j, a) is included in any one of \u201crgt_val\u201d, \u201cimmedData\u201d or \u201clateData\u201d or not (step S).","(7-1) If included, then it is executed to return the value (step S).","(7-2) If not included, it is executed to calculate assigned values of nodes \u2018from level  up to level j) which are calculable from both \u201cimmedData\u201d and \u201clateData\u201d through a hash function, sequentially (step S).","(7-2-1) It is executed to judge whether V(j, a(j)) is included in the above-calculated assigned values or not (step S).","(7-2-1-1) If included, it is executed to return the value (step S).","(7-2-1-2) If not included, it is executed to output \u201cerror\u201d (step S).",{"@attributes":{"id":"p-0624","num":"0683"},"figref":"FIG. 67","b":["1","0","0","1","1"]},"Variables and functions employed in this procedure are as follows:\n\n","First, it is executed to calculate assigned values of respective nodes belonging to authPath(a) by applying the procedure COMPLETION_SUB of  on each j (0\u2266j<k) and further store the calculation results in the array auth_node_vals (steps S, S).","Next, it is executed to establish the array auth_node_vals as return values and the routine is ended (step S).","(Incremental \u201cBulk\u201d Completion)","The above-mentioned incremental completion is a method of designating a receipt as an object for completion and further accomplishing an individual completion of the designated receipt. The following incremental completion is a method of designating a series of receipts acquired in sequence by one user apparatus I in block and further calculating the same data as those of the above incremental \u201cindividual\u201d completion. This kind of incremental completion will be referred to as \u201cincremental bulk completion\u201d, hereinafter. That is, the incremental bulk completion is to calculate the same data as those calculated by the above incremental \u201cindividual\u201d completion, against all of successive registration points a(), a(), . . . , a(n).","The incremental bulk completion can be accomplished by the following procedure adopting the above-mentioned propagation procedure for completion.","(1) Assume that a(), . . . , a(n) constitute a series of registration points belonging to a certain aggregation period I by a certain user apparatus I.","(2) Let \u201caf\u201d denotes the next registration point to a(n) of the user apparatus I. The point \u201caf\u201d may be a postscript point.","(3) According to the procedure COMPLETION_BULK_BACKWARD of , it is executed to apply the incremental completion on a=a(n), . . . , a(), in this order.","By mathematical induction, it is certified that the above procedure allows the incremental individual completion to be accomplished for such a situation that \u201caf\u201d as the provisional terminal point is established to each registration point a(n\u2212i) where i=0, . . . , n, as follows (see ). In the following description, for the sake of simplicity, it is supposed that a(), . . . , a(n) belong to a common sequential aggregation small tree ST, while \u201caf\u201d is positioned on the left of respective leaves of ST. Note that much the same is true on a general case.","For each i=0, . . . , n, it has only to certify a combination between the late complementary data of a(n\u2212i) containing additions by the procedure COMPLETION_BULK_BACKWARD and the immediate complementary data at a(n\u2212i) includes assigned values for all authentication path nodes of a(n\u2212i) in the tree ST.","(1) Base of Inductive Method","Suppose that i=0. Then, a(n\u2212i)=a(n). By the procedure COMPLETION_BULK_BACKWARD, a(n) is tacked on the late complementary data of a(n) at the completion of a registration process of a(n) (step Sof ). Here, as a root value of the sequential aggregation small tree has already become definite at the completion of the registration process of a(n), the combination between the late complementary data of a(n\u2212i) containing additions by the procedure COMPLETION_BULK_BACKWARD and the immediate complementary data at a(n\u2212i) includes the assigned values for all authentication path nodes of a(n) in the tree ST.","(2) Inductive Step","If given i\u03b5{0, . . . , n\u22121) and i=i, it is presumed that the combination between the late complementary data of a(n\u2212i) containing additions by the procedure COMPLETION_BULK_BACKWARD and the immediate complementary data at a(n\u2212i) includes the assigned values for all authentication path nodes of a(n\u2212i) in the tree ST. In this case, it has only to certify that the same is applicable to i=i+1. It is possible to certify this applicability by using the propagation procedure for completion as follows.","Assume that a=a(n\u2212i) and a=a(n\u2212(i+1)). Further, let AP(a, a) be an authentication point of a by a. Further, brotherly nodes of the authentication point are represented by AP\u2032(a, a). Let j denotes a level of AP(a, a) (see ).","In the authentication path nodes of a in the small tree ST, due to the feature of a sequential aggregation tree mentioned below, assigned values for nodes whose level is less than j are included in data added at step Sof .","In the authentication path nodes of a in the small tree ST, assigned values for nodes whose level is equal to j are included in data added at step Sof .","In the authentication path nodes of a in the small tree ST, assigned values for nodes whose level is more than j are included in data added at step Sof .","From above, it is elicited that the combination between the late complementary data of a=a(n\u2212(i+1)) containing additions by the procedure COMPLETION_BULK_BACKWARD and the immediate complementary data at a(n\u2212i+1)) includes the assigned values for all authentication path nodes of a(n\u2212(i+1)) in the tree ST.","From the above (1) and (2), it becomes obvious that for each i=0, . . . , n, the combination between the late complementary data of a(n\u2212i) containing additions by the procedure COMPLETION_BULK_BACKWARD and the immediate complementary data at a(n\u2212i) includes assigned values for all authentication path nodes of a(n\u2212i) in the tree ST.","Note that by the similar inductive method, it is obvious that there is no possibility of a judgment of \u201cNO\u201d at step Scausing an output of \u201cerror\u201d.","(Efficiency of Memory)","The above descriptions are directed to a processing method in a situation such that it is possible to allow the computer to store data that the user apparatus has acquired as the event-ordering certification during one aggregation interval by the chain complementary method, in a memory of the computer. On the contrary, if the acquisition data cannot be stored in the memory of the computer due to weight of numbers of registration points acquired by the user apparatus I during the aggregation period, it is possible to calculate the complete authentication path data about all of the registration points during the relevant aggregation period by firstly reading part of the acquisition data into the memory and secondly calculating the complete authentication path data in incremental steps in accordance with a method described below.","The above calculation is carried out by the following steps (1) to (5).","(1) Extract and thin out only specific data from complementary data that a certain user apparatus I has received during a certain aggregation interval, the specific data each having a registration point whose index meets a specified condition, to form thinned-out extraction data.","Upon designating a positive integer m for sampling interval as the specified condition for extraction, it may be carried out to extract only the specific data each having a registration point whose index is dividable by m. In a concrete example of , upon designating \u201c5\u201d for sampling interval, only registration points having indexes dividable by \u201c5\u201d are extracted from the registration points having indexes from  to  (shown with black circles). In this case, the registration points of indexes , ,  are extracted to form the above thinned-out extraction data.","(2) Form local data. The local data is composed of both registration value and complementary data about a registration point whose index is interposed between adjoining thinned-out extraction data. In general, the local data is provided in plural.","In a concrete example of , there are collected registration points having indexes each interposed between the index \u201c\u201d of the first thinned-out extraction data and the index \u201c\u201d of the second thinned-out extraction data, in order to form the first local data. In a concrete example of , there are collected registration points having indexes each interposed between the index \u201c\u201d of the second thinned-out extraction data and the index \u201c\u201d of the third thinned-out extraction data, in order to form the second local data.","(3) Apply the above incremental completion on the respective local data formed at (2) while handling a rightmost registration point of each local data as the provisional terminal point. This application of incremental completion will be referred to as \u201clocal completion for local data\u201d, after.","Using the late complementary data calculated in the above process, it is assumed that a rightmost point of respective registration points belonging to local data in question is represented by a and that an authentication point of a (i.e. the respective registration points) by a is represented by AP(a, a). Then, in the authentication path nodes of a, it is possible to calculate assigned values for nodes lower than level(AP(a, a)). Further, the so-calculated assigned values of the nodes contain all of assigned values that have become definite at the completion of the processing of a in the authentication path nodes of a. That is, the so-calculated assigned values contain the late complementary data of the registration point a at a.","In the concrete example of , there are calculated assigned values for node(, ) and node(, ) as the late complementary data of the registration point numbered index , an assigned value for node(, ) as the late complementary data of the registration point numbered index , and an assigned value for node(, ) as the late complementary data of the registration point numbered index , by the above local completion for local data.","Assuming that the rightmost point (index: ) of respective registration points belonging to the relevant local data is represented by a, it is possible to calculate assigned values for nodes lower than level(AP(a, a)) in the respective registration points a belonging to the local data. For instance, if a is a registration point of index , then AP(a, a) becomes (, ), allowing a calculation of assigned values of nodes (, ), (, ), (, ) which are lower than level . Since the late complementary data of a at a comprises assigned values for nodes (, ), (, ), it will be understood that it is possible to calculate the late complementary data at a. Much the same is true on other registration points belonging to this local data.","As a result of the processing of the above section (3), about two adjoining registration points a and a in the thinned-out extraction data, it is possible to acquire the late complementary data of a at a. By applying the above main routine COMPLETION_MAIN_ for completing a certificate on the late complementary data, it is executed to complete certificates acquired at respective registration points contained in the thinned-out extraction data, namely, calculating of assigned values of all of the authentication path nodes of these registration points. This operation will be referred to as \u201cglobal completion for thinned-out extraction data\u201d after.","In a concrete example of , when completing certificates of registration points in the thinned-out extraction data numbered indexes ,  and , in other words, the registration points of leaf numbers , , and  it is possible to calculate assigned values of all of the authentication path nodes of three registration points. For instance, as for one registration point in the thinned-out extraction data numbered index , it is possible to calculated assigned values for nodes (, ), (, ), (, ), (, ), and (, ).","(5) Using each of the local data subjected to the local completion of the above section (3) and the thinned-out extraction data subjected to the global completion of the above section (4), it is performed to complete certificates of respective registration points contained in local data in question. This operation will be referred to as \u201cglobal completion for local data\u201d, hereinafter.","The detailed procedure of the global completion for local data is as follows:","(5-1) Suppose that registration points of certain local data is formed by a(), a(), . . . , a(n)=a. Then, assigned values for all authentication path nodes of a have been already calculated at step (4). Assume that these assigned values are represented by V(), V(), . . . , V(k\u22121);","(5-2) Thus, it is possible to calculate assigned values of respective nodes belonging to the root path of a. Assume that these assigned values are represented by V\u2032(), V\u2032(), . . . , V\u2032(k\u22121), V\u2032(k);","(5-3) For each a=a(), . . . , a(n\u22121), it is assumed that an authentication point of a by a is represented by AP(a, a) and k=level (AP(a, a(n));","(5-4) In the authentication path nodes of a, assigned values for nodes whose level is smaller than k have been already calculated by step (3).","(5-5) Further, the authentication path node (at level k) of a coincide with a node at level k belonging to the root path of a. Accordingly, an assigned value of such an authentication path node becomes V\u2032(k) by the calculation at (5-2).","(5-6) For j satisfying k>j>k, the authentication path node (at level j) of a coincide with a node at level j belonging to the root path of a. Accordingly, an assigned value of the authentication path node becomes V\u2032(j) by the calculation at (5-1).","In this way, by (5-1) to (5-6), it is possible to calculate the assigned values of all authentication path nodes of a with respect to each a=a(), . . . , a(n\u22121).","As for the concrete example of , the authentication path nodes of a registration point numbered index  (leaf ID No. ) comprises nodes (, ), (, ), (, ), (, ) and (, ). If a is a registration point numbered index  (leaf ID No. ), then AP(a, a)=(3, 0) and k=level(AP(a, a))=3. In the authentication path nodes of a, assigned values for nodes (, ), (, ), and (, ) at each level smaller than k=3 can be calculated at the above step (5-3) (see ). Additionally, an assigned value for an authentication path node (, ) at level k=3 can be calculated at the above step (5-2) (see ). An assigned value for a node (, ) at level more than k=3 can be calculated at the step (5-1) (see ).","Owing to the procedure of the above steps (1) to (5), indispensable data that a memory has to retain simultaneously in view of accomplishing the completion of acquired certificates is the thinned-out extraction data and the single local data only. Assuming that the total number of registration points is represented by N and the thinned-out interval used at the step (1) is represented by m, then the number of indispensable registration points that a memory has to retain simultaneously becomes (N\/m)+m. If m=\u221a{square root over ( )}N, then there is established (N\/m)+m=2\u00b7\u221a{square root over ( )}N, allowing the order of necessary memory capacity to be reduced from N to \u221a{square root over ( )}N.","<5-5. Root-Value Calculation of User Apparatus I by Complementary Data>","Next, the root-value calculation of the user apparatus I by the complementary data will be described. This is a detailed explanation about root-value calculation by the first validation function of the user apparatus I.","When a certain aggregation interval I comes to an end, the user apparatus I can calculate complete authentication path data with its executing of the individual completion of a receipt in response to one event-ordering request RQ that the apparatus I sent during the aggregation interval I in accordance with the above-mentioned method. From the so-calculated complete authentication path data, it is possible to further calculate an assigned value for a root of a sequential aggregation tree for the relevant aggregation interval in accordance with the steps (1) to (5) as below.","It is firstly noted that the complete authentication path data consists of both immediate complementary data and late complementary data. Assume that each of the immediate complementary data and the late complementary data consists of complementary data elements in the form of \u201c(positional information, LR-tag, assigned value (hash value))\u201d. Note that either tag of \u201cL\u201d or tag of \u201cR\u201d is selected in the term of \u201cLR-tag\u201d. The above positional information contains level information. Assume that there is defined, among the level information, a binary relationship \u201c<<\u201d as follows.","About a voluntary registration point, it is assumed that complementary data elements contained in the authentication path data are represented by.","\u201c(positional information P(i), LR-tag T(i), assigned value H(i))\u201d","where i=1, . . . , n. Additionally, assume the level information contained in the positional information P(i) is represented by level(P(i)). Then, it is assumed that the binary relationship \u201c<<\u201d defines a linear ordering among","level(P()), . . . , level(P(n)).","Suppose, the positional information consists of a combination of level (represented by a nonnegative integer) in one sequential aggregation tree with in-level index and additionally, the level information of the positional information coincides with a first element in the combination. In this case, it has only to select an integer magnitude relation \u201c<\u201d as the binary relationship \u201c<<\u201d.",{"@attributes":{"id":"p-0676","num":"0737"},"figref":"FIG. 76","b":["3101","3102","3103","3104","3105","3106"],"i":["a","a","a","a","a","a"]},"Referring to , we now describe a case of adopting, as one leaf of a sequential aggregation tree in a certain aggregation interval, a root value of another sequential aggregation tree completed in the previous aggregation interval. In such a case, it is possible to verify the temporal context in publishing receipts between different sequential aggregation trees with ease. In , for instance, when a registration point a of a user apparatus A is assigned to one leaf of a partial tree ST() of a sequential aggregation tree ST() and when a registration point  of a user apparatus B is assigned to one leaf of a partial tree ST() of a sequential aggregation tree ST(), the confluent point between a and b becomes a node R(), while the authentication point of a by b becomes a node R(). Accordingly, if a value of the authentication point R() calculated from the registration point a is included in the immediate complementary data at the registration point b, then it becomes possible to certify that the registration of the point a occurred in advance of the registration of the point b.",{"@attributes":{"id":"p-0678","num":"0739"},"figref":["FIG. 77","FIG. 78"]},"Here, it is noted that a root R(n\u22121) is a node in common with one sequential aggregation tree ST(n\u22121) and another sequential aggregation tree ST(n), which is characterized by:","Level information (L, TID(n\u22121), k());","In-level index ; and","Positional Information ((L, TID(n\u22121), k()), 0).","Note that the above level information consists of (LR-tag, nonnegative integer tree number, nonnegative integer in-tree level information). As for the term of \u201cLR-tag\u201d, either tag of \u201cL\u201d or tag of \u201cR\u201d is selected.","Further, a root R() of a partial tree ST() is characterized by:","Level information (R, TID(n\u22121), k());","In-level index ; and","Positional information ((R, TID(N\u22121), k()), 1)","where k() is a height of the tree ST().","Further, regarding a partial tree ST(), nodes except a root R() are characterized by:","Level information (R, TID(n), j); and","Positional information ((R, TID(n), j), i).","Here, j and i are nonnegative integers. The positional information of each element forming Leafs(ST()) can be represented by ((R, TD(n), 0), i).","Again, R(n) is a node in common with small trees ST(n) and ST(n+1) and is characterized by:","Level information (L, TID(n), k(n));","In-level index ;","Positional information ((L, TID(n), k(n), 0) where k(n) k()+1; and","Assigned value V(R(n))=h(V(R(n\u22121))\u2225V(R()).","A binary tree composed the sequential aggregation small tree ST(), the root R(n\u22121) and the root R(n) is represented by ST(n). That is,\n\nroot(ST())=(),\n\nleftChild(())=(1), and\n\nrightChild(())=R().\n","A sequential aggregation tree corresponding to the n. aggregation period is ST(n).","However, for n=0, R(n\u22121) is replaced by a node IR (see ). The positional information about the node IR is represented by ((L, \u22121, 0), 0).","Then, the order \u201c<<\u201d between two extended level information is defined as follows:\n\n\u22001,2,1,2\u22670[(2,2)<<(1,1);\n\n\u22001,2,1,2\u22670[1<2(1,1)<<(2,2)]; and\n\n\u22001,2,1\u226701<2(1,1)<<(1,2).\n","From this definition, it is implied that the binary relationship \u201c<<\u201d is provided to determine a linear ordering against an aggregate of authentication path nodes of a voluntary registration point.",{"@attributes":{"id":"p-0701","num":"0762"},"figref":"FIG. 79"},"For a node by the positional information ((R, , ), ), the immediate complementary data becomes","[(((L, , k()), ), L, V(R())),","(((R, , ), ), L, V((R, , ), )),","(((R, , ), ), L, V((R, , ), ))]","where, (R, , )<<(L, , ).","The late complementary data becomes [(((R, , ), ), R, V((R, , ), ))].","The calculation of the root value from the complementary data is accomplished in accordance with the flow chart of .","(1) Check that elements of the immediate complementary data have L-tag each.\u2192pass","(2) Check that elements of the late complementary data have R-tag each.\u2192pass","(3) Incorporate the immediate complementary data with the late complementary data.","The incorporation results in","[(((L, , k()), ), L, V(R())),","(((R, , ), ), L, V((R, , ), )),","(((R, , ), ), L, V((R, , ), )),","(((R, , ), ), R, V((R, , ), ))].","(4) Confirm that there is no overlapping level information in the incorporation.","(5) Sort the incorporation result, based on the order of the level information <<.","The sorting results in","[(((R, , ), ), L, V((R, , ), )),","(((R, , ), ), R, V((R, , ), )),","(((R, , ), ), L, V((R, , ), )),","(((L, , k()), ), L, V(R()))].","(6) Setting the sorting result of step (5) to (J(), LR(), V(), . . . , (J(k\u22121), LR(k\u22121), V(k\u22121)) and also setting a registration value of the relevant registration point to V(), the root values are recursively defined as follows:\n\nW(0), W(1), . . . , W(k\u22121), W(k).\n\n(0)=(0)\u2003\u2003(i)\n\nIf ()=, then (1)=(()\u2225()).\u2003\u2003(ii)\n\nIf LR(j)=R, then W(j+1)=h (W(j)\u2225V(j)).\n","When calculating in accordance with the above definition, there is obtained k=4 and W(j) can be calculated as follows:\n\n(0)=(10, 0),5),\n\n(1)=((10, 0),4)\u2225((10, 0),5)),\n\n(2)=((1)\u2225((10, 1),3)),\n\n(3)=(((10, 2),0)\u2225(2)), and\n\n(4)=(((9))\u2225(3)).\n\nThus,\n\n(3)=((1(10)) and (4)=((10)).\n","The event-ordering certification system of the fifth embodiment has the same effects as those of the fourth embodiment. As for the event-ordering certification system for certifying the event ordering with the use of a tree structure, it is supposed that the certification apparatus on receipt of an event-ordering request from the user apparatus I publishes a certification reply in the chain complementary method including a receipt against the request (note: the certification reply containing the immediate complementary data of a registration point and the late complementary data of another registration point just before the registration point). Even then, if the user apparatus I performs the incremental completion while using the certification reply, it becomes possible for the user apparatus I to verify the temporal context in publishing respective receipts between the user apparatuses I. Therefore, even if this validation occurred in advance of the electronic publication of public data collecting up the event-ordering requests, it is possible to verify the validity of the receipts.","Additionally, the chain complementary method has the effect of reducing amount of data contained in the certification reply in comparison with the sequence complementary method. Also in the chain complementary method, of course, as the certification apparatus can employ not only the method of storing sequential aggregation trees in the memory part but a storing method using a stack structure, it is possible to reduce storage capacity required for the certification apparatus remarkably.","Additionally, since the incremental completion process by the user apparatus I includes both individual completion and bulk completion, the apparatus I can verify the validity of a receipt by executing an appropriate incremental completion according to the situation. Further, since the incremental completion can be accomplished even in a method where only partial local data is stored in the memory of the user apparatus I in place of storing all of the certification reply data-items, it is possible to reduce storage capacity required for the user apparatus I remarkably.","After completing the sequential aggregation period, since the incremental completion allows the user apparatus I to acquire the complete complementary data, the user apparatus I can calculate a root value of the sequential aggregation tree. Further, when utilizing the root value of a sequential aggregation tree in the previous aggregation interval as an assigned value for the next sequential aggregation tree, it is possible to verify the temporal context in the publication of receipts bridging these sequential aggregation trees with ease.","Various changes and modifications may be made within the scope of the present invention. For instance, the binary decision trees in the above-mentioned embodiments may be replaced by directed trees where each parent has a plurality of children.","Additionally, the user apparatus I (or I) may be equipped with \u201cuser's side\u201d means for electronic information publication. In operation, when the certification apparatus (or ) stops its operation or vanishes data necessary for calculating a root value of the sequential aggregation tree before completing a constant aggregation interval, the \u201cuser's side\u201d means operates to select one or more of nodes whose assigned values are calculable and whose parents' assigned values are not calculable, from certification replies that the user apparatus has already received and stored by the time of stopping the operation of the apparatus (or ) or vanishing the data. In succession, the \u201cuser's side\u201d means operates to publish the positional information and assigned value(s) of the selected node(s) electronically. In connection, there may be further provided a designated validation organization that verifies whether the above electronic information published by the user apparatus I (or I) is consistent or not.","<Feature of Sequential Aggregation Tree>","We now describe the feature of the sequential aggregation tree in the fourth and fifth embodiments, in detail.","Regarding the leaf number i in the sequential aggregation tree, a series of processes of: accepting an event-ordering request, which forms the origin of sequentially assigning assigned values to leaves identified with i; and successively assigning the assigned values to these leaves, will be referred to as \u201cprocessing round\u201d and represented by. \u201cround (i)\u201d.","Now assume that C is a user apparatus, Z an audit apparatus and both i and i denote two leaf numbers where i<i. It is further presumed that the apparatus C received a receipt at round(i), while the apparatus Z received an audit receipt at round(i). Then, an authentication point of \u201ci\u201d by \u201ci\u201d has characteristics as follows:","(1) An assigned value for the authentication point is included in the immediate complementary data at the audit point, i.e. node (, i);","(2) Let (j\u2032, i\u2032) denote the above authentication point. Let ST be a sequential aggregation small tree where the leaf (, i) belongs to when round (j) is ended. In connection, an authentication path of (, i) in ST is represented by authPathST(, i)). As for various nodes belonging to the authPathST(, i)), assigned values for nodes at each level smaller than j\u2032 are included in either the late complementary data that the user would receive on and after the round corresponding to node (, i) or a receipt (incl. immediate complementary data) that the user has received at node (, i).","That is, if i\u2266i, then assigned values for the nodes belonging to authPath((, i), j) and having each level smaller than j\u2032 are included in either immedData(i) or lateData(i, i); and","(3) Assume that a root oath of leaf (, i) in ST is represented by rtPathST(, i). Then, it is possible to calculate an assigned value for the above authentication point and assigned values of nodes belonging to rtPath((, i), i), the nodes each having level smaller than the level of the authentication point, from the late complementary data that the user would receive on and after the round corresponding to node (, i) and the receipt (incl. immediate complementary data) that the user has received at node (, i).","Certification of Feature","We now describe a case of incorporating immediate complementary data into a receipt to be delivered to a user. Even when not incorporating the immediate complementary data into the receipt but instead incorporating the same information into late complementary data, the same conclusion could be attained with similar argument.","(1) First, item (1) will be described with reference to .","(Case 1) First of all, we refer to . Suppose a situation that both i and i belong to one sequential aggregation small tree ST in a sequential aggregation forest at the point of i. Assume here, (j, i) denotes a confluent point between i and i. Let (j\u2032, i\u2032) be an authentication point being a left child of the confluent point. In a root path rtPathST((, i), i) of node (, i), it is assumed that (j\u2033, i\u2033) represents a node originating in node (, i) and just before the confluent point. Then, the authentication point coincides with a left complementary point of (j\u2033, i\u2033). Thus, according to the definition of the authentication path authPathTST(), ((j\u2032, i\u2032), L) is included in the authentication path of node (, i) in ST. The assignment of a value for node (j\u2032, i\u2032) has been completed before round(i). Therefore, ((j\u2032, i\u2032), L, V(j\u2032, i\u2032)) is included in the immediate complementary data against node (, i).","(Case 2) Next, we suppose a situation where both i and i do not belong to any sequential aggregation small tree in the sequential aggregation forest at the point i simultaneously, with reference to . Then, i belongs to a certain sequential aggregation small tree ST\u2032 in the sequential aggregation forest at the point i. At this time, due to the definition of the immediate complementary data for the registration point (, i), V(root(ST\u2032)) is included in the immediate complementary data for the registration point (, i).","(2) Item (2) will be described with: reference to .","(Case 1) First of all, we refer to . Suppose a situation that both i and i belong to the sequential aggregation small tree ST in the sequential aggregation forest at the point of i.","Assume that k=height(ST).","The authentication point (j\u2032, r(j\u2032)) is included in the root path rtPathST(, i) for node (, i). Assume here that","rtPathST(, i)=[(, r()), . . . , (j\u2032, r(j\u2032)), (j\u2032+1, r(j\u2032+1), . . . , (k, r(k))].","Further, a row of nodes formed by elements of authPathST(, i) and having each level smaller than j\u2032 is represented by [(, s()), . . . , (j\u2032\u22121, s(j\u2032\u22121))]. Then, it has only to certify that V(j, r(j)) is included in either immedData(i) or lateData(i, i) for each j (i.e. j\u03b5[0 . . . j\u2032\u22121]).","By the definition of authPathST(, i), it is noted that an element p=(j, s(j)) at level j of authPathST((, i), i) is either a right child of an element p at level j+1 of rtPathST(, i) or the left child. We describe both cases respectively.","(Case 1-1) When p is the right child of p, an assigned value V(p) of p is included in the late complementary data lateData(i, i) that the apparatus C can receive at i satisfying i\u2266j, as shown in . The reason is that when the event-ordering certification on the round corresponding to leaf(, i) is completed, it has already become possible to calculate an assigned value for an \u201cST\u201d partial tree indicated with B of . As a matter of fact, the assigned values have been already calculated and assigned. Accordingly, the late complementary data for the registration point i published on and after the above point of completion contains the assigned value V(p) for the root p of the partial tree B.","(Case 1-2) When p is the left child of p, an assigned value V(p) for node p is included in the immediate complementary data for the registration point i, as shown in . Because, for the partial tree B having the root p of , there is established:","\u2200I\u03b5leafs(B) [i<i].","Accordingly, when starting the round identified with i, an assigned value for leafs(B) has already become definite. Thus, an assigned value for p=root(B) has become definite on the round i. Therefore, p is included in an aggregate of authentication path nodes of i whose assigned values have already becomes definite at the point i.","(Case 2) Next, we refer to . Suppose a situation that both i and i do not belong to any sequential aggregation small tree in the sequential aggregation forest at the point of i simultaneously. Then, i belongs to a certain sequential aggregation small tree ST in the sequential aggregation forest at i, so that root(ST) constitutes an authentication point of i by i. Here assume that k=height(ST). An authentication point (j\u2032, i\u2032) is included in a root path rtPathST(, i) of (, i). Assume here that","rtPathST(, i)=[(, r()), . . . , (j\u2032, r(j\u2032)), (j\u2032+1, r(j\u2032+1), . . . , (k, r(k))].","Further, a row of nodes formed by elements of authPathST(, i) and having each level smaller than j\u2032 is represented by [(, s()), . . . , (j\u2032\u22121, s(j\u2032\u22121))]. Then, it has only to certify that V(j, r(j)) is included in either immedData(i) or lateData(i, i) for each j (i.e. j\u03b5[0 . . . j\u2032\u22121]).","By the definition of authPathST(, i), it is noted that an element p=(j, s(j)) at level j of authPathST((, i), i) is either a right child of an element p=(j+1, r(j+1)) at level j+1 of rtPathST(, i) or the left child. We describe both cases respectively.","(Case 2-1) When p is the right child of p, an assigned value V(p) of p is included in the late complementary data lateData(i, i) that the apparatus C can receive at i satisfying i\u2266j, as shown in . The reason is as follows. When the event-ordering certification on the round corresponding to leaf (, i) is completed, it has already become possible to calculate an assigned value for an \u201cST\u201d partial tree indicated with B of . As a matter of fact, the assigned values have been already calculated and assigned. Accordingly, the late complementary data for the registration point i published on and after the above point of completion contains the assigned value V(p) for the root p of the partial tree B.","(Case 2-2) When p is the left child of p, an assigned value V(p) for node p is included in the immediate complementary data for the registration point i, as shown in . Because, about the partial tree B having the root p of , there is established:","\u2200I\u03b5leafs(B) [I<i].","Accordingly, when starting the round identified with i, an assigned value for leafs(B) has already become definite. Thus, an assigned value for p=root(B) has become definite on the round i. Therefore, p is included in an aggregate of authentication path nodes of i whose assigned values have already becomes definite at the point i.","(3) By the definition of authentication path and item (2), it is possible to calculate V(j, r(j)) for each j\u03b5[0 . . . j\u2032] recursively, as follows.","First, assume that V(j, r(j)) denotes an assigned value for node (, i) included in a receipt.","Assume that (V(j, r(j)) was calculated for j\u03b5[0 . . . j\u2032\u22121]. Then, V(j+1, r(j+1)) is calculated as follows:","If r(j)<s(j), then there is established,\n\n(1+1(1+1))=((1,(1))\u2225(1,(1))).\n","If s(j)<r(j), then there is established,\n\n(1+1(1+1))=((1(1))\u2225(1(1))).\n","In the event-ordering certification system for certifying the event-ordering while using a tree structure, according to the present invention, it is possible to verify the event-ordering receipt published from the event-ordering certification organization without using public data where the event-ordering requests are gathered up.","Consequently, even if being in the middle of a publishing period, it is possible to verify the validity of an event-ordering receipt that the user apparatus has received, enhancing the convenience of a user. Additionally, even if failures occur in an event-ordering certification organization, it is possible to construct an event-ordering certification system resistant to an obstacle."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 45"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 54"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 57","FIG. 55"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 59"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 61","FIG. 60"]},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 64"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIGS. 65A to 65F"},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 66"},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 67"},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 68"},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 69"},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 70"},{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 71"},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 72"},{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 73"},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 74"},{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 75"},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 76"},{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 77"},{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 78"},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 79"},{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 80"},{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 81"},{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 82"},{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 83"},{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 84"},{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 85"}]},"DETDESC":[{},{}]}
