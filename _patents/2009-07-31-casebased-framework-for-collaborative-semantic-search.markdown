---
title: Case-based framework for collaborative semantic search
abstract: A service-oriented system architecture includes a computer-implemented search method and computer-implemented agent system for enabling efficient information searches on, for example, on XML databases, relational databases, and files located on intranets, the Internet, or other computer network systems. Referred to as the Knowledge Sifter architecture, the architecture may comprise, in one embodiment, a community of cooperating agents. The system architecture may be employed using a variety of methodologies, such as a case-based framework, collaborative filtering, or hybrid filtering. The case-based framework may be configured to recommend query specifications and refinements based on previously-stored user-query cases. Collaborative filtering involves the architecture recommending a set of unseen items that are preferred by other users to the active user. Hybrid filtering combines collaborative filtering and content-based filtering.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08386485&OS=08386485&RS=08386485
owner: George Mason Intellectual Properties, Inc.
number: 08386485
owner_city: Fairfax
owner_country: US
publication_date: 20090731
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["This application claims the benefit of U.S. Provisional Application No. 60\/085,254, filed on Oct. 9, 2008, entitled \u201cKnowledge Sifter,\u201d which is hereby incorporated by reference in its entirety.","This invention was made with government support under Grant Number NMA501-03-1-2022 awarded by USGS NIMA. The government has certain rights in the invention.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 1B","FIG. 1A"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 4B","FIG. 4A"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 7B","FIG. 7A"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},"Disclosed is a computer-implemented search method and computer-implemented agent system for efficient searching of information. Information may be located, for example, on the world wide web, semantic web, internet, an intranet, or other like computer network systems.","The disclosed computer-implemented search method and computer-implemented agent system can enable users to perform ontology-guided semantic searches for relevant information, both in-house and external-source. It can access heterogeneous data sources via agent-based knowledge services and can refine those searches based on user feedback. External sources include, but are not limited to, the World Wide Web, XML-databases, relational databases and the Semantic Web. Open standards for both ontology construction\u2014the Web Ontology Language (OWL)\u2014and for searching heterogeneous data sources\u2014Web services, may be used in the disclosed computer-implemented search method and computer-implemented agent system.","Referring to , a service-oriented system architecture (also referred to as the Knowledge Sifter architecture or \u201cKS architecture\u201d), comprised of a community of cooperating agents is shown, according to one embodiment. In , the solid arrowed lines indicate Agent interaction and the flow of data, while the dashed arrowed lines indicate the flow of data. It should be noted that in other embodiments the interaction of flow can be in different directions. The architecture depicted can have three layers: User Layer , Knowledge Management Layer , and Data Sources Layer . The KS architecture may be general and modular so that new ontologies and new information resources can be incorporated easily, in a \u201cplug-and-play\u201d type-fashion. Specialized agents may reside at the various layers and perform well-defined functions. They can support interactive query formulation and refinement, query decomposition, query processing, result ranking and presentation. The various KS agents and services are further discussed below.","Referring to , a general flow chart is shown that corresponds to the embodiment shown in . The KS architecture can receive one or more queries from at least one user at . The KS architecture can also accept user preferences from the user at . The KS architecture can refine the user query using the user preferences at . The KS architecture can reformulate the query through semantic mediation information at . This can be done by accessing at least one domain model database at  and by consulting one or more authoritative name services at . The KS architecture can decompose the query into at least one subquery using the semantic mediation information at . The subquery can be dispatched to at least one data source at . Finally, the KS architecture can execute the subquery to obtain at least one search result at . Additionally, the KS architecture can rank the subquery according to the user's preference information at .","Referring again to , the KS architecture is described in further detail according to each agent according to an embodiment. User agent  can receive information from a user  and obtain the user's  preferences. User  preferences may be stored and managed by the preferences agent . These preferences include, but are not limited to, the relative importance attributed to terms used to pose queries, the user-perceived authoritativeness of results obtained from data sources, and the biases a user has towards data sources.","In one embodiment, as shown in , the KS architecture can accept user preferences according to an image analysis information domain. A user can identify among other things: the relative importance to the user of the semantic description (name and description) ; the relative importance to the user of the location being searched ; the user's preferences relating to the date of an image ; the size of an imagery file ; the relative importance according to the theme of the image (such as a photograph or topographic map) ; and whether a particular data source (e.g., Terra Server or Yahoo!)  is preferred over another. The user can indicate his or her preferences utilizing a graphical user interface. For example, a pull-down menu may be used to indicate the user's preferences utilizing a rating scale from zero to ten.","Referring again to , the user preference information may also be used by the ranking agent . Further, the preferences agent  can also learn the user's 's preferences based on experience and feedback related to previous queries. One skilled in the art would appreciate that the type of information sought from the user could be modified according to the type of information domain. For example, a domain model based on media such as movies, music, and the like might request preferences according to the year of the media, the popularity of the item, its content, or a particular genre.","Referring to additional agents depicted in , the ontology agent  can access an imagery domain model . As previously discussed, domain models other than an imagery domain model may be supported by the KS architecture. The KS architecture can also be configured to support multiple domain models simultaneously and can have linkages among the models. For example, multiple domain models may include domain models relating to movies, music, and soundtracks. In addition, authoritative name services  may provide data to the ontology agent to suggest query refinements. As shown in , authoritative name services  include, but are not limited to, Princeton University's WordNet , the U.S. Geological Survey's Geographic Names Information System (GNIS) , and the National Geospatial-Intelligence Agency's GEOnet Names Server (GNS) . The authoritative name services  can enable the ontology agent  to use terms provided by the authoritative name services  to suggest query refinements such as generalization, specialization and synonyms. For example, WordNet  can provide a collection of synonyms or synonym sets for a term, while GNIS  and GNS  translate a physical place name\u2014in the United States and the World, respectively\u2014into latitude and longitude coordinates that are required by a data source such as TerraServer. Other appropriate name and translation services can be added in a modular fashion, and the domain model  can be updated to accommodate new concepts and relationships.","When the initial query instance, specifying a person, place, or thing, is sent to the ontology agent , it can then consult WordNet  to retrieve synonyms. The synonyms may be provided to the query formulation agent  to request that the user  select one or more synonyms. The decision may be communicated to the ontology agent  which then updates the appropriate attribute in the instantiated version of the OWL schema. If the attribute value is the name of a class of type place then the ontology agent  may pass the instance to the both GNIS  and GNS . These take the place name as input and can provide the latitude-longitude coordinates as output. This information can then be communicated to the query formulation agent  which then forwards the information in the reformulated queries to the web services agent  for processing.","The user agent  may be configured to pose an initial query to the query formulation agent . This agent, in turn, can also consult the ontology agent  to refine or generalize the query based on the semantic mediation provided by the available ontology services. Once a query has been specified by means of interactions among the user agent  and the ontology agent , the query formulation agent  decomposes the query into subqueries targeted for the appropriate data sources. This involves semantic mediation of terminology used in the domain model ontology and name services with those used by the local sources. Also, query translation may be needed to retrieve data from the intended heterogeneous sources.","The web services agent  may be configured to accept user  queries that have been refined by consulting the ontology agent , and decomposed by the query formulation agent . The web services agent  can arrange, compose and dispatch subqueries to appropriate data sources, taking into consideration facets including but not limited to: user preference of sites; site authoritativeness and reputation; service-level agreements; size estimates of subquery responses; and quality-of-service measures of network traffic and dynamic site workload.","The ranking agent  may be configured to be responsible for compiling the sub-query results from the various sources, ranking them according to user preferences, as supplied by the preferences agent , for attributes including but not limited to: 1) the authoritativeness of a source which is indicated by a weight\u2014for example, a number between 0 and 10\u2014assigned to that source, or 2) the weight associated with a term comprising a query.","As shown in , data sources can include, but are not limited to, data sources such as Yahoo! Images , TerraServer , and Semantic Web . The data sources can be consulted by the web services agent . Yahoo Images  supports Representational State Transfer (REST)-based web services which simply returns XML result data over HTTP. Yahoo Images  can support the name and description for images; this can allow the ranking agent  to perform more precise evaluation for the semantic criteria. The ranking agent  may also use the size of images contained in Yahoo Images  metadata to filter images based on user preference, but the metadata may not contain the creation time of images which is a good measure of temporal aspect.","The KS architecture workflow may be configured to manage the entire search process, including, but not limited to, query specification, query reformulation, query decomposition, web service selection, data source selection, results ranking and recommendation presentation. Thus, the KS architecture can execute the subquery to obtain at least one search result. The KS architecture workflow may be carried out in part or entirely through the use of a physical, i.e., tangible, computer readable storage medium. Examples of machine-readable storage media include, but are not limited to, (a) magnetic disks, cards, tapes, and drums, (b) punched cards and paper tapes, (c) optical disks, (d) barcodes (e) solid state memory devices or (f) magnetic ink characters.","Search results may be displayed to a user in response to a user query according to an embodiment of the KS architecture. A search result may be shown on a map display such as a Google map display. So for example, The KS architecture displaying a map display of Mount Rushmore in South Dakota in response to the search query \u201cRushmore, Mount\u201d. In response to the broader search query \u201cRushmore\u201d, the KS architecture could show a result for \u201cRushmore Farm\u201d in Zambia. Additionally, image search results from image databases such as TerraServer and Yahoo! May be displayed for search queries. For example, a search query for \u201cRushmore, Mount\u201d could result in a series of pictures of Mount Rushmore in South Dakota.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 1A"],"b":["130","220","210","220","230","280","260"]},"Referring again to , an image  can have a source , with respective property attributes URI  , URI  , and server . Content  can have person , thing , and place . Class place  can have properties name  and theme , and classes region  and address . Class region can further have class circle  and class rectangle . Class circle  can have property attributes radius , latitude , and longitude . Class rectangle  can have property attributes north , south , east , and west . Class address  can have properties country , state , city , zip code , and street . Class features  can have properties projection , datum , and resolution . An ISA relationship can also exist between features  and date , and between features  and size . Class date  can have properties from  and to . Class size  can have properties height  and width . Various other classes, properties and ISA relationships could be utilized and will be apparent to those skilled in the art. Of course, domain models other than an imagery domain model will accordingly utilize class types and properties appropriate for that domain model. For example, a domain model based on movies may have a class type such as rating, with properties such as G, PG, PG-13, or R.","In another embodiment the KS architecture may be configured to analyze emergent behavior and patterns through the agent system and the use of composable web services to create reusable search frameworks. The KS architecture may be configured to collect, index, organize and store significant artifacts created during the end-to-end workflow.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIGS. 3A and 3B","FIGS. 3A and 3B"],"b":["300","300","300","310","320","310","330","340","350","360","370","380","320","330","320","331","341","342","343","331","361","333","351","350","361","351","382","382","383","381","381","380","284","385","383","386","387"]},"A UserQuery  may be configured to consist of several RefinedQuery , each of which can be posed to several DataSource . DataSource  can provide one-or-more DataItem  in response to a RefinedQuery  as the QueryResult . Based on the returned QueryResult , the User  may provide Feedback  as to the result relevance and other comments. These may impact the evolution of metadata associated with UserPreference , query formulation, data source usage and result ranking. The KSMM  can be implemented as a relational database schema, which can be used to organize, store and interrelate the artifacts associated with a user query. The data can then be mined for emergent properties related to the use of the disclosed computer-implemented search method and computer-implemented agent system.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 4A","FIG. 4A","FIG. 1A"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 4B","FIG. 4A"],"b":["401","406","411","416","417","421","422","426","431","436","441"]},"Referring again to , the KS architecture is described in further detail according to specific agents. The case management agent  may be configured to communicate with the user agent  and can obtain cases from the user query case base  that have user feedback annotations. The case management agent  can also communicate with the repository .","A user query case can be generated when a user  provides relevance feedback for results returned for a query. The user feedback may be the user's evaluation of the degree of relevance of a result to the refined query. For example, the degree of relevance may be rated as highly relevant, relevant, highly not relevant, or unclear. One skilled in the art would appreciate that other rating scales could be implemented, such as a numbered rating system, or letter grades for example. The relevance feedback can also be regarded as a user rating of the result's information quality.","The query formulation agent  may be configured to communicate with the ranking agent  and ontology agent . The ontology agent  can also be configured to communicate with an ontology repository . Additionally, the query formulation agent  may be configured to communicate with the case management agent  to retrieve cases according to a user query and user preferences (managed by the preferences agent ). To efficiently retrieve cases, the case management agent  may be configured to maintain ontology-based indices to cases, described below with respect to . From the retrieved cases, a refined query with data source information can be selected using a collaborative filtering approach which is also described below. The KS architecture according to the embodiment of  can also maintain a pre-compiled component repository  for accessing data sources for each information domain such as places, music, movies, scholarly papers, etc. Based on the collaborative filtering approach, the KS architecture can semi-automatically select external data sources . The web services agent  may be configured to communicate with a dynamically configured web services-based wrapper component repository  for each selected external data source .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 5","FIG. 5","FIG. 6","FIG. 5"],"b":["500","505","510","515","540","515","520","525","530","535","530","535","540","545","540","540","550","550","555","560","565","555","540","555","540","560","560","565","540","550","570","560","560","570","575"]},"Thus, a feature can be not only content-based metadata, but also metadata created during the information object's life-cycle. The feature name  may be standardized in the scope of the KS architecture to remove the ambiguity which can occur during the search and recommendation processes described below. Some standardized metadata, such as Dublin Core Metadata, can be used to describe feature attributes.","As mentioned previously, to efficiently retrieve cases, the case management agent  may be configured to maintain ontology-based indices for cases. Referring again to , each user term  of the query concept can have referenced ontology concepts . For each ontology concept , case identifiers referencing the ontology concept  can be stored as the indices. Other elements in connection with the RefinedQuery  of  are described in further detail later.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 6","FIG. 6"],"b":["610","620","630","640","650"]},"Referring to  shows an algorithm for retrieving cases similar to the user query via ontology-based indices.  shows a general flow chart that corresponds to the algorithm shown in . Brackets and reference characters shown in  correspond to the flow chart and reference characters shown in .","Referring to , first, an active user query is received at . The algorithm can then generate expanded queries of every possible combination of concepts, including their equivalent and generalized concepts at . For example, a user query {Washington Monument, steakhouse} can be expanded via ontology navigation as: {Washington Monument, chophouse} {Washington Monument, restaurant} {DC, steakhouse}, etc. The DC concept may be obtained from WordNet through the \u201cPart Holonym\u201d relationship of the \u201cWashington Monument\u201d concept to the \u201cDC\u201d concept, and this can be regarded as a spatial generalization.","The algorithm can retrieve cases which are indexed by all the concepts of an expanded query, but can also limit the number of the cases to a prespecified maximum at . For efficiency purposes, whether the required number of cases is retrieved or not will be checked before expanding one element query of powerset of the user query because the expanded queries generally cannot be more similar to the user query than the original element query. Thus, the algorithm can remove already checked expanded queries to find cases before generating the next combination at . The weighted sum of each query, w(uqi), and shown at , can be calculated as follows:",{"@attributes":{"id":"p-0050","num":"0049"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["uq","i"]}}},{"munder":{"mo":"\u2211","mi":"j"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":[{"mi":"tw","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["c","ij"]}}},{"mi":"uw","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["c","ij"]}}}],"mo":"\u00b7"}}],"mo":"="},{"mrow":[{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["c","ij"]}}},{"mo":"{","mtable":{"mtr":[{"mtd":[{"mrow":{"mn":"1.0","mo":","}},{"mrow":{"mi":["if","is","a","user","concept"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"msub":{"mi":["c","ij"]}}}]},{"mtd":[{"mrow":{"mi":"syw","mo":","}},{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mi":["if","is","an","equivalent","concept"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"msub":{"mi":["c","ij"]}},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}},{"mtd":{"mrow":{"mi":["of","the","user","concept"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]}}}]}}]},{"mtd":[{"mrow":{"mi":"hyw","mo":","}},{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mi":["if","is","a","generalized","concept"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"msub":{"mi":["c","ij"]}},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}}}},{"mtd":{"mrow":{"mi":["of","the","user","concept"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]}}}]}}]},{"mtd":[{"mrow":{"mrow":{"mi":["syw","hyw"],"mo":"*"},"mo":","}},{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mi":["if","is","a","generalized","concept"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"msub":{"mi":["c","ij"]}},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}},{"mtd":{"mrow":{"mrow":{"mi":["of","the","equivalent","concept"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}]}}]}]}}],"mo":"="}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}}},"The term uqmay represent a user query for case i and tw(c) may represent a predefined weight for the type of jth concept in uq. The terms syw and hyw can denote the predefined weight for an equivalent (synonym) concept and a generalized (hypernym) concept, respectively. The term uw(c) may be a user defined weight for a concept c. The algorithm can sort cases in descending order of weight at .","A similarity, at , between the expanded user query of the active case and the user query of the retrieved cases, which can be expressed as sim(C, C) uses cosine correlation which is widely used for the vector model in information retrieval. The term sim(C, C) can be calculated as follows:",{"@attributes":{"id":"p-0053","num":"0052"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["C","a"]},{"mi":["C","i"]}],"mo":","}}},"mo":"=","mfrac":{"mrow":[{"munder":{"mo":"\u2211","mrow":{"mi":"j","mo":"\u2208","msub":{"mi":["EQ","a"]}}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":[{"mi":["cw","aj"]},{"mi":["cw","ij"]}],"mo":"\u00b7"}},{"msqrt":[{"mrow":{"munder":{"mo":"\u2211","mrow":{"mi":"j","mo":"\u2208","msub":{"mi":["EQ","a"]}}},"mo":"\u2062","msubsup":{"mi":["cw","aj"],"mn":"2"}}},{"mrow":{"munder":{"mo":"\u2211","mrow":{"mi":"j","mo":"\u2208","msub":{"mi":["EQ","a"]}}},"mo":"\u2062","msubsup":{"mi":["cw","ij"],"mn":"2"}}}],"mo":"\u00b7"}]}}},{"mrow":{"mo":["(",")"],"mn":"2"}}]}}}}},"The terms cwand cwcan represent the weights of the jth concept in the expanded user query of the active case EQand the user query of the retrieved case respectively. The algorithm can sort cases in descending order of similarity at .","The algorithm can retrieve the most similar cases to the given active user's query at . The number of similar cases retrieved can be limited to a predefined maximum.","Content-based filtering may serve as a method for recommending unseen items to a user based on the contents of items the user has already seen and which may stored in their profile. Content-based filtering can assist users in refining a query based on the artifacts of their past queries which are similar to the active query. However, similar queries may not yet exist in the active user's profile, or the acceptable number of the user-preferred data items cannot be easily obtained because of insufficient feedback data provided thus-far. Referring again to , an embodiment is now discussed according to a case-based framework using the KS architecture which may be configured to utilize collaborative filtering.","The KS architecture may be configured to utilize collaborative filtering may ameliorate the situation described above with respect to content-based filtering; it attempts to predict usefulness of as yet unseen items for an active user , by proposing items based on those previously rated by other users. The KS architecture can recommend a set of unseen items that are preferred by other users who have tastes similar to the active user . Thus, the drawbacks of content-based filtering can be addressed with a higher level of confidence.","However, collaborative filtering may not be applied directly to the case-based KS architecture framework discussed above, because more than one user-query case, stored in the case repository, may be similar to the active user query. One approach may be to recommend a single aggregated refined query from the cases having a certain level of user-query similarity. The similarity sim(C, C), discussed above, may be calculated as the similarity between the active case and its similar cases in terms of the similarity of the user queries.","Therefore, a hybrid filtering approach can be used effectively in the KS architecture which combines both collaborative filtering and content-based filtering. However, if there is no previously-stored user query posed by the active user in the selected similar cases, the collaborative filtering cannot be directly used for the active refined query because the recommendation of the query specification should be made before retrieving results from data sources. In other words, no user feedback exists on results of the query which is required for the collaborative filtering. To address this problem, an aggregated refined query from the refined queries of the selected cases can be recommended.","The case-based KS architecture can recommend the refined query and the user  can confirm that this is to now be the active refined query. During this confirmation, the user  can fine-tune the query parameters. For example, for the data source feature, the user might add or remove data sources and adjust the weights for each data source. Then, the KS architecture can retrieve results from the data sources  in the user-confirmed refined query by dynamically translating it (via the Web Service (WS)-based wrapper component repository ) to one or more queries according to each data source's schema\/ontology. The active user  can provide feedback on some results and can request another recommendation of the specification. Collaborative filtering can then be used because the artifacts of the active refined query will have been stored in the case base  as a new case. It can then be selected as a similar case because the case's user query would be identical to the current specification of the active user query.","Referring to , an illustrative screen according to an embodiment of a graphical user interface is shown. The KS architecture and agent system may be configured to provide for a graphical user interface to allow for interaction with an active user, as well as to display results to an active user. For example, a user can enter a search query at . A user can also specify a certain number of image results to display at . GNIS results may be shown in section , and GNS results can be shown at section . The results may display information such as the location of the result by longitude and latitude. Obtaining user rating values for result data items of the active refined query can allow the active user's rating value for unseen data items to be predicted for the active refined query and neighbor refined queries which can be found from the KS architecture repository .","This embodiment of refined query-based collaborative filtering approach can allow the KS architecture to show the unseen data items immediately because the data items can be found in a neighbor's search history in the repository . The mismatch problem between user queries and refined queries can be alleviated by using a threshold for the similarity between the active refined query and neighbor refined query. For example, only the neighbor refined query having a certain high similarity value would be selected for the prediction process.","The active user's rating value for unseen data items prediction can be calculated from (3) and (4), shown below, derived from the collaborative filtering approach used in GroupLens.",{"@attributes":{"id":"p-0064","num":"0063"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":"p","mrow":{"msub":[{"mi":["rq","ad"]},{"mi":["dt","u"]}],"mo":"\u2062"}},"mo":"=","mrow":{"mover":{"msub":{"mi":"r","msub":{"mi":["rq","ad"]}},"mi":"_"},"mo":"+","mfrac":{"mtable":{"mtr":[{"mtd":{"mrow":{"munder":{"mo":"\u2211","mrow":{"mi":["i","NC"],"mo":"\u2208"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":{"mi":"r","mrow":{"msub":[{"mi":["rq","id"]},{"mi":["dt","u"]}],"mo":","}},"mo":"-","mover":{"msub":{"mi":"r","msub":{"mi":["rq","id"]}},"mi":"_"}}},{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["rq","ad"]},{"mi":["rq","id"]}],"mo":","}}}],"mo":["\u00b7","\u00b7"]}}}},{"mtd":{"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["C","a"]},{"mi":["C","i"]}],"mo":","}}}}}]},"mrow":{"munder":{"mo":"\u2211","mrow":{"mi":["i","NC"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"mrow":[{"mo":["\uf603","\uf604"],"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["rq","ad"]},{"mi":["rq","id"]}],"mo":","}}}},{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["C","a"]},{"mi":["C","i"]}],"mo":","}}}],"mo":"\u00b7"}}}}}},{"mrow":{"mo":["(",")"],"mn":"3"}}]},{"mtd":[{"mrow":{"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["rq","ad"]},{"mi":["rq","id"]}],"mo":","}}},"mo":"=","mfrac":{"mrow":[{"munder":{"mo":"\u2211","mrow":{"mi":["s","SD"],"mo":"\u2208"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":{"mi":"r","mrow":{"msub":[{"mi":["rq","ad"]},{"mi":["dt","s"]}],"mo":","}},"mo":"-","mover":{"msub":{"mi":"r","msub":{"mi":["rq","ad"]}},"mi":"_"}}},{"mo":["(",")"],"mrow":{"msub":{"mi":"r","mrow":{"msub":[{"mi":["rq","id"]},{"mi":["dt","s"]}],"mo":","}},"mo":"-","mover":{"msub":{"mi":"r","msub":{"mi":["rq","id"]}},"mi":"_"}}}],"mo":"\u00b7"}},{"msub":[{"mi":"\u03c3","msub":{"mi":["rq","ad"]}},{"mi":"\u03c3","msub":{"mi":["rq","id"]}}],"mo":"\u00b7"}]}}},{"mrow":{"mo":["(",")"],"mn":"4"}}]}]}}}},"The term pcan represent a prediction for an unseen (unrated) data item dtfor the active refined query rq. The term rqcan represent a refined query for the active user case for the domain d. The term sim(rq, rq) can represent the correlation weight for user rating patterns of the refined queries rqand rqas defined by the Pearson Correlation Coefficient shown in (4). The term sim(C, C) can represent the similarity between the active case Cand a neighbor case Cas defined in (2). The term NC can be a set of neighbor cases selected as similar to the active case. The term SD can be a set of common seen (rated) items between rqand rq. The terms rand rcan represent mathematical means for the ratings of the result data items of the queries rqand rq, respectively",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 8","FIG. 8","FIG. 7A","FIG. 8","FIG. 8"],"b":["810","810","810"],"sub":["si","a","ui","i","a","i","a","i","a ","ui ","u5"]},"Referring again to , which depicts an XML-based structure  for a case representing a user query and its artifacts, the refined query  will now be discussed in further detail. The KS architecture may be configured and adapted such that the active refined query  can be incrementally specified based not only on the data items rated by the active user, but also on the data items whose rating value is predicted from (3) and (4) above. The refined query  can be specified by content patterns of the rated data items and a new result set can be retrieved from a new data source set. More unseen data items can be found from above collaborative filtering with the new search artifacts. Thus, the refined query  can be incrementally specified by aggregating the rated and predicted data items.","The refined query  can be incrementally specified. First, the ValueWeight  for each feature  of the active refined query  can be calculated from (5) and (6), shown below. Then, the FeatureWeight  can be determined by (7) and (8), also shown below, which also uses the Pearson Correlation Coefficient. If the similarity value patterns for a criterion (feature) and the user rating patterns are similar, the feature would be an important factor (feature) for the user to determine the relevance of the data. Therefore, this approach also takes into account the negative examples which can have a negative feedback from users whereas content-based filtering systems may consider only the positive examples to refine queries in terms of weight adjustments. Furthermore, the negative correlation weight would become zero via the n(x) function because the negative correlation would not necessarily mean that the user rated a data item as a relevant one since it is dissimilar to the query in the dimension of the feature or vice versa.",{"@attributes":{"id":"p-0069","num":"0068"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":["vw","adfv"]},"mo":"=","mfrac":{"mover":{"msub":{"mi":"r","msub":{"mi":["vv","adfv"]}},"mi":"_"},"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"l","mo":"=","mn":"1"},"msub":{"mi":["m","adf"]}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mover":{"msub":{"mi":"r","msub":{"mi":["vv","adfl"]}},"mi":"_"}}}}},{"mrow":{"mo":["(",")"],"mn":"5"}}]},{"mtd":[{"mrow":{"mover":{"msub":{"mi":"r","msub":{"mi":["vv","adfl"]}},"mi":"_"},"mo":"=","mfrac":{"mrow":[{"munder":{"mo":"\u2211","mrow":{"mi":["m","MD"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"msub":{"mi":"r","mrow":{"msub":[{"mi":["rq","ad"]},{"mi":["dt","m"]}],"mo":","}},"mo":"\u00b7","mrow":{"mi":"O","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["vv","adfl"]},{"mi":["dt","m"]}],"mo":","}}}}},{"munder":{"mo":"\u2211","mrow":{"mi":["m","MD"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"mi":"O","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["vv","adfl"]},{"mi":["dt","m"]}],"mo":","}}}}]}}},{"mrow":{"mo":["(",")"],"mn":"6"}}]},{"mtd":[{"mrow":{"mrow":[{"mrow":{"msub":{"mi":["fw","adf"]},"mo":"=","mfrac":{"mrow":[{"mi":"n","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["f","adf"]},{"mi":["rq","ad"]}],"mo":","}}}}},{"munderover":{"mo":"\u2211","mrow":{"mi":"k","mo":"=","mn":"1"},"msub":{"mi":["m","ad"]}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"n","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["f","adk"]},{"mi":["rq","ad"]}],"mo":","}}}}}}]}},"mo":";"},{"mrow":[{"mi":"n","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mo":"{","mtable":{"mtr":[{"mtd":[{"mi":"x"},{"mrow":{"mrow":{"mi":["if","x"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":">","mn":"0"}}]},{"mtd":[{"mn":"0"},{"mi":"otherwise"}]}]}}],"mo":"="}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"7"}}]},{"mtd":[{"mrow":{"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["f","adk"]},{"mi":["rq","ad"]}],"mo":","}}},"mo":"=","mfrac":{"mrow":[{"munder":{"mo":"\u2211","mrow":{"mi":["m","MD"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["f","adk"]},{"mi":["dt","m"]}],"mo":","}}},"mo":"-","mover":{"mrow":{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["f","adk"]}}},"mi":"_"}}},{"mo":["(",")"],"mrow":{"msub":{"mi":"r","mrow":{"msub":[{"mi":["rq","ad"]},{"mi":["dt","m"]}],"mo":","}},"mo":"-","mover":{"msub":{"mi":"r","msub":{"mi":["rq","ad"]}},"mi":"_"}}}],"mo":"\u00b7"}},{"msub":[{"mi":"\u03c3","msub":{"mi":["f","adk"]}},{"mi":"\u03c3","msub":{"mi":["rq","ad"]}}],"mo":"\u00b7"}]}}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}]}}}},"The term vwcan represent the weight of the value vvfor a feature fof the query rq. MD can be a set of data items representing the union of the set of the seen data items and the set of predicted unseen data items. The term rcan represent an average rating value for data items in the set MD having a value vv. The term O(vv, dt) can be a binary variable which represents whether the data item dthas the value vv, and if yes, its value is 1, otherwise the value is 0. The term sim(f, rq) can represent the correlation weight between the criterion (feature) similarity and the original and predicted user ratings for the query rq. The term sim(f, dt) can represent the similarity value between the values of the query rqand the data item dtin terms of the dimension of the feature f.","Referring to , a table of a feature weight adjustment according to an embodiment using a multiple weighted-valued query is shown. The table in  depicts a feature weight adjustment using the multiple weighted-valued query generated only from the positive examples via (3) and (4) and increased user feedback information via the query-to-query collaborative filtering. The queries and data items in the embodiment shown in  have only binary values for each feature, but the equations would also work using actual values. The table  can represent the feature vectors of the query and data items. The table  can represent similarity values of the query and data items for each feature and rating values of the data items for the query. In this embodiment, the similarity value of the query and a data item for a feature can be 1 if they have the same value, otherwise it is 0. From the values depicted in table , one skilled in the art would appreciate that the feature fwould be regarded as an important criterion for which the user determines the relevance of the data items; therefore, it would be beneficial to have a higher weight on the feature for the efficiency of the system's automatic rating\/search process. This approach would be advantageous for adjusting criterion weights for the systems of using the weighted\/multi-valued query-based and heterogeneous types of values in each criterion thereby requiring different metrics for evaluating the values.","The incrementally specified query can seem to degrade the prediction ratio and efficiency of the search process because it aggregates contents of multiple data items. However, clearly it can have better recall ratio. The prediction ratio can be alleviated by using the weights so that the results can be automatically rated and sorted by a similarity measure based on the weights. The efficiency problem can be caused if the refined query has more values because the number of data sources can be increased and some data sources do not provide multi-valued queries so that the refined query can be translated to a number of data source-specific queries. To address this problem, the translated queries having higher weight values can be posed in advance to a data source with a certain degree of parallel processing and the partial results can be shown to the users.","While various embodiments have been described above, it should be understood that they have been presented by way of example, and not limitation. It will be apparent to persons skilled in the relevant art(s) that various changes in form and detail can be made therein without departing from the spirit and scope. In fact, after reading the above description, it will be apparent to one skilled in the relevant art(s) how to implement alternative embodiments. Thus, the disclosed embodiments should not be limited by any of the above described exemplary embodiments. In particular, it should be noted that, for example purposes, the above explanation has focused on a computer-implemented agent system and system architecture for efficient searching of information. Specifically, the agent system can have an ontology agent which can be utilized to access a domain model and authoritative name services to suggest query refinements. In another embodiment, a case management agent can be utilized to obtain cases from a user query case base to recommend query specifications and refinements. Content-based filtering, collaborative filtering, or a hybrid combination thereof, may be used by the KS architecture to further refine a query using ontology concepts. Where no previously-stored user queries exist, an aggregated refined query approach may also be used.","In addition, it should be understood that any figures which highlight the functionality and advantages, are presented for example purposes only. The disclosed architecture is sufficiently flexible and configurable, such that it may be utilized in ways other than that shown. For example, the actions or directional arrows listed in any flowchart may be re-ordered or only optionally used in some embodiments.","Further, the purpose of the Abstract of the Disclosure is to enable the U.S. Patent and Trademark Office and the public generally, and especially the scientists, engineers and practitioners in the art who are not familiar with patent or legal terms or phraseology, to determine quickly from a cursory inspection the nature and essence of the technical disclosure of the application. The Abstract of the Disclosure is not intended to be limiting as to the scope in any way.","In this specification, \u201ca\u201d and \u201can\u201d and similar phrases are to be interpreted as \u201cat least one\u201d and \u201cone or more.\u201d","Many of the elements (including agents) described in the disclosed embodiments in this specification and the figures may be implemented as modules. A module is defined here as an isolatable element that performs a defined function and has a defined interface to other elements. The modules described in this disclosure may be implemented in hardware, software, firmware, wetware (i.e hardware with a biological element) or a combination thereof, all of which are behaviorally equivalent. For example, modules may be implemented as a software routine written in a computer language (such as C, C++, Fortran, Java, Basic, Matlab or the like) or a modeling\/simulation program such as Simulink, Stateflow, GNU Octave, or LabVIEW MathScript. Additionally, it may be possible to implement modules using physical hardware that incorporates discrete or programmable analog, digital and\/or quantum hardware. Examples of programmable hardware include: processors; computers, microcontrollers, microprocessors, application-specific integrated circuits (ASICs); field programmable gate arrays (FPGAs); complex programmable logic devices (CPLDs); or combinations thereof or the like. Computers, processors, microcontrollers and microprocessors may be programmed using languages such as assembly, C, C++ or the like. FPGAs, ASICs and CPLDs are often programmed using hardware description languages (HDL) such as VHSIC hardware description language (VHDL) or Verilog that configure connections between internal hardware modules with lesser functionality on a programmable device. Finally, it needs to be emphasized that the above mentioned technologies are often used in combination to achieve the result of a functional module.","The disclosure of this patent document incorporates material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, for the limited purposes required by law, but otherwise reserves all copyright rights whatsoever.","Finally, it is the applicant's intent that only claims that include the express language \u201cmeans for\u201d or \u201cstep for\u201d be interpreted under 35 U.S.C. 112, paragraph 6. Claims that do not expressly include the phrase \u201cmeans for\u201d or \u201cstep for\u201d are not to be interpreted under 35 U.S.C. 112, paragraph 6."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"DETDESC":[{},{}]}
