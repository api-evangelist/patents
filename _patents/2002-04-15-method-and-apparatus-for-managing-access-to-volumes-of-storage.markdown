---
title: Method and apparatus for managing access to volumes of storage
abstract: One embodiment is directed to a method in a computer system including a host computer and at least one storage system including first and second storage volumes, the host computer including at least one application program executing thereon. The method comprises acts of intercepting and redirecting an access request from the at least one application program to the first storage volume to the second storage volume. Other embodiments are directed to a computer readable medium with instructions for performing the method, a host computer with at least one controller to intercept and redirect the access request. Other aspects are directed to methods in a computer system including a host computer, a first storage system including a first storage volume, and a second storage system including a second storage volume, wherein the second storage volume is a hardware mirror of the first storage volume. One method comprises an act of servicing a read request to the second storage volume while maintaining the second storage volume as an active hardware mirror of the first storage volume. Another method comprises an act of, in response to a failure preventing access from the host computer to the first storage volume, servicing access requests directed to the first storage volume from the second storage volume without reconfiguring the host computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07076690&OS=07076690&RS=07076690
owner: EMC Corporation
number: 07076690
owner_city: Hopkinton
owner_country: US
publication_date: 20020415
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","DESCRIPTION OF THE RELATED ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention is directed to computer systems employing multiple storage volumes, and more particularly, to methods and apparatus for managing access to storage volumes in such computer systems.","Many computer systems include one or more host computers, and one or more storage systems that store data used by the host computers. An example of such a system is shown in , and includes a host computer  and a storage system . The storage system typically includes a plurality of storage devices on which data is stored. In the exemplary system shown in , the storage system includes a plurality of disk drives \u2013, a plurality of disk controllers \u2013that respectively control access to the disk drives and , and a cache . The storage system  further includes a plurality of storage bus directors  that control communication with the host computer  over communication buses . The storage system  also includes an internal bus  over which the storage bus directors , disk controllers \u2013and the cache  communicate.","The host computer  includes a processor  and one or more host bus adapters  that each controls communication between the processor  and the storage system  via a corresponding one of the communication buses . It should be appreciated that rather than a single processor , the host computer  can include multiple processors. Each bus  can be any of a number of different types of communication links (either direct links or networked links), with the host bus adapter  and the storage bus directors  being adapted to communicate using an appropriate protocol for the communication bus  coupled therebetween. For example, each of the communication buses  can be implemented as a SCSI bus, with the directors  and adapters  each including a SCSI driver. Alternatively, communication between the host computer  and the storage system  can be performed over a Fibre Channel fabric that implements the communication bus .","The storage system  presents logical volumes of storage to the host computer . These logical volumes of storage can each correspond to one of the physical storage devices included within the storage system . However, when the storage system  is an intelligent storage system, it may include a layer of mapping between the volumes presented to the host computer  and the actual physical storage devices . Thus, there need not be a one-to-one correspondence between the volumes presented to the host computer  and the physical storage devices, as a single volume can be spread across multiple physical storage devices, or alternatively, a number of physical storage devices can be combined to store the data for a single volume.","Many conventional computer systems, such as the exemplary computer system depicted in , mirror the data stored on a source (i.e., primary) volume or physical storage device to a target (i.e., secondary) volume or physical storage device. The primary and secondary volumes or physical storage devices may be disposed on the same system , or on different storage systems  which may be disposed either at the same approximate location or at geographically remote locations. Mirroring facilities may be characterized as being primarily enabled by hardware or software. As used herein, \u201chardware mirroring\u201d refers to a mirroring arrangement implemented primarily via hardware, such that a software process performs a write operation only to the source, and the hardware automatically updates the target. This is in contrast to a software mirror, wherein the software process is responsible for writing data to both the source and the target. One illustrative example of a hardware data mirroring implementation is the remote data mirroring facility (RDF) discussed below in connection with .","In the system shown in , a host CPU  is coupled to a source storage system  that includes a source storage device  and source storage controller . The source storage device  may be a large disk drive providing main storage for the host CPU , or the storage system  may be arranged like the storage system  of , so that the storage device  may be a plurality of smaller disk drives. An example of a storage system including a plurality of disk drives is the SYMMETRIX line of disk arrays available from EMC Corporation, Hopkinton, Mass. The data stored on source storage device  may be crucial to the operation of host CPU . Therefore, a contingency is desirable in the event that a problem is experienced with source storage device , to ensure that data stored thereon is not lost, and to minimize the risk of CPU  being inoperable due to problems with the storage device.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["26","28","28","27","29","23","29","23","29","28","31"]},"Although the target storage system  can serve as the main storage system for the host CPU , the volumes presented to the host CPU  as storage resources enabling the host CPU  to write data to the target storage system  are different than the volumes that are made available to the source storage system  to provide the mirroring capability. In this manner, it is ensured that the volumes that store the mirrored data on the target storage system are not overwritten with different data from the host CPU .","An example of a system configuration that can be executed on a computer system such as that shown in  is a shared database configuration, such as the Oracle parallel server configuration shown in . In this configuration, instances of the Oracle database software are running on both the host computers  and , which can be considered to be servers. In this respect, a first instance of the Oracle database software is executing on host computer , and a second instance is executing on host computer . In the parallel server configuration, Oracle enables the instances of the database software and to share a storage volume, such as the storage volume  stored on the storage device . Some type of networking configuration (e.g., switch ) enables the servers  and  to both access the volume  provided on the storage system . The two instances and of the Oracle database software communicate (e.g., via IP messaging as indicated by the dotted line at ) to ensure that write requests are issued by only one host at a time to the shared volume .","Although not necessary to the parallel server configuration discussed above, the shared volume  may be mirrored, using a remote data facility as discussed above, to a volume  on a different storage system, such as the storage system  shown in .","One illustrative embodiment of the invention is directed to a method in a computer system including a host computer and at least one storage system including a first storage volume and a second storage volume, the host computer including at least one application program executing thereon. The method comprises acts of: (A) intercepting an access request from the at least one application program to the first storage volume; and (B) redirecting the access request to the second storage volume, so that the access request can be serviced by the second storage volume.","Another illustrative embodiment is directed to a computer readable medium encoded with instructions for execution on a computer system including a host computer and at least one storage system including a first storage volume and a second storage volume, the host computer including at least one application program executing thereon. The instructions, when executed, perform a method comprising acts of: (A) intercepting an access request from the at least one application program to the first storage volume; and (B) redirecting the access request to the second storage volume, so that the access request can be serviced by the second storage volume.","A further illustrative embodiment is directed to a host computer for use in a computer system including the host computer and at least one storage system including a first storage volume and a second storage volume. The host computer comprises at least one processor to execute at least one application program; and at least one controller that intercepts an access request from the at least one application program to the first storage volume and redirects the access request to the second storage volume, so that the access request can be serviced by the second storage volume.","Another illustrative embodiment is directed to a method in a computer system including a host computer, a first storage system including a first storage volume, and a second storage system including a second storage volume, the host computer including at least one application program executing thereon, the first and second storage systems being coupled together, the second storage volume being an active hardware mirror of the first storage volume. The method comprises an act of servicing a read request, from the at least one application program, to the second storage volume while maintaining the second storage volume as an active hardware mirror of the first storage volume.","A further illustrative embodiment is directed to a method in a computer system including a host computer, a first storage system including a first storage volume, and a second storage system including a second storage volume, the host computer including at least one application program executing thereon, the first and second storage systems being coupled together, the second storage volume being an active hardware mirror of the first storage volume. The method comprises an act of, in response to a failure preventing access from the host computer to the first storage volume, servicing access requests directed to the first storage volume from the second storage volume without reconfiguring the host computer.","In some database implementations employing a parallel server configuration, users may utilize one host (e.g., server  in ) as a main server to perform the majority of processing, and utilize the other host (e.g., server ) as a secondary server to perform tasks such as report generation, which do not perform writes but are heavily read-intensive. When such read-intensive tasks are performed by the secondary server (e.g., server ), contention may result for access to the shared volume . In view of the fact that a copy of the shared volume  is provided in the mirrored volume , it has been appreciated by applicants that performance improvements could be obtained by having the secondary server  perform read-intensive tasks (e.g., report generation) from the target volume . However, the Oracle database software does not enable a storage volume to be presented to it in a read-only fashion, and only accepts the presentation of volumes that are available for both read and write access. As discussed above, since the target volume  is presented to the storage system  to allow write access to perform the remote mirroring, the volume  cannot be presented to the instance of the Oracle database software in a manner that allows the instance of the Oracle database software to write to the volume , or there would be a risk that the mirrored data could be overwritten. Therefore, in a parallel server configuration such as that shown in  that employs remote mirroring, the mirrored volume  cannot be made available to the Oracle database software in a manner that provides the Oracle database with read access to the volume , because doing so would require the granting of write access, which is prohibited.","In accordance with one embodiment of the present invention, a method and apparatus are provided to allow the instance of the Oracle database software on the secondary server to read the mirrored volume , despite the fact that the instance does not have access privileges to read the volume.","The above-described configuration is merely one example of an application in which the aspects of the present invention described below can be employed. In this respect, the aspects of the present invention are not limited to use with an Oracle parallel server configuration (e.g., the present invention might be implemented on a single host), and can be used with other types of shared databases, or with any of numerous other types of application programs. In this respect, the embodiment of the present invention described below that enables an application to read a storage volume despite the application program lacking access privileges to read the volume can be employed with any type of application program.","The aspect of the present invention that enables an application program to read a volume, despite lacking access privileges to read that volume, is not limited to any particular implementation technique. However, in accordance with one illustrative embodiment of the present invention, access to a mirrored volume  is provided by having the application program (e.g., the instance of the Oracle database software) issue an access request to the primary volume (e.g., volume ) for which it enjoys read access privileges. Using techniques discussed below, that access request is intercepted and redirected to volume  in a manner that is transparent to the application (e.g., the instance of the Oracle database software). Thus, one embodiment of the present invention is directed to intercepting a request intended for a volume on one storage system and redirecting it to different volume on another storage system. Although useful in connection with configurations wherein the requesting application does not have access privileges to the volume to which the request is redirected, this aspect of the present invention is not so limited.","As should also be appreciated from the foregoing, yet another embodiment of the present invention is directed to intercepting a request directed to one volume (e.g., volume ) and redirecting the request to a mirror of that volume (e.g., volume ). Although the mirror  is provided on a different storage system in the illustrative configuration shown in , this aspect of the present invention is not so limited, and can be used in other configurations to redirect a request from a first volume to a mirror of that volume stored on the same storage system. In addition, although the mirroring relationship in the illustrative configuration shown in  is a hardware mirror, the aspect of the present invention directed to intercepting a request directed to one volume and redirecting it to a mirror of that volume is not limited to redirecting the request to a hardware mirror.","In accordance with one embodiment of the present invention, reads directed to the target volume  can be executed while the remote data facility mirroring link (over communication path ) remains active. Although conventional remote mirror data facilities enable the target volume to be read, many conventional configurations require that the system be reconfigured\u2014the remote mirroring relationship must be terminated so that it is no longer active, and then the target volume is reconfigured to make it accessible (e.g., by granting both read and write access privileges) to a host computer (e.g., host computer ), most typically for disaster recovery. As discussed below, in accordance with one illustrative embodiment of the present invention, a target volume can be read while maintaining the remote mirror link in an active state, and without reconfiguring the target volume. One way in which this aspect of the present invention can be employed is to not redirect all access requests to a particular volume (e.g., volume ) from server , but rather, to only redirect read requests to volume , while allowing write requests to continue to pass to the volume . In this manner, writes are always made to the shared volume , and the hardware mirror of the computer system ensures that the volume  is maintained up to date, but the load on the storage system  is reduced by redirecting read requests to the volume  on the storage system . It should be appreciated that the aspect of the present invention wherein a target volume can be read while maintaining the remote mirror link in an active state (and without reconfiguring the target volume) is useful for numerous configurations, and is not limited to use in connection with a target volume that mirrors a shared volume in a shared database system.","In accordance with one illustrative embodiment of the present invention, the aspects of the present invention that relate to intercepting and redirecting an access request from one volume to another is performed by a filter driver in the input\/output (I\/O) stack in the kernel layer on the host. As will be appreciated by those of ordinary skill in the art, by the time an access request has reached the filter driver, it will typically have passed security and privilege access checking, such that it will be established that the request is authorized for the volume to which it is directed. In accordance with one embodiment of the present invention, a read request is then directed to a mirror of the volume to which the request is directed, such that there are no breach of security issues because the request has already been approved to access the requested data, but from a different volume.","In the embodiment of the present invention described below, the intercepting and redirecting functions performed in a filter driver in the I\/O stack correspond to features of the Power Path utility offered by EMC Corporation, such that one embodiment of the present invention is directed to an implementation using Power Path. However, it should be appreciated that the present invention is not limited in this respect, and can be implemented in any I\/O stack or similarly enabled mechanism employed in any system configuration, or may be implemented in various other ways. It should be appreciated that the implementation of the aspects of the present invention described herein can be modified to be compatible with the particular implementation of the I\/O stack in which it is implemented.","One illustrative implementation of aspects of the present invention in a filter driver in an I\/O stack is shown in . As illustrated therein, the filter driver  can conceptually be considered to be placed between the operating system  and the collection of host bus adapters . (see e.g., the host bus adapters  in ). As discussed above, the storage system (e.g., storage system  in ) presents volumes of storage to the host computer for assignment to various resources therein, such as to provide storage space for a file system, an LVM or database. Volumes are presented via signals arriving at the collection of host bus adapters  on the host. These signals are processed by (i.e., can be thought of as passing up through) filter driver , which creates a volume representation \u2014e.g., a data structure representing the volume and attributed functionality. In accordance with one illustrative embodiment of the present invention, functionality may be attributed to the volume representation(s) using methods described below. This processing of a volume from host bus adapters , through filter driver , to operating system  is typically performed at initialization, or boot, of the host or storage system.","In the embodiment shown in  the filter driver  may be thought of conceptually as taking a \u201cC clamp\u201d form, with a top horizontal arm  of the C clamp including platform-dependent code comprising an interface to the operating system  (which may be any operating system, including such commercially prevalent operating systems as Sun Solaris, Linux, and Windows NT), a bottom horizontal arm  of the C clamp including platform-dependent code comprising an interface to the host bus adapters  (which may be any host bus adapter), and a vertical connector  between the arms comprising a series of common Application Programming Interfaces (APIs). Between the top and bottom arms ,  of the clamp sit a stack of extensions , which can be written in platform-independent software code (e.g., C, Java or any other language). This C clamp configuration is advantageous, in that the extensions that implement various functionality can be written in a platform-independent manner, as the top  and bottom  arms of the C clamp translate all of the platform-dependent communications into a generic manner, thereby facilitating attribution of functions by the extensions on a number of computing platforms.","As discussed above, at initialization, volumes presented by the storage system can be thought of as being received at the bottom arm  of the C clamp, and flowing upward through the stack of extensions  to operating system . Depending on the various functional aspects associated with a volume (e.g., whether the volume is a source or target mirrored volume), extensions that relate to the relevant functions will attach data structures to the volume so that when access requests are directed in the future to that volume, the filter driver  can implement the associated functions, examples of which are described below. Alternatively, if an extension relates to the performance of functional aspects that are not associated with a particular volume being passed up through the filter driver, the volume will be essentially ignored by that extension\u2014i.e., the extension will receive it from the extension or interface below and will not create or add anything to it, and simply pass it up to the extension above it.","As will be described below, in accordance with one embodiment of the present invention, the intercepting and redirecting functions of some embodiments of the present invention can be implemented using an extension provided in the extension stack . This is entirely independent from inclusion of any other particular functions performed by or with other extensions, as the present invention can be implemented in a filter driver including extensions which perform numerous functions. For the sake of facilitating and understanding the manner in which extensions work, three exemplary extensions are described below. However, it should be appreciated that the present invention is not limited to use in a filter driver that includes extensions performing these functions, and can be used in accordance with extensions performing other functions.","Extensions ,  and  can indicate that they should process an access request directed to a particular volume in any of numerous ways. In accordance with one illustrative embodiment of the present invention, each time a new volume is presented by the storage system to host bus adapters , and passed up through the extension stack , a volume representation  is created for that volume by the filter driver. The volume representation can be implemented in any of numerous ways, and the present invention is not limited to any particular implementation. In one example, the volume representation may comprise a data structure including an identifier that identifies the volume (e.g., using an identifier that is consistent with the manner in which the operating system  references the volume). As the volume representation  passes up through the extension stack, extensions may indicate that they should act on an access request directed to that volume by attaching a data structure (indicating the extension that has attached it) to the volume representation. Conversely, extensions may indicate that they should not act on an access request directed to a particular volume by not attaching a data structure to the volume representation, and simply passing the volume representation up to the next extension in the stack. The attachment of a data structure can be performed in any of numerous ways, such as by modifying the volume representation  to include a pointer to the attached data structure. As discussed below, the attached data structure may include instructions on processing an access request directed to the particular volume when the request is passed down through extension stack .","In accordance with the embodiment of the invention described above that employs a volume representation, when an access request  is passed from the operating system to the filter driver , the filter driver can be thought of as conceptually directing the request to the volume representation, and passing the access request together with the volume representation  down through the extension stack . As the volume representation  and request  are passed through each extension, the information in the volume representation (e.g., data structures which have been attached by extensions) may be examined by each extension to determine whether it should process the request. If not, the extension may simply dispatch the request and volume representation to the next extension down the stack. If, however, the extension determines that it should process the request based on an indication in the volume representation (e.g., a data structure attached by that extension) the extension may act on the request, and may also examine the attached data structure for instructions on processing the request, including instructions which the extension may provide to succeeding extensions as the request is passed down the stack.","In the embodiment shown in , the stack of extensions  includes three extensions: the Consistency Group (CG) , Multi-Pathing (MP)  and Redirect (RI)  extensions. The Consistency Group extension  specifically deals with volumes that are mirrored in a remote data facility configuration such as that shown in . As shown in , such configurations can include multiple links over which mirroring information is transmitted between the source and target storage systems. The notion of a consistency group is that there are certain volumes of storage that are largely interrelated, such that it is desirable that they maintain consistency with respect to the timeframe at which they represent an accurate mirror of source volumes. Thus, one purpose of a consistency group may be to ensure that if one of the links experiences a problem so that a particular volume in the source storage system can no longer be mirrored to the target storage system after the link goes down, the mirroring relationship for all other volumes in the same consistency group should be terminated at that same time, even if the mirroring relationship could continue because those volumes employ a different link that has not failed. Thus, in this embodiment, since the function performed by the consistency group extension  relates only to volumes that are part of a remote data facility mirroring relationship, the consistency group extension  will indicate (e.g., by attaching a data structure) that it should process requests directed only to volume representations that are part of a remote data mirroring relationship. For requests relating to all other volumes, the consistency group extension  will take no other action.","Multi-path extension  relates to various functions that can be performed in a multi-path system such as that shown in . For example, in such a system, multiple instances of a volume can be presented to the filter driver , with an instance corresponding to a presentation of the volume over each of the multiple paths. Various functions can be performed with these multiple instances, including for example, the selection of a particular path based on a selection criteria that maximizes system performance (e.g., load balancing). Thus, if there are multiple paths between the host computer and the storage system, the multi-path extension  may attach a data structure to every volume that passes through the filter driver , and if there is only a single path between the host and the storage system, the multi-path extension  may simply pass all the volumes up the extension stack  without attaching a data structure to them.","The redirect extension  is one wherein various functions in accordance with the embodiments of the present invention described herein may be implemented. In accordance with one illustrative embodiment, a request directed to a particular volume (e.g., volume  in ) is redirected to a mirror of that volume (e.g., volume  in ). Again, the volume to which the request is redirected can be a mirrored volume on a different storage system, or can be a mirror (e.g., a hardware mirror) on the same storage system. Thus, in accordance with one illustrative embodiment of the present invention, the redirect extension only indicates that it should act on (e.g., by attaching a data structure) requests directed to volume representations from which data is mirrored (i.e., source mirrored volumes) in the considered configuration. However, the present invention is not limited in this respect, as the redirect extension could alternatively indicate (e.g., by attaching a data structure) that it should act on requests directed to every volume representation.","When an application executing on the host computer attempts to access data stored on the storage system, it most typically issues a request to some mapping entity in the host computer (e.g., a file system, an LVM, or a database), or alternatively may in some circumstances issue a direct request to a \u201craw\u201d volume. Mapping layers in a host computer typically translate the request into one or more access requests directed to particular volumes. Thus, whether coming directly from an application program for a direct access to a \u201craw\u201d volume, or from a mapping layer, access requests ultimately are typically passed, via operating system , to the I\/O stack and the filter driver  included therein.","Upon arrival at the filter driver , an access request directed to a volume can be thought of as being sent, with the volume representation (with attached data structures), down through extension stack . If an extension has indicated (e.g., by attaching a data structure) that it should act on a request to the volume being accessed, it will then perform whatever functions are defined within the extension, and additionally, may process additional instructions stored in the attached data structure. Alternatively, if an extension determines that it has not attached a data structure to the considered volume representation, it will simply dispatch the request and volume representation down the extension stack  without taking any action.","The manner in which the redirect extension attaches itself to a volume can be implemented in any of numerous ways, as this aspect of the present invention is not limited to any particular implementation technique. As discussed above, in one embodiment of the present invention, this attachment is performed through the creation of a data structure associated with a volume. The data structure can take any of numerous forms, and is not limited to any particular structure. One illustrative structure is shown in .","In the illustrative embodiment of , the data structure  attached by the redirect extension  to a volume representation includes at least two data elements: an identifier  of the volume and an indication  of whether access requests to the identified volume should be redirected. It should be appreciated that the identifier  and the indication  can be implemented in any of numerous ways, as embodiments of the present invention that employ this technique are not limited to any particular implementation. In accordance with one embodiment of the present invention shown in , the identifier  may comprise any form of identifier, including an identifier that is in the same form as that employed by the operating system  () to reference a volume, and the indication  may comprise a string containing a \u201cyes\u201d or \u201cno\u201d value.","In the state shown in , the data structure  attached to the volume representation indicates that access requests directed to that volume are not to be redirected. Thus, when the request and volume representation are processed by the redirect extension  (), the extension simply passes the volume and its associated device representation down the extension stack .","In accordance with one illustrative embodiment of the present invention, a facility is provided that enables the data structure attached to a volume representation to be modified to request redirection. This facility can be implemented in any of numerous ways, as the present invention is not limited to any particular implementation technique. In accordance with one illustrative embodiment of the present invention, the redirect extension  can be made responsive to a modified attached data structure to implement redirection of the request. The attached data structure may be modified via the submission of a command line utility, or in other ways.","For example,  illustrates the attached data structure  of , wherein the device identifier  and the indication  have been modified. As shown in , indication  now indicates that redirection is requested for the volume representation to which the data structure  is attached. In addition, the device identifier  has been modified to identify a different volume to which the request is to be redirected (e.g., volume  in the example discussed above in connection with ). Thus, after the attached data structure  has been updated, each subsequent request to the considered volume will result in redirect extension  identifying, from the attached data structure , that the request should be redirected to the volume identified in the identification field .","It should be appreciated that using the implementation of the filter driver  described above in connection with , a user of the instance of the Oracle database on host computer  can selectively read from the volume , despite the fact that the instance of the Oracle database does not have access privileges to the volume . In this respect, the filter driver  () can be implemented on the host computer . During normal operation, the attached data structure for the volume  can be placed in the condition shown in , indicating that no redirection is intended. In that manner, all accesses from the instance of the Oracle database will be directed to the volume . However, when it is desired to perform reads from the volume  (e.g., to do report generation), a user can make use of a command line interface to modify the data structure  that is attached to the volume representation corresponding to volume , to the form shown in , to indicate that requests directed to that volume should be redirected to the volume . In this manner, the instance of the Oracle database can access the volume  in real time, without deactivating the remote mirroring relationship of the volume  to the volume . In this respect, it is preferable that the remote mirroring relationship between the volumes  and  be synchronous, so that it is ensured that when the instance of the Oracle database software performs a read of volume , it is reading the most up-to-date copy of data stored on volume .","The manner in which the redirect extension  redirects an access request directed to a volume when this is indicated in the data structure  attached to the volume representation can be performed in any of numerous ways. In accordance with one illustrative embodiment of the present invention, the redirection is performed when the redirect extension  dispatches the request to the succeeding extension, as the request is dispatched with the volume representation for the new volume to which the request has been redirected. The request and that new volume representation are processed by succeeding extensions in sequence, as defined by extension stack . Thus, each of the extensions below the redirect extension  processes the access request with the new volume representation that corresponds to the volume to which the request is redirected, and the bottom arm  of the filter driver  examines this new volume representation in formatting the request to the host bus adapters , such that the access request is forwarded to the volume identified in the identification field  (\u201cCXTYB\u201d as depicted in identifier  in ).","The volume representation for the new volume to which the request is redirected can be retrieved in any of numerous ways, as the present invention is not limited to any particular implementation. In accordance with one illustrative embodiment of the invention, when the volume representations for the volumes are passed up through the extension stack  at boot time, a table is created that includes an entry for each volume with a pointer in the entry pointing to the data structure that defines the device representation for that volume. To redirect an access request to a new volume, the redirect extension  can access the table and substitute the pointer for the device representation of the new volume for the pointer that was included in the original request.","As should be appreciated from the foregoing, in the embodiment of the present invention wherein the interception and redirection of an access request is performed within the I\/O stack of a host computer, this capability need only be provided in a host computer in which it is desirable to perform redirection. For example, in the parallel server configuration of , if the only redirection desired is to enable the instance of the Oracle database to read the volume , the above-described aspects of the present invention can be implemented in the I\/O stack of the host computer , but need not be provided in the I\/O stack of the host computer . Of course, the present invention is not limited in this respect, as the aspects of the present invention described above can alternatively be provided in the I\/O stack of two or more host computers in a computer system configuration.","It should be appreciated that the interception and redirection aspects of the present invention are distinct from other types of conventional volume management techniques, for example those employed by LVMs. In this respect, some LVMs will manage access to a plurality of logical volumes that store multiple copies of data. However, this is performed in a significantly different way. In particular, a typical LVM that utilizes multiple copies of data and multiple logical volumes will pool those logical volumes together and identify them with a common identifier (e.g., a pseudoname) which it presents to application programs. Thus, application programs will attempt to access the logical volume identified by the pseudoname, and the LVM will then process that access request by forwarding the request to one of the logical volumes that are included in the pool identified by the pseudoname. This configuration does not involve the interception of an access request directed to one logical volume and a redirection to another, as the access request to the pseudoname is not a request to an actual logical volume, and cannot be considered to be redirected to a different logical volume, but rather is simply forwarded to one of a pool of logical volumes that are identified by the pseudoname.","It should be appreciated that the above-described implementation of the interception and redirection aspects of the present invention is provided merely for illustrative purposes, as numerous other implementations are possible. As mentioned above, the above-described implementation is one that is compatible with EMC's Power Path product, such that the explanation of the device representation and attached data structures has been provided to demonstrate that compatibility. However, it should be appreciated that the aspects of the present invention can be implemented in any of numerous other ways, including using data structures of entirely different types. In addition, aspects of the present invention can also alternatively be implemented in hardware.","As discussed above, although the particular configuration of  in which the embodiments of the present invention have been employed relates to a remote mirroring relationship, it should be appreciated that aspects of the present invention are not so limited, and can alternatively be employed to redirect an access request directed to one volume to a local mirror of that volume which may reside on the same storage system.","Furthermore, although the embodiment described above relates to the redirection of read requests, the aspects of the present invention described herein are not so limited, as other configurations may make it desirable to redirect access requests of other types (e.g., write requests).","In accordance with one embodiment of the present invention, the interception and redirection of an access request is done in a manner that is transparent to the application program that issued the request, such that the application program that issued the request is unaware that is has been serviced by a different volume. In fact, in some embodiments, the application program that issues the access request may not even be aware that the volume to which the access request has been redirected even exists. Although advantageous, it should be appreciated that the transparent nature of the interception and redirection is not a requirement for all embodiments of the present invention, as in alternate embodiments some facility can optionally be provided to make the requesting application aware that a request has been intercepted and redirected.","The illustrative system configuration of  employs two host computers  and . However, it should be appreciated that the embodiments of the present invention discussed above can be employed in other configurations, including ones with more host computers or a single host computer. Similarly, although some of the embodiments discussed above have been described in connection with a computer system including a pair of storage systems, it should be appreciated that aspects of the present invention can be implemented in connection with computer systems including a single storage system, for example where an access request can be redirected from one volume to another on the same storage system.","Furthermore, although in the illustrative example provided above the aspects of the present invention are employed in a parallel server database configuration to allow for read access to a secondary volume, it should be appreciated that the aspects of the present invention can be employed in any of numerous ways, including to effectively implement load balancing techniques between multiple copies of the data in a volume to achieve performance improvements.","In the description above, redirection has been described as being based upon all access requests, or on a particular type of access request, such as a read request. However, it should be appreciated that the present invention is not limited in this respect, and that redirection can be based upon any type of policy or rule that is desirable. For example, it may be desirable to redirect only read requests over a particular size. That specific example may be useful because large reads may be particularly important to redirect to avoid overloading the main storage system. However, it should be appreciated that this is provided only as one example of a policy or rule that can be considered in determining whether to redirect an access request, and that numerous other rules or policies can be employed.","In another embodiment, the redirection aspects of the present invention can be employed to implement fail-over in a remote data facility. For example, referring to the computer system configuration of , in the event of a failure preventing access from the host computer  to the volume  in the source storage system , the I\/O stack in the host computer  can be instructed to automatically redirect both read and write requests to the mirrored volume . In this manner, fail-over can be automatically achieved without reconfiguration of the computer system. This aspect of the present invention is not limited to remote data facility systems having the configuration of , and can be employed with any remote data facility (e.g., including those with only a single host computer).","The above-described embodiments of the present invention can be implemented in any of numerous ways. For example, the above-discussed functionality for intercepting and redirecting an access request can be implemented using hardware, software or a combination thereof. When implemented in software, the software code can be executed on any suitable processor. It should further be appreciated that any single component or collection of multiple components of the computer system that perform the functions described above can be generically considered as one or more controllers that control the above-discussed functions. The one or more controllers can be implemented in numerous ways, such as with dedicated hardware, or using a processor that is programmed using microcode or software to perform the functions recited above. In this respect, it should be appreciated that one implementation of the embodiments of the present invention comprises at least one computer-readable medium (e.g., a computer memory, a floppy disk, a compact disk, a tape, etc.) encoded with a computer program (i.e., a plurality of instructions), which, when executed on a processor, performs the above-discussed functions of the embodiments of the present invention. The computer-readable medium can be transportable such that the program stored thereon can be loaded onto any computer system resource to implement the aspects of the present invention discussed herein. In addition, it should be appreciated that the reference to a computer program which, when executed, performs the above-discussed functions, is not limited to an application program running on the host computer. Rather, the term computer program is used herein in a generic sense to reference any type of computer code (e.g., software or microcode) that can be employed to program a processor to implement the above-discussed aspects of the present invention.","Having described several embodiments of the invention in detail, various modifications and improvements will readily occur to those skilled in the art. Such modifications and improvements are intended to be within the spirit and scope of the invention. Accordingly, the foregoing description is by way of example only, and is not intended as limiting. The invention is limited only as defined by the following claims and equivalents thereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5","b":"4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 6","FIG. 5"]}]},"DETDESC":[{},{}]}
