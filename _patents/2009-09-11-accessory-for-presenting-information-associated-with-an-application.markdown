---
title: Accessory for presenting information associated with an application
abstract: A system that incorporates teachings of the present disclosure may include, for example, an accessory having a plurality of tactile-sensitive buttons, a plurality of light sources, wherein each light source emits a controllable spectrum of light through a corresponding one of the plurality of tactile-sensitive buttons, and a controller coupled to the plurality of tactile-sensitive buttons, and the plurality of light sources. The controller can be operable to detect tactile contact of each of the plurality of tactile-sensitive buttons, receive status information associated with a video game, and adjust the spectrum of light emitted by at least a portion of the plurality of light sources according to the status information to indicate one or more aspects of the video game. Additional embodiments are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09387395&OS=09387395&RS=09387395
owner: STEELSERIES ApS
number: 09387395
owner_city: Frederiksberg
owner_country: DE
publication_date: 20090911
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to accessory devices, and more specifically to an accessory for presenting information associated with an application.","It is common today for gamers to utilize more than one gaming accessory. This is especially true of gamers who play Massively Multiplayer On-line (MMO) games in a team or individual configuration. Gamers can have at their disposal accessories such as a keyboard, a general purpose gaming pad, a mouse, a gaming console controller, a headset with a built-in microphone to communicate with other players, a joystick, a computer display, or other common gaming accessories.","A gamer can frequently use a combination of these accessories in one game (e.g., headset, a keyboard, and mouse). Efficient management and utilization of these accessories can frequently impact a gamer's ability to compete.","Accessory management can have utility in other disciplines which may not relate to gaming applications. Efficient use of accessories in these other disciplines can be important to users.","One embodiment of the present disclosure entails an accessory having a plurality of tactile-sensitive buttons, a plurality of light sources, wherein each light source emits a controllable spectrum of light through a corresponding one of the plurality of tactile-sensitive buttons, and a controller coupled to the plurality of tactile-sensitive buttons, and the plurality of light sources. The controller can be operable to detect tactile contact of each of the plurality of tactile-sensitive buttons, receive status information associated with a video game, and adjust the spectrum of light emitted by at least a portion of the plurality of light sources according to the status information to indicate one or more aspects of the video game.","One embodiment of the present disclosure entails an accessory having a plurality of tactile-sensitive controls, a user interface for producing at least one of a visual and audible presentation, a controller coupled to the plurality of tactile-sensitive buttons, and the user interface. The controller can be operable to detect tactile contact of each of the plurality of tactile-sensitive controls, receive status information associated with a video game, and adjust the user interface according to the status information to reflect one or more tactical aspects of the video game.","One embodiment of the present disclosure entails a computer-readable storage medium having computer instructions to map one or more conditions of a video game on a user interface of an accessory, wherein the accessory controls one or more functional aspects of the video game.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 1A-C","b":["2","3"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIGS. 4-6","FIGS. 1-3"],"b":["400","600","400","402","404"]},"In the present context, an accessory can represent any type of device which can be communicatively coupled to the computing device and which can control aspects of the OS and\/or a software application operating in the computing device. An accessory can represent for example a keyboard, a gaming pad, a mouse, a gaming console controller, a joystick, a microphone, or a headset with a microphone\u2014just to mention a few. The keyboard and gaming pad represent accessories of a similar category since their operational parameters are alike.","A mouse, on the other hand, represents an accessory having disparate operational parameters from the keyboard or gaming pad. For instance, the operational parameters of a keyboard generally consist of alphanumeric keys, control keys (e.g., Shift, Alt, Ctrl), and function keys while the operational parameters of a mouse consist of navigation data generated by a tracking device such as a laser sensor, buttons to invoke GUI selections, and settings thereof (e.g., counts or dots per inch, acceleration, scroll speed, jitter control, line straightening control, and so on). Such distinctions can be used to identify disparate categories of accessories. The joysticks, game controllers or any other input devices represent additional categories of accessories supported by the AMS.","In step , the AMS application presents a GUI  such as depicted in  with operationally distinct accessories such as the keyboard  and mouse . The GUI  presents the accessories - in a scrollable section . One or more accessories can be selected by a user with a common mouse pointer. In this illustration, the keyboard  and mouse  were selected with a mouse pointer for customization. Upon selecting the keyboard  and mouse  in section , the AMS application presents the keyboard  and mouse  in split windows , , respectively, to help the user during the customization process.","In step , the AMS application can be programmed to detect a user-selection of a particular software application such as a game. This step can be the result of the user entering in a Quick Search field  the name of a gaming application (e.g., World of Warcraft\u2122). Upon identifying a gaming application, the AMS application can retrieve in step  from a remote or local database gaming application actions which can be presented in a scrollable section  of the GUI represented as \u201cActions\u201d . The actions can be tactical actions , communication actions , menu actions , and movement actions , or any other types of actions, which can be used to invoke and manage features of the gaming application.","The actions presented descriptively in section  of the GUI can represent a sequence of accessory input functions which a user can stimulate by button depressions, navigation or speech. For example, depressing the left button on the mouse  can represent the tactical action \u201cReload\u201d, while the simultaneous keyboard depressions \u201cCtrl A\u201d can represent the tactical action \u201cMelee Attack\u201d. For ease of use, the \u201cActions\u201d  section of the GUI is presented descriptively rather than by a description of the input function(s) of a particular accessory.","Any one of the Actions  can be associated with one or more input functions of the accessories by way of a simple drag and drop action. For instance, a user can select a \u201cMelee Attack\u201d by placing a mouse pointer  over an iconic symbol associated with this action. Upon doing so, the symbol can be highlighted to indicate to the user that the icon is selectable. At this point, the user can select the icon by holding the left mouse button and drag the symbol to any of the input functions (e.g., buttons) of the keyboard  or mouse  to make an association with an input function of one of these accessories.","For example, the user can drag the Melee Attack symbol to the right mouse button thereby causing an association between the selection of the right mouse button and the gaming action of a Melee Attack. When the right button of the mouse  is selected during normal operation, the AMS application can detect the selection as a \u201ctrigger\u201d to generate the key sequence \u201cCtrl A\u201d which is understood by the gaming application as request for a Melee Attack. The gaming application receives from the AMS application by way of an operating system the \u201cCtrl A\u201d sequence as if it had been generated by a Qwerty keyboard.","With this in mind, attention is directed to step  where the AMS application can respond to a user selection of a profile. A profile can be a device profile or master profile invoked by selecting GUI button  or , each of which can identify the association of actions with input functions of one or more accessories. If a profile selection is detected in step , the AMS application can retrieve macro(s) and\/or prior associations of actions with the accessories as defined by the profile. The actions and\/or macros defined in the profile can also be presented in step  by the AMS application in the actions column  of the GUI  to modify or create new associations.","In step , the AMS application can also respond to a user selection to create a macro. A macro in the present context can represent a subset of actions that can be presented in the Actions column . Any command which can be recorded by the AMS application can be used to define a macro. A command can represent a sequence of input functions of an accessory, identification of a software application to be initiated by an operating system (OS), or any other recordable stimulus to initiate, control or manipulate software applications. For instance, a macro can represent a user entering the identity of a software application (e.g., instant messaging tool) to be initiated by an OS. A macro can also represent recordable speech delivered by a microphone singly or in combination with a headset for detection by another software application through speech recognition or for delivery of the recorded speech to other parties. In yet another embodiment a macro can represent recordable navigation of an accessory such as a mouse or joystick, recordable selections of buttons on a keyboard, a mouse, or a mouse pad, and so on. Macros can also be combinations of the above illustrations. Macros can be created from the GUI  by selecting a \u201cRecord Macro\u201d button . The macro can be given a name and category in user-defined fields  and .","Upon selecting the Record Macro button , a macro can be generated by selection of input functions on an accessory (e.g., Ctrl A, speech, etc.) and\/or by manual entry in field  (e.g., typing the name and location of a software application to be initiated by an OS). Once the macro is created, it can be tested by selecting button  which can repeat the sequence specified in field . The clone button  can be selected to replicate the macro sequence if desired. Fields  can also present timing characteristics of the stimulation sequence in the macro with the ability to customize such timing. Once the macro has been fully defined, selection of button  records the macro in step . The recording step can be combined with a step for adding the macro to the associable items Actions column , thereby providing the user the means to associate the macro with input functions of the accessories.","In step , the AMS application can respond to drag and drop associations between actions and input functions of the keyboard  and the mouse . If an association is detected, the AMS application can proceed to step  where it can determine if a profile has been identified in step  to record the association(s) detected. If a profile has been identified, the associations are recorded in said profile in step . If a profile has not been identified in step , the AMS application can create a profile in step  for recording the detected associations. In the same step, the user can name the newly created profile as desired. The newly created profile can also be associated with one or more software applications in step  for future reference.","Once the associations have been recorded in the profile, the AMS application can proceed to step  to determine if the user desires to apply a color mapping scheme to either of the accessories  or  identified in . Step  can be implemented for accessories having a plurality of light sources (such as variable light emitting diodes or other common light sources) capable of emitting an adjustable spectrum of light controllable by a controller such as a microprocessor, microcontroller or state machine.  provide illustrative embodiments of GUIs for applying color mapping schemes to portions of the accessories that can emit light. In the illustration of , it is assumed that the function keys and the number keypad of keyboard  have controllable light sources. In the case of the mouse , it is also assumed in  that the mouse has controllable light sources.","To invoke step , the AMS application may be aware of the light emitting features of each accessory and present in step  a menu of selectable groupings of light-emitting sources, or in GUI windows  and  such as shown in  groupings of light-emitting sources for each accessory which the user can associate to one or more aspects of a gaming application such as a video game. In the illustration of , for example, the user can associate color scale  with a particular aspect of a video game such as ammunition used by a player. Scale  can depict a depletion of ammunition with the emission of red light, and a restoration of ammunition with the emission of green light. Emission of red lights by all function keys represents a depletion of ammunition in totality. A combination of green and red lights can represent a partial supply of ammunition, while all function keys emitting green light can represent a full supply of ammunition. The AMS application can provide the user the ability to choose other color schemes.","Similarly, the user can be presented with a color scale  in the number keypad section of keyboard , which the user can choose to associate with another aspect of the gaming application such as, for example, the health of the player. The emission of green light can represent the restoration of health, while red light can represent the depletion of health. Once again the user can choose other desirable color schemes. The mouse  can also be programmed with a color scale  which can be associated with sensing the proximity of enemies. The emission of red light can represent enemies in proximity to the player. The more red bars emitted the closer the enemy. Green light on the other hand can represent distance between the player and the enemy. The more green light bars the further the enemy.","The selection of color groupings of light sources, color scales, and the association of a scale to gaming aspects can be determined from the user's interactions with the AMS application by way of common GUI functions such as menus, selection of keys with a mouse pointer to identify color scheme, and so on. Once a user has selected and associated one or more color mappings with aspects of a gaming application, the associations can be recorded in a profile. To accomplish this, the AMS application can proceed to step  and record the associations in the profile selected in step  or created in step . Steps - continue in whole or in part until the user no longer has any further associations to make with the accessories chosen GUI windows  and  of .","It should be noted that the GUI  presented by the AMS application in  can have other functions. For example, the GUI  can provide options for layout of the accessory selected (button ), how the keyboard is illuminated when associations between input functions and actions are made (button ), and configuration options for the accessory (button ). Configuration options can include operational settings of the mouse  such as Dots Per Inch or Counts Per Inch, and so on. The AMS application can adapt the GUI  to present more than one functional perspective. For instance, by selecting button , the AMS application can adapt the GUI  to present a means to create macros and associate actions to accessory input functions as depicted in . Selecting button  can cause the AMS application to adapt the GUI  to present statistics in relation to the usage of accessories as depicted in . Selecting button  can cause the AMS application to adapt the GUI  to present promotional offers and software updates.","It should be also noted that the steps of method  in whole or in part can be repeated until a desirable pattern of associations of actions to input functions of the selected accessories has been accomplished. It would be apparent to an artisan with ordinary skill in the art that there can be numerous other approaches to accomplish similar results. These undisclosed approaches are contemplated by the present disclosure.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5","b":["500","400","500","502","504"]},"In step  the AMS application can receive instructions describing all or a portion of the input functions of the unknown accessory. These instructions can come from a user who defines each input function individually or responds to inquiries provided by the AMS application. The AMS application can for example make an assumption as to the keyboard layout and highlight each key with a proposed function which the user can verify or modify. Once the AMS application has been provided instructions in step , the AMS application can create an accessory identity in step  which can be defined by the user. In steps  and , the AMS application can associate and record the accessory instructions with the identity for future recognition of the accessory. In step , the AMS application can present a depiction of the new accessory with its identity along with the other selectable accessories in section .","Method  can provide a means for universal detection and identification of any accessory which can be used to control or manage software applications operating in a computing device.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 6","b":["600","600","601"]},"The tactical conditions retrieved from the gaming application can be processed by the AMS application and converted to status information which can be interpreted by a controller of an accessory with a color mapping feature. The status information can represent a color map (such as a sequential color scale as shown in ) which can be reported to the accessory(ies) in step . Portions of the status information can be distributed to the appropriate accessory according to the color mapping assigned by a user in steps - of  to one or more accessories. For example, status information associated with ammunition and health can be transmitted to the keyboard  only, while status information associated with proximity of enemies can be transmitted to the mouse  only.","The controller of the keyboard  can in response adjust the spectrum of light emitted by the groupings of light sources ,  (e.g., ammunition or health) according to the status information associated with the tactical condition assigned to each group. The controller of the mouse  can also adjust the group of light sources  (e.g., proximity to enemies) according to the status information associated with the tactical condition assigned to this group. Steps - can operate as a background process while the AMS application operates in the foreground according to steps -.","The AMS application can be further programmed to perform step  for the purpose of accessory stimulus management. This step can represent monitoring the stimulation of input functions of one or more accessories communicatively coupled to a computing device from which the AMS application operates. The input functions can correspond to button depressions on a keyboard, gaming pad, or navigation device such as a mouse. The input functions can also represent navigation instructions such as mouse or joystick movements. The input functions can further represent speech supplied by a microphone singly or in combination with a headset. Other existing or future input functions of an accessory detectable by the AMS application is contemplated by the present disclosure. The AMS application can monitor input functions by for example processing human interface device (HID) reports supplied by the accessories to the computing device.","Once one or more stimulations have been detected in step , the AMS application can proceed to step  to determine if action(s) have been associated with the detected stimulation(s). If for example the stimulations detected correspond to keyboard and mouse button depressions, the AMS application can determine if actions have been associated and recorded for such stimulations. If these stimulations \u201ctrigger\u201d one or more actions, the AMS application can proceed to step  where it retrieves the stimulation definition of these actions for each accessory reporting a stimulation. In step , the AMS application can substitute the detected stimulations with the stimulations defined by the action.","To illustrate this substitution, suppose for example that the detected stimulation was \u201cCtrl A\u201d simultaneously depressed on a keyboard. Suppose further that an action associated with this stimulus consists of a macro that combines mouse clicks with a navigation of the mouse (e.g., moving the mouse quickly in a forward motion for a given distance), and a request to invoke an instant messaging (IM) session with a particular individual using Skype\u2122 or some other common IM tool. In step , the AMS application would substitute \u201cCtrl A\u201d for stimulations consisting of the mouse clicks, navigation and a request for an IM application. The substitute stimulations would then be reported in step  to an operating system (OS).","In step , the OS can determine whether to pass the substitute stimulations to an active software application in operation (e.g., a gaming application) and\/or to invoke another software application. The active software application can be operating from the same computer system from which the OS and the AMS application operate or can be operating at a remote system such as an on-line server or family of servers (e.g., World of Warcraft) awaiting stimulation data from the computer system. In this illustration, the macro comprises both stimulation feedback for the active software application and a request to initiate an IM session. Accordingly, the OS conveys in step  the mouse stimulation signals to the active software application (e.g., gaming application), and in a near simultaneous fashion invokes the IM session in step  with a specific individual (or organization).","Referring back to step , the illustrations above cover a scenario in which the AMS application has detected an association of actions to accessory stimuli. If however the AMS application does not detect such an association, then the detected stimulus (or stimuli) supplied by one or more accessories is transmitted to the OS in step . For example, it may be that a stimulation based on the depressions of \u201cCtrl A\u201d has no particular association to an action. In this case, the AMS application passes this stimulation to the OS with no substitutes. In step  the OS can determine if this stimulation invokes a new software application in step  or is conveyed to the previously initiated software application.","Contemporaneous to the embodiments described above, the AMS application can also record in step  statistics relating to the detected accessory stimulations. A portion of the AMS application can operate as a background process which performs statistical analysis on the stimulations detected. By selecting button  in , the AMS application can provide an updated GUI which illustrates the usage of input functions of one or more accessories for which stimulations were detected in step . For ease of illustration, only a keyboard accessory is shown. In this illustration, certain keys (references ,  , ) on the keyboard are color-coded to illustrate the frequency of usage of these keys.","A color scale  defines the frequency of usage of the input functions of the keyboard. The color scale  should not be confused with the color scales of . The first end of the scale (navy blue) represents a single detected depression, while an opposite end of the scale (bright red) represents  detected depressions. Based on this scale, the AMS application maps by color in step  stimulations of the keyboard. For example, the key grouping  depict a color coding with the highest detectable usage, while the F7 key (reference ) indicates the fewest depressions. Keys having zero depressions are not color coded to readily identify the color mapping of keys which were used at least once.","The AMS application provides additional functions in a playback panel of the GUI which can help a user understand how the color coded keys were used during an active software application such as a video game. In this section of the GUI, the AMS application can present the user with a playback control function  which the user can select to replay, pause, forward or rewind the usage of these keys. When usage playback is selected, the user can for instance see the color coded keys highlighted in real-time with a temporary white border to visualize how the keys were selected. A time clock  provides the user the elapsed time of the playback sequence. Button  allows the user to retrieve statistics from other sessions, while button  provides the user a means to save statistics from a given session.","The GUI of  could have been shown as a split screen with all accessories which generated one or more detected stimulations (e.g., keyboard, mouse, and microphone), each providing statistical symbolic results as described above for the keyboard. Although not shown, split screen embodiments are contemplated by the present disclosure for the GUI of .","In addition to a symbolic representation as shown in , the AMS application can provide the user a means to visualize raw statistics in a table format such as shown in  by selecting button . The table format shows raw data in section  and possible suggestions in section  for improving user performance which can be generated by the AMS application in step . Section  can be presented in a table format with a column identifying the key being analyzed, its usage, and number of key presses. The user can ascertain from this table the most and least frequently used keys as well as other identifiable patterns.","The AMS application can utilize an understanding of the layout of the accessory (in this case, the keyboard) to determine from the statistics ways that the user can improve response time or ergonomic use. For example, the AMS application can determine from a layout analysis that the key combination <Alt.> can be reassigned to a macro based on the trigger <Ctrl F> which could provide the user a faster response time and free up the user's right hand for other tasks. The AMS application can also provide alternative suggestions. For example, the AMS application can also suggest creating single button macros for each of the key combinations <Alt.> and <Ctrl A> which can be assigned to keys on the keyboard or left and right buttons of a mouse. The latter suggestion of assigning macros to the mouse can help the user free up his\/her left hand.","Although not shown in section , the AMS application can also be programmed to suggest alternative options for the color scales chosen in . The AMS application can for example detect that the most frequently used keys may lead the user to visualize a color scale better if it were move to another location of the accessory. For example, the color scale of the mouse  may be hidden by the user's hand. Accordingly, the AMS application may recommend that the color scale for enemy proximity be move to another accessory such as the keyboard  in an area with minimal use (e.g., the keys above the arrows\u2014Delete, Insert, Page Up\/Down, and Home, End, etc.).","The AMS application can utilize present and next generation algorithms to determine how to improve response times and ergonomic usage of accessory devices. The AMS application can for example have at its disposal an understanding of the layout of each accessory, the type of software being controlled by the accessory (e.g., World of Warcraft), type of operations commonly used to control the software (e.g., known actions as shown in the actions column  of ), an understanding of the associations made by other users (e.g., gamers) to improve their performance when controlling the software, and so on. The AMS application can also be adapted to communicate with the active software application by way of an Application Programming Interface (API) to receive additional usage statistics from the software which it can in turn use to improve the user's performance. The AMS application can also utilize common statistical and behavior modeling techniques to predict the behavior of the user and responses from the software application to identify possible ways to improve the user's performance.","From these illustrations, it would be apparent to an artisan of ordinary skill in the art that innumerable algorithms can be developed to analyze accessory usage and thereby suggest improvements. These undisclosed embodiments are contemplated by the present disclosure.","From the foregoing descriptions, it would be evident to an artisan with ordinary skill in the art that the aforementioned embodiments can be modified, reduced, or enhanced without departing from the scope and spirit of the claims described below. For example, method  can be adapted to define more than one programmable layer for an accessory. Such a feature can extend the functionality of an accessory into multi-layer paradigms of input functions. The GUI of  can be adapted so that a user can specify more than one programmable layer for a specific accessory.","The user can also specify which layer to present in  while associating actions. If for instance layer  is shown, the GUI of  can present the actions associated in this layer by presenting descriptors superimposed on the input functions (e.g., buttons or keys). When the user switches to layer  (e.g., by selecting from a drop-down menu the layer of interest) the accessory can be shown in the GUI with a different set of associated actions. The user can define a macro or identify a key sequence to switch between layers when the accessory is in use.","The trigger for switching between layers can be a toggle function (e.g., selecting the tab key on a Qwerty keyboard) to switch between layers in a round robin fashion (layer \u2192layer \u2192layer \u2192to layer \u2192 and so on). Alternatively, the user can define a hold and release trigger to switch between layers. In this embodiment, the user moves to another layer while pressing a button (e.g., a \u201cShift\u201d key) and returns to the preceding layer upon its release. In yet another embodiment, the trigger to switch layers can be defined differently per layer. The user can for example select the letter \u201cA\u201d in layer  to proceed to layer , and select the letter \u201cB\u201d in layer  to return to layer  or proceed to yet another layer . There can be numerous combinations of layers and triggers which can be defined to substantially expand the capability of single accessory. Additionally, triggers can be of any kind, tactile, speech, etc.","In another embodiment, method  can be adapted so that a user can define super macros and\/or super profiles. A super macro can represent nested macros (combinations of macros). Method  can be adapted so that the user can customize the timing for executing nested macros. Similarly, a super profile can represent nested profiles (combinations of profiles). A super profile can for example comprise sub-profiles, each sub-profile defining associations of actions to input functions of a particular accessory.","A super profile can also comprise sub-profiles, each sub-profile defining a color mapping scheme for a sub-function of a particular gaming application. A sub-function can represent for example a selection of an avatar from a list of possible avatars in the gaming application. For instance a user of the AMS application can associate a warrior avatar with a desirable color mapping scheme which can be stored in a sub-profile. The user can in the same instance associate a different color mapping scheme for a military avatar and store this association in a different sub-profile. Both sub-profiles can then be stored by the AMS application in one super-profile which is associated with the gaming application from which the warrior avatar or military avatar is generated.","The user can then select the sub-profile prior to initiating the gaming application. Responsive to this selection, the AMS application can invoke the color mapping scheme for the selected sub-profile with a default setting (e.g., all lights off, all lights green, etc.). Alternatively, when the user selects the warrior avatar or the military avatar while the gaming application is in operation, the AMS application can detect the selection by way of an API of the gaming application and automatically select the sub-profile according to the detected avatar selection.","In yet another embodiment, method  can be adapted to establish audio profiles for headset accessories. When a user select a headset accessory such as , GUI  can be adapted to provide the user options to establish an sound output (equalizer) setting to optimize performance for a particular gaming application. For instance GUI  can present an equalizer so that the user can raise the volume of high frequencies to an enemy's footsteps from a longer distance in a gaming application.","In another embodiment, the above methods can be adapted so that the light sources emit a single color of light rather than a full spectrum (e.g., white light, varying intensity of white light, or no light). In yet another embodiment, the above methods can be adapted so that a characteristic of the tactical condition can be represented by pulsating a portion of the light sources of an accessory. In another embodiment, the controller of a light-emitting accessory can be programmed to cause at least a portion of the spectrum of light emitted to fade or brighten to indicate a characteristic of the tactical condition. In yet another embodiment, the methods described above can be incorporated into the gaming application. In this embodiment the gaming application can guide a user in the selection of light groupings, color coding of lights, and associations with gaming aspects. Once the user has established a profile for visual lights of an accessory, the gaming application can control the light sources of the accessory according to the profile during an active game to depicts aspects of the game in real-time or near real-time.","The foregoing embodiments are a subset of possible embodiments contemplated by the present disclosure. Other suitable modifications can be applied to the present disclosure. Accordingly, the reader is directed to the claims for a fuller understanding of the breadth and scope of the present disclosure.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 7","b":"700"},"The machine may comprise a server computer, a client user computer, a personal computer (PC), a tablet PC, a laptop computer, a desktop computer, a control system, a network router, switch or bridge, or any machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. It will be understood that a device of the present disclosure includes broadly any electronic device that provides voice, video or data communication. Further, while a single machine is illustrated, the term \u201cmachine\u201d shall also be taken to include any collection of machines that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein.","The computer system  may include a processor  (e.g., a central processing unit (CPU), a graphics processing unit (GPU, or both), a main memory  and a static memory , which communicate with each other via a bus . The computer system  may further include a video display unit  (e.g., a liquid crystal display (LCD), a flat panel, a solid state display, or a cathode ray tube (CRT)). The computer system  may include an input device  (e.g., a keyboard), a cursor control device  (e.g., a mouse), a disk drive unit , a signal generation device  (e.g., a speaker or remote control) and a network interface device .","The disk drive unit  may include a machine-readable medium  on which is stored one or more sets of instructions (e.g., software ) embodying any one or more of the methodologies or functions described herein, including those methods illustrated above. The instructions  may also reside, completely or at least partially, within the main memory , the static memory , and\/or within the processor  during execution thereof by the computer system . The main memory  and the processor  also may constitute machine-readable media.","Dedicated hardware implementations including, but not limited to, application specific integrated circuits, programmable logic arrays and other hardware devices can likewise be constructed to implement the methods described herein. Applications that may include the apparatus and systems of various embodiments broadly include a variety of electronic and computer systems. Some embodiments implement functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules, or as portions of an application-specific integrated circuit. Thus, the example system is applicable to software, firmware, and hardware implementations.","In accordance with various embodiments of the present disclosure, the methods described herein are intended for operation as software programs running on a computer processor. Furthermore, software implementations can include, but not limited to, distributed processing or component\/object distributed processing, parallel processing, or virtual machine processing can also be constructed to implement the methods described herein.","The present disclosure contemplates a machine readable medium containing instructions , or that which receives and executes instructions  from a propagated signal so that a device connected to a network environment  can send or receive voice, video or data, and to communicate over the network  using the instructions . The instructions  may further be transmitted or received over a network  via the network interface device .","While the machine-readable medium  is shown in an example embodiment to be a single medium, the term \u201cmachine-readable medium\u201d should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-readable medium\u201d shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure.","The term \u201cmachine-readable medium\u201d shall accordingly be taken to include, but not be limited to: solid-state memories such as a memory card or other package that houses one or more read-only (non-volatile) memories, random access memories, or other re-writable (volatile) memories; magneto-optical or optical medium such as a disk or tape; and carrier wave signals such as a signal embodying computer instructions in a transmission medium; and\/or a digital file attachment to e-mail or other self-contained information archive or set of archives is considered a distribution medium equivalent to a tangible storage medium. Accordingly, the disclosure is considered to include any one or more of a machine-readable medium or a distribution medium, as listed herein and including art-recognized equivalents and successor media, in which the software implementations herein are stored.","Although the present specification describes components and functions implemented in the embodiments with reference to particular standards and protocols, the disclosure is not limited to such standards and protocols. Each of the standards for Internet and other packet switched network transmission (e.g., TCP\/IP, UDP\/IP, HTML, HTTP) represent examples of the state of the art. Such standards are periodically superseded by faster or more efficient equivalents having essentially the same functions. Accordingly, replacement standards and protocols having the same functions are considered equivalents.","The illustrations of embodiments described herein are intended to provide a general understanding of the structure of various embodiments, and they are not intended to serve as a complete description of all the elements and features of apparatus and systems that might make use of the structures described herein. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. Other embodiments may be utilized and derived therefrom, such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. Figures are also merely representational and may not be drawn to scale. Certain proportions thereof may be exaggerated, while others may be minimized. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.","Such embodiments of the inventive subject matter may be referred to herein, individually and\/or collectively, by the term \u201cinvention\u201d merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed. Thus, although specific embodiments have been illustrated and described herein, it should be appreciated that any arrangement calculated to achieve the same purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all adaptations or variations of various embodiments. Combinations of the above embodiments, and other embodiments not specifically described herein, will be apparent to those of skill in the art upon reviewing the above description.","The Abstract of the Disclosure is provided to comply with 37 C.F.R. \u00a71.72(b), requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition, in the foregoing Detailed Description, it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separately claimed subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIGS. 1A-C","b":["2","3"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIGS. 4-6"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
