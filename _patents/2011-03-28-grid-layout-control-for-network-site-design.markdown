---
title: Grid layout control for network site design
abstract: Disclosed are various embodiments for designing a network site. A grid layout component is provided in conjunction with a network page. The network page has at least one text element and at least one image element. The grid layout component has a plurality of cell configurations. Each cell configuration includes at least one text cell and at least one image cell. An indication is received from a user, indicating that one of the cell configurations is to be an initial cell configuration. In response to the user indication, the at least one text element and the at least one image element are displayed in a grid having the initial cell configuration. Layout code is generated which renders the grid, including the at least one text element and the at least one image element, within the network page for display by the browser.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09158743&OS=09158743&RS=09158743
owner: Amazon Technologies, Inc.
number: 09158743
owner_city: Seattle
owner_country: US
publication_date: 20110328
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["A network site including network pages may be hosted by a hosting provider. A site administrator for the network site may design the network pages to include text and images, arranged in various ways on the page. The site administrator may further link the network pages in a hierarchical manner so that a user sees the network pages as a single network site.","The various embodiments described herein relate systems and methods for designing a network site, such as a web site. Network pages within the web site include image and text elements arranged in a grid having multiple cells. A network site designer uses a network site designer application to insert text and image elements into the cells and to modify the properties of those elements. The network site designer uses a grid layout control within the application to choose a cell configuration. One example of a cell configuration is horizontally oriented, with a row of small cells across the bottom. Another example of a cell configuration is vertically oriented, with a column of small cells on the right. Using the grid layout control, the network site designer can switch from one cell configuration to another without losing either the content or the formatting of the cells. In the following discussion, a general description of the system and its components is provided, followed by a discussion of the operation of the same.","With reference to , shown is a networked environment  according to various embodiments. The networked environment  includes one or more computing devices  in data communication with one or more client devices  by way of a network . The network  includes, for example, the Internet, intranets, extranets, wide area networks (WANs), local area networks (LANs), wired networks, wireless networks, or other suitable networks, etc., or any combination of two or more such networks.","The computing device  may comprise, for example, a server computer or any other system providing computing capability. Alternatively, a plurality of computing devices  may be employed that are arranged, for example, in one or more server banks or computer banks or other arrangements. A plurality of computing devices  together may comprise, for example, a cloud computing resource, a grid computing resource, and\/or any other distributed computing arrangement. Such computing devices  may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience, the computing device  is referred to herein in the singular. Even though the computing device  is referred to in the singular, it is understood that a plurality of computing devices  may be employed in the various arrangements as described above.","Various applications and\/or other functionality may be executed in the computing device  according to various embodiments. Also, various data is stored in a data store  that is accessible to the computing device . The data store  may be representative of a plurality of data stores as can be appreciated. The data stored in the data store  includes data accessed by the components executing on the computing device , for example, network pages  and network site designer data , as well as potentially other data.","The components executed on the computing device  include, for example, a network site designer application , a grid layout component , and a network page server application . The components executed on the computing device  may also include other applications, services, processes, systems, engines, or functionality not discussed in detail herein. These components may communicate with each other using various mechanisms, including but not limited to any type of middleware framework. Examples of such frameworks include remote procedure calls, simple object access protocol (SOAP), representational state transfer (REST), Windows Communication Foundation, and other frameworks. Though shown as logically separate components, the functionality of these components can be combined and\/or distributed in various ways, as can be appreciated.","A set of network pages  is arranged in a hierarchy to form a network site . The computing device  acts as a web hosting provider to host network sites  for various customers. To this end, the network page server application  is executed to receive requests for network pages  associated with one of the hosted network sites . These network page requests are generated by a client device  and received over the network . The network page server application  is further executed to generate a network page  corresponding to the network page request, i.e., a network page  associated with one of the hosted network sites . The network page server application  is further executed to serve up the generated network pages  in response to the network page requests.","The network pages fetched by the network page server application  may be dynamically generated or may be static. To this end, the network page server application  uses network page data , which may include any type of data related to the generation of network pages. Such data may include, for example, templates, executable code, interpreted code, hypertext markup language (HTML), extensible markup language (XML), images, video, text, graphics, and any other type of data that may be used in network pages. The network page server application  may comprise a hypertext transfer protocol (HTTP) server such as Apache\u00ae HTTP Server, Apache\u00ae Tomcat\u00ae, Microsoft\u00ae Internet Information Services (IIS), and\/or any other type of network page server application.","The network site designer application  is executed to allow a network site administrator or designer to design the network pages  that make up the network site . The network site designer application  makes use of a grid layout component  which allows the network site designer to arrange text and image elements on the network page .","The client device  is representative of a plurality of client devices that may be coupled to the network . The client device  may comprise, for example, a processor-based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer, a laptop computer, a personal digital assistant, a cellular telephone, a set-top box, a music player, a video player, a media player, a web pad, a tablet computer system, a game console, or other devices with like capability.","The client device  may be configured to execute various applications such as a browser  and other applications. The browser  may be executed in a client device , for example, to access and render network pages, such as web pages, or other network content served up by the network site designer application . For example, the browser  may be used to interact with the network site designer application . The client device  may be configured to execute applications beyond browser  such as, for example, email applications, instant message applications, and\/or other applications.","Next, a general description of the operation of the various components of the networked environment  is provided. To begin, a user interacts with the network site designer application  to create network pages  and arrange the pages hierarchically to form a network site . A network page  can take the form of a cells arranged in a grid, with each cell including a text element or an image element. The user interacts with the grid layout component  within the network site designer application  to edit the text and image elements within a cell, to rearrange or resize individual cells within the grid, or to make other modifications to the grid. The user can also interact with the grid layout component  to select another cell configuration, and the grid layout component  then applies the selected cell configuration to the grid. For example, the user can switch from a configuration having one cell on the left and three cells on the right to another configuration having three cells on the left and one cell on the right.","In some embodiments, the network site  operates as an electronic commerce marketplace. In such embodiments, the user may specify a store type, and the network site designer application  then inserts default content (text and images) into each of the cells.","The grid layout component  presents a what-you-see-is-what-you-get (WYSIWYG) interface, so that changes to the layout of a network page  appear immediately within a layout view of the network site designer application . The network site designer application  generates layout code describing the network page  as shown by the grid layout component . The layout code may include, for example, hypertext markup language (HTML), dynamic HTML, cascading style sheets (CSS), server side scripting, client side scripting, and other forms of layout code. The network site designer application  may validate the layout code to insure that it conforms to one or more standards.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIGS. 2-7","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["121","124","200","136","106","100"]},"Referring next to , shown is one example of a user interface screen  which includes an editing area  and a grid . The grid  shows the current layout of a network page  (). In the example shown in , the network page  () is arranged as a grid of four cells: a large cell  to the left and three smaller cells , ,  arranged in a column on the right. The user interacts with controls in the editing area  to make changes to individual cells or to the arrangement of the grid . For example, the user can insert an image into a cell or edit properties of an existing image with tool , Similarly, the user can insert text into a cell or edit properties of an existing image with tool . Similarly, the user can insert a hyperlink into a cell or edit the hyperlink with tool . The characteristics of text can be modified with a set of text editing tools .","As noted above, the network site designer application  () generates code which captures the layout of the network page  as modified by the grid layout component  (). The user can switch between viewing this code and viewing the layout by selecting links  and , respectively.","The grid configuration tool  allows the user to create a grid  with an initial cell configuration and to change the grid  from one cell configuration to another. This example supports four cell configurations: large cell on left and column of three small cells on right; large cell on top and row of three small cells on bottom; large cell on top and small cell on bottom; and large cell on left and small cell on right. However, in other embodiments, the grid configuration tool  supports different and\/or additional cell configurations.","Moving on to , shown is one example of a user interface screen  that is produced when the user interacts with the grid configuration tool  to select a different cell configuration. Specifically, the user has selected cell configuration . This change is reflected in the grid , which now includes only two cells: a large cell  on the top and a smaller cell  on the bottom. The content (i.e., images, text, etc.) is carried over from one cell configuration to the next.","With reference now to , shown is one example of a user interface screen  that that is produced when the user interacts with the grid configuration tool  to move or resize a cell within the grid . In this example, the user has selected the right middle cell  to be resized. In response, the grid configuration tool  has changed the appearance of the right middle cell  so that sizing handles  appear at the edges of the cell. The user can then drag the sizing handles  to resize the cell . Then user can select other cells and resize in the same manner. Another mode allows the user to select a cell to be moved within the grid  rather than resized. Moving may be accomplished, for example, using a move cursor which appears when the user clicks in a cell area rather than on the resizing handles.","Turning now to , shown is one example of a user interface screen  used for editing properties of a text element. In some embodiments, the user interface screen  is a dialog invoked by a mouse click when a particular text cell is selected. The user interface screen  includes a headline area , a subtext area , a background area , and a position control . The headline area  allows the user to change the headline text for the current cell as well the font characteristics of this headline text. The subtext area  allows the user to change the subtext for the current cell as well the font characteristics of this subtext. The background area  allows the user to change the color and transparency of the background of the current cell. The position control  allows the user to change the position of the text cell itself, relative to other cells.","The screen  thus provides a single dialog in which a user can edit editing text properties for a cell. However, the screen  represents merely one way that the grid layout component  supports editing text properties for a cell. In other embodiments, the user edits text properties in a more direct and visual manner. For example, the user may interact with a particular cell of the grid  (). to directly enter text content such as headline text and\/or subtext. Once text is entered, the user may change the properties of a particular text element through the text cell control  and the text properties controls  in the editing area  (). For example, properties of a text cell such as margins, padding, border and background color can be changed through the text cell control . In yet other embodiments, the screen  allows a subset of the text properties to be edited through a dialog similar to the one shown in , as well as visual editing directly within the cell.","Moving on to , shown is one example of a user interface screen  that is produced when the user invokes image properties of the currently selected image cell. In some embodiments, a menu produced by a mouse click is used to invoke this image properties dialog. The user interface screen  allows the user to specify: the URL for the image; the title for the image cell; the alternate text for the image cell; the size of the image; a border for the image; and horizontal and vertical spacing for the image. In another embodiment, image properties are edited in a more direct and visual manner. For example, the user may interact with a particular cell of the grid  (). to directly add image content to a cell. Once an image is entered, the user may change the properties of a particular image element through the text controls in the editing area  ().","Turning now to , shown is one example of a user interface screen  that is produced when the user invokes image properties of the currently selected image cell. In addition to editing properties such as those discussed in conjunction with , this embodiment allows a user to change the size of the image to fit the cell, by dragging handles . In some embodiments, the grid layout component  () automatically displays the handles  whenever the user selects an image that is too large for the cell, and the crop window defaults to the size that will fit the cell. The user can drag handles  to change the size of the image and\/or select a different portion of the image. The grid layout component  then reduces the size of the selected image to fill the cell, while maintaining the aspect ratio according to the selection. In a similar manner, if the image is too small to fill the entire cell, the grid layout component  increases the size of the selected area of the image to fill the entire cell, while maintaining the aspect ratio. Though the screen  allows both image resizing and image property editing, in other embodiments the image resizing behavior described above is presented on one screen and image properties are edited through another screen.","With reference now to , shown is a flowchart that provides one example of the operation of a portion of the network site designer application  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the network site designer application  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the computing device  () according to one or more embodiments.","Beginning at box , the network site designer application  provides a grid layout component  () to the user. The grid layout component supports multiple cell configurations, where each cell configuration includes text cell(s) and image cell(s). The grid layout component  is presented in conjunction with a particular network page  () having at least one text element and at least one image element.","At box , the network site designer application  receives a user selection of one of the cell configurations for the grid layout component . Next, at box  the network site designer application  the network site designer application  generates layout code which renders a grid within the network page for display by the browser. This grid has the selected cell configuration, including one or more text cells with text elements and one or more image cells with image elements,","At box , network site designer application  displays the grid having the selected cell configuration. in a grid area of the network page, thus producing a what-you-see-is-what-you-get (WYSIWYG) view. At box , the network site designer application  validates the generated layout code. An error indication may be presented to the user if the validation fails. The process of  is then complete.","The process of  relates to switching from one grid cell configuration to another in response to the user selecting a configuration. Thus, the process of  applies a selected cell configuration to a grid which already exists. In another embodiment, the process relates instead to instantiating or creating a grid with an initial configuration in response to a user instruction. The network site designer application  may receive an instruction from the user to create the grid with a default cell configuration. The user instruction to create the grid may also include an indication that one of the cell configurations should be used as an initial cell configuration.","Moving on to , shown is a schematic block diagram of the computing device  according to an embodiment of the present disclosure. The computing device  includes at least one processor circuit, for example, having a processor  and a memory , both of which are coupled to a local interface . To this end, the computing device  may comprise, for example, at least one server computer or like device. The local interface  may comprise, for example, a data bus with an accompanying address\/control bus or other bus structure as can be appreciated.","Stored in the memory  are both data and several components that are executable by the processor . In particular, stored in the memory  and executable by the processor  are the network site designer application , the grid layout component , the network page server application , and potentially other applications. Also stored in the memory  may be a data store  and other data. In addition, an operating system may be stored in the memory  and executable by the processor . While not illustrated, the client device  also includes components like those shown in , whereby the browser  is stored in a memory and executable by a processor.","It is understood that there may be other applications that are stored in the memory  and are executable by the processor  as can be appreciated. Where any component discussed herein is implemented in the form of software, any one of a number of programming languages may be employed such as, for example, C, C++, C#, Objective C, Java, JavaScript, Perl, PHP, Visual Basic, Python, Ruby, Delphi, Flash, or other programming languages.","A number of software components are stored in the memory  and are executable by the processor . In this respect, the term \u201cexecutable\u201d means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be, for example, a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory  and run by the processor , source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory  and executed by the processor , or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory  to be executed by the processor , etc. An executable program may be stored in any portion or component of the memory  including, for example, random access memory (RAM), read-only memory (ROM), hard drive, solid-state drive, USB flash drive, memory card, optical disc such as compact disc (CD) or digital versatile disc (DVD), floppy disk, magnetic tape, or other memory components.","The memory  is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus, the memory  may comprise, for example, random access memory (RAM), read-only memory (ROM), hard disk drives, solid-state drives, USB flash drives, memory cards accessed via a memory card reader, floppy disks accessed via an associated floppy disk drive, optical discs accessed via an optical disc drive, magnetic tapes accessed via an appropriate tape drive, and\/or other memory components, or a combination of any two or more of these memory components. In addition, the RAM may comprise, for example, static random access memory (SRAM), dynamic random access memory (DRAM), or magnetic random access memory (MRAM) and other such devices. The ROM may comprise, for example, a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other like memory device.","Also, the processor  may represent multiple processors and the memory  may represent multiple memories that operate in parallel processing circuits, respectively. In such a case, the local interface  may be an appropriate network  () that facilitates communication between any two of the multiple processors , between any processor  and any of the memories , or between any two of the memories , etc. The local interface  may comprise additional systems designed to coordinate this communication, including, for example, performing load balancing. The processor  may be of electrical or of some other available construction.","Although the network site designer application  and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above, as an alternative the same may also be embodied in dedicated hardware or a combination of software\/general purpose hardware and dedicated hardware. If embodied in dedicated hardware, each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include, but are not limited to, discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals, application specific integrated circuits having appropriate logic gates, or other components, etc. Such technologies are generally well known by those skilled in the art and, consequently, are not described in detail herein.","The flowchart of  shows the functionality and operation of an implementation of portions of the network site designer application . If embodied in software, each block may represent a module, segment, or portion of code that comprises program instructions to implement the specified logical function(s). The program instructions may be embodied in the form of source code that comprises human-readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor  in a computer system or other system. The machine code may be converted from the source code, etc. If embodied in hardware, each block may represent a circuit or a number of interconnected circuits to implement the specified logical function(s).","Although the flowchart of  shows a specific order of execution, it is understood that the order of execution may differ from that which is depicted. For example, the order of execution of two or more blocks may be scrambled relative to the order shown. Also, two or more blocks shown in succession in flowchart of  may be executed concurrently or with partial concurrence. Further, in some embodiments, one or more of the blocks shown in  may be skipped or omitted. In addition, any number of counters, state variables, warning semaphores, or messages might be added to the logical flow described herein, for purposes of enhanced utility, accounting, performance measurement, or providing troubleshooting aids, etc. It is understood that all such variations are within the scope of the present disclosure.","Also, any logic or application described herein, including the network site designer application , that comprises software or code can be embodied in any non-transitory computer-readable medium for use by or in connection with an instruction execution system such as, for example, a processor  in a computer system or other system. In this sense, the logic may comprise, for example, statements including instructions and declarations that can be fetched from the computer-readable medium and executed by the instruction execution system. In the context of the present disclosure, a \u201ccomputer-readable medium\u201d can be any medium that can contain, store, or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer-readable medium can comprise any one of many physical media such as, for example, magnetic, optical, or semiconductor media. More specific examples of a suitable computer-readable medium would include, but are not limited to, magnetic tapes, magnetic floppy diskettes, magnetic hard drives, memory cards, solid-state drives, USB flash drives, or optical discs. Also, the computer-readable medium may be a random access memory (RAM) including, for example, static random access memory (SRAM) and dynamic random access memory (DRAM), or magnetic random access memory (MRAM). In addition, the computer-readable medium may be a read-only memory (ROM), a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other type of memory device.","It should be emphasized that the above-described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above-described embodiment(s) without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Many aspects of the present disclosure can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the disclosure. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 7","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 8","FIG. 8"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 9","FIG. 1"]}]},"DETDESC":[{},{}]}
