---
title: Methods and apparatuses for interaction with web applications and web application data
abstract: A method of enabling content distribution for various electronic devices which comprises providing a content adaptive application for an electronic device, wherein the content adaptive application is designed to parse an abstraction schema to retrieve data or a data source, and format information. The content adaptive application further formats the data or data from the data source into at least one of a plurality of platform specific templates specified by the format information and displays at least one platform specific template including at least a portion of the data or data from the data source on a display of the electronic device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09645992&OS=09645992&RS=09645992
owner: Oracle International Corporation
number: 09645992
owner_city: Redwood Shores
owner_country: US
publication_date: 20110822
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit of U.S. Provisional Application No. 61\/432,593, filed Jan. 14, 2011, and U.S. Provisional Application No. 61\/375,826, filed Aug. 21, 2010, which are hereby incorporated by reference.","The present patent document relates to electronic device applications to interact with web applications and web application data. In particular, the present patent document relates to methods, apparatuses and systems for platform independent content display on an electronic mobile device and remote monitoring and control of content.","Today, many businesses use computer applications to interact with customers, vendors, partners and employees. Traditional access to these business computer applications requires dedicated software on a local computing client like a desktop or workstation computer. To improve scaling and remove the need for dedicated software, access to most networked computer applications is currently through a standard web browser that points to external and internal websites. Generally speaking, applications with web based access may be referred to as web applications.","Architecturally, most web applications have a presentation layer that is accessed by a web browser running on a standard laptop or desktop. This presentation layer typically consists of standard technologies like HTML, Adobe Flash, XML, Java etc. to provide users a rich interactive experience. With the proliferation of mobile devices, businesses want to provide web application access to their customers, vendors, partners and employees through mobile devices such as smart phones, handhelds, tablets, netbooks and thin clients.","When mobile device users access the same typical web application presentation layer that a web browser on a personal computer with a full-sized monitor uses, their experience is poor. The reason for this poor experience is because mobile devices typically have a smaller screen, they do not support a separate keyboard, they consist of varied hardware and processor components as compared to traditional computers, and in some cases do not support a full fledge web browser. This results in suboptimal web application functionality or no functionality at all. Additionally, web browsers on mobile devices may not have full access to advanced features of new mobile platforms like gesture sensors, compass, headset, location sensors, GPS, cameras and proprietary UI (user interface) features. The restricted access to the full advanced feature set of the mobile platform further reduces the user experience.","To solve this problem conventional wisdom has led software vendors to build simple and small website pages targeted for mobile device access through WAP gateways. However, the experience with such pages has not been popular and consequently, the growth and adoption of simple web pages for enterprise and web application access has been limited.","Moving forward there has been a new paradigm shift in mobile devices to access web applications. This new paradigm uses native software or applications running on mobile devices to access web applications. Examples of such native software are iPhone\u00ae (i.e., iOS\u00ae) and\/or Android\u00ae applications. The native applications on these mobile devices communicate with web applications using standard or proprietary transport mechanisms like TCP, SSL, HTTP and other similar technologies. Such native applications can interact with the web application data in an optimized fashion using the mobile device's specific hardware capability and graphical user interface features.","These native applications are typically custom built for each target web application and for each separate mobile platform. This means that each web application will need multiple corresponding mobile device applications to match the target hardware and address a specific function or portion of the web application. This strategy exponentially increases the complexity and cost of building and managing native mobile device applications for corresponding web applications. While expensive and burdensome, this native mobile device application strategy has gained momentum for consumer applications that have thousands of users. This point is evident by the success of the iPhone App Store\u00ae and Android App Marketplace\u00ae.","However, the cost and complexity is increasing for businesses that desire a native mobile device application for each mobile platform and for each enterprise application. Developers are required to customize views based on role based access control, add enterprise specific security, and integrate the application with existing web applications. This is very expensive and time consuming. Additionally, the skill set required to build native mobile applications is practically non-existent in company IT organizations.","In addition to the problems with creating the custom applications, enterprises are entering the next generation of remote access, productivity and connectivity by offering access to corporate data and applications on personally purchased mobile devices. With the explosion of native consumer applications employees are demanding enterprises support and offer remote access to work-related applications on their personally purchased mobile devices.","Supporting personally purchased devices in the corporate environment is a problem for companies because employees control the data on their device. Employees may leave at anytime with their personally purchased device and take the corporate data and applications with them on their mobile device. Companies have no basis to ask employees for their device so they can wipe company data. Furthermore, there are unanswered questions regarding company liability, confidentiality, care and other legal issues surrounding the mixing of corporate and personal data.","CIOs, IT, and developers need a comprehensive solution that will secure and isolate corporate data on personal devices, enable native application based access to enterprise applications, provide offline synchronization capabilities and most importantly give IT full control of company data and access rights.","In view of the foregoing, one aspect of the various disclosed embodiments in the present patent document is to provide improved methods and apparatuses for interaction with web applications and web application data. Preferably the methods and apparatuses address, or at least ameliorate, one or more of the problems described above. To this end, a method for enabling content distribution for various electronic devices is provided. The method comprises providing an application for each of a plurality of different electronic devices, wherein each of the applications is designed to: parse an abstraction schema to retrieve data or a data source, and format information; format the data into at least one of a plurality of platform specific templates specified by the format information; and display at least one platform specific template including at least a portion of the data on the electronic device.","In some embodiments, HTML tags may be used as the abstraction schema. In particular HTML5 tags may be used. The tags may be custom tags.","Various embodiments may be used with various different electronic devices including, a personal computer, mobile device, smart-phone, personal data assistant, laptop computer, tablet computer, and many others.","In some embodiments, the data may be part of a web page that is consumed by the electronic device. In other embodiments, the data may be remotely located. In embodiments where the data is remotely located, the data may reside on a web server or other networked computer. In such embodiments, the application may initially only be aware of a data source that it must retrieve data from or sync data with.","In embodiments where the data is remotely located, the abstraction layer or virtualization layer may be part of a separate file designed to allow the application to interface with a web server.","In another aspect of the embodiments of the present patent document, a method of rendering web content onto a display of an electronic device is provided. The method comprises processing a virtualization layer to map web content to a template designed for display on the electronic device, and causing the template to be rendered on a display of the electronic device.","In yet another aspect of the embodiments disclosed herein, an application for an electronic device is provided. The application comprises a plurality of templates designed for display on a display of the electronic device and a parsing module designed to consume an abstraction layer and map data to at least one of the plurality of templates. The templates are designed to customize the display of the data for the electronic device.","In some embodiments, the templates are designed to be one of a plurality of templates in a template style each template of a template style designed for customizing the display of the data on a separate electronic device in a similar style.","In another embodiment, a method of enabling content distribution for various electronic devices is provided. The method comprises providing a platform independent data file wherein the platform independent data file includes: an abstraction schema to abstract data or a data source; and format information designed to specify mapping at least a portion of the data, or at least a portion of data from the data source, to a platform specific template residing in a content adaptive application for an electronic device.","In some embodiments, the platform independent data file is a web page designed for display on a web browser. In other embodiments, the data file may be specifically designed for consumption by the device and may not be designed to be displayed on a web browser. In yet other embodiments, the data file may both display on a web browser and be consumable by the device.","In another aspect of the embodiments of the present patent document, a web content file is provided. The web content file comprises a virtualization layer that abstracts the web content into categories; and format information designed to map the categories to a template style, wherein the template style includes a plurality of templates each designed to display at least a portion of the web content in a format designed for a particular electronic device but in a similar style.","In some embodiments, the web content file is a web page designed for display on a web browser. In other embodiments, it is a file or files that are designed to abstract data from a web server but are not necessarily designed to be themselves displayed by a web browser.","In yet another aspect of the embodiments disclosed herein, a method of remotely monitoring data on an electronic device is provided. The method comprises providing an application for a mobile electronic device that includes provisioning services and encrypts data stored locally on the mobile electronic device, wherein the provisioning services are designed to monitor the use of the application and provide a third party administrator with statistics on the use of the application and also allow the third party administrator to manipulate data on the mobile electronic device.","Some embodiments of the method of remotely monitoring data on an electronic device further comprise the step of providing a platform independent data file that is designed to allow the application to interact with a web application.","In yet another aspect of the embodiments disclosed herein, an application for a mobile electronic device is provided. The application comprises a secure data storage module designed to encrypt data stored locally on the mobile electronic device; and a service provisioning module designed to: monitor the use of the application; provide a third party administrator with statistics on the use of the application; and allow the third party administrator to manipulate data on the mobile electronic device.","The apparatuses and methods for interaction with web applications and web application data described herein provide benefits over other methods and apparatuses. Further aspects, objects, desirable features, and advantages of the devices and methods disclosed herein will be better understood from the detailed description and drawings that follow in which various embodiments are illustrated by way of example. It is to be expressly understood, however, that the drawings are for the purpose of illustration only and are not intended as a definition of the limits of the claimed embodiments.","The following detailed description includes representative examples utilizing numerous features and teachings, both separately and in combination, and describes numerous embodiments in further detail with reference to the attached drawings. This detailed description is merely intended to teach a person of skill in the art further details for practicing preferred aspects of the present teachings and is not intended to limit the scope of the claims. Therefore, combinations of features disclosed in the following detailed description may not be necessary to practice the teachings in the broadest sense, and are instead taught merely to describe particularly representative examples of the present teachings.","Some portions of the detailed descriptions that follow are presented in terms of algorithms and sequences of operations which are performed within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm or sequence of operations is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d or \u201ccomputing\u201d or \u201ccalculating\u201d or \u201cdetermining\u201d or \u201cdisplaying\u201d or the like, refer to the action and processes of a computer system, or similar electronic device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the electronic device's memory or registers or other such information storage, transmission or display devices.","The embodiments disclosed also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general purpose processor selectively activated or reconfigured by a computer program stored in the electronic device. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk, including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, Flash memory, magnetic or optical cards, or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.","The algorithms presented herein are not inherently related to any particular electronic device or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct a more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. It will be appreciated that a variety of programming languages may be used to implement the teachings of the embodiments as described herein.","Moreover, the various features of the representative examples and the dependent claims may be combined in ways that are not specifically and explicitly enumerated in order to provide additional useful embodiments of the present teachings. It is also expressly noted that all value ranges or indications of groups of entities disclose every possible intermediate value or intermediate entity for the purpose of original disclosure, as well as for the purpose of restricting the claimed subject matter. It is also expressly noted that the dimensions and the shapes of the components shown in the figures are designed to help to understand how the present teachings are practiced, but not intended to limit the dimensions and the shapes shown in the examples.","The present patent document describes unique systems and methods for native mobile device applications and other computer based software applications to interact with web applications and web application data. Many enterprises are looking for a solution to mobilize their existing web applications. Embodiments of the present patent document provide a simple yet very powerful framework that enables IT professionals, developers, and system integrators to easily mobilize their existing web applications by using a simple virtualization layer (VL). The VL sits alongside your existing applications and acts as an alternate presentation layer. Once you create a VL, the content adaptive application running locally on the electronic device will consume the VL and provide a native, interactive experience to the user. A content adaptive application is deployed as a native application on mobile and other devices and is available in various embodiments with numerous features including but not limited to custom branding, full IT admin control, and enterprise security features.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 1","b":["10","24","14","10"]},"Content display system  includes an electronic device , web application , and web application server . Electronic device  may be any electronic device including a computer, laptop, mobile phone, mobile tablet, personal data assistant (PDA) or any other type of electronic device. Furthermore, electronic device  may be either a mobile device or may be a wired computer or other stationary system. In a preferred embodiment, the electronic device  may be a mobile device. In an even more preferable embodiment, the electronic device  may be a smart-phone such as the iPhone\u00ae, Blackberry\u00ae, Android\u00ae based phone, or one of many other smart-phones.","Upon request, web server  transmits web page  including web content  which may be displayed on a typical HTML based web browser such as Internet Explorer\u00ae, Chrome\u00ae, or any other type of browser. In content display system , web page  may also be received by an electronic device . When web page , which includes a VL in the form of tags , is received by a content adaptive application , web content  may be optimally displayed on the display of the electronic device  despite web page  not being particularly formatted for the display of the electronic device . Furthermore, web content  may be optimally displayed on the displays of various different electronic devices  despite web page  not being particularly formatted for display on any of the various electronic devices.","Electronic device  of content display system  includes: Electronic Device Hardware ; OS & Device Driver Layer ; Application Programmers Interface (API) Layer ; and Content Adaptive Application . Web page  includes web content , and a VL in the form of tags . While web page  including web content  is used in the embodiment shown in , any content in any form may be used in combination with a VL including audio, video, database information, contacts, enterprise applications or any other type of content. The phrase \u201cweb content\u201d is intended in the broadest sense and includes any content that may be transferred over a network and in particular over the Internet or world wide web (www).","In the embodiment of , electronic device  includes a content adaptive application . Each content adaptive application  is designed to work with a specific API Layer  of an electronic device . While in general terms each content adaptive application  is designed to work with a single platform, for example the iPhone\u00ae or the Blackberry\u00ae but not both, the content adaptive application may work with more than one platform where the platform shares a common or substantially common API. For example, the Android operating system has been ported to multiple platforms and a single content adaptive application may support all those platforms.","A content adaptive application  may be designed for each platform by sophisticated developers that are familiar with the platform and corresponding API Layer  along with development on that particular platform. Each content adaptive application  designed for each different electronic device platform, understands how to interpret the VL to display data natively on a particular device. The VL may be considered metadata that instructs the content adaptive application  about how to handle the data. The VL enables entities not familiar with development on all the various electronic device platforms to develop one VL for their content and display that content natively on all the devices that include a content adaptive application .","Preferably, the VL is programmed in a language that is widely known and easy to develop in. Even more preferably, the VL is in a language that will not affect display of the data in typical web browsers so that the VL may be included in existing web pages and web applications if desired. As shown in , web page  includes a VL in the form of tags . Tags  may be any type of text schema including HTML5 tags or XML to name a few. In one embodiment, custom tags\u2014such as Bitzer HTML5 tags\u2014may be created to work with a specific content adaptive application . In addition to tags, other general text schema may be used as the VL to classify or categorize the type of web content to be displayed.","In addition to text based schema, other methods of creating a VL may be used in other embodiments. For example, binary, hexadecimal, compiled or uncompiled instructions may be used. The VL may also be dynamic such that a portion of the instructions are received from the user in the form of gestures etc. For example, the user may shake their phone in one direction to format the data in one orientation and shake their phone in another direction to format the phone in yet a different format. In other embodiments, the data format may be based on: the location of the electronic device; proximity to other objects, devices, or persons; temperature; direction; speed; or any other host of dynamic parameters.","In order to allow the content adaptive application  to work with web pages and web content designed for display on a native web browser, the content adaptive application may use a series of rules to deal with portions of the web page or web content not abstracted by the VL. In a preferred embodiment, the content adaptive engine: ignores any HTML elements that are not native to the VL; does not load images or other media files unless they are explicitly marked by the VL; ignores Javascript; and ignores CSS. In other embodiments, other rules may be used to deal with portions of the web page or web content not abstracted by the VL. Other embodiments of the content adaptive engine  may also support other features.","One purpose of the VL is to abstract the web content  from the content adaptive application . By abstracting the web content  from the content adaptive application , a separate content adaptive application  may be developed for various different platforms. Each content adaptive application  is designed to allow a custom display of the web content  on the display of the its platform. Thus, the custom content display may be optimized for the display of the particular platform by the content adaptive application .","The content adaptive application  consumes the VL or in the embodiment shown in  the tags , and translates the data into templates. After retrieval of the tags  by the content adaptive application , each tag is programmatically processes to initiate preset functions to facilitate mapping the abstracted data to a native display. The content adaptive application  creates a working model consisting of UI templates, data, data display locations, authentication and other such features.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 2A","FIG. 1","FIG. 2A"],"b":["14","10","13","15","13","15","13","15","13","15","14","14"]},"Templates  and  are specifically designed for use with a particular electronic device platform. While generally this means that templates  and  are designed to be used with a single device, it is possible that the same templates may be used on more than one device. As explained above with respect to the content adaptive application generally, where more than one device is similar enough in display characteristics and\/or user interface style, the same templates may be used for more than one electronic device.","In a preferred embodiment, each template on a device corresponds to a template style. A template style is a particular style of data display. For example, template  may be part of a template style that supports listing data rows from a database horizontally one below the other as shown in . As one example of how template styles are used, each content adaptive application  may include a different template  that is customized for the corresponding display of the electronic device the content adaptive application was designed for. However, each template  conforms to the style of listing data rows one below the other. Consequently, when the VL requires data rows to be displayed one below the other, the VL can specify template  and achieve a customize view of the data across multiple platforms that conforms to a particular style. To this end, in a preferred embodiment, a particular template number or designation conforms to the same template style as the corresponding template with the same number or designation but which was designed to work with a different electronic device platform.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 2B","FIG. 2A","FIG. 2B"],"b":["13","13","13","13","1","2","1","2"]},"In a preferred embodiment, a plurality of different template styles are designed and a template specific to each supported platform is implemented within the respective content adaptive application to support the specific template style. However in other embodiments, templates may be pushed or dynamically loaded into existing content adaptive applications. In embodiments that allow pushing or dynamically loading templates, the content adaptive application may include a template abstraction layer to abstract the template designs and allow templates to be pushed to the various content adaptive applications after applications are installed and in use. Dynamically loading templates allows new template styles or new template designs to be supported without having to install a new content adaptive application with additional or modified templates on each electronic device.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 2C","FIG. 2A","FIG. 2C"],"b":["30","14","30","35","32","1","36","2","37","35"]},"Virtualization layer  also includes format information . Format information  provides content adaptive application  with information about how to format the abstracted data. In a preferred embodiment, format information  specifies what template the content adaptive application  should use to display the abstracted data .","Although the embodiment shown in  illustrates data  as part of the web content file , in other embodiments web content file  may simply include information about a data source and the data, or a portion of the data, may be located external to the web content file . For example, the data may reside on a server located on a network and the web content file  may include a reference to the location of the data on the server such as a Universal Resource Locator (URL), database or other data repositories.","In different embodiments, web content file  may come in various different forms. In one embodiment, web content file is in the form of a web page. In such an embodiment, the abstraction schema may be HTML tags so that the web page is compatible with a typical browser yet may be interpreted by content adaptive application  and displayed on various electronic devices in a format native to the device. In other embodiments, web content file  may be a stand alone file not meant to be rendered as a web page but including the VL . In various embodiments, different types of data files may be used for web content file  including text files, Microsoft Word, Hypertext markup language HTML, JSON, ATOM, XML or other web or non-web based file formats to name a few. As used herein, \u201cweb content file\u201d is any file designed to work with a content adaptive application  to facilitate the display of web content, or any file that includes web content or points to or is linked to web content.","In some embodiments, web content file  may be loaded on the electronic device  as part of the content adaptive application . In such an embodiment, web content file  may act like a bookmark for web content. In other embodiments, web content file  may be located on a web server or other location and interpreted dynamically. Although only a single web content file  is shown, the content adaptive application  is designed to interpret an unlimited number of different web content files . In addition, more than one web content file  may be associated with a single web application. Using more than one web content file  to define a single application can help developers organize their development efforts more easily. Where more than one web content file  is used for a single application, all such files may be located in a single directory or located in some other pre-established file system. The file system structure should be known or made known to the content adaptive application .","The web content file shown in , and used with content adaptive application , is platform independent. Developers only need to create one web content file  (or set of files) for any particular application. A single web content file works across multiple platforms and allows the web content to be displayed in a native format on any electronic device that is running a content adaptive application .","The web content file  includes the VL  which provides information to the content adaptive application  about how to handle or format the various categories of data abstracted by the VL . However, the web content file may contain information other than the VL in order for it to interface with other applications. Preferably, the web content file  is written in a schema that is easy to use and well known such as HTML5 or XML. This allows developers to easily create custom applications for multiple various platforms with one instantiation of the web content file .","Although in  the VL is described as a single layer that abstracts data and maps it into templates, the virtualization layer VL may be comprised of more complicated data structures and may in fact be more than one layer. The VL may map the abstracted data into more than just templates and may map data into various structures.  illustrates a VL  including a library , components , forms , views , and data page .","The embodiment of the VL shown in  contains multiple layers. The VL  shown in  is designed to allow a standalone VL  to be developed. The standalone VL works alongside existing web applications so that no modification of existing web application code or pages is required. In other embodiments, the VL may be integrated with the existing web page.","In the embodiment shown in , the top level of the VL is the library . Each web application that is available to a content adaptive application  includes a library file . Each library  provides a library web page as the entry point into the web application. This library page acts as a table of contents for the entire web application. The content adaptive application uses this library page to determine various artifacts it needs to import from the web application.","In a preferred embodiment, the library  contains a list of all the components . Each component  contains a list of forms , views  and links to its data page . A component  corresponds to any information or business entity that is to be exposed through the content adaptive application . In the embodiment of the VL of , any fields from the web application or web service, or columns from a database that need to be exposed to the content adaptive application  are defined as a component . In a preferred embodiment, HTML forms are used to define the components .","In a web application, forms provide the ability to interact and modify data. Similarly, the VL maps data that needs to be manipulated into forms that may be displayed natively on each platform. For each component that needs to be updated, a default form is created. Forms are just one example of a template and various different forms may be used to modify data. In a preferred embodiment, forms are designed to work with a single record.","In addition to the ability to modify the data of a single record, the data of multiple records may need to be displayed. Similar to forms, views are another type of template. The same data may be viewed using different views. The view may be a simple list, a list that shows more than one column on each row, data shown on a map, data shown on charts and graphs, or any other type of format. In a preferred embodiment views are used with data sets that include multiple records.","The data page  defines the data that needs to be displayed either in a template such as the forms  or the views  for each component . The data page handles: downloading data and storing it locally when the data is located on a remote source (offline mode); downloading changed data for offline mode to keep it up to date; sending changed data back to the remote source; accessing remotely stored data (online mode); and searching for data remotely stored for online mode. Views may be set to work in either online or offline mode.","In some embodiments, both offline mode and online mode may be used in combination or separately to control data access. Online mode requires refreshing and fetching the data with each access; off-line mode pulls the data from the web service and stores the data in a local cache for interaction by the mobile user and then synchronizes the data with the web service on predetermined or manual intervals. Other forms of data retrieval may be used in other embodiments.","In different embodiments, the data may be mapped into the data page in numerous different formats. In a preferred embodiment, the data is mapped into the data page as an HTML <table> element. The first row of the table defines fields present in the component . Each first row cell corresponds to a field of the component . Each subsequent row of the table represents a row containing data. Each cell in a data row represents data for a field.","The data page  represents the data that will be mapped into the forms  and views  and will eventually be part of the content adaptive application . The data page  allows a subset of the full web application data to be defined for use with the content adaptive application . This is often preferred because of the small displays of many mobile electronic devices.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 3B","FIG. 3A","FIG. 3B","FIG. 3B"],"b":["100","114","110","104","102","106","108","114","100","14","14"]},"As shown in , the content adaptive application  may also deal with user authentication through a login page  in the VL . In a preferred embodiment, the content adaptive application  uses the HTML forms based login page of web application to gain secure access to enterprise data. When a username and password are specified for a library they are passed to the login page to authenticate and gain access to components, forms, views and data.","The content adaptive application  may utilize any access restrictions implemented by the web application. If access needs to be restricted for a user or groups of users it may be implemented by the web application. When the content adaptive application  logs in through the VL, the content adaptive application  sees only components, forms, views and data the user is allowed to see.","In a preferred embodiment, the login URL, username, and password are provided by the user when a library is manually registered. In a preferred embodiment, the password is stored encrypted. However, in other embodiments the password may not be encrypted. Also in a preferred embodiment, session cookies set by the web application are maintained by the content adaptive application  and stored encrypted. This allows the content adaptive application to emulate a session with a web application without the user needing to login every time. In some embodiments and preferably, if a session times out, the content adaptive application logs in again without user intervention.",{"@attributes":{"id":"p-0088","num":"0087"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["30","26"]},"In the embodiment shown in  and preferably, the tags are used to abstract the web content  by type. As may be seen, the data is categorized into various types such as: label; short label; type; help-text; and display-group-name. Abstracting the content using data-type enables HTML5 compliance and smooth error-free interoperability with web browsers and other devices that may read tags  from the hosted site. In other embodiments however, other abstraction schema are possible including abstracting the content into generic categories or other abstraction schemas.","Returning to , the process of how tags are transported to the electronic device  is illustrated for a VL that is included as part of the webpage. The tags travel to both the web browser  as part of the web page  and also to the electronic device . The data may be transferred between the web server  over numerous types of protocols including standard and non-standard communication protocols. In a preferred embodiment, the data is transferred between the web server  and the web browser  or electronic device  using the HTTP protocol. In a preferred embodiment, the data is transferred using a secure connection, like HTTPS, with or without client side certificates. However in other embodiments, an unsecured connection may be used. If a secure connection is used, HTTPS may be used, however in other embodiments, other protocols may be used.",{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 5","FIG. 5"],"b":["40","42","40","42","42"]},"In the embodiment shown in , the data is broken up into description, notes, price, client, payment, type, date and reference number. The VL instructs how to handle the various data types and what to display. In the embodiment shown in , the VL instructs the content adaptive application to select a template that shows the data in rows. The VL then maps the actual data to the fields of the rows of the template. In the embodiment shown, each entry only shows the description and price with the client and payment information below. Once the data is mapped and formatted, the content adaptive application  calls the API Layer functions to correctly display the abstracted data in the format instructed on the particular platform.","Although only a single electronic device is shown in , the same web content file that is used in  to display the data on a web browser  and also on the electronic device  may be used to natively display the information on additional electronic devices with different display characteristics from the electronic device . The content adaptive application running on each of the additional devices would map the data to the respective template specified. The template of each content adaptive application is designed to show the data in a format native to the electronic device it resides on.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 6","FIG. 5"],"b":["50","52","14","52"]},"In the embodiment shown in , the data is originally displayed in a view that is not editable. However, in the upper right hand corner of the screen is an edit button. If a user presses the edit button the data becomes editable by the user. Any changes with the data are sent to the web application for update.","The manipulation of the data from not editable to editable and from one view to the next is called the workflow. In addition to specifying the original template the data is mapped into, the VL may also specify the workflow. For example, when the user selects the edit button in , the VL might specify that the data is editable in place. However, in another embodiment, selecting the edit button may only highlight the information for editing. When a user selects the highlighted data to be edited, a new view or screen appears that shows only the details of that particular record. On this single record screen the user may edit the data. These are just a couple of examples of different workflows that may be specified by the VL and in other embodiments, numerous other workflows may be used.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 7","FIG. 7"],"b":["14","80","14","80","80","80","90"]},"The content adaptive application  runs as a native application on the mobile or computer platform.  represents just one embodiment of the content adaptive application  and in other embodiments, more or less components are possible. The components of the content adaptive application  embodied in  will now be discussed.","The content adaptive application  includes a data transport layer . The data transport layer  deals with communicating and updating the data used by the content adaptive application . For example, the transport layer would work with the data page  of the VL in  to make sure the data is updated and\/or synced.","In different embodiments, the data transport layer  may include many various components. In the embodiment shown in , the data transport layer  includes a Synchronization Markup Language (SyncML) module , JavaScript Object Notation (JSON) module , and Simple Object Access Protocol (SOAP) module  and a Representational State Transfer (REST) module . These various modules provide the content adaptive application  the ability to communicate with various different web applications  and send, receive and sync data with the web applications .","In the embodiment shown in  and preferably, the content adaptive application  communicates data and receives data to display by using networking protocols like IP, TCP, SSL, IPsec. In other embodiments, different protocols or different combinations of protocols may be used.","In a preferred embodiment, the content adaptive application  supports parsing HTML and HTML tags. Parsing and translating tags may also be referred to as the process of reading tags. Tags may be used by the VL to abstract the data and are consumed by the content adaptive application when rendering a webpage, web service or other content.","When the web content is received, the format is consumed to obtain the data. For example, if the web content is in a HTML format, the HTML parser  would parse the web content and extract the data including the tagged information. Content adaptive application  may include other parsing modules  to allow parsing other formats. The data is processed with data engine  and mapped into templates for display.","The templates may be categorized into various basic types such as forms, views, graphs and charts, and other template types including but not limited to real-time camera views, augmented reality using camera views, and 2D\/3D graphically views. As may be seen in the embodiment shown in , various template controller modules ,  and  may be dedicated to handling the various different categories of templates.","The content adaptive application  processes the tags to specify views, form types, data and form relationships, and workflows using the Dynamic UI Engine. In the embodiment shown in , the dynamic UI Engine consists of the Model Layer , the Front Controller , the Dynamic Navigation Controller  and the template controllers , , and . The look and feel of the views, forms and data may be specified. Elements such as color, number of rows, logo, images, icons and other available UI elements may be specified.","In the embodiment shown in , the model layer  is the brains of the VL. The model layer  processes the metadata to instruct the view layer on the correct template(s) and workflows. The model layer handles the parent\/child relationships of the data and services the view layer.","The embodiment shown in  also includes a Front Controller  and a Dynamic Navigation Controller . The Front Controller  is responsible for interacting the API of the device to render the data to the screen. The Dynamic navigation controller  accepts and monitors user input and instructs the content adaptive application  accordingly. User input may be from a touch screen, a button, input from a motion or light sensor, input from a gyro, or any other type of input.","In addition to actual data, processing and workflows the VL may also be used to specify other information. For example, the tags may be parsed to instruct the content adaptive application to perform various functions such as user authentication or data retrieval or sync from a remote source. In other embodiments, other commands may be supported by content adaptive application .","In some embodiments, the tags may be parsed to reveal that the content adaptive application  needs to request additional data from another source. The type, form, and retrieval method may be pre-specified by the tags. For example, the data retrieval may follow an off-line or online method as previously explained. In some embodiments, the content adaptive application  may subsequently connect to a web server, database, or other source of information to retrieve additional data or sync additional data.","In the embodiment shown in , Local Persistence module  handles authentication and security. In some embodiments, content adaptive application  may provide security or authentication for the connection with web application . For example, content adaptive application  may process tags to provide user persistent onetime authentication and role based access control so the electronic device users only see views, forms and data intended for their specific username and password. The VL may be used to authenticate client and server relationships using standards such as tokens, SSL, PKI, SMS with validity codes, or other secure connection means.","As explained herein, one purpose of content adaptive application  is to allow developers to create platform independent web content files that work in combination with the content adaptive application  to allow web content to be displayed in a format native to a number of various electronic devices. To this end, the content adaptive application  may process the VL in the web content file to enable interaction between the electronic device and the electronic device user using the specific features native to the electronic device. For example, the content adaptive application  may incorporate the UI elements parsed from the VL to take advantage of a touch screen, voice recognition, GPS for location awareness, motion sensors for gestures and other such features available on the specific electronic device.","In addition to interacting with the hardware of the electronic device, the content adaptive application  may process the VL to interact with other hardware attached to the electronic device. The other hardware may be accessible via programmable interfaces or other interfaces. Types of other hardware that may be controlled include tethered devices, sensors, monitors, computers, transmitters, receivers and other pluggable devices.","An example of how to implement an embodiment of a system for providing access to existing web applications using a content adaptive application  will now be discussed. The process explained is just one embodiment and other embodiments may vary significantly. The process described below is given as an example to illustrate one of the many ways companies may use a VL and related application technology to offer web application access on electronic devices.","Step 1, a company first analyzes and decides on how to restructure the presentation layer of their current web applications for mobile consumption. This restructuring is typically done by product managers and business IT managers to increase efficiency and increase return on investment (ROI). The result of restructuring typically results in reducing the number of fields available on a smaller mobile device screen, segments larger functionality into smaller workflows and components to account for limited screen size, and incorporates custom input capabilities such as a touch screen interface. In addition, the restructuring may also integrate mobile device specific features like location awareness, user specificity, motion sensors for gestures, voice recognition and other features into the application.","Step 2, the company uses the analysis of step 1 to integrate or build a separate mobile device presentation layer with a VL such as tags or some other schema. Should the company wish to take advantage of the Bitzer mobile applications it may use Bitzer HTML5 Tags. This may also be known as a \u201cBitzerized page.\u201d In a preferred embodiments, the VL will define the views, forms, data and related functionality that are to be provided to the electronic device user.","If the company chooses to use Bitzer tags, the company may use the Bitzer HTML5 Tag specification available from Bitzer Mobile Inc. which is herein incorporated by reference. The specification provides technical details so developers may implement the Bitzer HTML5 tags.","Step 3, mobile device users will download and install a content adaptive application to their electronic device. One example of such an application is the Bitzer Mobile Application (BMA). The content adaptive application may be distributed using standard distribution methods like the Apple App Store\u00ae, Android Market\u00ae, or dedicated enterprise provisioning of pre-loaded schemes. When the content adaptive application is directed to a web page or other web content including a VL, the content adaptive application will parse the VL and display the information in a format native to the device.","The content adaptive application may be navigated to a web page or web content containing a VL by entering a standard URL or network address. In some embodiments, the content adaptive application may be preloaded with networking locations of web pages or web content that contain a VL. In other embodiments, web pages or web content containing a VL or another abstraction schema may be hard-coded or pre-loaded into the mobile application. In yet other embodiments, the electronic device application may be limited to only specific web pages and web content.","In a preferred embodiment, a company may also create platform independent web content files. These files, also known as libraries, may be dynamically loaded by the content adaptive application to allow the content adaptive application to work with various web applications and web data. In some embodiments, the libraries may not be designed to be displayed both on a conventional web browser and a content adaptive application and may be specifically designed for use with content adaptive applications. In other embodiments, the libraries may be designed to be displayed on either a web browser and a content adaptive application or both. Although libraries may not be designed to be displayed by a conventional web browser they may still be programmed using HTML or other similar languages. In other embodiments, the information contained in the library may be statically included in the content adaptive application.","In addition to allowing web content and data to be more easily displayed on multiple platforms, the content adaptive application may provide other benefits. In some embodiments, the content adaptive application may further include a virtual application container to provide a way to access, consolidate and provide security for multiple applications. More specifically, the virtual application container may embody application data and GUIs for the purpose of isolation, consolidation, security and management of such applications and data from others on the same device.","In a preferred embodiment, the virtual application container is used as part of a content adaptive application. However in other embodiments, the virtual application container may be used in other types of device applications and the virtual application container is not limited to use with a content adaptive application.",{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 8","FIG. 8"],"b":["101","102","120"]},"Inside the virtual application container  there are three (3) separate applications that are accessible: Parts and Pricing ; CRM Contacts ; and Expense reports . In embodiments where the virtual application container  resides inside a content adaptive application, the enterprise applications  may include a VL  or some other schema to abstract the data. The content adaptive application may then interact with the data from the enterprise applications  by parsing the VL  and displaying the data, forms and other information in a format native to the electronic devise as described above.","In a preferred embodiment, applications in the virtual application container  are driven by a VL . The VL  allows the enterprise application data to be displayed in a format native to the electronic device as explained above.","In some embodiments, the applications , , and  may be established inside the virtual container  by statically programming them within the content adaptive application . However, in a preferred embodiment, the applications , , and  are established by dynamically loading a library or web content file. Even more preferably the library or web content file is a platform independent.",{"@attributes":{"id":"p-0126","num":"0125"},"figref":["FIG. 9","FIG. 9"],"b":["200","205","205","205","205","230","210","240","235","238"]},"In a preferred embodiment, the virtual application container  also includes a service provisioning module . The service provisioning module  allows control, monitoring and access to the data and applications inside the virtual application container  via remote access from an administrator. In a preferred embodiment, service provisioning module  communicates with a central management system, such as admin control panel , to provide IT staff, administrators and individuals with control of the virtual application container .","In a preferred embodiment, admin control panel  is a centrally managed provisioning portal that is hosted in the cloud or on-premise. In various different embodiments, any number of control functions may be allowed through service provisioning module . As shown in the embodiment of , admin control panel  includes: Application provisioning ; Remote wipe ; Remote Lock ; Geographic Fencing ; Audit Logs ; Device Provisioning ; Usage Statistics ; and User Provisioning . Other embodiments may include other administrative controls.","The applications and data located within the virtual container  may be monitored and controlled by the virtual container . This may be done locally or remotely. In some embodiments, the virtual container  may support the ability to remotely add new libraries, or refresh or delete existing libraries. In other embodiments, the virtual container may support the ability to wipe the contents of the container, both libraries\/applications and associated data. In yet other embodiments, the virtual container may support the ability to lock or unlock the container or only lock access to particular applications or data. This total or partial locking may be based on any number of factors including geographic location, time, usage policies or any other criteria.","In a preferred embodiment, the virtual container  provides secure encapsulation of data and remote management capabilities of just the container instead of the entire device.","The controls of the admin control panel interface with the content adaptive application  and the virtual application container  through the service provisioning module . In some embodiments, service provisioning module  allows an administrator to set rules or multiple rules to monitor the use of the content adaptive application  and associated virtual application container  and provide various security and usage policies. For example, an administrator may set a rule to check a notification flag if the application  is used during an unauthorized time, for example between 1 a.m. and 3 a.m. If such a use occurs, the service provisioning module  documents the use in the audit logs  and sets a flag on the admin control panel  to notify the administrator. In various embodiments, numerous other rules or sets of rules to form advanced logic may be implemented and used by the service provisional module . In some embodiments, role based administration may be used.","In a preferred embodiment, the content adaptive application  may be instructed to wake on periodic intervals to assess the rules instantiated in the service provisioning module . Based on a direct command by the administrator from the admin control panel  or based on the requirements of a rule being satisfied, the service provisioning module  may provide remote wipe, disable specific functionality based on time of day, monitor a username, monitor geographic location, monitor number of attempts, log statistics such as applications visited, monitor duration spent in each application, monitor access times or any other provisioning function.","In some embodiments, the virtual application container may also include a secure local database . The local database  provides isolation of the virtual application container's  data from other data on the device. The secure local database may be a memory allocation on the flash or other local storage of the device to store information associated with the applications  located within the virtual application container . In a preferred embodiment, the secure local database consists of data stored in an encrypted format on the local device. In some embodiments, the encryption key(s) for the secure local database  may be created and hosted remotely to provide an additional level of security. The secure local database  may be deleted or locked remotely by the administrator through the service provisioning module .","The VL processing module  consumes the tags or other schema of the web application or web page to create a model of the application workflow and map VL identified sources to selected native user interactive templates , , and . The VL processing is assisted by the specific application platform independent libraries  associated with the web application. As explained above, the platform independent libraries  may be statically or dynamically included in the content adaptive application . In the embodiment of , the six (6) platform independent libraries are shown , , , , , . Each platform independent library may be separately dynamically loaded by the content adaptive application. Once the platform independent library is loaded, it assists the VL in mapping the VL identified sources to selected native user interactive templates ,  and  and defines workflows.","Native templates ,  and  are used to display, interact and input data in a format that is native to the mobile device. Although only three interactive templates are shown, table templates , charts\/graphs templates , and forms templates , other embodiments may include more or less templates.","The native UI engine  handles consumption of the VL and mapping the data to the templates and processing the workflows.","In the embodiment shown in , and preferably, the virtual application container  includes an authentication and secure sign on (SSO) module . Authentication and SSO  manages authentication of access to the virtual application container . Various embodiments of the Authentication and SSO module  may support multiple different authentication and sign on methods including single sign-on. In a preferred embodiment, authentication and SSO module  also manages the different usernames and passwords and the respective access for each VL.","Although applications that are not content adaptive may include a virtual application container , including a VL  allows the application to use native user interface elements and features of the device such as multitouch, GPS, gestures and other features native to the device. The VL  may also allow developers to create platform independent libraries to support new applications quickly and easily.",{"@attributes":{"id":"p-0139","num":"0138"},"figref":["FIG. 10","FIG. 10"],"b":["310","320","340","310","311","312","313","314","310","320","330","340"]},"Providing an application including a virtual application container with the ability to use a VL  gives customers the ability to support multiple platforms with one VL  development while keeping their data and applications secure. Virtual containers on different devices may use the same VL  but display data in different formats to match the native look and feel of the host device.",{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 11","b":["300","300","410","420","430","300"]}],"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2A","FIG. 1"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2B","FIG. 2A"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2C","FIG. 2A"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
