---
title: Launching virtual machine instances in a programmable execution service
abstract: A component executing within a programmable execution system (PES) receives a request to launch a virtual machine instance, such as from a customer of the PES. In response to receiving such a request, the component computes an expected cost of executing the virtual machine instance over its lifetime based upon one or more cost factors. The component also computes an expected value of executing the virtual machine instance over its lifetime based upon one or more value factors. Based upon the computed expected cost and the computed expected value associated with executing the virtual machine instance, the component determines whether or not to launch the virtual machine instance. The component might utilize a similar mechanism to determine whether to instantiate other types of computing resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09514485&OS=09514485&RS=09514485
owner: Amazon Technologies, Inc.
number: 09514485
owner_city: Seattle
owner_country: US
publication_date: 20111223
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["A programmable execution service (\u201cPES\u201d) can provide computing resources for executing applications on a permanent or an as-needed basis. The computing resources provided by a PES may include various types of resources, such as data processing resources, data storage resources, data communication resources, and the like. Each type of computing resource may be general-purpose or may be available in a number of specific configurations. For example, data processing resources may be available as virtual machine instances (\u201cinstances\u201d). The instances may be configured to execute applications, including World Wide Web (\u201cWeb\u201d) servers, application servers, media servers, database servers, and the like. Data storage resources may include file storage devices, block storage devices, and the like. Customers of a PES can typically purchase and utilize the computing resources provided by the PES according to various financial models.","When a customer of a PES requests to launch a new virtual machine instance, the PES typically identifies a \u201cslot\u201d for executing the new instance. The selection of a slot for executing the new instance might include identifying an appropriate server computer in an appropriate data center upon which the new instance should be executed. All execution slots are not the same, however. Consequently, the selection of a particular slot for executing certain virtual machine instances might cost the operator of the PES money, rather than providing an economic benefit to the operator of the PES. For instance, certain types of virtual machine instances might have associated licensing fees that require payment for an entire month even if the virtual machine instance is only executed for a portion of the month. In this case, launching a new instance on such a virtual machine for a customer might actually cost the operator of the PES more than the revenue generated by the execution of the virtual machine instance.","It is with respect to these and other considerations that the disclosure made herein is presented.","The following detailed description is directed to technologies for launching virtual machine instances in a PES. Utilizing the technologies described herein, an expected cost and an expected value associated with the execution of a virtual machine instance over its expected lifetime are determined prior to launching the instance. A determination can then be made as to whether the instance should or should not be launched based upon the expected cost of executing the instance and the computed expected value from the execution of the instance. In this way, virtual machine instances, or other types of computing resources, that do not provide an expected economic benefit to the operator of the PES may not be launched.","According to one aspect disclosed herein, a PES platform is configured to provide instances of computing resources for executing an application to customers of the PES. For example, the PES platform might provide virtual machine instances for executing an application, such as an e-commerce application or another type of distributed application. Software components that implement the application are typically deployed to the virtual machine instances provided by the PES platform. The PES might also provide other types of computing resources on-demand, such as data storage resources and data communication resources.","The PES platform is also provided with functionality for determining whether to launch a virtual machine instance based upon an expected value and an expected cost associated with executing the virtual machine instance. In particular, a component operating within the PES, such as a management component or a deployment component, is configured in one implementation to receive a request to launch a virtual machine instance. For example, a customer of the PES may request to launch a new virtual machine instance in the PES.","In response to receiving a request to launch a virtual machine instance, the component is configured to compute an expected cost of executing the virtual machine instance as a monetary or non-monetary value. For example, the component might compute the expected cost of executing the virtual machine instance over its expected lifetime using one or more cost factors. The cost factors might include, but are not limited to, the actual monetary costs associated with executing the virtual machine instance, opportunity costs associated with executing the virtual machine instance, a cost of risk associated with executing the virtual machine instance, and a cost of lost goodwill associated with executing the virtual machine instance.","The component might also compute an expected value from executing the virtual machine instance as a monetary or non-monetary value. For example, the component might compute the value to be derived from the execution of the virtual machine instance by the operator of the PES over the expected lifetime of the instance based upon one or more value factors. The value factors might include, but are not limited to, a customer-provided value indicator, expected income from execution of the virtual machine instance, value of goodwill associated with execution of the instance, and indirect income associated with execution of the virtual machine instance.","Once the component has computed the expected cost and the expected value of executing the virtual machine instance, the component might then determine whether or not to launch the virtual machine instance based upon the expected cost and the expected value. For example, the component may permit the instance to be launched on the PES only if the computed expected value from executing the virtual machine instance exceeds the computed expected cost of executing the virtual machine instance over its lifetime. In other embodiments, the component may permit the instance to be launched on the PES only if the computed expected cost of executing the virtual machine instance is less than a threshold percentage of the computed expected value from executing the virtual machine instance. Additional details regarding the various processes described above for launching a virtual machine instance in a PES will be presented below with regard to .","It should be appreciated that the subject matter presented herein may be implemented as a computer process, a computer-controlled apparatus, a computing system, or an article of manufacture, such as a computer-readable storage medium. While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices, those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally, program modules include routines, programs, components, data structures, and other types of structures that perform particular tasks or implement particular abstract data types.","Those skilled in the art will also appreciate that the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described herein, including multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, handheld computers, personal digital assistants, e-readers, cellular telephone devices, special-purposed hardware devices, network appliances, and the like. The embodiments described herein may also be practiced in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","In the following detailed description, references are made to the accompanying drawings that form a part hereof, and that show, by way of illustration, specific embodiments or examples. The drawings herein are not drawn to scale. Like numerals represent like elements throughout the several figures.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIG. 1"],"b":["100","108","108","108"]},"The PES platform  can provide computing resources for executing applications on a permanent or an as-needed basis. The computing resources provided by the PES platform  may include various types of resources, such as data processing resources, data storage resources, data communication resources, and the like. Each type of computing resource may be general-purpose or may be available in a number of specific configurations. For example, data processing resources may be available as virtual machine instances. The instances may be configured to execute applications, including Web servers, application servers, media servers, database servers, and the like. Data storage resources may include file storage devices, block storage devices, and the like.","Each type or configuration of computing resource may be available in different sizes, such as large resources, consisting of many processors, large amounts of memory, and\/or large storage capacity, and small resources consisting of fewer processors, smaller amounts of memory, and\/or smaller storage capacity. Customers may choose to allocate a number of small processing resources as Web servers and\/or one large processing resource as a database server, for example.","The computing resources provided by the PES platform  are enabled by one or more data centers A-N (which may be referred herein singularly as \u201ca data center \u201d or in the plural as \u201cthe data centers \u201d). The data centers  are facilities utilized to house and operate computer systems and associated components. The data centers  typically include redundant and backup power, communications, cooling, and security systems. The data centers  might also be located in geographically disparate locations. One illustrative configuration for a data center  that implements the concepts and technologies disclosed herein for launching virtual machine instances will be described below with regard to .","The customers and other consumers of the PES platform  may access the computing resources provided by the data centers  over a wide-area network (\u201cWAN\u201d) . Although a WAN is illustrated in , it should be appreciated that a local-area network (\u201cLAN\u201d), the Internet, or any other networking topology known in the art that connects the data centers  to remote customers and other users may be utilized. It should also be appreciated that combinations of such networks might also be utilized.","The customer computing system  is a computer utilized by a customer or other consumer of the PES platform . For instance, the customer computing system  may be a server computer, a desktop or laptop personal computer, a tablet computer, a wireless telephone, a PDA, an e-reader, a game console, a set-top box, or any other computing device capable of accessing the PES platform .","As will be described in greater detail below, the customer computing system  may be utilized to configure aspects of the computing resources provided by the PES platform . In this regard, the PES platform  might provide a Web interface through which aspects of its operation may be configured through the use of a Web browser application program executing on the customer computing system . Alternatively, a stand-alone application program executing on the customer computing system  might access an application programming interface (\u201cAPI\u201d) exposed by the PES platform  for performing the configuration operations. Other mechanisms for configuring the operation of the PES platform , including launching new virtual machine instances on the PES platform , might also be utilized.","According to embodiments disclosed herein, the capacity of purchased computing resources provided by the PES platform  can be scaled in response to demand. In this regard, scaling refers to the process of instantiating (which may also be referred to herein as \u201claunching\u201d or \u201ccreating\u201d) or terminating (which may also be referred to herein as \u201cde-scaling\u201d) instances of computing resources in response to demand. In this manner, the capacity of resources purchased by a customer of the PES platform  can be scaled on-demand.","Auto scaling is one mechanism for scaling computing resources in response to increases or lulls in demand for the resources. Auto scaling allows customers of the PES platform  to configure the platform  to scale their purchased computing resources according to conditions defined by the customer. For instance, rules may be defined for scaling up capacity in a particular manner in response to the occurrence of specified conditions, such as a spike in demand. Similarly, rules might also be defined to scale down capacity in a particular manner in response to the occurrence of other conditions, such as a lull in demand. The mechanisms disclosed herein for launching virtual machine instances might be utilized when instances are manually launched by a customer or when instances are launched by an auto scaling component in the PES platform .","The PES platform  may also be configured with a deployment component to assist customers in the deployment of new instances of computing resources. The deployment component may receive a configuration from a customer that includes data describing how new instances should be configured. For example, the configuration might specify one or more applications or software components that should be installed in new instances, provide scripts and\/or other types of code to be executed in new instances, provide cache warming logic specifying how an application cache should be prepared, and other types of information. The deployment component utilizes the customer-provided configuration and cache warming logic to launch, configure, and prime new instances of computing resources.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 2"],"b":["102","108","102","202","202","202","202","202","202","206","206"]},"In one embodiment, the instances A-N (which may be referred herein singularly as \u201can instance \u201d or in the plural as \u201cthe instances \u201d) are virtual machine instances. As known in the art, a virtual machine instance is an instance of a software implementation of a machine (i.e. a computer) that executes programs like a physical machine. In the example of virtual machine instances, each of the servers  may be configured to execute an instance manager  capable of executing the instances. The instance manager  might be a hypervisor or another type of program configured to enable the execution of multiple instances  on a single server , for example. As discussed above, each of the instances  may be configured to execute all or a portion of an application.","It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances, other types of instances can be utilized with the concepts and technologies disclosed herein. For instance, the technologies disclosed herein might be utilized with instances of storage resources, instances of data communications resources, and with other types of resources. The embodiments disclosed herein might also execute all or a portion of an application directly on a computer system without utilizing virtual machine instances.","The data center  shown in  also includes a server computer  reserved for executing software components for managing the operation of the data center , the server computers , and the instances . In particular, the server computer  might execute a management component . As discussed above, a customer of the PES platform  might utilize the customer computing system  to access the management component  to configure various aspects of the operation of PES platform  and the instances  purchased by the customer. For example, the customer may purchase instances and make changes to the configuration of the instances. The customer might also specify settings regarding how the purchased instances are to be scaled in response to demand. The customer might also provide requests to launch instances to the management component .","As also described briefly above, an auto scaling component  scales the instances  based upon rules defined by a customer of the PES platform . In one embodiment, for instance, the auto scaling component  allows a customer to specify scale up rules for use in determining when new instances should be instantiated and scale down rules for use in determining when existing instances should be terminated.","The auto scaling component  may execute on a single server computer  or in parallel across multiple server computers  in the PES platform . In addition, the auto scaling component  may consist of a number of subcomponents executing on different server computers  or other computing devices in the PES platform . The auto scaling component  may be implemented as software, hardware, or any combination of the two. The auto scaling component  may monitor available computing resources in the PES platform  over an internal management network, for example.","As discussed briefly above, the data center  may also be configured with a deployment component  to assist customers in the deployment of new instances  of computing resources. The deployment component  may receive a configuration from a customer that includes data describing how new instances  should be configured. For example, the configuration might specify one or more applications that should be installed in new instances , provide scripts and\/or other types of code to be executed for configuring new instances , provide cache warming logic specifying how an application cache should be prepared, and other types of information.","The deployment component  utilizes the customer-provided configuration and cache warming logic to configure, prime, and launch new instances . The configuration, cache warming logic, and other information may be specified by a customer using the management component  or by providing this information directly to the deployment component . Other mechanisms might also be utilized to configure the operation of the deployment component .","In the example data center  shown in , an appropriate LAN  is utilized to interconnect the server computers A-N and the server computer . The LAN  is also connected to the WAN  illustrated in . It should be appreciated that the network topology illustrated in  has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. Appropriate load balancing devices or software modules might also be utilized for balancing a load between each of the data centers A-N, between each of the server computers A-N in each data center , and between instances  purchased by each customer of the PES platform . These network topologies and devices should be apparent to those skilled in the art.","It should be appreciated that the data center  described in  is merely illustrative and that other implementations might be utilized. In particular, functionality described herein as being performed by the management component , the auto scaling component , and the deployment component  might be performed by one another, might be performed by other components, or might be performed by a combination of these or other components. Additionally, it should be appreciated that this functionality might be implemented in software, hardware, or a combination of software and hardware. Other implementations should be apparent to those skilled in the art.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["206","302","108","108","304","306","308","310"]},"The on-demand instances , which might also be referred to herein as \u201cregular\u201d instances, are instances that are paid for and in active use by a customer. The on-demand instances  allow customers of the PES platform  to pay for capacity per unit of time, such as an instance-hour, without requiring a long-term commitment. This frees the customer from the costs and complexities of planning, purchasing, and maintaining hardware and transforms what are commonly large fixed costs into much smaller variable costs.","The reserved instances  are instances of a computing resource that are reserved for a customer in exchange for a payment. The reserved instances  provide the customer the option to make a one-time payment for each instance they want to reserve. In turn, the customer may receive a significant discount on the hourly usage charge for the reserved instances  as compared to the on-demand instances . After the customer makes a one-time payment for the reserved instances , the reserved instances  are reserved for the customer and the customer has no further obligation. The customer may choose to run the reserved instances  for the discounted usage rate for the duration of a chosen term. If the customer does not use the reserved instances , the customer will not pay usage charges on these instances.","The spot instances  allow customers to bid on unused capacity in the PES platform . The customer can run the spot instances  for as long as their bid exceeds a current market price, referred to herein as the spot instance market price, which may fluctuate based upon supply and demand. The spot instances  may be terminated if a customer's maximum bid no longer exceeds the current spot instance market price.","In order to obtain the spot instances , the customer places a request for the spot instances  that specifies the desired number of spot instances  and the maximum price the customer is willing to pay per instance hour. If the customer's maximum price bid exceeds the current spot instance market price for the spot instances , the customer's request will be fulfilled and the customer's spot instances  will run until either the customer chooses to terminate them or the market price increases above the customer's maximum price (whichever is sooner). Various components operating within the PES platform  may manage the market for the spot instances , including setting the current spot instance market price for the spot instances .","The standby instances  are spot instances  that have been acquired on behalf of a customer and that are made ready for near immediate use by the customer in the manner described herein. The price charged for the standby instances  is typically less than the price charged for the on-demand instances , since the standby instances  may be terminated in the same manner as the spot instances . In one embodiment, the standby instances  are priced higher than the spot instances  and the reserved instances , but lower than the on-demand instances . It should be appreciated, however, that the various pricing mechanisms described above for the on-demand instances , reserved instances , spot instances , and standby instances  are merely illustrative and that other mechanisms may be utilized to set the pricing for the various instance types. It should also be appreciated that the embodiments disclosed herein for launching virtual machine instances may be utilized to launch any of the instance types shown in  and other types of instances not shown in .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 4","FIG. 4"],"b":["108","108","210","214","210","108","206","402"]},"As also illustrated in , a launch request  might include a value indicator  provided by the requestor making the launch request . The value indicator  provides an indication of the value to the requestor making the request to launch the virtual machine instance A. For example, a customer of the PES  making the launch request  might indicate a number on an arbitrary scale (1-10, for instance) indicating the importance to them of the virtual machine instance A to be launched. The value indicator  might also be obtained, or inferred, from other types of customer or requestor-provided data. For instance, the price that a customer is willing to pay for the virtual machine instance A to be launched may be utilized as an indicator of the value of the instance A to the customer. The value of the instance A to the requestor might also be specified in other direct or indirect ways. As will be described in greater detail below, the value indicator  may be utilized in calculating an expected value  of a virtual machine instance A for which a launch request  has been received.","In response to receiving a launch request , the management component  is configured in one embodiment to compute an expected cost  of the instance A and an expected value  of the instance A. In order to compute the expected cost , the management component  might utilize one or more cost factors . The cost factors  are monetary or non-monetary factors that indicate the cost of launching and executing the virtual machine instance A to the operator of the PES platform . For example, the cost factors  might include the actual monetary costs associated with launching and executing the virtual machine instance A, such as the costs of hardware and software for executing the instance A, the cost of electricity for powering the server computer that executes the instance A, the cost of the real estate and facilities for housing the hardware executing the instance A, the cost of personnel to operate and maintain the hardware and software, and other actual monetary costs associated with executing the instance A.","The cost factors  might also include the opportunity cost associated with launching and executing the virtual machine instance A. For example, if executing the virtual machine instance A might cause the PES platform  to become capacity constrained and unable to launch another, more profitable virtual machine instance, then there is a quantifiable opportunity cost associated with launching and executing the virtual machine instance A. Other types of opportunity costs might also be quantified and utilized in the computation of the expected cost  of executing the instance A.","The cost factors  might also include a cost of risk associated with launching and executing the virtual machine instance A. For example, the management component  might determine that the instance A can only be launched on the same server computer  and\/or in the same data center  that is currently used to execute another instance for the same customer. In this case, the possibility exists of a correlated failure that would cause both the new instance A and the other instance to fail at the same time. Such a correlated failure could be very expensive to the customer and, consequently, launching the new instance A under these circumstances might have a high cost of risk. The management component  might quantify the cost of risk and utilize this cost when computing the expected cost  of launching the instance A.","The cost factors  might also include a cost of lost goodwill as a result of launching and executing the virtual machine instance A. For instance, the management component  might determine that the quality of service that can be provided to the new instance A, such as the amount of CPU and network bandwidth that can be provided to the instance A. If the instance A cannot be executed by the PES platform  in a performant manner, the customer that submitted the launch request  might be dissatisfied. Alternately, execution of the instance A might result in performance degradation that results in other customers of the PES platform  being dissatisfied. As a result, the operator of the PES platform  might suffer an actual and quantifiable loss of goodwill as a result of executing the virtual machine instance A. The management component  might quantify this loss of goodwill as a monetary or non-monetary value and utilize this value in the computation of the expected cost  of executing the instance A.","It should be appreciated that the cost factors  described above are merely illustrative and that more or fewer cost factors  might be utilized when computing the expected cost  of the instance A. Additionally, costs factors  other than those described herein might also be utilized to compute the expected cost . The cost factors  might also be weighted in various embodiments.","In order to compute the expected value , the management component  might utilize one or more value factors . The value factors  are monetary or non-monetary factors that indicate the value of launching and executing the virtual machine instance A to the customer and\/or the operator of the PES platform . For example, the value factors  might include the expected income associated with the execution of the virtual machine instance A. Specifically, the income received from the customer that submitted the launch request  for execution of the virtual machine instance A may be utilized as a value factor  when computing the expected value  of the instance A.","The value factors  might also include any indirect income associated with the execution of the virtual machine instance A. For example, if the operator of the PES  also operates an e-commerce Web site or other type of income-producing site on the PES , the launch and execution of the virtual machine instance A might produce income to the operator. All or a portion of this income might be utilized as one of the value factors  when computing the expected value  of the instance A.","The value factors  might also include the value of any goodwill gained from execution of the virtual machine instance . For example, the launch and execution of the instance A might result in positive, quantifiable goodwill to the operator of the PES platform  if the quality of service provided is very high. This goodwill might be utilized by the management component  when computing the expected value  of the instance A.","It should be appreciated that the value factors  described above are merely illustrative and that more or fewer value factors  might be utilized when computing the expected value  of the instance A. Additionally, value factors  other than those described herein might be utilized to compute the expected value . The value factors  might also be weighted in various embodiments.","It should also be appreciated that the expected cost  and the expected value  of the instance A might be computed over an expected execution lifetime of the instance A. In this regard, the management component  might be configured to compute the expected execution lifetime of the instance A. The lifetime of the instance A may be computed, for example, based upon historical behavior of the customer of the PES  that submitted the launch request , historical behavior of an aggregate group of customers of the PES , or in another manner. The customer submitting the launch request  might also explicitly state the expected execution lifetime of the instance A. The expected cost  and expected value  might also be computed over time periods other than the expected execution lifetime of the instance A in other embodiments.","As mentioned above, the value factors and cost factors might be expressed as monetary values or non-monetary values. When expressed as non-monetary values, any arbitrary scale may be utilized to express the values. For example, the cost associated with the execution of an instance may be specified on a scale from zero to one. Other types of non-monetary scales might also be defined to express the cost factors and the value factors. Additionally, the non-monetary values might also be derived from or based upon monetary values in other embodiments.","According to various embodiments, the management component  might compute the expected cost  and the expected value  for various execution slots for executing the instance A within the PES platform . For example, when a customer submits a launch request , the management component , the deployment component , or another component might identify one or more execution slots for executing the new instance A. The selection of slots for executing the new instance A might include identifying one or more appropriate server computers  in one or more data centers  upon which the new instance A may be executed. The expected cost  and expected value  might then be computed for each of the identified execution slots using information unique to each of the slots. For instance, different slots might have different operating costs or associated software licensing fees that might be utilized when calculating the expected cost . Similarly, different slots might generate different amounts of income that can be reflected in the expected value  of the instance.","Once the management component  has computed the expected cost  and the expected value  from the launch and execution of an instance, the management component  utilizes these values to determine whether to grant or deny the launch request . For example, the management component  may permit the instance A to be launched on the PES  only if the computed expected value  from executing the virtual machine instance A exceeds the computed expected cost  of executing the virtual machine instance A over its expected execution lifetime. In other embodiments, the management component  may permit the instance A to be launched on the PES  only if the computed expected cost  of executing the virtual machine instance A is less than a threshold percentage of the computed expected value  from executing the virtual machine instance A.","If the management component  determines that the launch request  is to be granted, the management component  might instruct the deployment component  to launch the virtual machine instance A. In turn, the deployment component  will launch and execute the virtual machine instance A according to a configuration provided by the customer that submitted the launch request , as discussed above. For example, the deployment component  might cause the instance A to be launched and executed on one of the server computers A-C within the PES platform . Additional details regarding these processes will be provided below with regard to .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIGS. 5-7","FIGS. 5-7"],"b":["206","108"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 5","FIG. 5"],"b":["500","206","208","500","210","500","214","212","500"]},"The routine  begins at operation , where the management component  receives a launch request . As discussed above with regard to , the launch request  might also include a value indicator  indicating a value of the execution of the virtual machine instance  to the customer of the PES  that provided the launch request . The routine  then proceeds to operation .","At operation , the management component  determines whether capacity is available in the PES  to launch the instance  requested by the launch request . To make this determination, the management component  might communicate with the deployment component  or another component within the PES  that maintains data regarding the available capacity of the PES . If no capacity is available, the routine  proceeds from operation  to operation , where the customer that submitted the launch request  is informed that no capacity exists in the PES  to grant the launch request . The customer might also be instructed to re-submit the launch request  at a later time. The routine  then proceeds from operation  to operation , where it ends.","If there is sufficient computing capacity within the PES  to grant the launch request , the routine  proceeds from operation  to operation . At operation , the management component  identifies one or more slots within the PES  upon which the instance for which execution has been requested may be executed. As mentioned above, the expected cost  and expected value  might be computed separately for each of the identified slots. The instance might then be executed on the slot having the best cost to value ratio. Other metrics might also be determined to determine which of the available slots the instance should be executed on.","From operation , the routine  proceeds to operation  where the management component  computes the expected cost  of executing the instance  utilizing the cost factors . One illustrative routine  will be described below with regard to  for computing the expected cost  of executing the instance.","From operation , the routine  proceeds to operation  where the management component  computes the expected value  of executing the instance  utilizing the value factors . One illustrative routine  will be described below with regard to  for computing the expected value  of executing the instance.","From operation , the routine  proceeds to operation , where the management component  determines whether to grant the launch request  based upon the expected cost  and the expected value  from executing the instance. As discussed above, the management component  may permit the instance to be launched only if the expected value  exceeds the expected cost . In another embodiment, the management component  may permit the instance to be launched only if the expected cost  is less than a threshold percentage of the expected value . For example, the management component  might grant the launch request  only if the expected cost  is 10% or less of the expected value . Other models might also be utilized to specify the relationship between the expected cost  and the expected value  under which a launch request  should be granted.","If the management component  determines that the launch request  cannot be granted, the routine  proceeds from operation  to operation . At operation , the management component  informs the customer that submitted the launch request  that the request cannot be granted. The routine  then proceeds from operation  to operation , where it ends.","If the management component  determines that the launch request  can be granted, the routine  proceeds from operation  to operation . At operation , the management component  instructs the deployment component  to launch the requested instance. The deployment component , in turn, causes the instance to be launched on one of the server computers  in the PES platform  utilizing the launch configuration specified by the customer. The routine  then proceeds from operation  to operation , where it ends.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 6","b":["600","410","206","108","600","602","210","402"]},"From operation , the routine  proceeds to operation , where the management component  determines the expected monetary costs of executing the instance over its expected lifetime. As mentioned above, the monetary costs might include the actual costs for hardware or software, electricity, facilities, personnel, and other resources necessary to execute the instance over the course of its lifetime. Once the monetary costs of executing the instance have been determined, the routine  proceeds from operation  to operation .","At operation , the management component  determines the opportunity cost of launching and executing the instance. As mentioned above, launching an instance might prevent the PES  from executing another more valuable instance for the same or a different customer. In this case, the operator of the PES  will suffer an actual, quantifiable opportunity cost if the launch request  is granted. The management component  quantifies this opportunity cost at operation .","From operation , the routine  proceeds to operation , where the management component  estimates any risk associated with granting the launch request . For instance, as discussed above, a risk of correlated failure might be present if an instance is launched on the same server or data center as another instance for the same customer. In such a case, the management component  might quantify the risk of granting the launch request  based upon the location of the available slots for launching the requested instance and other currently executing instances owned by the customer that submitted the launch request .","From operation , the routine  proceeds to operation , where the management component  determines the cost of the risk associated with granting the launch request . For example, the management component  might multiply the cost associated with a correlated failure by the risk of the correlated failure determined at operation  in order to determine the estimated cost of the risk. Other mechanisms might also be utilized to determine a cost of risk associated with launching a virtual machine instance.","From operation , the routine  proceeds to operation , where the management component  determines the expected quality of service to be provided to the new instance if the launch request  is granted. For example, the management component  might communicate with the deployment component  or another component executing within the PES  in order to determine the available computing resources or network bandwidth available to the new instance.","The routine  then continues to operation , where the management component  determines the cost of the loss of goodwill, if any, as a result of executing the instance at the level of service identified at operation . For example, if the instance executes slowly or the network bandwidth is limited, the customer that submitted the launch request  may be dissatisfied and the operator of the PES  might consequently incur a loss of goodwill. The management component  quantifies the loss of goodwill, if any, at operation .","From operation , the routine  proceeds to operation , where the management component  determines any other costs of executing the new instance. The routine  then proceeds to operation , where the management component  sums the cost factors  computed at operations - to generate an expected cost  of executing the instance. As mentioned above, each of the cost factors  might also have an associated weight that is utilized prior to summing the costs factors . Other types of models might also be utilized to generate the expected cost  of the instance using the cost factors  in other embodiments. From operation , the routine  proceeds to operation , where it ends.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 7","b":["700","412","206","108","700","702","210","404","404","402","402"]},"From operation , the routine  proceeds to operation , where the management component  determines the expected income associated with the execution of the virtual machine instance over its expected lifetime. The routine  then proceeds to operation , where the management component  quantifies the value of any goodwill gained from execution of the virtual machine instance . For example, the launch and execution of the instance might result in positive, quantifiable goodwill to the operator of the PES platform .","From operation , the routine  proceeds to operation , where the management component  quantifies the value of any indirect income associated with the execution of the requested virtual machine instance. For example, if the operator of the PES  also operates an e-commerce Web site or other type of income-producing site on the PES , the launch and execution of the virtual machine instance might produce income to the operator. The management component  quantifies this value at operation .","From operation , the routine  proceeds to operation , where the cost of not executing the instance may be determined. For example, there may be a significant cost of lost goodwill if the management component  determines that the instance should not be launched. A highly valued customer may be upset that the instance cannot be executed as request and, as a result, there may be a significant loss of goodwill. There might also be other costs associated with not executing the instance. These costs may be computed and utilized to compute the value of executing the instance in one embodiment.","From operation , the routine  proceeds to operation  where the management component  sums the value factors  computed at operations - to generate an expected value  of executing the instance. As mentioned above, each of the value factors  might also have an associated weight that is utilized prior to summing the value factors . Other types of models might also be utilized to generate the expected value  of the instance using the value factors  in other embodiments. From operation , the routine  proceeds to operation , where it ends.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 8","FIG. 8"],"b":["800","102","102","202","202","104"]},"The computer  includes a baseboard, or \u201cmotherboard,\u201d which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. In one illustrative embodiment, one or more central processing units (\u201cCPUs\u201d)  operate in conjunction with a chipset . The CPUs  are standard programmable processors that perform arithmetic and logical operations necessary for the operation of the computer .","The CPUs  perform the necessary operations by transitioning from one discrete, physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states, such as flip-flops, and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements, such as logic gates. These basic switching elements may be combined to create more complex logic circuits, including registers, adders-subtractors, arithmetic logic units, floating-point units, and the like.","The chipset  provides an interface between the CPUs  and the remainder of the components and devices on the baseboard. The chipset  may provide an interface to a random access memory (\u201cRAM\u201d) , used as the main memory in the computer . The chipset  may further provide an interface to a computer-readable storage medium such as a read-only memory (\u201cROM\u201d)  or non-volatile RAM (\u201cNVRAM\u201d) for storing basic routines that that help to startup the computer  and to transfer information between the various components and devices. The ROM  or NVRAM may also store other software components necessary for the operation of the computer  in accordance with the embodiments described herein.","The computer  may operate in a networked environment using logical connections to remote computing devices and computer systems through the network . The chipset  may include functionality for providing network connectivity through a network interface controller (\u201cNIC\u201d) , such as a gigabit Ethernet adapter. The NIC  is capable of connecting the computer  to other computing devices over the network . It should be appreciated that multiple NICs  may be present in the computer , connecting the computer to other types of networks and remote computer systems.","The computer  may be connected to a mass storage device  that provides non-volatile storage for the computer. The mass storage device  may store system programs, application programs, other program modules, and data, which have been described in greater detail herein. The mass storage device  may be connected to the computer  through a storage controller  connected to the chipset . The mass storage device  may consist of one or more physical storage units. The storage controller  may interface with the physical storage units through a serial attached SCSI (\u201cSAS\u201d) interface, a serial advanced technology attachment (\u201cSATA\u201d) interface, a fiber channel (\u201cFC\u201d) interface, or other type of interface for physically connecting and transferring data between computers and physical storage units.","The computer  may store data on the mass storage device  by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of physical state may depend on various factors, in different implementations of this description. Examples of such factors may include, but are not limited to, the technology used to implement the physical storage units, whether the mass storage device  is characterized as primary or secondary storage, and the like.","For example, the computer  may store information to the mass storage device  by issuing instructions through the storage controller  to alter the magnetic characteristics of a particular location within a magnetic disk drive unit, the reflective or refractive characteristics of a particular location in an optical storage unit, or the electrical characteristics of a particular capacitor, transistor, or other discrete component in a solid-state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description, with the foregoing examples provided only to facilitate this description. The computer  may further read information from the mass storage device  by detecting the physical states or characteristics of one or more particular locations within the physical storage units.","In addition to the mass storage device  described above, the computer  may have access to other computer-readable storage media to store and retrieve information, such as program modules, data structures, or other data. It should be appreciated by those skilled in the art that computer-readable storage media can be any available media that provides for the storage of non-transitory data and that may be accessed by the computer .","By way of example, and not limitation, computer-readable storage media may include volatile and non-volatile, removable and non-removable media implemented in any method or technology. Computer-readable storage media includes, but is not limited to, RAM, ROM, erasable programmable ROM (\u201cEPROM\u201d), electrically-erasable programmable ROM (\u201cEEPROM\u201d), flash memory or other solid-state memory technology, compact disc ROM (\u201cCD-ROM\u201d), digital versatile disk (\u201cDVD\u201d), high definition DVD (\u201cHD-DVD\u201d), BLU-RAY, or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to store the desired information in a non-transitory fashion.","The mass storage device  may store an operating system  utilized to control the operation of the computer . According to one embodiment, the operating system comprises the LINUX operating system. According to another embodiment, the operating system comprises the WINDOWS\u00ae SERVER operating system from MICROSOFT Corporation. According to further embodiments, the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized. The mass storage device  may store other system or application programs and data utilized by the computer , such as the management component , and\/or the other software components described above.","In one embodiment, the mass storage device  or other computer-readable storage media is encoded with computer-executable instructions which, when loaded into the computer , transforms the computer from a general-purpose computing system into a special-purpose computer capable of implementing the embodiments described herein. These computer-executable instructions transform the computer  by specifying how the CPUs  transition between states, as described above. According to one embodiment, the computer  has access to computer-readable storage media storing computer-executable instructions which, when executed by the computer , perform the routines , , and , described with regard to , respectively.","The computer  may also include an input\/output controller  for receiving and processing input from a number of input devices, such as a keyboard, a mouse, a touchpad, a touch screen, an electronic stylus, or other type of input device. Similarly, the input\/output controller  may provide output to a display, such as a computer monitor, a flat-panel display, a digital projector, a printer, a plotter, or other type of output device. It will be appreciated that the computer  may not include all of the components shown in , may include other components that are not explicitly shown in , or may utilize an architecture completely different than that shown in .","Based on the foregoing, it should be appreciated that technologies for launching virtual machine instances in a PES have been presented herein. It should be appreciated that although the embodiments disclosed herein have been described in the context of launching virtual machine instances in a PES, the various aspects described herein might also be utilized to launch other types of software in other types of environments. The embodiments disclosed herein might also be utilized when instantiating other types of computing resources for customer use in a PES, and in other types of environments.","Although the subject matter presented herein has been described in language specific to computer structural features, methodological acts, and computer readable media, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features, acts, or media described herein. Rather, the specific features, acts, and mediums are disclosed as example forms of implementing the claims.","The subject matter described above is provided by way of illustration only and should not be construed as limiting. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described, and without departing from the true spirit and scope of the present invention, which is set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
