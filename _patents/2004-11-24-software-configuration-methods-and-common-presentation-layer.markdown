---
title: Software configuration methods and common presentation layer
abstract: Methods and systems for backing up data of a client connected to a server. The methods and systems include operating a graphical user interface for displaying to a user information about the data of a client. At an administrator module and client module, initiating one or more wizard program modules including dynamic link libraries configured to carry a user through the steps to complete a backup function, each wizard program module having one or more application programming interfaces which allow the wizard program modules to communicate with the operating system on which the administrator module or client module is operating. A common presentation layer can also be included to provide one or more common user interface screens which are insertable into each wizard program module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07716684&OS=07716684&RS=07716684
owner: EMC Corporation
number: 07716684
owner_city: Hopkinton
owner_country: US
publication_date: 20041124
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["1. The Field of the Invention","The present invention relates to wizard applications. Specifically, the present invention relates to a modular architecture for wizard applications and also to wizard applications with a common look and feel regardless of the operating system platform on which the wizard applications are operating.","2. The Relevant Technology","Wizard utility applications have conventionally been used to allow a computer user (e.g., a client user, developer, technician, or programmer) to perform an operation on a computer by providing a series of steps and offering assisting in completing these series of steps. However, wizard applications are generally operating system platform specific. For example, a wizard application on a Windows NT operating system cannot be easily implemented on a Solaris operating system.","Furthermore, even if the user were to place the wizard application on a different operating system, the user is not ensured that all of the application programming interface (APIs) will be available to be able to communicate with the operating system platform.","In addition, when wizard applications are used on different operating systems, they can have a different look and feel which makes interacting with the wizard application difficult if a user is not familiar with the different looks and feels on various operating systems. In fact, even when a wizard application is designed for another platform, it typically does not provide the same look and feel as on other platforms.","There are many situations where this lack of a common look and feel can reduce the effectiveness of a wizard application. A software programmer, for example, may spend more time than is necessary when implementing wizards on different platforms. Further, the user does not always have time or the expertise to perform the extensive programming changes that would allow a wizard application to run more effectively on a different operating system.","The present invention relates to systems and methods for configuring client resources for an operation such as backing up the client resources or restoring the client resources. Embodiments of the invention include a wizard configuration application with an architecture that facilitates operation of a wizard application for multiple users, such as, but not limited to, network administrators, software developers or programmers, technicians, customer services representatives, client users, and the like.","Embodiments of the invention are described in the context of a system that performs backup and restore operations for client data. One of skill in the art can appreciate, however, that embodiments of the invention are applicable to other base applications.","Embodiments of the invention are useful to demonstrate how a backup process can perform a backup of a particular application or file system. Also, embodiments of the invention can be used to configure client resources as well as provided a common look and feel across platforms.","1. Exemplary Operating Environment",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","102","104","102","102","106","108","106","108","108","109"]},"Thus, each client  and  represents a system with data to be backed up. Each client  and  can be relatively simple (e.g., a desktop computer) or relatively complex (e.g., a large database server or a cluster of servers). The client  or  may further be a network or a storage area network (SAN). Each client  and  may operate under a different operating system or platform than the server . The administrator computer  may also be a client.","In the context of a backup operation, a user may operate administrator computer  to control the server  in order to effectuate a backup operation on a client  or  or to schedule future backup processes for the clients  and . However, a user can also initiate a backup operation directly from server  or client  or . A user may establish a schedule that defines the times at which the server  automatically performs a backup operation on the data of clients  or .","Once initiated by the server , a backup process typically operating on a client controls and directs all server initiated backup operations or recovery operations. The client  or  may also initiate ad hoc backup operations. Data is backed up, in one embodiment, using backup groupings. Each backup grouping is a collection of data or items that are backed up during a backup operation between the server  and a particular client  and\/or . A backup grouping can therefore include a group of files, an entire file system, application-generated data, such as a database or operating system information, and the like. A backup grouping may also include applications or services and their associated writers.","In the example of , the server  has access to backup storage . The backup storage  can be integrated with the server  or may be distinct and separate from the server . The data  represents the data on client  or  that has been backed up by the server  on the backup storage . Backup storage  can be implemented in relation to server  in various ways, for example, as direct attached storage (DAS), network attached storage (NAS), or storage area network (SAN).","The server  also stores and manages a client file index  and a media volume  both on the server itself and on the backup storage . The client-file index  is an index of the backed up data items. The media volume  is an index of volumes. The client file index  and the media volume  are collectively referred to herein as the \u201conline indexes\u201d. The online indexes are typically stored on the backup storage  after the backup operation is complete.","Server  includes a storage management application  directing high-performance writes to various storage devices, e.g., backup storage , whether local or remote. In the event that the site experiences a disaster, server  can recreate all the client  or  and\/or server  file systems to their original structure, as they existed when written to storage. A user operates one or more wizard applications (described below) to run or configure the backup or storage management application . The wizard application assists the user in performing the steps necessary to carry out the backup of one or more client file systems or other types of data.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2","b":["200","202","204","202","204","206","208"]},"Administrator module  is typically located on user machine or administrator computer . Client module  is typically operating on a client . However,  illustrates that administrator module  and client module  can be located on the same device, for example, a network server . In another embodiment, shown in , administrator module  and client module  can be located on different devices and directly or indirectly through a network configuration. In addition, wizard configuration application  can communicate directly or indirectly with backup application , which is typically located on a network server such as server  illustrated in . As such, it will be appreciated that backup application , administrator module , and\/or client module  could be located on the same computer. In other embodiments, backup application , administrator module , and client module  can each be located on a separate machine or computer in such a way that they are able to communicate and\/or transfer data.","For purposes of description, client  will be used as an exemplary client being configured for data backup, even though it is understood that both clients  and  could be running client module  and be configured for backup.","Backup application  provides the coordination for back-up, write, recovery, data life-cycle, and volume management operations of the file system data of various clients  or . The wizard configuration application  overlaps or sits on top of the backup application  and controls communication between the client module  and the backup application . The wizard configuration application  also provides the user interface through which users can operate one or more wizard applications which drives the functionality of the backup application . Thus, backup application  and wizard configuration application  may use some of the same information retrieved from client module  in order to carry out their tasks.","More details regarding aspects of backup application  can be found at co-pending U.S. patent application Ser. Nos. 10\/935,552, filed Sep. 7, 2004, and 10\/935,551, filed Sep. 7, 2004, which are incorporated herein by reference.","2. Wizard Configuration Application","As discussed above,  illustrates a system A having a wizard configuration application  that includes an administrator module  and a client module . In one embodiment, the administrator module  is a collection of processes and programs installed on administrator computer  that provides a user with administrative capabilities to be able to interface with backup application  and client module . Exemplarily, this is accomplished by providing a graphical user interface and one or more wizard applications, described in more detail below. Thus, although backup application  is configured to execute many functions independently, administrator module  has the ability to control and influence the functionality of the backup application . In one embodiment, the wizard configuration application  configures the client for backup and restore processes. Advantageously, the wizard configuration application  provides a common look and feel across operating systems and also provides a library of user interfaces.","In one embodiment, the client module  is a collection of processes and programs installed on client . Client  contains data to be backed-up, or, more basically, can be any machine in the server environment with data to be backed-up. Backing up the client module  includes the use of backup groupings. Each backup grouping identifies, for example, an application, set of application, or a file system to be backed up. In some instances, each application included in the backup groupings should be backed up together to preserve a state of the client.","For purposes of explanation, the wizard configuration application  can have a bifurcated configuration in which some modules or components reside on the administrator module  (referred to as \u201cadministrator-side\u201d) and other modules reside on the client module  (referred to as \u201cclient-side\u201d), the administrator-side modules and components and client-side modules and components interacting to produce the particular functionality of the wizard applications of the present invention. However, as illustrated in , all the modules necessary to implement a wizard application can reside on a single computer, for example, in a client-user situation.","In greater detail, as shown in , administrator module  includes a graphical user interface (GUI) . The GUI  is an executable application that serves as an interface for displaying user interface screens for allowing the user to configure, select and\/or operate one or more wizard applications (discussed below). When administrator module  is initiated, GUI  forms a connection between backup application  and administrator module . GUI  also establishes a connection between administrator module  and client module . The connection between administrator module  and client module  establishes communication between the administrator module  and client module  so that the GUI  makes available information about client  to the user at administrator module .","The GUI  can allow a user to select a server , wizard application type, and one or more clients . The user can then select through GUI  the particular function desired to be performed on each client . It will be appreciated that depending on the content of the client , the potential functions that are actually performed on each client may vary from client to client. Thus, operation of the GUI  initiates and drives the other functions of wizard configuration application .","The GUI  interacts with and allows a user to operate one or more wizard applications which are configured to perform particular functions. Examples of types of wizard applications include server configuration wizard applications, client configuration wizard applications, database configuration wizard applications, and file system configuration wizard applications. A server configuration wizard allows a user to select one or more servers. A client configuration wizard allows a user to select one or more clients to be backed up. After a user has selected one or more clients, a database configuration wizard may be used to allow the user to select database data to be backed up. Alternatively, the file system configuration wizard allows a user to select certain file system data to be backed up. In any case, the wizard applications generally provide user interface screens that carry the user through the various steps required to perform the desired operation. Each wizard application type can be accessed through the GUI .","As shown in , a plurality of administrator-side wizard program modules A through N resides on administrator module . Corresponding client-side wizard program modules A through N reside on client module . Exemplarily, administrator-side wizard program module A and client-side wizard program module A cooperate to form a wizard application. Each administrator-side wizard program module A through N includes a dynamic link library (DLL) A through N, respectively. Similarly, client-side wizard program modules A through N include DLLs A through N, respectively. DLLs A through N and DLLs A through N generally load user interface screens onto the GUI  and provide the functionality to perform the particular function for that wizard application depending on the information the user inputs into the user interface screens.","Exemplarily, wizard program modules A and A correspond to a server configuration wizard application, wizard program modules B and B correspond to a client configuration wizard application, wizard program modules C and C correspond to a database configuration wizard application, and wizard program modules D and D correspond to a file system configuration wizard application. That is, the wizard program modules A and A are configured to detect the server configuration. Wizard program modules B and B are configured to detect the client configuration. Wizard program modules C and C are configured to backup database data such as, but not limited to, Oracle Database server, SAP Database data, Microsoft Exchange server data, or Microsoft SQL server data. Finally, wizard program modules D and D are configured to backup file system data. It will be appreciated that more than one of each type of wizard applications can exist on wizard configuration application . For example, where it is desired to enable wizard configuration application  with the ability to backup more than one type of database data (e.g., Oracle Database server, SAP, Microsoft Exchange Server, and Microsoft SQL Server), a wizard program module  and  will be configured particular to each type of database data. Furthermore, it will be appreciated that not all types of these wizard applications need exist in a particular embodiment of wizard configuration application . Further, additional wizard applications configured to perform different functions may also exist on wizard configuration application.","As shown in , the wizard configuration application  includes a modular architecture for implementing wizard applications formed by administrator-side and client-side wizard program modules  and . The modular nature of wizard configuration application  allows new wizard applications to be written for the particular type of data for which they are being used and then loaded onto administrator module  and\/or client module . It will be appreciated that additional DLLs can be programmed and added as needed to supplement administrator module  to accommodate backup of different types of data and to accommodate client configuration. For example, administrator-side wizard program module N and client-side wizard program module N represents a wizard application that can be separately programmed and configured and then installed on administrator module  and client module . DLLs N and N thus represent that DLL modules can be created for different client configurations, server configurations, file system configurations, and database configurations. The modular architecture of wizard configuration application  provides that programmers can thus upgrade the abilities of wizard configuration application  as needed. For example, a wizard application may exist to configure any type of device which may be associated with system  including, but not limited to, servers , administrator computers , clients , storage devices , backup storage , and the like, whether directly or remotely connected.","Administrator-side DLLs A through N and client-side DLLs A through N are each a library of functions or data that can be accessed by backup application  and\/or wizard configuration application  in order to carry out the backup and\/or recovery of the particular data. Administrator-side DLLs A through N and client-side DLLs A through N are accessed as needed depending on the particular backup being performed and the particular operating system on which the administrator module  and client module  may be operating. Further, each of administrator-side DLLs A through N and client-side DLLs A through N can be used by several programs at the same time.","When a user accesses GUI  and requests backup of a particular data type, the administrator-side DLLs A through N serves as a main driver for servicing the request from the user. That is, the administrator-side DLLs A through N sequence and load user interface screens that allow the user to select the required configuration information. Configuration information defines the parameters of the particular backup function that the backup application will perform. As such, the configuration information may change for each client. In addition, it is possible for a number of different backup functions to take place on a particular client so that configuration information must be specified for each process. The user generally uses GUI  to define configuration information for each backup operation. GUI  can create records that specify instructions to a high level of detail. Alternatively, the user can rely on pre-configured records to run the wizard applications.","Examples of the configuration information that GUI  can define include, but are not limited to, the storage devices  that server  will use, the number of clients , and the number of client connections that the server  can accept. In addition, the configuration information may also specify rules that the backup application  will enforce for a particular back-up and\/or recovery function. Examples of these enforced rules include back-up schedules, the amount of time data is protected before being automatically recycled by the application, and which clients are able to recover data directly.","In terms of pools of volumes, configuration information also includes directing data to specific pools. GUI  can be used to segregate files into specific pools of volumes according to different file characteristics. The user can also use GUI  to define criteria to specify which backup groupings of data can be written onto a pool's volumes.","In addition, the user can use GUI  to define levels of obsolescence. Backup application  will monitor the status of stored data and automatically rotate it through the tracking system as it reaches levels of obsolescence defined by the user. The user can also select backup groupings for participation in a scheduled back-up. A backup grouping could include one or more files, directories, files systems, applications, and\/or services, or all the files on a client machine.","Defining configuration information generally requires that administrator-side DLLs A through N and client-side DLLs A through N transmit data back and forth in order to allow the user to select the data to be backed up. In one embodiment, the administrator-side DLLs  can perform a request function while the client-side DLLs  perform a retrieve function. Requesting can include selecting the data to be backed up by defining backup groupings or client resources and retrieving can include detecting the data on the client .","In addition to the modular architecture of wizard configuration application , application  simultaneously ensures that the wizard applications will operate even when the administrator module  and client module  are operating on different platforms. The GUI  of administrator module  can interface with other operating system platforms on which client module  may be operating, allowing administrator module  to interface with and broker services for any client module . For example, administrator module  could be operating on Windows operating system while the client module  could be operating on a Linux operating system. Conventional wizard applications do not efficiently handle incompatibilities between operating systems and thus would make communication between the administrator module  and client module  difficult. However, the present invention provides that communication between administrator module  and client module  is possible and unaffected by differences in platforms. This may be especially advantageous where administrator modules  and client module  are located on different computers (see ).","The administrator module  provides communication between different operating systems on administrator computers , clients  and server  by having the DLLs A through N include operating-system-specific application programming interfaces (APIs) A through N that allow the administrator-side wizard program modules A through N to communicate with the operating system on which the administrator module  is operating. The APIs A through N can be gathered from code network libraries for specific operating systems. Examples of APIs include Oracle Call Interface (OCI), SQLDMO, etc. Similarly, the client-side DLLs A through N provide particular APIs A through N that allow the client-side wizard program modules A through N to communicate with the operating system of the client module .","One aspect of the present invention is to provide a common look and feel among the various wizard applications that the user may use. In one embodiment, wizard configuration application  includes a common presentation layer (CPL) . Administrator-side DLLs A through N have a static link to CPL . CPL A is responsible for providing the common look and feel to the wizard applications created and\/or operated on the wizard configuration application . CPL  includes a library of dialogue boxes or common user interface screens  applicable to all wizard applications. The administrator-side DLLs A through N access CPL  to retrieve these common user interface screens  and loads them onto GUI . Examples of common user interface screens include, but are not limited to, server selection, client selection, group selection, summary, results, and the like. Preferably, the common user interface screens  are self contained so that they can be independently inserted into various wizard applications and these screens can also be inserted in to any other window application, e.g. a single or multi document window application can also use CPL screens as a dialog boxes.","The CPL  also includes application programming interfaces (APIs)  to insert the common user interface screens  into any administrator-side wizard program module A through N supported on any operating system platform. Thus, a user is able to configure a common user interface screen  to contain or request certain data and is ensured that the common user interface screen will be insertable into an administrator-side wizard program module A through N or client-side wizard program module A through N, for example, or any other backup application and can be used on any platform. New common user interface screens  may be added to CPL  as needed to enhance the functionality of software application A.","Many of the functions required for the wizard application are included in the CPL  so that the user will be required to perform a minimal amount of programming. Furthermore, the wizard applications will have the same look and feel user interface on all operating system platforms whether the operating system is Solaris (e.g., 32 bit and 64 bit), AIX, HP, Windows (e.g., 2000, NT, XP, 2003), Unix, Linux, OpenVMS, Macintosh, Tru64 Unix 5.0A and 5.1, and the like. The present invention thus allows a developer who does not have extensive knowledge of different operating systems to apply a wizard application on various operating system platforms.","However, it will be appreciated that the administrator-side DLLs A through N and the client-side DLLs A through N can contain different user interface screens as part of the data which they contain and can load these user interface screens as needed. DLLs  and  can contain common user interface screens or different user interface screens specific to the particular backup operation they are going to perform. As such, CPL  is not necessarily required in order to perform backup operations.","In one embodiment, shown in , CPL  can be located on the administrator-side . This can be advantageous in order to reduce the size of the footprint of client module , for example, if client module  is located on a client . In the embodiment where CPL  is located only on the administrator module , administrator-side DLLs A through N may communicate directly with client-side DLLs A through N. However, as shown in , CPL  can be bifurcated into an administrator-side CPL A and client-side CPL B. The administrator side CPL A and client-side CPL B communicate to provide common user interface screens on the administrator-side and any associated retrieval function required on the client-side.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 3","b":["200","204","226","226","226","230","216","216","220","226","230"]},"CMCC  facilitates communication between the administrator module  and the client module , providing the framework for interaction between the administrator module  and client module . In one embodiment, CMCC  uses a single API  to establish communication between the administrator-side CMCC A and client-side B. Consequently, this establishes communication between administrator module  and client module . Communication between the administrator module  and client module  is based on the remote procedure (RPC) and Rapid Application Prototyping (RAP) calls. It will be appreciated that communication between administrator module  and client module  can occur by other means or through multiple APIs. Thus, CMCC  is not required in order to perform the present invention. More details regarding embodiments of CMCC  are disclosed in co-pending U.S. patent application Ser. No. 10\/997,576, entitled \u201cSoftware Configuration Methods and Client Module Communication Component,\u201d which has been filed on the same day as the present invention and is incorporated herein by reference.","The following example illustrates one embodiment of how the wizard configuration application  can operate. For example, suppose a user desires to backup Exchange Server data on a client . If the administrator module  is operating on Unix, the GUI  accesses the wizard program module C which is, for purposes of this example, configured to initiate the steps on the administrator-side for backing up Exchange Server data. The wizard program module C includes APIs C, one of which corresponds to a Unix operating system for allowing the GUI  to access DLLs C in wizard program module C.","DLLs C sequence and load various user interface screens onto GUI  in order for the user to provide the configuration data to specify a backup function for, in this example, Exchange Server data. In one embodiment, DLLs C uses common user interface screens  from CPL . In this example, where administrator module  is operating on a Unix platform, DLLs C access APIs  on CPL  corresponding to Unix.","Now, suppose client module  is running on a Windows operating system platform. CMCC A communicates with CMCC B to exchange information between the administrator module  and client module . CMCC B initiates wizard application module C which is configured, for purposes of this example, to initiate steps on the client side for backing up Exchange Server data. The CMCC B accesses APIs C corresponding to Windows platform to access the DLLs C in wizard program module C. The client-side DLL C corresponding to Exchange server gathers information from client  and pass the data to the administrator-side DLL C corresponding to Exchange server.","As shown in , wizard configuration application  can also include a SCC  on administrator module  in order to facilitate communication between the administrator module  and backup application . The administrator-side DLLs A through N have a static link to the SCC . The SCC  includes APIs  to communicate with server . As shown in , wizard configuration application  can also include a SCC  on administrator module  in order to facilitate communication between the administrator module  and backup application . The administrator-side DLLs A through N have a static link to the SCC . The SCC  includes APIs  to communicate with server . In one embodiment, a single API  is provided to communicate with server , similar to that for CMCC .","When GUI  is initiated, the administrator-side DLLs A through N initiates the SCC  to establish communication between the administrator module  and the backup application . The CPL A can also use the APIs  in the SCC  to communicate with backup application . Communication between the administrator module  and the backup application  in this manner allows the administrator module  to be aware of the servers  to which it is connected. In addition, the SCC  allows the administrator module  to detect the clients that are running on the network by having a client-side SCC B residing on client module .","As also shown in , wizard configuration application  includes a generic utility component (GUC) A located on the administrator module  which provides generic functions applicable to all administrator-side wizard program modules A through N. Such functions can include, but are not limited to, serializing outgoing RAP results stream to client  or de-serializing incoming RAP arguments from client . Client module  also includes a GUC B which provides generic functions applicable to all client-side wizard program modules A through N. Client-side DLLs A through N maintain a static link with client-side GUC B and thus can access the functions of the GUC B as needed. GUC B is the actual data collector which collects the information about the database data, file system data, or other particular data on client  to be backed up. Additional generic functions performed by client-side GUC B include, but are not limited to, writing or updating local client-side files with specified text input, encrypting text stream to be returned to the administrator module , deserializing incoming RAP arguments from the administrator computer , or serializing outgoing RAP results stream to administrator computer .","Finally,  illustrates that operation of the wizard configuration application  results in the data to be backed up being sent to a local or remote database (DB) or database management system (DBMS). Each client-side wizard program module A through N is configured to send the data to a DBMS A through N. It will be appreciated that DBMS A through N can be a backup storage  as shown in  or any other local or remote database management system.","3. Exemplary Method","With reference to , an exemplary method for operating the software application A or B is as follows. During operation, when a user desires to perform a backup function using a wizard application, the user accesses the GUI  on, for example, a user machine . At step , GUI  is initiated. At step , after GUI  is initiated, the GUI  loads one or more administrator-side wizard program modules A through N which, in turn, load one or more corresponding DLLs A through N. The GUI  accesses APIs A through N corresponding to the operating system on which the administrator module  is operating in order to access DLLs A through N.","At step , the administrator-side DLLs A through N loads the administrator-side CPL A. In addition, at step , the administrator-side DLLs A through N loads administrator-side CMCC A, which then connects to client-side CMCC B. In one embodiment, administrator-side CMCC A causes an API  to connect to client-side CMCC B so that administrator module  can request information from client module . At step , administrator-side DLLs A through N also loads SCC , connecting administrator module  to backup application  on server . SCC  provides APIs  to communicate with backup application . It will be appreciated that the order of the connection between backup application , administrator module  and server module  may vary.","With backup application , administrator module  and client module  connected, steps  and  represent the exchange of information between administrator module  and client module  and between administrator module  and backup application , respectively. SCC  can be used to detect network server  and clients  that are running on the network.","At step , GUI  provides user interface screens for the user to select the configuration information. The user interface screens are generally loaded by DLLs A through N. The configuration information can include the network server to use, the client to be backed up, the type of data to be backed up on the client. As discussed above, selecting configuration information includes inserting information into user interface screens provided by a particular wizard program module which is configured for a particular wizard application. DLLs A through N sequence and load the user interface screens onto GUI . In one embodiment, this can include using common user interface screens provided by CPL A and loaded by administrator-side DLLs A through N. DLLs A through N access the API  of CPL  corresponding to the operating system on which the administrator module  is operating.","Selecting the network configuration can include initiating a server configuration wizard application and client configuration wizard application. Wizard program modules A and A and B and B can exemplarily be used to detect and select network configurations.","Configuration information for database configuration wizard applications and file system configuration wizard applications can include selecting a backup grouping or client resource. Selecting a backup grouping or client resource can exemplarily include the following steps. Wizards program modules C and C and D and D can exemplarily be used to detect and select modules or file systems to be backed up. Administrator-side DLLs C or D decodes the data from the client module  and loads a user interface screen to display the data on the GUI  for the user. The user interface screen can include the option of creating or updating a backup group or client resource selection. The user interface screen allows the user to search the files in the network server, form backup groupings or client resources, takes the user inputs, validates the user inputs, and passes the selected backup grouping or client resource name to administrator side DLLs A through N. Administrator-side DLLs A through N formats the data and then loads a user interface screen so that the user can view a summary of the configuration information it has selected. The user can indicate his\/her final selection by selecting a \u201ccreate\u201d button. Once the user hits the \u201ccreate\u201d button, at step , the wizard configuration application  creates the backup grouping and\/or client resource. After creating the backup grouping or client resource, the administrator-side DLLs A through N loads another user interface screen onto GUI  to allow a user to configure another backup group or client resource. In each of these steps, it will be appreciated that loading of a user interface screen onto the GUI  can include loading a common interface screen accessed from the CPL .","As mentioned above, wizard applications formed by wizard program modules  and  can contain DLLs  and  specific to the type of data that the user wants to back up. For example, if the user at step  decides to perform a backup of the Exchange server, administrator-side DLL C which is configured for Exchange server data is selected by GUI  to retrieve information from client . In this particular example, configuration information can include, but is not limited to, the operating system on which the client  is operating, the client version, the domain, the database list, the number of storage groups and Exchange servers, the name of the storage group, how many mail boxes there are, and the like. APIs A through N allow the wizard modules A through N to be compatible with wizard modules A through N even if the wizard modules are executed on different operating system platforms.","At step , the backup application  performs the backup function based on the designated configuration information. The process can then repeat again for a different backup process.","It will be appreciated that the above steps can take place in a different order or that different steps can be added or eliminated. In another embodiment, after loading GUI , the GUI  could load CPL A. The CPL A can then be used to initiate the administrator-side DLLs A through N. Either CPL A or DLLs A through N could then be used to initiate CMCC A. After CMCC B is initiated, CMCC B could then initiate GUC B which would then be used to initiate client-side DLLs A through N.","In embodiments where CMCC  is not present, administrator-side DLLs A through N could initiate client-side DLLs A through N. Similarly, where CMCC  is not present, CPL A could initiate DLLs A through N. Other configurations are also possible.","The present invention thus allows a user to perform all of the tasks required to configure a backup using wizard configuration application . The present invention allows a user to efficiently configure devices, clients, and create backup groupings and client resources. The present invention also provides efficiency by having a common look and feel across all operating system platforms. The present invention further ensures that various common user interface screens can be inserted in various modules regardless of operating system platform.","The present invention can provide efficiency in a number of situations in which a user implements the backup application . For example, an administrator working on a large network can efficiently configure a number of clients for backup operations, regardless of differences in operating system platforms. In one embodiment, the administrator can remotely configure the devices, clients and backup groupings. Advantageously, the administrator can include additional wizard applications as needed because of the modular architecture of the wizard configuration application .","Additionally, the administrator can load the wizard configuration application  onto any client computer (including the client to be backed up) and configure one or more clients for backup operations.","Advantages of the present invention can also be recognized, for example, in a customer service environment where a customer service representative is explaining to a client user how to configure a backup operation. The customer service representative can perform a very quick demonstration on how to configure the device, the client, the backup grouping, or the client resource. In situations where the client user can vary from situation to situation and where the client user may be operating on different platforms, it will be appreciated that the present invention enhances efficiency of even this aspect of using the backup application .","The present invention extends to both methods and systems for backing up data. The embodiments of the present invention may comprise a special purpose or general-purpose computer including various computer hardware, as discussed in greater detail below. Embodiments within the scope of the present invention also include computer-readable media for carrying or having computer-executable instructions or data structures stored thereon. Such computer-readable media can be any available media that can be accessed by a general purpose or special purpose computer. By way of example, and not limitation, such computer-readable media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to carry or store desired program code means in the form of computer-executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. When information is transferred or provided over a network or another communications connection (either hardwired, wireless, or a combination of hardwired or wireless) to a computer, the computer properly views the connection as a computer-readable medium. Thus, any such connection is properly termed a computer-readable medium. Combinations of the above should also be included within the scope of computer-readable media. Computer-executable instructions comprise, for example, instructions and data which cause a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions.","The following discussion is intended to provide a brief, general description of a suitable computing environment in which the invention may be implemented. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by computers in network environments. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Computer-executable instructions, associated data structures, and program modules represent examples of the program code means for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.","Those skilled in the art will appreciate that the invention may be practiced in network computing environments with many types of computer system configurations, including personal computers, hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked (either by hardwired links, wireless links, or by a combination of hardwired or wireless links) through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["To further clarify the features and advantages of the present invention, a more particular description of the invention will be rendered by reference to specific embodiments thereof which are illustrated in the appended drawings. It is appreciated that these drawings depict only typical embodiments of the invention and are therefore not to be considered limiting of its scope. The invention will be described and explained with additional specificity and detail through the use of the accompanying drawings in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
