---
title: Information pointers
abstract: A system supports the use of information pointers. The information pointers provide audio and/or visual information about objects to which the cursors point. For instance, an information cursor may provide output specifying the name of an object to which the cursor points. In addition to information about the object pointed to by the cursor, information windows provide information about the user's interaction with the object. For example, “Deleting Source File.” Information windows may contain information pertaining to a pair of objects, such as the source and target object in a drag and drop operation, or to a collection of objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06948126&OS=06948126&RS=06948126
owner: Microsoft Corporation
number: 06948126
owner_city: Redmond
owner_country: US
publication_date: 20030116
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application is a continuation of prior U.S. patent application Ser. No. 09\/234,624, filed Jan. 21, 1999 now U.S. Pat. No. 6,606,101, which is a continuation-in-part of U.S. patent application Ser. No. 08\/354,267, filed Dec. 12, 1994 (now abandoned), which is continuation of U.S. patent application Ser. No. 08\/146,931, filed Oct. 25, 1993 (now abandoned), priority from the filing dates of which is hereby claimed under 35 U.S.C. \u00a7 120.","The present invention relates generally to data processing systems and, more particularly, to display of objects on video displays in data processing systems.","Many operating systems provide a cursor that indicates a current position on a video display. The cursor is generally manipulable by an input device, such as a keyboard or a mouse. In certain operating systems, such as the Microsoft WINDOWS, version 3.1, operating system, which is sold by Microsoft Corporation of Redmond, Wash., a window may have a status bar that displays information about the object to which the cursor is currently pointing. As the cursor is moved to point at different objects, the contents of the status bar changes accordingly. The status bar is a separate graphic entity that is not connected to the cursor and does not move with the cursor. The status bar is positioned on the video display at a fixed location within a window. As such, a user has to look at two separate portions of the screen if he wishes to view both the cursor and the status bar. This separation of the status bar from the cursor can be confusing and burdensome to the user.","Some operating systems provide static context sensitive help. Static context sensitive help provides static help information about an object. The help information is displayed at a static screen location near the object with which the static context sensitive help is associated. An example of static context sensitive help is Balloon Help described in pp. 11-3 to 11-10. Static context sensitive help information is limited to what the user can do. Static context sensitive help information does not give the user any information about what the user is currently doing or what the user is about to do.","The limitations associated with the use of a status bar and static context sensitive help are overcome by the present invention. The present invention brings the object or action, the pointer (i.e., cursor), and the information into close proximity. In accordance with a first aspect of the present invention, a method is practiced in a data processing system having a video display, an output device and an input device. In this method, objects, including a cursor, are displayed on the video display. In response to a user using the input device, a selected object is designated by positioning the cursor over at least a portion of one of the objects that are displayed. If the output device is formed by the video display, textual and\/or graphical information about the selected object and\/or the user's interaction with the selected object is displayed in an information window adjacent to the cursor. Such information pointers can be very helpful to users.","If the output device includes an audio output device, e.g., a speaker, audio information about the selected object and\/or the user's interaction with the selected object is output over the audio output device. Audio information about a selected object and\/or the user's interaction with an object can be extremely beneficial to all users, but it is essential for blind users. Audio information pointers inform the user about what is happening or what is about to happen based on the user's interaction with the cursor, for example, \u201ccopying source to target,\u201d \u201cmoving source to target,\u201d or \u201clinking target to source.\u201d Audio information pointers can also notify the user that the cursor is at an edge of the display.","If the output device includes both the video display and an audio device, information about the selected object and\/or the user's interaction with the selected object can be output only on the video display, only on the audio device or on both the video display and the audio device. Irrespective of the output device(s), the information may be output either immediately after the cursor obscures a portion of the object, or after a specified \u201clinger\u201d period of time.","In accordance with another aspect of the present invention, a method is practiced in a data processing system having a video display, an audio output device and an input device, such as a mouse. In this method, a source object icon associated with a source object is displayed on the video display. A target object icon associated with a target object is also displayed on the video display. In response to the user using the input device, a cursor is positioned to be over at least a portion of the source object icon. In response to the cursor being over at least a portion of the source object icon, information is output about the source object. The information is output on the video display and\/or the audio output device. In response to the user using the input device, the source object icon is dragged across the video display until the cursor is over at least a portion of the target object icon. In response to the cursor being over the target object icon, information is output about the target object. Information is also output about the impending action between the source and target objects. For example, \u201ccopying source to target.\u201d This method may also include the additional step of dropping the source object icon on the target object icon in response to the user using the input device.","In accordance with a further aspect of the present invention, objects are displayed on the video display and a cursor is positioned on the video display to be over at least a portion of one of the objects. In response to the cursor being positioned over a portion of at least one of the objects, a window holding information about the object which the cursor is over is displayed on the video display. The window can contain multiple types of requested information. For example, one type of requested information may be the name of the object, while another type of requested information may be the size of the object. Both pieces of information will be displayed in the window in a logical order. Alternatively, multiple windows may be associated with, and displayed adjacent to, the cursor.","In accordance with an additional aspect of the present invention, an object is displayed on the video display and a context menu for the object is displayed on the video display in response to the user using the input device. The context menu includes an option for generating an information pointers window. When the user selects the option of generating the information pointers window, the information pointers window is displayed on the video display. The information pointers window holds information about the object and\/or the user's interaction with the object.","In accordance with a further aspect of the present invention, the user selects the format of the information pointer. The format may be: (i) the name of the object over which the cursor is positioned on the video display; (ii) information about the object; (iii) a graphical representation of the object, known as a preview; or (iv) any combination of the previously mentioned formats. Alternatively, the user may elect to not display an information pointer. In other words, the user may elect to display only the standard cursor.","In accordance with yet a further aspect of the present invention, the user's decision not to generate an information pointers window is overridden. The override is only applied to information deemed to be so critical in nature that it is imperative for the user to receive the information.","In accordance with yet another aspect of the present invention, an object is displayed on the video display and the object is selected in response to the user using the input device. A window holding information about the selected object is generated in response to the user using the input device. The window includes a pointer from the window to the selected object.","In accordance with a still further aspect of the present invention, a data processing system includes a video display for displaying at least one object. The data processing system also includes an input device for positioning the cursor on the video display. The data processing system further includes an audio output device for outputting audio information and an audio information generator. The audio information generator generates audio information about an object on the video display when the cursor is positioned over the object. In addition, the audio information generator forwards the audio information to the audio output device so that the audio information may be output.","In accordance with another aspect of the invention, the data processing system includes an input device in a video display for displaying objects in windows. The data processing system also includes an information window generator for generating information windows holding information about associated objects. Each information window includes a visual pointer that points to its associated object.","The preferred embodiment of the present invention provides \u201cinformation pointers\u201d which display graphical and\/or textual information and\/or output audio information about one or more objects to which the cursor points and\/or the user's interaction with the object(s). Each information pointer has two portions: a pointing portion and an information portion. The pointing portion is actually a standard cursor (e.g., arrow, hourglass, etc.). The pointing portion points to a position on a video display. The information portion is just like a \u201cnormal\u201d window. The information portion displays textual and\/or graphical information and\/or outputs audio information about the object and\/or the user's interaction with the object to which the pointing portion points. Like a \u201cnormal\u201d window, the graphical information can be any type of graphical information including images, full motion video, and dialog box controls. Visual information pointers are dynamic in that their shape, size and location on a video display are variable as required to efficiently display information to the user. When an information pointer is visible, only the appearance of the pointer changes, not its functionality. A user can still select, click and drag, double-click etc., with the standard pointer, the same hot spot, and with the same precision. Information pointers are made available by an operating system to applications that are run on the operating system. Information pointers are available in a number of different varieties. Information pointers included in an actual embodiment of the present invention are known as Quick Info Windows. Quick Info Windows provide information about an object selected by a user. An example of a Quick Info Window is illustrated in FIG.  and described below.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 1","b":["10","10","12","10","14","16","18","20","23","14","14","22","24","22","18"]},"Information pointers can be presented in a variety of formats. , described in detail below, show several examples of information pointers. The examples show how information pointers provide information about various types of objects, as well as the use of a variety of formats for outputting the information. In an actual embodiment of the present invention, the user can choose to display an information pointer from among the following formats: name; information; preview; or any combination thereof. The user can also select none (i.e., no information pointer). If the user selects the name option, when the tip of a cursor arrow obscures a portion of an object, the name of the object will be displayed in an information box located at the tail of the cursor arrow and\/or the name will be output over the audio output device. Examples of name information pointers are shown in detail in . Additional examples of name information pointers are shown in FIGS. P-P. If the information option is selected, when a portion of an object is obscured by the tip of a cursor arrow, any additional information as specified by the operating system and\/or application program(s) will be output. Examples of information pointers using both the name and the information option are shown in . If the preview option is selected, when the tip of a cursor arrow obscures a portion of the object, a pictorial representation of the contents of the object will be output. Examples of preview information pointers are shown in FIGS. Q-Q. If the user selects none, normally, no information will be output when the tip of a cursor obscures a portion of an object. An exception occurs when information is deemed critical in nature. In this case information is output even though the user has selected none. Examples of critical information are the full name of an object if the name is not displayed or is truncated (e.g., see FIG. P) and the name of an individual object contained within a group of objects, such as a file within a file rack (e.g., see FIG. P).",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 2A","b":["26","20","26","28","30","30","28"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 2B","b":["26","32","10","1","20","28","26","32","30","30","28","28","26","25","23","2","25","30","30","28","30","30"]},"In some circumstances, the name information pointer  may include two information boxes A and B, such as shown FIG. C. For instance, in an operating system that supports drag and drop operations, two names may be displayed in the name information pointer  during a drag and drop operation. In particular, the name of the source object and the name of the target object are shown in information boxes A and B, respectively. The target object name is not shown until the pointing portion  of the name information pointer  is moved to point to the target object. A source object icon  for the source object is dragged along with the cursor during the drag portion of the operation. Alternatively, the information in information boxes A and B can be combined into a single information box.","As when a single information box is displayed, audio information may be output in conjunction with the information displayed in the information boxes A and B. In fact, the audio information may be output instead of the information displayed in the name boxes A and B. In the example shown in , audio output A specifying the name of the source object is output by speaker  when the pointing portion  is first positioned over the source object icon . Later, during the drag operation when the pointing portion  is positioned over a target object icon B, audio output specifying the name of the target object is output by speaker . In another embodiment of the present invention, the impending action between the source and target object is output, for example, \u201csource moving to target.\u201d","Information pointers can be used to provide information about any object on the video display .  further illustrate the expansive uses of information pointers. The examples in  illustrate the use of visual information pointers. However, it will be appreciated that audio information pointers could have been used instead of or in addition to visual information pointers in the following examples.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 2D","b":["34","34","34","34","34","34"]},"As shown in all of the examples in , the information box of the information pointer is positioned relative to the cursor, not relative to the object to which the cursor is pointing. In each of the examples in , the cursor is an arrow that points northwest and the information box of the information pointer is located at the tail of the cursor arrow, i.e., at the southeast end of the cursor arrow. The information box of the information pointer will maintain the same relative location with respect to the cursor arrow unless a display boundary is encountered, which would cause a portion of the information pointer to become obscured. If this occurs, the information box of the information pointer is anchored at the encountered edge of the display. In one embodiment of the present invention, if audio pointers are employed, audio is used to inform the user that the cursor arrow has encountered an edge of the video display .",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIGS. 2E-2H","FIG. 2E","FIG. 2E","FIG. 2F","FIG. 2F","FIG. 2F"],"b":["35","35","35","35","35","36","36","36","36","36","36","36","36"]},"When several files are associated together in a group such that the file names are not displayed or are obscured, as shown in , as the tip of the cursor arrow moves over an individual folder, the name of that folder, and\/or additional information about the folder, as specified by the application, is displayed. More specifically,  includes a file rack A containing a plurality of files B and the title \u201cAUI Group\u201d C located below the file rack. As the tip of a cursor arrow D moves over the file folders B, an information box E that contains folder specific information is displayed.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 2H","b":["38","1","38","2","38","38","1","38","2","38","38"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIGS. 2I-2N"},"Information pointers can be used to supply information about any object on the video display . As shown in , an information pointer can even apply to a desktop A. When the tip of a cursor arrow A obscures a portion of an object located on the desktop A, the information pointer outputs information about the object at which the cursor is pointing. Conversely, if the tip of the cursor arrow A is on the desktop A, but is not pointing at any object on the desktop, the information box A of the information pointer will contain information about the desktop itself.","As noted above, information pointers can also be used to provide information about, any object located on a desktop. FIGS. J and J illustrate examples of using information pointers to provide details about devices on the system . In FIG. J, when a cursor arrow B points to an object representing a disk drive, \u201cA:\u201d B, the information box B part of an information pointer, provides information about the disk drive, \u201cA:.\u201d The information in the information box B in FIG. J includes the \u201cowner\u201d of the disk drive, the storage capacity of the disk drive, and the storage capacity currently available on the disk drive. FIG. J illustrates another example of using an information pointer to provide details about a device on the system . The device in FIG. J represented by an object C is a printer. When the tip of a cursor arrow C obscures a portion of the object C representing the printer, the information contained in the information box C part of the information pointer includes a description of the printer and the number of files in the print queue. Both of the foregoing examples illustrate the use of dynamic information in information pointers. When the tip of a cursor arrow obscures a portion of a device object, the most current information about the device is retrieved at that time.","FIGS. K and K illustrate examples of the use of information pointers to describe documents. In FIG. K, when the tip of a cursor arrow D obscures (i.e., overlies) a portion of an object representing a document D, the information box D of an information pointer displays information about the document. The information displayed includes, the author of the document, the type of document and the date of the document. The contents of the information displayed in the information box of the information pointer is specified by the operating system and\/or one or more application programs. FIG. K illustrates another example of displaying information in an information box E about a document when the tip of a cursor arrow E obscures a portion of an object representing a document E. The information displayed in the information box E in FIG. K includes the type of data in the document, the size of the document and the source of the document. Even though the objects represented in FIGS. K and K are both documents, the information that the application programs have decided to display is completely different. , which is described later, shows the types of information that can be displayed in a document object information pointer. FIGS. K and K not only exemplify the use of dynamic data in information pointers, but also illustrate the flexibility of information pointers.","FIGS. L and L illustrate the use of the name and information display format of information pointers for a group of items. In FIG. L when the tip of a cursor arrow F obscures a portion of a container (i.e., a file rack) F, an information box F located at the tail of the cursor arrow displays information about the container (i.e., the file rack). In contrast, in FIG. L, when a cursor G obscures an individual object (i.e., a folder) G within a container (i.e., a file rack) G, information about the individual object pointed to by the cursor is displayed in an information box G. The information shown in the information box G in FIG. L includes the type of object (i.e., folder), the contents of the folder and the space occupied by the contents of the folder. FIG. L is another example of the use of dynamic information in an information pointer.","The preceding several examples (FIGS. I-L) illustrate information pointers used in connection with a desktop and objects located on the desktop. Information pointers are not limited to providing information about a desktop or items located on the desktop. Information pointers can be used to provide information about any object appearing on the video display . Besides the desktop, this includes the taskbar, as well as any objects appearing in an application program.  illustrates the use of information pointers with a taskbar that contains a plurality of objects in the form of icons. When the tip of a cursor arrow H obscures (i.e., overlies) a portion of an object, in this case an icon, representing a wastebasket, or a portion of an associated object name H, an information box H displays information about the object at which the cursor is pointing. In the example shown in , the information displayed along with the name of the icon, i.e., \u201cWastebasket,\u201d includes a description of the use of the wastebasket and the number of items currently in the wastebasket. This example shows how multiple types of information (e.g., summary help information about the object and current contents of the object) can be included in an information box, as well as the dynamic nature of such information. This example also shows the usefulness of displaying a full name, and thus, how errors associated with truncated names, which are often employed on the taskbar can be avoided. In an actual embodiment of the present invention, even if the chosen display format did not include name (e.g., the display format includes information only), the truncated names are nevertheless displayed.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 2N","FIG. 2N","FIG. 2N"],"b":["391","391","20","411","401","391","5"]},"While the examples depicted above in  illustrate information pointers having a name and information format, other formats can be used. One alternative format is a name only format as illustrated in the examples shown in FIGS. P-P. In FIG. P when the tip of a cursor arrow J obscures an object, such as a file rack J, the name of the object (i.e., the file rack) is displayed in an information box J. In an actual embodiment of the present invention, if the display format is none, the name of the object (e.g., the name of the file rack) is displayed when the cursor arrow points to the object (e.g., file rack) regardless of any name display associated with the object. Alternatively, if the display format is none, the name of the object may not be displayed if the name J of the object is displayed near the object (i.e., the file rack J).","In FIG. P, when the tip of a cursor arrow K obscures an individual object, such as a file K, located within an object container, such as a file rack K, the name of the individual object, in this example, the name of the file, is output in an information box K. Preferably, the name is displayed even if a user selects none as the information display format because without the display of the name, a user would have to know the order in which the objects are displayed within a group, or more likely, perform the appropriate action, such as opening or executing individual objects until a desired object is located when a user is searching for a specific object. Because this is a burdensome user task, as noted above, preferably if the chosen information pointers display format is none, the user's decision not to display information pointers is overridden. In this instance the program decides that the information is of such critical importance that the user's setting should be overridden.","In FIG. P, when the tip of a cursor arrow L obscures a portion of a taskbar object, in this case a taskbar object representing a wastebasket L, the name of the object, i.e., \u201cWastebasket\u201d is displayed in the information box L of an information pointer. Preferably, the name is displayed even if the user had selected none as the information to be displayed in the information box. The reason that the name is displayed even though the user has chosen not to display information is that the name is truncated in the illustrated example. Had the name not been truncated, the selection of none as the display format would not have been overridden.","In addition to the display formats previously discussed (i.e., information, name or none), a user can select a preview format. When the preview format of information pointers is chosen a graphical representation of the contents of the object at which the cursor is pointing is displayed. Examples of preview information pointers are shown in FIGS. Q-Q.","As shown in FIG. Q, when the tip of a cursor arrow M is on a desktop M, and not partially obscuring any object located on the desktop, and the chosen information pointer format is preview, a preview of the desktop is displayed in an information box M located at the tail of the cursor.","An example of a type of preview information pointer that is displayed when the selected object is a device is illustrated in FIG. Q. As shown in FIG. Q, when the tip of a cursor arrow N obscures a portion of an object representing a device N, a pictorial representation of the contents of the device in the hierarchical format in which the objects are stored on the device is displayed in an information box N. In the illustrated example, the device is a disk drive and the display is a hierarchical tree showing the contents of the disk drive.","FIG. Q shows an example of the type of preview information displayed in an information box P of an information pointer when the tip of a cursor arrow P obscures a portion of an object representing a document P. The preview information displayed in the information box P is the introductory portion of the document in a size that is larger than the size of the object that represents the document P, but not in full screen size. The enlarged size is preferably readable, but not as easily readable as a full screen version of the document represented by the object P.","FIGS. Q and Q are examples of a preview information pointer intended to be associated with container objects. In FIG. Q, the preview information shown in an information box Q of an information pointer represents the contents of an \u201cAUI Group\u201d represented by a file rack Q. A pictorial representation of the contents of the files contained in the file rack Q is shown in the information box Q which is located at the tail end of the cursor arrow Q whose tip obscures a portion of the container (i.e., file rack). While not shown, if desired each individual file shown in the information box could include a legend identifying the file.","FIG. Q shows an example of a preview information pointer for an individual object located within a container of objects, such as a file located in a file rack. When the tip of a cursor arrow R obscures a portion of an individual object, in this case a file R located within a container object R, in this case a file rack, an information box R of an information pointer located at the tail of the cursor arrow displays a graphical representation of the contents of the object at which the cursor is pointing. In the example shown in FIG. Q, the information box R contains a graphical depiction of the folders and documents stored in the file folder pointed to by the cursor arrow R.","Being graphical in nature, the preview format may not appear to lend itself to embodiments of the invention that include an audio output device. This is incorrect since applications employing the invention define the contents of an information pointer, the applications can define the contents of an audio information pointer having any format, including the preview format. The preview format of an audio information pointer may be set at none (i.e., no audio output if format is preview). Alternatively, the audio information pointer preview format may be set to name, information, or name and information. Still further, the audio information pointer preview format may be set to emit a unique set of information. In other words, the audio information pointer preview format may contain more or less detail than the information option described above. For example, the visual file folder preview format in FIG. Q includes several folders and several files. The audio equivalent of the visual preview format could give details about each of the objects, such as the name, size and type of each document. Alternatively, volume and\/or tone could be used to describe the size or number of objects. For example, varying volume and\/or tone can be used to indicate varying volumes of data. As will be appreciated from the foregoing description an audio information pointer can include any audible sound, such as, the sound of noises heard at a party or the sound of a vehicle.","Besides being used in an operating system to provide information about items on a desktop or included in a taskbar as depicted in the above examples, information pointers can be used in application programs. An obvious example of using information pointers in an application program is to use information pointers to provide information about toolbar buttons generated by the application program. Another use for information pointers in application programs is to provide information about dialog box controls. FIGS. R-R illustrate several examples of the use of information pointers in connection with dialog box controls. FIG. R illustrates an example of how an information pointer can be used to display all of the information associated with a piece of information that is truncated on a display. When the tip of a cursor arrow B obscures a portion of a dialog box control containing the truncated information A, the information box C of an information pointer that contains the full text of the truncated item pointed to by the cursor arrow is displayed. While the dialog box control shown in FIG. R is an item in a list box, it is to be understood that information pointers can show the full text of any truncated item. Other types of dialog box controls that may include truncated text are title bars, edit boxes and combo boxes. The use of information pointers to display the entire contents of truncated text does not just apply to dialog box controls. An example of truncated text for a taskbar item is shown in FIG. P, described above.","Another use for dialog box control information is to provide information about relative location. See FIG. P which shows a slider A. When the tip of a cursor arrow B obscures a portion of the slider A, an information box C, which contains the value represented by the position pointed at by the cursor appears.","FIG. R shows the application of a dialog box control information pointer to a scroll bar A. When a cursor arrow B points to a portion of the scroll bar A, an information box C that gives some meaningful information about the extent to which the window is scrolled appears. The information box may read \u201cpage 4 of 5\u201d or \u201crow 37 of 80,\u201d for example. Another example of the use of information pointers with a scroll bar is where a mouse lingers over the scroll bar itself. In this case, the information box C may provide meaningful information about what will happen if the user clicks while the cursor is pointing to a particular scroll bar position, for instance, \u201cscroll to page 4 of 5.\u201d","FIG. R illustrates an example of another use of information pointers In FIG. R, an information box is used to display information about valid values for the data represented by a value in an edit box A. When the tip of a cursor arrow B obscures a portion of the edit box A, the information about valid value of data located in the edit box is displayed in an information box C. For example, as shown, the information could tell a user that a numerical value in the edit box must be an integer lying in some range. In this example, the application program could choose to display valid values any time the cursor obscures a portion of the edit box, or only when the edit box contains invalid data. Information pointers can be used for data validation in other dialog box controls, such as combo boxes.","Information about a collection of objects can be provided with information pointers. As shown in , if a directory contains several file types and the user selects all of the \u201cMS WORD\u201d documents (A and A), but does not select any of the files that are not \u201cMS WORD\u201d documents (B and B), the information pointer informs the user that \u201cAll of the Word files are selected\u201d in an information box D displayed at the tail of a cursor arrow C pointing to an object representing the directory E.",{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 2T","FIG. 2T"],"b":["44","44","46","46","47","47","45","44","44","46","47","46","47","47"]},"In summary, in response to the user's interaction with the input device, the cursor is moved over a source object, i.e., the document A. Using the input device, the user selects the source object and proceeds to move the source object over a possible target object, i.e., the folder icon A or the printer icon A. When over a possible target object, an information box that contains information informing the user of the consequence of completing the operation of dropping the selected source object onto the target object to which the cursor is currently pointing appears. Dragging the \u201cTravel Plans\u201d document A over a printer icon A causes the information box C to inform the user that the \u201cTravel Plans\u201d document will be printed if the source object, (i.e., the \u201cTravel Plans\u201d document) is dropped. Dragging the \u201cTravel Plans\u201d document A over the folder icon A causes the information box C to inform the user that the \u201cTravel Plans\u201d document will be moved to the folder, if the source object, (i.e., the \u201cTravel Plans\u201d document) is dropped. Depressing a certain key or a combination of keys on the keyboard can be used to change the default result of a drag and drop action. For example, instead of moving the source object to the folder, the source object might be copied into the folder, or a link might be created. The information box will display the appropriate alternate action, if the keyboard is used to alter the default action of a drag and drop operation.","The implementation of the information pointer with the audio and visual output in the preferred embodiment of the present invention will now be described with reference to the Microsoft WINDOWS, version 3.1, operating system. In particular, the operating system  is an embellished version of the Microsoft WINDOWS, version 3.1, operating system that supports the use of information pointers. The present invention is not limited to implementations with this operating system, rather, those skilled in the art will appreciate that the present invention may be implemented with other operating systems such as Windows 95, Windows 98 and Windows NT, as well.","In explaining the implementation of the preferred embodiment of the present invention, it is helpful to consider the type of input device that is used. In the discussion that follows, it is assumed that the mouse  () is used as the input device for manipulating the position of the cursor on the video display . It should, nevertheless, be appreciated that the present invention is not limited to the use of a mouse as the input device; rather, other input devices, such as keyboard  or a pointing device, may alternatively be used.","The operating system  () logically divides the user interface into a number of windows. In general, each window has a separate window procedure associated with it. The operating system  maintains a message queue for each program that generates windows. As a program may generate multiple windows, the message queue may hold messages for multiple windows. When an event occurs, the event is translated into a message that is put into the message queue for the program. The program retrieves and delivers the message to the proper window procedure by executing a block of code known as the \u201cmessage loop.\u201d The window procedure that received the message then processes the message.","When a user positions a cursor with the mouse  over a window or clicks the mouse by depressing one of the mouse buttons within the window, the procedure for the window receives a mouse message. The operating system  provides a number of predefined mouse messages. The mouse messages specify the status of mouse buttons and the position of the cursor within the window. The position of the cursor within the window is specified in (X,Y) coordinates relative to the upper left-hand cover of the window. The window procedure receives the mouse message and utilizes the information contained in the message to respond to the mouse activities. A new mouse message need not be generated for every single pixel position change of a mouse within a window; rather, a message may be generated each time the mouse moves more than a threshold number of pixels transversed by the mouse.","This message system plays a role in the implementation of information pointers described above. The appearance of the cursors on the video display  () is dictated by bitmaps stored within the operating system . The role that the message loop serves in the implementation of the information pointers can be seen in the flow chart of , which illustrates the steps performed by the system  () when the cursor moves into a window that is displayed on the video display . Initially, the cursor position is moved by the mouse  or other input device to point within the window (step  in FIG. ). A message is generated and sent to the application program that is executing, which, in turn, forwards the message to the window procedure associated with the window (step ). The message specifies the position of the cursor in the window as described above. The window procedure then determines what is displayed at the cursor position within the window (step ). For instance, an object may be at the specified position or nothing of particular importance may be at the specified position. A determination is made whether the specified position corresponds to the position of an object with an identity (step ). In other words, a determination is made whether a named entity is present at the specified cursor position. If a named entity is present at the specified cursor position, the information regarding the object at the specified cursor position is output (step ). This information may be video information, audio information or both audio and video information. Video information includes textual and\/or graphical information. Graphical information includes full motion video, as well as bitmap and image data. If, however, a named entity is not present at the specified cursor position, either a conventional cursor is displayed or the information containing portion of the information pointer is shown in blank (step ). The choice between these options is controlled by the application program.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 4A","FIG. 3"],"b":["56","59"]},{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 4B","FIG. 4A","FIG. 4B"],"b":["59","76","78"]},{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 4C","FIG. 4B","FIG. 2S"],"b":["78","100","102","104","106","108"]},"Returning to , after the display information has been obtained, it must be formatted according to the display format (step ). In an actual embodiment of the present invention, the user can select the format for the display of the information pointer as: name, information, preview, or any combination thereof. The user may also select to not have information pointers displayed. Examples of information pointers using the various formats are described above with respect to .  is a flowchart showing in more detail the steps that must be performed in order to realize step  of  of formatting the display information according to the display format. In , message must first be initialized to \u201cnull\u201d (step ). After the message has been initialized to \u201cnull,\u201d the display format must be determined. If the display format is set to \u201cno information pointer\u201d (step ), a test is made to determine if the information is critical (step ). If the information is critical, the message is set to the critical information (step ). In an actual embodiment of the present invention, the name is displayed as the critical information as shown in FIGS. P-P. If the display format is not set to \u201cno information pointer,\u201d a test is made to determine if name display format is set to \u201con\u201d (step ). If name display format is set to \u201con,\u201d the message is set to the name of the object(s) (step ). Regardless of whether or not the name is displayed, a test is made to determine if the information display format is set to \u201con\u201d (step ). If the information display format is set to \u201con,\u201d the previously determined display information is appended to the message (step ). Whether or not information display is set to \u201con,\u201d a test is made to determine if preview display format is set to \u201con\u201d (step ). If preview display format is set to \u201con,\u201d the display information must be put into preview format (step ). After the display information has been put in preview format, the preview is appended to the message (step ).","Returning to , if there are not multiple objects selected (no response in step ), a test is made to determine if the user is in the process of performing a drag and drop operation (step ). If the user has commenced a drag and drop operation, the current stage of the operation is determined. If the target object has been selected (step ), a test is made to determine if the selected target object is a valid target for the source object (step ). If the object is a valid target object, information is output about the impending drag and drop operation (step ), for example, \u201cCopying source to target.\u201d If the target is not valid, processing for an invalid target object is performed (step ). It will be appreciated that there are a myriad of ways to process an invalid target object. In one actual embodiment of the present invention, no information is displayed in the information box but the cursor changes, for example, to a circle with a slash through the circle. In another embodiment, an error message is displayed in the information box. If the cursor is not obscuring a portion of a possible target object (no response in step ), information is obtained about the source object (step ).",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 4E","FIG. 4B"],"b":["90","140","142","2","1","2","2","144","146","2","2","2","2","148","150","2","1","152","154","2","1","2","2"]},{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 4F","FIG. 4E"],"b":["154","180","182","184","186","188","190","192","194","196","198","200","202"]},"Returning to , if the object is not a document, a test is made to determine if the object is a dialog box control (step ). If the object is a dialog box control, the display information is set to the latest information about the dialog box control (step ). FIGS. R-R, described above, show examples of using information pointers in connection with dialog box controls. If the object is not a dialog box control, a test is made to determine if the object is a toolbar button (step ). If the object is a toolbar button, the display information is set to the latest information about the toolbar button (step ). An example of an information pointer being used to display information about a toolbar button is shown in , described above. If the object is not a toolbar button, a test is made to determine if the object is the desktop (step ). If the object is the desktop, the display information is set to the latest information about the desktop (step ). An example of an information pointer for the desktop is shown in , described above. If the object is not the desktop, a test is made to determine if the object is a user-defined object (step ). If the object is a user-defined object, the display information is set to the latest information about the user-defined object (step ). An example of a user-defined object is shown in , described above.","Returning to , an alternative way of obtaining display information about the source object in a drag and drop operation, as depicted in detail in , is to not display any information about the source object, until an impending action with a possible target object occurs, regardless of the display format of the information pointer. Alternatively, the name of the source object is output regardless of the display format of the information pointer. After the display information for the source object has been obtained (step ), the display information is formatted according to the display format (step ) as described above.","In , if multiple objects are not selected (\u201cno\u201d on step ) and this is not a drag and drop operation (\u201cno\u201d on step ), information about the individual object to which the cursor is currently pointing is obtained (step ). Step  is described above in connection with a source object of a drag and drop operation. After the display information for the object has been obtained (step ), the display information is formatted according to the display format (step ). Step  is described above in conjunction with the selection of multiple objects.","Returning to , after the window procedure has determined the message based on what is at the specified cursor position (step ), the procedure passes a message to the operating system  () that tells the operating system what type of cursor to display and sets forth the contents and type of information to be output (step ). The information to be output, as determined in step , may be textual data, other video data and\/or audio data. Suppose that the application program desires to display a name cursor  (FIG. A). A message requesting that a name cursor be displayed is passed to the operating system  along with a text string for the name to be displayed in the name box . If audio data is output, the audio data is also passed to the operating system.","Whether the information pointer is displayed depends upon whether the information pointer is designated as \u201cOn\u201d or \u201cOff.\u201d The operating system checks whether the information pointer is \u201cOn\u201d (step  of FIG. A). In certain instances, the user may have the option of specifying whether the information pointer is \u201cOn\u201d or \u201cOff.\u201d Alternatively, the information pointers may be programmed by the application program or operating system  () such that they are automatically turned \u201cOn\u201d when the cursor points to a named entity. This latter option provides an automatic mechanism for switching \u201cOn\u201d or \u201cOff\u201d the information pointer. The output of audio information may also be turned \u201cOn\u201d or \u201cOff\u201d as may the output of video data. If the information pointer is not \u201cOn,\u201d it must be determined if the information is critical in nature (step ). If the information is not critical, and the information pointer is \u201cOff,\u201d a conventional cursor is displayed (step ). As an example, consider the name cursor . If the name information pointer  is \u201cOff,\u201d the name information box  is not displayed and no audio information is output (FIG. A). Instead, a conventional cursor is displayed. On the other hand, if the name information pointer is \u201con,\u201d or the information is critical, the pointing portion  is displayed along with the appropriate name information to be used in the name information box and\/or appropriate audio output (step  of FIG. A).",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 4G","FIG. 4A","FIG. 4A","FIG. 3"],"b":["62","210","212","20","62","64","56","3"]},"A specific example of an embodiment of information pointers is a Quick Info Window.  shows an example of a Quick Info Window  for a toolbar button . In the example shown in , the toolbar button , is a Justified Text Button. Each Quick Info Window  provides context sensitive information about an object (in this case a toolbar button ) that is pointed to by an arrow . The information provided within the Quick Info Window  is provided by the object  to which the arrow  points. Each Quick Info Window  displays the object name . In the example shown in , the object name is \u201cJustified Text Button.\u201d The Quick Info Window  also provides a description of the object. In the example shown in , the description of the object includes text  which specifies the purpose of the object and text  which specifies how to use the object. In this example, in contrast to the examples shown in , the standard cursor appears to be replaced by an arrow. The reason that there is an arrow  pointing to the object in this example is to indicate which object the Quick Info Window refers to and to free up the cursor so that it can be used to navigate within the Quick Info Window .","The Quick Info Window  also includes two pushbuttons: a More Help pushbutton , and a Close pushbutton . The More Help pushbutton , when activated, provides additional help information for the object . The Close pushbutton , when activated, closes the Quick Info Window .","The operating system  () provides Quick Info Windows for a number of different types of objects that appear on the screen of the video display . These objects include menubars, context menus, toolbars, palettes, dialog box controls, property sheets, forms, files, folders, links and other window elements, such as Min\/Max buttons.","Quick Info Windows  may be accessed in two complimentary ways: in riffing mode and not in riffing mode. Riffing mode is a mode wherein any time the user points with a cursor to an object that supports a Quick Info Window, the Quick Info Window for the object is generated. Riffing is explicitly turned \u201cOn\u201d and \u201cOff\u201d by the user. When riffing mode is \u201cOff,\u201d if the user wishes to generate a Quick Info Window, he must take additional steps other than positioning the cursor over an object.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 6A","FIG. 1"],"b":["270","18","2","286","6","288","290","292","300","288","300"]},"Another option that may be used to access a Quick Info Window when not in riffing mode is to first select the object using the keyboard  or mouse  (step ). The F key on the keyboard  then may be pressed (step ). The F key is programmed by the operating system  to provide context-sensitive help information. After the F key is pressed, the Quick Info Window is displayed in proximity to the object (step ).","A Quick Info Window  may also be generated in riffing mode. The primary goal of riffing mode is to help less experienced or curious users to learn more about objects.  is a flow chart illustrating the steps performed to access a Quick Info Window  when riffing mode is turned \u201con.\u201d In particular, the cursor is positioned to point at an object (step ). When the cursor points to an object that supports a Quick Info Window, the Quick Info Window  is displayed for the object (step ). When a user moves the cursor over an object other than the object for which a previous Quick Info Window was generated, the Quick Info Window is repositioned near the new object and the contents of the Quick Info Window are updated to reflect the information for the new object.","When operating in riffing mode, a user may select the More Help pushbutton  or the close pushbutton  by moving the cursor pointer near or along the arrow . This allows the user to move the pointing portion of the cursor inside the Quick Info Window  without bringing up additional Quick Info Windows. Hence, a sort of \u201csafety zone\u201d is provided.","After a user has generated a Quick Info Window , he may wish to later close the Quick Info Window.  is a flow chart of the steps performed to close a Quick Info Window . Initially, a Quick Info Window  is displayed on the video display  (step ). The user then hits the escape button on the keyboard  or, alternatively, hits the close pushbutton  () within the Quick Info Window  (step  in FIG. C). In response to these steps, the Quick Info Window is closed (step ).","Quick Info Windows may be moved about the video display  () when not in riffing mode. However, when in riffing mode, the Quick Info Window  may not be moved.  is a flow chart showing the steps that are performed to move a Quick Info Window. The riffing mode must be designated as \u201cOff\u201d (step ), The user then positions the cursor using the mouse  () to point to a location in the Quick Info Window  and depresses a designated one of the mouse buttons (step ). While keeping the button depressed, the user drags the mouse to reposition the Quick Info Window at a new location and drops the Quick Info Window at the new location (step ). When the Quick Info Window  is dragged, the arrow  connecting it to the object  of interest is removed.","The size of a Quick Info Window depends upon the amount of text being displayed within the window. The width of the Quick Info Window is fixed, whereas the height of the Quick Info Window grows to display as much text as required. The window height is bounded by the size of the video display . The arrow  associated with the Quick Info Window  has a length based upon where the Quick Info Window  is positioned on the screen and the amount of space between the Quick Info Window  and the object  of interest.","It should be appreciated that more than one Quick Info Window  may be displayed on the video display  simultaneously. It should also be appreciated that the font size and type of textual information provided within the Quick Info Window  may be varied from the default font, which is MS San Serif 8.","Since applications, as well as the operating system, can modify the contents of the information pointer, the applications need a method for accessing the information pointer. The mechanism by which the applications access the information pointer is an Application Programming Interface (API).  is a flowchart illustrating the use of the API for information pointers. The application makes a request through an API call (step ). The operating system then processes the API call (step ).",{"@attributes":{"id":"p-0111","num":"0110"},"figref":["FIG. 7B","FIG. 7A"],"b":["322","330","332","334","336","338","340","342","344","346","348","350","352","354","356","358","360","362","364","366","368","370","372"]},"While the preferred embodiment of the invention has been illustrated and described, it will be appreciated that various changes can be made therein without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated as the same becomes better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 2A","b":["2","2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 2E-2H"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 2I-2N"},"FIGS. P-P illustrate information pointers formed in accordance with the present invention that use the name format to display an information pointer;","FIGS. Q-Q illustrate information pointers formed in accordance with the present invention that use the preview format of an information pointer;","FIGS. R-R illustrate information pointers formed in accordance with the present invention in which the object pointed to is a dialog box control;",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2S"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2T"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 4D"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4E"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4F"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4G"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 6C"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 6D"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 7B"}]},"DETDESC":[{},{}]}
