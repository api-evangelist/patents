---
title: User-interface design
abstract: Graphical user interface objects are specified by a collection of attribute-value pairs, the collection of which comprise a complete description of the object and may be used by a rendering element to create a visual representation of the object. In practice, each of a first portion of attributes may be associated with two or more valuesâ€”each value (for a given attribute) specifying that attribute's value for a unique resolution. A second portion of attributes are associated with a single value and are, therefore, display resolution independent. Accordingly, the target object may be displayed at any of the specified design display resolutions or accurately displayed at any resolution between the specified design display resolutions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08130224&OS=08130224&RS=08130224
owner: Apple Inc.
number: 08130224
owner_city: Cupertino
owner_country: US
publication_date: 20070404
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO A RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This is a continuation application which claims priority of U.S. patent application Ser. No. 10\/876,298 filed Jun. 24, 2004 and which is hereby incorporated by reference.","The invention relates generally to graphical user interface design and more particularly to a means for specifying a graphical user interface object in a procedural and largely display resolution independent manner.","Designing an efficient, ergonomic and aesthetically pleasing user interface is an integral stage of most application development projects. The graphical user interface (\u201cGUI\u201d) is what the user sees and interacts with. Accordingly, the GUI must present information and choices to a user in a way that is not only pleasing and natural to the eye but conducive to efficient use of the underlying application. One major concern in the development of modern GUIs is the resolution of the various objects that comprise the GUI. Typically, a designer designs a graphical user interface object (e.g., a pushbutton, scrollbar, or slider) for a specified resolution. As the resolution of the user's display changes, however, display of the originally designed object may become distorted. This is particularly a problem when a graphical object is designed at a first resolution (e.g., 75 or 100 pixels per inch) and the user's display is at a second, higher resolution (e.g., 120 or 150 pixels per inch).","In the past, two general techniques have been used to address the problem associated with displaying objects designed for a first resolution but which are displayed at a second resolution. In the first, an original (low resolution) object is up-sampled to generate a larger image (e.g., through linear or bicubic interpolation). This technique results in blurry edges such that the user interface no longer looks crisp. In the second, an original object is designed for display at a high resolution and is then down-sampled to an unknown target resolution. While useful in some circumstances, it is not possible a priori to know what width to give a line (e.g., an object's edge) at the higher resolution such that when down-sampled it remains crisp. This is particularly true when there are multiple target resolutions. Thus, both up-sampling and down-sampling techniques tend to disturb the designer's specified line width. One of ordinary skill in the art will recognize that line width is a critical factor in GUI design as the width of lines define the edge of graphical objects. If edges appear blurry or ill-defined, the entire GUI design may be compromised.","Thus, it would be beneficial to provide a means to specify the design of a graphical user interface object independent of its display resolution. Such a description may advantageously be used by a rendering module to display the designed object at substantially any resolution.","In one embodiment, the invention provides a method to represent a graphical user interface object in a procedural, and largely, resolution independent manner. The method includes receiving values for each of a plurality of attributes associated with a graphical user interface object (the attributes specifying display characteristics of the graphical user interface object), associating at least one value for each of the plurality of attributes, and storing the plurality of attributes and their associated values in a file. Each of a first portion of the object's attributes may be associated with a single value\u2014a value that is independent of the object's display resolution. Each of a second portion of the object's attributes may be associated with two or more values\u2014each value (for a given attribute) associated with a distinct display resolution. The collection of attribute-value pairs comprise a complete description of the graphical user interface object and may be used by a rendering module to create a visual representation of the object at any number of resolutions.","In another embodiment, the invention provides a method to render or display a graphical user interface object specified in a procedural manner as described above. The method includes receiving a graphical user interface object recipe file (a file containing attribute-value pairs), identifying the graphical user interface object described by the recipe file, extracting a plurality of values from the file (each value being associated with an attribute for the identified graphical user interface object), and rendering the identified graphical user interface object based on the extracted plurality of values.","Those of ordinary skill in the art will recognize that methods in accordance with the described invention may be embodied in programs, program modules or applications that may be stored in any media that is readable and executable by a computer system.","Methods, devices and systems to describe or capture the design of graphical user interface objects in a procedural and, largely resolution independent, manner are described. The following embodiments of the invention, described in terms of graphical user interface object design conforming to the Apple Human Interface Guidelines, are illustrative only and are not to be considered limiting in any respect. (The Apple Human Interface Guidelines are available from Apple Computer, Inc. of Cupertino, Calif.)","It has been determined that a graphical user interface object may be completely described by a collection of resolution-independent attributes. The collection of all attributes for a given object type define that type of object (e.g., pushbuttons). While the attributes used to define an object may vary, in whole or in part, from object-type to object-type, one of ordinary skill in the art will recognize those attributes needed to completely specify a given object. For example, while some attributes may be associated with a number of different graphical interface objects (e.g., those associated with an object's location in a display window), many attributes may change from object to object (e.g., buttons have attributes associated with the \u201cbutton\u201d metaphor while check-boxes and slider tracks have attributes particular to their visual metaphor). Accordingly, the attributes identified herein are illustrative only and should not be used to limit the claimed methods, devices and systems.","Just as a specific collection of attributes define a specific type of graphical interface object (e.g., pushbuttons), the values associated with each of the specific attributes define a particular implementation or embodiment of the object (e.g., a regular size, deactivated pushbutton). In accordance with the invention, some attribute-values are specified independent of the resolution at which the object is to be displayed while other attribute-values are specified for two or more resolutions. In general, those attributes associated with the physical location or geometry of an object may be associated with a plurality of values\u2014one value for each specified resolution. Other attributes are associated with fixed, resolution independent, values (e.g., visual characteristics such as opacity, color and curvature). By way of example, consider a pushbutton object whose radius (attribute \u201cbuttonRadius\u201d is specified for each of five predetermined resolutions (e.g., 100, 120, 125, 133.3 and 150 pixels per inch), but whose outline color (attributes \u201coutlineRed\u201d, \u201coutlineGreen\u201d, and \u201coutlineBlue\u201d) and opacity (attribute \u201cbuttonOpacity\u201d are fixed and resolution independent.","Thus, in accordance with the invention the collection of all attribute-values for a specified object completely define its visual characteristics and, as such, may be used to drive the graphical generation of the object (for example, by a rendering engine or operating system module responsible for rendering images). One benefit of object definitions in accordance with the invention is that graphical objects are defined in terms of a collection of resolution independent attributes. Another benefit of object definitions in accordance with the invention is that each attribute may be associated with a plurality of values, thereby permitting the designer to optimize the object's design for each of a specified number of resolutions. Still another benefit of object definitions in accordance with the invention is that if the actual displayed resolution of the graphical object is between two of the resolutions specified by the designer, the rendering engine may interpolate between the two values\u2014a technique that generally provides a significantly improved display over prior art up-sampling or down-sampling techniques.","In accordance with the invention, a graphical user interface object's design is specified by a collection of attribute-value pairs that are retained or stored in a file, hereinafter referred to as a \u201crecipe\u201d file. In one embodiment, the recipe file may be a \u201cflat\u201d file consisting of sequential listing of attribute-value pairs. In another embodiment, the recipe file may be a hierarchically ordered file representing an inverted tree, where the root of the tree identifies the type of graphical object (e.g., a pushbutton, a check-box or a slider track) and the first level below the root identifies categories associated with the object (e.g., size, color and state). In one particular embodiment, hierarchically ordered recipe files are stored as extensible Markup Language (\u201cXML\u201d files. Attributes and their values are then associated with each node. In this way, every aspect of a graphical user interface object may be systematically identified and recorded in the recipe file in a manner that is wholly independent from the method used to physically draw (render) the image on a computer display device.","Methods, devices and systems in accordance with the invention may be described in terms of two phases. In a first phase, recipe files are generated. In a second phase the recipe files are used to generate visual representations of the graphical user interface object for one or more applications at substantially any resolution.","Referring to , phase   is typically performed by designer  interacting with GUI design application  to generate one or more recipe files  for application . As noted above, recipe file(s)  may be organized in a hierarchical manner.  shows hierarchy  that has been found useful in the design of graphical user interface objects in accordance with the invention. As illustrated, root node  identifies the object type (e.g., pushbutton). Subordinate to root node  are nodes representing the relative size of the displayed object: Regular , Small  and Mini . It will be recognized that the sizes represented by nodes ,  and  refer to the relative physical sizes of the displayed object and do not relate to the resolution at which such objects are displayed. Subordinate to the size nodes are \u201ccolor\u201d nodes, representing the fact that each (sub-) type of object may be associated with similar or separate and distinct color characteristics. Subordinate to the color nodes are states that each version of the object may assume, where a state is defined by the collection of attribute-value pairs associated with that (sub-) type of object. Thus, each node in the tree (root node  included) has a set of attribute-value pairs associated with it. In one embodiment, the root is fully populated\u2014it always contains all attribute-value pairs needed to define the object. In this embodiment, each subordinate node only contains attribute-value pairs that serve to override the inherited attribute values of their parent node. For example, \u201cRegular\u201d node  may only possess size-based attributes (and their associated values), while Color-A node subordinate to node  may only serve to override the object's material map attribute-value (the main color of the object) and also perhaps the outline color attribute values.","Referring to , phase   is typically performed when user  interacts with application  in such a manner as to require display of the graphical user object designed in accordance with phase  . In one embodiment when this occurs, application  transmits recipe file  to rendering engine  which returns bitmap  which, ultimately, is presented to user  via display unit . In another embodiment, application  may extract the necessary information (in the form of attribute-value pairs) form recipe file  and transmit those to rendering engine . In still another embodiment, application  may indicate to rendering engine  where the recipe file(s) are located. One of ordinary skill will recognize that rendering engine  may be a stand-alone component or module directly accessible by applications or, alternatively, may be but one module of a larger graphical processing framework supported by the underlying operating system. One such modular or \u201cframework\u201d approach is described in the commonly owned and co-pending patent application entitled \u201cSystem for Optimizing Graphics Operations\u201d by John Harper, Ralph Brunner, Peter Graffagnino, and Mark Zimmer, Ser. No. 10\/825,694, incorporated herein by reference in its entirety.","Referring to , in one embodiment a GUI designer may use interface object design application  to design, for example, a pushbutton object. Illustrative design application  includes browser region , resolution display region , expanded bit display region , object shape region  and user interface construction region .","Browser region  permits the selected display of various aspects of an object's design. In particular, region  provides a graphical representation of a recipe file's hierarchical structure in an Apple standard \u201cFinder\u201d format: the left-most pane identifies the recipe file's root (which, in turn, identifies the type of object\u2014a pushbutton); the middle pane identifies categories of pushbuttons (e.g., inactive, mini, pressed, pulsed, regular and small). Subsequent panes display subcategories associated with a selected category. For example, disclosure triangles  indicate that pushbutton categories mini, pressed, pulsed, regular and small have additional aspects\u2014the details of which are displayed in the right-most (and possibly subsequent) panes when one of these categories is selected.","Resolution display region  identifies one or more resolutions for which the object is being designed. As shown, the designer has specified that at least some attribute values for a pushbutton are specified for resolutions of 100, 120, 125, 133.3 and 150 pixels per inch. As noted above, not all attribute values are specified for each of these resolutions, only those that the designer determines are significant to the object's display. Illustrative attribute-value pairs for a pushbutton object and a scrollbar object, including those attributes having multiple values, are shown in Table 1 below. (It will be recognized that the objects shown in region  are not actually displayed at the indicated resolution, but are instead \u201csimulations\u201d of how the object would appear at those resolutions.)","Expanded bit display region  shows an expanded representation of the selected resolution image. In the illustrated example of , region  shows the X pixel-zoomed representation of the  pixel per inch pushbutton. Region  may be used, for example, to visually inspect the quality of the user interface object rendering or to compare the user interface object rendering with another pixel-zoomed rendering displayed in an image-editing application.","Object shape region  permits the designer to select, view and specify attribute values associated with a particular shape of the object being designed. For example, in the illustrated embodiment a pushbutton's shape may be any one of the shapes identified by shape buttons : Round, Lozenge (\u201cLozen . . . \u201d, Round Rectangle (\u201cRound . . . \u201d), odd (\u201cScroll bar cap odd end\u201d or custom. Immediately beneath shape buttons , area  shows specific attributes associated with the selected shape and, through controls such as slider , text box , radio button  or color well  permits the designer to change the value associated with those attributes.","User interface construction region  serves as the primary interface for viewing and specifying attribute values associated with an object's various visual characteristics or layers. In the embodiment of , for example, a pushbutton may be comprised of Button, Inlay, Outside Shadow, Inside Shadow, Inside Coloring, Outline, Highlight, Figure, Master and Template Match layers. Each layer may be individually selected (noted by a check box alongside the layer's title) and each layer's respective attributes (and means for setting their value) may be individually disclosed through activation of their disclosure triangles (the dark triangle to the immediate left of each layer title's check box), see .","Thus, in accordance with the invention a graphical user interface object may be completely defined by a collection of attribute-value pairs that may be used by a rendering engine (or similar module) to display the object. Further, one or more attributes may have two or more values, wherein each value is associated with a specific display resolution. This latter feature permits a designer to uniquely and specifically optimize a single design for multiple resolutions with the added benefit of providing sufficient information for interpolation (generally performed by the rendering engine) should the actual resolution be different from any of the specified resolutions. By way of example only, Table 1 comprises a listing of attributes and their associated values for a pushbutton object and a scrollbar object.",{"@attributes":{"id":"p-0030","num":"0029"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Illustrative Attribute-Value Pairs"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Attribute","Pushbutton Value","Scrollbar Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["buttonCenterX [1]","48\/100, 48\/133.333,","48\/100, 48.5\/120,"]},{"entry":[{},"47.5\/150","48\/125, 48.5\/133.333,"]},{"entry":[{},{},"48.5\/150"]},{"entry":["buttonCenterY [1]","48\/100, 48\/120, 48.5\/125,","48\/100, 48.5\/120,"]},{"entry":[{},"48.5\/133.333, 48\/150","48\/125, 48.5\/133.333,"]},{"entry":[{},{},"48.5\/150"]},{"entry":["buttonCurvature","0.7071","0.7071"]},{"entry":["buttonMaterialAngle [2]","0","0"]},{"entry":["buttonMaterialBlur [2]","0","0"]},{"entry":["buttonMaterialBright [2]","0","0"]},{"entry":["buttonMaterialChoke [2]","1","1"]},{"entry":["buttonMaterialContr [2]","0","0"]},{"entry":["buttonMaterialEdge [2]","0","0"]},{"entry":["buttonMaterialFlat [2]","0","0"]},{"entry":["buttonMaterialName [2], [3]","clearmap","aquamaterial"]},{"entry":["buttonMaterialPull [2]","0","0"]},{"entry":["buttonMaxX","55","217"]},{"entry":["buttonMaxY","60","213"]},{"entry":["buttonMinX","23","185"]},{"entry":["buttonMinY","36","189"]},{"entry":["buttonOffsetX","0","0"]},{"entry":["buttonOffsetY","0","0"]},{"entry":["buttonOpacity","0.868217","1"]},{"entry":["buttonPoint1X [1]","43\/100, 42\/120, 41.5\/125,","189"]},{"entry":[{},"41.5\/133.333, 40\/150"]},{"entry":["buttonPoint1Y [1]","48\/100, 48\/120, 48.5\/125,","201"]},{"entry":[{},"48.5\/133.333, 48\/150"]},{"entry":["buttonPoint2X [1]","53\/100, 54\/120, 54.5\/125,","213"]},{"entry":[{},"54.5\/133.333, 55\/150"]},{"entry":["buttonPoint2Y [1]","48\/100, 48\/120, 48.5\/125,","201"]},{"entry":[{},"48.5\/133.333, 48\/150"]},{"entry":["buttonRadius [1]","10.5\/100, 13\/125,","7.5\/100, 9\/120,"]},{"entry":[{},"14\/133.333, 15.5\/150","9.5\/125, 11\/150"]},{"entry":["buttonRoundness","0.5","0.5"]},{"entry":["buttonType","1","0"]},{"entry":["figureBlendMode","0","0"]},{"entry":["figureBlue","0","0"]},{"entry":["figureFillWithColor","0","0"]},{"entry":["figureGreen","0","0"]},{"entry":["figureName [3]","mixed","figure"]},{"entry":["figureOpacity","1","1"]},{"entry":["figureRed","0","0"]},{"entry":["figureSize","0.5","0.5"]},{"entry":["figureXPosition","0","0"]},{"entry":["figureYPosition","0","0"]},{"entry":["highlightMaterialAngle [2]","0","0"]},{"entry":["highlightMaterialBlur [2]","41.509434","0"]},{"entry":["highlightMaterialBright [2]","\u22120.245283","0"]},{"entry":["highlightMaterialChoke [2]","0.532075","1"]},{"entry":["highlightMaterialContr [2]","0.433962","0"]},{"entry":["highlightMaterialEdge [2]","0.481132","0"]},{"entry":["highlightMaterialFlat [2]","\u22120.226415","0"]},{"entry":["highlightMaterialName [2]","glasshighlightmaterial","highlightmaterial"]},{"entry":["highlightMaterialPull [2]","\u22120.057\/100, \u22120.038\/120,","0"]},{"entry":[{},"\u22120.075\/125, \u22120.075\/150"]},{"entry":["highlightOpacity","0.279683","1"]},{"entry":["inlayMaterialAngle [2]","0","0"]},{"entry":["inlayMaterialBlur [2]","0","0"]},{"entry":["inlayMaterialBright [2]","0","0"]},{"entry":["inlayMaterialChoke [2]","1","1"]},{"entry":["inlayMaterialContr [2]","0","0"]},{"entry":["inlayMaterialEdge [2]","0","0"]},{"entry":["inlayMaterialFlat [2]","0","0"]},{"entry":["inlayMaterialName [2], [3]","inlaymaterial","inlaymaterial"]},{"entry":["inlayMaterialPull [2]","0","0"]},{"entry":["inlayMaxRadius [1]","12.757\/100, 15.795\/125,","9.133\/100, 10.935\/120,"]},{"entry":[{},"17.01\/133.333, 18.833\/150","11.543\/125,"]},{"entry":[{},{},"13.365\/150"]},{"entry":["inlayOpacity","1","1"]},{"entry":["inlayThickness","0.43","0.43"]},{"entry":["insideColoringBlue","0.386252","0"]},{"entry":["insideColoringGreen","0.336153","0"]},{"entry":["insideColoringOpacity","0.1","0.1"]},{"entry":["insideColoringRed","0.705882","0"]},{"entry":["insideShadowBlue","0","0"]},{"entry":["insideShadowBlurRadius [1]","1.5\/100, 1.857\/125,","1.072\/100, 1.286\/120,"]},{"entry":[{},"2\/133.333, 2.214\/150","1.358\/125, 1.572\/150"]},{"entry":["insideShadowGreen","0","0"]},{"entry":["insideShadowOffsetX","\u22120","0"]},{"entry":["insideShadowOffsetY [1]","0.75\/100, 0.929\/125,","0.536\/100, 0.643\/120,"]},{"entry":[{},"1\/133.333, 1.107\/150","0.679\/125, 0.786\/150"]},{"entry":["insideShadowOpacity","0.60686","1"]},{"entry":["insideShadowRed","0","0"]},{"entry":["masterOpacity","0.744186","1"]},{"entry":["oddDirection","0","0"]},{"entry":["outlineBlue","0.968326","0"]},{"entry":["outlineFade","1","0"]},{"entry":["outlineFadeAngle","0","0"]},{"entry":["outlineFadeWidth [1]","31.78\/100, 39.346\/125,","1\/100, 1.2\/120,"]},{"entry":[{},"42.373\/133.333, 46.913\/150","1.267\/125, 1.467\/150"]},{"entry":["outlineGreen","0.176788","0"]},{"entry":["outlineMaxRadius [1]","10.5\/100, 13\/125,","7.5\/100, 9\/120,"]},{"entry":[{},"14\/133.333, 15.5\/150","9.5\/125, 11\/150"]},{"entry":["outlineOpacity","0.601583","0.4"]},{"entry":["outlineRed","0.242527","0"]},{"entry":["outlineThickness [1]","0.175\/100, 0.144\/120,","0.267\/100, 0.222\/120,"]},{"entry":[{},"0.139\/125, 0.129\/133.333,","0.211\/125,"]},{"entry":[{},"0.116\/150","0.2\/133.333, 0.182\/150"]},{"entry":["outsideShadowBlue","0","0"]},{"entry":["outsideShadowBlurRadius","0.66","1.07175"]},{"entry":["outsideShadowGreen","0","0"]},{"entry":["outsideShadowOffsetX","\u22120","0"]},{"entry":["outsideShadowOffsetY","1.503958","0"]},{"entry":["outsideShadowOpacity","0.601583","1"]},{"entry":["outsideShadowRed","0","0"]},{"entry":["outsideShadowScale","1","1"]},{"entry":["roundRectHorizontal","1","1"]},{"entry":["roundRectPointerDirection","0","0"]},{"entry":["roundRectPointerShape","0","0"]},{"entry":["roundRectPointiness","1.570796","1.570796"]},{"entry":["showButton","1","1"]},{"entry":["showFigure","1","0"]},{"entry":["showHighlight","1","1"]},{"entry":["showInlay","0","0"]},{"entry":["showInsideColoring","0","0"]},{"entry":["showInsideShadow","0","0"]},{"entry":["showOutline","0","0"]},{"entry":["showOutlineShadow","0","0"]},{"entry":["templateMatchBottom [1]","7.308\/100, 9.048\/125,","7.5\/100, 9\/120,"]},{"entry":[{},"9.744\/133.333, 10.788\/150","9.5\/125, 11\/150"]},{"entry":["templateMatchChop [1]","1","0"]},{"entry":["templateMatchHoriz [1]","12.348\/100, 15.288\/125,","7.5\/100, 9\/120,"]},{"entry":[{},"16.464\/133.333, 18.228\/150","9.5\/125, 11\/150"]},{"entry":["templateMatchLeft [1]","6.552\/100, 8.112\/125,","7.5\/100, 9\/120,"]},{"entry":[{},"8.736\/133.333, 9.672\/150","9.5\/125, 11\/150"]},{"entry":["templateMatchRight [1]","6.3\/100, 7.8\/125,","7.5\/100, 9\/120,"]},{"entry":[{},"8.4\/133.333, 9.3\/150","9.5\/125, 11\/150"]},{"entry":["templateMatchTop [1]","3.024\/100, 3.744\/125,","7.5\/100, 9\/120,"]},{"entry":[{},"4.032\/133.333, 4.464\/150","9.5\/125, 11\/150"]},{"entry":["templateMatchVert","0","7.5\/100, 9\/120,"]},{"entry":[{},{},"9.5\/125, 11\/150"]},{"entry":["undulationAmount","0","0"]},{"entry":["undulationBlue","0","0"]},{"entry":["undulationGreen","0","0"]},{"entry":["undulationPeriod [1]","22\/100, 27\/125, 28\/133.333,","16"]},{"entry":[{},"33\/150"]},{"entry":["undulationRed","0","0"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":"[1] The notation W\/100, X\/125, Y\/133.333 and Z\/150 indicates a value W should be used for a resolution of 100 pixels per inch, and so forth."},{"entry":"[2] Attributes whose values are set through material maps (i.e., button material map, highlight material map and inlay material map)."},{"entry":"[3] Represents a file name. For example, an extension is added (e.g., \u201c.png\u201d for image files or \u201c.pdf\u201d for vector line art files)."}]}}]}}},"In a current embodiment, graphical user interface objects identified in Table 2 may be defined\/specified using the attributes (left-hand column) identified in Table 1. It will also be recognized that while many of the attributes above are specified by values in units of pixels, in other embodiments attribute values may be expressed in terms of a relative factor to a predetermined size factor.",{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Illustrative Graphical Interface Objects"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Help Button (regular, small, mini)","Back Button (regular, small)"]},{"entry":["Round Button (regular, small)","Push Button (regular, small, mini)"]},{"entry":["Square Bevel Button (regular, small, mini)","Rounded Bevel Button (regular, small, mini)"]},{"entry":["Metal Button (regular, small, mini)","Segment Control (regular, small, mini)"]},{"entry":["Window Title Bar Controls (regular, small, mini)","Disclosure Button (regular, small, mini)"]},{"entry":["Arrow Pop-Up Button (regular, small, mini)","Pop-Up Button (regular, small, mini)"]},{"entry":["Combo Button (regular, small, mini)","Pulldown Button (regular, small, mini)"]},{"entry":["Check Box (regular, small, mini)","Radio Button (regular, small, mini)"]},{"entry":["Scroll Bar Track (regular, small)","Scroll Bar Thumb (regular, small)"]},{"entry":["Scroll Bar Caps (regular, small)","Slider Track (regular, small, mini)"]},{"entry":["Circular Slider Thumb (regular, small, mini)","Pointed Slider Thumb (north, east, south,"]},{"entry":[{},"west orientations) (regular, small, mini)"]},{"entry":["Rectangular Text Field (regular, small, mini)","Round Text Field (regular, small, mini)"]},{"entry":["Tabs (north, east, south, west orientations)","Determinate Progress Bar (regular, small)"]},{"entry":["Asynchronous Progress Indicator","iDisk Synch Progress Indicator"]},{"entry":["Pane Splitter","Drawer"]},{"entry":["List Box","Metal Window Shaping"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"To create a graphical user interface object, the body color of the object (for each point on the object) and the anti-aliased visibility mask of the object are needed. The body color of an object may be obtained by using a three-dimensional representation of the object, or by creating a virtual representation of the object that defines the surface normal for each pixel on the object. Once a unit-length surface normal vector is computed at a point p, the x and y coordinate values of this vector may be used to compute the apparent color of the object at point p by looking up a color from the object's relevant material map. If the map is n pixels high and n pixels wide (this is done because a shaded sphere is inscribed in the map), one can address the material map at the two-dimensional location given by:",{"@attributes":{"id":"p-0034","num":"0033"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mo":["(",")"],"mrow":{"mfrac":[{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":"x","mo":"+","mn":"1"}},"mo":"\u2062","mi":"n"},"mn":"2"},{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":"y","mo":"+","mn":"1"}},"mo":"\u2062","mi":"n"},"mn":"2"}],"mo":","}}},{"mrow":{"mi":"EQ","mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"1"}}]}}}},"br":{}},"This same technique may be used in conjunction with a material map that possesses alpha (transparency) information. Once a color (with alpha) is looked up from a transparency material map, a highlight may be overlaid onto the object by using the alpha as a coverage fraction for the color from the map. Standard compositing methods may be used to accomplish this overlay operation.","An object's anti-aliased visibility mask may be obtained by computing a field that provides distance from the edge of the object. This field can be evaluated using a procedural description of the object. For example, a lozenge may be defined as the set of points at distance r or less from a finite non-zero-length line segment from point (p, p) to point (p, p). The distance d from the aforementioned line segment may be calculated at point (px, py) by a function such as that provided in Table 3 below.",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Illustrative Field (Distance) Calculation for a Lozenge Object"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Let vx, vy, length, wx, wy, and d be floating"]},{"entry":[{},"point values, then"]},{"entry":[{},"vx = p1x \u2212 p2x"]},{"entry":[{},"vy = p1y \u2212 p2y"]},{"entry":[{},{}]},{"entry":[{},{"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"length","mo":"=","msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mi":"vx"},"mn":"2"},{"mrow":{"mo":["(",")"],"mi":"vy"},"mn":"2"}],"mo":"+"}}}}}}]},{"entry":[{},{}]},{"entry":[{},{"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"vx","mo":"=","mfrac":{"mi":["vx","length"]}}}}}]},{"entry":[{},{}]},{"entry":[{},{"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"vy","mo":"=","mfrac":{"mi":["vy","length"]}}}}}]},{"entry":[{},{}]},{"entry":[{},"wx = px \u2212 p1x"]},{"entry":[{},"wy = py \u2212 p1y"]},{"entry":[{},"d = |(wx \u00d7 vy) \u2212 (wy \u00d7 vx)|"]},{"entry":[{},"\u2003determine distance from line if"]},{"entry":[{},"((vx \u00d7 wx) + (vy \u00d7 wy)) > 0"]},{"entry":[{},"\u2003that is, if past point p1"]},{"entry":[{},{}]},{"entry":[{},"\u2003\n\n"]},{"entry":[{},{}]},{"entry":[{},"\u2003use distance from p1"]},{"entry":[{},"wx = px \u2212 p2x"]},{"entry":[{},"wy = py \u2212 p2y"]},{"entry":[{},"if ((vx \u00d7 wy) \u2212 (vy \u00d7 wy)) < 0"]},{"entry":[{},"\u2003that is, if past point p2"]},{"entry":[{},{}]},{"entry":[{},"\u2003\n\n"]},{"entry":[{},{}]},{"entry":[{},"\u2003use distance from p2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Given the distance function d defined above (see Table 1), an anti-aliased transparency value (mask) for the graphical user interface object may be computed as shown in Table 4. The same distance field may be used to construct the outline of the user interface object.",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Illustrative Transparency Value (Mask) Calculation"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"mask = r\u2212d"]},{"entry":[{},"if (mask > 1.0)mask"]},{"entry":[{},"= 1.0"]},{"entry":[{},"if (mask < 0.0)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"mask = 0.0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Various changes or modifications in the foregoing description may be made without departing from the concept of the invention. For example, attributes other than, or in addition to, those identified in Table 1 may be used to specify an object. In addition, objects other than, or in addition to, those identified in Table 2 may be specified in accordance with the invention. Further, hierarchical storage means other than an XML file may be used to store an object's procedural specification.","It will be recognized that methods to represent and render a graphical user interface object in accordance with this description may be performed by a programmable control device executing instructions organized into one or more program modules. A programmable control device may be a single computer processor, a special purpose processor (e.g., a digital signal processor, a graphics processing unit or a programmable graphics processing unit), a plurality of processors coupled by a communications link or a custom designed state machine. Custom designed state machines may be embodied in a hardware device such as an integrated circuit including, but not limited to, application specific integrated circuits (\u201cASICs\u201d) or field programmable gate array (\u201cFPGAs\u201d). Storage devices suitable for tangibly embodying program instructions include, but are not limited to: magnetic disks (fixed, floppy, and removable) and tape; optical media such as CD-ROMs and digital video disks (\u201cDVDs\u201d); and semiconductor memory devices such as Electrically Programmable Read-Only Memory (\u201cEPROM\u201d), Electrically Erasable Programmable Read-Only Memory (\u201cEEPROM\u201d), Programmable Gate Arrays and flash devices.","Accordingly, the preceding descriptions were presented to enable any person skilled in the art to make and use the invention as claimed and were provided in the context of the particular examples discussed above, variations of which will be readily apparent to those skilled in the art. Accordingly, the claims appended hereto are not intended to be limited by the disclosed embodiments, but are to be accorded their widest scope consistent with the principles and features disclosed herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 5A through 5J"}]},"DETDESC":[{},{}]}
