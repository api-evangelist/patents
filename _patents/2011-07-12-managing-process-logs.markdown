---
title: Managing process logs
abstract: Systems, methods and techniques relating to managing process logs are described. A described technique includes identifying an end-to-end business process from a first system; identifying a plurality of systems that execute at least a portion of the end-to-end business process based on a definition of the end-to-end business process within the process registry; identifying a plurality of local process logs associated with the end-to-end business process for the a plurality of systems as defined by the process registry; and generating a federated process log based on at least a portion of each of the a plurality of local process logs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08725550&OS=08725550&RS=08725550
owner: SAP AG
number: 08725550
owner_city: Walldorf
owner_country: DE
publication_date: 20110712
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure relates to managing process logs.","An end-to-end business process may include multiple local processes executed across different business systems and\/or by applications of different types or with different functionalities. The execution of the end-to-end business process may take place as workflow and\/or built-in process that executes the implemented business logic of the underlying application. Each of the local processes may generate a process log that stores information for monitoring the execution of the particular local process. When the process log is generated by each individual business process, it may typically be stored in the system where the business process is executed at and\/or associated with the particular business process type.","This disclosure provides various implementations of systems, software and methods for managing business process logs. A first local process log of a first business process executing locally at a first system is identified, the first business process includes a first portion of an end-to-end business process associated with at least two business processes. A process registry is accessed to identify a second system executing a second business process associated with the end-to-end business process. A second local process log of the second business process executing locally at the second system is identified, the second business process includes a second portion of the end-to-end business process. A federated end-to-end process log is generated based on a combination of at least a portion of the identified first local process log and at least a portion of the identified second local process log.","While generally described as computer program product that processes and transforms the respective data, some or all of the aspects may be computer implemented methods or further included in respective systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the disclosure will be apparent from the description and drawings, and from the claims.","A business process (or business method) may be a sequence of related, structured activities and\/or tasks that produce a specific service or product to serve a particular goal for one or more business customers. The business process may be implemented by computer program product(s) executed on one or more business systems. A business system may be any logical system that performs one or more business-related tasks. During the execution of the business process, a process log of the business process may be generated. The process log may include information descriptive of one or more aspects of the business process, and may be used for monitoring at least the execution of the business process.","In some instances, more than one local business process may be combined to form an end-to-end (E2E) business process (or a business process chain). More than one local business process may be implemented by different business applications, and\/or executed on different business systems. Each business process may be associated with a process definition that defines concepts, relationships, semantics, and so forth, associated with elements of the particular business process. The process definition may also define an identification (e.g., a type code) and\/or one or more integration points associated with the particular business process. Local business processes included in the same E2E business process may have the same identification and\/or matching integration points. The process definition that includes the identification may be stored in a process registry communicably coupled to one or more systems executing the more than one local business process. In some instances, only parts or a subset of the process definition may be stored in the process registry, as opposed to the complete process definition.","Process logs generated by different local business processes included in an E2E business process may be orchestrated to generate a federated E2E process log. In some implementations, the process of federating process logs of an E2E business process may start from a local context, where a log federation related computer program product may execute instructions to identify a first business process log of a first business process executing locally at a first business system. The computer program product may then execute instructions to access a process registry to identify a second system executing a second business process associated with the E2E business process. In some instances, the association between the second business process and the E2E business process may be determined based on an identification of one or more integration points of the second business process that is the same as the identification of the first business process. The computer program product may further execute instructions to identify a second local process log of the second business process executing locally at the second system. The computer program product may execute instructions to repeat the process until it identifies a certain number of process logs that need to be federated. A federated E2E process log may then be generated based on the identified process logs. In some implementations, the process of federating process logs of an E2E business process may start from a central context, where a log federation computer program product may execute instructions to identify an E2E business process based on information stored in a process registry. The computer program product may then execute instructions to identify a plurality of systems communicably coupled to the registry, and execute at least a portion of the E2E business process. The computer program product may further execute instructions to identify a plurality of local process logs associated with the E2E business process for the identified plurality of systems. A federated E2E process log may then be generated based on the identified local process logs. Although described as a business process executed on business systems, the different implementations disclosed in the present application can be applied to any suitable logical process and\/or systems.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","100","110","150","180","140","110","115","138","150","155","115","155"]},"In the example  illustrated in , business system A  includes a server . The server  can accommodate hardware and\/or software components including a processor , one or more business applications , a log federation application , a master process registry  and a graphic user interface (GUI) , a memory  and an interface . In general, the server  can be any server that stores one or more hosted and\/or client business applications  that may be used to execute at least a portion of an E2E business process. In some instances, the server  may store a plurality of different business applications  (or instances thereof), while in other instances, the server  may be a dedicated server meant to store and execute only a single business application . At a high level, the server  comprises an electronic computing device operable to receive, transmit, process, store, or manage data and information associated with the environment . Specifically, the server  illustrated in  may be responsible for receiving business requests from one or more client applications associated with one or more external business customers communicably coupled to or operating in the example environment  and responding to the received requests by processing said requests in the associated business applications , and sending the appropriate response back to the requesting client applications. In addition to requests from the external business customers, requests may also be sent from internal users, or third-party customers, other automated applications, as well as any other appropriate entities, individuals, systems, or computers. As used in the present disclosure, the term \u201ccomputer\u201d is intended to encompass any suitable processing device. Although  illustrates a single server , a business system can be implemented using two or more servers , as well as computers other than servers, including a server pool. Indeed, server  may be any computer or processing device such as, for example, a blade server, general-purpose personal computer (PC), Macintosh, workstation, UNIX-based workstation, or any other suitable device. In other words, the present disclosure contemplates computers other than general purpose computers, as well as computers without conventional operating systems. Further, illustrated server  may be adapted to execute any operating system, including Linux, UNIX, Windows, Mac OS, or any other suitable operating system.","The processor  included in the server  executes one or more business applications  and a log federation application  for business system A . Although illustrated as a single processor  in , two or more processors may be used according to particular needs, desires, or particular implementations of the environment. Each processor  may be a central processing unit (CPU), a blade, an application specific integrated circuit (ASIC), a field-programmable gate array (FPGA), or another suitable component. Generally, the processor  executes instructions and manipulates data to perform the operations of the server  and, specifically, the one or more plurality of business applications . The processor  also executes the functionality required to receive and respond to requests from business customers, and\/or their respective client applications, as well as the functionality required to perform the other operations of business system A . Regardless of the particular implementation, \u201csoftware\u201d may include computer-readable instructions, firmware, wired or programmed hardware, or any combination thereof on a tangible and non-transitory medium operable when executed to perform at least the processes and operations described herein. Indeed, each software component may be fully or partially written or described in any appropriate computer language including C, C++, Java, Visual Basic, assembler, Perl, any suitable version of 4GL, as well as others. It will be understood that while portions of the software illustrated in  are shown as individual modules that implement the various features and functionality through various objects, methods, or other processes, the software may instead include a number of sub-modules, third-party services, components, libraries, and such, as appropriate. Conversely, the features and functionality of various components can be combined into single components as appropriate. Aspects of the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).","Processors  suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor  will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor  for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive, data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example, semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor  and the memory  can be supplemented by, or incorporated in, special purpose logic circuitry.","One or more business applications  and a log federation application  are executed at the server . In particular, business applications  may be any software\/computer program including instructions for implementing one or more business processes and generating corresponding business process logs. Log federation application  may be a software\/computer program including instructions for federating process logs generated by different business applications  and\/or across different business systems. A software\/computer program may be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A software\/computer program may, but need not, correspond to a file in a file system. A software\/program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A software\/computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network .","The server  includes a master process registry . A process registry  may provide information including realized business process chains and\/or federated processes within different business systems on a metadata level. In some implementations, the master process registry is called an E2E process registry. The master process registry  may be a registry in communicable condition with all the business systems in the example environment . In some implementations, the master process registry  may be a database that includes a set of database tables which store information per process definition and logical system in which the process definition is active. The information stored in the database may include: (1) Assigned realized process chain definition identification(s); (2) Potential inbound and outbound integration point types and identifications; and (3) Calling relationship between the business processes per realized process chain definition. The master process registry  may be updated when a process definition is activated or updated. The update may be done in an overwrite mode, i.e., old registry entries if exist are replaced by new entries. In some instances, the master process registry  is updated by the use of an application programming interface (API) (not shown). Via this API, the process registry  may provide for a given process definition a list of other processes which are also part of the realized process chains the given process is assigned to (according to the maintained data of the business process in the process registry ). The output may include the integration points of those processes. A filtering may take place if one or more integration points (e.g., type, identification) with direction are provided as input to those business processes which utilize the same integration point as counterparts. In some implementations, a process registry may be remote to any of the business systems , ,  in the illustrated environment . A business process expert may perform E2E process log federation from a central context based on the information stored in the remote process registry.","The illustrated server  may also have a GUI  comprising a graphical user interface operable to interface with at least one application for any suitable purpose, including generating a visual representation of at least a portion of an E2E business process log, or an individual business process log. Generally, through the GUI , the user is provided with an efficient and user-friendly presentation of data provided by or communicated within the system. The term \u201cgraphical user interface,\u201d or GUI, may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore, the GUI  can represent any graphical user interface, including but not limited to, a web browser, touch screen, or command line interface (CLI) that processes information in environment  and efficiently presents the information results to the user. In general, the GUI  may include a plurality of user interface elements, some or all associated with the business applications  and the log federation application , such as interactive fields, pull-down lists, and buttons operable by a business process expert. These and other user interface elements may be related to or represent the functions of the applications, as well as other software applications executing at the server .","The server  further includes a memory . In general, memory  may include any memory or database module and may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, random access memory (RAM), read-only memory (ROM), removable media, or any other suitable local or remote memory component. Memory  may store various objects or data, including classes, frameworks, applications, backup data, business objects, jobs, web pages, web page templates, database tables, repositories storing business and\/or dynamic information, and any other appropriate information including any parameters, variables, algorithms, instructions, rules, constraints, or references thereto associated with the purposes of the server  and its one or more hosted applications. Additionally, memory  may include any other appropriate data, such as VPN applications, firmware logs and policies, firewall policies, a security or access log, print or other reporting files, as well as others. In the illustrated example , The memory  includes a business process repository  for storing information associated with one or more business processes , an application repository  for storing the hosted applications of the server , and a process log data repository  for storing process logs generated by the hosted applications.","As shown in , the server  also includes an interface . The interface  is used by the server  for communicating with other business systems in the illustrated example environment  through a network . Generally, the interface  includes logic encoded in software and\/or hardware in a suitable combination and operable to communicate with the network . More specifically, the interface  may comprise software supporting one or more communication protocols associated with communications such that the network  or interface's hardware is operable to communicate physical signals within and outside of the illustrated environment . In some instances, the interface's hardware may include wireless transceivers and antenna (not shown). The wireless transceivers can include both the transmitter circuitry and the receiver circuitry. The wireless transceivers may be responsible for up-converting a baseband signal to a passband signal or vice versa. The components of wireless transceivers may include a digital to analog converter\/analog to digital converter, amplifier, frequency filter and oscillator. The antenna is a transducer which can transmit and\/or receive electromagnetic waves. The antenna can convert electromagnetic radiation into electric current, or vice versa. The antenna is generally responsible for the transmission and reception of radio waves, and can serve as the interface between the transceiver and the wireless channel.","The server  may be communicably coupled to an output device, (e.g., a display ) that conveys information associated with the operation of the server  (e.g., a process log presented through a GUI . The display  may be used for presenting one or more E2E business process logs for business process monitoring, and\/or one or more components business process logs for the log federation by a business process expert.","It will be understood that besides the server  and the display , business system A  may include other components that are suitable for any business implementation without departing from the scope of the disclosure.","Business system A  is communicably coupled to business system B , and\/or other business systems  through a network . Generally, the network  facilitates wireless or wireline communications between the devices operated in the environment , as well as with any other local or remote devices communicably coupled to the network  but not illustrated in . The network  is illustrated as a single network in , but may be a continuous or discontinuous network without departing from the scope of this disclosure, so long as at least a portion of the network may facilitate communications between senders and recipients. The network  may be all or a portion of an enterprise or secured network, while in another instance, at least a portion of the network  may represent a connection to the Internet. In some instances, a portion of the network  may be a virtual private network (VPN), such as, for example, the connection between business system A  and business system B . Further, all or a portion of the network  can comprise either a wireline or wireless link. Example wireless links may include 802.11a\/b\/g\/n, 802.20, WiMAX, Bluetooth and\/or any other appropriate wireless link. In other words, the network  encompasses any internal or external network, networks, sub-network, or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment. The network  may communicate, for example, Internet Protocol (IP) packets, Frame Relay frames, Asynchronous Transfer Mode (ATM) cells, voice, video, data, and other suitable information between network addresses. The network  may also include one or more local area networks (LANs), radio access networks (RANs), metropolitan area networks (MANs), wide area networks (WANs), all or a portion of the Internet, and\/or any other communication system or systems at one or more locations.","In the illustrated example environment , business system B  includes a computer . The computer  accommodates software and hardware components including a processor , one or more business applications , a log federation application , a local process registry , a GUI , an interface  and a memory . In general, the computer  can be any electronic computer device operable to receive, transmit, process, and store any appropriate data associated with the environment  of . It will be understood that there may be any number of computers  associated with, or external to, business system B . As used in this disclosure, computer  is intended to encompass a personal computer, touch screen terminal, workstation, network computer, server, one or more processors within these or other devices, or any other suitable processing device. For example, each computer  may include an input device, such as a keypad, touch screen, mouse, or other device that can accept user information, and an output device, (e.g., a display) that conveys information associated with the operation of the computer  itself, including digital data, visual information, business applications , log federation application  or the GUI . Both the input and output device may include fixed or removable storage media such as a magnetic storage media, CD-ROM, or other suitable media to both receive input from and provide output to users and\/or present the output on the display.","In some implementations, the software and hardware components included in the computer  may have functionalities that are similar or different in nature to that of their respective counterpart included in the server . In some instances, the process registry included in the computer is a local process registry , i.e., the local process registry  may not have access to integration points and\/or business definitions stored in business systems other than business system B . When the registry included in the computer  is a local business registry , the log federation application  may only be able to orchestrate process logs generated by business processes executed on business system B . The illustrated memory  included in business system B  includes a business process repository  and an application repository . In some instances, the memory  may also include a process log data warehouse (not shown) to store process logs generated by business processes on business system B .","It will be understood that besides the computer , business system B  may include other components that are suitable for any business implementation without departing from the scope of the disclosure.","The example system environment  may also include other business systems  operable to implement business processes similar or different in nature to that of business system A  and\/or business system B . An E2E business process may include business processes executed on business system A , business system B , other business systems , or any combination thereof.","While  is described as containing or being associated with a plurality of elements, not all elements illustrated within environment  of  may be utilized in each alternative implementation of the present disclosure. Additionally, one or more of the elements described herein may be located external to environment , while in other instances, certain elements may be included within or as a portion of one or more of the other described elements, as well as other elements not described in the illustrated implementation. Further, certain elements illustrated in  may be combined with other components, as well as used for alternative or additional purposes, in addition to those purposes described herein.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2","b":["200","200","210","215","215","275","210","210","215","210"],"i":["a","b"]},"Business application units  may be computing units for executing business\/network applications. Business application unit A and business application unit B may execute different business\/network applications. For example, business application unit A may execute a customer relationship management application, and business application unit B may execute an enterprise management application. Business application unit A and business application unit B may be included in the same or different business system. When business application unit A and business application unit B are included in the same business system, the E2E process registry  may be either a local process registry  or a master process registry  as described in the illustration of , and the log federation may also be called a local process log federation. When the business application unit A and business application unit B are included in different business systems, the E2E process registry  may be a master process registry.","Each of the illustrated business application units  includes a local process monitor , a process fa\u00e7ade , a local process manager , a local process engine , a local process design-time unit , a local process log , and one or more local process definitions . Line  illustrates that the business process expert  can analyze one or more E2E process instances by reading information from the local process monitor . The local process monitor  may include or provide a user interface that presents a view for business processes and\/or business process logs operated on the business application units . The information presented by the local process monitor  may be read from a process fa\u00e7ade , which can provide a normalized interface for business processes and\/or process logs generated using different types\/levels of applications. The process fa\u00e7ade  may also be communicably coupled to the E2E process registry, and the process fa\u00e7ade included in other business application units. The process fa\u00e7ade  may read local process log  that is associated with the same E2E business process from other business application unit. Local process manager , local process engine , and local process design-time  are infrastructures for local process log  orchestration. Local process definitions  may be used by the infrastructures to create local process log . The local process definitions  may store information descriptive of how the local process definition is related to an E2E process definition , and\/or the integration point(s) of the local business process with other local business processes on the same or different business systems. The E2E process definition  may be stored in or communicably coupled to the E2E process registry . The E2E process definition  may store information including integration points and identification information of one or more E2E business processes executed by multiple business applications and\/or multiple business systems.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["300","300","310","315","320","325","330","335","310","310"]},"At , the logical system A  sends a \u201cgetRelatedProcessDefinition\u201d command to the process registry  to retrieve related process definitions. The local process log may be generated by a local business process which may be a component of any part of the E2E business process. At , the process registry returns information to logical system A  including a list of local processes and their logical systems associated with the E2E business process and one or more integration points. Based on the logical system and integration points returned from the process registry, logical system A  may identify logical system M  executing a business process that is also part of the E2E business process. The identified local process log executed by, maintained by, or located at logical system M  may be associated with communication identifications that are shared by two or more of the local process logs that form the E2E process log for the E2E business process. The integration points may be used to identify how to concatenate or otherwise combine local process logs from two or more systems to form or create an E2E process log. After identifying the local process logs associated with the E2E business process, logical system A  sends a \u201cgetRelatedProcessLog\u201d command with the communication identifications as data or parameters to logical system M  at , and, in response to command, logical system M  may return the identified local process logs associated with the E2E business process at . Similarly, logical system A  may also send a \u201cgetRelatedProcessLog\u201d command to logical system N  at , and receive a returned local process log from logical system N  at . The executions of sending the \u201cgetRelatedProcessLog\u201d commands to logical system M  and logical system N  may be performed either in serial or in parallel, allowing for information related to a plurality of local process logs associated with other E2E-related systems to be collected concurrently. In some instances, logical system A , M  and N  may be a portion of all the systems involved to perform the E2E business process. As such, the federated E2E process log generated may be a portion of the entire E2E process log. Additional systems other than those illustrated may also be contacted using similar or other suitable operations as described in method .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 4","FIG. 1","FIG. 1"],"b":["400","400","122","162","410","110","150"]},"At , a process registry for process definition is accessed. The process definition (or portion thereof) stored in the registry may include identifications of a plurality of local business process, E2E business processes, and, optionally, local process log information. In some instances, the process definition may describe the communication and interaction between two or more business processes or events associated with a local or E2E business process. The process definition may also include one or more integration points. In some implementations, the one or more integration points can be used for integrating at least two local process logs to generate at least a portion of federated E2E business log. By accessing the process definition stored in the process registry, an E2E business process that has the same integration points as, or is identified as being associated with, the first local process log may be identified. At , a second system executing a second business process associated with the E2E business process is identified based at least in part on the process registry and its process definition. The second system executing the second business process may be identified based on the integration points or business object types that are common to or linked between the first and second system and the process definition. The second system may also be identified based on another relevant description or association described within or referenced by the process registry. In some instances, the first system and the second system are the same, and the process registry may be either a local process registry or a master process registry. When the first system and the second system are different, the process registry is a master process registry. At , a second local process log is identified. The second process log may be generated by the second business process and is associated with the second business process. In some instances, the second local process log may be identified within the process registry, while in others, the second local process log may be identified based on an identification of the second business process and subsequent search or retrieval of the process log associated therewith.","At , the first local process log and the second process log may be stored in a data warehouse. In some implementations, storing the first local process log and the second process log in a data warehouse may be an optional step. The data warehouse may be the data warehouse included in the memory ,  described in the illustration of . In some instances, the first business process and the second business process may be parts of more than one E2E business process. After storing the first local process log and the second process log in a data warehouse, the first local process and the second local process log may be retrieved for any of the more than one E2E business process log federation. While in other implementations, the first local process log and the second local process log may be directly read by the computer program product (e.g., a log federation application ,  described in the illustration of ) from their respective local business system without storing to the same data warehouse.","At , a federated E2E process log is generated. The federated E2E process log may be generated based on combining some or all of the identified first and second process logs corresponding to the matching integration points and their related communication identifications or business object identifications. In some instances, when a local process log for an E2E business process is associated with only one integration point, the corresponding business process may be the beginning or the end part of the E2E business process. Otherwise, the local process log may correspond to a business process comprising a middle, or intermediate, part of the E2E business process. In some instances, the E2E business process may include only the first business process and the second business process. As such, the federated process log is a process log of the entire E2E business process. Otherwise, the federated process log is a portion of the entire E2E business process log. In some implementations, a third local process log associated with the E2E business process on a third system may be identified using a similar method as described above for identifying the second local process log. Then the first, second and third local process log may be federated to generate at least a portion of the E2E process log.","At , a report that is descriptive of the federated process log is generated. After a federated process log is generated for at least a portion of an E2E business process, it may be presented via a user interface (such as the GUI  as described in the illustration of ) on a display to a business process expert or other business system users for monitoring the E2E business process. In some instances, the generated report is not displayed but stored in a memory. At , access to the generated report by the first system or the second system is engaged, such that any user operating in the first system or the second system that has been engaged may have access to view and\/or editing the report.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 5","b":["500","510","520"]},"At , a plurality of local process logs associated with the E2E business process for the plurality of systems are identified and retrieved. At , a federated process log is generated based on the retrieved plurality of local process logs. At , each of the identified plurality of local process logs is accessed. In some implementations, only a portion of the business log (e.g., process log segment related to a specific operation of the E2E business process) for each local business process are of interest. As such, at , a portion of each of the plurality of local process logs relevant to the E2E business system may be identified. At , the identified portion of each of the plurality of local process logs are combined to generate the federated process log.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 6","FIG. 6"],"b":["600","600","620","610","630","620","650","640","660","650","620","620","620","620","630","630","630","600","620","620","650","620","650","650","630","630","620","620","680","680","630","660","680","630","660","630","610","660","640","660","630","630","660","630","660","680","670","670"],"i":["a","b ","c ","a","b ","c","a","b","a","c","b","c","a ","b ","a ","b ","b ","b ","b ","a ","c","c ","b"]},"While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any that may be claimed, but rather as descriptions of features specific to particular implementations. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely, various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.","Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described components and systems can generally be integrated together in a single product or packaged into multiple products.","In the present disclosure, \u201ceach\u201d refers to each of multiple items or operations in a group, and may include a subset of the items or operations in the group and\/or all of the items or operations in the group. In the present disclosure, the term \u201cbased on\u201d indicates that an item or operation is based at least in part on one or more other items or operations and may be based exclusively, partially, primarily, secondarily, directly, or indirectly on the one or more other items or operations.","A number of embodiments of the present disclosure have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the present disclosure. Accordingly, other embodiments are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
