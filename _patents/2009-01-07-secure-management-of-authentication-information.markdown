---
title: Secure management of authentication information
abstract: A system, method and computer program product are provided for managing authentication information for a user. According to the method, a master digital key is received from the user, and authentication of the user is obtained based on the master digital key. There is received from the user a selection of one identity from among a plurality of identities that are stored for the user. Authentication information for the user is provided into an application or web page based on the one identity selected by the user. In one embodiment, the authentication information is provided by recognizing a web page for which authentication information is stored, and automatically filling the authentication information for the user into appropriate elements of the web page.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08402518&OS=08402518&RS=08402518
owner: International Business Machines Corporation
number: 08402518
owner_city: Armonk
owner_country: US
publication_date: 20090107
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This is a continuation of application Ser. No. 10\/774,723, filed Feb. 9, 2004, now U.S. Pat. No. 7,490,242. The entire disclosure of prior application Ser. No. 10\/774,723 is herein incorporated by reference.","1. Field of the Invention","This invention generally relates to the field of management of authentication information and more specifically to secure management of authentication information in a distributed computing environment.","2. Description of Related Art","As the popularity of the Internet increases, consumers are increasingly using the Internet to conduct business, organize their lives and access information. Thus, users today use the Web to do their banking, make stock trades, review their personal medical information and perform other tasks involving sensitive data. In order to protect consumers' sensitive data, web sites typically require a user to be authenticated in order to access confidential information. Authentication usually includes the provision of a user name, or login name, and a password. As a result, many Internet users today are required to manage a large number of user names and passwords for various web sites and security contexts. This can be time consuming to manage and tedious. It is common for users to keep their authentication information in an unsecured file, often just a plain text file, or a physical list","There are several problems with unsecured files or lists. For example, most of these files and lists are not properly secured by any sort of security or encryption method. Second, these files keep growing in size and structure beyond what's manageable via a simple text editor. Other major drawbacks of these files are the lack of formal backup and the lack of availability across computing devices. Further, there is not an easy way for exposing any of the information in these files to other applications or users without compromising the entire file.","One known solution to this problem is provided by features of the Microsoft's Internet Explorer web browser (available form Microsoft Corporation of Redmond, Wash.). Internet Explorer stores passwords for a user and provides completion assistance for form values. However, Internet Explorer does not provide a mechanism for storing a form's complete state, such as the states of HTML elements such as checkboxes and radio buttons. Further, Internet Explorer only stores one set of authentication data per URL, and does not allow multiple identities to be associated with a single URL. Additionally, Internet Explorer makes authentication data part of the operating system configuration, and fails to address management of multiple identities across multiple computers.","Therefore a need exists to overcome the problems discussed above, and particularly for a way to more securely manage authentication information in a distributed computing environment.","Briefly, in accordance with the present invention, disclosed is a system, method and computer program product for managing authentication information for a user.","One embodiment of the present invention provides a method for managing authentication information for a user. According to the method, a master digital key is received from the user, and authentication of the user is obtained based on the master digital key. There is received from the user a selection of one identity from among a plurality of identities that are stored for the user. Authentication information for the user is provided into an application or web page based on the one identity selected by the user. In one embodiment, the authentication information is provided by recognizing a web page for which authentication information is stored, and automatically filling the authentication information for the user into appropriate elements of the web page.","Another embodiment of the present invention provides a system for managing authentication information for a user. The system includes a first interface that receives a master digital key from the user, and a second interface that receives from the user a selection of one identity from among a plurality of identities that are stored for the user. The system further includes an ID manager that provides authentication information for the user into an application or web page based on the one identity selected by the user. Authentication of the user is obtained based on the master digital key.","The foregoing and other features and advantages of the present invention will be apparent from the following more particular description of the preferred embodiments of the invention, as illustrated in the accompanying drawings.","1. Overview","The present invention, according to a preferred embodiment, overcomes problems with the prior art by providing an efficient and easy-to-implement method for providing secure management of authentication information and identities in a distributed computing environment.","One advantage of the preferred embodiment of the present invention is automated recognition or acquisition of an authentication prompt. The system analyzes the operation of an application, such as a web browser, in order to recognize an authentication prompt and facilitate the provision of authentication information, or credentials, into the application. In the instance of a web browser application, HTML web content of a web page is analyzed in order to recognize an authentication prompt and provide login, password and identity information into the web page. This is beneficial as the authentication process does not require user interaction and it makes the authentication process transparent to the user.","Yet another advantage of the preferred embodiment of the present invention is secure authentication information storage. All authentication information, including login, password and identity information, is stored in an encrypted state that is only accessible via a master digital key. This is beneficial as it allows a user to remember only one digital key (e.g., password) instead of multiple logins, passwords and identities.","Yet another advantage of the preferred embodiment of the present invention is automated execution of authentication operations. A user may browse their authentication information database, select a context or identity, and launch an authentication process. There is then facilitated the provision of authentication information, or credentials, into an application. This is beneficial as the authentication process does not require user interaction and it makes the authentication process appear to be seamless.","Yet another advantage of the preferred embodiment of the present invention is authentication information management in a distributed computing environment. A user's authentication information can be stored on more than one computer in a network, or on a server of a client-server network. Encrypted authentication information is automatically fetched based on the current user's login profile. This is beneficial as it allows a user to automate the authentication process from any location on a network having access to the stored authentication information.","Yet another advantage of the preferred embodiment of the present invention is compatibility through the use of plug-ins and APIs. Plug-ins and APIs allow authentication prompts from an application to be recognized and authentication information to be directly entered into the application on behalf of a user. This is beneficial as it allows the present invention to be utilized on a variety of platforms and with a variety of applications having authentication processes.","Yet another advantage of the preferred embodiment of the present invention is compatibility with autonomous applications that require the authentication information of a user in order to perform a task. An example of such an application is an auction assistant that automates the process of participating in an Internet auction on behalf of a user. An auction assistant typically would require a user to enter authentication information pertaining to an Internet auction site. The auction assistant would then utilize the authentication information to enter the Internet auction site and perform its duties. The preferred embodiment of the present invention provides access to the Internet auction site (by automatically providing authentication information to the internet auction site on behalf of the user) to the auction assistant without allowing the auction assistant access to the authentication information. This is beneficial as it allows the authentication information to remain secure and private from any entity other than the user and the site or application that authenticates the user.","For example, the system of one exemplary embodiment of the present invention interfaces with an auction assistant application by acting as a special type of proxy. More specifically, for authentication via web form (as descried below), the auction assistant makes an API call requesting login services for a specific URL and web form. This API call can be through an API to access a local instance of the authentication database or to a remote instance via a secured web service. The HTTP response, which typically contains a \u201csession cookie\u201d for authorizing subsequent requests, is handed back to the auction assistant. This allows the auction assistant to then make additional requests directly to the auction site, until the session cookie expires. For HTTP authentication (as described below), each request is proxied through the system of the present invention because each request contains sensitive authorization data. In both cases, the user may trust the auction assistant application to act on their behalf for a limited period of time, without disclosing permanent credentials. Further, if the auction web site requires completion of a second authorization form (with the same username\/password) before performing critical operations (such as changing a password), the system of this embodiment allows the user to restrict the auction assistant application to authentication only via certain forms so as to allow bidding on auction items but not changing a password. This can prevent the hijacking of the user's account.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["102","104","108","110","108","102","104","108","110","110"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 1","FIG. 1"],"b":["108","124","120","122","120","120","124","120","120"]},"In one embodiment of the present invention, the computer systems of client computers  through  and server  are one or more Personal Computers (PCs) (e.g., IBM or compatible PC workstations running the Microsoft Windows operating system, Macintosh computers running the Mac OS operating system, or equivalent), Personal Digital Assistants (PDAs), hand held computers, palm top computers, smart phones, game consoles or any other information processing devices. In another embodiment, the computer systems of at least one server  and web site  are a server system (e.g., SUN Ultra workstations running the SunOS operating system or IBM RS\/6000 workstations and servers running the AIX operating system). An exemplary computer system for client computers  through , server  and web site  is described in greater detail below with reference to .","In one embodiment of the present invention, the network  is a circuit switched network, such as the Public Service Telephone Network (PSTN). In another embodiment, the network is a packet switched network. The packet switched network is a wide area network (WAN), such as the global Internet, a private WAN, a local area network (LAN), a telecommunications network or any combination of the above-mentioned networks. In yet another embodiment, the network is a wired network, a wireless network, a broadcast network or a point-to-point network.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["211","221","204","202","202"]},"Web browser  is any commercially available web browser, which is an application that is typically used to view web pages served by a web site over the Internet or other network. Application  is any application that prompts the user for authentication information. This typically occurs through the provision of one or more graphical windows that prompt the user to enter authentication information.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2","b":["210","220","210","210","202","211"]},"The API  is an interface by which the ID manager  accesses operating system and other services. The API is defined at source code level and provides a level of abstraction between the ID Manager  and the application  to ensure the portability of the code. The API can also provide an interface between a high level language and lower level utilities and services that were written without consideration for the calling conventions supported by compiled languages. The API  allows the ID manager  to capture and understand different aspects of the operation of the application .","In one embodiment of the present invention, all of the elements and modules of the system of  are located on one client computer, such as client computer  or client computer .","In another embodiment of the present invention, all of the elements and modules of the system of  are located on one client computer, except for the ID store , which is located on another computer or server. In this embodiment, elements , , ,  and  are located on one client computer, such as client computer , while the ID store  is located on server  or another client computer. During the execution of the ID manager , information is retrieved from the ID store , as it is required by the ID manager .","This embodiment is advantageous, as it can be used in a distributed computing environment. This paradigm allows a user to float among devices on a network and retain authentication information identities while operating on different devices. This is also advantageous because it allows for the remote storage and possibly backup of the ID store . This also is beneficial as it allows for more than one copy of the ID store  to exist on the network, which reduces the possibility of information loss in the event of a system crash or other disaster.","In preferred embodiments of the present invention, the ID store  is encrypted so as to secure the authentication information stored within it. In one embodiment, the authentication information stored in the ID store  is stored as encrypted extensible Markup Language (XML) containing Hypertext Markup Language (HTML) form values for login Universal Resource Locators (URLs). If the information in ID store  is encrypted, the encrypted information can safely persist in unsecured storage, such as public LDAP directory servers.","In some embodiments, to allow the user to utilize multiple computers, the encrypted ID store  is stored in the user's LDAP directory entry. In such an embodiment, the system fetches encrypted authentication data based the current user's login profile. The stored entry attribute is updated when new authentication contexts are added and is checked for updates as specified by the user. A database version number is preferably stored as a separate LDAP entry attribute, in order to allow the system to efficiently determine if changes to the archived ID store  have been made.","One example of an entry in the ID store  is shown below:",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<login uri=\u201dhttps:\/\/www.company.com\/login.html\u201d>"},{"entry":"\u2003<form name=\u201dLoginForm\u201d action=\u201d\/cgi bin\/login\u201d method = \u201cpost\u201d>"},{"entry":"\u2003\u2003<input name=\u201dUserName\u201d>JohnSmith<\/input>"},{"entry":"\u2003\u2003<input name=\u201dPassword\u201d>mypassword<\/input>"},{"entry":"\u2003<\/form>"},{"entry":"<\/login>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The entry above identifies a form, or type of web page, named \u201cLoginForm\u201d which allows a user to log into a web site (specifically, the \u201cwww.company.com\u201d web site) using a user name and password. The entry above specifies that the user name for the identified form is \u201cJohnSmith\u201d and that the password is \u201cmypassword.\u201d User name and password authentication information is also referred to as credentials or an authentication data set.","As explained above, the ID store  can store all authentication information in one encrypted file. In such an embodiment, the client application must download and decrypt the entire ID store  in order to access any of the authentication information within that store. In another embodiment, individually encrypted authentication data sets are stored such that the client application only decrypts the authentication data set for a single web form. This is advantageous for compartmentalizing information, but makes it easier for third parties to determine which web sites are frequented. In general, the preferable approach depends on the security of the machine, whether users move between computers, and so on.","2. Management of Authentication Information",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["302","304"]},"In step , the user authenticates with the ID manager . Authentication with the ID manager  involves the provision of at least one of the following pieces of authentication information from the user to the ID manager , typically via a graphical interface: a login name, a master digital key, a group name, a domain name and a destination indicator. The master digital key that is used to \u201cunlock\u201d the ID store can be a password or any other type of digital key (such as a biometric signature or a physical device in the possession of the user). In general, a password is short and easy for people to remember, but may not provide enough encryption strength for some situations. Thus, more secure types of digital keys can be used depending on the desired security level of the encrypted database (i.e., the ID store ). Preferably, in embodiments in which the ID store  is readily available to others, a long binary key is used as the master digital key, and this binary key is stored in a physically secure device and unlocked by a biometric signature, a shorter password, or the like. Alternatively, a biometric signature or a physical device in the possession of the user can be used as the master digital key to authenticate with the ID manager . In another preferred embodiment in which the ID store  is stored on a \u201csecure\u201d computer (such as a user's home PC), a simple password suffices as the master digital key.","Once the user has been authenticated with the ID manager , the secure ID store  is unencrypted and the ID manager  is prepared to recognize authentication prompts from applications so as to automate the authentication process for the user. Further details regarding the authentication of the user with the ID manager  are described in below with reference to .","In step , the ID manager  collects authentication information pertaining to applications  and web browsers . As the user enters authentication information into applications  and web browsers , the ID manager  recognizes the entrance of the authentication information and captures it. The recognition of the entrance of this information is accomplished via the use of APIs  and plug-ins , which allow the ID manager  to understand the actions and operations of the applications  and web browsers . APIs  and plug-ins  are described in greater detail above. The ID manager  captures the authentication information and stores it in the ID store  for later use in automating the authentication process. As described above, the authentication information that is collected includes at least one of the following data entered by the user, typically via a graphical interface: a login name, a password, a group name, a domain name and a destination indicator. Alternatively, or additionally, the user can enter authentication information directly into the ID Manager .","In another alternative, the system analyzes web content to aid the user in specifying the required authentication information for a URL. More specifically, the user enters (or otherwise supplies) a URL or other indicator of a web page into the ID manager . The ID Manager  downloads and analyzes the structure of that web page in order to determine the authentication information that is required by the web page. For example, this can be accomplished by searching for URL patterns and\/or HTML FORM elements of an HTML web page. After analyzing the web page, the ID Manager  presents the user with a list of login information that is requested by the web page (e.g., in a new window). The user then selects the required login information, which is stored by the ID Manager  as an authentication data set for the corresponding URL. This data set is then used to authenticate the user with the URL. Thus, this alternative provides automated acquisition of authentication schema.","In step , the user desires to authenticate at a web site via a web browser  or with an application  via a graphical interface. In this step, the user navigates a web browser  to a web page that prompts the user for authentication information or initiates an application program  that prompts the user for authentication information. The ID manager  recognizes the authentication information prompt. The recognition of the authentication information prompt is accomplished via the use of APIs  and plug-ins , which allow the ID manager  to understand the actions and operations of the applications  and web browsers . Further details regarding the recognition of the authentication information prompt by the ID manager  are described below.","In step , the ID manager  proceeds to authenticate the user with the web site via a web browser  or with an application  via a graphical interface. In response to recognizing the authentication information prompt in step  above, the ID manager  proceeds to automate the authentication process for the user by authenticating him with the web browser  or the application . Further details regarding the authentication routine executed by the ID manager  are described below with reference to . In step , the control flow of  stops.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["402","404"]},"In step , the user utilizes a web browser  to navigate web pages or an application program . Subsequently, in step , the web browser  or application program  prompts the user for authentication information. Such web authentication typically occurs either through HTTP authentication which uses one or more graphical windows to prompt the user to enter authentication information, or through a web form which uses HTML FORM elements on a web page to prompt for authentication information. (While authentication process is part of the protocol itself with HTTP authentication, the HTTP protocol does not actually know that authentication is occurring with web form authentication.) Example authentication windows are described below with reference to .","In step , the ID manager  recognizes the authentication information prompt. The recognition of the authentication information prompt is accomplished via the use of APIs  and plug-ins , which allow the ID manager  to understand the actions and operations of the applications  and web browsers . For example, in the case of authentication via a web form, the system of the preferred embodiment recognizes a URL pattern and HTML form structure (and later fills in the form values automatically, as explained below). In the case of HTTP authentication, the system of the preferred embodiment recognizes when the browser pops up a special window requesting username and password.","In one embodiment of the present invention, the recognition of the authentication information to provide to a web page is accomplished by the ID manager  by utilizing the information stored in the ID store . As described above, the authentication information stored in the ID store  can be stored as encrypted XML containing HTML form values for login URLs. One example of an entry in the ID store  is:",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<login uri=\u201dhttps:\/\/www.company.com\/login.html\u201d>"},{"entry":"\u2003<form name=\u201dLoginForm\u201d action=\u201d\/cgi bin\/login\u201d method = \u201cpost\u201d>"},{"entry":"\u2003\u2003<input name=\u201dUserName\u201d>JohnSmith<\/input>"},{"entry":"\u2003\u2003<input name=\u201dPassword\u201d>mypassword<\/input>"},{"entry":"\u2003<\/form>"},{"entry":"<\/login>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The entry above identifies a form, or type of web page, named \u201cLoginForm\u201d which allows a user to log into a web site (specifically, the \u201cwww.company.com\u201d web site) using a user name and password. The entry above specifies that the user name for the identified form is \u201cJohnSmith\u201d and that the password is \u201cmypassword.\u201d In order for the ID manager  to recognize an authentication prompt, the ID manager  looks for a match between the entry above and a web form that has been presented by a web browser . An example of an HTML form of a web page presented by a web browser  for authentication is shown below:",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<html>"},{"entry":"\u2003<body>"},{"entry":"\u2003\u2003<form name=\u201dLoginForm\u201d action=\u201d\/cgi bin\/login\u201d method=\u201dpost\u201d>"},{"entry":"\u2003\u2003\u2003UserName: <input type=\u201dtext\u201d name=\u201dUserName\u201d><br>"},{"entry":"\u2003\u2003\u2003Password: <input type=\u201dpassword\u201d name=\u201dPassword\u201d><br>"},{"entry":"\u2003\u2003\u2003<input type=\u201dsubmit\u201d value=\u201dLog On\u201d>"},{"entry":"\u2003\u2003\u2003<input type=\u201dreset\u201d value=\u201dClear\u201d>"},{"entry":"\u2003\u2003<\/form>"},{"entry":"\u2003<\/body>"},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The ID manager  can recognize the HTML form above my matching the form name of the HTML form above to the form name of the entry in the ID store . Alternatively, the ID manager  can recognize the HTML form above by matching the two inputs (UserName and Password) of the HTML form above to the two inputs of the entry in the ID store .","Returning to , in step , in response to recognizing the authentication information prompt, the ID manager  prompts the user to authenticate with the ID manager  and select a security context. The ID manager  accomplishes this task by prompting the user to select a stored identity (i.e., security context) and\/or enter authentication information, including a login name and a master digital key. Example authentication windows are described below with reference to . In step , the user enters the appropriate authentication information (e.g., master password) and selects a stored identity to continue the authentication process.","In the system of the preferred embodiment, there are two levels of identity management. A first level of identity management pertains to a \u201csession identity\u201d, such as \u201cwork\u201d or \u201chome\u201d. A session identity is equivalent (though more convenient) to maintaining two authentication data set databases for different categories of access. A session identity is established when a user first authenticates with the ID manager. Within a session identity, a second level of identity management allows the user to specify multiple authentication data sets for a single web page or web form. This second level of identity management is the only case in which the user is prompted for identity selection during an automatic authentication. For example, if the user is already logged into the ID manager under the \u201chome\u201d session identity and goes to a URL to retrieve web mail, the ID manager would prompt the user to choose between second level identities (such as \u201cpersonal email\u201d and \u201cauction site email) if the user has multiple web mail accounts at that URL. Thus, the system of the preferred embodiment recognizes an authentication form by URL and HTML structure so that the user only needs to choose between second level identities if for a particular web page the user has stored multiple authentication data sets under the same first level identity. In another embodiment, each user only has one session identity, so users do not select a stored identity when authenticating with the ID manager.","After the user has authenticated with the ID manager  and selects a stored session identity, the secure ID store  is unencrypted and the ID manager  automates the authentication process for the user. Authentication involves the provision of the proper authentication information for the user to the requesting web page or application, typically via a graphical interface or browser window. For example, with authentication via a web form, the system of the preferred embodiment fills in the form values automatically (such as a username and password, and possibly additional information). Additionally, the user specifies to the system whether or not the \u201clogin\u201d button should be automatically pressed after the form is automatically filled in. With HTTP authentication, the system of the preferred embodiment automatically submits the requested authentication information.","Thus, in the embodiment of , the system uses a context-sensitive authentication agent to initiate an automated login. The context-sensitive authentication agent prompts for database access when the user browses to a web page that is associated with stored identity information.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 5","FIG. 4","FIG. 5"],"b":["502","506","508","502","510","512","502"]},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5","b":["504","514","504","516","518"]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 7","FIG. 7","FIG. 3","FIG. 7"],"b":["308","702","704"]},"In step , the ID manager  retrieves the appropriate authentication information from the ID store . The authentication information that is retrieved from the ID store  is based on the identity selected when the user authenticates with the ID manager , and on the web site or application. As described above, the preferred embodiment of the present invention allows for the storage of a plurality of authentication data sets and\/or security credentials for a plurality of identities. This allows one user to utilize more than one identity, each with one or more authentication data sets. The selected identity will have, stored as an authentication data set, the user's authentication information (such as login name and password) for the web site or application requesting authentication. Thus, the authentication information is retrieved from the ID store  based on the selected identity.","In step , the ID manager  automatically authenticates the user with the requesting web site or application. That is, the ID manager  automatically provides the authentication information from the ID Store for the selected identity to the web site or application requesting it. For example, the ID manager  fills out text fields in an application  graphical interface or in a web browser . In step , the control flow of  stops.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"b":["602","604"]},"In step , the user logs into the ID manager . The user logs in by providing the ID manager  with login information that includes a master digital key, and then selecting one of the stored identities (such as the \u201cbanking\u201d identity depicted in ). In step , the ID manager  displays the stored authentication information for the selected identity to the user (e.g., as a list of web sites to which the stored authentication information applies). In step , the user browses this authentication information and selects one of the web sites from the stored information (e.g., by selecting a URL from the list). In response, the ID manager  launches a web browser (or other application) and opens the selected URL with the stored authentication information already filled into the web page. In step , the control flow of  stops. Thus, in the embodiment of , user input to the ID manager is used to initiate an automated login.","3. Exemplary Implementations","The present invention can be realized in hardware, software, or a combination of hardware and software. A system according to a preferred embodiment of the present invention can be realized in a centralized fashion in one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system\u2014or other apparatus adapted for carrying out the methods described herein\u2014is suited. A typical combination of hardware and software could be a general-purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein.","An embodiment of the present invention can also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which\u2014when loaded in a computer system\u2014is able to carry out these methods. Computer program means or computer program as used in the present invention indicates any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a) conversion to another language, code or, notation; and b) reproduction in a different material form.","A computer system may include, inter alia, one or more computers and at least a computer program product on a computer readable medium, allowing a computer system, to read data, instructions, messages or message packets, and other computer readable information from the computer readable medium. The computer readable medium may include non-volatile memory, such as ROM, Flash memory, Disk drive memory, CD-ROM, and other permanent storage. Additionally, a computer readable medium may include, for example, volatile storage such as RAM, buffers, cache memory, and network circuits. Furthermore, the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and\/or a network interface, including a wired network or a wireless network, that allow a computer system to read such computer readable information.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 8","FIG. 8"],"b":["804","804","802"]},"The computer system can include a display interface  that forwards graphics, text, and other data from the communication infrastructure  (or from a frame buffer not shown) for display on the display unit . The computer system also includes a main memory , preferably random access memory (RAM), and may also include a secondary memory . The secondary memory  may include, for example, a hard disk drive  and\/or a removable storage drive , representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. The removable storage drive  reads from and\/or writes to a removable storage unit  in a manner well known to those having ordinary skill in the art. Removable storage unit , represents, for example, a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated, the removable storage unit  includes a computer usable storage medium having stored therein computer software and\/or data.","In alternative embodiments, the secondary memory  may include other similar means for allowing computer programs or other instructions to be loaded into the computer system. Such means may include, for example, a removable storage unit  and an interface . Examples of such may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to the computer system.","The computer system may also include a communications interface . Communications interface  allows software and data to be transferred between the computer system and external devices. Examples of communications interface  may include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card, etc. Software and data transferred via communications interface  are in the form of signals which may be, for example, electronic, electromagnetic, optical, or other signals capable of being received by communications interface . These signals are provided to communications interface  via a communications path (i.e., channel) . This channel  carries signals and may be implemented using wire or cable, fiber optics, a phone line, a cellular phone link, an RF link, and\/or other communications channels.","In this document, the terms \u201ccomputer program medium,\u201d \u201ccomputer usable medium,\u201d and \u201ccomputer readable medium\u201d are used to generally refer to media such as main memory  and secondary memory , removable storage drive , a hard disk installed in hard disk drive , and signals. These computer program products are means for providing software to the computer system. The computer readable medium allows the computer system to read data, instructions, messages or message packets, and other computer readable information from the computer readable medium. The computer readable medium, for example, may include non-volatile memory, such as Floppy, ROM, Flash memory, Disk drive memory, CD-ROM, and other permanent storage. It is useful, for example, for transporting information, such as data and computer instructions, between computer systems. Furthermore, the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and\/or a network interface, including a wired network or a wireless network, that allow a computer to read such computer readable information.","Computer programs (also called computer control logic) are stored in main memory  and\/or secondary memory . Computer programs may also be received via communications interface . Such computer programs, when executed, enable the computer system to perform the features of the present invention as discussed herein. In particular, the computer programs, when executed, enable the processor  to perform the features of the computer system. Accordingly, such computer programs represent controllers of the computer system.","Although specific embodiments of the invention have been disclosed, those having ordinary skill in the art will understand that changes can be made to the specific embodiments without departing from the spirit and scope of the invention. The scope of the invention is not to be restricted, therefore, to the specific embodiments. Furthermore, it is intended that the appended claims cover any and all such applications, modifications, and embodiments within the scope of the present invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The subject matter, which is regarded as the invention, is particularly pointed out and distinctly claimed in the claims at the conclusion of the specification. The foregoing and other features and also the advantages of the invention will be apparent from the following detailed description taken in conjunction with the accompanying drawings. Additionally, the left-most digit of a reference number identifies the drawing in which the reference number first appears.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
