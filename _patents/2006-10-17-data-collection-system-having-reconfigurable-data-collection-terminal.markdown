---
title: Data collection system having reconfigurable data collection terminal
abstract: There is provided in one embodiment a data collection system including a data collection terminal having an encoded information reader device and a computer spaced apart from the data collection terminal. The data collection terminal in one embodiment can be configured to be responsive to configuration data expressed in an extensible markup language. The computer in one embodiment can use an existing extensible markup language document to create a data entry screen to received desired parameter settings for the data collection terminal within data entry fields of the data entry screen. The computer can further combine the extensible markup language document with the desired parameter settings to create configuration data and can initiate a transfer of the configuration data to the data collection terminal. The computer in one embodiment can be used to create for transfer to the data collection terminal a data package including file data corresponding to one or more selected files, together with additional data. The system provided can be used to transfer data, including but not limited to configuration data, between computers that are not data collection terminals and which are devoid of encoded information reader devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07934660&OS=07934660&RS=07934660
owner: Hand Held Products, Inc.
number: 07934660
owner_city: Skaneateles Falls
owner_country: US
publication_date: 20061017
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims priority under 35 U.S.C. \u00a7119(e) to Provisional Patent Application No. 60\/757,217 entitled \u201cData Collection System Having Reconfigurable Data Collection Terminal\u201d filed Jan. 5, 2006 which is incorporated herein by reference.","The present invention relates to data collection terminals in general and particularly to a data collection terminal in communication with a host computer spaced apart from the data collection terminal.","In recent years significant advances have been made in the art of data collection terminals and networks containing the same.","In U.S. Patent Publication No. 2002\/0171745, a data collection terminal is described having a bar code reading device which is in communication with a remote computer. The bar code reading terminal sends image data and associated bar code data to a remote computer. In one combined bar code\/image data transmission scheme described in the above patent application publication decoded bar code message data identifying a parcel is stored within an open byte header location of an image file including an image representation of the parcel. In U.S. Patent Publication No. 2002\/0171745, an image data file in .PDF, .TIF, or .BMP file format is created at a data collection terminal which includes an image representation of a decoded bar code message and an image representation of the package including the bar code encoding the decoded message. In U.S. Patent Publication No. 2003\/0132292, a data collection terminal is described having a data collection terminal including a bar code reading device, an RFID reading device, a mag stripe data reading device, a chip card reading device, and a fingerprint reading device. The terminal is coupled to a network, which is configured to facilitate financial transactions involving data collected utilizing the various reading devices.","As significant as the above developments are, shortcomings have been noted with the operation of presently available data collection terminals and the systems in which they are incorporated. For example with continual up featuring of data collection terminals, data collection terminals have become increasingly difficult to use. While data collection terminals may have a plurality of available functions users of such devices find it difficult or practically impossible to access all of the functions incorporated in the devices that they operate. For example, configuring a radio transceiver of a data collection terminal to operate within a specific network has become a daunting task and one that involves a selection of tens of users' selectable options. As a result, users of data collection terminals have been observed to delay or avoid the process of configuring terminal radio transceivers for operation in a specific network and instead operate their terminals in long periods of time in batch mode or serial hardwire connection mode for long periods of time in spite of the availability of wireless connectivity.","A problem with reconfiguring certain types of data collection terminals such as hand held data collection terminals is their small size. Configuration setting screens on data collection terminals are sometimes difficult to view on account of being of small size. The smallness of keyboard buttons and other user interface buttons such as pointer controllers on certain types of data collection terminals also makes the setting of configuration parameter settings with such terminals difficult.","While some attempts to use a spaced apart computer with a larger keyboard and display screen for configuration of a data collection terminal have significantly simplified the task of reconfiguring a data collection terminal, other reconfiguration methods involving use of a computer spaced apart from a data collection terminal have been noted to be time consuming and have also been noted to result in entry errors.","A known method of configuring a data collection terminal uses a general purpose computer to create or edit a text based configuration file containing parameters for each device or program the user desires to configure. A common type of text file used to configure devices and programs is the \u201c.INI file\u201d format. The .INI file format was developed by MICROSOFT, Inc for use in configuring WINDOWS operating system and other programs running on a WINDOWS platform. However, developers have been observed to use the .INI file format for other configuration applications running on WINDOWS platforms. Generally, an .INI file will contain a somewhat organized list of parameter settings that are encoded as \u201ckey values.\u201d Elements of a data pair, e.g., the key and key value encoding one or more parameter settings, may be separated by a predetermined character such as an equal sign (\u201c=\u201d). If the key value comprises a plurality of values, individual elements may be separated by, for example, a comma. Data pairs may be separated by a predetermined character such as a return character. Further, data pairs may be organized into sections based on a system or sub-system relevant to the data pair. Such configuration files are typically created and edited using a general text editor (e.g., WORDPAD or NOTEPAD).","To prepare an .INI file a user must be familiar with the various available configuration parameter settings, their permissible values, and be willing to hunt through a list of data pairs to identify those data pairs that relate to settings of interest. Once completed the .INI file is transferred to the data collection terminal over a communication path. When residing at a data collection terminal parameter settings encoded in the .INI file may be accessed by a program of the data collection terminal.","In many cases, to adequately provision a data collection terminal for operations, not only do parameters settings need to be set, but certain files, such as applications and databases, need to be transferred and stored on the data collection terminal. In the past, such transfers were manually handled using an OS related synchronization software, such as MICROSOFT ACTIVESYNC for the WINDOWS MOBILE OS. In general a user would queue up each file (typically by dragging and dropping each file into a predetermined folder) for transfer and executing an active sync (in the case of WINDOWS MOBILE). According to a known method for sending files to a data collection terminal an active sync can be executed for each file to be transferred. Also, several files can be included in a single CAB file (.CAB) file and a .CAB file can be transferred to a data collection terminal using an active sync.","There is a need for further advances in data collection terminals and systems in which they are connected.","I. System Overview","In a data collection system including a data collection terminal that can have an encoded information reader device and a computer spaced apart from the data collection terminal, the data collection terminal can be configured to be responsive to configuration data expressed in an extensible markup language. The computer in one embodiment can use an existing extensible markup language document to create a data entry screen to receive desired parameter settings for the data collection terminal within data entry fields of the data entry screen. The computer can further combine the extensible markup language document with the desired parameter settings to create configuration data and can initiate a transfer of the configuration data to the data collection terminal.","The computer in one embodiment can be used to create for transfer to the data collection terminal a data package that may include file data corresponding to one or more selected files selected for transfer to the data collection terminal, together with additional data. The one or more selected files can include a configuration document file expressed in an extensible markup language that has been created using the computer. The additional data can include command data corresponding to commands to be executed by the data collection terminal, compression selection data for the data package and encryption selection data for the data package, and action indicators indicating action to be taken by the data collection terminal when processing file data and command data of the data package.","The system can be used to transfer data, including but not limited to configuration data between computers other than data collection terminals.","The subheadings herein, e.g., \u201cI. System Overview,\u201d \u201cII. System Schematic Diagrams\u201d are provided for general guidance only, and it will be understood that there is significant overlap between subject matter contained under the various subheadings.","II. System Schematic Diagrams","Referring to there is provided a system  for reprogramming data collection terminal  with use of a host computer . As shown in , system  can include a host computer  shown as being provided by a portable laptop personal computer PC and a data collection terminal  having an encoded information reader device shown as being provided by a bar code reader device . Host computer  can include a keyboard  and a display  disposed in portable housing . Data collection terminal  can include an encoded information reader device, e.g., bar code reader device . Data collection terminal  can also include a display , trigger , and keyboard  all disposed in and supported by portable hand held housing . System  can further include a bar code label printer  for printing a bar code . Bar code symbol printer  can be in communication with host computer , such that host computer  can send print commands to printer .","Hardware devices that can be incorporated in host computer  and data collection terminal  are described in connection with . Host computer  can include a control circuit  such as may be provided by a micro processor IC chip in communication with a memory , a user input interface  and a user output interface . Memory  of host computer  can include a read only memory device, ROM , and a random access memory device RAM . ROM  can be e.g., an EROM or an EPROM. In addition Memory  of host computer  can include storage memory  such as a hard drive and a flash memory device . Memory  of host computer , among other types of files, can retain XML configuration files which can be edited and transferred to data collection terminal . User input interface  can include keyboard  and pointer controller , e.g., a mouse or track ball. User output interface  can include a display  which can also be regarded as a display device. Referring to additional devices of host computer , host computer  can include a power distribution circuit  for powering integrated circuit of host computer . Power distribution circuit  receives electrical power from a plurality of alternative sources, e.g., serial block  such as may be provided by a USB cable, a transformer based AC to DC power supply , and rechargeable battery . Host computer  can include a long term storage device such as  which may include, e.g., a hard disk and\/or a CD disk drive. Host computer  can also include a wireless radio communication interface  including one or more radio transceiver devices, e.g., 802.11 radio transceiver device  and Bluetooth radio transceiver device . Host computer  can also include a serial input\/output interface device  which can include one or more of, e.g., an RS232 serial port, an ETHERNET serial port, or a USB serial port. The various devices of host computer  can be in communication via system bus . The various devices of host computer  can have associated registers and device processors, sometimes referred to as device controllers.","Data collection terminal  can include a control circuit  such as may be provided by a microprocessor integrated circuit chip, memory , a user input interface , a user output interface , and an encoded information reader device . Memory  can include a read only memory device or ROM  and a random access memory device . ROM  can be e.g., an EROM or EPROM. Memory  can include a storage memory  such as a hard drive, and a flash memory device . A memory of device  e.g., Memory  can retain among numerous types of files including XML configuration files for configuring a device of terminal  such as a radio transceiver device or a bar code reader device. System  can be operated so that such XML configuration files are retrieved from data collection terminal  by host computer , edited at host , then transferred back to data collection terminal . User input interface  can include pointer controller , keyboard , touch panel , and trigger . User output interface  can include display  and acoustic output . Encoded information reader device unit  can include one or more of bar code reader device , RFID reader device , and card reader device . Bar code reader device  may be provided, e.g., by an IT4XX\/5XX Imaging Module with decode out circuit of the type available from Hand Held Products, Inc. of Skaneateles Falls, N.Y. The IT4XXX\/5XXX Imaging Module with decode out circuit provides decoding of a plurality of different types of bar code symbols and other decodable symbols such as PDF 417, Micro PDF 417, Maxicode, Data Matrix, QR Code, Aztec, Aztec Mesa, Code 49, UCC Composite, Snowflake, Data Gliffs, Code 39, Code 128, Codabar, UPC, EAN, Interleave 205, RSS, Code 93, Codablock, BC412, Postnet, Planet Code, BPO Forcedate, Canadian Forcedate, Japanese Post, KIX(Dutch Post), OCR A and OCR B. Encoded information reader device unit  can also include an RFID reader device  such as that may be provided by a Skytek Sky Module MI reader and card reader device  which may include an integrated circuit card (IC CARD) reader device otherwise known as a smart card reader device. Referring to addition features of data collection terminal , data collection terminal  can include a power distribution circuit  which receives power from a variety of different power sources including serial power source  (e.g., a USB cable, a transformer based AC to DC power supply , and rechargeable battery ). Data collection terminal  can also include a radio communication interface device unit . Radio communication interface device unit  can include one or more radio transceiver devices such as IEEE 802.11 radio transceiver device , Bluetooth radio transceiver device , WIMAX radio transceiver device  and cellular radio transceiver device . Data collection terminal  can also include a serial input\/output interface . Serial input\/output interface  can include one or more of an RS232 port, USB port, and an ETHERNET port. The various devices of data collection terminal  can have associated registers and processors sometimes referred to as device controllers.","Data collection terminal  can include one or more of the additional devices that are described in U.S. Patent application Ser. No. 11\/174,447, filed Jun. 3, 2005 entitled, \u201cDigital Picture Taking Optical Reader Having Hybrid Monochrome And Color Image Sensor Array,\u201d U.S. Provisional Patent Application No. 60\/721,518, filed Sep. 28, 2005 entitled, \u201cData Collection Terminal And Network Having Radio Signal Responsive Mode Switching,\u201d and U.S. Provisional Patent Application No. 60\/725,001, filed Oct. 7, 2005 entitled, \u201cData Collection Terminal Having Dynamic Access To Multiple Wireless Networks,\u201d all of which are incorporated herein by reference in their entirety. The above mentioned U.S. Provisional Patent Application No. 60\/721,518, filed Sep. 28, 2005 is attached hereto as Appendix D. For example, in addition to the devices of , data collection device can include a VOICE CODEC, and microphone and a location detection circuit. A parts list for data collection terminal  in one illustrative embodiment is provided in Table A.",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE A"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bar Code Reader","Hand Held Products IT4xxx\/80 Image Engine"]},{"entry":["Device 14","Imaging Module With Decode Out Circuit"]},{"entry":["RFID Reader Device 16","Skytek Sky Module M1, Sky Module M8"]},{"entry":["Card Reader Device 18","Panasonic ZU-9A36CF4"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Referring now to , shows an imaging module  that can form part of a bar code reader device  of data collection terminal . Imaging module  can be provided by an IT4XXX imaging module that type available form Hand Held Products, Inc. of Skaneateles Falls, N.Y. Imaging module  can include first circuit board A, second circuit board B, support assembly  and optical plate  including aiming optics such as aiming optics  and illumination optics . Imaging module  can include a lens  provided by e.g., a lens singlet, lens doublet or lens triplet. Lens  focuses an image of a bar code symbol  onto two-dimensional image sensor  which can comprise a plurality of pixels formed in a plurality of rows and a plurality of columns. Imaging module  can also include conductive support posts  holding together the devices of the circuit board and delivery power between circuit boards of the imaging module. Imaging module  when provided by an IT4XXX imaging module the type available from Hand Held Products, Inc. is available in a form with an associated decode out circuit for decoding bar code symbols and other decodable indicia such as MaxiCode PDF 417, Micro PDF 417, Data Matrix, QR Code, Aztec Code, RSS Code, Postal Codes, Code 39, Code 93, Interleave, Code 128, UPC, EAN and UPC\/EAN, OCR A and OCR B. Imaging module  can include support assembly  supporting devices of imaging module  such as lens  and circuit board , and . Imaging module  can include aiming LEDs  mounted on circuit board . Light from aiming LEDs is shaped by slits  of support assembly  which slits are imaged onto a substrate e.g., paper  by lenses  as shown in to form an aiming pattern on bar code . Light from LEDs  is shaped in part by optics to illuminate an area that substantially corresponds to a field of view of imaging module . It will be seen that system  can include XML configuration files configuring bar code reader device  including imaging module . For example, an XML configuration file such as the file of Table 2 can include a bar code reader device specific elements having a name attribute corresponding to bar code reader device , and subsidiary elements having content parameter settings for controlling the operation of bar code reader device . Such parameter setting values can include e.g., delay parameter settings for controlling timing of activation of aiming LEDs , centering parameters for controlling an area of interest of a captured image captured by activation of image sensor , and suffix parameter setting values for controlling which, if any, characters will be appended to a decoded out message. XML configuration files retained on data collection terminal  (i.e., in a memory) can be transferred (e.g., copied) to host computer , edited, then transferred back to data collection terminal . When residing at a data collection terminal, parameter settings of an XML configuration file may be utilized to reconfigure a bar code reading device in a number of different ways, e.g., the parameter settings can be accessed by a program operating a bar code reader device , may be parsed and passed to program for operating the bar code reading device , or may be parsed and passed to a register of the data collection terminal. Bar code reader device  can be configured to attempt to read bar codes and to read bar codes in response to a trigger signal being initiated. Data collection terminal  can be configured so that such a trigger signal is initiated, e.g., when trigger  or another button of terminal  is depressed, or when a trigger signal command is received from an external computer, such as host computer . Bar code reader device  can also be a laser scanning type bar code reading device, e.g., such as may be provided by an MS-3 Laser Scanner OEM Module available from MICROSCAN.","Referring to , shows a block diagram of a RFID reader\/writer device  that can be incorporated in data collection terminal . RFID reader\/writer device  (referred to herein simply as an \u201cRFID reader device\u201d) can include transmitter , antenna , receiver , data decode processing circuit  and writer  which can also be termed an encoder, which can serve as encoding module  (encoder) of host computer  of system  as described in connection with . RFID reader\/writer device  can be used to activate a passive tag  as shown in . Passive tag  can include a storage device , a transponder  and an antenna . For activation of a passive tag  (), transmitter  can send an activation radio signal over antenna  which is received by antenna  for activation of transponder . In response to the receipt of the activation signal, transponder  is actuated to transmit a radio signal representing identification data encoded into passive tag . RF receiver circuit  in turn receives the radio signal from the passive tag  and converts the data into a processable digital format. Data decode processing circuit  of RFID reader\/writer device  typically includes a low cost micro controller IC chip and decodes the received radio signal information received to decode the identification data originally encoded into RFID tag . RFID tag  can be applied to e.g., articles for sale in a retail store, or to an identification card such as a credit or debit card. RFID tag  can also be used independent of an identification application. For example, RFID tag  can be used as a token in security applications or as a tool for use in reconfiguring a data collection terminal. RFID reader device  can be operated in a continuous read mode or in an active read mode. In an active read mode, RFID reader device  attempt to read and reads data from a tag  in response to a trigger signal initiated. Data collection terminal  can be configured so that a trigger signal is initiated by e.g., depressing trigger  () or another button of data collection terminal .","Referring to , shows a block diagram of card reader device  that can be incorporated into data collection terminal . Card reader device  can have reading and\/or writing functionality and can be a card reader device for reading financial transaction cards. Card reader  can be an integrated circuit card reader device also known as a smart card reader device which can read data from and write data to a smart card. Card reader device  can include electrical contacts , signal detection circuit , card decoder  and encoder  which can serve as encoding module  (encoder) of host computer  of system  as described in connection with . Contacts  of card reader device  are adapted for making contact with an integrated circuit  of an integrated circuit card  (Smart Card) which may be, e.g., credit card, a debit card, an electronic benefits card or a customer loyalty card or simply an integrated circuit card used as a token for security applications or as a tool for use in reconfiguring data collection terminal . When contacts  are in contact with integrated circuit  of card , signal detection circuit  picks up an electrical signal and information stored on integrated circuit  is then decoded by card decoder . Card reader device  further includes an encoder  for encoding data which is to be written into card . When card  is in contact with card reader device , card reader device  can be activated so that encoded data for encoding a card is written onto integrated circuit chip integrated circuit  of card .","Referring now to -, various housings that can incorporate the circuit devices shown in the data collection terminal  of are shown and described. In the embodiment of and , data collection terminal  is provided by a hand held data collection terminal  in a form factor commonly referred to as a portable data terminal (or PDT) which is best seen in the side view of . The hand held data collection terminal of and incorporates imaging module  as shown in with imaging access a of imaging module  extending forwardly from the data collection terminal . Also, as seen from the side view of , encoded information reader devices of data collection terminal  can be mounted on various circuit boards  that are supported internally within an interior of housing  of data collection terminal . Namely, RFID reader device  and card reader device  can be mounted on circuit boards  disposed within an interior of housing . Imaging module  of bar code reader device  can also be mounted within housing  while an associated decode out circuit (not shown) associated with imaging module  can be mounted on a printed circuit board  in an interior of housing . FIGS. , and illustrate an alternative housing II for data collection terminal . Alternative housing II as shown in , and is in a form factor commonly referred to as a transaction terminal. In the embodiment of the , and , data collection terminal  incorporates imaging module  as shown in . Data collection terminal  like the data collection terminal as shown in and as shown in , and also includes card reader . Card reader  includes card reader device  together with the portion of housing  that is formed to guide a card  so that card  makes contact with contacts . In an aspect of system , host computer  can have the form factor of one of the described data collection terminals. Because host computer  can have a form factor of one of the described data collection terminals, host computer  can be portable and can incorporate one or more encoded information reader devices.","Data collection terminal  as illustrated in and can have a plurality of operating modes which are operative to prompt a user to enter certain information into data collection terminal . As indicated by the view of , data collection terminal  can have a signature entry mode wherein the ENTER SIGNATURE prompt  is displayed on display  prompting the user to enter the signature into touch screen overlay  utilizing stylus . Data collection terminal  is indicated by the view of can also have a personal identification number (\u201cPIN\u201d) entry mode wherein data collection terminal  displays PIN entry prompt  on display  prompting the user to enter PIN data into touch screen overlay . As indicated by the bottom view of , data collection terminal  can be configured to be demountably mounted on a fixed member. Terminal  can execute such signature and pin entry modes when provided in the form factor of and . As seen in the view of , data collection terminal  can include key shaped formations  which enable data collection terminal  to be mounted on a fixed member such as a fixed member having screw heads extruding therefrom in the spacing relation of formations  of housing  to enable data collection terminal  to be mounted on the fixed member such as a desktop, a shelf, a post or a wall and then readily removed from the fixed member when it is desired to move data collection terminal  to another location.","III. Host Computer and Data Collection Terminal Applications","Referring to , and host computer  can be configured to perform a variety of functions. For example, host computer  can parse data from an extensible markup language configuration file, such as an XML configuration file and can display such data on a configuration graphical user interface display screen. The parsed data can include parameter settings and descriptions of parameters. Host computer  in another aspect can receive user input parameter settings into the displayed graphical user interface display screen and combine such settings into data of an existing extensible markup language configuration file to generate an edited extensible markup language configuration file.","In another aspect, host computer  can build for transfer to a data collection terminal  a data package including file data corresponding to one or more files and other data such as command data, encryption selection data, compression selection data, and action indicators. For use in defining a data package, host computer  can display on display  a package building graphical user interface display screen enabling a user to select file data corresponding to one or more files and the above noted other data for inclusion in a data package. The file data selected for inclusion in a data package can include, for example, file data of an XML configuration file that has been previously built using the above noted configuration file graphical user interface display screen, and file data corresponding to, e.g., other text files, executable files, image files, audio files. The command data selected for inclusion in a data package can include command lines to be run by a command line interpreter of a data collection terminal  and script commands to be run by an interpreter of data collection terminal  other than a command line interpreter. With use of the package building graphical user interface a user can select encryption selection data and compression selection data for inclusion in a data package. In accordance with the selected encryption selection data, and compression selection data, the host computer  can encrypt file data of various files and command data unevenly across a data package and can also compress file data of various files and command data unevenly across various files.","In one aspect the package building graphical user interface display screen of host computer  can display a tree diagram indicating data that is designated for inclusion in a data package. Encryption selection and compression selection designators can be inserted into and moved about within the tree diagram to designate which file data and which command data of a data package is to be encrypted or compressed. The package building graphical user interface can also prompt a user to select action indicators including flags each time different file data or a different command is selected for transfer to a data collection terminal. Such action indicators can include action indicators indicating whether a selected file is to be executed when rebuilt at a data collection terminal , whether a password is to be entered at a data collection terminal to allow access to a file, whether the selected file is to overwrite an identical named file of the data collection terminal, and the directory of a data collection terminal into which a selected file is to be stored. Action indicators can also be selected for a data package.","When data of a data package has been designated, a data package can be transferred to a data collection terminal either by transferring a data package over a communication path or by encoding a data package into a decodable dataform and then decoding the decodable dataform using that data collection terminal .","Referring to aspects of data collection terminal , data collection terminal  can be configured to receive a data package and de-package a data package. When receiving a data package by way of decoding an encoded dataform having more than one part (such as more than one bar code symbol), the data collection terminal may assemble fields corresponding to each part in an ordering appropriate to reconstruct the data package.","When de-packaging a data package, data collection terminal  can read encryption selection data and compression selection data of a received data packaged file in order to decrypt and decompress file data and command data of the data package in the manner required to rebuilt the files and commands. After file data corresponding to a certain file selected for transfer is decrypted and decompressed, the file selected for transfer can be regarded as being rebuilt. After command data corresponding to a certain file selected for transfer is decrypted and decompressed, the command selected for transfer can be regarded as being rebuilt. A rebuilt file or command can be buffered in a working memory of data collection terminal . When de packaging a data package data collection terminal can also read action indicators of the data package and take action with respect to rebuilt files and commands in a manner corresponding to the action indicators.","Where a rebuilt file is a configuration file such as an XML configuration file, data collection terminal  can parse parameter settings of the configuration file and utilize the parameter settings in reconfiguring a subsystem of the data collection terminal. In utilizing a configuration file to reconfigure a subsystem of data collection terminal  data collection terminal  can utilize the configuration file to reconfigure a device of data collection terminal  such as a bar code reader device  or a radio transceiver device  or another device. Data collection terminal can reconfigure a device with use of a configuration file, for example, by retaining the configuration file in such manner that parameter settings of the file are accessed by a program running the device or by parsing and passing the parameter to a file or other memory location for access by a program operating a device or by another method. Data collection terminal  can also utilize a configuration file to reconfigure a subsystem of data collection terminal  by utilizing a configuration file to reconfigure a program of device  without affecting operation of a device of terminal . For example, in one embodiment, data collection terminal  can parse a parameter setting and pass the parameter setting to a WINDOWS Registry, for access by the operating system or by another program (system or application level) where access of the parameter does not result in control of operation of a device being affected.","For carrying out the above noted functions, host computer  and data collection terminal  can be regarded as having a plurality of software processing modules that can be executed by a microprocessor forming control circuit . Because a processor executing a new function can be regarded as a new circuit, the software modules described herein can be alternatively termed \u201ccircuits.\u201d","Referring to host computer , host computer  capable of performing the above noted functions can be regarded as having an configuration file interface module  forming the configuration file graphical user interface, a configuration file parsing module  (or parser) for parsing data from a configuration file to be displayed in a specific format in the configuration file graphical user interface display screen, a packaging interface module  forming the package builder graphical user interface display screen and a packaging module  for encrypting and compressing selected filed data and command data of a designated data package in accordance with encryption selection and compression selected data selected by a user, and for incorporating one or more of file data, command data, encryption selection data, compression selection data, and action indicators into a data package that can be used and managed as a file (e.g., can be readily moved between directories of a same or different computers). Host computer  can also have an encoding module  for encoding a dataform such as one or more bar codes. Additional processing modules that can be included in host computer  are indicated by additional functionalities described herein. A set of processing modules of host computer  can be regarded as a host application . The host application  can include one or several programs. For example, each module can be provided with a single program or with several programs. More than one software module can be provided in a single program. The programs defining host application  can be written in a suitable programming language such as C++, C#, Net, Python. The program or programs of host application  can call pre-compiled sections of code known as libraries, and can run on a suitable operating system , e.g., WINDOWS XP.","Referring to data collection terminal , data collection terminal  performing the above noted functions can be regarded as having a decoding module  for decoding a dataform, a depackaging module  for decrypting and decompressing file data and command data of a received data package and for taking action with respect to rebuilt files and commands according to action indicators of a data package, and parsing module  (parser) for parsing parameter settings of a configuration file and utilizing such parameter settings to configure a device or program (system or application level) of the data collection device. Additional processing modules that can be included in data collection terminal  are indicated by additional functionalities described herein. A set of processing modules of data collection terminal  can be regarded as a terminal application . The terminal application  can include one or several programs. For example each module can be provided with a single program or with several programs. More than one software module can be provided in a single program. The programs defining host application  can be written in a suitable programming language such as C++, C#, Net, Python. The program or programs of host application  can call pre-compiled sections of code known as libraries and can run on a suitable operating system e.g. WINCE. Decoding module  can be provided by, e.g., a decoding module of RFID reader device , bar code reader , or card reader device .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 1","i":"d ","b":["100","5082","5002","5004","5008","5102","5008","5008","5082","5084","5086","5008","100","5008","3000","10","5088","3000","5012"]},"Referring to further aspects of encoder  (encoding module), encoder  can encode data into a physically transportable medium that can be hand carried and physically transported by a user of system  from location to location. For example, encoder  can print decodable bar code symbols onto a physically hand-carryable sheet of paper or card (for example, the printer can print a bar code symbol on a sticker which is applied to a card), can write RFID tag data onto physically transportable RFID tag  that can be hand carried, can write IC card data onto a physically transportable hand carried card , or can write encoded data onto a physically transportable and hand carried USB plug. The physically transportable medium can be carried from terminal to terminal. By reading of the same encoded transportable medium by several different data collection terminals  several different data collection terminals can be reconfigured and re-provisioned with new files and other data in a like manner. When the decodable dataform encoded by encoder  is a decodable bar code symbol, an RFID tag or an IC card, the transportable medium onto which the decodable dataform is encoded may be a hand-carryable credit card sized card. The card may be, e.g., a credit card for use in purchase transactions, a debit card, a customer loyalty card or an Identification card (ID card) such as a driver's license, employee ID card or a patient ID card. The card can also be a dedicated \u201ctoken\u201d card dedicated for the purpose of retaining data packages built by host computer  which can be decoded by data collection terminal . Another example of a hand-carried physically transportable medium onto which encoder  may encode data of a data package is a hand carried computer having the form of a data collection terminal  or another type of hand carried computer such as a cellular telephone. As has been indicated host computer  can encode and image representation of a bar code into an image file such as TIF, BMP or other suitable formats. Such an image file containing an image representation of a bar code can be sent by host computer  to a hand held computer for display using any IP data communication path. The hand held computer receiving on or more image files including representations of bar codes can be networked to a host computer  in the manner of data collection terminal , - or , - of . The hand held computer can be actuated to display an image file so that an encoded bar code is displayed on a display of the hand held computer. When such an image file is displayed by a first hand held computer a second hand held computer provided by data collection terminal  is actuated to read the displayed bar code so that the data collection terminal receives the data package that had been encoded into the bar code. Where data of a data package is large and is encoded into a plurality of bar codes, image representations of each of the bar codes can be encoded into a separate image file. Host computer  can send the plurality of image files to a hand held computer. In turn the hand held computer can be actuated to display the plurality of image files on a display thereof in succession. As the succession of image files is being displayed on a display of the hand held computer, data collection terminal  can be aimed at the display of the hand held computer with a trigger  thereof pressed down so that the data collection terminal  reads the succession of displayed bar codes and receives the data package.","IV. Data Package","It has been mentioned that host computer  of system  can be used to define and build a data package for transfer to a data collection terminal . When a data package  as described herein is defined and built at a host computer , the data package can be manipulated and managed as single file in the same manner as any type of file. For example, with suitable file management software, a data package  can be easily and quickly transferred (e.g., copied) between directories of different computers or copied from a directory of a first computer into multiple directories of the same or different computers (e.g., data collection terminals). However, a data package  of the type that can be defined and built at host computer  can include a rather complex arrangement of data. For example, a data package can include file data of more than one file that is selected for transfer to a data collection terminal. A data package  defined at host computer  can also include command data corresponding to one or more command. Still further, a data package  can include encryption selection data and compression selection data. In addition, a data package  can include action indications such as flags which are for reading by a data collection terminal to determine the manner in which data of the data package is to be processed at a data collection terminal . Referring now to -, illustrative embodiments of a data package  that can be built with host terminal  are described in further detail. In that data package  can be manipulated and managed as a single file, or encoded into a dataform and can include a complex arrangement of data, system  provides for the rapid transfer of a complex set of data to data collection terminal , or a set of such terminals.","Referring to , data package  can be built by host computer , and can include various data, including command data set  and file data set . File data set  can include file data corresponding to executable files (.EXE), image files (.JPG, TIF, .BMP), and audio files (.WAV)). File data of data package  can also correspond to custom built XML configuration files built with use of host computer  in accordance with XML configurator module . When building of an XML file for use in configuring a device of data collection terminal , host computer  can edit an existing XML file such as an XML file stored on computer , terminal , another computer of a local network in which host computer  is disposed, or another computer of a network disposed remotely and off-site relative to host computer . Where encryption and compression options are selected during the building of data package , data package  can also include an encryption selection data  and a compression selection data . In a further aspect, data package  includes a data package header . Encryption selection data  indicated in the data package of is global encryption selection data indicating that global encryption for data package  has been selected and compression selection data  is global compression selection data indicating that global compression has been selected for data package .","Data package  built by host computer  can also include file data specific and or command data specific encryption and compression selection data for indicating that one or a limited number of file data and\/or command data of a package file are to be encrypted and\/or compressed. Referring to aspects of package -, it is seen that encryption selection data  is not encrypted but that data following encryption selection data  are encrypted in accordance with the encryption selection information of encryption selection data . Similarly, while compression selection data  is not compressed, all data following compression selection data  are compressed in accordance with the compression selection information of compression selection data . The architecture of an exemplary data package  is described more fully in connection with ","Referring to , data package header  includes data set version or \u201cVER\u201d field , data flags field , and checksum field . Data flags field  includes the flags and indicators discussed in connection with Table 1 herein. Among the flags of flag field  is a flag indicating whether data collection terminal  will prompt a user to enter a password so that processing of data package - can proceed. In , the number of bytes in each field is indicated by the number in parentheses. For example, data flag field  can include four bytes of data.","Referring to encryption selection data , encryption selection data  can include ID field , VER field , body length field , and encryption scheme field  including an identifier for the selected encryption scheme. The body length field  can indicate the set of ensuing bytes of a data package  that will have been encrypted at host processor  and which will require decryption at terminal . A flag indicating that a password is required can be included in encryption scheme field . Also, some encryption schemes such as Symmetric encryption normally require a password. Accordingly, an action indicator indicating that a password is to be prompted for at data collection terminal  can be included into field  by including therein an indication of a certain type of encryption scheme. In encrypting data host computer  can execute, e.g., RC2 block cipher encryption, RC4 block cipher encryption, DES block cipher encryption and\/or triple DES block cipher encryption. When a password is entered, host computer  can use the password to encrypt data of the data package.","Referring to compression selection data , compression selection data  can include ID field , VER field , body length field , and field  indicating an uncompressed size of the data being subject to compression prior to compression. The body length field  can indicate the set of ensuing bytes of a data package  that will have been compressed at the host computer  and which will require decompression at terminal . In compressing data, host computer  can execute, e.g., run-length compression Huffman-coding compression, and\/or Lempel-Ziv compression.","Referring to command data set , header  of command data set  can include ID field , VER field , body length  and flag field  including control flags as are selected by a user of system  during the building of data package . Command data set  also includes command data  such as data corresponding to a command line which is input into a data entry field of host computer  for transfer to data collection terminal . Flag field  includes the flags and other indicators described in connection with Table 3 herein.","Referring to generic file data set , header  of generic file data set  includes ID field , VER field , body length field , and flag field  as are selected by a user of system  during the defining of data package . Date and time field  indicate the date and time the file corresponding to file data set  was selected for inclusion in package file . File data set  also includes file name field  indicating the name of file selected for transfer to data collection terminal  and file data field  corresponding to the selected file selected for transfer to data collection terminal . Included in file name field  can be a designated directory of data collection terminal  which can be designated by a user using data entry field  (). When file data  of data package  is processed by data collection terminal , data collection terminal  rebuilds on terminal  the file selected for transfer to terminal . The file may be first rebuilt in a working memory of terminal , and then transferred to memory storage device, specifically in the directory designated in field  set by a user. Flag field  includes the flags and other indicators described in connection with Table II herein.","Referring to specific XML configuration file data set -, specific XML file data set - has essentially the same structure as generic file data set  except as indicated by reference element . File data  of specific XML information - includes binary data mapped to XML ASC II data.","While the data package - described with reference to includes encryption selection data , compression selection data , command data set , and generic file data set  corresponding to two generic files, and a specific XML file data set -, it will be understood that host computer  incorporating packaging module  can be utilized to build data packages having information corresponding to a fewer number of files and commands. For example, referring to host computer  can be utilized to build a data package - including a single data set; namely, a command data set . The illustrative embodiment of illustrates the use case wherein host computer  is utilized to select a command line for transfer to and execution by a data collection terminal . Command lines that are designated at host computer  for execution by data collection terminal  can include command lines e.g., to open a file using a certain executable file, to open a browser to request data from an external device, to commence an FTP session to transfer a file from device  to an external device, or to send an FTP request to an external device to request a file from an external device. When a command line is selected for transfer to data collection terminal host computer  includes command data into a data package . In turn, data collection terminal  processes the command data of the data package to rebuild the command line and to run the command line in that same manner that it would execute the command line if the command line were entered into a command line prompt of data collection terminal . Command data sets of data package  can include data corresponding to script commands as well as command line commands.","Referring to the illustrative embodiment of , data package - includes encryption selection data  and XML configuration file data set - including XML file data and header data associated with the XML file data. When data package - is processed at receiving data collection terminal , XML configuration file data set - can be parsed for use in reconfiguring a device of data collection terminal  such as a radio transceiver device of data collection terminal  or an encoded information reader device such as bar code reader device . Specifically, in accordance with parsing module  data collection terminal  can reconfigure a device by parsing an XML document rebuilt at data collection device  and passing parameter settings of the XML document to internal registers of terminal devices such as radio transceiver device e.g., device  or encoded information reader device , or can retain the XML configuration file in a memory location for access by a program operating the device, or can reconfigure a device using the XML file by another method. Data collection terminal  can also pass parameter value settings of an XML configuration document to Registry where the terminal  has a WINDOWS (e.g., WINCE, WINDOWS XP) operating system, and the parameter settings can be accessed by programs running on the device such as the operating system, other system level programs and application level programs. Such other programs can control operation of a device or may not control operation of a device. For reasons that will be discussed further herein an XML file format provides significant advantages in the process of reconfiguring devices of device . Specifically, XML files, like REG files have a multi-tiered hierarchy and thus are well adapted for use in updating parameter settings of a Registry. Also, XML files can be processed using widely available XML processing Application Program Interfaces (API's) that can include a set of preconfigured dynamic link libraries (DLLs) and other libraries. XML APIs are widely available and freely downloadable. An originally authored XML parsing application can make use of third party libraries specially made for parsing XML documents. Still further XML files are self-describing. The inventors noted that descriptive data as is exemplified by the \u201cdesc\u201d attribute in the exemplary XML documents of Table 1 and Table 2 can readily be included into XML documents in such manner that the descriptive data can be readily parsed out.","Referring to the illustrative embodiment of , data package - can include compression selection data , a first XML file data set -, -A and a second XML file data set -, -B. Host computer  can be utilized to build a data package as shown in when more than one device of a data collection terminal  requires reconfiguration. For example, a data package in accordance with may be built by host computer  when both cellular radio transceiver device  and Bluetooth transceiver device  of data collection terminal  require configuration. Data package - also includes user defined data set  which comprises data other than file data or command data. Such user defined data can be e.g., a predetermined text message for display on display  which is not formatted in any file format as described previously herein. User defined data set  can comprise a header indicating that the data set is a user defined data set.","In  a complex data package - of the type that can be readily made with use of system  is shown. In the illustrative data package of , the elements are labeled in duplicate with generic and specific reference elements so that characteristics of the data package can be better described. For example the element labeled generically as encryption selection data  is also given the reference numeral A for purposes of distinguishing it from the element labeled  and B Complex data package - has uneven (inconsistent) compression across file data of the data package. In data package -, one file data set - A (the first ordered file data set of the data package) has one layer of encryption and one layer of compression, one file data set -B has two layers of encryption and one layer of compression, one file data set  has one layer of encryption and two layers of compression, and the command data set  has one layer of encryption and one layer of compression. With global encryption and compression turned OFF, a data package built by host computer  can be in the form of data package - as shown in . In data package - of , the first ordered file data set - (from left to right) has no layers of encryption and no layers of compression, the second ordered file data set - has an encryption layer but no compression layer, the third ordered file data set  has a compression layer but no encryption layer and the command data set  has no encryption layer or compression layer.","V. De-Packaging And Reconfiguring","In accordance with de-packaging module  data collection terminal  processes a data package  that has been received by data collection terminal . It has been described that in receiving the data package , data collection terminal  can either (i) receive the data package typically in a file form over a communication path or (ii) decode a decodable dataform into which the data of the defined data package  has been encoded with use of host computer . In de-packaging a data package , data collection terminal  can decrypt and decompress file data and command data of the data package  to rebuild files and commands selected for transfer into a buffer memory of data collection terminal . In de-packaging a data package , data collection terminal  can further take action with respect to rebuilt files selected for transfer and rebuild commands selected for transfer in accordance with action indicators included in the data package . Data collection terminal  can be configured to de-package a data package automatically; that is, decrypt and decompress any file data and any command data of a data package and carry out the action of any action indicators of a data package at the time that it is received at the data collection terminal (either by way of file transfer over a communication path, or by way of dataform decoding) without requiring receipt of any further user input commands after the receipt of the data package. Specifically, data collection terminal  can be configured to automatically de-package a data package on receipt of the data package pursuant to a file transfer over a communication path and can be further configured to automatically de-package a data package when a data package is rebuilt pursuant to a dataform being decoded as may be initiated by trigger  () being depressed. Also, data collection terminal  can be configured so that if a data package in file form already resides in a memory data collection terminal  such as storage memory  pursuant to a previous file transfer, an application can be initiated by inputting a command into terminal  (e.g., by pressing de-package button  ().","Flow diagrams illustrating operation of data collection terminal  in de-packaging a data package  are described with reference to and . Data collection terminal  at block  opens data package  residing in file form in a buffer memory and at block  processes the one or more \u201cdata entities\u201d of the package. \u201cData entities\u201d as used herein is a generic term to refer to encryption selection data, compression selection data, file data set data, command data set data and any other user defined data set data that may have been included into a data package . In general data collection terminal  processes data entities in an order determined by the ordering of the data entities in the package.","An illustrative manner in which data collection terminal  can process the data entities is described with reference to the flow diagram of in connection with the data package - described in connection with . At block  data collection terminal  starts the process of processing a set of one or more data entities and at block  data collection terminal  gets a next data entity. If global encryption has been selected as in the data package - of the first encountered data entity will be encryption selection data A. In accordance with decision block  data collection terminal  on determining that the current data entity is encryption selection data collection terminal  will proceed to block  to prompt a user to enter a password if password access has been selected. If the decryption is not permitted (e.g., because of a wrong password) terminal  may display a wrong password message. If a proper password has been entered, data collection terminal  can proceed to block  to decrypt all data entities required by to be decrypted by the preceding encryption selection data, which if the encryption selection data is encryption selection data A of the data package - of will be the data entities A, -A, B, -B, B, , and . Data collection terminal  can be configured as indicated by blocks  and  to execute an error process if decryption is not successful. In buffering the decrypted data entities A, -A, B, -B, B, , and  data collection terminal  as is indicated by block  can be regarded to have built one or more data entities, namely a set of data entities that are the decrypted version of a set of data entities previously encrypted.","Terminal  then returns to block  to recursively start processing the set of data entities built at block  in the manner of the data entities of the original package. If the data package - is being processed, the next data entity that is got at block  is the first data entity of the set of data entities built at block , namely global compression selection data A, now in unencrypted form. In accordance with decision block , terminal  will proceed to block  to decompress all data entities required to be decompressed by compression selection data A, which in the example of the data package - of will be the data entities -A, B,-B,B, , and . In buffering the set of decompressed data entities data collection terminal  can be regarded to have built a set of data entities as is indicated by block , namely the set of data entities -A, B, -B, B, , and  in decompressed form. Terminal  then returns to block  to recursively process the set of data entities built at block  in the manner of the data entities of the original data package.","Terminal  then proceeds to block  to get a next data entity, namely the first data entity of the set of data entities build at block . In the example of data package - the next data entity is configuration file data set -A, previously encrypted and compressed, now decrypted and decompressed. On determining at decision block  that a configuration file is being handled data collection terminal  will proceed to block  to process the configuration file. In processing the configuration file terminal  may e.g., pass parameters to a WINDOWS Registry or store the file to an appropriate directory where parameter settings of the file may be accessed by a program such as a program operating a device. Also at block  terminal  can carry out all action required of the flags and the action indicators of the configuration file data set. One action indicator can be an action indicator indicating that a rebuilt configuration file is to be stored in a certain directory. Terminal  then returns to block  to get a next data entity. On completing processing at block  terminal  proceeds to block  to determine if there are additional data entities in the set of data entities currently being processed. Still referring to the data package - of , a next data entity to be processed in the ordering of the data package is encryption selection data B, previously encrypted and compressed now decrypted and decompressed. In processing encryption selection data B, terminal  will decrypt all data entities required to be decrypted by encryption selection data B; namely, configuration file data set -B at block  buffers configuration file data set - in decrypted form. Terminal  will then return to block  to recursively process the data entity built at block  in the manner of the data entities of the original data package. Terminal  will then proceed to block  to get the next data entity, namely configuration file data set - B, previously twice encrypted and once compressed now unencrypted and uncompressed. On determining at decision block  that a configuration file is being handled data collection terminal  will proceed to block  to process the configuration file. In processing the configuration file terminal may e.g., pass parameters to a WINDOWS Registry or store the file to an appropriate directory where parameter setting of the file may be accessed by a program such as a program operating a device. Also at block  terminal  can carry out all action required of the flags and the action indicators of the configuration file data set.","Terminal  then returns to block  to get a next data entity as determined by the ordering of the data entities in data package . In that there are no data entities remaining in the set of data entities built at block  a next data entity of the data package is compression selection data B, previously encrypted and compressed, now unencrypted and uncompressed. In determining that compression selection data is being handled at decision block , terminal  proceeds to block  to decompress all data entities required to be decompressed by compression selection data; namely, file data set  of data package - and builds a data entity at block  (the decompressed version of file data set). Terminal  then proceeds to block  to recursively process the data entity built at block  in the manner of the original data package and then proceeds to block  to get the next data entity of data package -; namely file data set , previously once encrypted and twice compressed, now unencrypted and uncompressed. On determining that a file data set  is being handled at decision block  terminal  proceeds to block  to process the file data set . At block  terminal  can carry out the action of the action indicators of the file data set. Namely, terminal  can store a file corresponding to file data of the file data set at a specified directory of terminal or may carry out another action indicator of file data set , such as delete the file from the buffer memory, or execute the file if the execute file flag is raised.","Terminal  then returns to block  to get the last data entity of data package -, namely command data set  previously compressed and encrypted now decompressed and decrypted. On determining that a command data set is being handled at block  data collection terminal  proceeds to block  to execute the command. If a data package  includes a data entity comprising user defined data other than file data or command data, data collection terminal  in determining that such a data entity is present (block ) can proceed to block  to pass the user defined data to a defined process. Such user defined data can be e.g., a predetermined text message for display on display  which is not formatted in any file format. Terminal  can be configure so that on recognizing that a data entity is user-defined data not corresponding to any file or any command, terminal  at block  initiates an application to process the user-defined data (e.g., display a message on display ).","It is seen that the processing described in relation to the flow diagrams of and are recursive; that is, where a data package that is processed includes more than one set of encryption selection data and more than one set of compression selection data, data collection terminal  will recursively execute decryption and decompression processes the number of times that is necessary to completely decrypt and decompress each file data set, each command data set and each user defined data set of the data package. In certain instances, as in the example described in connection with and with reference to data package - where data of a data package has multiple levels of encryption and multiple layers of compression, data collection terminal  can recursively decrypt data of a data package previously subject to decryption and can recursively decompress data of a data package previously subject to decompression. The processing is recursive for the further reason that at several times during the processing, sets of one or more data entities are built and applied to a common process in the manner of the data entities of the original data package.","When receiving a data package by way of decoding a dataform including a plurality of parts, such as a dataform including a plurality of bar code symbols, data collection terminal  can assemble fields corresponding to each part in an ordering appropriate to rebuild the data package. Referring now to , operation of host computer  in accordance with encoding module  when a dataform includes multiple bar code symbols required for encoding or selected for encoding is described. When host computer  determines that multiple bar code symbols are required for encoding or have been selected for encoding host computer  divides the data of data package  into M equal portions where M is the number of bar code symbols to encode. Host computer  can attach a bar code header  to each of the M data blocks. Field  of header  indicates bar code version, field  includes an ECDFG signature, field  includes the status of bar code flags as are controlled by input into the graphical user interface display screen of , field  includes a bar code set ID, field  includes a bar code index, i.e., which bar code of the present bar code is the present bar code, and field  includes the number M, the number of bar code symbols in the present bar code symbol set. Further aspects of the graphical user interface display screen of , and other GUIs that can be incorporated in system  are described herein. Referring to , characteristics of an output interface module of data collection terminal  are described. Data collection terminal  may display a status window indicating the status of processing being performed by data collection terminal  respecting the received data package. As indicated by , data collection terminal  can display in accordance with and output interface module graphical user interface window . Graphical user interface window  displays at area  which bar code symbol of a present bar code symbol set is being read or has recently been read. Device  in window  may display such data as data indicative commands currently being executed by data collection terminal . At area  a user of system  may check on a log parameter. At area  a user may click on a save local copy parameter. At area  a user may click on and accept an unsecured parameter. At area  a user may click on an illumination parameter.","With further reference to the screen shot view of , host computer  displays on display  a bar code that is encoded by encoder . Referring to further aspects of the graphical user interface window  shown in , data entry field  can be used to designate the symbol type to be encoded by encoder . Data entry field  can be used to select an \u201cundercut\u201d flag and data entry field  can be utilized to select a \u201cresolution\u201d action indicator. Data entry field  can be used to indicate whether data collection terminal  when reading the encoded symbol is to emit a beep via audio output device  and data entry field  when checked on results in host computer  building a flag into an encoded data package indicating that data collection terminal  is to display decoded out message data on decoding. In data entry field  a user can designate a maximum bar code size for a bar code symbol to be encoded and utilizing data entry fields  and  a user of system  can indicate whether the user would like to force the number of bar codes created to a fixed number. If an user of system  checks on data entry field  to indicate that there will be a specific number of bar codes encoded, the user may utilize data entry field  to indicate the number (e.g., 2, 4, 10, N) of bar codes (bar code symbols) that are to be created by the bar code encoding process carried out by host computer  in accordance with encoding module . As data of the data entry fields is changed by a user, host computer  automatically encodes a new bar code symbol or a new set of bar code symbols in accordance with the newly selected action indicators and host computer  automatically displays a first of the newly encoded symbols in display area window  of graphical user interface window . Host computer  can also be made to display in areas  each symbol of a set of symbols in succession (i.e., one after another) at a common location of display . One or more data collection terminals can be positioned to read the successively displayed bar codes displayed at the common location. Thus, multiple bar codes can be read at high speed without movement of data collection terminal . A data package file  can be transferred to a data collection terminal  by reading the bar code symbol or symbols displayed on display  using the data collection terminal . The one or more symbols can be read by data collection terminal  when the symbols are displayed on display , or when symbols have been printed on a transportable medium.","When a file rebuilt at data collection terminal  is an extensible markup language configuration file, data collection terminal  in accordance with parser module  can utilize the file to reconfigure a subsystem of data collection terminal . In utilizing a configuration file to reconfigure a subsystem of data collection terminal  data collection terminal  can utilize the configuration file to reconfigure a device of data collection terminal  such as a bar code reader device  or a radio transceiver device  or another device. Data collection terminal  can reconfigure a device with use of a configuration file, for example, by (i) parsing a parameter setting of the file and passing the parameter to a hardware component associated with the device without modifying a program running the device; (ii) parsing a parameter setting of the file and passing the parameter to a program controlling operation of the device; (iii) parsing the parameter setting and passing the parameter setting to a file (such as an INI or Reg file) that is accessed by a program running the device; (iv) parsing the parameter setting and passing the parameter to a memory location other than a file memory location (such as WINDOWS Registry or a device memory, i.e., a register) that is accessed by a program running the device, the program being run by a processor of the terminal or of the device; or (v) retaining the configuration file in such manner that parameter settings of the file are accessed by a program running the device. In a specific example with reference to (iv) above a driver parameter setting can be parsed from a configuration file and can be passed to a Registry, where it is accessed by a driver. Data collection terminal  can also utilize a configuration file to reconfigure a subsystem of data collection terminal  by utilizing a configuration file to reconfigure a program of device  without affecting operation of a device of terminal . For example, in one embodiment, data collection terminal  can parse a parameter setting and pass the parameter setting to a WINDOWS Registry, for access by the operating system or by another program (system or application level) where access of the parameter does not result in control of operation of a device being affected. The term \u201cWINDOWS Registry\u201d herein is used to refer to the Registry of any computer having an operating system in the WINDOWS family of operating systems, e.g., WINDOWS XP, WINCE, etc.","VI. Communication Networks","Referring now to through , various technologies for providing communication between host computer  and terminal  are described. Referring to , host computer  and data collection terminal  can be in communication by way of a serial cable , e.g., an RS  cable keyboard wedge, USB cable or an ETHERNET cable. Data packages can be transmitted from host computer  to data collection terminal  over serial cable  utilizing a higher layer protocol (e.g., FTP or lower layer protocol EG ETHERNET over USB). Referring to , host computer  can send data package  to data collection terminal  utilizing a pair of wireless transceivers. For example, host computer  and data collection terminal  can each incorporate the Bluetooth radio transceiver for providing point to point wireless data communications or 802.11 radio transceivers, in an ad hoc data communication mode for providing point to point data communications between host computer  and terminal . Higher layer protocols (e.g., the File Transfer Protocol, FTP) can be utilized to transfer data packages from host  to data collection  in the arrangement shown in the wireless point to point arrangement shown in . ACTIVESYNC software available from MICROSOFT, INC. can be integrated in host  and data collection terminal  to provide synchronization between host computer  and data collection terminal . ACTIVESYNC facilitates data communication over a range of physical communication links, e.g., USB, ETHERNET, 802.11 and IrDA. An FTP data communication session is a selectable option facilitated using ACTIVESYNC. However, non-IP based data communications are also supported using ACTIVESYNC. Referring to , host computer  and data collection terminal  can be part of a common local area network  having an ETHERNET backbone  and an 802.11 access point  and printer  connected to ETHERNET backbone . All of the apparatuses, -, -, -,  and  can be allocated IP addresses and each of the apparatuses can be configured to conduct data communications utilizing the TCP\/IP protocol stack. Accordingly, where the host computer  that builds data package  is host computer - as shown in , host computer - and data collection terminal  is data collection terminal - in wireless communication with access point , data packets containing data of data package  may be transmitted utilizing the file transfer protocol over the hop sequence -, , -. If the designated data collection terminal is data collection terminal O-, the hop sequence for data communication before an FTP file transfer can be the hop sequence -, , - wherein access point  and data collection terminal - are wireline connected via wireline bus . Referring to the view of , a host computer  that builds data package  can be a remote host computer located miles to thousands of miles from the facility at which the designated data collection terminal  is located. Where system  includes a remote host computer , e.g., computer - that builds data package , and a data collection terminal  receiving a data package is at a location of local area network , system  can be operated by two users; namely, one user at a location of a remotely located network  and a second user at a location of local area network . Of course, system  can have more than one user implemented entirely using local area network . When host computer  of system  is local device -, and data collection terminal  is local terminal -, files selected for packaging in data package  can be located in a remote computer, e.g., computer -, -, -. Referring further to the view of , data collection system  can include a plurality of local area networks local area network , which may be located at e.g., at a retail store, a hospital or other patient care center, or a shipping distribution center, local area network , server center , and server center . Networks , , , and  may be physically located miles to thousands of miles away from one another. As indicated in the view of , networks , , , can be in communication with one another over IP network  which, in one embodiment, is the Internet. Local area network  and\/or server center  can be network owned and operated by a supplier of data collection terminal , e.g., a manufacturer or distributor of data collection terminal . Suitable gateways , ,  and  are provided between the various local networks and IP network . In addition, cellular network  which can be a GSM\/GPRS network can support data communications over the TCP\/IP protocol stack. Cellular network  can be in communication with IP network  via gateway . Host computer  and data collection terminal  can be in communication with base stations of cellular network  via cellular transceiver  and cellular transceiver , respectively. In accordance with system  in one illustrative embodiment, the host computer that builds data package file  for transferring to data collection terminal  is host computer - at server center  and the data collection terminal  designated to receive the data package is terminal -, at a location of local area network . Local area network  can be integrated at e.g., a data collection facility such as a shipping distribution center, a retail store, a hospital or a patient care center. In such an illustrative embodiment, data collection terminal  and host computer  can be controlled to send a data package built by host computer - to data collection terminal - over a path that includes gateway  and which utilizes the File Transfer Protocol (\u201cFTP\u201d). Host computer - in the illustrative embodiment can also be controlled to send the data package  to data collection terminal - over a data communication path that includes cellular network , e.g., a direct cellular network data communication or a data communication over a path that includes gateway , IP network , gateway  and cellular network , or a path that includes access point , gateway , IP network , gateway , and cellular network .","VIl. Building of Extensible Markup Language Configuration Data and Data Packages Including Configuration Data","Further aspects of system , and particularly of the manner in which host computer  can be used to build extensible markup language configuration data, are described in reference to the XML document shown in Table 1 and the screen shots of -. In Table 1, data of an exemplary XML configuration document file, when opened by a text editor is shown. Table 1 and through illustrate a method and apparatus whereby an XML document file with use of host computer  can be built. In one method, a configuration file can be built by editing an existing configuration file and them transferring in whole or in part the edited configuration file to data collection terminal . An illustrative XML document file (shown in a form when opened by a text editor) for use in configuring devices of data collection terminal  is shown in Table 1 herein below:",{"@attributes":{"id":"p-0096","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"343pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d?>"},{"entry":"<ConfigDoc flags=\u201c16\u201d desc=\u201cConfiguration File for general device settings.\u201d name=\u201cDeviceConfig\u201d>"},{"entry":"\u2003<HHPReserved>"},{"entry":"\u2003\u2003<Key name=\u201cEditorVersion\u201d>1.0.0<\/Key>"},{"entry":"\u2003\u2003<Key name=\u201cRunAppName\u201d>\\program files\\power tools\\deviceconFig.exe<\/Key>"},{"entry":"\u2003<\/HHPReserved>"},{"entry":"\u2003<Section flags=\u201c16\u201d desc=\u201cConnection Settings\u201d name=\u201cConnections\u201d>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cBeam settings\u201d name=\u201cBeam\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cEnables or disables receipt of incoming infared data. If set to 1, incoming infared"},{"entry":"data will be enabled:&#xA;0 - Disable&#xA;1 - Enable\u201d name=\u201cEnable\u201d>1<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c16\u201d desc=\u201cRadio Manager settings\u201d name=\u201cRadio Manager\u201d>"},{"entry":"\u2003\u2003\u2003<Section flags=\u201c17\u201d desc=\u201c802.11b radio settings\u201d name=\u201c802.11b\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cTurn the radio Off\/On. If On, the 802.11b Radio will be turned"},{"entry":"off automatically.&#xA;0 = Off&#xA;1 = On\u201d name=\u201cEnable\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSecurity ID used to connect to network. Set to any = connect to any network.\u201d"},{"entry":"name=\u201cSSID\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c1\u201d max=\u201c3\u201d desc=\u201cSpecifies the power save mode:&#xA;1 = Disable ( Power save"},{"entry":"mode is not used)&#xA;2 = Always On (Radio is powered constantly)&#xA;3 = AutoEnable. In this mode,"},{"entry":"EPSParm defines radio vs battery performance\u201d name=\u201cPowerMode\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c1\u201d max=\u201c10\u201d desc=\u201cWhen PowerMode is set to 3 (Auto Enable), this parameter"},{"entry":"specifies the radio vs. battery performance. Takes a value between 1 and 10, where:&#xA;1=Best Radio"},{"entry":"Performance&#xA;10=Best Battery Life&#xA;\u201d name=\u201cEPSParm\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c2\u201d desc=\u201c0 = AdHoc&#xA;1 = Infrastructure&#xA;2 = Pseudo-Adhoc\u201d"},{"entry":"name=\u201cNetworkType\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c1\u201d max=\u201c15\u201d desc=\u201cTransmission Rate:&#xD;&#xA;1 = 1 Mb&#xD;&#xA;2 = 2"},{"entry":"Mb&#xD;&#xA;3 = Auto 1\/2 Mb&#xD;&#xA;4 = 5.5 Mb&#xD;&#xA;8 = 11 Mb&#xD;&#xA;15 = Fully"},{"entry":"Auto\u201d name=\u201cTxRate\u201d>15<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c1\u201d max=\u201c11\u201d desc=\u201cChannel (1-11) of the RF adapter. Generally only used with"},{"entry":"the &quot;ad hoc&quot; Network mode\u201d name=\u201cChannel\u201d>10<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201c0\/1: Enable\/Disable DHCP. When enabled, the IP address for"},{"entry":"the radio interface will be requested from a DHCP server. When disabled, the static address provided in"},{"entry":"IPAddress will be used instead.\u201d name=\u201cDHCP\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cStatic IP address (a.b.c.d) for the radio interface. Used when DHCP setting is"},{"entry":"disabled (set to 0)\u201d name=\u201cIpAddress\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSubNet mask (a.b.c.d) used for the static IP address when DHCP is disabled\u201d"},{"entry":"name=\u201cSubnetMask\u201d>"},{"entry":"\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cDefault Gateway IP (a.b.c.d) address used when DHCP is disabled\u201d"},{"entry":"name=\u201cDefaultGateway\u201d>"},{"entry":"\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cDNS (Domain Name Server) IP Address used when DHCP is disabled\u201d"},{"entry":"name=\u201cDNS\u201d>"},{"entry":"\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cDomain name (xxx.yyy) for the device, when DHCP is disabled\u201d"},{"entry":"name=\u201cDomain\u201d>"},{"entry":"\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cWINS (Windows Name Server) IP Address used when DHCP is disabled\u201d"},{"entry":"name=\u201cWINS\u201d>"},{"entry":"\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d name=\u201cWEP\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cIndicates the authentication mode to use:&#xA;0 = Open (WEP keys are not used"},{"entry":"to establish link)&#xA;1 = Shared (Uses WEP keys to establish link)&#xA;2 = Automatic (autodiscriminates"},{"entry":"between Open and Shared)\u201d name=\u201cAuthentication\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cIndicates the encryption mode to use::&#xA;0 = No Encryption&#xA;1 = WEP"},{"entry":"64-bit RC4 encryption&#xA;2 = WEP 128-bit RC4 encryption\u201d name=\u201cEncryption\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c1\u201d max=\u201c4\u201d desc=\u201cIndicates which WEP key to use to encrypt transmitted"},{"entry":"data:&#xA;Min = 1&#xA;Max = 4&#xA;\u201d name=\u201cActiveKey\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c48\u201d desc=\u201cValue for the WEP key 1:&#xA;If ASCII: Use quotes for the value (i.e:"},{"entry":"&quot;hello&quot;). &#xA;If Hex: Type the pair of hex values in a row (i.e: AFB0FF415A)&#xA;For 64-bit"},{"entry":"encryption, length must be 5 characters or 5 hex pairs.&#xA;For 128-bit encryption, length must be 13"},{"entry":"characters or 13 hex pairs.&#xA;\u201d name=\u201cKey1\u201d>MP8kKUDbgo8=<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c48\u201d desc=\u201cValue for the WEP key 2:&#xA;If ASCII: Use quotes for the value (i.e:"},{"entry":"&quot;hello&quot;). &#xA;If Hex: Type the pair of hex values in a row (i.e: AFB0FF415A)&#xA;For 64-bit"},{"entry":"encryption, length must be 5 characters or 5 hex pairs.&#xA;For 128-bit encryption, length must be 13"},{"entry":"characters or 13 hex pairs.&#xA;\u201d name=\u201cKey2\u201d>MP8kKUDbgo8=<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c48\u201d desc=\u201cValue for the WEP key 3:&#xA;If ASCII: Use quotes for the value (i.e:"},{"entry":"&quot;hello&quot;). &#xA;If Hex: Type the pair of hex values in a row (i.e: AFB0FF415A)&#xA;For 64-bit"},{"entry":"encryption, length must be 5 characters or 5 hex pairs.&#xA;For 128-bit encryption, length must be 13"},{"entry":"characters or 13 hex pairs.&#xA;\u201d name=\u201cKey3\u201d>MP8kKUDbgo8=<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c48\u201d desc=\u201cValue for the WEP key 4:&#xA;If ASCII: Use quotes for the value (i.e:"},{"entry":"&quot;hello&quot;). &#xA;If Hex: Type the pair of hex values in a row (i.e: AFB0FF415A)&#xA;For 64-bit"},{"entry":"encryption, length must be 5 characters or 5 hex pairs.&#xA;For 128-bit encryption, length must be 13"},{"entry":"characters or 13 hex pairs.\u201d name=\u201cKey4\u201d>MP8kKUDbgo8=<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003<\/Section>"},{"entry":"\u2003<Section flags=\u201c17\u201d desc=\u201cBluetooth radio settings\u201d name=\u201cBluetooth\u201d>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cDisable\/Enable the Bluetooth Radio. If set to 1, the GSM radio"},{"entry":"will be turned off automatically.&#xA;0 = Off&#xA;1 = On\u201d name=\u201cEnable\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cBluetooth Printer to create as default (favorite)\u201d name=\u201cDefault Printer\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cBluetooth hex MAC Address of the printer (ie: 00.80.37.1a.25.02)\u201d"},{"entry":"name=\u201cAddress\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cHex value of the printer serial service to use (i.e: 1101)\u201d name=\u201cService\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cDevice name (ie: MH0355)\u201d name=\u201cDeviceName\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003<\/Section>"},{"entry":"\u2003<Section flags=\u201c17\u201d desc=\u201cGSM\/GPRS radio settings\u201d name=\u201cGSM\u201d>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cTurn the radio Off\/On. If On, the 802.11b Radio will be turned"},{"entry":"off automatically.&#xA;0 = Off&#xA;1 = On\u201d name=\u201cEnable\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSet the Access Point name. Default=ISP.CINGULAR.\u201d"},{"entry":"name=\u201cAPN\u201d>ISP.CINGULAR<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSet the IP Address. Leave blank fro dynamic IP allocation.\u201d name=\u201cIpAddress\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSet the protocol. Default=IP&#xA;\u201d name=\u201cProtocol\u201d>IP<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003<\/Section>"},{"entry":"\u2003<Section flags=\u201c17\u201d desc=\u201cActiveSync settings\u201d name=\u201cActiveSync\u201d>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cDisable\/Enable automatic connection when docked. If set to 1, a"},{"entry":"connection will automatically be esablished:&#xA;0 = Off&#xA;1 = On\u201d name=\u201cAutoConnect\u201d>1<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecify connection to use when docked:&#xA;\u2018USB Connection&#xA;\u2018115200"},{"entry":"Default&#xA;\u201819200 Default&#xA;\u201838400 Default&#xA;\u201857600 Default\u201d name=\u201cConnection\u201d>\u2018USB"},{"entry":"Connection<\/Key>"},{"entry":"\u2003<\/Section>"},{"entry":"<\/Section>"},{"entry":"<Section flags=\u201c16\u201d desc=\u201cSystem Settings\u201d name=\u201cSystem\u201d>"},{"entry":"\u2003<Section flags=\u201c17\u201d desc=\u201cAbout Settings\u201d name=\u201cAbout\u201d>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecify the device name.&#xA;Note: This setting will be over written if"},{"entry":"SetDeviceInfo is executed after DeviceConFig.&#xA;&#xA;***IMPORTANT NOTICE"},{"entry":"(RESTRICTIONS)***&#xA;1 - The DeviceName must begin with a letter.&#xA;2 - The DeviceName cannot"},{"entry":"exceed 15 characters in length.\u201d name=\u201cDeviceName\u201d>ID[SERIALNUMBER][MODELNUMBER]<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecify the device description.&#xA;Note: This setting will be over written if"},{"entry":"SetDeviceInfo is executed after DeviceConFig.\u201d name=\u201cDeviceDescription\u201d>Dolphin 9500<\/Key>"},{"entry":"\u2003<\/Section>"},{"entry":"\u2003<Section flags=\u201c16\u201d desc=\u201cPower Management Settings\u201d name=\u201cPower Management\u201d>"},{"entry":"\u2003\u2003<Section flags=\u201c16\u201d desc=\u201cBacklight Settings\u201d name=\u201cBacklight\u201d>"},{"entry":"\u2003\u2003\u2003<Section flags=\u201c17\u201d name=\u201cBattery\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the Backlight timeout in seconds. Specify 0 to disable. This setting is"},{"entry":"only used when the device is on battery power.\u201d name=\u201cTimeout (Off)\u201d>60<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the Backlight dim timeout in seconds. Specify 0 to disable. This setting"},{"entry":"is only used when the device is on battery power. \u201d name=\u201cTimeout (Dim)\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the Backlight intensity. Specify 0 to turn the backlight off. This setting"},{"entry":"is only used when the device is on battery power. \u201d name=\u201cIntensity\u201d>8<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnable or disable Auto On: &#xA;0 = Disable&#xA;1 ="},{"entry":"Enable&#xA;Turns the Backlight on when a key is pressed or the screen is touched. This setting is only used"},{"entry":"when the device is on battery power:\u201d name=\u201cAuto On\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003\u2003<Section flags=\u201c17\u201d name=\u201cExternal\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the Backlight timeout in seconds. Specify 0 to disable. This setting is"},{"entry":"only used when the device is on external power\u201d name=\u201cTimeout (Off)\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the Backlight dim timeout in seconds. Specify 0 to disable. This setting"},{"entry":"is only used when the device is on external power. \u201d name=\u201cTimeout (Dim)\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the Backlight intensity. Specify 0 to turn the backlight off. This setting"},{"entry":"is only used when the device is on external power. \u201d name=\u201cIntensity\u201d>8<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnable or disable Auto On: &#xA;0 = Disable&#xA;1 ="},{"entry":"Enable&#xA;Turns the Backlight on when a key is pressed or the screen is touched. This setting is only used"},{"entry":"when the device is on external power.\u201d name=\u201cAuto On\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cPower Button Settings\u201d name=\u201cPower Button\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnables or disables the device power button:&#xA;0 ="},{"entry":"Disable&#xA;1 = Enable\u201d name=\u201cEnable\u201d>1<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c16\u201d desc=\u201cPower Settings\u201d name=\u201cPower\u201d>"},{"entry":"\u2003\u2003\u2003<Section flags=\u201c17\u201d name=\u201cBattery\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the device suspend timeout in seconds. Turns device off it is not used"},{"entry":"for the specified number of seconds. Specify 0 to disable. This setting is only used when the device is on"},{"entry":"battery power.\u201d name=\u201cTimeout\u201d>60<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d name=\u201cTimeout (Resume)\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003\u2003\u2003<Section flags=\u201c17\u201d name=\u201cExternal\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecifiy the device suspend timeout in seconds. Turns device off it is not used"},{"entry":"for the specified number of seconds. Specify 0 to disable. This setting is only used when the device is on"},{"entry":"external power.\u201d name=\u201cTimeout\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d name=\u201cTimeout (Resume)\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cRS232 5V Power Out Settings\u201d name=\u201cRS232 5V Power Out\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnable and disable 5V power to the RS232 port:&#xA;0 ="},{"entry":"Disable&#xA;1 = Enable\u201d name=\u201cEnable\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cScreen Settings\u201d name=\u201cScreen\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnables or disables ClearType support:&#xA;0 ="},{"entry":"Disable&#xA;1 = Enable&#xA;Note: Requires device to be reset before setting takes effect.\u201d"},{"entry":"name=\u201cClearType\u201d>0<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c600\u201d max=\u201c1100\u201d desc=\u201cAdjust the text size to see more content or increae the"},{"entry":"readability in some programs.&#xA;Smallest - 600&#xA;Largest - 1100\u201d name=\u201cTextSize\u201d>1100<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cShell Settings\u201d name=\u201cShell\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c6\u201d desc=\u201cEnable or disable the Start Menu application:&#xA;0 ="},{"entry":"Disable&#xA;6 = Enable&#xA;Note: Requires device to be reset before setting takes effect.\u201d"},{"entry":"name=\u201cStartMenuAnimation\u201d>6<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cToday Screen Settings\u201d name=\u201cToday Screen\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnable or disable Today Screen items:&#xA;0 = Disable&#xA;1 ="},{"entry":"Enable&#xA;\u201d name=\u201cEnable\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cThe number of hours in suspend mode before the device is forced .to the Today"},{"entry":"Screen when turned on.. Specify 0 to disable.\u201d name=\u201cTimeout\u201d>4<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cVolume Settings\u201d name=\u201cVolume\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnables or disables keyboard clicks:&#xA;0 = Disable&#xA;1 ="},{"entry":"Enable\u201d name=\u201cKeyboard\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnables or disables screen clicks:&#xA;0 = Disable&#xA;1 ="},{"entry":"Enable\u201d name=\u201cScreen\u201d>1<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c65535\u201d desc=\u201cSets the volume level. 0 to disable, 65535 for max"},{"entry":"volume:&#xA;Min = 0&#xA;Max = 65535\u201d name=\u201cVolume\u201d>65535<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cWelcome Screen Settings\u201d name=\u201cWelcome Screen\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnable or disable showing the Welcome Wizard after a cold boot"},{"entry":"(includes set time &amp; date, and screen recalibration)&#xA;0 = Disable&#xA;1 = Enable\u201d"},{"entry":"name=\u201cNoWelcome\u201d>0<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003<\/Section>"},{"entry":"\u2003<Section flags=\u201c16\u201d desc=\u201cApplication Settings\u201d name=\u201cApplications\u201d>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cMobile System Manager (MSM) client settings\u201d name=\u201cMSM\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cPrimary address for the MSM server.\u201d name=\u201cServerAddressPrimary\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSecondary address for the MSM server.\u201d name=\u201cServerAddressSecondary\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cMSM Server's port number.\u201d name=\u201cPortNumber\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnable or disable SSL encryption:&#xA;0 - Disable&#xA;1 -"},{"entry":"Enable\u201d name=\u201cSSL\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cOptional: Full name of the MSM configuration file to modify\u201d name=\u201cConfigFile\u201d>"},{"entry":"\u2003\u2003\u2003<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003\u2003<Section flags=\u201c17\u201d desc=\u201cInternet Explorer Settings\u201d name=\u201cInternet Explorer\u201d>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d desc=\u201cSpecify the default home page for Pocket Internet Explorer.\u201d name=\u201cHome"},{"entry":"Page\u201d>http:\/\/www.handheld.com<\/Key>"},{"entry":"\u2003\u2003\u2003<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cEnable or disable ClearType text in Internet Explorer.&#xA;0 ="},{"entry":"Disable&#xA;1 = Enable&#xA;Note: Requires device to be reset before setting takes effect.\u201d"},{"entry":"name=\u201cClearTypeText\u201d>0<\/Key>"},{"entry":"\u2003\u2003<\/Section>"},{"entry":"\u2003<\/Section>"},{"entry":"<\/ConfigDoc>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"It is seen that the XML document of Table 1 includes a plurality of nested elements wherein several of the elements have one or more attributes. It is seen the root element has the start tag:",{"@attributes":{"id":"p-0098","num":"0097"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ConfigDoc flags=\u201c16\u201d desc=\u201cConfigurafion File for general device"]},{"entry":[{},"settings.\u201d name=\u201cDeviceConfig\u201d>"]},{"entry":[{},"(Note 1.0)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Further, child elements include elements having the start tags:",{"@attributes":{"id":"p-0100","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<ConfigDoc flags=\u201c16\u201d desc=\u201cConfiguration File for general device"},{"entry":"settings.\u201d name=\u201cDeviceConfig\u201d> (Note 2.0)"},{"entry":"<Section flags=\u201c16\u201d desc=\u201cSystem Settings\u201d name=\u201cSystem\u201d> (Note 2.1)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Further, grandchild elements including the elements have the start tags:",{"@attributes":{"id":"p-0102","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<Section flags=\u201c17\u201d desc=\u201cBeam settings\u201d name=\u201cBeam\u201d> (Note 3.0)"},{"entry":"<Section flags=\u201c16\u201d desc=\u201cRadio Manager settings\u201d"},{"entry":"name=\u201cRadio Manager\u201d> (Note 3.1)"},{"entry":"<Section flags=\u201c17\u201d desc=\u201cActiveSync settings\u201d"},{"entry":"name=\u201cActiveSync\u201d> (Note 3.2)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Further, great grandchild elements include elements having the start tags:",{"@attributes":{"id":"p-0104","num":"0103"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Section flags=\u201c17\u201d desc=\u201c802.11b radio settings\u201d"]},{"entry":[{},"name=\u201c802.11b\u201d> (Note 4.0)"]},{"entry":[{},"<Section flags=\u201c17\u201d desc=\u201cBluetooth radio settings\u201d"]},{"entry":[{},"name=\u201cBluetooth\u201d> (Note 4.1)"]},{"entry":[{},"<Section flags=\u201c17\u201d desc=\u201cGSM\/GPRS radio settings\u201d"]},{"entry":[{},"name=\u201cGSM\u201d> (Note 4.2)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Further, great, great granchild elements include the elements:",{"@attributes":{"id":"p-0106","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Key flags=\u201c17\u201d min=\u201c0\u201d max=\u201c1\u201d desc=\u201cTurn"]},{"entry":[{},"the radio Off\/On. If On, the 802.11b Radio will be"]},{"entry":[{},"turned off automatically.&#xA;0 = Off&#xA;1 = On\u201d"]},{"entry":[{},"name=\u201cEnable\u201d>0<\/Key> (Note 5.0)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"And the elements having the start tags:",{"@attributes":{"id":"p-0108","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Section flags=\u201c17\u201d name=\u201cWEP\u201d> (Note 5.1)"]},{"entry":[{},"<Section flags=\u201c17\u201d desc=\u201cBluetooth Printer to create as"]},{"entry":[{},"default (favorite)\u201d name=\u201cDefault Printer\u201d>"]},{"entry":[{},"(Note 5.2)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"One great, great, great grandchild element of the XML file of Table 1 is the element:",{"@attributes":{"id":"p-0110","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Key flags=\u201c17\u201d desc=\u201cIndicates the authentication mode to"]},{"entry":[{},"use:&#xA;0 = Open (WEP keys are not"]},{"entry":[{},"used to establish link)&#xA;1 = Shared (Uses WEP keys to"]},{"entry":[{},"establish link)&#xA;2 = Automatic"]},{"entry":[{},"(autodiscriminates between Open and Shared)\u201d"]},{"entry":[{},"name=\u201cAuthentication\u201d>0<\/Key> (Note 6.0)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In the illustrative XML document file of Table 1, elements are nested in six layers. In the illustrative XML file of Table 1, each element has a plurality of attributes. Specifically, each element is defined to have a description element, \u201cdesc,\u201d and a name element, \u201cname.\u201d Several elements also have range attributes i.e., min=1, max=10 or min=0 and max=1. Several elements also have parameter setting values (parameter settings). Parameter setting values in the XML file of Table 1 are included as simple XML text content before the end tag \u201c<\/key>\u201d of each key designated XML element.","Certain of the elements have start tags designating the elements as \u201csection\u201d elements and certain of the elements have start tags designating the elements as \u201ckey\u201d elements. It will be seen that host computer  processes an element designated as a \u201csection\u201d element in a different manner than the elements designated as being \u201ckey\u201d elements.","With further reference to the XML document file of Table 1, it is seen that several \u201csection\u201d elements of the XML document file include \u201cname\u201d attributes indicating a specific device of data collection terminal . For example, the XML document file of Table 1 includes an 802.11b element which has the \u201cname\u201d attribute \u201c802.11b,\u201d a Bluetooth has the \u201cname\u201d attribute \u201cBluetooth,\u201d a GSM element has the \u201cname\u201d attribute \u201cGSM,\u201d and a battery element has the \u201cname\u201d attribute \u201cBattery.\u201d","For each of the above device specific XML elements, there are included at least one child element (one level down in hierarchy) that is designated as a \u201ckey\u201d XML element which includes a parameter setting value that may be changed by a user using host computer . In the illustrative embodiment of Table 1, the parameter setting values are included as XML content just before the end tag of each \u201ckey\u201d designated XML element. The \u201c802.11b\u201d element in the file of Table 1 includes the key designated child elements \u201cEnable,\u201d \u201cSSID,\u201d \u201cEPSPARM,\u201d \u201cNetworkType,\u201d \u201cTxRate,\u201d and \u201cChannel\u201d among others (the XML elements are referred to by their \u201cname\u201d attributes). Each key designated child element has a parameter setting value that can be changed. For example, the present parameter setting value of the \u201cEnable\u201d element is \u201c0,\u201d the present parameter setting value of the \u201cSSID\u201d element is empty and the present parameter setting value of the \u201cEPSPARM\u201d element is \u201c1.\u201d Several of the key designated elements have ranges defined with uses of key element attributes.","Respecting the configuration specific element having the name attribute \u201cBattery\u201d corresponding to battery , the battery element of the Table 1 XML file has several key designated child elements, each including a parameter designated with use of simple XML text content. The child elements of the \u201cBattery\u201d element include a timeout parameter element including a parameter for setting a backlight timeout delay, a backlight intensity element including an XML content defined parameter for setting backlight intensity and an auto-on element including an XML content defined parameter setting value determining whether battery  will supply power to a backlight of display  when touch screen  is activated. All of the described parameters control an aspect of the manner in which battery  will operate.","Referring to further aspects of the XML configuration document file of Table 1, the XML configuration document file can include flags designating (i.e., \u201cflags\u201d attributes) elements as being \u201cenabled\u201d or \u201cdisabled.\u201d These flags can be changed to disable or enable the elements by entering data into graphical user interface display screen window  as described herein. Host computer  can be configured so that when a \u201csimplify\u201d XML flag is raised using data entry field  (e.g., ) described herein, disabled elements are deleted from the XML document file. Description text of an XML file can also be deleted when the simplify flag is raised. Referring now to the screen shots of through , operation of host computer  operating in accordance with XML configurator  which includes an XML parser for parsing XML files such as the XML document file of Table 1 will be described. Referring to , shows a graphical user interface window  displayed on display  of host computer  when an executable file launching XML configurator module  is executed. The graphical user interface screen main window  of includes four windows; namely, a tree diagram window , a tree comment window , a parameter setting window , and a parameter setting value setting comment window . Parameter setting values (parameter settings) for controlling operation of a device can be set using window .","Referring to the view of , shows a graphical user interface window  displayed on display  when file button  is clicked on. Window  enables the user of system  to select a starting XML document to be operated by host computer . Clicking on button  enables selection of an XML document file. When open button  is clicked on, a file selector window  () is displayed on display  so that any file accessible within the network in which host computer  is incorporated can be selected. For example, any file on a hard drive  of host computer  (e.g., the host C: drive) can be selected. Also with the reference to , if host computer  is IP connected to a plurality of remotely located local area networks such as networks , , and , any file stored on a remotely located local area network , , or  or in an external computer of local network  can be selected. With integration of certain software such as virtual private network (VPN) software between local network  and one of remote networks , , and  remotely located files, e.g., those stored on a computer of remote network can easily be selected with use of a file selector window  as show in . Referring to , the XML file that is selected when button  is clicked on can be a file currently stored in e.g., computer -, -, -, -, -,-, -, -, -.","Referring to further aspects of the graphical user interface display screen window  of , clicking on a button  facilitates the selection of a file currently stored on host computer  and data collection terminal . If data collection terminal  is already IP connected to host computer  and system  is configured so that files on terminal  appear in file selector window , files stored on data collection terminal  can also be selected by clicking on button  as described previously. In a specific embodiment, button  can be used to select files stored in a directory of device , when there is an ACTIVESYNC connection between host computer  and terminal . ACTIVESYNC is proprietary software available from MICROSOFT, INC. which provides synchronization between serially connected devices connected over, e.g., USB, ETHERNET, IR, or another serial connection.","According to system , host computer  can also be configured to process INI files into XML format. Clicking on button  imports an INI file and enables the processing of an INI file located anywhere on the network of processed into XML format. Clicking on button  enables the selection of an INI file currently stored on data collection terminal  processing into XML format. A program for passing parameter value settings (usually encoded as \u201cvalues\u201d) of an INI file into an XML document file, can be programmed using any suitable programming language, e.g., C, C++, C#.","Referring to , a file selector graphical user interface display screen window  is shown in the state after open button  as shown in is clicked on. Referring to , system  can be configured so that when button  is clicked on, XML files stored in a specific directory for holding such files are automatically displayed. It is noted that a set of specially developed XML files, specially developed for use in system  are displayed in the screen display of the XML files displayed all have the extension \u201c.EXM\u201d. It is understood that XML files can be given any extension including the extension \u201c.XML\u201d commonly given to XML files. However, giving the XML files extensions other than \u201c.XML\u201d specially designated for use with system  is advantageous. Specifically, when de-packaging a data package file as described herein data collection terminal  can examine the file extension of the XML in order to process XML files having EXM extensions in manner differently from XML files having XML extensions. For example, data collection terminal  can be configured to always attempt to one of store an XML file having and EXM extension into a pre-specified configuration file directory or automatically parse parameters settings of an XML file having an EXM extension on de-packaging. Host computer  can also examine the file extension of an XML file when determining a GUI display screen to display on display . For example if an EXM file is selected for transfer to terminal , a fists type of GUI display screen can be displayed on display . If a non-EXM XML file is selected for transfer a second type of GUI display screen can be displayed on display having a different set of action indicator data entry fields.","While in the specific embodiment illustrated with respect to , the contents of the directory \u201cEasyConfigEditor\u201d are displayed in window  on display , the contents of an alternative folder could also be displayed, by navigation using folder button  and other navigating buttons provided with a WINDOWS operating system.","Clicking on button  and other navigational buttons that are part of Windows XP file management platform enables the display of alternative directories, including directories stored on a computer external to computer , e.g., computer -, computer -, or computer - ().","Referring to , shows a graphical interface display screen window displayed on display  of host  after an XML file is selected. shows the information of window  displayed on display  after an XML file is selected using file selector graphical user interface display screen window .","The XML document file \u201cDEVICECONFIG.EXM\u201d is the XML file illustrated in Table 1. When the XML file DEVICECONFIG.EXM is selected, host computer  parses data of the XML file then presents data from the XML file in the manner illustrated in . Within tree window  host computer  in accordance with XML configurator displays the name \u201cattribute\u201d of each section designated element of the DEVICECONFIG.EXM file. In tree window , each XML element designated as being a section element is represented. Further, each XML element designated as a section element is expressed according to the hierarchy of the XML document file. That is, in accordance with XML configurator , the nesting hierarchy of the XML file document shown in Table 1 is repeated in the display of tree widow . It is seen that new elements for display on display  can be created simply by writing additional XML code in accordance with the desired nesting format.","Referring to window  defined text of a description (\u201cdesc\u201d) attribute of the root XML element is automatically displayed when the XML file is selected.","Referring to the XML document file of Table 1, the \u201cdesc\u201d attribute associated with the root XML element is the descriptive text \u201cConfiguration file for general device settings.\u201d Accordingly, as seen in the screen display of , the text \u201cConfiguration file for general device settings\u201d is automatically displayed in window  when the XML document file is selected. However, as will be demonstrated further herein, when a name corresponding to a non-root element displayed in tree window  is clicked on, text of a \u201cdesc\u201d attribute is in the illustrated embodiment automatically displayed in window  in accordance with the XML element associated with the name that is clicked on. For example, specifically with reference to , shows a graphical user interface display screen displayed display on display  of host computer  when a particular name (name button) within tree display window  is clicked on. When a name or (name button) displayed in window  is clicked on, host computer  displays on display  in parameter setting value setting window , the name attribute and present parameter setting values of each key designated child element that is in child relative to the element selected by clicking on of a name in window . Specifically, if a selected name displayed in window tree area  has child elements XML child elements associated with it that are designated as being \u201ckey\u201d XML elements, host computer  in accordance with XML configurator  displays in area  name attributes and parameter setting values associated with those XML child elements.","Referring to the screen display of , name , is the name taken from an XML \u201csection\u201d designated element having a plurality of key designated sub-elements (child element). Accordingly, when the name (which can be formatted as a button) having the text \u201c802.11b\u201d designated with the reference numeral  is clicked on, names associated with all of key designated sub-elements of the XML element having the name \u201c802.11b\u201d are automatically displayed in window  in association with any parameter of those key designated XML elements. Referring to window  of , host computer  is configured so that parameters can be changed by double clicking on a parameter setting value of window  and editing the displayed data using keyboard . Host computer  displays in comment window  and comment window  text that is parsed from \u201cdesc\u201d attributes of certain XML elements of XML file of Table 1 in accordance with name buttons of window  and\/or window  that are clicked on.","Specifically, if the 802.11b name button designated with reference numeral  is clicked on, host computer  in accordance with XML configurator  displays in window  the designated \u201cdesc\u201d attribute of the XML element having the designated name 802.11b. In the example given, the text displayed in area  is the text \u201c802.11b radio settings.\u201d Similarly, host computer  in accordance with XML configurator  displays in window  text of the \u201cdesc\u201d attribute of the XML element having the name displayed in area  that is clicked on. For example, when the name \u201cDHCP\u201d designated with reference numeral  is clicked on, host computer  in accordance with XML configurator  displays in window  text of the \u201cdesc\u201d attribute of the XML element having the DHCP name. In the illustrative embodiment described, the text display in window  is the text:","\u201c0\/1 Enable\/Disable DHCP. When enabled, the IP address for the radio interface will be requested from a DHCP server. When disabled, the static address provided in IP Address will be used instead.\u201d","The descriptive text that is parsed from the XML document file and which is displayed in window  and  is useful in helping a user of system  understand the affect of the parameter settings being changed with use of system . It will be seen that host computer  is configured so that when a different name displayed in tree window  is clicked on, a correspondingly different text associated with the new name clicked on will be displayed in area . Similarly, when a new name displayed in area  is clicked on, host computer  will display in window  descriptive text associated with the XML element having the new name that is clicked on. The descriptive and instructional messages which will be displayed in window  and window  are discernable by reading of the XML document file in Table 1. For example, by reading the XML file in Table 1, it is seen that when the name \u201cIP Address\u201d is clicked on in window , the instructive text displayed in window  will be: \u201cStatic IP Address (a.b.c.d) for the radio interface used when DHCP setting is disabled (set to zero).\u201d Further, host computer  can be configured so that when a new name (a name button) displayed in area  is clicked on, host computer  displays in area , name attributes and parameter setting values of any child key designated element of the element having the name that is clicked on. While buttons such as name buttons are described as being actuated by being clicked on, host computer  can also be configured so that a button is actuated by a \u201cmouse over.\u201d The interactions between the displays of window , , , and  in view of the foregoing description for any possible displayed name of window  or window  can be observed by reading of the XML file at Table 1 .","Referring to , additional aspects of system  are described. Referring to , a graphical user interface display screen for use in encoding data of the XML file built by entering values into the display screen as shown in is described. As indicated by the view of , graphical user interface display screen windows for use in packaging file data of files and other data can be displayed by executing an executable file for running packaging module . Specifically, an executable file enabling host computer  to operate in accordance with packaging module  including control interface  can be executed. In window , as shown in , status of a current data package being built is displayed. By clicking on XML button , window  is automatically opened to display names of files located in a certain default folder. As indicated previously, the contents of different folders can be viewed by clicking on folder icon  and subsequently navigating between directories. As indicated in the view of , the XML document file \u201cDEVICECONFIG.EXM\u201d can be selected. The XML document file DEVICECONFIG.EXM can be an edited version of an original version as edited by changing parameters within display window  as explained in connection with . When a certain file from window  is selected, package status area  displays an indicator of the updated status of the data package being defined by a user.","Still referring to the screen display of , which is shown in full view in , the bar code button  can be clicked on to automatically generate a bar code or a set of bar codes corresponding to the selected XML document file. Host computer  can be configured so that when bar code button  is clicked on, an HTML file with a link to an image file including a representation of a bar code is temporarily saved on host computer  and viewed with use of a browser (IEXPLORER.EXE). It has been indicated that window  of and can be used to select for transfer to a data collection terminal  additional files in addition to the XML file DEVICECONFIG.EXM. For example, executable files, image files, moving video files, audio files and the like can be added. The graphical user interface window  displayed after bar code button  () or  is clicked on as is shown in . In an important aspect graphical user interface display screen window  displays data package status information. In field , host computer  displays the byte size of the correct data file package, and at field  displays the current number of bar codes required to encode data of the data package. Further at field , host computer  displays whether global compression has been selected and at field  displays whether global encryption has been selected. These fields are automatically updated (a) as files selected for transfer are dropped or added, (b) encryption\/compression selections are made (c) as action indicators are added and (d) as other data such as command data is entered. Thus, a user has immediate feedback as to the size of a current data package, and the number of bar codes required for encoding the data package. Host computer  can determine a size of a data package being defined, e.g., by examining of the data selected for inclusion in the data package, or header fields associated with such data selected for inclusion to the data package. If fields ,  indicate that a current data package is too large for a present application a user can delete selected files using window  or adjust compression\/encryption selected data so that the data package is reduced to a size suitable for a present application. As indicated, the user can alter symbology type file. Button  can be clicked on to open up print options and send options and save options for further processing of the created bar code. The encoded bar code encoding the data of the XML file can be printed with use of printer  or saved to a file such as a PDF file, and HTML file, an XML file. Referring again to the screen display of , an important aspect of system  is described. Specifically, by clicking on or off the \u201csimplify XML button\u201d , a user of system  can designate whether a user wishes an entire XML file to be encoded into a bar code or whether a user wishes only a portion of the data of a created XML file to be encoded into a bar code or into another decodable medium, e.g., an RFID tag, an IC card. When the \u201csimplify XML\u201d data entry field  is checked, certain data is deleted from the XML file built using the screen displays as described in connection with -. Specifically, when simplify XML data entry field  is checked, host computer  automatically strips away (discards) data that is not necessary for reconfiguring a subsystem of data collection terminal . While the text instructions of the XML file of Table 1 are defined as XML attributes, it will be understood that text instructions could also be alternative XML data. For example, the descriptive and instructional text portions of the XML file shown in Table 1, defined in the illustrative embodiment with use of XML attributes could be included as \u201cXML text,\u201d i.e., text between XML start and end tags. If descriptive XML content is defined with use of text content rather than with use of attributes as shown in Table 1, host computer  deletes text content rather than attribute content from a selected XML file when responding to \u201csimplify XML\u201d button  being selected ().","The screens of and illustrate that encoding module  (encoder) of host computer  can be activated during the time that host computer  displays package builder status window  as shown in . Host computer  can also be configured so that encoding module  (encoder) can be activated to encode a dataform during the time that host computer  displays the XML file builder status window  as shown in , , , , and . Referring to the screen display view of , window  includes the text button \u201cCreate EZConfig Bar Code\u201d labeled as element  of . System  is configured so that when the button \u201cCreate EZConfig Bar Code\u201d  is clicked on, the encoder control window  as shown in is displayed on display  of host .","Encoder control window  is a graphical user interface display screen window including data entry field  allowing a user to define a file directory of terminal  onto which file data is to be stored when terminal  reads an encoded bar code. Encoder control window  also includes data entry field  which, as described in response to general GUI encoder control window  (), enables a user to select whether all of the data of an XML configuration file are to be encoded; or alternatively, whether a portion of the data of an XML configuration file are to be encoded. When data entry field  is not checked, (i.e., is blank) host computer  encodes entire contents of the XML file being built using XML configurator screen . When data entry field  is checked, (i.e., includes a checkmark) host computer  determines that host computer  should reduce XML data from an XML file being built prior to be encoded, such that when bar code button  or  is clicked on only a portion of the data of the XML file being built is encoded into a bar code symbol. The data that is deleted from an XML document file when data entry field  is checked can include (i) all \u201cdisabled\u201d elements; (ii) all elements not edited during a previous editing session; and (iii) all text associated with all attributes of the XML document file of Table 1.","Referring to further aspects of encoder control graphical user interface display screen window , encoder control window  includes bar code button . Host computer  can be configured so that when bar code button  is clicked on the data of the XML configuration document file currently being built using window  is encoded into a bar code and bar code window  is displayed as shown in which includes a view of the newly encoded bar code. Referring to window , window  includes \u201cCopy to Clipboard\u201d button . When \u201cCopy to Clipboard\u201d button  is clicked on, the encoded bar code displayed in area  is copied to a clipboard. Another executable file stored on computer  can be opened, i.e., VISIO, MICROSOFT WORD, EXCEL, etc and the contents of the clipboard can be pasted into a new file, e.g., a new VISIO, WORD or EXCEL file. The bar code can then be printed on a physically transportable substrate such as transportable sheet of paper  ().","Referring again to encoder control window , encoder control window  also includes web page button . Host computer  can be configured so that when web page button  is clicked on, window  is displayed as shown in together. Referring to window , window  includes a print button . Host computer  is configured so that when print button  is clicked on; host computer  prints the bar code displayed in area  utilizing printer . Referring to further aspects of window , window  includes save button . Host computer  can be configured so that when save button  is clicked on, bar code save window  is displayed on display . Bar code save window  enables a user to select a file type and a location for a saved bar code. Window  includes file name area , a file type area , and a file directory button . A user of system  can input a desired name for a bar code file in area . A user can designate a file type of a saved bar code in area . Host computer  can be configured so that that the default file type is HTML, often used to store web pages of the type viewed by webpage browsers. Using area , a user can designate another file type however, e.g., TIF, GIF, .BMP. .PDF, .PNG. Host computer  can be configured so that when the default HTML file type is selected, an image file format associated with the HTML file is selected which is linked to the HTML file. For example, host computer  can be configured so that when save button  is clicked on to save an HTML file, an HTML file format in the folder designated in area  is saved with a link to an image file also stored in the folder designated in area . The file format of the linked image file may be e.g., the .PNG file format, GIF, .TIF. JPG. The folder location for storing a file including the encoded bar code can be changed by clicking on path button  and subsequently navigating to designate an alternative file directory. The file directory into which a bar code is stored can be a directory on board host computer  (e.g., the C drive, \u201cC:\u201d) a computer spaced apart from computer  but within a local network computer such as computer - or computer - () or a folder of a directory within a remote computer such as computer -, -, or computer -.","Referring to Table 2, another illustrative XML configuration file is shown. The configuration file of Table 2 includes elements authored in a systematic manner for use in changing parameters controlling operation of bar code reader device  which in the embodiment shown includes imaging module . The XML configuration file after being edited at host computer  can be transferred to a terminal  and stored in a memory thereof, and the parameter settings of the file can be accessed by a program controlling operation of bar code reader device . An XML file for use in setting parameters of bar code reader device is as follows:",{"@attributes":{"id":"p-0138","num":"0137"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"336pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d?>"},{"entry":"<ConfigDoc flags=\u201c16\u201d desc=\u201cConfiguration file for the ScanDemo\u201d name=\u201cScanDemo\u201d>"},{"entry":"\u2003<Section flags=\u201c16\u201d desc=\u201cSettings for the Decoder\u201d name=\u201cDecode\u201d>"},{"entry":"\u2003\u2003<Key flags=\u201c8\u201d desc=\u201cThis stores the file version. Do not modify this value!&#xA;\u201d"},{"entry":"name=\u201cVersion\u201d>3<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cControls the debug function of ScanDemo.&#xA;0-Disable&#xA;1-Enable, a log file"},{"entry":"is created in the \\IPSM folder (or as specified with the LogFilename key) \u201d name=\u201cLog\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cLocation and name of the ScanDemo log file.\u201d"},{"entry":"name=\u201cLogFilename\u201d>\/ipsm\/scandemo.log<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cEnables or Disables the audio notifications for an error or successful decode:&#xA;0 ="},{"entry":"Disable&#xA;1 = Enable, Front Speaker&#xA;2 = Enable, Back Speaker&#xA;3 = Enable, Front &amp;"},{"entry":"Back Speaker&#xA;&#xA;\u201d name=\u201cSound\u201d>1<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cEnables and disables LED notification for an error or successful decode\/data"},{"entry":"reception.&#xA;0 - Disable&#xA;1 - Enable\u201d name=\u201cLeds\u201d>1<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cEnable and disables continuous scan. If enabled, data will be continuously decoded"},{"entry":"and sent to the application while the trigger key is depressed. If disabled, the trigger key must be released"},{"entry":"between scans. &#xA;0 - Disable&#xA;1 - Enable&#xA;&#xA;\u201d name=\u201cContScan\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cEnables and disables power saving mode. If enabled, the imager will be"},{"entry":"automatically initialized and un-initialized as needed. A slight delay will occur when the trigger is activated. If"},{"entry":"disabled, the imager will be initialized when the utility starts and un-initialized when the utility terminates."},{"entry":"Default=1 (enabled).&#xA;0 - Disable&#xA;1 - Enable\u201d name=\u201cPowerSave\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cEnables and Disables the collection and displying of decoding statistics\u201d"},{"entry":"name=\u201cStats\u201d>1<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cIndicates the number of milliseconds that the scanner aimer should be displayed"},{"entry":"upon the trigger key has been pressed down, before attempting to decode a barcode. &#xA;If set to 0, the aimer"},{"entry":"is disabled\u201d name=\u201cAimerDuration\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cIndicates the maximum delay (milliseconds) between two consecutives trigger key"},{"entry":"presses to not re-display the aimer and attempt an immediate decode. Only valid the AimerDelay&gt;0.\u201d"},{"entry":"name=\u201cAimerDelay\u201d>500<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSimilar to AimerDuration, but for ALR mode only\u201d"},{"entry":"name=\u201cAimerDurationALR\u201d>2000<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSimilar to AimerDelay, but for ALR mode only\u201d"},{"entry":"name=\u201cAimerDelayALR\u201d>500<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSets the key used by ScanDemo to initiate a scan\/decode. The key is registered as a"},{"entry":"system hot key, it cannot be registered as a hot key by any other applications. Default=42 (On\/Scan Key)."},{"entry":"&#xA;\u201d name=\u201cTrigger\u201d>42<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies the decode time out in 1\/1000th seconds. If a barcode is not decoded within"},{"entry":"the specified timeout an audio and visual notification will indicate that an error occurred. Default=2000 (2"},{"entry":"seconds). &#xA;\u201d name=\u201cScanTimeout\u201d>9000<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifes the behavior of the decoder upon release of the trigger key:&#xA;0 = The"},{"entry":"decoder will scan as long as specified by the ScanTimeout parameter&#xA;1 = Releasing the trigger key will"},{"entry":"cause the decoder to stop scanning&#xA;\u201d name=\u201cScanAbort\u201d>1<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cTime interval between scanning attempts (milliseconds), when in AutoScan mode\u201d"},{"entry":"name=\u201cScanInterval\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies the decode mode. If 1, the decoder is in normal mode. If 2, the decoder"},{"entry":"works in ALD (Aggressive Linear Decode) mode.&#xA;\u201d name=\u201cScanMode\u201d>1<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies the linear search range to be used while in ALD mode. The range is 1 to 6."},{"entry":"A value of 1 indicates a tight vertical range near the aimer. A value of 6 indicates a vertical range of the entire"},{"entry":"height of the imager. Default=3. &#xA;\u201d name=\u201cLinearRange\u201d>3<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c1-7: Sets the decoder's PrintWeight parameter: adjusts the way the decoder reads"},{"entry":"Matrix symbols. If the image engine will be seeing consistently heavily printed Matrix symbols, a print weight"},{"entry":"of 6 or 7 may improve reading performance\u201d name=\u201cPrintWeight\u201d>4<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c0\/1: If set to 1, replaces the carriage return (13) in the decoded data with carriage"},{"entry":"return and line feed (13,10)\u201d name=\u201cReplaceCRwithCRLF\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSound frequency used for play a custom good scan beep, &#xA;NOTE: The"},{"entry":"Window's &quot;Good Decode&quot; sound defined in the control panel takes precedence over this option, if"},{"entry":"defined.\u201d name=\u201cGoodScanFreq\u201d>2794<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cNumber of milliseconds to play the sound as specified in GoodScanFreq\u201d"},{"entry":"name=\u201cGoodScanLen\u201d>50<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSound frequency used for play a custom bad scan beep, &#xA;NOTE: The Window's"},{"entry":"&quot;Bad Decode&quot; sound defined in the control panel takes precedence over this option, if defined.\u201d"},{"entry":"name=\u201cBadScanFreq\u201d>523<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=Number of milliseconds to play the sound as specified in BadScanFreq&#xA;\u201d"},{"entry":"name=\u201cBadScanLen\u201d>25<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies a wave file to be played on a successful decode\/data reception. The wave"},{"entry":"file should be an 8 bit, 11 KHz, mono, PCM file. If no wave file is specified, the default beep will be utilized."},{"entry":"Use the \u2018sound\u2019 setting to enable and disable audio notification. Default=\u201d\u201d. &#xA;NOTE: The Window's"},{"entry":"&quot;Good Decode&quot; sound defined in the control panel or the GoodScanFreq parameter take precedence"},{"entry":"over this option, if defined.&#xA;&#xA;\u201d name=\u201cGoodScanWav\u201d \/>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecify a wave file to be played on an unsuccessful decode. The wave file should be"},{"entry":"an 8 bit, 11KHz, mono, PCM file. If no wave file is specified, the default beep will be utilized. Use the \u2018sound\u2019"},{"entry":"setting to enable and disable audio notification. Default=\u201d\u201d.&#xA;NOTE: The Window's &quot; Bad"},{"entry":"Decode&quot; sound defined in the control panel or the BadScanFreq parameter take precedence over this"},{"entry":"option, if defined.&#xA;\u201d name=\u201cBadScanWav\u201d \/>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cIf set to 1, resets the Window's Idle timers before each decode attempt, preventing the"},{"entry":"DEVICE from entering into suspend mode when in AutoScan mode.\u201d name=\u201cResetIdleTimers\u201d>0<\/Key>"},{"entry":"\u2003<\/Section>"},{"entry":"\u2003<Section flags=\u201c16\u201d desc=\u201cThe Symbologies settings specify the settings for each of the symbologies"},{"entry":"supported by the Dolphin's decoder.&#xA;&#xA;The settings are in the form: &#xA;Symbology Name="},{"entry":"Enable, Parm1, Parm2, Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Where:&#xA;- Enable (0 or"},{"entry":"1): Specifies if the symbology is enabled or disabled. Disable symbologies not used to improve"},{"entry":"performance.&#xA;- Parm 1 . . . 8: Specify the settings for the symbology, as documented in the HHP Decode API."},{"entry":"Unusued parameters are ignored.&#xA;&#xA;Example: Code 39 = 1,0,0,0,0,0,2,48,0&#xA; 1 = Enable Code"},{"entry":"39&#xA;0 = Don't transmit start and stop characters &#xA;0 = Read codes with or without check"},{"entry":"character&#xA;0 = Do not transmit check character&#xA;0 = Full ASCII mode is disabled&#xA;0 = Append"},{"entry":"mode is disabled&#xA;2 = Minimum length is 2 characters&#xA;48 = Maximium length is 48"},{"entry":"characters&#xA;0 = Ignored parameter for Code 39&#xA;\u201d name=\u201cSymbologies\u201d>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded Aztec or Aztec Mesa Code message the engine should return. Aztec or Aztec"},{"entry":"Mesa Code messages smaller than this minimum length are not reported by the engine. The minimum allowable"},{"entry":"value (as well as the default) is 1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded Aztec or"},{"entry":"Aztec Mesa Code message the engine should return. Aztec or Aztec Mesa Codes messages larger than this"},{"entry":"maximumlength are reported by the engine. The maximum allowable value (as well as the default) is 3750."},{"entry":"&#xA;&#xA;\u201d name=\u201cAztec Code\u201d>1,1,3750,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded Aztec or Aztec Mesa Code message the engine should return. Aztec or Aztec"},{"entry":"Mesa Code messages smaller than this minimum length are not reported by the engine. The minimum allowable"},{"entry":"value (as well as the default) is 1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded Aztec or"},{"entry":"Aztec Mesa Code message the engine should return. Aztec or Aztec Mesa Codes messages larger than this"},{"entry":"maximumlength are reported by the engine. The maximum allowable value (as well as the default) is 3750\u201d"},{"entry":"name=\u201cAztec Mesas\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (bSSXmit) -"},{"entry":"Points to a BOOL variable that determines if the start and stop characters are returned in the data string after a"},{"entry":"successful Codabar decode. If bSSXmit is TRUE, the start and stop characters are included. If FALSE, they are"},{"entry":"not included. The default value is FALSE. &#xA;&#xA;PARM2 (bCheckCharOn) - Points to a BOOL variable"},{"entry":"that determines if the engine will read Codabar barcodes with or without check characters. If TRUE, the engine"},{"entry":"only decodes Codabarcodes with a check character. If FALSE, the decoder decodes codes with or without a"},{"entry":"check character. The default value is FALSE.&#xA;&#xA;PARM3 (bXmitCheckChar) - Points to a BOOL"},{"entry":"variable that determines if the engine will return the check character as part of the data string after a successful"},{"entry":"decode. If TRUE, the engine returns the check character. If FALSE the check character is not returned. The"},{"entry":"default value is FALSE. Note: This parameter is only used when bCheckCharOn is set to TRUE. If"},{"entry":"bCheckCharOn is set to FALSE, this parameter is ignored.&#xA;&#xA;PARM4 (nMinLength) - The minimum"},{"entry":"length decoded Codabar message the engine should return. Codabar messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 2.&#xA;&#xA;PARM5"},{"entry":"(nMaxLength) - The maximum length decoded Codabar message the engine should return. Codabar messages"},{"entry":"larger than this maximum length are not reported by the engine. The maximum allowable value (as well as the"},{"entry":"default) is 60. \u201d name=\u201cCodabar\u201d>1,0,0,0,4,60,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bTwoCheckDigits) - If TRUE, the engine only decodes Code 11 barcodes printed with two check digits."},{"entry":"Otherwise, the engine decodes Code 11 barcodes as if they were printed with only one check digit. The default"},{"entry":"value is TRUE.&#xA;&#xA;PARM2 (nMinLength) - The minimum length decoded Code 11 message the"},{"entry":"engine should return. Code 11 messages smaller than this minimum length are not reported by the engine. The"},{"entry":"default value is 4, and the minimum allowable value is 1.&#xA;&#xA;PARM3 (nMaxLength) - The maximum"},{"entry":"length decoded Code 11 message the engine should return. Code 11 messages larger than this maximum length"},{"entry":"are not reported by the engine. The maximum allowable value (as well as the default) is 80."},{"entry":"&#xA;&#xA;&#xA;\u201d name=\u201cCode 11\u201d>0,1,4,80,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded Code 128 message the engine should return. Code 128 messages smaller than"},{"entry":"this minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"0.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded Code 128 message the engine should"},{"entry":"return. Code 128 messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 80. &#xA;\u201d name=\u201cCode 128\/EAN 128\u2033>1,0,80,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (bSSXmit) -"},{"entry":"Points to a BOOL variable that determines if the start and stop characters are returned in the data string after a"},{"entry":"successful Code 39 decode. If bSSXmit is TRUE, the start and stop characters are included. If FALSE, they are"},{"entry":"not included. The default value is FALSE.&#xA;&#xA;PARM2 (bCheckCharOn) - Points to a BOOL variable"},{"entry":"that determines if the engine will read Code 39 barcodes with or without check characters. If TRUE, the engine"},{"entry":"only decodes Code 39 codes with a check character. If FALSE, the decoder decodes codes with or without a"},{"entry":"check character. The default value is FALSE.&#xA;&#xA;PARM3 (bXmitCheckChar) - Points to a BOOL"},{"entry":"variable that determines if the engine will return the check character as part of the data string after a successful"},{"entry":"decode. If TRUE, the engine returns the check character. If FALSE, the check character is not returned. The"},{"entry":"default value is FALSE.&#xA;&#xA;Note: This parameter is only used when bCheckCharOn is set to TRUE. If"},{"entry":"bCheckCharOn is set to FALSE, this parameter is ignored.&#xA;&#xA;PARM4 (bFullAscii) - Points to a"},{"entry":"BOOL variable that determines if certain character pairs within the barcode symbol are interpreted and returned"},{"entry":"as a single character. If bFullAscii is TRUE, interpretation is enabled. If FALSE, no interpretation is attempted."},{"entry":"The default value is FALSE. &#xA;Points to a BOOL variable that determines if the engine should append"},{"entry":"together and buffer up Code 39 symbols that start with a space (excluding the start and stop characters). The"},{"entry":"engine stores the symbols in the order in which they are read. It returns the data after a Code 39 symbol with no"},{"entry":"leading space is read. The return data has the leading spaces removed. If TRUE, the append feature is enabled. If"},{"entry":"FALSE, the append feature is disabled. The default value is FALSE.&#xA;&#xA;PARM5 (bAppend) - This"},{"entry":"parameter not supported - must be set to FALSE.&#xA;&#xA;PARM6 (nMinLength) - The minimum length"},{"entry":"decoded Code 39 message the engine should return. Code 39 messages smaller than this minimum length are"},{"entry":"not reported by the engine. The default value is 2, and the minimum allowable value is 0. nMaxLength The"},{"entry":"maximum length &#xA;decoded Code 39 message the engine should return. Code 39 messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"48.&#xA;&#xA;PARM7 (nMaxLength) - The maximum length decoded Code 39 message the engine should"},{"entry":"return. Code 39 messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 48.&#xA;\u201d name=\u201cCode 39\u201d>1,0,0,0,0,0,0,48,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded Code 49 message the engine should return. Code 49 messages smaller than this"},{"entry":"minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded Code 49 message the engine should"},{"entry":"return. Code 49 messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 81. &#xA;\u201d name=\u201cCode49\u201d>1,1,81,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded Code 93 message the engine should return. Code 93 messages smaller than this"},{"entry":"minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"0.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded Code 93 message the engine should"},{"entry":"return. Code 93 messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 80. &#xA;\u201d name=\u201cCode 93\u201d>1,0,80,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cEAN.UCC Composites\u201d>0,1,300,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded Data Matrix message the engine should return. Data Matrix messages smaller"},{"entry":"than this minimum length are not reported by the engine. The minimum allowable value (as well as the default)"},{"entry":"is 1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded Data Matrix message the engine"},{"entry":"should return. Data Matrix messages larger than this maximum length are not reported by the engine. The"},{"entry":"maximum allowable value (as well as the default) is 1500. &#xA;&#xA;\u201d name=\u201cData"},{"entry":"Matrix\u201d>1,1,1500,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bXmitCheckChar) - Points to a BOOL variable that determines if the engine will return the check character as"},{"entry":"part of the data string after a successful decode. If TRUE, the engine returns the check character. If FALSE, the"},{"entry":"check character is not returned. The default value is FALSE.&#xA;&#xA;PARM2 (bAddenda2Digit) - Points to"},{"entry":"a BOOL variable that determines if the engine will look for a 2 digit addenda at the end of the EAN barcode. If"},{"entry":"TRUE, and an addenda is present, the engine adds the two digit addenda data to the end of the message. If"},{"entry":"FALSE, the engine ignores addenda data. The default value is FALSE.&#xA;&#xA;PARM3 (bAddenda5Digit) -"},{"entry":"Points to a BOOL variable that determines if the engine will look for a 5 digit addenda at the end of the EAN"},{"entry":"barcode. If TRUE, and an addenda is present, the engine adds the five digit addenda data to the end of the"},{"entry":"message. If FALSE, the engine ignores addenda data. The default value is FALSE.&#xA;&#xA;PARM4"},{"entry":"(bAddendaReq) - Points to a BOOL variable that determines if the engine will decode only EAN barcodes that"},{"entry":"have a 2 or 5 digit addenda. If TRUE, the engine decodes only EAN symbols with an addenda. If FALSE, the"},{"entry":"engine decodes all enabled EAN symbols. The default value is FALSE.&#xA;&#xA;PARM5"},{"entry":"(bAddendaSeparator) - Points to a BOOL variable that determines if there is a space character between the data"},{"entry":"from the barcode and the data from the addenda. If TRUE, there is a space. If FALSE, there is no space. The"},{"entry":"default value is FALSE. &#xA;\u201d name=\u201cEAN-8\u201d>1,1,0,0,0,1,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bXmitCheckChar) - Points to a BOOL variable that determines if the engine will return the check character as"},{"entry":"part of the data string after a successful decode. If TRUE, the engine returns the check character. If FALSE, the"},{"entry":"check character is not returned. The default value is FALSE.&#xA;&#xA;PARM2 (bAddenda2Digit) - Points to"},{"entry":"a BOOL variable that determines if the engine will look for a 2 digit addenda at the end of the EAN barcode. If"},{"entry":"TRUE, and an addenda is present, the engine adds the two digit addenda data to the end of the message. If"},{"entry":"FALSE, the engine ignores addenda data. The default value is FALSE.&#xA;&#xA;PARM3 (bAddenda5Digit) -"},{"entry":"Points to a BOOL variable that determines if the engine will look for a 5 digit addenda at the end of the EAN"},{"entry":"barcode. If TRUE, and an addenda is present, the engine adds the five digit addenda data to the end of the"},{"entry":"message. If FALSE, the engine ignores addenda data. The default value is FALSE.&#xA;&#xA;PARM4"},{"entry":"(bAddendaReq) - Points to a BOOL variable that determines if the engine will decode only EAN barcodes that"},{"entry":"have a 2 or 5 digit addenda. If TRUE, the engine decodes only EAN symbols with an addenda. If FALSE, the"},{"entry":"engine decodes all enabled EAN symbols. The default value is FALSE.&#xA;&#xA;PARM5"},{"entry":"(bAddendaSeparator) - Points to a BOOL variable that determines if there is a space character between the data"},{"entry":"from the barcode and the data from the addenda. If TRUE, there is a space. If FALSE, there is no space. The"},{"entry":"default value is TRUE. &#xA;\u201d name=\u201cEAN-13\u201d>1,1,0,0,0,1,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bCheckDigitOn) - Points to a BOOL variable that determines if the engine will read Interleaved 2 of 5 barcodes"},{"entry":"with or without check characters. If TRUE, the engine only decodes Interleaved 2 of 5 codes with a check digit."},{"entry":"If FALSE, the decoder decodes codes with or without a check digit. The default value is"},{"entry":"FALSE.&#xA;&#xA;PARM2 (bXmitCheckDigit) - Points to a BOOL variable that determines if the engine"},{"entry":"will return the check digit as part of the data string after a successful decode. If TRUE, the engine returns the"},{"entry":"check digit. If FALSE, the check digit is not returned. The default value is FALSE.&#xA;Note: This parameter"},{"entry":"is only used when bCheckDigitOn is set to TRUE. If bCheckDigitOn is set to FALSE, this parameter is"},{"entry":"ignored.&#xA;&#xA;PARM3 (nMinLength) - The minimum length decoded Interleaved 2 of 5 message the"},{"entry":"engine should return. Interleaved 2 of 5 messages smaller than this minimum length are not reported by the"},{"entry":"engine. The default value is 6, and the minimum allowable value is 4.&#xA;&#xA;PARM4 (nMaxLength) -"},{"entry":"The maximum length decoded Interleaved 2 of 5 message the engine should return. Interleaved 2 of 5 messages"},{"entry":"larger than this maximum length are not reported by the engine. The maximum allowable value (as well as the"},{"entry":"default) is 80. &#xA;&#xA;\u201d name=\u201cInterleaved 2 of 5\u201d>1,0,0,4,80,0,0,0,0<\/Key>"},{"entry":"<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bCarrierMsgOnly) - This parameter is no longer supported.&#xA;&#xA;PARM2 (nMinLength) - The"},{"entry":"minimum length decoded MaxiCode message the engine should return. MaxiCode messages smaller than this"},{"entry":"minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"1.&#xA;&#xA;PARM3 (nMaxLength) - The maximum length decoded MaxiCode message the engine should"},{"entry":"return. MaxiCode messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 150. &#xA;\u201d name=\u201cMaxiCode\u201d>1,0,1,150,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded MicroPDF417 message the engine should return. MicroPDF417 messages"},{"entry":"smaller than this minimum length are not reported by the engine. The minimum allowable value (as well as the"},{"entry":"default) is 1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded MicroPDF417 message the"},{"entry":"engine should return. MicroPDF417 messages larger than this maximum length are not reported by the engine."},{"entry":"The maximum allowable value (as well as the default) is 2750. &#xA;\u201d"},{"entry":"name=\u201cMicroPDF417\u201d>0,1,366,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nFont) - This"},{"entry":"determines which OCR fonts (if any) are selected for decoding. The following values are used:&#xA;&#xA;"},{"entry":"OCR_DISABLED&#xA; OCR_A&#xA; OCR_B&#xA; OCR_MONEY&#xA; OCR_MICR"},{"entry":"(currently unsupported)&#xA;&#xA;PARM2 (pszTemplate) - A null-terminated string that indicates one or"},{"entry":"more template patterns for the OCR decode. All characters in the font 1 are matched as is, except for the"},{"entry":"following:&#xA;&#xA; a - alphanumeric character&#xA; c - check character&#xA; d -a digitfrom0-"},{"entry":"9&#xA; e - any character&#xA; g - any character specified in group G&#xA; h - any character specified"},{"entry":"in group H&#xA; l - alphabetic letter&#xA; r - delimits a row&#xA; t - delimits multiple"},{"entry":"templates&#xA;&#xA;PARM3 (pszGroupG) - A null-terminated string that defines the set of characters"},{"entry":"matching group \u201cg\u201d in a template.&#xA;&#xA;PARM4 (pszGroupH) - A null-terminated string that defines the"},{"entry":"set of characters matching group \u201ch\u201d in a template.&#xA;&#xA;PARM5 (pszCheckChar) - A null-terminated"},{"entry":"string that defines the legal characters for checksum computation in a decoded message. Use the string constant"},{"entry":"\u201c0123456789\u201d for modulo 10 checksums, and the string constant"},{"entry":"\u201c0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\u201d for modulo 36 checksums. &#xA;&#xA;PARM6"},{"entry":"(nDirection) - Tells the OCR decoder which way the characters are usually oriented with respect to the image."},{"entry":"The decoder still decodes any orientation, but use of this parameter can increase decoding speed. It also makes"},{"entry":"decoding more reliable for numbers that contain only the digits \u201c0, 6, 8,\u201d and \u201c9.\u201d The constant specifies the"},{"entry":"direction taken when the user reads the message from start to finish. The following values are"},{"entry":"used:&#xA;&#xA; LeftToRight&#xA; TopToBottom&#xA; RightToLeft&#xA;"},{"entry":"BottomToTop&#xA;\u201d name=\u201cOCR\u201d>0,2,dddddddd,,,,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded PDF417 message the engine should return. PDF417 messages smaller than this"},{"entry":"minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded PDF417 message the engine should"},{"entry":"return. PDF417 messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 2750.&#xA;&#xA;\u201d name=\u201cPDF417\u201d>1,1,2750,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded QR Code message the engine should return. QR Code messages smaller than"},{"entry":"this minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded QR Code message the engine should"},{"entry":"return. QR Code messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 3500. &#xA;\u201d name=\u201cQR Code\u201d>0,1,3500,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bXmitCheckChar) - points to a BOOL variable that determines if the engine will return the check character as"},{"entry":"part of the data string after a successful decode. If TRUE, the engine returns the check character. If FALSE, the"},{"entry":"check character is not returned. The default value is FALSE. &#xA;\u201d name=\u201cPostnet\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded RSS message the engine should return. RSS messages smaller than this"},{"entry":"minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"1.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded RSS message the engine should return."},{"entry":"RSS messages larger than this maximum length are not reported by the engine. The maximum allowable value"},{"entry":"(as well as the default) is 80. &#xA;\u201d name=\u201cReduced Space Symbology (RSS)\u201d>1,4,74,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bXmitCheckDigit) - Points to a BOOL variable that determines if the engine will return the check digit as part"},{"entry":"of the data string after a successful decode. If TRUE, the engine returns the check digit. If FALSE, the check"},{"entry":"digit is not returned. The default value is FALSE.&#xA;&#xA;PARM2 (bXmitNumSys) - Points to a BOOL"},{"entry":"variable that determines if the engine will return the numeric system digit of the UPC label. If TRUE, the engine"},{"entry":"returns the number system digit. If FALSE, the number system digit is not returned. The default value is"},{"entry":"TRUE.&#xA;&#xA;PARM3 (bAddenda2Digit) - Points to a BOOL variable that determines if the engine will"},{"entry":"look for a 2 digit addenda at the end of the UPC barcode. If TRUE, and an addenda is present, the engine adds"},{"entry":"the two digit addenda data to the end of the message. If FALSE, the engine ignores addenda data. The default"},{"entry":"value is FALSE.&#xA;&#xA;PARM4 (bAddenda5Digit) - Points to a BOOL variable that determines if the"},{"entry":"engine will look for a 5 digit addenda at the end of the UPC barcode. If TRUE, and an addenda is present, the"},{"entry":"engine adds the five digit addenda data to the end of the message. If FALSE, the engine ignores addenda data."},{"entry":"The default value is FALSE.&#xA;&#xA;PARM5 (bAddendaReq) - Points to a BOOL variable that determines"},{"entry":"if the engine will decode only EAN barcodes that have a 2 or 5 digit addenda. If TRUE, the engine decodes only"},{"entry":"EAN symbols with an addenda. If FALSE, the engine decodes all enabled EAN symbols. The default value is"},{"entry":"FALSE.&#xA;&#xA;PARM6 (bAddendaSeparator) - Points to a BOOL variable that determines if there is a"},{"entry":"space character between the data from the barcode and the data from the addenda. If TRUE, there is a space. If"},{"entry":"FALSE, there is no space. The default value is FALSE. &#xA;\u201d name=\u201cUPC-A\u201d>1,1,1,0,0,0,1,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bXmitCheckDigit) - Points to a BOOL variable that determines if the engine will return the check digit as part"},{"entry":"of the data string after a successful decode. If TRUE, the engine returns the check digit. If FALSE, the check"},{"entry":"digit is not returned. The default value is FALSE.&#xA;Note: This parameter is not valid for UPC"},{"entry":"E1.&#xA;&#xA;PARM2 (bXmitNumSys) - Points to a BOOL variable that determines if the engine will return"},{"entry":"the numeric system digit of the UPC label. If TRUE, the engine returns the number system digit. If FALSE, the"},{"entry":"number system digit is not returned. The default value is FALSE.&#xA;&#xA;Note: This parameter is not valid"},{"entry":"for UPC E1.&#xA;&#xA;PARM3 (bExpandVersionE) - Points to a BOOL variable that determines if the"},{"entry":"engine will expand UPC-E codes to the 12 digit UPC-A format after a successful decode. If TRUE, the engine"},{"entry":"expands the code. If FALSE, the engine does not expand the UPC-E code. The default value is"},{"entry":"FALSE.&#xA;&#xA;Note: This parameter is not valid for UPC E1.&#xA;&#xA;PARM4 (bAddenda2Digit) -"},{"entry":"Points to a BOOL variable that determines if the engine will look for a 2 digit addenda at the end of the UPC"},{"entry":"barcode. If TRUE, and an addenda is present, the engine adds the two digit addenda data to the end of the"},{"entry":"message. If FALSE, the engine ignores addenda data. The default value is FALSE.&#xA;&#xA;PARM5"},{"entry":"(bAddenda5Digit) - Points to a BOOL variable that determines if the engine will look for a 5 digit addenda at"},{"entry":"the end of the UPC barcode. If TRUE, and an addenda is present, the engine adds the five digit addenda data to"},{"entry":"the end of the message. If FALSE, the engine ignores addenda data. The default value is"},{"entry":"FALSE.&#xA;&#xA;PARM6 (bAddendaReq) - Points to a BOOL variable that determines if the engine will"},{"entry":"decode only EAN barcodes that have a 2 or 5 digit addenda. If TRUE, the engine decodes only EAN symbols"},{"entry":"with an addenda. If FALSE, the engine decodes all enabled EAN symbols. The default value is"},{"entry":"FALSE.&#xA;&#xA;PARM7 (bAddendaSeparator) - Points to a BOOL variable that determines if there is a"},{"entry":"space character between the data from the barcode and the data from the addenda. If TRUE, there is a space. If"},{"entry":"FALSE, there is no space. The default value is TRUE. &#xA;&#xA;\u201d name=\u201cUPC-"},{"entry":"E0\u201d>1,1,1,0,0,0,0,1,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bXmitCheckDigit) - Points to a BOOL variable that determines if the engine will return the check digit as part"},{"entry":"of the data string after a successful decode. If TRUE, the engine returns the check digit. If FALSE, the check"},{"entry":"digit is not returned. The default value is FALSE.&#xA;Note: This parameter is not valid for UPC"},{"entry":"E1.&#xA;&#xA;PARM2 (bXmitNumSys) - Points to a BOOL variable that determines if the engine will return"},{"entry":"the numeric system digit of the UPC label. If TRUE, the engine returns the number system digit. If FALSE, the"},{"entry":"number system digit is not returned. The default value is FALSE.&#xA;&#xA;Note: This parameter is not valid"},{"entry":"for UPC E1.&#xA;&#xA;PARM3 (bExpandVersionE) - Points to a BOOL variable that determines if the"},{"entry":"engine will expand UPC-E codes to the 12 digit UPC-A format after a successful decode. If TRUE, the engine"},{"entry":"expands the code. If FALSE, the engine does not expand the UPC-E code. The default value is"},{"entry":"FALSE.&#xA;&#xA;Note: This parameter is not valid for UPC E1.&#xA;&#xA;PARM4 (bAddenda2Digit) -"},{"entry":"Points to a BOOL variable that determines if the engine will look for a 2 digit addenda at the end of the UPC"},{"entry":"barcode. If TRUE, and an addenda is present, the engine adds the two digit addenda data to the end of the"},{"entry":"message. If FALSE, the engine ignores addenda data. The default value is FALSE.&#xA;&#xA;PARM5"},{"entry":"(bAddenda5Digit) - Points to a BOOL variable that determines if the engine will look for a 5 digit addenda at"},{"entry":"the end of the UPC barcode. If TRUE, and an addenda is present, the engine adds the five digit addenda data to"},{"entry":"the end of the message. If FALSE, the engine ignores addenda data. The default value is"},{"entry":"FALSE.&#xA;&#xA;PARM6 (bAddendaReq) - Points to a BOOL variable that determines if the engine will"},{"entry":"decode only EAN barcodes that have a 2 or 5 digit addenda. If TRUE, the engine decodes only EAN symbols"},{"entry":"with an addenda. If FALSE, the engine decodes all enabled EAN symbols. The default value is"},{"entry":"FALSE.&#xA;&#xA;PARM7 (bAddendaSeparator) - Points to a BOOL variable that determines if there is a"},{"entry":"space character between the data from the barcode and the data from the addenda. If TRUE, there is a space. If"},{"entry":"FALSE, there is no space. The default value is TRUE. &#xA;\u201d name=\u201cUPC-E1\u201d>0,1,1,0,0,0,0,1,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cISBT\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cBritish Post\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cCanadian Post\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cAustralian Post\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded IATA 2 of 5 message the engine should return. IATA 2 of 5 messages smaller"},{"entry":"than this minimum length are not reported by the engine. The minimum allowable value (as well as the default)"},{"entry":"is 4.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded IATA 2 of 5 message the engine"},{"entry":"should return. IATA 2 of 5 messages larger than this maximum length are not reported by the engine. The"},{"entry":"maximum allowable value (as well as the default) is 80. &#xA;\u201d name=\u201cStraight 2 of 5"},{"entry":"IATA\u201d>0,4,48,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded Codablock message the engine should return. Codablock messages smaller than"},{"entry":"this minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"0.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded Codablock message the engine should"},{"entry":"return. Codablock messages larger than this maximum length are not reported by the engine. The maximum"},{"entry":"allowable value (as well as the default) is 2048. &#xA;\u201d name=\u201cCodablock\u201d>0,1,2048,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cJapanense Post\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1"},{"entry":"(bXmitCheckDigit) - Points to a BOOL variable that determines if the engine will return the check digit as part"},{"entry":"of the data string after a successful decode. If TRUE, the engine returns the check digit. If returned. The default"},{"entry":"value is FALSE.&#xA;&#xA;&#xA;\u201d name=\u201cPlanet Code\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cDutch Post\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded MSI message the engine should return. MSI messages smaller than this"},{"entry":"minimum length are not reported by the engine. The minimum allowable value (as well as the default) is"},{"entry":"4.&#xA;&#xA;PARM2 (nMaxLength) - The maximum length decoded MSI message the engine should return."},{"entry":"MSI messages larger than this maximum length are not reported by the engine. The maximum allowable value"},{"entry":"(as well as the default) is 48.&#xA;&#xA;PARM3 (bXmitCheckChar) - Points to a BOOL variable that"},{"entry":"determines if the engine will return the check character as part of the data string after a successful decode. If"},{"entry":"TRUE, the engine returns the check character. If FALSE, the check character is not returned. The default value"},{"entry":"is FALSE. &#xA;\u201d name=\u201cMSI\u201d>0,4,48,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cTCIF Linked Code 39 (TLC39)\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d name=\u201cTrioptic Code\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c\u201d name=\u201cCode 32\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 4.&#xA;&#xA;PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"48.&#xA;&#xA;\u201d name=\u201cStraight 2 of 5 Industrial\u201d>0,4,48,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 4.&#xA;&#xA;PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"80.&#xA;\u201d name=\u201cMatrix 2 of 5\u201d>0,4,80,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 4.&4xA;&#xA;PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"48.&#xA;\u201d name=\u201cPlessey\u201d>0,4,48,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 4.&#xA;&#xA;PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"80.&#xA;\u201d name=\u201cChina Post\u201d>0,4,80,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 4.&#xA;&#xA;PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"48.&#xA;&#xA;&#xA;\u201d name=\u201cKorea Post\u201d>0,4,48,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 1.&#xA;&#xA;PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"60.&#xA;&#xA;PARM3 (bOriginal) - A BOOL variable that configures the engine to read Telepen labels that"},{"entry":"were encoded with either the original or the AIM specification. The default is FALSE.&#xA;&#xA;\u201d"},{"entry":"name=\u201cTelepen\u201d>0,1,60,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 1.&#xA;&#xA,PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"160.&#xA;&#xA;&#xA;\u201d name=\u201cCode 16K\u201d>0,1,160,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c&#xA;The settings are in the form: Symbology Name= Enable, Parm1, Parm2,"},{"entry":"Parm3, Parm4, Parm5, Parm6, Parm7, Parm8&#xA;&#xA;Parameters&#xA;-----------------"},{"entry":"&#xA;&#xA;ENABLE - Specifies if the symbology is enabled or disabled&#xA;&#xA;PARM1 (nMinLength) -"},{"entry":"The minimum length decoded message the engine should return. Messages smaller than this minimum length"},{"entry":"are not reported by the engine. The minimum allowable value (as well as the default) is 4.&#xA;&#xA;PARM2"},{"entry":"(nMaxLength) - The maximum length decoded message the engine should return. Messages larger than this"},{"entry":"maximum length are not reported by the engine. The maximum allowable value (as well as the default) is"},{"entry":"48.&#xA;&#xA;PARM3 (nLimited) - A WORD variable used to enable the decoding of either Posicode"},{"entry":"Limited A or Posicode Limited B labels. A value of 1 enables Posicode Limited A, and a value of 2 enables"},{"entry":"Posicode Limited B. A value of 0 disables decoding of both Limited A and Limited B. The default value is"},{"entry":"0.&#xA;&#xA;\u201d name=\u201cPosiCode\u201d>0,4,48,2,0,0,0,0,0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201c\u201d name=\u201cCoupon Code\u201d>0,0,0,0,0,0,0,0,0<\/Key>"},{"entry":"\u2003<\/Section>"},{"entry":"\u2003<Section flags=\u201c16\u201d desc=\u201cSettings for the Centering window used by the scanner to decode a barcode.\u201d"},{"entry":"name=\u201cCentering\u201d>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cEnable and disables decode centering feature for the decoder. If CenteringEnable is"},{"entry":"1, barcodes will only be decoded if they are within the centering window specified by CenteringTop,"},{"entry":"CenteringBottom, CenteringLeft and CenteringRight. Default=0.&#xA;\u201d name=\u201cCenteringEnable\u201d>0<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies the top coordinate of the centering window. Default =230.&#xA;\u201d"},{"entry":"name=\u201cCenteringTop\u201d>215<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies the bottom coordinate of the centering window. Default = 250.&#xA;\u201d"},{"entry":"name=\u201cCenteringBottom\u201d>265<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies the left coordinate of the centering window. Default =310.&#xA;\u201d"},{"entry":"name=\u201cCenteringLeft\u201d>295<\/Key>"},{"entry":"\u2003\u2003<Key flags=\u201c16\u201d desc=\u201cSpecifies the right coordinate of the centering window. Default = 330.&#xA;\u201d"},{"entry":"name=\u201cCenteringRight\u201d>345<\/Key>"},{"entry":"\u2003<\/Section>"},{"entry":"<\/ConfigDoc>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0139","num":"0138"},"figref":["FIG. 7","FIG. 7","FIG. 1"],"i":["l ","l","e"],"b":["7001","100","7002","7004","7006","7008","10","100","14","14","6318","14","1406","14"]},"VIII. Building Data Packages",{"@attributes":{"id":"p-0141","num":"0140"},"figref":["FIGS. 8","FIGS. 8"],"i":["a","o ","a","o "],"b":["8","100","8","100"]},"With reference now to the screen shots of -, a system is described for building a multiple file data package wherein compression settings and encryption settings for the data package can be established on a file by file basis.","Referring to , shows GUI display screen window  which host computer  displays on display screen  in accordance with packaging module . As discussed previously in connection with , window  includes area  displaying the status of the data package currently being defined by host computer . In window  there can be displayed a tree diagram as shown in -comprising designators for data that is included in a present data package. Host computer  can be configured to have \u201cdrag and drop\u201d functionality so that designation of window  can be moved from location to location in window  by dragging and dropping using pointer controller  to control pointer . The designators of window  can correspond to files or commands selected for transfer to data collection terminal  or to encryption selection data or compression selected data. Host computer  can be programmed to display a GUI with drag and drop functionality using an appropriate software development tool, e.g., VISUAL STUDIO.NET . In the screen shot of , window  indicates that the status of the current data package is empty, i.e., no file data, command data, compression select data or encryption select data have yet been designated for inclusion in the current data package. With reference further to the graphical user interface display screen of , host computer  is configured so that when XML button  is clicked on; host computer  displays GUI display screen window  displaying file names of files of a default directory including XML configuration files. GUI display screen window  can be regarded as a file selector graphical user interface display screen window . XML files designated in window  are XML files designated with the extension .EXM for use in configuring various devices of terminal  such as radio transceiver devices and encoded information reader devices, e.g., a bar code reader device .","Referring to , shows a graphical user interface display screen displayed by host computer  when the file \u201cIMAGEDEMO.EXM\u201d designated with reference numeral  is selected from file selector window  shown in the screen shot of . When the file designated by reference numeral  is selected for transfer to data collection terminal , package status window  displays designator  to indicate that file data of the file IMAGEDEMO.EXM is included in the designated current data package. Field  of window  designates the path of the selected file. In the case shown in , a selected file is stored locally on host computer  as indicated by the C: file directory path. However, it will be understood that the directory can be selected to select a directory of any computer within the network view of . In area , a user can designate the directory for storing the selected file into a memory of terminal  when the selected file is transferred to terminal  either by reading decoded data encoded in a decodable dataform or by file transfer without encoding.","Referring to , the screen shot of illustrates the manner in which window  can be utilized to add file data corresponding to additional files to the current package. Referring again to , it is seen that a designator corresponding to a selected file such as designator  is highlighted just after it is selected. It will be seen herein that the highlighting of a child designator  as opposed to a root designator  has significance. Specifically, if a compression setting or an encryption setting is selected with a child designator  highlighted, the compression or encryption setting will be applied only to the file data associated with that highlighted child designator and not to other file data of the current package. Referring to the screen shot of , when XML button  is selected, file display window  is displayed by host computer  to enable selection of an XML file. Referring to the screen shot of , host computer  is configured so that file data corresponding files can be added to a data package either by clicking on a button  or button . Button  is an XML file button and results in a file selector window  being displayed that displays XML files that can be added to the current package. Button  is a general file selector button. When general file selector button  is selected, host computer  displays file selector window  as shown in . When general file selector button  is clicked on rather than XML file selector button , file types in addition to XML files types are displayed in window . For example, in file selector window  of the screen shot of numerous file types are available for selection including EXM files (.EXM) which are XML files specially made for use in system , XML files, JPG files (JPG) and INI files (INI).","Referring to , is a screen shot showing a graphical user interface display screen on display  after the file DEVICECONFIG.EXM is selected using file selector window  as shown in FIG. and . When file DEVICECONFIG.EXM is selected, package status window  indicates that file DEVICECONFIG.EXM is part of the package. Referring to the graphical user interface display screen of , illustrates the selection of a file for inclusion in the current data package that is not an XML file. When it is desired to add a file for transferring to data collection terminal  that is not an XML file for use in configuring a device of terminal  or for any other purpose, generic file selector button  is clicked on. Host computer  is configured so that when button  is clicked on; file selector window  is displayed displaying the names corresponding to XML file and non-XML files in a default directory. Host computer  is configured so that with window  displayed, folder icon  can be clicked on so that contents other than the default folder are displayed. With further navigation contents of any folder of any computer within the network of can be displayed on display .",{"@attributes":{"id":"p-0147","num":"0146"},"figref":["FIG. 8","FIG. 8","FIG. 2","FIG. 8","FIG. 8","FIG. 8"],"i":["g ","g ","d","g ","e ","e "],"b":["132","100","10","8016","100","16","110","110","1","7030","8850","8838","1000"]},"System  can be configured so that data collection terminal  when receiving a data package from host , either by decoding an encoded dataform, i.e., one or more bar codes or by direct data package transferring over a communication path to data collection terminal , data collection terminal  automatically attempts to execute the received file by associating an executable file with the received file in an attempt to open or run the received file.","As indicated by , system  is configured to enable a user to incorporate one or more command lines into a multiple file data package built by host computer . is a screen shot illustrating use of a command line feature to designate a particular program for opening an image file; namely, the file PICTURE.TIF included in a current data package. Host computer  is configured so that when command line icon  is clicked on, host computer  displays command line window  as indicated in . If command line window  is displayed, a user can enter any desired command line into area . In the screen shot of the command line IEXPLORE.EXE\/IPSM\/PICTURE.TIF is entered into data entry . When OK button  is clicked on, command data corresponding to the command line becomes part of the current data package as is indicated by the screen shot of . Host computer  can be configured so that whenever a file or command is selected for transfer to data collection terminal (e.g., by adding a designator to window  or by highlighting a designator) a user is presented with a GUI display screen allowing a user to select one or more action indicators such as flags for each file or command selected. When an XML configuration document file designated with EXM extension is selected for transfer, the GUI display screen of can be displayed. When a non-EXM file is selected for transfer, the GUI display screen of may be displayed. When a command is selected for transfer, the GUI display screen of may be displayed. It will be seen that additional GUI display screens may be displayed when compression selection data and encryption selection data is added to a data package. Accordingly, it is seen that host computer  can be configured to prompt a user, by presenting data entry fields, to set separate action indicators for each file and for each command that is selected for transfer for a data package that can contain file data of more than one file and command data of more than one command. A file or command can be regarded as being selected for transfer when a designator for the file or command is caused to appear in window . If button  is clicked on, a user may be prompted to enter user defined data into a data entry field of host computer . User defined data, as has been described is data that does not correspond to a file or a command.","Referring to the screen shot of , package status area  indicates that the command line entered into window  has been associated as part of the current data package being defined. Referring to the screen shot of , package status window  indicates that two XML files, a picture file (PICTURE.TIF) and a command line to open the image file have been designated for inclusion in the current data package. The current data package, the status of which is indicated in window , can be encoded into a dataform at any time by clicking on bar codes icon (button) . The created encoded dataform can be subsequently decoded by data collection terminal . Files rebuilt at data collection terminal  by processing of a received data package will be processed in the order indicated in package status window . In an important aspect, host computer  is configured so that the ordering of files and commands of a current data package can be altered or changed simply by dragging and dropping designators , , ,  for the data package data displayed in area  into a desired ordering. For example, pointer controller  can be used to move pointer  () to click on a designator within area  to change the ordering of the data package data. For example, host computer  can be configured so that the ordering of the data package data designated by designator  and the designator  can be switched by clicking on the designator  dragging it upwards (i.e., \u201cdragging and dropping\u201d) into the location of  so that the ordering of designators  and  is reversed. The ordering of any of the designators designated within package status window  can be changed by the same drag and drop method. In certain instances, the ordering of the data of a defined data package is of significance. For example, in the screen shot of , the ordering of the command line designator  after the image file designator  is intentional. With the command line corresponding to designator  being executed after the image file is buffered and\/or stored on data collection terminal , there will be assurance that the image file resides on data collection terminal at the time the command to open the image file is made. Referring to the screen shot of , host computer  can be configured so that package building window  includes compression button  for selecting compression of file data and command data and an encryption button  for selecting encryption of file data and command data. In the screen shot of , XML file designator  corresponds to an XML configuration file selected for transfer is highlighted. Host computer  is configured so that when compression button  is selected with designator  highlighted the highlighted file and only the highlighted file is designated for compression. Similarly, host computer  is configured so when encryption button  is selected with designator  highlighted as shown in , the file corresponding the highlighted designator and only the file data corresponding to the highlighted designator is designated for encryption.","Referring now to screen shot , shows a GUI display screen display displayed by display  when encryption icon (button)  is selected with the designator  highlighted. The hierarchy of the tree diagram of package status window  indicates that when encryption button  is selected with designator  highlighted the current package will be established so that only the file DEVICECONFIG.EXM will be designated for encryption independent of a global encryption option which will be described later herein. With further reference to the GUI screen display of , screen display window  of the screen display of includes data entry field  allowing a user to enter a password. Using data entry field  a user can also designate that a built-in password will be used. A password entered into field  can be used as an encryption key for encrypting data. If the data package designated by package status window  of is encoded into a decodable dataform and later decoded by data collection terminal  with a global encryption option selected, data collection terminal  when encoding the dataform, i.e., a bar code symbol or set of bar code symbols will prompt on display screen  of data collection terminal  a user of system  enter into data collection terminal  a password corresponding to the selection of the global encryptions selection. Further, when processing encryption selection data included in a data package in response to designator  being selected , data collection terminal  will display on display  of data collection terminal  a prompt prompting user of data collection terminal  to enter the password entered in information area  of the GUI display screen of . Because in the data package illustrated in package status window  of the screen shot of an encryption designator is not selected for any of designators ,  or , data collection terminal  will not prompt a user to enter a separate password when processing rebuilt files rebuilt by processing of a received data package other than the file corresponding to designator  for which encryption is selected.","In the screen display of , the package indicated has the same status as the package indicated in package status area  of except that in the screen shot of a designator  corresponding to an image file is highlighted. When compression button  is selected, with the designator  highlighted, file data corresponding to designator  and only file data corresponding to designator  is designated for compressing. After the compression button  is clicked on, the screen display displayed on display  by host computer  has the form shown in . Package status window  of the screen shot of indicates that file data corresponding to file image file designator  and only that file data is designated for compression independent of a global compression selection.","It is seen that host computer  is configured so that when encryption button  is clicked on, an encryption designator  is inserted into the tree diagram of window  illustrating characteristics of the present data package . Likewise, with reference to the screen shot of , host computer  can be configured so that when compression button  is clicked on, a compression designator  is automatically inserted into the tree diagram of window . The locations of encryption designators  and compression designators  within the hierarchical tree diagram indicate which data of a data package is to be encrypted and which data is to be compressed. Host computer  can be configured so that all data corresponding to designators displayed as children of an encryption designator are encrypted and all data corresponding to designators displayed as children of compression indicators are to be compressed. Accordingly, in the example of the data package represented by the tree diagram of , the file data set corresponding to file designator  is encrypted and the file data set corresponding to designator  is compressed. In the example of the data package represented by the tree diagram of , the file data set corresponding to file designators  and  are encrypted (there being two child file designators under the encryption designator ), and the file data set corresponding to designator  is compressed. Host computer  can be configured so that like the file and command designators, the encryption designator  and the encryption designator  can be maneuvered about within a displayed hierarchical tree diagram by dragging and dropping of the designators  and . Thus, a set of sibling file designators can be designated for compression simply by dragging and dropping a compression designator  into a location in the tree diagram so that it is a parent designator of the setting sibling designators. The set of sibling file designators can alternatively be designated for encryption by dragging and dropping an encryption designator as a parent of the designators for the files. A data package having any desired layering of encryption or compression for the data of the data page file can be easily defined by dragging and dropping encryption designators and compression designators into appropriate positions in the hierarchical tree diagram of window . Host computer  can further be configured to encrypt and compress data off a data package in a manner corresponding to the selections that are designated in the tree diagram displayed in window . Host computer  can further be configured to include encryption selection data and compression selection data in a data package in such manner that the data collection tenninal can examine the encryption selection data and accordingly apply decryption and decompression schemes in a manner consistent with the applied encryption and compression schemes to rebuild files and commands originally selected for transfer. It will be understood that as encryption selection data and compression selection data of a data package is being defined commands are also being developed to encrypt and compress data of a data package in a manner that is in accordance with the encryption selection data and compression selection data, such that original files and commands can be rebuilt at tenninal  on de-packaging.","The screen shots of and illustrate that a global compression and a global encryption selection for an entire data package can be made independent of encryption and\/or compression selections for file data corresponding to individual files of a data package being built. When root designator  is highlighted by clicking on of the \u201cMy Package\u201d text in designator area , window  displays a graphical user interface enabling a user to designate either or both of global compression or global encryption of an entire data package. In the screen shot of global compression is set on using data entry field  and global encryption is set on using data entry field . When global encryption is set on, a user is prompted to set a password for an entire data package by the presentation of button . When button  is clicked on, a user can enter a password in a password entry data entry field (not shown). If the data package is subsequently encoded into an encoded dataform, e.g., by clicking on button  and the decodable dataform is subsequently decoded by data collection terminal , terminal  prompts on display  a user of data collection terminal  to enter into data collection terminal  the global password for processing of the entire data package. With reference to , a screen shot is displayed showing the GUI display screen displayed on display  of host computer  after global compression and global encryption are set to off using area  and area . When global compression and global encryption are set to off the global password button  is disabled. Also, with global compression off and encryption off the size of the current data package increases as seen by comparison of the package size designation indicator  (between the GUIs and and ) which can be incorporated as part of window .","It will be seen that a data package defined in area  as shown in the screen shot of with global compression and encryption ON can take the form of data package - shown in . In data package -, one file data set has one layer of encryption and one layer of compression, one file data set has two layers of encryption and one layer of compression, one file data set has one layer of encryption and two layers of compression, and the command line data set has one layer of encryption and one layer of compression. With global encryption and compression turned OFF, the data of a data package built by host computer  can be in the form of data package - as shown in . In data package - of , one file data set has no layers of encryption and no layers of compression, one file data set has an encryption layer but no compression layer, one file data set has a compression layer but no encryption layer and the command line data set has no encryption layer or compression layer.","With precise control over the data of a data package being made available, a variety of useful data packages can be defined. For example, it may be desirable to transfer to data collection terminal  a set of files, wherein all of the files except one of the files are low security files which can be accessed by any person, and wherein one of the files is a high security file which can be accessed only by an administrator. The present system can be used to make a data package, with minimal effort, which includes file data corresponding to several low security files, and file data corresponding to the one high security file. In building such a data package, a user would move encrypt designator  in such position as to designate encryption for the one high security file and would set a password access action indicator so that terminal  requests a password for only the one security file on de-packaging.","Package headers built by host computer  provide instructions as to the manner in which data collection terminal  is to process the data package. When processing a data package, the data collection terminal  examines flags and other action indicators that have been selected for inclusion in the data package by using host computer . For example, a package header data flag of a data package built by host computer  may indicate that data collection terminal  should be rebooted when processing of the data package. A flag of a package header built by host computer  may also indicate that data collection terminal  is to provide an output interface indicating the process of the processing of the data package. A summary of exemplary flags and other action indicators (e.g., password selection flags, IDs, etc,)that can be applied to data packages is provided in Table 1 with further description of the operation of the flags and indicators provided in the ensuing description. In the \u201cfunction\u201d column of Table 1 reference is made to , showing an exemplary GUI display screen which can be used to set flags and other action indicators for a data package.",{"@attributes":{"id":"p-0158","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"center"}},"thead":{"row":{"entry":"TABLE I"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Data package Flags and Indicators"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Flag\/Indicator","Function","Data Entry Field (FIG. 8n)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["ID","Allows a user to set an ID for the data package.","8802"]},{"entry":[{},"A user can type in e.g., function of the data",{}]},{"entry":[{},"package and the information will be saved on",{}]},{"entry":[{},"the data collection terminal.",{}]},{"entry":["After Reading -","Allows a user to select whether the data","8804"]},{"entry":["Reboot","collection terminal is to be rebooted. When the","(drop down menu accessed by"]},{"entry":[{},"reboot flag is raised, the data collection terminal","clicking on 8806)"]},{"entry":[{},"will automatically reboot after processing a data",{}]},{"entry":[{},"package. Certain files, after being transferred",{}]},{"entry":[{},"may require rebooting after being saved to the",{}]},{"entry":[{},"data collection terminal. Therefore, the \u201cAfter",{}]},{"entry":[{},"Reading\u201d reboot flag can be raised if",{}]},{"entry":[{},"transferring a file requiring terminal rebooting.",{}]},{"entry":["After Reading - Exit","A data collection terminal can be configured","8804"]},{"entry":[{},"such that a decode mode can be selected by","(drop down menu accessed by"]},{"entry":[{},"clicking on icon 2502 or display 32 (FIG. 1h).","clicking on 8806)"]},{"entry":[{},"When a decode mode is selected the terminal 10",{}]},{"entry":[{},"is configured so that a next time trigger 24 is",{}]},{"entry":[{},"activated terminal 10 activates encoded",{}]},{"entry":[{},"information reading device 12 to attempt to",{}]},{"entry":[{},"decode a decodable dataform (e.g., bar code,",{}]},{"entry":[{},"RFID tag, IC card). When the After Reading-",{}]},{"entry":[{},"Exit flag is raised the terminal exits the decode",{}]},{"entry":[{},"mode after processing a data package that has",{}]},{"entry":[{},"been rebuilt at the terminal 10 by decoding a",{}]},{"entry":[{},"decodable dataform.",{}]},{"entry":["After Reading -","When this flag is raised, a data collection","8804"]},{"entry":["Read Another","terminal having a selectable decode mode (FIG.","(drop down menu accessed by"]},{"entry":[{},"1h) will remain in a decode mode after","clicking on 8806)"]},{"entry":[{},"processing of a first data package rebuilt at the",{}]},{"entry":[{},"terminal by decoding a decodable dataform.",{}]},{"entry":["Description","Allows a user to encode in the data package a","8810"]},{"entry":[{},"descriptor for the data package such as the",{}]},{"entry":[{},"purpose of making the data package.",{}]},{"entry":["Global Compression","Allows a user to select whether global","8062"]},{"entry":[{},"compression is to be applied to the data package.",{}]},{"entry":["Global Encryption","Allows a user to select whether global","8064"]},{"entry":[{},"encryption is to be applied to the data package.",{}]},{"entry":["Must Decrypt All","Allows a user to designate whether all files must","8812"]},{"entry":[{},"be decrypted. If data entry field 8812 is left",{}]},{"entry":[{},"open to designate that flag is not raised,",{}]},{"entry":[{},"decryption of some but not all files rebuilt by",{}]},{"entry":[{},"data collection terminal 10 is allowed (applies",{}]},{"entry":[{},"when different passwords have been entered for",{}]},{"entry":[{},"encryption of file data corresponding to",{}]},{"entry":[{},"individual files selected for transfer). In other",{}]},{"entry":[{},"words, de-packaging of a data package is",{}]},{"entry":[{},"allowed to continue even where decryption of",{}]},{"entry":[{},"encrypted data correspond to a certain file fails.",{}]},{"entry":["Set Password","Allows a user to designate a password for the","8066"]},{"entry":[{},"data package. When the data package is",{}]},{"entry":[{},"received by a data collection terminal with the",{}]},{"entry":[{},"\u201cset password\u201d flag raised, the terminal will",{}]},{"entry":[{},"prompt a user to enter a password before",{}]},{"entry":[{},"completing processing of the data package (e.g.,",{}]},{"entry":[{},"before initiating encryption) if user has clicked",{}]},{"entry":[{},"on the set password button and has entered a",{}]},{"entry":[{},"password for the data package. If a password is",{}]},{"entry":[{},"entered into the host computer the host computer",{}]},{"entry":[{},"may use the entered password as an encryption",{}]},{"entry":[{},"key for encrypting data required to be encrypted.",{}]},{"entry":[{},"If the set password flag is not parsed, data",{}]},{"entry":[{},"collection terminal 10 on depackaging can de",{}]},{"entry":[{},"crypt a data package without prompting for",{}]},{"entry":[{},"entry of a password.",{}]},{"entry":["Hide","If this flag is raised, the terminal will not display","8814"]},{"entry":[{},"on display 32 any information regarding",{}]},{"entry":[{},"processing of the data package when receiving",{}]},{"entry":[{},"data of the data package."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Flags of headers that are built by host computer  in accordance with file data\/command header builder  of packaging module  are examined by data collection terminal  and indicate processing steps that are executed by data collection terminal  when processing of a data package. For example, if a data package includes file data corresponding to an executable file a flag of a file data header built by host computer  in accordance with header can indicate whether the executable file is to be executed when it has been received on data collection terminal . A flag built by host computer  may also indicate that a file is to be rejected by data collection terminal  if there is no pre existing corresponding file already residing in data collection terminal . A summary of flags and other action indicators that can be applied to data package in association with file data of a data package is provided in Table II with further description of the operation of the flags and indicators provided in the ensuing description. In Table II, reference is made to the GUI display screen of and . Host computer  can be configured so that a GUI display screen, such as the GUI display screen of and , is displayed on display  every time that a new file is selected for transfer to data collection terminal  as a data package is being defined. The presentation of the GUI display screen of allows the inclusion of file specific flags and indicators into a data package. The data collection terminal directory that can be designated in data entry field  of the GUI display screen of can be regarded as an action indicator to store a selected file in the designated directory when it is rebuilt.",{"@attributes":{"id":"p-0160","num":"0159"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"center"}},"thead":{"row":{"entry":"TABLE II"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"File Specific Flags and Indicators"},{"entry":"(In an illustrative embodiment, these flags and indicators can be set on a file specific"},{"entry":"basis within a data package, i.e., these flags can be set for one file selected for inclusion"},{"entry":"in data package but not for another file corresponding to file data within a package)."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Data Entry Field"]},{"entry":["Flags\/Indicator","Function","(FIGS. 8e, 8g"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Remote File","Data entry field allows a user to","8832"]},{"entry":[{},"designate the terminal file directory for",{}]},{"entry":[{},"the selected file.",{}]},{"entry":["Temporary","When this flag is raised the file","8836"]},{"entry":[{},"selected for transfer and rebuilt at the",{}]},{"entry":[{},"terminal will be deleted from a buffer",{}]},{"entry":[{},"memory location after it is buffered",{}]},{"entry":[{},"during de-packaging of a data package.",{}]},{"entry":["Overwrite Mode -","When this flag is raised the data","8840"]},{"entry":["Always","collection terminal always overwrites","(drop down menu accessed by"]},{"entry":[{},"an existing file of the data collection","clicking on 8042)"]},{"entry":[{},"terminal having the same name and",{}]},{"entry":[{},"directory as the file selected for",{}]},{"entry":[{},"transfer.",{}]},{"entry":["Overwrite Mode - Never","When this flag is raised the data","8840"]},{"entry":[{},"collection terminal never overwrites an","(drop down menu accessed by"]},{"entry":[{},"existing file of the data collection","clicking on 8042)"]},{"entry":[{},"terminal having the same name as the",{}]},{"entry":[{},"designated directory.",{}]},{"entry":["Overwrite Mode - Newer","When this flag is raised the data","8840"]},{"entry":[{},"collection terminal overwrites an","(drop down menu accessed by"]},{"entry":[{},"existing file having the same name and","clicking on 8042)"]},{"entry":[{},"designated directory as the file",{}]},{"entry":[{},"designated for transfer if the file",{}]},{"entry":[{},"designated for transfer is newer than",{}]},{"entry":[{},"the existing file of the data collection",{}]},{"entry":[{},"terminal. For such a determination",{}]},{"entry":[{},"data collection terminal 10 can",{}]},{"entry":[{},"examine \u201cmodified time and date\u201d",{}]},{"entry":[{},"fields, such as field 3053 (FIG. 3b) of",{}]},{"entry":[{},"the transferred file and the files",{}]},{"entry":[{},"presently stored at terminal 10.",{}]},{"entry":["Overwrite Mode - Prompt","When this flag is raised the data","8840"]},{"entry":[{},"collection terminal displays on display","(drop down menu accessed by"]},{"entry":[{},"32 a prompt on reading the flag","clicking on 8042)"]},{"entry":[{},"prompting a user to enter an action",{}]},{"entry":[{},"indicator into data collection terminal",{}]},{"entry":[{},"indicating whether the file being rebuilt",{}]},{"entry":[{},"at the data collection terminal is",{}]},{"entry":[{},"overwriting a file of the data collection",{}]},{"entry":[{},"terminal.",{}]},{"entry":["Read Only","When this flag is raised, the file","8850"]},{"entry":[{},"selected for transfer is designated or",{}]},{"entry":[{},"read only when built at the data",{}]},{"entry":[{},"collection terminal.",{}]},{"entry":["Execute","When this flag is raised, data collection","8838"]},{"entry":[{},"terminal 10 automatically attempts to",{}]},{"entry":[{},"execute the file selected for transfer",{}]},{"entry":[{},"when processing a data package. For",{}]},{"entry":[{},"example, if the selected file is an",{}]},{"entry":[{},"executable file, data collection terminal",{}]},{"entry":[{},"10 executes the file when rebuilt at the",{}]},{"entry":[{},"data collection terminal 10. If the",{}]},{"entry":[{},"selected file is an image file, data",{}]},{"entry":[{},"collection terminal 10 automatically",{}]},{"entry":[{},"opens a suitable viewer and attempts to",{}]},{"entry":[{},"open the file. If this flag is not raised,",{}]},{"entry":[{},"data collection terminal 10 makes no",{}]},{"entry":[{},"attempt to execute the file when it is",{}]},{"entry":[{},"rebuilt on data collection terminal 10.",{}]},{"entry":["System","When this flag is raised the file","8852"]},{"entry":[{},"selected for transfer is designated as a",{}]},{"entry":[{},"system file when rebuilt at the data",{}]},{"entry":[{},"collection terminal and saved into the",{}]},{"entry":[{},"directory designated in data entry field",{}]},{"entry":[{},"8832.",{}]},{"entry":["Hidden","When this flag is raised the file","8856"]},{"entry":[{},"selected for transfer is designated as a",{}]},{"entry":[{},"hidden file when rebuilt at the data",{}]},{"entry":[{},"collection terminal and saved into the",{}]},{"entry":[{},"directory designated in field 8832.",{}]},{"entry":["Archive","When this flag is raised the file","8858"]},{"entry":[{},"selected for transfer is designated as an",{}]},{"entry":[{},"archived file when rebuilt at the data",{}]},{"entry":[{},"collection terminal and saved into the",{}]},{"entry":[{},"directory designated field 8832.",{}]},{"entry":["Simplify XML","When this flag is raised the file","8868"]},{"entry":[{},"selected for transfer is a XML",{}]},{"entry":[{},"configuration file, unnecessary data of",{}]},{"entry":[{},"an XML document file is removed",{}]},{"entry":[{},"from the file before being included into",{}]},{"entry":[{},"the data package. Description text",{}]},{"entry":[{},"(defined with use of \u201cdesc=\u201d attributes",{}]},{"entry":[{},"in the examples) can be removed along",{}]},{"entry":[{},"with disabled elements. The GUI",{}]},{"entry":[{},"display screen of FIG. 7e can be",{}]},{"entry":[{},"configured to allow a user to \u201cdisable\u201d",{}]},{"entry":[{},"elements of an EXM XML file being",{}]},{"entry":[{},"edited by allowing a user to change",{}]},{"entry":[{},"flag status of \u201cflags=\u201d attributes of the",{}]},{"entry":[{},"XML file. Using the GUI of FIG. 7e a",{}]},{"entry":[{},"user can right click over a name or",{}]},{"entry":[{},"parameter setting displayed to change",{}]},{"entry":[{},"the \u201cflags\u201d status of the element",{}]},{"entry":[{},"associated with the displayed name or",{}]},{"entry":[{},"value. After an element has been",{}]},{"entry":[{},"disabled, a parameter setting of the",{}]},{"entry":[{},"element cannot be modified unless the",{}]},{"entry":[{},"element is again enabled.",{}]},{"entry":["Compress","When this flag is raised, compression is","8864"]},{"entry":[{},"applied to file data for the specific file",{}]},{"entry":[{},"selected for transfer, but not to other",{}]},{"entry":[{},"file data of the data package unless",{}]},{"entry":[{},"compression is also selected for the",{}]},{"entry":[{},"other file. When processing the data",{}]},{"entry":[{},"package, the data collection terminal",{}]},{"entry":[{},"examines compression selection data",{}]},{"entry":[{},"and decompresses all compressed files.",{}]},{"entry":[{},"Compression and encryption selection",{}]},{"entry":[{},"data can also be designated using a tree",{}]},{"entry":[{},"diagram with drag and drop",{}]},{"entry":[{},"functionality.",{}]},{"entry":["Encryption","When this flag is raised, encryption is","8866"]},{"entry":[{},"applied to file data of the file selected",{}]},{"entry":[{},"for transfer but not to other file data",{}]},{"entry":[{},"unless specifically selected. The data",{}]},{"entry":[{},"collection terminal examines",{}]},{"entry":[{},"encryption selected data of data",{}]},{"entry":[{},"package and decrypts all file data",{}]},{"entry":[{},"selected for encryption. Encryption",{}]},{"entry":[{},"selected data can also be designated",{}]},{"entry":[{},"using a tree diagram with drag and",{}]},{"entry":[{},"drop functionality. If data entry field",{}]},{"entry":[{},"8866 is checked host computer 100",{}]},{"entry":[{},"may prompt a user to enter a password",{}]},{"entry":[{},"into a data entry field of display 132.",{}]},{"entry":["Encryption Password","When a file specific password is","An encryption password data"]},{"entry":[{},"entered, the data collection terminal","entry field may take the form of"]},{"entry":[{},"will prompt a user to enter the file","field 8042 (FIG. 8K)."]},{"entry":[{},"specific password prior to de-",{}]},{"entry":[{},"encrypting (decrypting) the file on the",{}]},{"entry":[{},"terminal. When password is entered",{}]},{"entry":[{},"into host computer 100, host computer",{}]},{"entry":[{},"100 may use the password as a key for",{}]},{"entry":[{},"encrypting the data required to be",{}]},{"entry":[{},"encrypted. In processing a data",{}]},{"entry":[{},"package, a terminal may prompt a user",{}]},{"entry":[{},"to enter a plurality of different",{}]},{"entry":[{},"passwords (e.g., package password and",{}]},{"entry":[{},"several file specific passwords)."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"A summary of flags and other action indicators that can be applied to data package in association with command data of a data package is provided in Table III with further description of the operation of the flags and indicators provided in the ensuing description.",{"@attributes":{"id":"p-0162","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE III"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Flags and Indicators For Commands"},{"entry":"(e.g., Command Lines and Script)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Flag\/",{},"Data entry"]},{"entry":["Indicator","Function","Field (FIG. 8h)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Wait","When this flag is raised, the data collection","8880"]},{"entry":[{},"terminal when processing the data package",{}]},{"entry":[{},"suspends processing of the remainder of the",{}]},{"entry":[{},"data of the data package until the command",{}]},{"entry":[{},"(e.g., command line or script) has been",{}]},{"entry":[{},"executed.",{}]},{"entry":["Hide","When this flag is raised, the terminal does","8882"]},{"entry":[{},"not display on its display 132 information",{}]},{"entry":[{},"indicating that it is executing the encoded",{}]},{"entry":[{},"command."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"As is indicated by the screen shot views of (in window ), (in widow ), and (in window ), host computer  can be configured to display GUI encoding control buttons in addition to bar codes button . As is indicated by the referenced views, host computer  can be configured to display an RFID encoding control button , a card encoding control button , and a USB stub encoding control button . Host computer  can be configured so that when RFID encoding control button  is clicked on, host computer  generates a command to encode data of a data package into an RFID tag. Host computer  can further be configured so that when card encoding control button  is clicked on, host computer  generates a command to encode data of a data package into an IC card (Smart Card). Host computer  can further be configured so that when USB stub encoding control button  is clicked on, host computer  generates a command to encode data of a data package into a USB stub (not shown) which my be docked to host computer  at a physical port of I\/O interface . For encoding of an RFID tag , tag  can be brought into close proximity with RFID reader unit  of data collection terminal . Host computer  with RFID tag  situated in close proximity with data collection terminal  can send the generated RFID encoding command to data collection terminal  over one of the network connections described in connection with -. Alternatively, host computer  can have a dedicated RFID tag encoder (not shown) which is adapted for electrical contact connection with RFID tag . For encoding of RFID tag , host computer  can send the generated RFID tag encoding command to the dedicated RFID encoder. The dedicated RFID encoder can be disposed in an interior of host computer housing , or externally of housing . For encoding of IC card , IC card  can be physically inserted into card reader  of data collection terminal  so that IC card  is in electrical contact with contacts  of card reader device . With IC card  inserted into card reader , host computer host computer  can send the generated IC card encoding command to data collection terminal  over one of the network connections described in connection with -. Alternatively, host computer  can have a dedicated card reader device (not shown) and can send a generated card encoding command to the dedicated card reader. The dedicated card reader device can be disposed externally or internally relative to housing  of host computer . For encoding of a USB stub (not shown), host computer  can write a data package to a USB stub docked to host computer  when host computer generates a command to encode a USB stub in response to USB stub encoding control button  being actuated.","With reference to the screen shots of and additional methods by which a data package built by host computer  can be sent to an external computer, including data collection terminal  are described. Host computer  can be configured so that when a data package is built, clicking on file button  causes window  to be displayed as shown in . The \u201cSave As\u201d button  can then be clicked on to cause display of \u201cSave As\u201d window  as shown in . With \u201cSave As\u201d window  displayed as shown in , a user can click on button  numerous times until a menu of available drives is shown as is indicated in the screen shot view of . In the screen shot view of where host computer  building a data package is computer - of , T drive (\u201cT:\u201d) can indicate remotely located server - and U: drive (\u201cU:\u201d) can indicate local spaced apart external server - and V drive (\u201cV:\u201d) can indicate data collection terminal , -. When one of the drives is selected by clicking on, available directories in the drive are displayed by window , and a selection of an appropriate directory can be made. Pressing save button  saves the built data package to the designated folder in the designated computer. When save button  is clicked on, host computer  may initiate a File Transfer Protocol (\u201cFTP\u201d) session or another type of communication session such as a non-IP based communication protocol session to transfer the built data package to the designated computer or terminal in a designated file directory.","Referring again to the screen shot display of , host computer  can be configured so that host computer  includes data package transfer button . Host computer  can be configured so that when button  is clicked on, package transfer graphical user interface window  is displayed on display . In data entry field  a user can designate whether a built data package is to be transferred using the File Transfer Protocol (\u201cFTP\u201d). In data entry field  a user can designate whether a built data package is to be transferred using ACTIVESYNC, a software module from MICROSOFT, Inc. installable between two point-to-point connected computers for achieving synchronization between the computers. In areas , , and  a user can designate computers and directories into which to store the built data package. For example, a user can designate T:\\packages\\NewProject.ezp in area  for storing the data package into remotely located computer -. A user can designate U:\\packages\\NewProject.ezp in area  for storing the data package into an external locally located computer - and can designate V:\\packages\\NewProject.ezp in area  for storing the data package into data collection terminal , - and w:\\packages\\Newproject.ezp into another field that is like fields , , , accessed by pressing \u201cMore\u201d button  to designate another data collection terminal , -. Destination indicating information other than directory information can be entered into areas , , . For example, IP addresses can be entered into areas , ,  to designate different computers. Telephone numbers that are mapped to IP addresses can also be entered into areas , ,  as well as website addresses that are mapped to IP addresses. When OK button  is clicked on, host computer  sends the built data package to all of the designated computers including all selected data collection terminals  designated in areas , , . Host computer  can send the data package to all of the designated receiving computers simultaneously or sequentially one after the other. Host computer  can be configured so that when more button  is clicked on, additional data entry field identical to areas , ,  are displayed on display  enabling a user to designate additional computers for receipt of the built data package.","Referring again to the screen shot display of , host computer  can be configured so that built XML configuration files can be sent to a designated computer such as computer -, computer -, and computer - () by opening window  and clicking on either \u201cSave As\u201d  button or \u201cSave to computer As\u201d button . When \u201cSave As\u201d button  is clicked on, computers for receiving the built XML data package can be designated in the manner described in connection with and . Host computer  can be configured so that if \u201cSave to Computer As\u201d button  is clicked on; host computer  saves the built XML file to data collection terminal  using ACTIVESYNC communication.","Further aspects of system  are described with reference to Appendices A, B, and C herein. In the appendices A, B, and C, file data sets and command data sets as described herein are referred to generically as \u201cobjects\u201d. Also referred as \u201cobjects\u201d in the appendices is (i) the combination of a set of fields making up an incidence of encryption selection data, and associated encrypted data and (ii) the combination of a set of fields making up an incidence compression selection data, and associated compressed data.","A small sample of methods and apparatuses that have been described herein above are as follows:","(A1) A data collection system comprising: a hand held portable data collection terminal having a bar code reader device for decoding bar code symbols, a manual trigger for actuation of bar code decoding, and a radio transceiver; and a computer spaced apart from said hand held portable data collection terminal, said computer having a display, said hand held portable data collection terminal and said computer being configured as part of an IP network including both of said hand held portable data collection terminal and said computer; said computer being configured to display a graphical user interface prompting an operator of said data collection system to enter configuration data for reconfiguring said radio transceiver, said computer further being configured to process configuration data entered by said operator at said computer to build an extensible markup language document including said entered data; wherein said data collection system is configured so that said extensible markup language document can be transferred from said computer to said hand held portable data collection terminal either by way of (i) encoding data of said extensible markup language and then decoding said encoded data utilizing said bar code reader device of said portable data collection device or (ii) transmitting data of said extensible markup language document from said computer to said portable data collection terminal utilizing a data communication protocol supported by said IP network. There is also described (A2) The data collection system of claim A1, wherein said computer is further configured to build a data package including said extensible markup language document and file data corresponding to a file other than extensible markup language document. There is also described (A3) The data collection system of claim A1, wherein said computer and said portable data collection terminal are included in a common local area network.","There is also described (B1) A data collection system comprising: a hand held portable data collection terminal having a bar code reader device for decoding bar code symbols, a manual trigger for actuation of bar code decoding, and a radio transceiver; a computer spaced apart from said hand held portable data collection terminal, said computer having a display, said hand held portable data collection terminal and said computer being configured as part of an IP network including both of said hand held portable data collection terminal and said computer; said computer being configured to display a graphical user interface prompting an operator of said data collection system to select data for inclusion in a data package, said computer building a data package in accordance with at least one selection of said operator; wherein said data collection system is configured so that said data package built by said computer can be transferred from said computer to said hand held portable data collection terminal by either of (i) encoding data of said data package and then decoding said encoded data utilizing said bar code reader device of said portable data collection terminal or (ii) transmitting said data package from said computer to said portable data collection terminal utilizing a data communication protocol supported by said IP network. There is also described (B2) The data collection system of claim B1, wherein said data communication protocol is the File Transfer Protocol (FTP). There is also described (B3) The data collection system of claim B1, wherein said first file is an executable file and said second file is an .XML file.","There is also described (C1) A data collection system comprising: a data collection terminal having an encoded information reader device, the data collection terminal responsive to configuration data expressed in an extensible markup language for configuring operation of the data collection terminal; and a computer spaced apart from the data collection terminal that uses an existing extensible markup language document to create a data entry screen to receive desired parameter settings for the data collection terminal within data entry fields, combines the extensible markup language document with the desired parameter settings to create configuration data expressed in an extensible markup language, and initiates a transfer of the configuration data to said data collection terminal. There is also described (C2) The data collection system of claim C1, wherein the transfer is initiated by encoding the configuration data within a printed symbology readable by the data collection terminal. There is also described (C3) The data collection system of claim C1, wherein the transfer is initiated by transmitting the configuration data to said data collection terminal using one of TCP\/IP, USB, or IRDA. There is also described (C4) The data collection system of claim C1, wherein the transfer is initiated by generating a data package including said configuration data and file data corresponding to a file other than a configuration file. There is also described (C5) The data collection system of claim C1, wherein the existing extensible markup language document file is retrieved by the computer from the data collection terminal. There is also described (C6) The data collection system of claim C1, wherein the data collection terminal configures the encoded information reader device based on the configuration data. There is also described (C7) The data collection system of claim C1, wherein the data collection terminal further comprises a wireless communication link and wherein the wireless communication link is configured based on the configuration data. There is also described (C8) The data collection system of claim C1, wherein the extensible markup language document comprises parameter settings and descriptions of the parameter settings. There is also described (C9) The data collection system of claim C8, wherein the description of the parameter settings include validation rules. There is also described (C10) The data collection system of claim C1, wherein the extensible markup language document comprises parameter settings and attributes of the parameter settings, wherein the attributes indicate an ability of a user to modify a parameter setting. There is also described (C11) The data collection system of claim C1, wherein the computer initiates the transfer of the configuration data by removing extraneous data from the extensible markup language document. There is also described (C12) The data collection system of claim C11, wherein the extraneous data comprises data which is not required by the data collection terminal to implement parameter settings contained in the configuration data. There is also described (C13) The data collection system of claim C12, wherein the extraneous data comprises data regarding parameter settings contained in the configuration data that will not change existing parameter settings on the data collection terminal. There is also described (C14) The data collection system of claim C1, wherein the computer initiates the transfer of the configuration data structure by embedding the configuration data into a data package including file data corresponding to a plurality of different file types. There is also described (C15) The data collection system of claim C1, wherein the desired parameter settings include parameter settings for configuring an application on the data collection terminal. There is also described (C16) The data collection system of claim C1, wherein the desired parameter settings include parameter settings for configuring a user interface on the data collection terminal. There is also described (C17) The data collection system of claim C1, wherein the desired parameter settings include settings for configuring a power usage profile on the data collection terminal. There is also described (C18) The data collection system of claim C1, wherein the desired parameter settings include parameter settings for configuring a communication device on the data collection terminal. There is also described (C19) The data collection system of claim C18, wherein the communication device is one or more of a wireless networking device, an 802.11 device, a USB interface, a BLUETOOTH interface, and a cellular communication interface. There is also described (C20) The data collection system of claim C1, wherein the desired parameter settings include parameter settings for configuring a peripheral detachably attached to the data collection terminal. There is also described (C21) The data collection system of claim C1, wherein the computer initiates the transfer of the configuration data by outputting one or more bar codes representative of the configuration data. There is also described (C22) The data collection system of claim C21, wherein the computer outputs the one or more barcodes onto a display associated with the computer. There is also described (C23) The data collection system of claim C21, wherein the computer outputs the one or more barcodes onto a printer associated with the computer. There is also described (C24) The data collection system of claim C1, wherein the computer in combining the extensible markup language document with the desired parameter settings integrates the extensible markup language document with any desired parameter settings by updating items within the extensible markup language document based on user input received via the data entry screen and removing items for which no desired parameter settings are received or for which no change is indicated. There is also described (C25) The data collection system of claim C24, wherein the data collection terminal comprises an application that receives the configuration data and facilitates modifying the behavior of the data collection terminal based on the parameter settings contained in the configuration data. There is also described (C26) The data collection system of claim C25, wherein the application overrides existing parameter settings not included in the configuration data. There is also described (C27) The data collection system of claim C25, wherein the application only updates parameter settings included in the configuration data. There is also described (C28) The data collection system of claim C1, wherein the data collection terminal comprises an application that receives the configuration data and facilitates modifying the behavior of the data collection terminal based on the parameter settings contained in the configuration data. There is also described (C29) The data collection system of claim C28, wherein the application replaces a pre-existing configuration data structure on the data collection terminal with a received data structure including the configuration data. There is also described (C30) The data collection system of claim C28, wherein the application updates parameter settings in a pre-existing configuration file on the data collection terminal based on the received configuration data. There is also described (C31) The data collection system of claim C28, wherein the application uses the configuration data to either replace or update a pre-existing configuration file on the data collection terminal based on a flag in a data structure including the configuration data. There is also described (C32) The data collection system of claim C1, wherein said computer in combining said extensible markup language document with said desired parameter settings replaces existing parameter settings of said extensible markup language document with new parameter settings input by a user of said system. There is also described (C33) The data collecting system of claim C1, wherein said encoded information reader device is selected from the group consisting of a bar code reader device, an RFID reader device, and a card reader device.","There is also described (D1) A data collection system comprising: a data collection terminal having an encoded information reader device, the data collection terminal having an extensible markup language document from which the data collection terminal is configured; a computer that uses a copy of the extensible markup language document to create a data entry screen to receive desired settings in data entry fields for configuring the data collection terminal, combines the extensible markup language document with the desired settings to create configuration data, and initiates a transfer of the configuration data to a data collection terminal spaced apart from said computer; and a configuration application on the data collection terminal that receives the configuration data and updates or replaces the extensible markup language document with data contained in the configuration data structure.","There is also described (E1) A data collection system comprising: a data collection terminal having a encoded information reader device; and a computer spaced apart from said data collection terminal that receives from a user identification of first and second files for transfer to said data collection terminal, prompts a user to enter at least one action indicator for each file identified by a user, creates a single data package incorporating file data corresponding to the identified first and second files and at least one action indicator, and enables a transfer of the single data package to said data collection terminal. There is also described (E2) The data collection system of claim E1, wherein at least one identified file is an executable file. There is also described (E3) The data collection system of claim E1, wherein at least one file is a configuration file containing data used to configure the data collection terminal. There is also described (E4) The data collection system of claim E1, wherein the transfer is enabled by encoding the single data package in a symbology readable by the data collection terminal. There is also described (E5) The data collection system of claim E4, wherein the printed symbology comprises a plurality of bar codes. There is also described (E6) The data collection system of claim E1, wherein the transfer is enabled by transmitting the single data structure to said data collection terminal using a communication path operating in accordance with one of TCP\/IP, USB, or IrDA. There is also described (E7) The data collection system of claim E1, wherein the single data package for transfer to said data collection terminal includes file data corresponding to said first and second files, and at least one of command data, compression selection data, and encryption selection data. There is also described (E8) The data collection system of claim E1, wherein the data package comprises at least two of command data, file data corresponding to a configuration file, encryption selection data and compression selection data. There is also described (E9) The data collection system of claim E1, wherein the indication of an action associated with at least one of the files is added as header data of a file data set corresponding to the file. There is also described (E10) The data collection system of claim E1, wherein said data collection terminal is configured to automatically process received file data of said single data package in a manner dependent on a file type corresponding to said file data. There is also described (E11) The data collection system of claim E1, wherein said at least one action indicator of said single data package comprises a wait and a hide action. There is also described (E12) The data collection system of claim E1, wherein said at least one action indicator of said single data package comprises at least one of indications of execute, wait, temporary, must exist, overwrite mode, and attributes. There is also described (E13) The data collection system of claim E1, wherein said at least one action indicator of said single data package comprises at least two action indicators. There is also described (E14) The data collection system of claim E1, wherein the at least one action indicator includes an indication that the data collection terminal should be rebooted. There is also described (E15) The data collection system of claim E1, wherein the at least one action indicator includes an indication that the data collection terminal should be await a further transfer of data structures. There is also described (E16) The data collection system of claim E1, wherein the at least one action indicator includes an indication that the data collection terminal should only process the single data structure if certain data of said single data package is successfully decrypted. There is also described (E17) The data collection system of claim E1, wherein the at least one action indicator includes an indication that the data collection terminal should display a progress dialog window indicating progress of processing the single data package. There is also described (E18) The data collection system of claim E1, wherein computer is configured to display a tree diagram displaying indicators of said first and second files, and wherein said computer is further configured to display at least one of a compression selection designator and encryption selection designator in said tree diagram, and wherein said computer is configured to compress and\/or encrypt file data of said single data package in accordance with the position of said compression and\/or encryption selection data indicated represented in said tree diagram. There is also described (E19) The data collection system of claim E18, wherein said computer has drag and drop functionality enabling a user to select whether file data of said indicated files are to be compressed by maneuvering said compression designator within said tree diagram. There is also described (E20) The data collection system of claim E18, wherein said computer has drag and drop functionality enabling a user to select whether file data of said indicated files are to be encrypted by maneuvering said encryption designator within said tree diagram. There is also described (E21) The data collection system of claim E1, wherein file data corresponding to said first file is compressed and file data corresponding to said second file is not compressed. There is also described (E22) The data collection system of claim E1, wherein file data corresponding to said first file is encrypted and file data corresponding to said second file is not encrypted. There is also described (E23) The data collection system of claim E18, wherein the single data package is further provided with an indication that the data collection terminal should only process the single data package if certain data of said single data package is successfully decrypted. There is also described (E24) The data collection system of claim E18, wherein the computer further adds a user defined data set to said data package.","There is also described (F1) A system comprising: (a) a data collection terminal having an encoded information reader device, a control circuit, a radio transceiver, and a memory, the memory storing an Extensible Markup Language configuration file, the configuration file having a hierarchical tree structure, the configuration file having a device element including name content designating a device of said data collection terminal and a plurality of parameter elements of lower hierarchy than said device element, each of said parameter elements including parameter value content designating a parameter value controlling operation of said device; and (b) a host computer spaced apart from said data collection terminal, wherein said host computer is operable in a mode in which said host computer reads said configuration file from said data collection terminal, parses said configuration file and displays said name content designating a device of said terminal in a graphical user interface window, the host computer enabling a user to change parameter values of said configuration file, the host computer building an edited configuration file including parameter values changed by a user, the host computer being configured so that said host computer can display parameter values associated with said device that can be changed by a user. There is also described (F2) The system of claim F1, wherein said device is selected from the group consisting of a radio transceiver and an encoded information reader device. There is also described (F3) The system of claim F1, wherein said host computer is configured to be commanded to encode on a physically transportable medium a decodable dataform, the decodable dataform encoding said edited configuration file and being readable by said encoded information reader device. There is also described (F4) The system of claim F1, wherein said host computer is configured to be commanded to encode on a physically transportable substrate a decodable bar code symbol, the decodable dataform encoding said edited configuration file. There is also described (F5) The system of claim F1, wherein said host computer is configured to be commanded to encode on a physically transportable medium a decodable dataform, the decodable dataform encoding said edited configuration file, the host computer having an information entry area enabling a user to designate whether content should be removed from said edited configuration file prior to being encoded.","There is also described (G1) A system for reconfiguring a data collection terminal having an encoded information reader device and a radio transceiver, said system comprising: (a) a host computer having a display and a pointer controller for controlling movement of a graphical user interface pointer on said display; (b) an extensible markup language configuration file accessible by said host computer for reconfiguring said radio transceiver, said configuration file having a radio transceiver element including name content designating said radio transceiver and a plurality of parameter elements of lower hierarchy than said radio transceiver element, each said parameter elements including parameter value content designating parameter values controlling operation of said radio transceiver, said configuration file further containing descriptive content for each of several of said parameter elements, the descriptive content including text describing the affect of changing a parameter; (c) wherein said host computer is configured to parse said configuration file and to display on said display said parameter values and said descriptive content, the host computer being configured to enable a user of said system to change a displayed parameter value displayed on said first graphical user interface window and to build an edited configuration file including a parameter value that has been changed by a user. There is also described (G2) The system of claim G1, wherein said host computer is configured to be commanded to encode in a transportable medium a decodable dataform that encodes said edited configuration file. There is also described (G3) The system of claim G1, wherein said host computer is configured to display on said display said parameter values on a first graphical user interface window separate from a second graphical user interface window display. There is also described (G4) The system of claim G3, wherein said first and second graphical user interface windows are sub-windows of a larger window.","There is also described (H1) A system comprising: (a) a data collection terminal having an encoded information reader device, a control circuit, a radio transceiver, and a memory, the memory storing an extensible markup language configuration file, the configuration file having a hierarchical tree structure, the configuration file having a radio transceiver element including name content designating said radio transceiver and a plurality of parameter elements of lower hierarchy than said radio transceiver element, each said parameter elements including parameter value content designating parameter values of said radio transceiver; and (b) a host computer spaced apart from said data collection terminal, wherein said host computer is operable in a mode in which said host computer reads said configuration file from said data collection terminal, parses said configuration file and displays said name content designating said radio transceiver and said parameter values, the host computer enabling a user to change parameter values of said configuration file, the host computer building an edited configuration file including parameter values changed by a user. There is also described (H2) The system of claim H1, wherein said host computer is configured to be commanded to encode on a physically transportable medium a decodable dataform, the decodable dataform encoding said edited configuration file and being readable by said encoded information reader device. There is also described (H3) The system of claim HI, wherein said host computer is configured to be commanded to encode on a physically transportable substrate a decodable bar code symbol, the decodable dataform encoding said edited configuration file. There is also described (H4) The system of claim H1, wherein said host computer is configured to be commanded to encode on a physically transportable medium a decodable dataform, the decodable dataform encoding said edited configuration file, the host computer having an information entry area enabling a user to designate whether content should be removed from said edited configuration file prior to being encoded.","There is also described (I1) A system comprising: (a) a host computer for use in building a data package, the host computer having a display, the host computer being configured to display a graphical user interface enabling a user to select first and second files for packaging and being configured to package into a single data package file data corresponding to a plurality of files, wherein said graphical user interface enables a user to instruct said host computer to compress file data of said first file without compressing file data of said second file, and wherein said host computer in response to receiving a user request to compress file data of said first file without compressing file data of said second file, builds a data package including file data corresponding to said first file in compressed form and file data corresponding to said second file in uncompressed form, the host computer also having a bar code button and being configured so that when said bar code button is actuated, said host computer encodes said data package into one or more decodable bar code symbols; and (b) a hand held data collection terminal having a bar code reader device, said hand held data collection terminal being configured to decode said at least one bar code symbol encoded by said host computer to recover said data package, said hand held data collection terminal further being configured to process said data package recovered when said one or more bar code symbols are decoded.","There is also described (J1) A system comprising: (a) a host computer for use in building a data package, the host computer having a display, the host computer being configured to display a graphical user interface enabling a user to select first and second files for packaging and being configured to package into a single data package file data corresponding to a plurality of files, wherein said graphical user interface enables a user to instruct said host computer to encrypt said first file without encrypting said second file, and wherein said host computer in response to receiving a user instruction to encrypt said first file without encrypting said second file, builds a data package including file data of said first file in encrypted form and file data of said second file in unencrypted form, the host computer also having a bar code button and being configured so that when said bar code button is actuated, said host computer encodes said data package into one or more decodable bar code symbols; (b) a hand held data collection terminal having a bar code reader device, said hand held data collection terminal being configured to decode said at least one bar code symbol encoded by said host computer to recover said data package, said hand held data collection terminal further being configured to process said data package recovered when said one or more bar code symbols are decoded. There is also described (J2) The system of claim J1, wherein said hand held data collection terminal is configured so that when processing data indicating that said first file is encrypted prompts a user to enter password data into said data collection terminal, and is further configured so that when data collection terminal processes data indicating that said second file is unencrypted avoids prompting a user to enter password information into said data collection terminal. There is also described (J3) The system of claim J1, wherein said encrypted first file is packaged in said package in an order after said unencrypted second file.","While the present invention has been described with reference to a number of specific embodiments, it will be understood that the true spirit and scope of the invention should be determined only with respect to claims that can be supported by the present specification. Further, while in numerous cases herein wherein systems and apparatuses and methods are described as having a certain number of elements it will be understood that such systems, apparatuses and methods can be practiced with fewer than the mentioned certain number of elements."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1","FIG. 1"],"i":["b ","a. "]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1","FIG. 1"],"i":["c ","a; "]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","i":"d "},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","i":"e "},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","i":"f "},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","i":"g "},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 1","FIG. 1"],"i":["h ","b "]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 1","FIG. 1"],"i":["i ","h; "]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIGS. 1","FIG. 1"],"i":["j ","h ","i ","b; "],"b":"1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1","FIG. 1"],"i":["k ","j; "]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 1","FIGS. 1"],"i":["l ","j ","k; "],"b":"1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","i":"a "},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","i":"b "},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","i":"c "},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","i":"d "},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","i":"a "},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3","i":"b "},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIGS. 3","i":["c","g "],"b":"3"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3","i":"h "},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIGS. 4","i":["a ","b "],"b":"4"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIGS. 7","i":["a","l ","a","q "],"b":["7","8","8"]}]},"DETDESC":[{},{}]}
