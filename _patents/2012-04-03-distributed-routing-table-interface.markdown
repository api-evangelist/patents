---
title: Distributed routing table interface
abstract: Application programming interface (API) for starting and accessing distributed routing table (DRT) functionality. The API facilitates bootstrapping into the DRT by one or more devices of a group of devices (a mesh) seeking to collaborate over a serverless connection, establishing a node of the DRT, where each node is an instance of an application that is participating in the mesh, and node participation by allowing the application to search for keys published by other nodes in the mesh, or by becoming part of the mesh by publishing a key. The API facilitates optimization of the routing table for quickly finding a root of a specific key in the mesh by finding the key directly in a cache or by asking a root node of the key that is in the local routing table that is closest numerically to the key being searched.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08977686&OS=08977686&RS=08977686
owner: Microsoft Corporation
number: 08977686
owner_city: Redmond
owner_country: US
publication_date: 20120403
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a Divisional application of pending U.S. patent application Ser. No. 11\/716,896 entitled \u201cDISTRIBUTED ROUTING TABLE INTERFACE\u201d and filed Mar. 12, 2007, the entirety of which is incorporated by reference herein.","Technological advances in computing devices and networking facilitate access to a wide variety of information and services allowing access from virtually anywhere in the world. Collaboration can be an effective means by which employees of a corporate enterprise, for example, or people, in general, can communicate to exchange data and information on certain topics of interest. However, given the location and connection capabilities at any point in time, participants may want to join independent of the need to rely on server or network systems.","With the advances in storage and computing power of computing systems, users now are capable of interacting with many different data types such as images, video clips, audio data, and textual data, for example. Moreover, the users can typically communicate using several types of devices with which to connect to a session. For example, one user can participate by audio\/video from a conference room, another by voice via a desktop computer, and yet another by text input using a cell phone.","Collaboration, while using such disparate media capabilities, has traditionally been addressed at the server level by consolidating media processing capabilities locally. However, this is problematic in that more resources are required to administer such systems and these systems are more difficult to scale to meet conferencing demands. Advances in operating system behavior and capabilities, for example, now obviate the need to collaborate through servers thereby requiring new and more efficient APIs for accessing these capabilities for resolving device location, providing security, and the like, in a serverless communications environment.","The following presents a simplified summary in order to provide a basic understanding of novel embodiments described herein. This summary is not an extensive overview, and it is not intended to identify key\/critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.","The disclosed architecture includes an application programming interface (API) for starting and accessing distributed routing table (DRT) functionality in a serverless environment. The API facilitates bootstrapping into the DRT by one or more devices of a group of devices (a mesh) seeking to collaborate over a serverless connection. The API further provides for establishing a node of the DRT, where each node is an instance of an application that is participating in the collaborative mesh.","The DRT forms an overlay mesh on top of underlying transport (e.g., an IPv4 or IPv6 Network). The API facilitates node participation by allowing the application to search for keys published by other nodes in the mesh, or by becoming part of the mesh by publishing a key. When publishing a key, the node maintains a local routing table of other nodes in the mesh, with the selection of which nodes to include in the table being based on the key the node is locally publishing.","The API facilitates optimization of the routing table for quickly finding a root of a specific key in the mesh by finding the key directly in a cache or by asking a root node of the key that is in the local routing table that is closest numerically to the key being searched; the neighbor device in turn looks in its own local routing table and returns either the addresses of the required node or the addresses of the node publishing the key numerically closest in the local routing table.","The DRT API includes enumerations related to scope, security mode, status, match type, leaf set key change, and event type. API structures are related to a security provider, bootstrap provider, imposed settings on a local instance, registration, search information and results and event data.","To the accomplishment of the foregoing and related ends, certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative, however, of but a few of the various ways in which the principles disclosed herein can be employed and is intended to include all such aspects and their equivalents. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.","Disclosed herein is a distributed routing table (DRT) application programming interface (API) for accessing the capabilities of the DRT. The DRT API is described in terms of behavior, which includes life cycle and state transitions, key registering and unregistering, and searching. The API enumerations, structures and functions are also described in detail.","The DRT is a serverless means whereby a collection of devices can collaborate. The DRT is a set of nodes that collaborate to construct an overlay routing table (which is stored in a distributed fashion) that can be used to determine a route from one node to another node (e.g., using a numeric ID to identify the destination node). Routes can be identified as a set of hops involving participating nodes. The DRT comprises local instances which reside on separate devices, but which are used by one device to find another device. In other words, each device uses a portion of the DRT for finding other devices.","The DRT is designed around a highly-componentized model. The heart of the system is a node component, which contains the protocol handlers and the core APIs. The node component references pluggable modules for separable subsystems that include routing table management, transport, bootstrap, security, and logging. Each module can be instantiated by an application (e.g., word processing), and a reference is passed to the node component.","Note that modules may be reused between multiple logical node instances, if the module itself supports that behavior. For example, a transport can multiplex a listening port and handle multiple nodes from one module. Conversely, a given security module might not support multiplexing for isolation and simplicity reasons.","Following are definitions of terms that may be used throughout the description. A distributed hash table (DHT) is a DRT with the added semantics of being able to insert a key\/value pair into the distributed system such that the pair can later be retrieved by the publisher or another node (possibly subject to access control lists (ACLs)). The data is distributed amongst nodes based on an algorithm to ensure some level of reliability.","Peer name resolution protocol (PNRP) is a name resolution system that resolves names using routes generated by an underlying DRT platform.","A mesh is a group of nodes participating in a DRT. The term mesh can be used to scope the breadth of operations; for example, the node participates in routing only within a site or for the entire Internet or for all applications or for a single application.","A key is an integer of variable length used for routing, and conceptually, is equivalent to an IP address in IP routing.","A root is a node which is publishing a given key or the key closest to the value of a key.","A node is a particular instance of the DRT software running on a machine in a given mesh. Note that there can be multiple logical nodes on a single physical machine.","A routing entry is a small data structure containing a key and the endpoint information for the root of the key.","A local routing table is a collection of routing entries maintained on a single node to allow routing to next hops.","Reference is now made to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident, however, that the novel architecture can be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to facilitate a description thereof.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1","b":["100","100","102","104","106","104","106","108","106","110","112","114","110","116","118","110","114"],"sub":["1","1","2","2","3","3"]},"In this serverless environment, each of the devices  includes a separate node instance (N\/I) of the DRT . Each node instance includes table entries of one or more other mesh devices (or node instances thereof). For example, if the first application  of the first device  communicates with the third application  of third device , this occurs via the node instances, which, as described above, include modules for supporting routing table management, transport, bootstrap, security, and logging. The DRT architecture is extensible in that other modules (e.g., customized) can be plugged in as developed by third-party vendors, for example.","An interface component (I\/C) facilitates access to the corresponding node instances and determination of a route to a destination device. For example, the first device  includes a first interface component (I\/C)  for starting and accessing the local instance (N\/I) , the second device  includes a second interface component (I\/C)  for starting and accessing a second local instance (N\/I) , and the third device  includes a third interface component (I\/C)  for starting and accessing a third local instance (N\/I) .","In operation, the first application  can find the same type of application, the second application , by communicating with the third device . In other words, the first DRT node instance  may not include routing information for the second device , such that the first device  can communicate with the second device  directly. However, the third DRT node instance  of the third device  includes routing information that can direct the information of the first device application  to the second device application . As shown, there can be more devices  than are illustrated as well as node instances for the DRT .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 2","b":["200","200","202","204","204","206","208","204"]},"Once a node instance successfully bootstraps into a DRT, the node instance moves into the DRT_ACTIVE state . Once in this state , the node instance is participating in the DRT. The node instance can move into multiple states from the DRT_ACTIVE state  depending on one or more conditions. If the network goes away, the node instance moves to a DRT_NO_NETWORK state . If for some reason the node is considered the last node in the DRT, the node will move into a DRT_ALONE state . Finally, if a cataclysmic event occurs, the DRT will move into a DRT_FAULTED state .","More specifically, if a node successfully discovers that no other node is currently in the DRT, the node moves into the DRT_ALONE state . Once in the alone state , the node listens for other nodes to connect to the DRT. A node can move into multiple states from the alone state  depending on the condition. If the network goes away, the node can moves into the DRT_NO_NETWORK state . Additionally, a new node (or node instance) in the device can be started and join the DRT, in which case the new node will move into the DRT_ACTIVE state . Again, if cataclysmic event occurs, the DRT local instance will move into the DRT_FAULTED state .","If a node loses network connectivity and moves into the DRT_NO_NETWORK state, the node can wait, and if network connectivity is restored, the infrastructure will restart the bootstrapping process and the node will move into the DRT_BOOTSTRAPPING state . If the node moves into the fault state , a cataclysmic event has occurred on the local node instance (e.g., the device running out of memory). At this point, the node calls a DrtClose method to shut down the node instance.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["300","302","304","304","306","306","304"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":"400"},"For example, a first application  (e.g., of a device or server) can start and access a first DRT local instance  via first interface component  (e.g., a DRT API). The first node instance  is illustrated as part of a first DRT mesh . Similarly, the first application  can start and access a second DRT local instance  via a second interface component , the second local instance  also part of the first DRT mesh .","The first application  can also be associated with a third DRT local node instance  on a different mesh, for example, a second mesh  (denoted DRT). The third node instance  can be started and accessed by the first application  via a third interface component . A second application  (e.g., of the same device) starts and accesses a fourth DRT local instance  on the second mesh  via a fourth interface component . Accordingly, an application (e.g., application ) can start multiple different DRT node instances (e.g., instances ,  and ), of which the instances can be associated with different groups of nodes (e.g., DRT mesh  and DRT mesh ). Moreover, a single device can include multiple applications (e.g.,  and ) each communicating over different mesh (e.g.,  and ) or a same mesh (e.g., ). In an alternative implementation, it is to be understood that the interface components ( and ) can be a single interface component for starting and accessing the individual node instances (e.g.,  and ) for one application (e.g., ). In yet another alternative implementation, the interface components (,  and ) associated with the first application  can be a single interface component for starting and accessing local node instances of the different mesh ( and ).",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5","b":["500","500","510","512","514","516"],"sub":["1","2","7","8 ","3 ","4 ","5 ","6 "]},"A search operation finds the root for a given key in the mesh. This is implemented via the searching node iteratively performing lookup operations with other nodes, until the target of the search is found. However, it should be noted that a recursive design could also be used in the implementation, with the searcher contacting a first hop, the first hop contacting a second hop, and so on.","The DRT forms an overlay mesh on top of underlying transport (normally an IPv4 or IPv6 network). Nodes can either participate by searching for keys published by nodes in the mesh, or by becoming part of the mesh by publishing keys. When publishing a key, the node maintains a local routing table of other nodes in the mesh, with the selection of which nodes to include in the table being based on the key the node is locally publishing.","The routing table is optimized in such a manner that it is possible to quickly find the root of a specific key in the mesh either by finding the key directly in the cache or by asking the root of the key that is in the local routing table that that is closest numerically to the key being searched for; the neighbor in turn looks in its own local routing table and returns either the addresses of the required node or the addresses of the node publishing the key numerically closest in the local routing table. This is repeated until either the required key is found or it has been determined that no such key exists. An example of such a routing scheme is implemented by PNRP.","The DRT can consist of nodes running in applications or services on a mix of servers, PCs or devices. The DRT runs in-proc with the owning application (e.g., spreadsheet). All threads are spawned using the same token as the application thread which calls the DRT. As such, the DRT can be used in a service with or without impersonation without issue.","Additionally, note that a given process can host multiple logical node instances. These instances can be for multiple different meshes that the application wishes to access (e.g., PNRP can access a global cloud mesh and a link-local cloud mesh at the same time). A single process could have two instances of the same mesh, but the only reason an application might wish to do that is if the application has multiple credentials and is creating an instance for each credential.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 6","b":["600","600","602","600","604","600","606","608","600"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 7"},"At , an application of a device is launched in furtherance of collaborating with a serverless group of devices. At , a local node instance of a distributed routing table is opened based on a call from the application. At , state of the local node instance transitions based on conditions related to connectivity to the group of devices. At , the device can detach from the group of de vices by closing the local node instance.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 8","b":["800","802","804","806","808","810","812"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 9","b":["900","902","904","906"]},"To search the DRT, the application creates a search query. This query can include several pieces of information for the application: the key to search the DRT for (specified through the search API); whether or not the infrastructure should search the local DRT instance for the key or just remote nodes; whether the search returns the path to a result; the number of results to return within a particular min\/max range; and, whether the search should return only an exact match or the closest result(s).","An exact search instructs the infrastructure to look for the key that exactly matches the key being searched. If the infrastructure can find key, the result is returned; otherwise, no results are returned. A closest search instructs the infrastructure to look for the key that exactly matches the key being searched. If the infrastructure can find the key, the result is returned; otherwise, the closest result is returned. If the application chooses to get the closest \u201cn\u201d results, the application specifies a MaxEndpoint >1, which further instructs the infrastructure to return the exact match, plus \u201cn\u22121\u201d closest results, or \u201cn\u201d closest results, if no exact match is found.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 10","b":["1000","1002","1004","1006","1008","1010","1012","1014"]},"By specifying \u201cfiterative=TRUE\u201d for a search, the application chooses to be called back for each \u201chop\u201d during the search. In other words, anytime the infrastructure communicates with a node during the search, the application will be able to obtain the key\/endpoint pair of that node. The following table illustrates fIterative=TRUE search behavior.",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"MaxEndpoints = 1","MaxEndpoints >1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Exact Match","The application's search","Will return one"]},{"entry":["(MaximumKey and","handle will be signaled at","match if this is"]},{"entry":["MinimumKey are the","each hop","specified"]},{"entry":["same value)","Each result will contain the"]},{"entry":[{},"key from the hop's cache"]},{"entry":[{},"that the infrastructure will"]},{"entry":[{},"attempt to communicate"]},{"entry":[{},"with next."]},{"entry":["Closest Match","The application's search","Error - this search"]},{"entry":["(MaximumKey and","handle will be signaled at","configuration is"]},{"entry":["MinimumKey specify a","each hop","not supported."]},{"entry":["range of values)","Each result will contain the"]},{"entry":[{},"key from the hop's cache"]},{"entry":[{},"that the infrastructure will"]},{"entry":[{},"attempt to communicate"]},{"entry":[{},"with next."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The last result from every search will be a final callback, with a failed hr (DRT_E_NO_MORE). This assumes the application is returning \u201ctrue\u201d from the result callback to allow the search process to run its full course. If the callback returns false, no more callbacks will happen.","The following table illustrates fIterative=FALSE search behavior.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"MaxEndpoints = 1","MaxEndpoints > 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Exact Match","The application's search","Will return 1"]},{"entry":["(MaximumKey and","handle will be signaled 1","match if this is"]},{"entry":["MinimumKey are the","time with the exact match","specified."]},{"entry":["same value)","data."]},{"entry":["Closest Match","The application's search","The application's"]},{"entry":["(MaximumKey and","handle will be signaled 1","search handle will"]},{"entry":["MinimumKey","time with the closest","be signaled up to"]},{"entry":["specify a range","(possibly exact) match.","MaxEndpoints"]},{"entry":["of values)",{},"times. The first"]},{"entry":[{},{},"result will be the"]},{"entry":[{},{},"first closest (or"]},{"entry":[{},{},"exact) result."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Following is a description of type definitions, enumerations, structures and functions of the DRT API. These are the types used throughout the DRT API.",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef PVOID HDRT;"]},{"entry":[{},"typedef PVOID HDRT_SEARCH_CONTEXT;"]},{"entry":[{},"typedef PVOID HTRANSPORT;"]},{"entry":[{},"typedef PVOID HKEYREGISTRATION;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0070","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HDRT","Handle to a DRT - This is the"]},{"entry":[{},"applications representation of a DRT"]},{"entry":[{},"opened via DrtOpen"]},{"entry":["HDRT_SEARCH_CONTEXT","Handle to a search issued by the"]},{"entry":[{},"application via DrtStartSearch. This"]},{"entry":[{},"handle is used to end a search via"]},{"entry":[{},"DrtEndSearch."]},{"entry":["HTRANSPORT","Handle to a transport created by the"]},{"entry":[{},"transport creation API. This is used to"]},{"entry":[{},"open a DRT with a specified transport"]},{"entry":[{},"via the DRT_SETTINGS structure."]},{"entry":[{},"Currently only IPv6 UDP is supported"]},{"entry":[{},"via DrtCreateIpv6UdpTransport."]},{"entry":["HKEYREGISTRATION","Handle to a key that has been registered"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Following are DRT-specific return codes returned by the API. See the functions section for what error codes are returned by which API specifically.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"#define FACILITY_DRT 98"},{"entry":"#define DRT_E_TIMEOUT"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1001)"},{"entry":"#define DRT_E_INVALID_KEY_SIZE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1002)"},{"entry":"#define DRT_E_INVALID_MESSAGE_SIZE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1003)"},{"entry":"#define DRT_E_INVALID_CERT_CHAIN"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1004)"},{"entry":"#define DRT_E_INVALID_MESSAGE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1005)"},{"entry":"#define DRT_E_NO_MORE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1006)"},{"entry":"#define DRT_E_INVALID_MAX_ADDRESSES"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1007)"},{"entry":"#define DRT_E_SEARCH_IN_PROGRESS"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1008)"},{"entry":"#define DRT_E_INVALID_KEY"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x1009)"},{"entry":"#define DRT_E_TARGET_NOT_IN_RANGE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x100a)"},{"entry":"#define DRT_E_INVALID_PORT"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2000)"},{"entry":"#define DRT_E_INVALID_TRANSPORT"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2001)"},{"entry":"#define DRT_E_INVALID_SEC_PROVIDER"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2002)"},{"entry":"#define DRT_E_STILL_IN_USE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2003)"},{"entry":"#define DRT_E_INVALID_BOOTSTRAP"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2004)"},{"entry":"#define DRT_E_INVALID_ADDRESS"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2005)"},{"entry":"#define DRT_E_INVALID_SCOPE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2006)"},{"entry":"#define E_TRANSPORT_SHUTTING_DOWN"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2007)"},{"entry":"#define DRT_E_PROVIDER_IN_USE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2008)"},{"entry":"#define DRT_E_PROVIDER_NOT_ATTACHED"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2009)"},{"entry":"#define DRT_E_TRANSPORT_ALREADY_BOUND"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2101)"},{"entry":"#define DRT_E_TRANSPORT_NOT_BOUND"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2102)"},{"entry":"#define DRT_E_TRANSPORT_UNEXPECTED"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2103)"},{"entry":"#define DRT_E_TRANSPORT_INVALID_ARGUMENT"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2104)"},{"entry":"#define DRT_E_TRANSPORT_NO_DEST_ADDRESSES"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2105)"},{"entry":"#define DRT_E_TRANSPORT_EXECUTING_CALLBACK"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2106)"},{"entry":"#define DRT_E_TRANSPORT_ALREADY_EXISTS_FOR_SCOPE"},{"entry":"MAKE_HRESULT(SEVERITY_ERROR, FACILITY_DRT, 0x2107)"},{"entry":"#define DRT_S_TIMEOUT"},{"entry":"MAKE_HRESULT(SEVERITY_SUCCESS, FACILITY_DRT, 0x4001)"},{"entry":"#define DRT_PAYLOAD_REVOKED (1<<0)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DRT_E_TIMEOUT","Error: A timeout has"]},{"entry":[{},"occurred"]},{"entry":["DRT_E_INVALID_KEY_SIZE","Error: The key\/key size"]},{"entry":[{},"passed in is invalid"]},{"entry":["DRT_E_INVALID_MESSAGE_SIZE","Error: The message size"]},{"entry":[{},"specified is invalid"]},{"entry":["DRT_E_INVALID_CERT_CHAIN","Error: The cert chain"]},{"entry":[{},"specified is invalid"]},{"entry":["DRT_E_INVALID_MESSAGE","Error: The message"]},{"entry":[{},"specified is invalid"]},{"entry":["DRT_E_NO_MORE","No more results are"]},{"entry":[{},"available for a given search"]},{"entry":["DRT_E_INVALID_MAX_ADDRESSES","Error: The maximum"]},{"entry":[{},"amount of addresses"]},{"entry":[{},"specified is invalid"]},{"entry":["DRT_E_SEARCH_IN_PROGRESS","Error: A search is already"]},{"entry":[{},"in progress"]},{"entry":["DRT_E_INVALID_KEY","Error: The key specified is"]},{"entry":[{},"invalid given the security"]},{"entry":[{},"provider being used"]},{"entry":["DRT_E_INVALID_PORT","Error: The port is invalid -"]},{"entry":[{},"probably because it is"]},{"entry":[{},"already in use."]},{"entry":["DRT_E_INVALID_TRANSPORT","Error: The transport"]},{"entry":[{},"referenced by the handle"]},{"entry":[{},"is invalid and does not"]},{"entry":[{},"adhere to the specified"]},{"entry":[{},"interface contract"]},{"entry":["DRT_E_INVALID_SEC_PROVIDER","Error: The security provider"]},{"entry":[{},"specified is invalid"]},{"entry":["DRT_E_STILL_IN_USE","Error: The DRT is still in"]},{"entry":[{},"use."]},{"entry":["DRT_E_INVALID_BOOTSTRAP","Error: The bootstrap"]},{"entry":[{},"provider specified is invalid"]},{"entry":["DRT_E_INVALID_ADDRESS","Error: The address specified"]},{"entry":[{},"is invalid"]},{"entry":["DRT_E_INVALID_SCOPE","Error: The scope specified"]},{"entry":[{},"is invalid"]},{"entry":["DRT_S_TIMEOUT","Success: The operation"]},{"entry":[{},"timed out"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Following are enumerations employed by the DRT API. The DRT SCOPE enumeration specifies the IPv6 scope in which the DRT will operate if when using an IPv6 UDP transport created by DrtCreateIpv6UdpTransport. The enumeration also indirectly specifies the scope a PNRP bootstrap resolver\u2014created by DrtCreatePnrpBootstrapResolver\u2014will use to find other participating nodes.",{"@attributes":{"id":"p-0075","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef enum drt_scope_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_GLOBAL_SCOPE","= 1,"]},{"entry":[{},"DRT_SITE_LOCAL_SCOPE","= 2,"]},{"entry":[{},"DRT_LINK_LOCAL_SCOPE","= 3,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_SCOPE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0076","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DRT_GLOBAL_SCOPE","When setting up an IPv6 UDP transport"]},{"entry":[{},"via the DrtCreateIpv6UdpTransport"]},{"entry":[{},"API, listen on only the global scope"]},{"entry":["DRT_SITE_LOCAL_SCOPE","When setting up a IPv6 UDP transport"]},{"entry":[{},"via the DrtCreateIpv6UdpTransport"]},{"entry":[{},"API, listen on only the site-local scope."]},{"entry":["DRT_LINK_LOCAL_SCOPE","When setting up a IPv6 UDP transport"]},{"entry":[{},"via the DrtCreateIpv6UdpTransport"]},{"entry":[{},"API, listen on only the link local scope"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The DRT_SECURITY_MODE is a DRT_SETTINGS field that specifies the security mode the DRT should operate under. By default 10% of the cache and the final node in a search are authenticated.",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef enum drt_security_mode_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_SECURE_RESOLUTION","= 0,"]},{"entry":[{},"DRT_SECURE_ROUTE","= 1,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_SECURITY_MODE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0079","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DRT_SECURE_RESOLUTION","Authenticate percentage (e.g., 10%)"]},{"entry":[{},"of the cache and the final node(s)"]},{"entry":[{},"being searched for"]},{"entry":["DRT_SECURE_ROUTE","Authenticate percentage (e.g., 10%)"]},{"entry":[{},"of the cache and the final node(s)"]},{"entry":[{},"being searched for plus all nodes in"]},{"entry":[{},"the route to the search result(s)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The different status a DRT can have is captured in DRT_STATUS. DRT_STATUS reflects status of the local node.",{"@attributes":{"id":"p-0081","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef enum drt_status_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_ACTIVE = 0,"]},{"entry":[{},"DRT_ALONE = 1,"]},{"entry":[{},"DRT_NO_NETWORK = 10,"]},{"entry":[{},"DRT_FAULTED = 20,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_STATUS;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DRT_BOOTSTRAPPING","The local node is attempting to bootstrap"]},{"entry":[{},"into the DRT mesh."]},{"entry":["DRT_ACTIVE","The local node is \u201cconnected\u201d to the mesh -"]},{"entry":[{},"there are remote nodes in the local node's"]},{"entry":[{},"cache and it is participating in the DRT"]},{"entry":[{},"system"]},{"entry":["DRT_ALONE","The local node is waiting for remote nodes"]},{"entry":[{},"to join the mesh - there are remote nodes"]},{"entry":[{},"in the local node's cache and it is"]},{"entry":[{},"participating in the DRT system"]},{"entry":["DRT_NO_NETWORK","The local node does not have network"]},{"entry":[{},"connectivity"]},{"entry":["DRT_FAULTED","An unknown error has occurred on the local"]},{"entry":[{},"node - the local node can then only call"]},{"entry":[{},"DrtClose and try to open\/setup the DRT"]},{"entry":[{},"again"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"DRT_MATCH_TYPE is the type of result returned via the search event when a search is performed.",{"@attributes":{"id":"p-0084","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef enum drt_match_type_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_MATCH_EXACT","= 0,"]},{"entry":[{},"DRT_MATCH_NEAR","= 1,"]},{"entry":[{},"DRT_MATCH_INTERMEDIATE","= 2,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_MATCH_TYPE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0085","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DRT_MATCH_EXACT","The data\/node being returned by"]},{"entry":[{},"the search callback has the"]},{"entry":[{},"requested key"]},{"entry":["DRT_MATCH_NEAR","The data\/node being returned"]},{"entry":[{},"by the search callback is the closest"]},{"entry":[{},"the DRT could find to the"]},{"entry":[{},"requested key"]},{"entry":["DRT_MATCH_INTERMEDIATE","The data\/node being returned by"]},{"entry":[{},"the search callback is only and"]},{"entry":[{},"intermediate node, it is not the"]},{"entry":[{},"closest or exact match - an"]},{"entry":[{},"application will only receive this"]},{"entry":[{},"node match type if fIterative ="]},{"entry":[{},"TRUE"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"DRT_LEAFSET_KEY_CHANGE_TYPE is the type of change that occurs to a leaf set node in the local DRT cache.",{"@attributes":{"id":"p-0087","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"typedef enum drt_leafset_key_change_type_tag {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_LEAFSET_KEY_ADDED","= 0,"]},{"entry":[{},"DRT_LEAFSET_KEY_DELETED","= 1,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_LEAFSET_KEY_CHANGE_TYPE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0088","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DRT_LEAFSET_KEY_ADDED","A key\/node was added to the"]},{"entry":[{},"local node's DRT leaf set"]},{"entry":["DRT_LEAFSET_KEY_DELETED","A key\/node was deleted from"]},{"entry":[{},"the local node's DRT leaf set"]},{"entry":["DRT_LEAFSET_KEY_UPDATED","A key\/node in the local nodes DRT"]},{"entry":[{},"leaf set was updated"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"DRT_EVENT_TYPE is an event has occurred in the DRT. The event handle passed into DrtOpen is signaled with one of the following events.",{"@attributes":{"id":"p-0090","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef enum drt_event_type_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_EVENT_STATUS_CHANGED","= 0,"]},{"entry":[{},"DRT_EVENT_LEAFSET_KEY_CHANGED","= 1,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_EVENT_TYPE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0091","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DRT_EVENT_STATUS_CHANGED","The status of the local"]},{"entry":[{},"DRT instance has"]},{"entry":[{},"changed"]},{"entry":["DRT_EVENT_LEAFSET_KEY_CHANGED","A key\/node was"]},{"entry":[{},"changed from the local"]},{"entry":[{},"node's DRT leaf set"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Following is a summary of structures included as part of the DRT API. DRT_DATA is a data blob used throughout the DRT API.",{"@attributes":{"id":"p-0093","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef struct drt_data_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ULONG cb;"]},{"entry":[{},"BYTE *pb;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_DATA, *PDRT_DATA;"]},{"entry":[{},"typedef const DRT_DATA *PCDRT_DATA;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0094","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cb","Count of bytes"]},{"entry":[{},"*pb","Pointer to byte array"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"DRT_SECURITY_PROVIDER. The following structure defines the interface that can be implemented by a security provider:",{"@attributes":{"id":"p-0096","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"typedef struct drt_security_provider_tag"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PVOID pvContext;"]},{"entry":[{},"HRESULT (*RegisterKey)("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"const DRT_REGISTRATION *pRegistration,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvKeyContext);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT (*UnregisterKey)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"constDRT_DATA *pKey,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvKeyContext);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT (*ValidateAndUnpackPayload)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pSecuredAddressPayload,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pCertChain,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pClassifier,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pNonce,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pSecuredPayload,"]},{"entry":[{},{"sub":"\u2014\u2014"},"BYTE* pbProtocolMajor,"]},{"entry":[{},{"sub":"\u2014\u2014"},"BYTE* pbProtocolMinor,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pKey,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pPayload,"]},{"entry":[{},{"sub":"\u2014\u2014"},"CERT_PUBLIC_KEY_INFO** ppPublicKey,"]},{"entry":[{},{"sub":"\u2014\u2014"},"SOCKET_ADDRESS_LIST** ppAddressList,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DWORD* pdwFlags);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT (*SecureAndPackPayload)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvKeyContext,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BYTE bProtocolMajor,"]},{"entry":[{},"BYTE bProtocolMinor,"]},{"entry":[{},"DWORD dwFlags,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"const DRT_DATA* pKey,"]},{"entry":[{},{"sub":"\u2014\u2014"},"const DRT_DATA* pPayload,"]},{"entry":[{},{"sub":"\u2014\u2014"},"const SOCKET_ADDRESS_LIST*"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pAddressList,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"const DRT_DATA* pNonce,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pSecuredAddressPayload,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pClassifier,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pSecuredPayload,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pCertChain);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void (*FreeData)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pv);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} DRT_SECURITY_PROVIDER, *PDRT_SECURITY_PROVIDER;"},{"entry":"typedef const DRT_SECURITY_PROVIDER"},{"entry":"*PCDRT_SECURITY_PROVIDER;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0097","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pvContext","This pointer is specified by the application when passing"]},{"entry":[{},"this structure to DrtOpen. The DRT treats it as an"]},{"entry":[{},"opaque pointer, and passes it as the first parameter to the"]},{"entry":[{},"functions referenced by this structure. An application"]},{"entry":[{},"will generally use this as a pointer to the security"]},{"entry":[{},"provider state or the \u201cthis pointer\u201d of the object that"]},{"entry":[{},"implements the security provider functionality."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"RegisterKey. When an application attempts to register a key, the key is passed to this interface for validation by the security provider before completing the registration.",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pvContext","Used to pass the value of"]},{"entry":[{},{},"DRT_SECURITY_PROVIDER.pvContext"]},{"entry":[{},"pRegistration","Pointer to the DRT registration structure, the"]},{"entry":[{},{},"application created and passed to DrtRegisterKey"]},{"entry":[{},"pvKeyContext","Pointer to the context, the application created and"]},{"entry":[{},{},"passed to DrtRegisterKey"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"UnregisterKey. When an application attempts to unregister a key, the key is passed to this interface for validation by the security provider before completing the unregister call.",{"@attributes":{"id":"p-0101","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pvContext","Used to pass the value of"]},{"entry":[{},{},"DRT_SECURITY_PROVIDER.pvContext"]},{"entry":[{},"pRegistration","Pointer to the DRT registration structure, the"]},{"entry":[{},{},"application created and passed to DrtRegisterKey"]},{"entry":[{},"pvKeyContext","Pointer to the context, the application created and"]},{"entry":[{},{},"passed to DrtRegisterKey"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"ValidateAndUnpackPayload. This function is called when an authority message is received on the wire. The function is responsible for validating the data received, and for unpacking the service addresses, revoked flag, and nonce from a secured address payload.",{"@attributes":{"id":"p-0103","num":"0102"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pvContext","Used to pass the value of"]},{"entry":[{},"DRT_SECURITY_PROVIDER.pvContext"]},{"entry":["pSecuredAddressPayload","The payload received on the wire which"]},{"entry":[{},"contains the service addresses, revoked"]},{"entry":[{},"flag, nonce, and possibly other data"]},{"entry":[{},"required by the security provider"]},{"entry":["pCertChain","The cert chain received in the authority"]},{"entry":[{},"message"]},{"entry":["pClassifier","The classifier received in the authority"]},{"entry":[{},"message"]},{"entry":["pNonce","The nonce that was sent in the original"]},{"entry":[{},"Inquire or Lookup message. This value"]},{"entry":[{},"should be compared to the value embedded"]},{"entry":[{},"in the Secured Address Payload to ensure"]},{"entry":[{},"the same. This value can be 16 bytes."]},{"entry":["pSecuredPayload","The application data payload received in"]},{"entry":[{},"the Authority message. After validation, the"]},{"entry":[{},"original data (after decryption, removal of"]},{"entry":[{},"signature, etc.) is output as pPayload"]},{"entry":["pbProtocolMajor","Pointer to byte array that represents the"]},{"entry":[{},"protocol major version"]},{"entry":["pbProtocolMinor","Pointer to byte array that represents the"]},{"entry":[{},"protocol minor version"]},{"entry":["pKey","The key for which this payload is registered"]},{"entry":["pPayload","The original payload specified by the"]},{"entry":[{},"remote application. pPayload->pb is"]},{"entry":[{},"allocated by the security provider, and will"]},{"entry":[{},"be freed by the DRT by calling FreeData"]},{"entry":["ppPublicKey","The number of service addresses embedded"]},{"entry":[{},"in the Secured Address Payload"]},{"entry":["ppAddresses","The service addresses that were embedded"]},{"entry":[{},"in the Secured Address Payload."]},{"entry":[{},"ppAddresses is allocated by the security"]},{"entry":[{},"provider, and will be freed by the DRT by"]},{"entry":[{},"calling FreeData"]},{"entry":["pdwFlags","Any DRT specific flags, currently defined"]},{"entry":[{},"only to be the revoked (or deleted) flag that"]},{"entry":[{},"need to be unpacked for the local DRT"]},{"entry":[{},"instance processing."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"SecureAndPackPayload. This function is called when an Authority message is about to be sent on the wire. It is responsible for securing the data that will be sent, and for packing the service addresses, revoked flag, nonce, and possibly other application data into the Secured Address Payload. Following is a table of parameters.",{"@attributes":{"id":"p-0105","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pvContext","Used to pass the value of"]},{"entry":[{},"DRT_SECURITY_PROVIDER.pvContext"]},{"entry":["pKeyContext","The context passed into DrtRegisterKey when"]},{"entry":[{},"the key was registered"]},{"entry":["pbProtocolMajor","Pointer to byte array that represents the"]},{"entry":[{},"protocol major version"]},{"entry":["pbProtocolMinor","Pointer to byte array that represents the"]},{"entry":[{},"protocol minor version"]},{"entry":["dwFlags","Any DRT specific flags, currently defined only"]},{"entry":[{},"to be the revoked (or deleted) flag that need to"]},{"entry":[{},"be packed, secured and sent to another instance"]},{"entry":[{},"for processing."]},{"entry":["pKey","The key for which this payload is registered"]},{"entry":["pPayload","The payload specified by the application when"]},{"entry":[{},"calling DrtRegisterKey"]},{"entry":["pAddressList","The service addresses that are to be embedded"]},{"entry":[{},"in the Secured Address Payload"]},{"entry":["pNonce","The nonce that was sent in the original Inquire"]},{"entry":[{},"or Lookup message. This value is always 16"]},{"entry":[{},"bytes"]},{"entry":["pSecuredAddressPayload","The payload to send on the wire which"]},{"entry":[{},"contains the service addresses, revoked flag,"]},{"entry":[{},"nonce, and possibly other data required by the"]},{"entry":[{},"security provider. pSecuredAddressPayload->"]},{"entry":[{},"pb is allocated by the security provider, and"]},{"entry":[{},"will be freed by the DRT by calling FreeData."]},{"entry":["pClassifier","The classifier to send in the Authority message."]},{"entry":[{},"pClassifier->pb is allocated by the security"]},{"entry":[{},"provider, and will be freed by the DRT by"]},{"entry":[{},"calling FreeData"]},{"entry":["pSecuredPayload","The application data payload received in the"]},{"entry":[{},"Authority message. After validation, the"]},{"entry":[{},"original data (after decryption, removal of"]},{"entry":[{},"signature, etc.) is output as pPayload."]},{"entry":[{},"pSecuredPayload->pb is allocated by the"]},{"entry":[{},"security provider, and will be freed by the DRT"]},{"entry":[{},"by calling FreeData"]},{"entry":["pCertChain","The cert chain to send in the Authority"]},{"entry":[{},"message. pCertChain->pb is allocated by the"]},{"entry":[{},"security provider, and will be freed by the DRT"]},{"entry":[{},"by calling FreeData"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The FreeData function is called to free data that the security provider allocated in calls to ValidateAndUnpackPayload and SecureAndPackPayload.SecureAndPackPayload. The following table indicates parameters for this function.",{"@attributes":{"id":"p-0107","num":"0106"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pvContext","Used to pass the value of"]},{"entry":[{},{},"DRT_SECURITY_PROVIDER.pvContext"]},{"entry":[{},"pv","The data to be freed"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"DRT_BOOTSTRAP_PROVIDER",{"@attributes":{"id":"p-0109","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"typedef PVOID BOOTSTRAP_RESOLVE_CONTEXT;"},{"entry":"typedef void (CALLBACK* BOOTSTRAP_RESOLVE_CALLBACK)"},{"entry":"(HRESULT hr, PVOID pvContext, SOCET_ADDRESS_LIST*"},{"entry":"pAddresses);"},{"entry":"typedef struct DRT_BOOTSTRAP_PROVIDER_tag"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PVOID pContext;"]},{"entry":[{},"HRESULT (*Attach)("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VOID (*Detach)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},");"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT (*Resolve)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BOOL fSplitDetect,"]},{"entry":[{},"ULONG timeout,"]},{"entry":[{},"ULONG cMaxResults,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvCallbackContext,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BOOTSTRAP_RESOLVE_CALLBACK"]},{"entry":[{},"callback);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{"sub":"\u2014\u2014"},"BOOTSTRAP_RESOLVE_CONTEXT*"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ResolveContext"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VOID (*EndResolve)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext);"]},{"entry":[{},{"sub":"\u2014\u2014"},"BOOTSTRAP_RESOLVE_CONTEXT"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ResolveContext"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT (*Register)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"const SOCKET_ADDRESS_LIST*"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"pAddressList);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VOID (*Unregister)("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext"]},{"entry":[{},");"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} DRT_BOOTSTRAP_PROVIDER,"},{"entry":"*PDRT_BOOTSTRAP_PROVIDER;"},{"entry":"typedef const DRT_BOOTSTRAP_PROVIDER"},{"entry":"*PCDRT_BOOTSTRAP_PROVIDER;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0110","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pContext","Pointer to a resolver defined context - it is up to the"]},{"entry":[{},"developer creating a bootstrap resolver to fill this in"]},{"entry":[{},"with the needed information - oftentimes this is a \u201cthis\u201d"]},{"entry":[{},"pointer. This context gets passed to all the context"]},{"entry":[{},"parameters in the functions defined by the"]},{"entry":[{},"DRT_BOOTSTRAP_MODULE."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The resolver function resolves to an endpoint that can be used to bootstrap the cache of the DRT.",{"@attributes":{"id":"p-0112","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pvContext","Used to pass the value of"]},{"entry":[{},"DRT_BOOTSTRAP_PROVIDER"]},{"entry":[{},"pvContext"]},{"entry":["fSplitDetect","Whether or not the resolve is being used for split"]},{"entry":[{},"detection and recovery"]},{"entry":["timeout","The maximum time a resolve should take before"]},{"entry":[{},"timing out."]},{"entry":["cMaxResults","The maximum number of results to return as a"]},{"entry":[{},"result of the resolve"]},{"entry":["pvCallbackContext","Context that is passed back to the callback"]},{"entry":[{},"defined by the next parameter"]},{"entry":["callback","A BOOTSTRAP_RESOLVE_CALLBACK"]},{"entry":[{},"called back for each resolve result + the"]},{"entry":[{},"E_NO_MORE"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The CancelResolve function cancels an application requested resolution.",{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pvContext","Used to pass the value of"]},{"entry":[{},{},"DRT_BOOTSTRAP_PROVIDER pvContext"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The Register function registers an endpoint with the bootstrapping mechanism that other nodes can use resolve to find.",{"@attributes":{"id":"p-0116","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pvContext","Used to pass the value of"]},{"entry":[{},{},"DRT_BOOTSTRAP_PROVIDER pvContext"]},{"entry":[{},"pAddressList","The list of addresses to register with the"]},{"entry":[{},{},"bootstrapping mechanism"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The Unregister function unregisters an endpoint with the bootstrapping mechanism. As a result, other nodes will not be able to find the local node through a resolve.",{"@attributes":{"id":"p-0118","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pvContext","Used to pass the value of"]},{"entry":[{},{},"DRT_BOOTSTRAP_PROVIDER pvContext"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"DRT_SETTINGS is the interface for the settings of the DRT being opened via DrtOpen.",{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef struct drt_settings_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DWORD","dwSize;"]},{"entry":[{},"ULONG","cbKey;"]},{"entry":[{},"BYTE","bProtocolMajorVersion;"]},{"entry":[{},"BYTE","bProtocolMinorVersion;"]},{"entry":[{},"ULONG","ulMaxRoutingAddresses;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HTRANSPORT hTransport;"]},{"entry":[{},"DRT_SECURITY_PROVIDER *pSecurityProvider;"]},{"entry":[{},"DRT_BOOTSTRAP_PROVIDER *pBootstrapProvider;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_SETTINGS, *PDRT_SETTINGS;"]},{"entry":[{},"typedef const DRT_SETTINGS *PCDRT_SETTINGS;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0121","num":"0120"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["dwSize","The size of this structure via"]},{"entry":[{},"sizeof(DRT_SETTINGS) to allow future"]},{"entry":[{},"growth."]},{"entry":["dwSecurityMode","The DRT_SECURITY_MODE the DRT"]},{"entry":[{},"should use"]},{"entry":["cbKey","The exact number for the key in this DRT"]},{"entry":[{},"instance. For example, 8K can be supported,"]},{"entry":[{},"other values will return E_INVALIDARG."]},{"entry":["bProtocolMajor","Byte that represents the protocol major version"]},{"entry":["bProtocolMinor","Byte that represents the protocol minor version"]},{"entry":["ulMaxRoutingAddresses","The maximum number of addresses, the DRT"]},{"entry":[{},"should register when an application registers a"]},{"entry":[{},"key. Maximum value for this field can be set"]},{"entry":[{},"to 20; one embodiment uses 4 (this will fit in"]},{"entry":[{},"the UDP MTU)"]},{"entry":["hTransport","Handle to the transport provider to use"]},{"entry":["pSecurityProvider","Pointer to the security provider to use"]},{"entry":["pBootstrapProvider","Pointer to the bootstrap provider to use"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"DRT_REGISTRATION is for a key registration found via a search issued by DrtStartSearch. This structure is contained in an overall DRT_SEARCH_RESULT.",{"@attributes":{"id":"p-0123","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"typedef struct drt_registration_tag"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_DATA key;"]},{"entry":[{},"DRT_DATA appData;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} DRT_REGISTRATION, *PDRT_REGISTRATION;"},{"entry":"typedef const DRT_REGISTRATION *PCDRT_REGISTRATION;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0124","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"key","The key to be registered."]},{"entry":[{},"appData","Endpoints to be registered with the DRT - maximum"]},{"entry":[{},{},"limit of 8K"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"DRT_SEARCH_INFO is the structure that represents the search query being issued via DrtStartSearch.",{"@attributes":{"id":"p-0126","num":"0125"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"typedef struct drt_search_info_tag"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DWORD dwSize;"]},{"entry":[{},"BOOL fIterative;"]},{"entry":[{},"BOOL fAllowCurrentInstanceMatch;"]},{"entry":[{},"BOOL fAnyMatchInRange;"]},{"entry":[{},"ULONG cMaxEndpoints;"]},{"entry":[{},"DRT_DATA* pMaximumKey;"]},{"entry":[{},"DRT_DATA* pMinimumKey;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} DRT_SEARCH_INFO, *PDRT_SEARCH_INFO;"},{"entry":"typedef const DRT_SEARCH_INFO *PCDRT_SEARCH_INFO;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0127","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["dwSize","Count of bytes of this structure"]},{"entry":["fIterative","Whether or not the search is iterative"]},{"entry":["fAllowCurrentInstanceMatch","Whether or not to include search results"]},{"entry":[{},"from the local DRT instance in this"]},{"entry":[{},"process"]},{"entry":["fAnyMatchInRange","Whether or not the search should stop"]},{"entry":[{},"after the first match found in the"]},{"entry":[{},"range specified, or continue to try to"]},{"entry":[{},"find the closest to the key specified"]},{"entry":[{},"in the DrtStartSearch API."]},{"entry":["cMaxEndpoints","The number of results to return. This"]},{"entry":[{},"includes closest and exact nodes for a non-"]},{"entry":[{},"RETURN_PATH search. If this is greater"]},{"entry":[{},"than 1 for a"]},{"entry":[{},"DRT_SEARCH_RETURN_PATH"]},{"entry":[{},"search, the search will return 1 result."]},{"entry":["pMaximumKey","The maximum key the infrastructure"]},{"entry":[{},"should attempt to match; by default,"]},{"entry":[{},"if this is not filled in, it is the"]},{"entry":[{},"maximum value a key can have."]},{"entry":["pMinimumKey","The minimum key the infrastructure"]},{"entry":[{},"should attempt to match; by default,"]},{"entry":[{},"if this is not filled in, it is the"]},{"entry":[{},"minimum value a key can have."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"DRT_SEARCH_RESULT is a search result found by a search issued via DrtStartSearch. It contains the actual registration entry and the type of match.",{"@attributes":{"id":"p-0129","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef struct drt_search_result_tag"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DWORD dwSize;"]},{"entry":[{},"DRT_MATCH_TYPE type;"]},{"entry":[{},"PVOID pvContext;"]},{"entry":[{},"DRT_REGISTRATION registration;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} DRT_SEARCH_RESULT, *PDRT_SEARCH_RESULT;"]},{"entry":[{},"typedef const DRT_SEARCH_RESULT"]},{"entry":[{},"*PCDRT_SEARCH_RESULT;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0130","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["dwSize","The size of this structure"]},{"entry":"hr"},{"entry":"fSearchComplete"},{"entry":["type","The DRT_MATCH_TYPE for this search result"]},{"entry":["pvContext","The context passed into DrtStartSearch for the search"]},{"entry":["Registration","The DRT_REGISTRATION for this search result"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"DRT_EVENT_DATA. After an application receives an event signal, the application calls the DrtGetEventData to get the data associated with that event. This structure contains the data returned based on the event.",{"@attributes":{"id":"p-0132","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"typedef struct drt_event_data_tag"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_EVENT_TYPE type;"]},{"entry":[{},"HRESULT hr;"]},{"entry":[{},"PVOID pvContext;"]},{"entry":[{},"union"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_STATUS status;"]},{"entry":[{},"struct"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_LEAFSET_KEY_CHANGE_TYPE change;"]},{"entry":[{},"DRT_DATA localKey;"]},{"entry":[{},"DRT_DATA remoteKey;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"} leafsetKeyChange;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"};"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"} DRT_EVENT_DATA, *PDRT_EVENT_DATA;"},{"entry":"typedef const DRT_EVENT_DATA *PCDRT_EVENT_DATA;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0133","num":"0132"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["type","The event type - corresponds to the"]},{"entry":[{},"DRT_EVENT_TYPE enum."]},{"entry":["hr","The HRESULT of the operation for which the event was"]},{"entry":[{},"signaled. This is how an application determines if a"]},{"entry":[{},"search result is the last result."]},{"entry":["pvContext","Pointer to the context passed in to the API that generated"]},{"entry":[{},"the event."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Based on the DRT_EVENT_TYPE, the union will contain a field\/structure specific to that event type. If the DRT_EVENT_TYPE is a status change, it will contain the following:",{"@attributes":{"id":"p-0135","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"status","The updated DRT_STATUS of the DRT."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A leaf set key is a key that is contained in the cache of a DRT locally. By paying attention to these events, an application can know the contents of the local DRT cache for use. If the DRT_EVENT_TYPE is a leaf set key change, the union contains the following:",{"@attributes":{"id":"p-0137","num":"0136"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"change","The type of key change that occurred"]},{"entry":[{},"localKey","The local key (representing the cache) in which the"]},{"entry":[{},{},"remote key changed"]},{"entry":[{},"remoteKey","The remote key that changed"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The following functions can be included in the DRT API. A DrtCreatePnrpBootstrapResolver function creates a generic bootstrap resolver based on the PNRP protocol. The returned pointer is passed to DrtOpen via the DRT_SETTINGS structure.",{"@attributes":{"id":"p-0139","num":"0138"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"HRESULT WINAPI DrtCreatePnrpBootstrapResolver("}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"BOOL fPublish,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PCWSTR pwzPeerName,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PCWSTR pwzCloudName,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PCWSTR pwzPublishingIdentity,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_BOOTSTRAP_PROVIDER** ppResolver);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0140","num":"0139"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pwzDrtName","The name of the DRT being looked for in PNRP -"]},{"entry":[{},"it can be 137 Unicode characters, for example."]},{"entry":["pwzCloudName","The name of the cloud to look in for the DRT"]},{"entry":[{},"corresponding to the MeshName."]},{"entry":["pwzPublishingIdentity","The PeerIdentity that is publishing into the PNRP"]},{"entry":[{},"cloud used for bootstrapping."]},{"entry":["ppResolver","A pointer to the created PNRP bootstrap"]},{"entry":[{},"resolver - used in the DRT_SETTINGS structure."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A DrtDeletePnrpBootstrapResolver function deletes a generic bootstrap resolver based on the PNRP protocol.",{"@attributes":{"id":"p-0142","num":"0141"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"void WINAPI DrtDeletePnrpBootstrapResolver("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"DRT_BOOTSTRAP_PROVIDER* pResolver);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0143","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ppResolver","A pointer to the created PNRP bootstrap resolver -"]},{"entry":[{},{},"used in the DRT_SETTINGS structure."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A DrtCreateIpv6UdpTransport function creates a generic transport based on the IPv6 UDP protocol. The returned pointer is passed to DrtOpen via the DRT_SETTINGS structure.",{"@attributes":{"id":"p-0145","num":"0144"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtCreateIpv6UdpTransport("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DRT_SCOPE scope,"]},{"entry":[{},"ULONG scopeId,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"SHORT *pwPort,"]},{"entry":[{},{"sub":"\u2014\u2014"},"HTRANSPORT *phTransport);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0146","num":"0145"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["scope","The overall IPv6 scope in which the DRT will be operating"]},{"entry":[{},"in"]},{"entry":["scopeId","The identifier that uniquely specifies what interface the"]},{"entry":[{},"scope is associated with. For the Global scope, this is"]},{"entry":[{},"always the global ID and is optional if only using the global"]},{"entry":[{},"scope. For the link local scope, this represents the interface"]},{"entry":[{},"associated with the NIC on which the link local scope"]},{"entry":[{},"exists."]},{"entry":["pwPort","The port the local DRT instance will be using"]},{"entry":["phTransport","Pointer to a DRT transport handle - used in"]},{"entry":[{},"DRT_SETTINGS structure"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"HRESULT Values: DRT_E_INVALID_PORT\u2014one of the fields is invalid\u2014for example, the port is in use and the DRT cannot use that port.","A DrtDeleteIpv6UdpTransport function deletes a generic transport based on the IPv6 UDP protocol.",{"@attributes":{"id":"p-0149","num":"0148"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtDeleteIpv6UdpTransport("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0150","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"phTransport","Pointer to a DRT transport handle - used in"]},{"entry":[{},{},"DRT_SETTINGS structure"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A DrtCreateDerivedKeySecurityProvider function creates a Derived Key Security Provider based on the IPv6 UDP protocol. The returned pointer is passed to DrtOpen via the DRT_SETTINGS structure.",{"@attributes":{"id":"p-0152","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtCreateDerivedKeySecurityProvider("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"PCCERT_CONTEXT pRootCert,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_SECURITY_PROVIDER**"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ppSecurityProvider);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0153","num":"0152"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pRootCert","Pointer to the certificate that is the \u201croot\u201d part of the"]},{"entry":[{},"chain. This is used to verify that remotely published"]},{"entry":[{},"keys are derived from certificate chains with the"]},{"entry":[{},"same root."]},{"entry":["ppSecurityProvider","Pointer to the created security provider"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A DrtCreateDerivedKey function creates a key that can be registered with the DRT. The key will be generated from the passed in credential, and must have the same root chain as what was passed in to DrtCreateDerivedKeySecurityProvider.",{"@attributes":{"id":"p-0155","num":"0154"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtCreateDerivedKey("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"PCCERT_CONTEXT pLocalCert,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA* pKey);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0156","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["pLocalCert","Pointer to the certificate that is the \u201clocal\u201d part of the"]},{"entry":[{},"chain. This certificate is used to generate a key that can"]},{"entry":[{},"be used to register a key with the DRT"]},{"entry":["pKey","Pointer to the key created"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A DrtDeleteDerivedKeySecurityProvider function deletes a derived key security provider.",{"@attributes":{"id":"p-0158","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VOID WINAPI DrtDeleteDerivedKeySecurityProvider("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{"sub":"\u2014\u2014"},"DRT_SECURITY_PROVIDER*"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pSecurityProvider);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0159","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ppSecurityProvider","Pointer to the created security provider"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A DrtOpen function opens (or creates) a new local DRT instance specified by the DRT_SETTINGS structure passed in.",{"@attributes":{"id":"p-0161","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtOpen("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"const DRT_SETTINGS* pSettings,"]},{"entry":[{},{"sub":"\u2014\u2014"},"HANDLE hEvent;"]},{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"HDRT *phDrt);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0162","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pSettings","The settings to use for this DRT instance"]},{"entry":[{},"hEvent","Handle to the event to signal when an event occurs"]},{"entry":[{},"pvContext","User defined context, which can be passed straight"]},{"entry":[{},{},"through to the app via the events"]},{"entry":[{},"phDrt","The new handle associated with this DRT, for use in"]},{"entry":[{},{},"all future operations on this DRT instance."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A DrtClose function closes and cleans up the local instance of the DRT.",{"@attributes":{"id":"p-0164","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtClose("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0165","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"hDrt","Handle to the DRT to close - returned from DrtOpen"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A DrtRegisterKey function registers a given key in the DRT. If the API is called with a key that has already been registered, it updates the key.",{"@attributes":{"id":"p-0167","num":"0166"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtRegisterKey("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"HDRT hDrt,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_REGISTRATION *pRegistration,"]},{"entry":[{},{"sub":"\u2014\u2014"},"PVOID pvKeyContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"HKEYREGISTRATION *phKeyRegistration);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0168","num":"0167"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["hDrt","DRT handle returned from DrtOpen"]},{"entry":["pRegistration","Handle to a DRT_REGISTRATION"]},{"entry":["pvKeyContext","Pointer to a context to associate with the key in"]},{"entry":[{},"the DRT. This key context is passed to the"]},{"entry":[{},"security provider key functions. Interpretation of"]},{"entry":[{},"this value is defined by the security provider being"]},{"entry":[{},"used."]},{"entry":["phKeyRegistration","Pointer to a handle for a key that has been"]},{"entry":[{},"registered"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A DrtUnregisterKey function unregisters a given key from the DRT.",{"@attributes":{"id":"p-0170","num":"0169"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtUnregisterKey("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"HKEYREGISTRATION hKeyRegistration);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0171","num":"0170"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"hKeyRegistration","handle to the key to unregister"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A DrtStartSearch function starts a search for a given key through the DRT using the criteria specified in the DRT_SEARCH_INFO. The handle specified is signaled when a search result is found. The application then calls DrtGetSearchResult to get the search result.",{"@attributes":{"id":"p-0173","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"HRESULT WINAPI DrtStartSearch("}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"HDRT hDrt,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_DATA *pKey,"]},{"entry":[{},{"sub":"\u2014\u2014"},"const DRT_SEARCH_INFO *pInfo,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ULONG timeout,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"HANDLE hEvent,"]},{"entry":[{},{"sub":"\u2014\u2014"},"const PVOID pvContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"HDRT_SEARCH_CONTEXT* hSearchContext);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0174","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["hDrt","Handle to the DRT instance"]},{"entry":["pKey","The key to search for (e.g., the Target Key)"]},{"entry":["pInfo","Structure used to alter the behavior of the search."]},{"entry":["dwTimeout","Time (e.g., milliseconds) until operation is terminated"]},{"entry":[{},"and DRT_E_TIMEOUT is returned to pCallback"]},{"entry":[{},"function."]},{"entry":["hEvent","Handle to the event that should be signaled when this"]},{"entry":[{},"API finishes or when a result is received during an"]},{"entry":[{},"iterative search."]},{"entry":["pvContext","Context pointer to pass to the app through the event."]},{"entry":["hSearchContext","Handle used in the call to DrtEndSearch"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A DrtContinueSearch function continues a DRT_SEARCH_RETURN_PATH search for a particular key in a DRT. This API can be called anytime after a search has been issued. It will cause the search to continue, and results will continue being returned via the DRT_SEARCH_RESULT event.",{"@attributes":{"id":"p-0176","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtContinueSearch("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0177","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["hSearchContext","Handle to the search context to close - returned from"]},{"entry":[{},"DrtStartSearch"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"After the search event is signaled, this DrtGetSearchResult API allows the caller to retrieve the search result. While the queue has search results, the API will return S_OK. The application should continue to loop using this API, while receiving S_OK. When the queue is empty, the API will return DRT_E_SEARCH_IN_PROGRESS or DRT_E_NO_MORE. If DRT_E_SEARCH_IN_PROGRESS is returned, the search is not complete, and the application should continue to wait on the event handle. If DRT_E_NO_MORE is returned, the search is complete, and the application should no longer continue to wait on the event handle.",{"@attributes":{"id":"p-0179","num":"0178"},"tables":{"@attributes":{"id":"TABLE-US-00072","num":"00072"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtGetSearchResult("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"HDRT_SEARCH_CONTEXT hSearchContext,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_SEARCH_RESULT **ppSearchResult);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0180","num":"0179"},"tables":{"@attributes":{"id":"TABLE-US-00073","num":"00073"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["hSearchContext","Handle to the search context to close - returned from"]},{"entry":[{},"DrtStartSearch"]},{"entry":["ppSearchResult","Pointer to a pointer with the search result"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A DrtEndSearch function ends a search for a particular key in a DRT. This API can be called anytime after a search has been issued. It will cause the search to be cancelled, and results will stop being returned via the DRT_SEARCH_RESULT event. This API is called after the application receives the DRT_E_NO_MORE hresult from the search event.",{"@attributes":{"id":"p-0182","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00074","num":"00074"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtEndSearch("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0183","num":"0182"},"tables":{"@attributes":{"id":"TABLE-US-00075","num":"00075"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["hSearchContext","Handle to the search context to close - returned from"]},{"entry":[{},"DrtStartSearch"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A DrtGetEventData function gets the event data associated with an event when the event is signaled.",{"@attributes":{"id":"p-0185","num":"0184"},"tables":{"@attributes":{"id":"TABLE-US-00076","num":"00076"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI DrtGetEventData("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"},"HDRT hDrt,"]},{"entry":[{},{"sub":"\u2014\u2014"},"DRT_EVENT_DATA **ppEventData);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0186","num":"0185"},"tables":{"@attributes":{"id":"TABLE-US-00077","num":"00077"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"hDrt","Handle to the DRT for which the event occurred"]},{"entry":[{},"ppEventData","Pointer to a pointer containing the event data"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A DrtFreeData function frees data returned to the caller via a DRT API such as DrtGetEventData. An application only has to call DrtFreeData once with the pointer given back by the GetEventData. The application does not have to call it for each contained pointer in the structure that is returned.",{"@attributes":{"id":"p-0188","num":"0187"},"tables":{"@attributes":{"id":"TABLE-US-00078","num":"00078"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VOID WINAPI DrtFreeData(PVOID pvData);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"sub":"\u2014\u2014"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0189","num":"0188"},"tables":{"@attributes":{"id":"TABLE-US-00079","num":"00079"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"pvData","Pointer to the data structure allocated by the DRT API"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"As used in this application, the terms \u201ccomponent\u201d and \u201csystem\u201d are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component can be, but is not limited to being, a process running on a processor, a processor, a hard disk drive, multiple storage drives (of optical and\/or magnetic storage medium), an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and\/or thread of execution, and a component can be localized on one computer and\/or distributed between two or more computers.","Referring now to , there is illustrated a block diagram of a computing system  operable to execute the disclosed DRT architecture. In order to provide additional context for various aspects thereof,  and the following discussion are intended to provide a brief, general description of a suitable computing system  in which the various aspects can be implemented. While the description above is in the general context of computer-executable instructions that may run on one or more computers, those skilled in the art will recognize that the novel architecture also can be implemented in combination with other program modules and\/or as a combination of hardware and software.","Generally, program modules include routines, programs, components, data structures, etc., that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the inventive methods can be practiced with other computer system configurations, including single-processor or multiprocessor computer systems, minicomputers, mainframe computers, as well as personal computers, hand-held computing devices, microprocessor-based or programmable consumer electronics, and the like, each of which can be operatively coupled to one or more associated devices.","The illustrated aspects may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules can be located in both local and remote memory storage devices.","A computer typically includes a variety of computer-readable media. Computer-readable media can be any available media that can be accessed by the computer and includes volatile and non-volatile media, removable and non-removable media. By way of example, and not limitation, computer-readable media can comprise computer storage media and communication media. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital video disk (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer.","With reference again to , the exemplary computing system  for implementing various aspects includes a computer , the computer  including a processing unit , a system memory  and a system bus . The system bus  provides an interface for system components including, but not limited to, the system memory  to the processing unit . The processing unit  can be any of various commercially available processors. Dual microprocessors and other multi-processor architectures may also be employed as the processing unit .","The system bus  can be any of several types of bus structure that may further interconnect to a memory bus (with or without a memory controller), a peripheral bus, and a local bus using any of a variety of commercially available bus architectures. The system memory  includes read-only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) is stored in a non-volatile memory  such as ROM, EPROM, EEPROM, which BIOS contains the basic routines that help to transfer information between elements within the computer , such as during start-up. The RAM  can also include a high-speed RAM such as static RAM for caching data.","The computer  further includes an internal hard disk drive (HDD)  (e.g., EIDE, SATA), which internal hard disk drive  may also be configured for external use in a suitable chassis (not shown), a magnetic floppy disk drive (FDD) , (e.g., to read from or write to a removable diskette ) and an optical disk drive , (e.g., reading a CD-ROM disk  or, to read from or write to other high capacity optical media such as the DVD). The hard disk drive , magnetic disk drive  and optical disk drive  can be connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface  and an optical drive interface , respectively. The interface  for external drive implementations includes at least one or both of Universal Serial Bus (USB) and IEEE 1394 interface technologies.","The drives and their associated computer-readable media provide nonvolatile storage of data, data structures, computer-executable instructions, and so forth. For the computer , the drives and media accommodate the storage of any data in a suitable digital format. Although the description of computer-readable media above refers to a HDD, a removable magnetic diskette, and a removable optical media such as a CD or DVD, it should be appreciated by those skilled in the art that other types of media which are readable by a computer, such as zip drives, magnetic cassettes, flash memory cards, cartridges, and the like, may also be used in the exemplary operating environment, and further, that any such media may contain computer-executable instructions for performing the methods of the disclosed architecture.","A number of program modules can be stored in the drives and RAM , including an operating system , one or more application programs , other program modules  and program data . All or portions of the operating system, applications, modules, and\/or data can also be cached in the RAM . It is to be appreciated that the disclosed architecture can be implemented with various commercially available operating systems or combinations of operating systems. The modules  and\/or programs  can include the API and DRT functionality for serverless collaboration.","A user can enter commands and information into the computer  through one or more wired\/wireless input devices, for example, a keyboard  and a pointing device, such as a mouse . Other input devices (not shown) may include a microphone, an IR remote control, a joystick, a game pad, a stylus pen, touch screen, or the like. These and other input devices are often connected to the processing unit  through an input device interface  that is coupled to the system bus , but can be connected by other interfaces, such as a parallel port, an IEEE 1394 serial port, a game port, a USB port, an IR interface, etc.","A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , a computer typically includes other peripheral output devices (not shown), such as speakers, printers, etc.","The computer  may operate in a networked environment using logical connections via wired and\/or wireless communications to one or more remote computers, such as a remote computer(s) . The remote computer(s)  can be a workstation, a server computer, a router, a personal computer, portable computer, microprocessor-based entertainment appliance, a peer device or other common network node, and typically includes many or all of the elements described relative to the computer , although, for purposes of brevity, only a memory\/storage device  is illustrated. The logical connections depicted include wired\/wireless connectivity to a local area network (LAN)  and\/or larger networks, for example, a wide area network (WAN) . Such LAN and WAN networking environments are commonplace in offices and companies, and facilitate enterprise-wide computer networks, such as intranets, all of which may connect to a global communications network, for example, the Internet.","When used in a LAN networking environment, the computer  is connected to the local network  through a wired and\/or wireless communication network interface or adapter . The adaptor  may facilitate wired or wireless communication to the LAN , which may also include a wireless access point disposed thereon for communicating with the wireless adaptor .","When used in a WAN networking environment, the computer  can include a modem , or is connected to a communications server on the WAN , or has other means for establishing communications over the WAN , such as by way of the Internet. The modem , which can be internal or external and a wired or wireless device, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, can be stored in the remote memory\/storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.","The computer  is operable to communicate with any wireless devices or entities operatively disposed in wireless communication, for example, a printer, scanner, desktop and\/or portable computer, portable data assistant, communications satellite, any piece of equipment or location associated with a wirelessly detectable tag (e.g., a kiosk, news stand, restroom), and telephone. This includes at least Wi-Fi and Bluetooth\u2122 wireless technologies. Thus, the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices.","Referring now to , there is illustrated a schematic block diagram of an exemplary computing environment  that facilitates mesh node access via the disclosed DRT API. The system  includes one or more client(s) . The client(s)  can be hardware and\/or software (e.g., threads, processes, computing devices). The client(s)  can house cookie(s) and\/or associated contextual information, for example.","The system  also includes one or more server(s) . The server(s)  can also be hardware and\/or software (e.g., threads, processes, computing devices). The servers  can house threads to perform transformations by employing the architecture, for example. One possible communication between a client  and a server  can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and\/or associated contextual information, for example. The system  includes a communication framework  (e.g., a global communication network such as the Internet) that can be employed to facilitate communications between the client(s)  and the server(s) .","Communications can be facilitated via a wired (including optical fiber) and\/or wireless technology. The client(s)  are operatively connected to one or more client data store(s)  that can be employed to store information local to the client(s)  (e.g., cookie(s) and\/or associated contextual information). Similarly, the server(s)  are operatively connected to one or more server data store(s)  that can be employed to store information local to the servers .","Although illustrated as a client\/server environment, the clients  can be associated with the devices illustrated in , including but limited to the desktop computers, laptop computer(s), portable terminal device and servers. In other words, collaboration can be obtained with server systems (e.g., servers ) independent of a need for a service in order for the collaboration over the mesh.","What has been described above includes examples of the disclosed architecture. It is, of course, not possible to describe every conceivable combination of components and\/or methodologies, but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly, the novel architecture is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims. Furthermore, to the extent that the term \u201cincludes\u201d is used in either the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as \u201ccomprising\u201d is interpreted when employed as a transitional word in a claim."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
