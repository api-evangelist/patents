---
title: Multi-view runtime interrogator
abstract: Methods, computer systems and computer readable media for designing and displaying device and platform-specific forms are provided. In embodiments, base forms are utilized and modified to create custom forms that are platform and device specific, without breaking the parent-child relationship between the base form and the custom form for any non-modified characteristics of the base form. Custom forms enhance the performance and appearance. In embodiments, interrogators are executed at runtime to specify a set of instructions that will be executed, further enhancing the performance and appearance associated with the form and the particular device displaying the form. In various embodiments of the present invention, user interfaces provide the designer visual representations of the forms as they appear on selected platforms and/or devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09575949&OS=09575949&RS=09575949
owner: Data Systems International, Inc.
number: 09575949
owner_city: Overland Park
owner_country: US
publication_date: 20110411
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is related to commonly assigned U.S. Patent Application entitled \u201cMulti-view Form Design\u201d filed concurrently herewith on the same date.","Business applications (e.g., forms) are often written to run on mobile devices. This requires the application to run on multiple platforms. In some instances, the same application is written multiple times utilizing platform-specific tools. This can be extremely time consuming and is often impractical due to a lack of appropriate skill sets. In other instances, a scripting language, such as HyperText Markup Language (HTML), is utilized to provide a one-size-fits-all solution that can run on all platforms. However, this solution is also limited to the capabilities of a particular device or platform. The look and feel of an application is often very proprietary in nature, and maintaining that look and feel with a scripting language alone is nearly impossible. Another option is to utilize a multi-platform tool to develop an application that can run on all platforms without duplication of effort. However, even this solution cannot solve the look and feel problem. Screen elements and attributes, such as size, are limited to the \u201cleast common denominator\u201d (i.e., the device with the most limitations, or the least capabilities, for an attribute such as size).","Embodiments of the present invention relate to systems, methods, and computer storage media for designing and displaying applications for multiple platforms and devices. In one embodiment, one or more computer storage media storing computer-executable instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform a method for designing a platform-specific form. The method includes receiving, on a device, instructions for displaying a custom form. The device is scanned with an interrogator to identify hardware characteristics. Similarly, the device is scanned with the interrogator to identify other characteristics. At least a portion of the instructions are executed based on the hardware and other characteristics identified by the interrogator. The custom form is displayed based on the at least a portion of the instructions that are executed.","In another embodiment, one or more computer storage media storing computer-executable instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform a method for designing a platform-specific form. The method includes transmitting instructions to a device for displaying a custom form. A first portion of the instructions are executed to scan a device for characteristics. A second portion of the instructions are executed based on the characteristics. The custom form is presented to the device based on the second portion of the instructions that are executed.","In yet another embodiment, a computer system for displaying a custom form on a device comprises a processor coupled to a computer storage medium, the computer storage medium having stored thereon a plurality of computer software components executable by the processor. The computer software components comprise an instruction receiving component for receiving instructions for displaying a custom form. A device is scanned with an interrogator component. A runtime component executes at least a portion of the instructions based on the characteristics. The custom form is displayed by a display component based on the at least a portion of the instructions that are executed by the runtime component.","In another embodiment, one or more computer storage media storing computer-executable instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform a method for designing a platform-specific form. The method comprises receiving a base form. A selection of a particular platform is received and a platform-specific view of the base form is presented. Custom design form parameters are received for the particular platform. The base form for the particular platform is modified and a platform-specific view of the custom form is presented.","In another embodiment of the present invention, a graphical user interface (GUI) is stored on one or more computer-readable media and executable by a computing device. The GUI comprises a first display area configured for displaying a view of a base form. The GUI further comprises a second display area configured for receiving a selection of a particular platform. The GUI further comprises a third display area configured for receiving a modification of a characteristic of the base form. The GUI further comprises a fourth display area configured for displaying the altered view corresponding with the modification. The GUI further comprises a fifth display area configured for saving the altered view as a custom form for the particular platform.","In yet another embodiment, a computer system for designing a platform-specific form on a device comprises a processor coupled to a computer storage medium, the computer storage medium having stored thereon a plurality of computer software components executable by the processor. The computer software components comprise a base form design component for designing a base form. A platform is selected with a platform selection component. A platform-specific view of the base form is presented with a platform-specific view component. Parameters of the base form are modified with a custom design form component.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter.","The subject matter of the present invention is described with specificity herein to meet statutory requirements. However, the description itself is not intended to limit the scope of this patent. Rather, the inventors have contemplated that the claimed subject matter might also be embodied in other ways, to include different steps or combinations of steps similar to the ones described in this document, in conjunction with other present or future technologies. Moreover, although the terms \u201cstep\u201d and\/or \u201cblock\u201d might be used herein to connote different elements of methods employed, the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly stated.","Embodiments of the present invention are directed to methods, computer systems and computer readable media for designing platform-specific forms. Operators are able to tailor modifications to a base form to each desired platform to enhance the performance and appearance associated with the form, and without breaking the parent-child relationship between the base form and the custom form for any non-modified characteristics of the base form. Embodiments of the present invention are directed to methods, computer systems and computer readable media for displaying device-specific forms. An interrogator is executed at runtime to specify a set of instructions that will be executed, further enhancing the performance and appearance associated with the form and the particular device displaying the form. In various embodiments of the present invention, user interfaces provide the designer visual representations of the forms as they appear on selected platforms and\/or devices. Accordingly, an efficient multi-platform design tool not limited by the \u201cleast common denominator\u201d and able to provide a customized look and feel for applications for each platform and\/or device is provided.","Having briefly described embodiments of the present invention, an exemplary operating environment suitable for use in implementing embodiments of the present invention is described below. Referring to  an exemplary computing environment with which embodiments of the present invention may be implemented is illustrated and designated generally as reference numeral . The computing environment  is merely an example of one suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Neither should the computing environment  be interpreted as having any dependency or requirement relating to any single component or combination of components illustrated therein.","The present invention might be operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that might be suitable for use with the present invention include personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above-mentioned systems or devices, and the like.","The present invention might be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Exemplary program modules include routines, programs, objects, components, and data structures that perform particular tasks or implement particular abstract data types. The present invention might be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules might be located in association with local and\/or remote computer storage media (e.g., memory storage devices).","With continued reference to , the computing environment  includes a general purpose computing device in the form of an application server . Exemplary components of the application server  include a processing unit, internal system memory, and a suitable system bus for coupling various system components, including database cluster , with the application server . The system bus might be any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, and a local bus, using any of a variety of bus architectures. Exemplary architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronic Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus, also known as Mezzanine bus.","The application server  typically includes therein, or has access to, a variety of computer-readable media, for instance, database cluster . Computer-readable media can be any available media that might be accessed by application server , and includes volatile and nonvolatile media, as well as, removable and nonremovable media. Computer-readable media might include computer storage media. Computer storage media includes volatile and nonvolatile media, as well as, removable and nonremovable media implemented in any method or technology for storage of information, such as computer-readable instructions, data structures, program modules, or other data. In this regard, computer storage media might include RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVDs) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage, or other magnetic storage device, or any other medium which can be used to store the desired information and which may be accessed by the application server . Combinations of any of the above also may be included within the scope of computer-readable media.","The computer storage media discussed above and illustrated in , including database cluster , provide storage of computer-executable instructions, data structures, program modules, and other data for the application server .","The application server  might operate in a computer network  using logical connections to one or more remote mobile devices . The remote mobile devices  might be personal computers, servers, routers, network PCs, peer devices, other common network nodes, or the like and might include some or all of the elements described above in relation to the application server . The devices can be personal digital assistants or other similar devices.","Exemplary computer networks  include local area networks (LANs) and\/or wide area networks (WANs). Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet. When utilized in a WAN networking environment, the application server  might include a modem or other means for establishing communications over the WAN, such as the Internet. In a networked environment, program modules or portions thereof might be stored in association with the application server , the database cluster , or any of the remote mobile devices . For example, various application programs may reside on the memory associated with any one or more of the remote mobile devices . It will be appreciated by those of ordinary skill in the art that the network connections shown are exemplary and other means of establishing a communications link between the computers (e.g., application server  and application designer  and remote mobile devices ) might be utilized.","In operation, an operator might enter commands and information into the one or more remote mobile devices  or the application designer  or convey the commands and information to the application server  through input devices, such as a keyboard, a pointing device (commonly referred to as a mouse), a trackball, or a touch pad. In embodiments, such commands and information are communicated to the application server  and applications stored in the database cluster  are communicated or executed on one or more of the remote mobile devices . In other embodiments, such commands and information are communicated to the application server  and at least portions of applications stored in the database cluster  are modified and displayed on the application designer . Other input devices include microphones, satellite dishes, scanners, or the like. Commands and information might also be sent directly from a remote mobile device  or the application designer  to the application server . In one embodiment, the application server  and the application designer  reside on the same physical computing device.","Although many other internal components of the application server , application designer  and the remote mobile devices  are not shown, those of ordinary skill in the art will appreciate that such components and their interconnection are well known. Accordingly, additional details concerning the internal construction of the application server , application designer  and the remote mobile devices  are not further disclosed herein.","Referring now to , a block diagram is provided illustrating an exemplary remote mobile device  in accordance with embodiments of the present invention. As shown in , the remote mobile device may include an instruction receiving component , an interrogator component , a runtime component , and a display component . In various embodiments, the remote mobile device  may also include a device information component (not shown) and an alternate display component (not shown). In various embodiments, at least a portion of the components do not physically reside in the remote mobile device .","The instruction receiving component  receives instructions for displaying a custom form. In one embodiment, the instructions are communicated by the application server. In another embodiment, the instructions are communicated by another remote mobile device . The instructions include programming code for, in part, running an application, such as for displaying a custom form, on the remote mobile device . An interrogator component  scans the remote mobile device for characteristics of the mobile device. In one embodiment, the interrogator component  utilizes a portion of the instructions to scan the remote mobile device. In various embodiments, the characteristics include hardware characteristics associated with the remote mobile device  such as the presence of a camera or video recorder. In various embodiments, the characteristics include platform characteristics associated with the remote mobile device  such as the operating system and operating system version. In various embodiments, the characteristics include software characteristics such as the presence and version of specific software components. A runtime component  determines which of the instructions received by the instruction receiving component  to execute based on the characteristics identified by the interrogator component . The runtime component  then executes at least a portion of the instructions based on this determination. A display component  displays the custom form based on the portion of the instructions received by the instruction receiving component  that are executed by the runtime component.","In one embodiment, a device information component (not shown) communicates device information to another mobile device or the application server. Based on the device information, the appropriate set of instructions is communicated to the instruction receiving component. In one embodiment, the device information includes a device type, a device platform, or a combination thereof.","In another embodiment, an alternate display component displays an alternate portion of the custom form based on an inconsistency between the portion of instructions that are executed by the runtime component and the hardware characteristics, the software characteristics, the device information, or a combination thereof. An inconsistency may exist if, for example, the interrogator component determines that the mobile device includes a camera but when the runtime component executes the portion of instructions directed to a camera function, the camera is disabled. Rather than causing the application or form to fail, the alternate display component displays an alternate portion of the custom form that provides another mode for receiving similar information but does not require the camera function. In one embodiment, the interrogator component identifies changes in the characteristics such as described in this example and communicates with the alternate display component as needed.","Referring now to , a block diagram is provided illustrating an exemplary application designer  in accordance with embodiments of the present invention. As shown in , the application designer may include a base form design component , a platform selection component , a platform-specific view component , and a custom design form component . In various embodiments, the application designer  may also include a custom design form view component (not shown) and a compare component (not shown). In various embodiments, at least a portion of the components reside in the application server , shown in .","The base form design component  receives a design for a base form. The base form is initially designed to provide a base form that is usable by any device or platform. A platform selection component  receives a selection of a platform. A platform-specific view component presents a platform-specific view of the base form. The platform-specific view provides an operator (i.e., a programmer, application designer, customer user, or application developer) a visual of what the base form would look like on a specific platform or device. In particular, the operator can determine whether it is necessary to modify the base form to conform to standards associated with the specific platform or device. A custom design form component  provides the functionality necessary to achieve this by receiving modifications to parameters (i.e., characteristics) of the base form.","In one embodiment, a custom design form view component presents a view of the base form with modified parameters (e.g., the custom form). This view allows the programmer to determine if the desired results were achieved and the custom form conforms to requirements for the specific platform or device.","In one embodiment, a compare component presents more than one view. For instance, an operator may wish to compare views of more than one specific platform in a side-by-side fashion. It may also be desirable to compare a before (e.g., base form) and after (e.g., custom) view in a side-by-side fashion.","Referring now to , an illustrative graphical user interface is shown for receiving a selection of a particular platform. An operator begins designing the application or form with a generic view of the user interface. This base form does not represent any particular platform's style and is generic or \u201cwire-frame\u201d in nature. Once the base form is defined, the application developer creates a platform-specific view, or a custom form. A custom form  is added to the hierarchy for Windows Mobile devices. The base form is utilized as a starting point for the custom form and modifications to the base form are saved into the hierarchy. Ad-hoc creation of new device viewing profiles is also supported in embodiments of the invention. Device profiles can be created for a number of devices running any number of platforms such as Windows\u00ae, RIM, iOS, Android\u2122, Symbian, Swing, Silverlight, MeeGo, or Adobe\u00ae Flash\u00ae.","Referring to , an illustrative graphical user interface is shown for receiving a selection of a particular platform. As is apparent, the list of possible viewing scenarios increases as new platforms or profiles are added and new custom forms are created and the view tree grows. In one embodiment, the list can be filtered to eliminate platform choices that are rarely or never used. When an operator desires to set up a new profile in the view tree, the operator simply selects the system-defined platform the new profile is a child of, and provides information such as profile name, screen dimensions, screen density. In addition, the operator can set a flag to indicate whether the device supports orientation detection and switching (i.e., portrait, landscape). The new custom form can then be created by modifying the base form as described herein. An alternate orientation  will be added if the orientation support flag is set.","Once a platform is selected, the editor displays the form as it would appear on the selected platform. In particular, the form is displayed to match the platform's style, control appearance, size limitations, or other characteristics that may influence the look and feel of the form. If the base form as displayed does not meet the expectations of the operator or the standards of the particular platform or device, then modifications may be made to override characteristics or otherwise modify the look and feel of the form. In embodiments, these modifications may include the addition or deletion of characteristics of the form. Customized platform-specific views  appear in bold.","Referring now to , illustrative graphical user interfaces are shown to depict a base form () and various platform specific views (). In particular,  illustrates an example of what a base form may look like. Form Controls  and Data Controls  are utilized by the programmer to design the appearance of the base form . Once the base form is designed, the programmer can select another node from the view tree and the base from is presented as it would appear on the selected platform or device. For example,  illustrates a Blackberry\u00ae view  of the base form. The primary difference in this example is in the background. Similarly,  illustrates an Apple\u00ae iOS view  of the base form. In this particular example, the appearance of the AVAILABLE control  is slightly different. The Android\u00ae view  of the base form, illustrated in , also identifies a different appearance in the background  and in the AVAILABLE control . As is apparent, these views of the base from as they appear on various platforms and devices are very useful to a programmer to assist the programmer in maintaining consistency and proper formatting and appearance that may be desired or required by the users or makers of a particular device or platform.","Referring now to , an illustrative graphical user interface demonstrates an Apple\u00ae iOS view  of the base form with control property overrides. Simply put, the custom view  represents the changes or modifications made to the base form by the programmer to meet the desires or requirements described above. For example, the ITEM control  and the UOM control  have increased in size horizontally. The AVAILABLE control  has been modified slightly in appearance and moved to a justified position on the right-hand side of the form.","As is apparent, many other controls and properties not described in the example above or herein are easily modified by the present invention. Some of these controls include buttons, text boxes, drop-down boxes, date pickers, list boxes, labels, panels, check boxes, radio buttons, tab containers, signature boxes, images, and tabs. Properties associated with these controls include position (i.e., left, top), size (i.e., width, height), enabled, visible, font type, font size, font style, foreground and background colors, images, password, date ranges, data source, anchors, images, image placement.","Optional code branching is supported by the present invention and drives the interrogator. For example, the forms created by the application designer include code to check the platform of the device running the form. In addition, system variables are created for each device capability that may or may not be present on a particular platform or device. Values for these system variables are returned indicating whether the functionality associated with that particular variable is supported or not. This allows the operator to write an application or form that can run on multiple platforms or devices with minor functionality differences based on device capabilities. Some of these capabilities may include signature capture, forms, database, repository, file system, image capture, custom application programming interface (API), shell commands, radio frequency identification (RFID), voice recognition, and global positioning system (GPS).","Referring now to , a flow diagram and an illustrative graphical user interface provide an example of the logic flow for verifying that a camera is available that the appropriate controls are visible and the resulting user interface. For example, at step , a value for a system variable determines whether the device is capable of capturing images. If that value is true, then at step , an image display  is displayed. Similarly, at step , a button  appears for taking a picture. Because a camera is available, at steps  and , the text notes and the no camera label are hidden.","If, however, at step , the value for the system variable is false, then the device does not have a camera available. At steps  and , values for the image display and the button are false. In this instance, at step , the value for the no camera label is true and the message \u201cNo Camera Available, Describe the Work Performed\u201d appears in the no camera label section  in place of the button . At step , the value for the text notes is true and the text box  appears in place of the image display .","Turning now to , an illustrative flow diagram  is shown of a method for designing and displaying a device- and\/or platform-specific form. Initially, a base form is received at step . At step , a selection of a particular platform is received. A platform-specific view of the base form is received at step . In one embodiment, a selection of a different platform is received and the different platform-specific view is presented. In another embodiment, the particular platform and the different platform are presented side-by-side. At step , custom form parameters are received for the particular platform. The base form for the particular platform is modified with the custom design form parameters at step . In one embodiment, modifying the base form comprises editing properties associated with the base form. At step , a platform-specific view of the custom form is presented.","In one embodiment, the custom form and the base form are presented side-by-side. This view allows the operator to determine if the goals of the modifications to the base form were achieved. In one embodiment, the custom form is saved. In one embodiment, after the custom form is saved, an operator can select a different platform for the custom form and is presented with a different platform-specific view of the custom form.","In one embodiment, the modified features that comprise the custom form are saved in a separate branch from the base form. In one embodiment, modifications to the base form that have not been modified in a particular custom form propagate to the particular custom form. In one embodiment, modifications to the base form that have been modified in a particular custom form do no propagate to the particular custom form. These embodiments each allow modifications to the parent, or base form, to propagate only to the child nodes, custom forms, where appropriate.","Turning now to , an illustrative flow diagram  is shown of a method for displaying a device- and\/or platform-specific form on a device. Instructions for displaying a custom form are received at step . At step , a device is scanned with an interrogator for hardware characteristics. In one embodiment, hardware characteristics include capabilities of the device. In one embodiment, the instructions for displaying a custom form include code comprising the interrogator. The device is also scanned with the interrogator for other characteristics at step . In one embodiment, other characteristics include a platform associated with the device. In one embodiment, other characteristics include firmware associated with the device. At least a portion of the instructions are executed, at step , based on the hardware and other characteristics identified by the interrogator. The custom form is displayed based on the at least a portion of the instructions that are executed at step .","In one embodiment, controls are set as visible based on the hardware characteristics, other characteristics, or a combination thereof. In one embodiment, controls are set as invisible based on the hardware characteristics, other characteristics, or a combination thereof. In this respect, the logic that determines the controls associated with the form may be embedded in the code itself.","Turning now to , an illustrative flow diagram  is shown of a method for displaying a device- and\/or platform-specific form. At step , instructions are communicated to a device for displaying a custom form. A first portion of the instructions are executed, at step , to scan a device for characteristics. At step , a second portion of the instructions are executed based on the characteristics. The custom form is presented to the device, at step , based on the second portion of the instructions that are executed.","In one embodiment, device information is also received. The device information may include a device type, a device platform, or a combination thereof. In one embodiment, each portion of the instructions that are executed is dependent upon the device information. In one embodiment, the instructions communicated to the device are dependent upon the device information.","In one embodiment, an alternate portion of the custom form is presented based on an inconsistency between the second portion of the instructions that are executed and the hardware characteristics, the other characteristics, the device information, or a combination thereof.","Many different arrangements of the various components depicted, as well as components not shown, are possible without departing from the scope of the claims below. Embodiments of our technology have been described with the intent to be illustrative rather than restrictive. Alternative embodiments will become apparent to readers of this disclosure after and because of reading it. Alternative means of implementing the aforementioned can be completed without departing from the scope of the claims below. Certain features and subcombinations are of utility and may be employed without reference to other features and subcombinations and are contemplated within the scope of the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments are described in detail below with reference to the attached drawing figures, wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 1-3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 4-10"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 13-15"}]},"DETDESC":[{},{}]}
