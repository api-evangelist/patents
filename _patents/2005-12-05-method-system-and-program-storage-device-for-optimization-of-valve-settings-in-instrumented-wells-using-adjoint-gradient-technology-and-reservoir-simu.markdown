---
title: Method system and program storage device for optimization of valve settings in instrumented wells using adjoint gradient technology and reservoir simulation
abstract: A new adjoint method for calculating and using adjoint gradients in a Reservoir Simulator comprises: calculating adjoint gradients of an objective function with respect to changes in valve settings taking into account the modeling of pressure drop and fluid flow along a wellbore, and using the adjoint gradients to calculate sensitivities of a reservoir to changes in parameterization of downhole devices and using of these sensitivities in optimal control of the wells to optimize some objective function subject to production constraints.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07640149&OS=07640149&RS=07640149
owner: Schlumberger Technology Corporation
number: 07640149
owner_city: Sugar Land
owner_country: US
publication_date: 20051205
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DESCRIPTION"],"p":["This specification is a Utility Application of Provisional Application Ser. No. 60\/636,202, filed Dec. 15, 2004, and entitled \u2018Method Apparatus and System for Optimization of Valve Settings in Instrumented Wells Using Adjoint Gradient Technology and Reservoir Simulation\u2019.","The subject matter of this specification relates to a new Adjoint Method (and associated System and Program Storage Device) for Calculating Gradients, and, in particular, to an Adjoint Method for Calculating Gradients of an objective function with respect to changes in valve settings, while taking into account the modeling of pressure drop and fluid flow along a wellbore, for more effectively and efficiently optimizing settings of control valves for reservoir production.","Controllable down-hole devices have made feasible the implementation of advanced well control strategies for achieving an objective, such as maximizing hydrocarbon recovery or net present value. However, the development of algorithms for determining the best strategy for controlling these devices, subject to production and injection constraints, is still an area of active research, and generally involves implementation of some form of control logic within a reservoir simulation workflow.","Some \u2018control strategies\u2019 for controlling these devices are reactive, meaning that interventions are made when local conditions are met at particular wells or valves, without taking into account the future effect of the intervention on the entire reservoir. Moreover, with this approach, it may already be too late to intervene to prevent unwanted breakthrough. These production rule methods tend to be heuristic, but are very efficient in reservoir simulation. Alternative proactive control strategies apply to the lifetime of the field, and thus provide a mechanism to control fluid flow early enough to delay breakthrough. These \u2018alternative proactive control strategies\u2019 for controlling these devices can be divided into at least two methods: (1) \u2018stochastic\u2019 methods, such as Monte Carlo which investigate the effect of a large number of possible strategies, and (2) \u2018deterministic\u2019 methods which set the behavior of each well and valve based on its effect on the objective. This specification includes a \u2018proactive deterministic constrained optimization method\u2019 associated with the aforementioned \u2018alternative proactive control strategies\u2019 adapted for controlling the aforementioned \u2018controllable downhole devices\u2019. In particular, this specification includes a first application of adjoint gradients to control and optimize settings in a multi-segmented well model.","One aspect of the \u2018Adjoint Method of Calculating Gradients\u2019 as described in this specification involves a method for calculating and using adjoint gradients in a reservoir simulator, comprising: calculating adjoint gradients of an objective function with respect to changes in valve settings while taking into account a modeling of pressure drop and fluid flow along a wellbore; in response to the calculated adjoint gradients, calculating sensitivities of a reservoir responsive to changes in parameterization of downhole devices; and in response to the calculated sensitivities, using said sensitivities to optimize control of wells in a reservoir by optimizing an objective function.","Another aspect of the \u2018Adjoint Method of Calculating Gradients\u2019 as described in this specification involves a method for optimizing production of a reservoir having one or more wells having valves, comprising: (a) running a reservoir simulator in a forward simulation to simulate the life of the reservoir; (b) processing outputs from the forward simulation to generate intermediate partial derivatives of flow equations for the well and for the reservoir; (c) combining the intermediate partial derivatives of the well flow equations and the reservoir flow equations in the reservoir simulator; (d) solving a large adjoint system of linear equations at regular time intervals to calculate the adjoint gradients of an objective function with respect to the control parameters; (e) determining from the adjoint gradients a search direction; (f) using the search direction to solve an optimization algorithm that maximizes the objective function using line-search methods; (g) locating a local maximum along the search direction and updating control parameters; (h) using the new updated control parameters in the reservoir simulator; and (i) repeating steps (a)-(i) until an optimal value of the objective function has been reached.","Another aspect of the \u2018Adjoint Method of Calculating Gradients\u2019 as described in this specification involves a program storage device readable by a machine tangibly embodying a set of instructions executable by the machine to perform method steps for calculating and using adjoint gradients in a reservoir simulator, said method steps comprising: calculating adjoint gradients of an objective function with respect to changes in valve settings while taking into account a modeling of pressure drop and fluid flow along a wellbore; in response to the calculated adjoint gradients, calculating sensitivities of a reservoir responsive to changes in parameterization of downhole devices; and in response to the calculated sensitivities, using said sensitivities to optimize control of wells in a reservoir by optimizing an objective function.","Another aspect of the \u2018Adjoint Method of Calculating Gradients\u2019 as described in this specification involves a program storage device readable by a machine tangibly embodying a set of instructions executable by the machine to perform method steps for optimizing production of a reservoir having one or more wells having valves, said method steps comprising: (a) running a reservoir simulator in a forward simulation to simulate the life of the reservoir; (b) processing outputs from the forward simulation to generate intermediate partial derivatives of flow equations for the well and for the reservoir; (c) combining the intermediate partial derivatives of the well flow equations and the reservoir flow equations in the reservoir simulator; (d) solving a large adjoint system of linear equations at regular time intervals to calculate the adjoint gradients of an objective function with respect to the control parameters; (e) determining from the adjoint gradients a search direction; (f) using the search direction to solve an optimization algorithm that maximizes the objective function using line-search methods; (g) locating a local maximum along the search direction and updating control parameters; (h) using the new updated control parameters in the reservoir simulator; and (i) repeating steps (a)-(i) until an optimal value of the objective function has been reached.","Another aspect of the \u2018Adjoint Method of Calculating Gradients\u2019 as described in this specification involves a system adapted for calculating and using adjoint gradients in a reservoir simulator, comprising: first apparatus adapted for calculating adjoint gradients of an objective function with respect to changes in valve settings while taking into account a modeling of pressure drop and fluid flow along a wellbore; second apparatus, responsive to the calculated adjoint gradients, adapted for calculating sensitivities of a reservoir responsive to changes in parameterization of downhole devices; and third apparatus, responsive to the calculated sensitivities, adapted for using the sensitivities to optimize control of wells in a reservoir by optimizing an objective function.","Another aspect of the \u2018Adjoint Method of Calculating Gradients\u2019 as described in this specification involves a system adapted for optimizing production of a reservoir having one or more wells having valves, comprising: apparatus adapted for: running a reservoir simulator in a forward simulation to simulate the life of the reservoir; processing outputs from the forward simulation to generate intermediate partial derivatives of flow equations for the well and for the reservoir; combining the intermediate partial derivatives of the well flow equations and the reservoir flow equations in the reservoir simulator; solving an adjoint system of linear equations at regular time intervals to calculate a set of adjoint gradients of an objective function with respect to the control parameters; determining from the adjoint gradients a search direction; using the search direction to solve an optimization algorithm that maximizes the objective function using line-search methods; locating a local maximum along the search direction and updating control parameters; further using the new updated control parameters in the reservoir simulator; and repeating the processing, combining, solving, determining, using, locating, and further using functions performed by the apparatus until an optimal value of the objective function has been reached.","Further scope of applicability will become apparent from the detailed description presented hereinafter. It should be understood, however, that the detailed description and the specific examples set forth below are given by way of illustration only, since various changes and modifications within the spirit and scope of the \u2018Adjoint Method of Calculating Gradients\u2019, as described and claimed in this specification, will become obvious to one skilled in the art from a reading of the following detailed description.","Oil and gas is produced from underground rock formations. These rocks are porous, just like a sponge, and they are filled with fluid, usually water. This porous characteristic of rocks is known as porosity. These rocks in addition to being porous have the ability to allow fluids to flow through the pores, a characteristic measured by a property called permeability. When oil (or gas) is trapped in such formations, it may be possible to extract it by drilling wells that tap into the formation. As long as the pressure in the well is lower than that in the rock formation, the fluids contained in the pores will flow into the well. These fluids may then flow naturally up the well to the surface, or the flow up the well may have to be assisted by pumps. The relative amounts of oil, gas and water that are produced at the surface will depend on the fraction of the rock pore space that is occupied by each type of fluid. Water is always present in the pores, but it will not flow unless its volume fraction exceeds a threshold value that varies from one type of rock to another. Similarly, oil and gas will only flow as long as their volume fractions exceed their own thresholds.","The characteristics of the rock (including porosity and permeability) in an oil reservoir vary greatly from one location to another. As a result, the relative amounts of oil, gas and water that can be produced will also vary from reservoir to reservoir. These variations make it difficult to simply predict the amount of fluids and gases a reservoir will produce and the amount of resources it will require to produce from a particular reservoir. However, the parties interested in producing from a reservoir need to project the production of the reservoir with some accuracy in order to determine the feasibility of producing from that reservoir. Therefore, in order to accurately forecast production rates from all of the wells in a reservoir, it is necessary to build a detailed mathematical model of the reservoir's geology and geometry.","A large amount of research has been focused on the development of reservoir simulation tools. These tools include mathematical and computer models that describe and which are used to predict, the multiphase flow of oil and gas within a three dimensional underground formation (a \u201cfield\u201d). Reservoir tools use empirically acquired data to describe a field. These data are combined with and manipulated by mathematical models whose output describes specified characteristics of the field at a future time and in terms of measurable quantities such as the production or injection rates of individual wells and groups of wells, the bottom hole or tubing head pressure at each well, and the distribution of pressure and fluid phases within the reservoir.","The mathematical model of a reservoir is typically done by dividing the reservoir volume into a large number of interconnected cells and estimating the average permeability, porosity and other rock properties for each cell. This process makes use of seismic data, well logs, and rock cores recovered when wells are drilled. Production from the reservoir can then be mathematically modeled by numerically solving a system of three or more nonlinear, partial differential equations describing fluid flow in the reservoir.","Computer analysis of production from an oil reservoir is usually divided into two phases, history matching and prediction. In the history matching phase, the past production behavior of the reservoir and its wells is repeatedly modeled, beginning with initial production and continuing up to the present time. The first computer run is based on a geological model as described above. After each run, the computer results are compared in detail with data gathered in the oil field during the entire period of production. Geoscientists modify the geological model of the reservoir on the basis of the differences between computed and actual production performance and rerun the computer model. This process continues until the mathematical reservoir model behaves like the real oil reservoir.","Once a suitable history match has been obtained, production from the oil reservoir can be predicted far into the future (sometimes for as long as 50 years). Oil recovery can be maximized and production costs minimized by comparing many alternative operating plans, each requiring a new run of the computer model. After a field development plan is put into action, the reservoir model may be periodically rerun and further tuned to improve its ability to match newly gathered production data.","When sufficient data is obtained about the reservoir, characteristics of a reservoir can be mathematically modeled to predict production rates from wells in that reservoir. The gross characteristics of the field include the porosity and permeability of the reservoir rocks, the thickness of the geological zones, the location and characteristics of geological faults, relative permeability and capillary pressure functions and such characteristics of the reservoir fluids as density, viscosity and phase equilibrium relationships. From this data, a set of continuous partial differential equations (PDEs) are generated that describe the behavior of the field as a function of time and production parameters. These production parameters include the locations of wells, the characteristics of the well's completions, and the operating constraints applied to the wells. Operating constraints may include such as the production rate of a particular fluid phase, the bottom hole pressure, the tubing head pressure, or the combined flow rates of a group of wells. These constraints may be applied directly by data or by means of another simulator that models the flow of fluids in the surface equipment used to transport the fluids produced from or injected into the wells. However, because only the simplest system of PDEs can be solved using classic or closed-form techniques (e.g., a homogeneous field having circular boundaries), a model's PDEs are converted into a set of non-linear approximations which are then solved numerically. One approximation technique is the finite difference method. In the finite difference method, reservoir PDEs are converted into a series of difference quotients which divide a reservoir into a collection of discrete three dimensional cells, which are then solved for at discrete times to determine (or predict) the value of reservoir characteristics such as pressure, permeability, fluid fractions, and at a later time.","Within the computerized \u2018reservoir simulator\u2019, reservoir performance is modeled in discrete increments of time. Each so-called timestep advances the solution from a previous point in time, where all variables are known, to a future point in time, where all variables are unknown. This process is repeated until the entire time period of interest has been modeled. Within each timestep, it is necessary to solve a huge system of nonlinear equations that models fluid flow from cell to cell and through the wells. (With current technology it is possible to include several million cells in the reservoir model.) Solutions to the system of nonlinear equations are obtained by Newton iteration. In each such iteration, the system of nonlinear equations is approximated by a system of linear equations, which must be solved by yet another iterative procedure. One such \u2018reservoir simulator\u2019 is the \u201cEclipse\u201d reservoir simulator that is owned and operated by Schlumberger Technology Corporation of Houston, Tex.","The \u201cEclipse\u201d simulator software receives output data from the \u201cFlogrid\u201d simulation gridding software and, responsive thereto, the \u201cEclipse\u201d simulator software generates a set of simulation results which are displayed on a 3D viewer. The \u201cFlogrid\u201d simulation gridding software is described in U.S. Pat. No. 6,106,561 to Farmer, the disclosure of which is incorporated by reference into this specification.","As illustrated in , the \u201cEclipse\u201d simulator software includes an \u2018Adjoint Method\u2019 (including its associated system and program storage device) \u2018for calculating adjoint gradients of an objective function with respect to changes in valve settings taking into account the modeling of pressure drop and fluid flow along a wellbore, and using the adjoint gradients to calculate sensitivities of a reservoir to changes in parameterization of downhole devices and the use of these sensitivities in optimal control of the wells to optimize some objection function subject to production constraints\u2019 (hereinafter called an \u2018Adjoint method for calculating and using adjoint gradients\u2019).","This specification includes: (1) a Background discussion with reference to  which provides background information relating to the performance of a seismic operation and a well logging operation adapted for generating seismic and well logging data, the seismic and well logging data being provided as input data to a workstation that stores a \u201cFlogrid\u201d simulation gridding software and an \u201cEclipse\u201d simulator software, and (2) a description of the \u201cEclipse\u201d simulator software further including the \u2018Adjoint method for calculating and using adjoint gradients\u2019 (and associated system and program storage device) discussed below with reference to  representing one possible implementation of the \u2018Adjoint method for calculating and using adjoint gradients\u2019.","Referring to , a method and apparatus for performing a seismic operation is illustrated. During a seismic operation, a source of acoustic energy or sound vibrations , such as an explosive energy source , produces a plurality of sound vibrations. In , one such sound vibration  reflects off a plurality of horizons  in an earth formation . The sound vibration(s)  is (are) received in a plurality of geophone-receivers  situated on the earth's surface, and the geophones  produce electrical output signals, referred to as \u201cdata received\u201d  in , in response to the received sound vibration(s)  representative of different parameters (such as amplitude and\/or frequency) of the sound vibration(s) . The \u201cdata received\u201d  is provided as \u201cinput data\u201d to a computer of a recording truck , and, responsive to the \u201cinput data\u201d, the recording truck computer generates a \u201cseismic data output record\u201d . Later in the processing of the seismic data output record , such seismic data undergoes \u201cdata reduction\u201d  in a mainframe computer, and a \u201creduced seismic data output record\u201d is generated from that data reduction operation .","Referring to , a well logging operation is illustrated. During the well logging operation, a well logging tool  is lowered into the earth formation  of  which is penetrated by a borehole . In response to the well logging operation, well log data  is generated from the well logging tool , the well log data  being provided as \u201cinput data\u201d to a computer of a well logging truck . Responsive to the well log data , the well logging truck computer produces a \u201cwell log output record\u201d .","Referring to , the seismic data output record  of  is provided as \u201cinput data\u201d to a mainframe computer  where the data reduction operation  of  is performed. A mainframe processor will execute a data reduction software stored in a mainframe storage . When the execution of the data reduction software is complete, the reduced seismic data output record of  is generated.","Referring to , a workstation  is illustrated in . A storage medium , such as a CD-Rom , stores software, and that software can be loaded into the workstation  for storage in the memory of the workstation. In , the workstation  includes a workstation memory , the software stored on the storage medium (CD-Rom)  being loaded into the workstation  and stored in the workstation memory . A workstation processor will execute the software stored in the workstation memory in response to certain input data provided to the workstation processor , and then the processor will display or record the results of that processing on the workstation \u201crecorder or display or 3D viewer\u201d . The input data, that is provided to the workstation  in , includes the well log output record  and the reduced seismic data output record . The \u201cwell log output record\u201d  represents the well log data generated during the well logging operation in an earth formation of , and the \u201creduced seismic data output record\u201d represents data-reduced seismic data generated by the mainframe computer  in  in response to the seismic operation illustrated in . In , the software stored on the storage medium (CD-Rom)  in  includes a \u201cFlogrid\u201d software and an \u201cEclipse\u201d simulator software . When the storage medium (CD-Rom)  is inserted into the workstation  of , the \u201cFlogrid\u201d software and the \u201cEclipse\u201d simulator software , stored on the CD-Rom , are both loaded into the workstation  and stored in the workstation memory . The \u201cFlogrid\u201d software and the \u201cEclipse\u201d simulator software are owned and operated by Schlumberger Technology Corporation of Houston, Tex. The \u201cFlogrid\u201d software is disclosed in U.S. Pat. No. 6,106,561 to Farmer entitled \u2018Simulation Gridding Method and Apparatus including a Structured Areal Gridder Adapted for use by a Reservoir Simulator\u2019, the disclosure of which is incorporated by reference into this specification. When the workstation processor executes the Flogrid software and the Eclipse simulator software , the \u201cEclipse\u201d simulator software responds to a set of more accurate grid cell property information associated with a respective set of grid blocks of a structured simulation grid generated by the \u201cFlogrid\u201d software by further generating a set of more accurate simulation results which are associated, respectively, with the set of grid blocks of the simulation grid. Those simulation results are displayed on the 3D viewer of  and can be recorded on a recorder ","Referring to , referring initially to , the Flogrid software and the Eclipse simulator software are illustrated as being stored in the workstation memory of . In addition, the \u201csimulation results\u201d , which are output from the Eclipse simulator software , are illustrated as being received by and displayed on the 3D viewer . The Flogrid software includes a reservoir data store, a reservoir framework, a structured gridder, an unstructured gridder, and an upscaler, all of which are fully discussed in the above referenced U.S. Pat. No. 6,106,561 to Farmer, the disclosure of which has already been incorporated by reference into this specification. In , a set of \u201csimulation grids and properties associated with the grids\u201d , generated by the Upscaler and the \u201cPetragrid\u201d unstructured gridder, are received by the Eclipse simulator software . In response, the Eclipse simulator software generates a \u201cset of simulation results associated, respectively, with a set of grid blocks of the simulation grids\u201d , and the simulation results and the associated grid blocks  are displayed on the 3D viewer . The \u201cPetragrid\u201d unstructured gridder is disclosed in U.S. Pat. Nos. 6,018,497 and 6,078,869, the disclosures of which are incorporated by reference into this specification.","In , the Flogrid software generates a set of output data  comprising a plurality of grid cells and certain properties associated with those grid cells. That output data  is provided as input data to the Eclipse simulator software . Some other programs  provide other input data to the Eclipse simulator software . In response to the output data  (comprised of a gridded earth formation including a plurality of grid cells and certain properties associated with each of the grid cells), as well as the other output data from the other programs , the Eclipse simulator software generates a set of \u201csimulation results\u201d , the simulation results  including the plurality of grid cells and a plurality of simulation results associated, respectively, with the plurality of grid cells. The aforementioned plurality of grid cells and the plurality of simulation results associated, respectively, with the plurality of grid cells are displayed on the 3D Viewer of .","Referring to , an example of the simulation results  (i.e., the \u201cplurality of grid cells and the plurality of simulation results associated, respectively, with the plurality of grid cells\u201d ) which are displayed on the 3D viewer of  and , is illustrated in .","The following paragraphs will present the Eclipse Simulator Software of , , and , where the Eclipse Simulator Software further includes a Detailed Description of an \u2018Adjoint method for calculating and using adjoint gradients\u2019 (and associated System and Program Storage Device) as shown in . In particular, the following paragraphs will present a Detailed Description of an \u2018Adjoint Method\u2019 (including its associated system and program storage device) \u2018for calculating adjoint gradients of an objective function with respect to changes in valve settings taking into account the modeling of pressure drop and fluid flow along a wellbore, and using the adjoint gradients to calculate sensitivities of a reservoir to changes in parameterization of downhole devices and the use of these sensitivities in optimal control of the wells to optimize some objection function subject to production constraints\u2019, as shown in .","Referring to , a general outline of the operation of a prior art reservoir simulator is discussed below with reference to . In , reservoir data  and of  and rock core data are used to describe a computational grid and the properties of the reservoir rocks. This data is combined with data relating to the physical properties of the fluids contained in the reservoir, the combined data being used to compute the initial distributions of pressure and fluid saturations (volume fractions) as well as the composition of each fluid phase, block  in . Time varying data, such as the locations and characteristics of wells, production and injection flow rate controls, and simulator control information is read from a data base, block . Using the current pressure, saturation, and fluid compositions for each grid cell, the partial differential equations describing mass balances are approximated by finite differences in block  which results in two or more nonlinear algebraic equations for each grid cell. Also, in block , these nonlinear equations are linearized by means of Newton's method. In block , the resulting system of linear equations is solved iteratively, using methods described in this specification. After the linear equations have been solved, there is a test in block  to determine whether all of the nonlinear terms in the finite difference equations have converged. If not, the simulator returns to block . If the nonlinear terms in the finite difference equations have converged, the simulator moves to block  and updates values to complete the current timestep. In block , the simulator tests to determine whether the desired ending time (i.e., the stop time) in the simulation has been reached. If not, the simulator advances time to the next level, block , and then it returns to block  to read new time varying data and to begin the next timestep. If the endpoint of the simulation has been reached, then, the simulator completes output operations and the run is finished, block .","Refer now to .","In , the Eclipse simulator software of  and  includes software which functions to perform or practice an \u2018Adjoint Method for Calculating and Using Adjoint Gradients\u2019, step  in .","In , however, the \u2018Adjoint Method\u2019 (including its associated system and program storage device) \u2018for Calculating and Using Adjoint Gradients\u2019 step  in  includes two basic steps (steps and ) which are discussed below with reference to , as follows:","(Step 1) \u2018Calculating adjoint gradients of an objective function with respect to changes in valve settings taking into account the modeling of pressure drop and fluid flow along a wellbore\u2019, step in ; and","(Step 2) \u2018Using the adjoint gradients to calculate sensitivities of a reservoir to changes in parameterization of downhole devices and the use of these sensitivities in optimal control of the wells to optimize some objective function subject to production constraints\u2019, step in .","Each of the above referenced two steps and illustrated in  associated with the \u2018Adjoint Method for Calculating and Using Adjoint Gradients\u2019 step  in  will be discussed in detail below with reference to  of the drawings.","In , the \u2018Adjoint Method\u2019 (and associated system and program storage device) \u2018for Calculating and for Using Adjoint Gradients\u2019 illustrated in  effectively and efficiently optimizes settings of control valves in a reservoir and, as a result, optimizes the production of oil, gas, and other hydrocarbons from the reservoir. The \u2018Adjoint method\u2019 (and associated system and program storage device) \u2018for calculating and using adjoint gradients\u2019 shown in  represents a \u2018proactive deterministic constrained optimization method\u2019. \u2018Gradients\u2019 are required for this \u2018proactive deterministic constrained optimization method\u2019. The term \u2018gradients\u2019: means \u2018the sensitivity or response of the reservoir to a change in a control parameter\u2019, and represents \u2018quantitative information on how an objective will respond to any changes made in the well operating targets and valve settings\u2019. Given that control of the behavior of a large number of wells in a reservoir at a reasonably high frequency may be desired, the \u2018gradients\u2019 are required for a large number of control parameters (on the order of 10to 10). Hence, the \u2018adjoint method for calculating and using adjoint gradients\u2019 shown in  must generate and provide these \u2018gradients\u2019 efficiently and accurately. For this reason, the aforesaid \u2018adjoint method for calculating and using adjoint gradients\u2019 of  represents a function that is practiced by in a reservoir simulator, such as the \u2018Eclipse\u2019 reservoir simulator that is owned and operated by Schlumberger Technology Corporation.","Another \u2018adjoint method\u2019 has previously been applied to optimization within reservoir simulation by \u2018several authors\u2019. However, the studies produced by the aforesaid \u2018several authors\u2019 include smart wells as a series of independent injectors or producers, and, as such, do not take into account the accurate modelling of the pressure drop along the wellbore. In addition, the \u2018several authors\u2019 have published the \u2018use of the adjoint method to calculate gradients in reservoir simulation\u2019, such as: (1) Fifth European Conference on Mathematics of Oil Recovery (Zakirov, Zakirov, Aanonsen, Palatnik), (2) SPE 78278 (Brouwer, Jansen), and (3) SPE 92864 (Sarma, Aziz, Durlofsky).","In addition, the use of a multi-segmented well model in reservoir simulation to accurately model flow in a wellbore is disclosed in prior pending U.S. application Ser. No. 10\/900,176 to David A. Edwards et al, entitled \u201cNear Wellbore Modeling method and apparatus\u201d published as US patent application number 20050015231 published Jan. 20, 2005.","However, the \u2018adjoint method for calculating and using adjoint gradients\u2019 disclosed in  of this specification may include use of a fully coupled multi-segmented well model that accurately calculates the pressure drop and component flow rates along the length of a multi-lateral well. In addition, the \u2018adjoint method for calculating and using adjoint gradients\u2019 of  addresses the problem of \u2018how to control downhole devices\u2019 to achieve an objective, where the objective includes maximizing hydrocarbon recovery or the net present value of the reservoir. The aforesaid problem (of \u2018how to control downhole devices\u2019) involves the control of fluid fronts in a reservoir in order to prolong hydrocarbon production from the reservoir field as a whole while minimizing the production of unwanted fluids. In addition, control parameters associated with the aforesaid problem (of \u2018how to control downhole devices\u2019) include: (1) well production and injection rates and pressures, and (2) the settings of down-hole inflow control devices.","The accurate modeling of the physics of fluid flow within smart wells is of paramount importance when developing control strategies for this type of well. The control of downhole devices is modeled by using a reservoir simulator adapted for accurately modeling the physics of fluid flow in smart wells, such as the previously referenced \u2018Eclipse\u2019 reservoir simulator owned and operated by Schlumberger Technology Corporation. As a result, a \u2018gradient-based field optimization method\u2019 is disclosed in this specification, the aforementioned \u2018gradient-based field optimization method\u2019 being known as the \u2018Adjoint method for calculating and using adjoint gradients\u2019 illustrated in . The aforesaid \u2018gradients\u2019 are calculated using the \u2018Adjoint method for calculating and using adjoint gradients\u2019 of . The \u2018Adjoint method for calculating and using adjoint gradients\u2019 of  is used because it provides a very efficient \u2018method of calculating gradients of the objective function\u2019 for a large numbers of parameters. This is of great significance in reservoir simulation where there may be a large number of controllable wells in the reservoir and a large number of valves in the wells that may be changed at regular intervals over the lifetime of the reservoir. The \u2018Adjoint method for calculating and using adjoint gradients\u2019 of  accurately calculates the \u2018gradients of an objective function\u2019 with respect to changes in valve settings, taking into account the accurate modeling of pressure drop and fluid flow along the well bore. These gradients are then used to calculate the sensitivities of a reservoir to changes in parameterization of downhole device. These sensitivities are then used in an \u2018optimal control of the wells in the reservoir\u2019 in order to optimize some objective function subject to production constraints. The \u2018optimal control of the wells in the reservoir\u2019 includes the generation of \u2018new optimized control settings\u2019 for wells and\/or the generation of \u2018new optimized control settings\u2019 for a set of downhole well valves that are disposed within those wells.","Consequently, the \u2018Adjoint method for calculating and using adjoint gradients\u2019 disclosed in this specification and shown in : (1) concerns the first application of adjoint gradients to control and optimize settings in a multi-segmented well model; and, in particular, (2) represents the use of adjoint gradients to calculate sensitivities of a reservoir to changes in parameterization of downhole devices and the use of these sensitivities in optimal control of the wells to optimize some objective function, subject to production constraints, where an example of an objective function would be \u2018cumulative oil production\u2019 (see step in ).","Referring to , one construction of the \u2018Adjoint Method for Calculating and Using Adjoint Gradients\u2019  of  is illustrated, the construction shown in  representing an optimization flow diagram which functions to practice the \u2018Adjoint Method for Calculating and Using Adjoint Gradients\u2019  of .","In , a new set of \u2018Production Optimization Inputs\u2019 , including an objective function , a set of control parameters , and production constraints , are provided as \u2018input data\u2019 to a \u2018Reservoir Simulator\u2019 , such as the aforementioned \u2018Eclipse\u2019 reservoir simulator offered by Schlumberger Information Solutions, a division of Schlumberger Technology Corporation of Houston, Tex. The set of \u2018Production Optimization Inputs\u2019  (which are provided as \u2018input data\u2019 to the Reservoir Simulator ) are used to define an optimization problem that will be solved by the \u2018Reservoir Simulator\u2019 . In addition, a \u2018Well Control Schedule\u2019  (which is time dependent) and a \u2018Reservoir Model\u2019  (providing the geology of the reservoir) are also provided as \u2018input data\u2019 to the \u2018Reservoir Simulator\u2019 . The \u2018Reservoir Simulator\u2019  includes a \u2018multi-segmented well model\u2019 , the construction and function of which will be described later in this specification. As noted earlier, the set of \u2018Production Optimization Inputs\u2019 , including the objective function , the set of control parameters , and the production constraints , are provided as \u2018input data\u2019 to the \u2018Reservoir Simulator\u2019 . In , the \u2018objective function\u2019 represents a linear combination of discounted flowing rates, a measure of the value of the reservoir; and the \u2018control parameters\u2019 represent or include well control settings which may be changed during simulation, such as valve settings in an instrumented well, rate settings for conventional and instrumented wells, and bottom hole pressure settings for conventional and instrumented wells. As noted earlier, the \u2018Reservoir Simulator\u2019  includes a \u2018multi-segmented well model\u2019 . The \u2018multi-segmented well model\u2019  is a model of a physical well which accurately models the pressure drop and fluid flow along the wellbore; this is achieved by discretizing the well path into segments within which the flow equations are solved consistently. When the \u2018Reservoir Simulator\u2019  receives, as \u2018input data\u2019, the reservoir model , the well control schedule , and the production optimization inputs  including the objective function and the control parameters and the production constraints , the Reservoir Simulator  will perform an Adjoint Gradient Calculation . As noted in , the \u2018Adjoint Gradient\u2019 associated with the \u2018Adjoint Gradient Calculation\u2019  is a derivative of the above referenced \u2018objective function\u2019 with respect to changes in the control parameters that are evaluated using the adjoint method. A solution to a large adjoint system of linear equations is required at regular time intervals to calculate the adjoint gradients of the objective function with respect to the control parameters . When the Adjoint Gradient Calculation  is complete, the following two additional steps will be performed in sequence: (1) Calculation of Search Direction ; that is, a suggested change to the control parameters that will not violate any production constraints or limit values of the control parameters, followed by (2) an Optimizer  which executes an optimization software that maximizes the objective function using line-search methods. Recalling that the \u2018input data\u2019 provided to the \u2018Reservoir Simulator\u2019  included a \u2018well control schedule\u2019 , when the function performed by the Optimizer  is completed, the Optimizer  will then generate an \u2018Updated Well Control Schedule (which is time dependent)\u2019 , wherein, when a local maximum has been located along the gradient-based search direction, or when a production constraint is encountered, the Optimizer  will generate the \u2018Updated Well Control Schedule\u2019  which is comprised of new updated control parameters. The \u2018Updated Well Control Schedule\u2019  comprised of the new updated control parameters is then presented to the \u2018multi-segmented well model  associated with the Reservoir Simulator ; and, responsive thereto, the Simulator  is rerun using these new updated control parameters. In particular, recalling that the \u2018Reservoir Simulator\u2019  includes a \u2018multi-segmented well model\u2019 , the \u2018multi-segmented well model\u2019  will receive the \u2018Updated Well Control Schedule\u2019  from the Optimizer , and, responsive thereto, the \u2018multi-segmented well model\u2019  will then generate two \u2018outputs\u2019: (1) Reservoir Production Profiles , and (2) Optimized Reservoir Production Profiles . As a result, , which illustrates one construction of the \u2018Adjoint Method for Calculating and Using Adjoint Gradients\u2019  of , practices a method for optimizing production of a reservoir having one or more wells having valves, the method including: (a) running a reservoir simulator in a forward simulation to simulate the life of the reservoir; (b) processing outputs from the forward simulation to generate intermediate partial derivatives of flow equations for the well and for the reservoir; (c) combining the intermediate partial derivatives of the well flow equations and the reservoir flow equations in the reservoir simulator; (d) solving an adjoint system of linear equations at regular time intervals to calculate a set if adjoint gradients of an objective function with respect to the control parameters; (e) determining from the adjoint gradients a search direction; (f) using the search direction to solve an optimization algorithm that maximizes an objective function using line-search methods; (g) locating a local maximum along the search direction and updating control parameters; (h) using the new updated control parameters in the reservoir simulator; and (i) repeating steps (a)-(i) until an optimal value of the objective function has been reached.","Referring to , a detailed description of the construction and the function of the \u2018multi-segmented well model\u2019  of  is illustrated.","In , a wellbore  is divided into a plurality of segments and a set of \u201csolution variables\u201d is determined for each of the segments (a method and associated system and program storage device for determining the \u201csolution variables\u201d will be discussed later in this specification). For example, in , a multi-segmented wellbore  is illustrated which consists of a plurality of segments, such as segments , , , and . As illustrated in , a set of \u201csolution variables\u201d define each segment.","In , the process or method for determining the set of \u201csolution variables\u201d for each segment , , ,  of the multi-segement wellbore  in  is discussed in detail the following paragraphs with reference to .","Referring to , a multilateral wellbore is illustrated. In , the multilateral wellbore includes a main stem and four lateral branches; however, the four lateral branches include an upper lateral branch, a middle lateral branch, and two bottom lateral branches. Segments , , , , , and  lie on the main stem. The upper lateral branch of the multilateral wellbore of  includes a plurality of segments, one of those segments being Segment . The middle lateral branch of the multilateral wellbore of  also includes a plurality of segments, one of those segments being Segment . The two bottom lateral branches of the multilateral wellbore of  each include a plurality of segments. That is, the left-most bottom lateral branch of the multilateral wellbore of  includes a plurality of segments, one of those segments being Segment ; and the right-most bottom lateral branch of the multilateral wellbore of  includes a plurality of segments, one of those segments being Segment . In , each segment can be further divided up into a plurality of sub-segments. For example, Segment  can, for example, be divided up into several other sub-segments, such as sub-segments , , and ","In , each \u201csegment\u201d can be characterized and represented by a set of \u201csolution variables\u201d. That is, each segment can be characterized or represented by the following set of \u201csolution variables\u201d: \u201cQ\u201d, the flowrate of fluid in said each segment, \u201cFw\u201d, the fraction of water in that segment, \u201cFg\u201d, the fraction of gas in that segment, and \u201cP\u201d, the absolute pressure in that segment. A shorthand notation for each set of \u201csolution variables\u201d for a particular segment is selected to be: \u201c(Q, Fw, Fg, P)i\u201d, where \u201ci\u201d identifies the particular segment. Therefore, in , segment  of the multilateral wellbore can be characterized or represented by the solution variables \u201c(Q, Fw, Fg, P) i=1\u201d, segment  of the multilateral wellbore can be characterized or represented by the solution variables \u201c(Q, Fw, Fg, P) i=2\u201d, . . . , and segment  of the multilateral wellbore can be characterized or represented by the solution variables \u201c(Q, Fw, Fg, P)i=10\u201d, etc. See  for a complete list of each set of solution variables \u201c(Q, Fw, Fg, P)i\u201d which characterize and represent each of the segments  through  of the multilateral wellbore of .","A single bore wellbore has a single pipeline or branch, and that single branch could also be divided up into a plurality of segments, where each segment is characterized or represented by a set of solution variables (Q, Fw, Fg, P)i.","Referring to , a more detailed construction of the \u2018Eclipse\u2019 simulator software of , where the \u2018Eclipse\u2019 simulator software includes the \u2018Adjoint method for calculating and using adjoint gradients\u2019  of , and where the \u2018Adjoint method . . . \u2019  of  further includes the \u2018multi-segmented well model\u2019 software  of , is illustrated.","In , the Eclipse simulator software of  includes a multi-segment well model software . In , the Eclipse simulator software includes a group\/field control model software  and the multi-segment well model software  which is responsive to the group\/field control model software . However, in , the multi-segment well model software  further includes a single well model software and a reservoir model software which jointly determine the solution variables (Q, Fw, Fg, P) for each segment of a well.","In , the group\/field control model software  sends targets\/limits to the single well model . These targets might be a flow target, such as an oil rate production target, or a pressure target if the group\/field control model includes a surface network model (each well has its own target to which the well must produce). The group\/field control model  must deal with all the collective aspects of production and injection; that is, producing a field to a certain target, allowing for pressure losses for pipelines on the surface, etc.","In response to the targets\/limits from the group\/field control model , the single well model sends well flow rates up to the group\/field control model . In addition, the single well model sends grid block connection flow rates and derivatives down to the reservoir model . The single well model models each individual well within the reservoir; that is, the single well model operates on a plurality of wells, one at a time.","The reservoir model provides information about fluid conditions in the grid blocks up to the single well model ; in addition, the reservoir model provides the increments to the segment solution variables, needed by the single well model , at the end of each iteration, to be discussed below.","In , the single well model interacts with the reservoir model because the reservoir grid blocks act as boundary conditions to the well model single well model. From the reservoir model's point of view, the single well model acts as a source of a set of \u201csource\/sink\u201d terms used by the reservoir model. The single well model therefore interacts with the reservoir model and extracts fluid from it, or injects fluid into it, and the Group\/Field control model  interacts with the single well model in that it decides how to allocate field targets, and gives each single well an operating target.","In , referring initially to , the single well model software functions to model a multilateral wellbore and a single bore wellbore, block  of . In , however, the step of modeling multilateral wellbores and single bore wellbores (block  of ) comprises the following additional steps: (1) sub-divide each pipeline or branch of the wellbore into a plurality of segments, block , (2) determine a set of solution variables (Q, Fw, Fg, P) for each segment of each pipeline of the wellbore, block , and (3) display and\/or record the plurality of segments of each pipeline and plurality of solution variables (Q, Fw, Fg, P) which correspond, respectively, to the plurality of segments, block ","The step of sub-dividing each pipeline or branch of the wellbore into a plurality of segments (block ) was discussed briefly above with reference to . However, the step of determining a set of solution variables (Q, Fw, Fg, P) for each segment of each pipeline of the wellbore (block ) is practiced by both the single well model and the reservoir model and it will be discussed in detail below with reference to .","In , a more detailed discussion of block of , which determines a set of solution variables (Q, Fw, Fg, P) for each segment of each pipeline of a multilateral or single bore wellbore, is set forth in the following paragraphs with reference to  of the drawings.","In , , , , and , referring intially to , in order to determine a set of solution variables (Q, Fw, Fg, P) for each segment of each pipeline of the wellbore (block of ), the following steps are performed by the single well model software of : (1) initial condition\u2014guess solution variables \u201c(Q, Fw, Fg, P)i\u201d for each segment in the multi-lateral or single bore wellbore, block  in ; (2) work out the fluid in place in each segment which is a function of its solution variables \u201c(Q, Fw, Fg, P)i\u201d, block  in ; (3) work out the flow between each segment and the reservoir which is a function of the segment's solution variables \u201c(Q, Fw, Fg, P)i\u201d and the solution variables in the reservoir grid blocks which communicate with the segment, block  in , (4) work out the flow between each segment and its neighboring segments which is a function of its solution variables \u201c(Q, Fw, Fg, P)i\u201d and the solution variables in the neighboring segments, block  in . In , (5) calculate the pressure drop along each segment which is a function of its solution variables \u201c(Q, Fw, Fg, P)i\u201d, block  in ; (6) since blocks ,  and  in  represent three expressions in a Material Balance Equation for each segment, and since block  in  represents a Pressure Equation for each segment, determine the Material Balance Equation residuals and the Pressure Equation residuals for all segments in the well, the residuals being a function of the solution variables \u201c(Q, Fw, Fg, P)i\u201d for the segments and their neighboring segments and the solution variables in any reservoir grid blocks which communicate with the segments, block  of ; (7) calculate the derivatives of the residuals, block  of ; (8) ask the question \u201care the \u2018residuals\u2019 less than a tolerance value specified by the user?\u201d, block  of FIG. \u2014if no, go to step \u201c9\u201d below\u2014if yes, go to step \u201c11\u201d below; (9) since \u201cno\u201d was the answer to the question of block  of , use the derivatives of block  to calculate changes (delta Q, delta Fw, delta Fg, delta P) to the solution variables (Q, Fw, Fg, P) for all segments to reduce their residuals to a smaller value on the next iteration, block  of ; (10) in , apply the changes (delta Q, delta Fw, delta Fg, delta P) to the solution variables (Q, Fw, Fg, P) of all segments to produce a new set of solution variables \u201c(Q, Fw, Fg, P)i (new)\u201d and go back to step \u201c2\u201d which is block  of , block  of ; (11) since \u201cyes\u201d was the answer to block  of , in , the \u201cfour equations\u201d comprising the three expressions of the material balance equation (blocks , ,  of ) and the pressure equation (block  of ) are balanced\u2014each segment \u201ci\u201d can be characterized by the solution variables \u201c(Q. Fw, Fg, P)i\u201d; block  of ; (12) record and\/or display the solution variables \u201c(Q, Fw, Fg, P)i\u201d for each segment \u201ci\u201d, block  of . In , display or record on \u201crecorder or display or 3D viewer\u201d of  all of the segments of each of the pipelines of the multilateral or single bore wellbore and the solution variables \u201c(Q, Fw, Fg, P)\u201d for each segment, block of  and block  of .","A functional description of the operation of the \u2018Adjoint Method for Calculating and Using Adjoint Gradients\u2019  of  will be set forth in the following paragraphs with reference to  of the drawings.","The \u2018Adjoint method for calculating and using adjoint gradients\u2019 step  of  first involves running the Reservoir Simulator  of  in order to simulate the life of the reservoir. Outputs from this \u2018forward simulation\u2019 of the Simulator  are generated and processed thereby generating \u2018intermediate partial derivatives of the well and reservoir flow equations\u2019. These \u2018intermediate partial derivatives of the well and reservoir flow equations\u2019 are combined inside the Reservoir Simulator  of . In the \u2018Adjoint Gradient Calculation\u2019 step  of , a solution of the large adjoint system of linear equations is then required, at regular time intervals, in order to calculate a \u2018set of adjoint gradients of the objective function with respect to the control parameters \u2019. Thus, step  of  (i.e., the \u2018Adjoint Gradient Calculation\u2019 step ) corresponds to step of  (i.e., \u2018calculating adjoint gradients of an objective function with respect to changes in valve settings taking into account the modeling of pressure drop and fluid flow along a wellbore\u2019, step ). As a result, when the aforementioned \u2018intermediate partial derivatives of the well and reservoir flow equations\u2019 are combined inside the Reservoir Simulator  of , the \u2018Adjoint Gradient Calculation\u2019 step  of  will then generate a \u2018set of adjoint gradients of the objective function with respect to the control parameters \u2019. In the \u2018Calculation of Search Direction\u2019 step  of , the \u2018set of adjoint gradients of the objective function with respect to the control parameters \u2019 (that were generated by step  of ) are then used in the \u2018Calculation of Search Direction\u2019 step  to determine a \u2018search direction\u2019, that is, a suggested change to the control parameters that will not violate any production constraints, or limiting values of the parameters. Thus, step  of  (i.e., \u2018Calculation of Search Direction\u2019, step ) corresponds to step in  (i.e., \u2018using the adjoint gradients to calculate sensitivities of a reservoir to changes in parameterization of downhole devices and using of these sensitivities in the optimal control of the wells to optimize some objective function subject to production constraints\u2019, step ). This \u2018search direction\u2019 is given to the Optimizer  of . The Optimizer  includes an optimization algorithm that (when executed) maximizes the objective function using line-search methods (recall from step of  that the calculated sensitivities are used in the optimal control of the wells to optimize some objective function). When a local maximum (of the objective function ) has been located by the Optimizer  along the gradient-based search direction that was established by the \u2018calculation of search direction\u2019 step , or when a production constraint is encountered, the Optimizer  will then generate an \u2018Updated Well Control Schedule\u2019  which includes a set of \u2018new updated control parameters\u2019 . The \u2018new updated control parameters\u2019 of the \u2018Updated Well Control Schedule\u2019  are presented to the Reservoir Simulator , and, in particular, to the \u2018multi-segmented well model\u2019  of the Reservoir Simulator . The Simulator  is re-run using the aforementioned \u2018new updated control parameters\u2019 . The above referenced process or method is repeated; that is, a \u2018new set of adjoint gradients of the objective function with respect to the control parameters \u2019 is calculated by the \u2018Adjoint Gradient Calculation\u2019 step  of , a \u2018new search direction\u2019 is determined by the \u2018calculation of search direction\u2019 step  of , and a \u2018new Updated Well Control Schedule\u2019  is generated by the Optimizer  of  until some \u2018termination criterion\u2019 has been satisfied. For example, the \u2018termination criterion\u2019 will be satisfied when \u2018convergence\u2019 has been achieved, and \u2018convergence\u2019 will be achieved when an \u2018optimal value of the objective function\u2019 has been reached.","When the \u2018multi-segmented well model\u2019  of the Reservoir Simulator  receives the \u2018new updated control parameters\u2019 of the \u2018Updated Well Control Schedule\u2019 , the \u2018multi-segmented well model\u2019  will then determine a set of solution variables for each segment of each pipeline of the wellbore (step of ) and then display or record the segments of each pipeline and the sets of solution variables corresponding, respectively, to the segments (step of ). The \u2018multi-segmented well model\u2019  will then generate two \u2018outputs\u2019: (1) the Reservoir Production Profiles , and (2) the Optimized Reservoir Production Profiles  of .","A functional specification associated with the \u2018Adjoint Method for Calculating and Using Adjoint Gradients\u2019  of , , and  is set forth in the following paragraphs.","Introduction","This specification includes software (namely, the \u2018Resopt\u2019 software that is embodied within the \u2018Eclipse\u2019 Simulator software of ) that uses adjoint gradient technology to optimize production from a simulation model subject to constraints.","The Necessary Mathematics","Lagrange Formulation of the Objective Function with Constraints","In the objective function, we are trying to change the production control parameters, P, so that we maximize a quantity (e.g. FOPT) subject to the constraints that the simulator fluid flow residual equations, R=0, are satisfied, and also that additional production constraints, C\u22660, are satisfied.","Generally, production constraints are inequalities. For convenience, we will divide these into active (i.e. those for which currently C=0) and inactive constraints. For clarity, we will denote the active constraints by C.","Lagrange multipliers are used to combine the equality constraints with the objective function into the merit function, L,\n\n()=()+()+()\u2003\u2003(1)\n","where J is the objective function, X is the vector of solution variables (e.g. pressure, saturations, molar densities), and and are the vectors of Lagrange multipliers on the equality constraints.","Backward Solve: Free Parameter Gradients","In order to determine a search direction for maximizing this objective function, we are interested in forming its total derivatives with respect to the production control parameters. This is",{"@attributes":{"id":"p-0085","num":"0084"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mfrac":{"mrow":[{"mo":"\u2146","mi":"L"},{"mo":"\u2146","mi":"P"}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"L"},{"mo":"\u2202","mi":"P"}]},"mo":"+","mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mi":"L"},{"mo":"\u2202","mi":"X"}]},{"mrow":[{"mo":"\u2202","mi":"X"},{"mo":"\u2202","mi":"P"}]}],"mo":"\u2062"}}}},{"mrow":{"mo":["(",")"],"mn":"2"}}]}}}}},"In order to calculate this, we need the solution derivatives, \u2202X\/\u2202P, and also the following partial derivatives of the Lagrangian.",{"@attributes":{"id":"p-0087","num":"0086"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"L"},{"mo":"\u2202","mi":"X"}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]},"mo":["+","+"],"mrow":[{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]}},{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}}]}}},{"mrow":{"mo":["(",")"],"mn":"3"}}]},{"mtd":[{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"L"},{"mo":"\u2202","mi":"P"}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"P"}]},"mo":["+","+"],"mrow":[{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"P"}]}},{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"P"}]}}]}}},{"mrow":{"mo":["(",")"],"mn":"4"}}]}]}}}},"Since R=0 and C=0, then we are free to choose any values for and in (1). In particular, we can choose these vectors so that \u2202L\/\u2202X=0 in (3). This removes the need to perform the expensive step of calculating \u2202X\/\u2202P in (2) and we then just need to evaluate (4) to get the Lagrangian gradient.","Hence, from (3),",{"@attributes":{"id":"p-0090","num":"0089"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]},"mo":["+","+"],"mrow":[{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]}},{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}}]},"mo":"=","mn":"0"}},{"mrow":{"mo":["(",")"],"mn":"5"}}]}}}}},"If there are Nactive constraints and Ninactive constraints, then we have enough degrees of freedom to set \u2202L\/\u2202P=0 for Nof the production control parameters. So, from (4),",{"@attributes":{"id":"p-0092","num":"0091"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},"mo":["+","+"],"mrow":[{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}}]},{"mn":"0","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mo":"\u2200","mrow":{"mi":"i","mo":"\u2264","msub":{"mi":["N","A"]}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"6"}}]}}}},"br":{}},"We want to solve (5) and (6) simultaneously for the adjoint vectors. Re-arranging (6) gives,",{"@attributes":{"id":"p-0094","num":"0093"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msubsup":{"munder":{"mi":["\u03a8","_"]},"mi":["C","T"]},"mo":"=","mrow":{"mrow":[{"mo":"-","mrow":{"mo":["{","}"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},"mo":"+","mrow":{"mo":["(",")"],"mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}}}}}},{"mo":"\u2200","mrow":{"mi":"i","mo":"\u2264","msub":{"mi":["N","A"]}}}],"mo":["\u2062","\u2062","\u2062"],"msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},{"mo":"-","mn":"1"}]},"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}},{"mrow":{"mo":["(",")"],"mn":"7"}}]}}}}},"Substituting (7) in (5) and re-arranging gives,",{"@attributes":{"id":"p-0096","num":"0095"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["\u03a8","R"]},"mo":"\u00b7","mrow":{"mo":["{","}"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]},"mo":"-","mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}],"mo":["\u2062","\u2062"],"msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},{"mo":"-","mn":"1"}]}}}}},{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]}},{"mfrac":[{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}],"mo":["\u2062","\u2062","\u2062","\u2062"],"msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},{"mo":"-","mn":"1"}]},"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mo":"\u2200","mrow":{"mi":"i","mo":"\u2264","msub":{"mi":["N","A"]}}}}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}}},"Equation (8) involves the solution of a system of equations in which the matrix, \u2202R\/\u2202X, is very large. R is the vector of residual equations at all time intervals, and X is the vector of solution variables at all time intervals. In practice, it is possible take advantage of structure in the total Jacobian matrix, \u2202R\/\u2202X, to reduce the size of the system that needs to be solved.","Since R(t)=R(X(t),X(t),P), then the total Jacobian matrix is a block lower triangular (so its transpose is block upper triangular),",{"@attributes":{"id":"p-0099","num":"0098"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]}},"mi":"T"},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"1"}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"1"}}}}]}},"mi":"T"}},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"2"}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"1"}}}}]}},"mi":"T"}},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"2"}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"2"}}}}]}},"mi":"T"}},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"3"}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"2"}}}}]}},"mi":"T"}},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"3"}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"3"}}}}]}},"mi":"T"}},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"4"}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"3"}}}}]}},"mi":"T"}},{"mi":"\u2026"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u22f0"},{"mi":"\u22f0"},{"mi":"\u22ee"},{"mi":"\u22ee"}]},{"mtd":[{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22f0"},{"mi":"\u22f0"},{"mi":"\u22ee"},{"mi":"\u22ee"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"n","mo":"-","mn":"1"}}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"n","mo":"-","mn":"1"}}}}}]}},"mi":"T"}},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","n"]}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"n","mo":"-","mn":"1"}}}}}]}},"mi":"T"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","n"]}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","n"]}}}}]}},"mi":"T"}}]}]}}}}}},"The diagonal matrices are the Jacobian matrices from each time interval, Jac(t). In RESOPT, these are reconstructed from the contents of the restart file that were saved at each report step of the forward simulation.","Since the simulator residual equations can be written as\n\n()=()\u2212()+()+()}\n\nand M(t)=PoreVolume(t) MolarDensity(t) then\n",{"@attributes":{"id":"p-0102","num":"0101"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"+","mn":"1"}}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}}]},"mo":["=","\u2062"],"mi":{},"mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mi":"M","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},{"mo":"\u2202","mrow":{"mi":"X","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}}]}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":["t","j"]}}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mo":"{","mtable":{"mtr":[{"mtd":[{"mrow":{"mo":"-","mrow":{"mi":"PoreVolume","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}}},{"mrow":{"mrow":[{"mi":["for","X"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mi":"MolarDensity","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}],"mo":"="}}]},{"mtd":[{"mrow":{"mrow":{"mrow":{"mo":"-","mrow":{"mi":"MolarDensity","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","mrow":{"mo":["(",")"],"mi":"PoreVolume"}},{"mo":"\u2202","mrow":{"mo":["(",")"],"mi":"Pressure"}}]}},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":["t","j"]}}}},{"mrow":{"mrow":[{"mi":["for","X"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mi":"Pressure","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}],"mo":"="}}]}]}}}}}]}}}},"So the total Jacobian matrix can be written as",{"@attributes":{"id":"p-0104","num":"0103"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]}},"mi":"T"},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"msup":{"mrow":{"mi":"Jac","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"1"}}},"mi":"T"}},{"mrow":{"mo":"-","msup":{"mrow":{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":"t","mn":"1"}}}},"mi":"T"}}},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msup":{"mrow":{"mi":"Jac","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"2"}}},"mi":"T"}},{"mrow":{"mo":"-","msup":{"mrow":{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":"t","mn":"2"}}}},"mi":"T"}}},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"msup":{"mrow":{"mi":"Jac","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mn":"3"}}},"mi":"T"}},{"mrow":{"mo":"-","msup":{"mrow":{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":"t","mn":"3"}}}},"mi":"T"}}},{"mi":"\u2026"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u22f0"},{"mi":"\u22f0"},{"mi":"\u22ee"},{"mi":"\u22ee"}]},{"mtd":[{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22ee"},{"mi":"\u22f0"},{"mi":"\u22f0"},{"mi":"\u22ee"},{"mi":"\u22ee"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"msup":{"mrow":{"mi":"Jac","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"n","mo":"-","mn":"1"}}}},"mi":"T"}},{"mrow":{"mo":"-","msup":{"mrow":{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":"t","mrow":{"mi":"n","mo":"-","mn":"1"}}}}},"mi":"T"}}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"msup":{"mrow":{"mi":"Jac","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","n"]}}},"mi":"T"}}]}]}}}}}},"If we specify the parameters, P, and constraints, C, so that each applies to a particular time interval, then the entire system (8) becomes the following sequence of smaller systems:",{"@attributes":{"id":"p-0106","num":"0105"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msup":{"mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mrow":{"mi":"Jac","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},{"msup":{"mrow":[{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}}],"mo":["\u2062","\u2062","\u2062"],"msub":[{"mo":"|","msub":{"mi":["t","j"]}},{"mo":"|","msub":{"mi":["t","j"]}}]}},"mi":"T"},"mo":"\u2062","mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mo":"=","msup":{"mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]}},{"mo":"+","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},{"msup":{"mrow":[{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},"mo":"\u2062","msub":{"mo":"|","msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}},{"mrow":{"mo":"+","mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"+","mn":"1"}}}}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"msub":[{"mo":"|","msub":{"mi":["t","j"]}},{"mo":"|","msub":{"mi":["t","j"]}},{"mo":"|","msub":{"mi":["t","j"]}},{"mo":"|","msub":{"mi":["t","j"]}}]}},"mi":"T"}}},{"mrow":{"mo":["(",")"],"mn":"9"}}]}}}},"br":{},"sub":["j","1","n","R","n"],"u":"\u03a8","sup":"th "},{"@attributes":{"id":"p-0107","num":"0106"},"chemistry":{"@attributes":{"id":"CHEM-US-00001","num":"00001"},"img":{"@attributes":{"id":"EMI-C00001","he":"88.65mm","wi":"113.62mm","file":"US07640149-20091229-C00001.TIF","alt":"embedded image","img-content":"chem","img-format":"tif"}}}},"Hence, for a particular cell, the product of this matrix with a vector multiplying from the left, such as",{"@attributes":{"id":"p-0109","num":"0108"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"+","mn":"1"}}}},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}},"br":{}},{"@attributes":{"id":"p-0110","num":"0109"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":["[","]"],"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2146","mi":"PV"},{"mo":"\u2146","mi":"P"}]}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mn":"3"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["m","i"]},"mo":"\u00b7","msubsup":{"mi":["\u03a8","R","i"]}}}],"mo":"\u00b7"}},{"mrow":{"mrow":{"mo":"-","msubsup":{"mi":["\u03a8","R"],"mn":"1"}},"mo":"\u00b7","mi":"PV"}},{"mrow":{"mrow":{"mo":"-","msubsup":{"mi":["\u03a8","R"],"mn":"2"}},"mo":"\u00b7","mi":"PV"}},{"mrow":{"mrow":{"mo":"-","msubsup":{"mi":["\u03a8","R"],"mn":"3"}},"mo":"\u00b7","mi":"PV"}}]}}}}}},"In RESOPT, the sequence of calculations is as follows:\n\n","This process requires 1 solve of the transpose simulation Jacobian matrices, followed by 1 solve of a small matrix system (order of number of active constraints). Total: 1 transpose Jacobian matrix solve.","Alternative Formulation","In the case where the active constraints are not sensitive to the dependent parameters, i.e. \u2202C\/\u2202P=0, we cannot solve (5) and (6) by eliminating and then solving for . Instead we must take the more costly approach of eliminating (which may involve multiple \u2202R\/\u2202X solves) and then solving for .","Re-arranging (5) gives,",{"@attributes":{"id":"p-0115","num":"0119"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msubsup":{"munder":{"mi":["\u03a8","_"]},"mi":["R","T"]},"mo":"=","mrow":{"mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]}},{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}}],"mo":"-"}},"mo":"\u2062","msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]}},{"mo":"-","mn":"1"}]}}}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}}},"As before, if we specify the parameters, P, and constraints, C, so that each applies to a particular time interval, and remembering the time-structure of (\u2202R\/\u2202X), then the entire system (10) becomes:",{"@attributes":{"id":"p-0117","num":"0121"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msubsup":{"munder":{"mi":["\u03a8","_"]},"mi":["R","T"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},{"mrow":{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]}},{"mrow":{"mrow":{"mo":"-","mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}},"mo":["\u2062","+"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}],"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}},{"mtd":{"mrow":{"mrow":{"mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"+","mn":"1"}}}},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}]}},"mo":"\u2062","msup":{"mrow":[{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"11"}}]}}}},"br":{},"sub":["j","1","n","R","n"],"u":"\u03a8"},{"@attributes":{"id":"p-0118","num":"0122"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mrow":[{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}},{"mtd":{"mrow":{"mrow":{"msup":{"mrow":[{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}]}}],"mo":"\u00b7"},{"mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},"mo":["\u2062","-"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]}},{"mrow":{"mrow":{"mo":"+","mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"+","mn":"1"}}}}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}],"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mrow":[{"msup":{"mrow":[{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]}},{"mo":"\u2200","mrow":{"mi":"i","mo":"\u2264","msub":{"mi":["N","A"]}}}],"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}}]}},{"mrow":{"mo":["(",")"],"mn":"12"}}]}}}}},"We keep the \u2202C\/\u2202Pterm here because we want to be able to handle cases where some active constraints are insensitive to the parameters, so \u2202C\/\u2202P\u22480 in some sense.","When solving (11), we are solving a transpose system involving the simulator Jacobian matrices so, as in the normal formulation, we solve this system backwards in time. In order to use the same \u201cbackwards in time\u201d philosophy when solving (12), we re-write it as",{"@attributes":{"id":"p-0121","num":"0125"},"maths":{"@attributes":{"id":"MATH-US-00016","num":"00016"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":[{"mrow":[{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"C"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},"mo":["\u2062","+"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}},{"mtd":{"mrow":{"mo":["[","]"],"mrow":{"msub":[{"munder":{"mi":["\u03a6","_"]},"mrow":{"mi":"A","mo":",","mn":"1"}},{"munder":{"mi":["\u03a6","_"]},"mrow":{"mi":"A","mo":",","msub":{"mi":["N","A"]}}}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}},{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","i"]}}]},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}]}}],"mo":"\u00b7"},{"mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":["\u2202","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"P","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mi":"i"}}}]},"mo":["\u2062","\u2062","\u2062"],"msub":{"mo":"\u2758","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","msub":{"mi":"t","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mi":"j"}}}}},"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}},"mrow":{"mrow":[{"mrow":{"mo":["-","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"munder":{"mi":["\u03a6","_"]},"mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mi":"J"}}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":["\u2202","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"P","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mi":"i"}}}]}},{"mo":"\u2200","mrow":{"mi":"i","mo":"\u2264","msub":{"mi":"N","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mi":"A"}}}}],"mo":["\u2062","\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":"t","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mi":"j"}}},"mstyle":{"mtext":{}}}}],"mo":["=","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}}},"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}},"mi":"where"}},{"mrow":{"mo":["(",")"],"mn":"13"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":{"msup":{"mrow":{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mi":"T"},"mo":"\u2062","msub":{"munder":{"mi":["\u03a6","_"]},"mi":"J"}},"mo":"=","msup":{"mrow":{"mo":["{","}"],"mrow":{"mrow":[{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"J"},{"mo":"\u2202","mi":"X"}]}},{"mrow":{"mrow":{"mo":"+","mrow":{"msub":{"munder":{"mi":["\u03a8","_"]},"mi":"R"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"+","mn":"1"}}}}},"mo":"\u00b7","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}],"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}},"mi":"T"}},"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}},"mi":"and"}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"14","mo":"\u2062","mi":"a"}}}]},{"mtd":[{"mrow":{"mrow":{"msup":{"mrow":{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mi":"T"},"mo":"\u2062","msub":{"munder":{"mi":["\u03a6","_"]},"mi":"k"}},"mo":"=","msup":{"mrow":{"mo":["{","}"],"mrow":{"mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":"C","mrow":{"mi":["A","k"],"mo":","}}},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}},"mi":"T"}}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"14","mo":"\u2062","mi":"b"}}}]}]}}}},"We can solve the nequations of (14) first and then solve the other equations backwards to solve the entire system. Note that if N=0, then we only solve for (t) and can arbitrarily set (t)=0 for all other k.","In a similar way, we can solve the nequation of (11) first and then solve the other equations backwards to solve the entire system. Note that if N=0 at a particular time interval, t, then (11) reduces to (t)=(t)","In RESOPT, the sequence of calculations should be as follows:\n\n","This process requires 1+Nsolves of the transpose simulation Jacobian matrices, followed by 1 solve of a small matrix system (order of number of active constraints), and then followed by sgn(N) solve of the transpose simulation Jacobian matrices. Total: 1+sgn(N)+Ntranspose Jacobian matrix solves.","Selection of the Free and Dependent Parameter Sets","In the code, there are N(=N=NOCONL) dependent production control parameters and N(=N=NOPARL\u2212NOCONL) free production control parameters at each time level.","Pre-2006a, only a very simple partitioning of the parameters was used: make the first Nparameters dependent and treat the rest as free.","At 2006a, some logic was added so that the ones with the largest \u2202C\/\u2202P diagonal values (normal approach) or largest \u2202R\/\u2202P column sum (alternative approach) are taken as the free parameters. This logic uses an indirection indexing array, IDXP, to convert from the original parameter order to the sorted order. Original arrays such as \u2202R\/\u2202P, \u2202F\/\u2202P, etc. are stored in original order (as they are calculated before the parameter split. Intermediate arrays, such as (\u2202C\/\u2202P)are stored in local order.","Free Parameter Search Direction","Once we have successfully stepped backwards over all the time intervals, we have the complete vector of Lagrangian derivatives, \u2202L\/\u2202P, for the free production control parameters. We use these to determine the free production control parameter search step, \u0394P, (using either steepest descent or conjugate gradients in the current code).","Forward Integration: Dependent Parameter Search Direction","For any \u0394P, the linearized forms of the perturbed reservoir constraint equations and the active optimization constraint equations give",{"@attributes":{"id":"p-0131","num":"0141"},"maths":{"@attributes":{"id":"MATH-US-00017","num":"00017"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062","\u2062"],"mi":["\u0394","X"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","d"]}},{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]}}],"mo":["+","+"]},"mo":"=","mn":"0"}},{"mrow":{"mo":["(",")"],"mn":"15"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062","\u2062"],"mi":["\u0394","X"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","d"]}},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]}}],"mo":["+","+"]},"mo":"=","mn":"0"}},{"mrow":{"mo":["(",")"],"mn":"16"}}]}]}}}},"Hence the Nactive constraint equations can be seen as a partitioning of the production control parameters, P, into {P, P} where the first Nproduction control parameters, P, are dependent on the remaining (free) ones, P, through the (generally non-linear) constraint and (definitely non-linear) reservoir equations.","Original Formulation","Re-arranging (16) gives",{"@attributes":{"id":"p-0134","num":"0144"},"maths":{"@attributes":{"id":"MATH-US-00018","num":"00018"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","d"]}},{"mrow":[{"mo":"-","msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]}},{"mo":"-","mn":"1"}]}},{"mo":["(",")"],"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]}},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062","\u2062"],"mi":["\u0394","X"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":"+"}}],"mo":"\u2062"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"17"}}]}}}}},"Substituting (17) into (15) gives",{"@attributes":{"id":"p-0136","num":"0146"},"maths":{"@attributes":{"id":"MATH-US-00019","num":"00019"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mrow":{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]},"mo":"-"}}},{"mtd":{"mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}],"mo":["\u2062","\u2062"],"msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]}},{"mo":"-","mn":"1"}]}}}}]}},"mo":["\u2062","\u2062","\u2062"],"mi":["\u0394","X"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mo":"-","mrow":{"mo":["{","}"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":"-","mrow":{"mfrac":[{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]}],"mo":["\u2062","\u2062"],"msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]}},{"mo":"-","mn":"1"}]}}}}},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]}}],"mo":"="}}}},"We split this system into smaller ones, each covering a time interval. We denote the Jacobian for the reservoir equations",{"@attributes":{"id":"p-0138","num":"0148"},"maths":{"@attributes":{"id":"MATH-US-00020","num":"00020"},"math":{"@attributes":{"overflow":"scroll"},"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]}}},"br":{}},{"@attributes":{"id":"p-0139","num":"0149"},"maths":{"@attributes":{"id":"MATH-US-00021","num":"00021"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mrow":[{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}},{"mtd":{"mrow":{"mrow":{"msup":{"mrow":[{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}]}},{"mo":["(",")"],"msub":{"mi":["t","j"]}}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["\u0394","X"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}]},{"mo":"-","mrow":{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}},{"mtd":{"mrow":{"mrow":{"msup":{"mrow":[{"mo":["(",")"],"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}]}}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mrow":{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["P","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mo":"+","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mi":["\u0394","X"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}}}}}]}},{"mrow":{"mo":["(",")"],"mn":"18"}}]}}}},"br":{},"sub":["j","1","n","0"]},{"@attributes":{"id":"p-0140","num":"0150"},"maths":{"@attributes":{"id":"MATH-US-00022","num":"00022"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}},"mrow":{"mi":["\u0394","X"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}}}}},"br":{}},{"@attributes":{"id":"p-0141","num":"0151"},"maths":{"@attributes":{"id":"MATH-US-00023","num":"00023"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":"\u2003","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mrow":{"mrow":[{"mo":"-","msub":{"mi":"m","mn":"1"}},{"mo":["(",")"],"mrow":{"mrow":[{"mo":"\u2146","mi":"PV"},{"mo":"\u2146","mi":"P"}],"mo":"\/"}}],"mo":["\u00b7","\u00b7"],"mi":"\u0394"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["X","P"]}},{"mrow":{"mi":["PV","\u0394"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"X","mn":"1"}}],"mo":"-"}}},{"mtd":{"mrow":{"mrow":[{"mrow":{"mrow":[{"mo":"-","msub":{"mi":"m","mn":"2"}},{"mo":["(",")"],"mrow":{"mrow":[{"mo":"\u2146","mi":"PV"},{"mo":"\u2146","mi":"P"}],"mo":"\/"}}],"mo":["\u00b7","\u00b7"],"mi":"\u0394"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["X","P"]}},{"mrow":{"mi":["PV","\u0394"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"X","mn":"2"}}],"mo":"-"}}},{"mtd":{"mrow":{"mrow":[{"mrow":{"mrow":[{"mo":"-","msub":{"mi":"m","mn":"3"}},{"mo":["(",")"],"mrow":{"mrow":[{"mo":"\u2146","mi":"PV"},{"mo":"\u2146","mi":"P"}],"mo":"\/"}}],"mo":["\u00b7","\u00b7"],"mi":"\u0394"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["X","P"]}},{"mrow":{"mi":["PV","\u0394"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"X","mn":"3"}}],"mo":"-"}}},{"mtd":{"mn":"0"}}]}}}}}},"In RESOPT, following on from the previous calculations, the sequence of these additional calculations is:\n\n","This process requires 1 solve of the simulation Jacobian matrices, followed by 1 solve of a small matrix system (order of number of active constraints). Total: 1 Jacobian matrix solve.","Alternative Formulation","If the active constraints are not sensitive to the dependent parameters, then we cannot use (17) to eliminate the dependent parameters and then solve for \u0394X and P, so instead we have to use (15) to eliminate \u0394X. From (15),",{"@attributes":{"id":"p-0145","num":"0158"},"maths":{"@attributes":{"id":"MATH-US-00024","num":"00024"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":["\u0394","X"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":[{"mo":"-","msup":{"mrow":[{"mo":["(",")"],"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","mi":"X"}]}},{"mo":"-","mn":"1"}]}},{"mo":["(",")"],"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","d"]}},{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]}}],"mo":"+"}}],"mo":"\u2062"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"19"}}]}}}}},"As before, if we specify the parameters, P, and constraints, C, so that each applies to a particular time interval, and remembering the time-structure of \u2202R\/\u2202X, then the entire system (19) becomes:",{"@attributes":{"id":"p-0147","num":"0160"},"maths":{"@attributes":{"id":"MATH-US-00025","num":"00025"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":["\u0394","X"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},{"mrow":[{"mo":"-","msup":{"mrow":[{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["P","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mo":"+","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","f"]}}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}},{"mtd":{"mrow":{"mrow":[{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["P","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},{"mi":["\u0394","X"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}}],"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}}}}]}}],"mo":"\u2062"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"20"}}]}}}},"br":{},"sub":["j","1","n"]},{"@attributes":{"id":"p-0148","num":"0161"},"maths":{"@attributes":{"id":"MATH-US-00026","num":"00026"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mrow":[{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":{"mo":"-","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}},{"mtd":{"mrow":{"mrow":{"msup":{"mrow":[{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","d"]}}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}]}},{"msub":{"mi":["P","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}],"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},"mo":"-"}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"msup":{"mrow":[{"mo":["{","}"],"mrow":{"mi":"Jac","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},{"mo":"-","mn":"1"}]}}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}},"mrow":{"mrow":{"mi":["\u0394","X"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}},"mo":"-"}}}},{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["P","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}}}}}]}}}}}]}},{"mrow":{"mo":["(",")"],"mn":"21"}}]}}}},"br":[{},{}],"sub":["j","1","n","0","d","A","\u0192","1","2","N",{"sub2":"A"}],"in-line-formulae":[{},{}],"u":["\u03a6","\u03a6","\u03a6","\u03a6"]},{"@attributes":{"id":"p-0149","num":"0162"},"maths":{"@attributes":{"id":"MATH-US-00027","num":"00027"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"mi":"Jac","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":[{"mo":["(",")"],"msub":{"mi":["t","j"]}},{"msub":{"munder":{"mover":{"mi":"\u03a6","mo":"~"},"mi":"_"},"mi":"f"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}]},{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":[{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["P","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}},"mo":"+","mfrac":{"mrow":[{"mo":"\u2202","mi":"M"},{"mo":"\u2202","mi":"X"}]}},{"mi":["\u0394","X"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}}],"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":"t","mrow":{"mi":"j","mo":"-","mn":"1"}}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"22","mo":"\u2062","mi":"a"}}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"Jac","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}},"msub":{"munder":{"mover":{"mi":"\u03a6","mo":"~"},"mi":"_"},"mi":"k"}},{"mfrac":{"mrow":[{"mo":"\u2202","mi":"R"},{"mo":"\u2202","msub":{"mi":["P","k"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mo":"\u2200","mrow":{"mi":"k","mo":"\u2208","msub":{"mi":["N","A"]}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"22","mo":"\u2062","mi":"b"}}}]}]}}}},"Then (21) becomes",{"@attributes":{"id":"p-0151","num":"0164"},"maths":{"@attributes":{"id":"MATH-US-00028","num":"00028"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mrow":[{"mo":["{","}"],"mtable":{"mtr":[{"mtd":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","d"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":{"mo":"+","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]}},"mo":"\u2062","msub":{"mo":"\u2758","msub":{"mi":["t","j"]}}}}}},{"mtd":{"mrow":{"mo":["[","]"],"mrow":{"msub":[{"munder":{"mover":{"mi":"\u03a6","mo":"~"},"mi":"_"},"mn":"1"},{"munder":{"mover":{"mi":"\u03a6","mo":"~"},"mi":"_"},"mn":"2"},{"munder":{"mover":{"mi":"\u03a6","mo":"~"},"mi":"_"},"msub":{"mi":["N","A"]}}],"mo":[",",",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}]}},{"msub":{"mi":["P","d"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}}],"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062"],"msub":{"mo":"\u2758","msub":{"mi":["t","j"]}},"mrow":{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]},"mrow":{"mo":["(",")"],"msub":{"mi":["t","j"]}}},"mo":"-"}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","A"]}},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062"],"msub":[{"mo":"\u2758","msub":{"mi":["t","j"]}},{"munder":{"mover":{"mi":"\u03a6","mo":"~"},"mi":"_"},"mi":"f"}]}}}}]}},{"mrow":{"mo":["(",")"],"mn":"23"}}]}}}}},"Note that if N=0 at a particular time interval, t, then (20) reduces to \u0394X(t)={tilde over ()}(t).","In RESOPT, following on from the previous calculations, the sequence of these additional calculations is:\n\n","This process requires 1+Nsolves of the simulation Jacobian matrices, followed by 1 solve of a small matrix system (order of number of active constraints), and then followed by sgn(N) solves of the simulation Jacobian matrices. Total: 1+sgn(N)+NJacobian matrix solves.","Calculating the Step Length","Ensuring that we do not Violate the Constraint Functions","Given that we have a search direction for the production control parameters, P, we next need to know the step length. From (18), we know if we step a distance \u03b1 along \u0394X then we should also step a distance \u03b1 along \u0394P. The active constraint equations will be satisfied inherently, but we must not violate any of the currently inactive ones, so we are interested in how far we can step before we would violate the inactive constraints. In order to hit an inactive constraint at this step,\n\n()=0\n","Expanding this to first order and re-arranging gives",{"@attributes":{"id":"p-0157","num":"0174"},"maths":{"@attributes":{"id":"MATH-US-00029","num":"00029"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"\u03b1","mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"-","mrow":{"msub":{"mi":["C","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"X","mo":",","msub":{"mi":["P","f"]}}}}},{"mo":["(",")"],"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","i"]}},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062","\u2062"],"mi":["\u0394","X"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","i"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]}}],"mo":"+"}}]},"mo":"\u2062","mrow":{"mo":"\u2200","mrow":{"mi":"i","mo":"\u2264","msub":{"mi":["N","I"]}}}}}}}},"The closest constraint (i.e. the one that would be first violated if an unrestricted amount of the search direction were used) is the one with the minimum value of \u25a1.",{"@attributes":{"id":"p-0159","num":"0176"},"maths":{"@attributes":{"id":"MATH-US-00030","num":"00030"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03b1","mo":"=","mrow":{"munder":{"mi":["min","i"]},"mo":"\u2062","mrow":{"mo":["{","}"],"mfrac":{"mrow":[{"mo":"-","mrow":{"msub":{"mi":["C","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"X","mo":",","msub":{"mi":["P","f"]}}}}},{"mo":["(",")"],"mrow":{"mrow":[{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","i"]}},{"mo":"\u2202","mi":"X"}]},"mo":["\u2062","\u2062","\u2062"],"mi":["\u0394","X"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["C","i"]}},{"mo":"\u2202","msub":{"mi":["P","f"]}}]},"mo":["\u2062","\u2062","\u2062"],"mi":"\u0394","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","f"]}}],"mo":"+"}}]}}}}},{"mrow":{"mo":["(",")"],"mn":"24"}}]}}}}},"In RESOPT, following on from the previous calculations, the sequence of additional calculations is as follows:\n\n","In RESOPT, the user can impose simple bounds on the production control parameter values such as\n\nP\u2266P\u2266P\n","When taking a step in the optimizer, we need to restrict the production control parameter step length by a factor \u03b2 to ensure that do not violate any of these simple bounds. By default, \u03b2 is one.","If a production control parameters new value is greater than its upper bound, then",{"@attributes":{"id":"p-0164","num":"0182"},"maths":{"@attributes":{"id":"MATH-US-00031","num":"00031"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03b2","mo":"=","mfrac":{"mrow":[{"msub":{"mi":["P","Ui"]},"mo":"-","msubsup":{"mi":["P","i","new"]}},{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","i"]}}]}}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"25","mo":"\u2062","mi":"a"}}}]}}}}},"If a production control parameters new value is less than its lower bound, then",{"@attributes":{"id":"p-0166","num":"0184"},"maths":{"@attributes":{"id":"MATH-US-00032","num":"00032"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03b2","mo":"=","mfrac":{"mrow":[{"msubsup":{"mi":["P","i","new"]},"mo":"-","msub":{"mi":["P","Li"]}},{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["P","i"]}}]}}},{"mrow":{"mo":["(",")"],"mrow":{"mn":"25","mo":"\u2062","mi":"b"}}}]}}}}},"In RESOPT, following on from the previous calculations, the sequence of additional calculations is as follows:","Loop over all production control parameters, if necessary, solving (25) for \u03b2 and then modifying the control parameter step length.","Finally in RESOPT, we conduct a line-search along the search direction to complete this step of the optimizer.","Once we have exited the line-search, we look for the next production control parameter step direction.","Sub-Functions in the Adjoint Optimizer Code","The objective function in the adjoint optimizer, J, can take the following general form:",{"@attributes":{"id":"p-0172","num":"0190"},"maths":{"@attributes":{"id":"MATH-US-00033","num":"00033"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"J","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"i"},"mo":"\u2062","mrow":{"msub":[{"mi":["C","i"]},{"mi":["J","i"]}],"mo":"\u2062"}}}}}},"This is a summation over sub-functions, J. Here Cis specified for each sub-function in the OPTFUNC keyword and the sub-function, J, is given by",{"@attributes":{"id":"p-0174","num":"0192"},"maths":{"@attributes":{"id":"MATH-US-00034","num":"00034"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["J","i"]},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"t","mo":"=","mrow":{"msub":{"mi":"t","mn":"1"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"i"}}},{"msub":{"mi":"t","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"i"}}]},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["d","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"msub":{"mi":["f","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}],"mo":["\u2062","\u2062","\u2062","\u2062"],"mi":["\u0394","t"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}},"br":[{},{},{},{}],"sub":["i","1","2","i","i","i","years "],"in-line-formulae":[{},{}],"i":["d","t","+r"],"sup":["\u2212(t",{"sub2":"years"},") "]},"The user can specify multiple sub-functions in the OPTFUNC keyword. For example, optimize field oil production while penalizing water production from well \u2018PROD\u2019 between timesteps 2 and 7:",{"@attributes":{"id":"p-0176","num":"0194"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["OPTFUNC",{},{},{},{},{}]},{"entry":"\u2003\u2003\u2003\u2003\u2018FOPT\u2019 FIELD\u2003\u2003\u2003\/"},{"entry":["\u2003\u2003\u2003\u2003\u2018WWPT\u2019\u2003\u2003\u2003PROD","\u22121.0","0.0","2","7","\/"]},{"entry":"\/"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"This keyword defines the following define the sub-functions:",{"@attributes":{"id":"p-0178","num":"0196"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}},{"entry":["i","Domain","Type","Fluid phase","Fluid type","C","r","t(i)","t(i)"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","Field","Total","Oil","Production","+1","0","1","end"]},{"entry":["2","Well","Total","Water","Production","\u22121","0","2","7"]},{"entry":[{},"PROD"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Each constraint is included in the objective function as a pair of additional sub-functions, \u0192and \u0192. The Lagrange multiplier will multiply these constraint sub-functions in order to incorporate them in the objective function.",{"@attributes":{"id":"p-0180","num":"0198"},"maths":{"@attributes":{"id":"MATH-US-00035","num":"00035"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"L","mo":"\u2061","mrow":{"mo":["(",")"],"munder":{"mi":["\u03bb","_"]}}},{"mrow":[{"mi":"J","mo":"\u2061","mrow":{"mo":["(",")"],"munder":{"mi":["\u03bb","_"]}}},{"mi":"\u03a6","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"munder":{"mi":["\u03bb","_"]}}}}],"mo":"-"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mi":"J","mo":"\u2061","mrow":{"mo":["(",")"],"munder":{"mi":["\u03bb","_"]}}},{"mi":"\u03a6","mo":["(",")"],"mrow":{"munder":{"mo":"\u2211","mi":"i"},"mo":"\u2062","mrow":{"msub":{"mi":["f","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"munder":{"mi":["\u03bb","_"]}}}}}],"mo":"-"}}}}]}}}},"This sub-function approach has the advantage that the gradients of the sub-functions can be accumulated to give the gradient of the function.","Simple Constraints","These are limits on the simulation quantities themselves. For example, the production rate must not exceed 2000 in well PROD. The constraint is re-written as follows:\n\nWOPR\u22662000\n\n2000\u22660\n","This is handled as the following pairs of sub-functions (one pair for each report index at which the constraint is active):",{"@attributes":{"id":"p-0184","num":"0202"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}},{"entry":["i","Domain","Type","Fluid phase","Fluid type","C","r","t(i)","t(i)"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["2j \u2212 1","Well","Rate","Oil","Production","1","\u2014","All t(i)","t(i)"]},{"entry":[{},"PROD"]},{"entry":["2j","Well","Constant","\u2014","\u2014","\u22122000","\u2014","All t(i)","t(i)"]},{"entry":[{},"PROD"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}]}}},"If a \u201cgreater than\u201d constraint is specified, the constraint is re-written as follows:\n\nWOPR\u226750\n\n50\u22660\n","This is handled as the following pairs of sub-functions (one pair for each report index at which the constraint is active):",{"@attributes":{"id":"p-0187","num":"0205"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"Fluid","Fluid",{},{},{},{}]},{"entry":["i","Domain","Type","phase","type","C","r","t(i)","t(i)"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["2j \u2212","Well","Rate","Oil","Pro-","\u22121","\u2014","All t(i)","t(i)"]},{"entry":["1","PROD",{},{},"duction"]},{"entry":["2j","Well","Constant","\u2014","\u2014","50","\u2014","All t(i)","t(i)"]},{"entry":[{},"PROD"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}}},"br":{}},"These are limits on derived simulation quantities. For example, the gas-oil ratio must not exceed 1.5 in well PROD. The constraint is re-written as follows:",{"@attributes":{"id":"p-0189","num":"0207"},"maths":[{"@attributes":{"id":"MATH-US-00036","num":"00036"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"WGOR","mo":"\u2264","mn":"1.5"}}},{"@attributes":{"id":"MATH-US-00036-2","num":"00036.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mi":["WGPR","WOPR"]},"mo":"\u2264","mn":"1.5"}}},{"@attributes":{"id":"MATH-US-00036-3","num":"00036.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"WGPR","mo":"-","mrow":{"mrow":{"mo":["(",")"],"mn":"1.5"},"mo":"\u2062","mi":"WOPR"}},"mo":"\u2264","mn":"0"}}}]},"This is handled as the following pairs of sub-functions (one pair for each report index at which the constraint is active):",{"@attributes":{"id":"p-0191","num":"0209"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"Fluid","Fluid",{},{},{},{}]},{"entry":["i","Domain","Type","phase","type","C","r","t(i)","t(i)"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["2j \u2212","Well","Rate","Gas","Pro-","1","\u2014","All t(i)","t(i)"]},{"entry":["1","PROD",{},{},"duction"]},{"entry":["2j","Well","Rate","Oil","Pro-","\u22121.5","\u2014","All t(i)","t(i)"]},{"entry":[{},"PROD",{},{},"duction"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"As another example, the water cut must not exceed 0.2 in well PROD. The constraint is re-written as follows:",{"@attributes":{"id":"p-0193","num":"0211"},"maths":[{"@attributes":{"id":"MATH-US-00037","num":"00037"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"WWCT","mo":"\u2264","mn":"0.2"}}},{"@attributes":{"id":"MATH-US-00037-2","num":"00037.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mi":"WWPR","mrow":{"mi":["WWPR","WOPR"],"mo":"+"}},"mo":"\u2264","mn":"0.2"}}},{"@attributes":{"id":"MATH-US-00037-3","num":"00037.3"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"WWPR","mo":"-","mrow":{"mrow":{"mo":["(",")"],"mfrac":{"mn":"0.2","mrow":{"mn":["1","0.2"],"mo":"-"}}},"mo":"\u2062","mi":"WOPR"}},"mo":"\u2264","mn":"0"}}}]},"This is handled as the following pairs of sub-functions (one pair for each report index at which the constraint is active):",{"@attributes":{"id":"p-0195","num":"0213"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}},{"entry":[{},{},{},"Fluid","Fluid",{},{},{},{}]},{"entry":["i","Domain","Type","phase","type","C","r","t(i)","t(i)"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["2j \u2212","Well","Rate","Water","Pro-","1","\u2014","All t(i)","t(i)"]},{"entry":["1","PROD",{},{},"duction"]},{"entry":["2j","Well","Rate","Oil","Pro-","\u22120.25","\u2014","All t(i)","t(i)"]},{"entry":[{},"PROD",{},{},"duction"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"When comparing constraint functions to see which is the most binding, we need to normalize them so that we can make a far comparison between constraints on data type with vastly different units.","Simple Constraints","For simple constraints, the constraint value is the obvious choice. For example, to normalize\n\n2000\u22660\n\nuse 2000 to change it to\n",{"@attributes":{"id":"p-0198","num":"0216"},"maths":{"@attributes":{"id":"MATH-US-00038","num":"00038"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mfrac":{"mi":"WOPR","mn":"2000"},"mo":"-","mn":"1"},"mo":"\u2264","mn":"0"}}},"br":[{},{}]},"For a GOR constraint, the constraint has been transformed from . . .\n\n1.5\u22660\n\nto the following which can be written as sub-functions . . .\n\n\u2212(1.5)0\n\nIf we were to normalize the original constraint equation, we would divide by the constraint value (as we did in the case of simple constraints). This would give . . .\n",{"@attributes":{"id":"p-0200","num":"0218"},"maths":{"@attributes":{"id":"MATH-US-00039","num":"00039"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mrow":{"mo":["(",")"],"mfrac":{"mn":["1","1.5"]}},"mo":"\u2062","mfrac":{"mi":["WGPR","WOPR"]}},"mo":"-","mn":"1"},"mo":"\u2264","mn":"0"}}}},"So the normalizing factor that needs to be applied to the pair of sub-functions in order to get the same result as normalizing the original constraint equation is 1.5 times OPR.","Hence the normalizing factor is the constraint times the oil production rate in the domain of the constraint.","Complex WCT Constraint","For a WCT constraint, the constraint has been transformed from . . .\n\n0.2\u22660\n\nto the following which can be written as sub-functions . . .\n",{"@attributes":{"id":"p-0204","num":"0222"},"maths":{"@attributes":{"id":"MATH-US-00040","num":"00040"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"WWPR","mo":"-","mrow":{"mrow":{"mo":["(",")"],"mfrac":{"mn":"0.2","mrow":{"mn":["1.0","0.2"],"mo":"-"}}},"mo":"\u2062","mi":"WOPR"}},"mo":"\u2264","mn":"0"}}}},"If we were to normalize the original constraint equation, we would divide by the constraint value (as we did in the case of simple constraints). This would give . . .",{"@attributes":{"id":"p-0206","num":"0224"},"maths":{"@attributes":{"id":"MATH-US-00041","num":"00041"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mrow":{"mo":["(",")"],"mfrac":{"mn":["1","0.2"]}},"mo":"\u2062","mfrac":{"mi":"WWPR","mrow":{"mo":["(",")"],"mrow":{"mi":["WOPR","WWPR"],"mo":"+"}}}},"mo":"-","mn":"1"},"mo":"\u2264","mn":"0"}}}},"So the normalizing factor that needs to be applied to the pair of sub-functions in order to get the same result as normalizing the original constraint equation is 0.2 times the sum of OPR and WPR.","Hence the normalizing factor is the constraint times the sum of the oil and water production rates in the domain of the constraint.","Handling of RESTARTS","In a non-restarted deck, the scope of the functions, sub-functions, parameters and constraints in RESOPT is the same as that of the simulation (i.e. 1 to NTOTRS is the same as 1 to NOPTIM) so we can use the same indexing in both areas of the code and we can compare optimizer step index with the simulation report index.","In a restarted deck, the scope of the simulation is IRESTZ+1 to NTOTRS, while the scope of the storage in the RESOPT code is 1 to NOPTIM(=NTOTRS\u2212IRESTZ). We use the RESOPT scope internally because it is efficient for storage.","Hence the SOPT array (which holds to double precision optimizer run time information such as the current time value and the size of time steps) is indexed from 1 to NOPTIM. Many of the arrays holding information and results for parameters are indirectly indexed using this optimizer scope also.","These two scoping methods are shown in the table below:",{"@attributes":{"id":"p-0213","num":"0231"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Scope","First Index","Last Index"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Non-","Simulation","1","NTOTRS"]},{"entry":["restart","Optimization","1","NOPTIM (=NTOTRS)"]},{"entry":"case"},{"entry":["Restart","Simulation","IRESTZ + 1","NTOTRS"]},{"entry":["case","Optimization","1","NOPTIM (=NTOTRS \u2212 IRESTZ)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"In the RESOPT code, we only use the simulation report indices in the following situations:\n\n","To convert from optimizer step index (ISTEP) to simulation report index (JSTEP), just add IRESTZ. The standard mechanism in the code is to just do this locally when required, e.g. JSTEP=ISTEP+IRESTZ","Array Naming Convention for Adjoint Optimizer Code","Typical arrays in the adjoint optimizer code are IOPP, SOPP, ZOPP, IOPF, SOPF, IOPS, SOPS, ZOPS and SOPG. The naming convention for these arrays is as follows:",{"@attributes":{"id":"p-0217","num":"0239"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"chemistry":{"@attributes":{"id":"CHEM-US-00002","num":"00002"},"img":{"@attributes":{"id":"EMI-C00002","he":"41.91mm","wi":"75.52mm","file":"US07640149-20091229-C00002.TIF","alt":"embedded image","img-content":"table","img-format":"tif"}}}}},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"These flags all apply to DEBUG3\n\n","The above description of the \u2018Adjoint Method of Calculating Gradients\u2019 being thus described, it will be obvious that the same may be varied in many ways. Such variations are not to be regarded as a departure from the spirit and scope of the claimed method or apparatus or program storage device, and all such modifications as would be obvious to one skilled in the art are intended to be included within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A full understanding will be obtained from the detailed description presented herein below, and the accompanying drawings which are given by way of illustration only and are not intended to be limitative to any extent, and wherein:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 4 and 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIGS. 6 and 7","FIG. 5"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 8","FIG. 6","FIG. 6"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 10","FIGS. 5 and 6"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 12","FIGS. 10 and 11"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIGS. 13 through 23","FIG. 12"]}]},"DETDESC":[{},{}]}
