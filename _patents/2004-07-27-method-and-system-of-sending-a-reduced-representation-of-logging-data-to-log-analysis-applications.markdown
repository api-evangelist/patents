---
title: Method and system of sending a reduced representation of logging data to log analysis applications
abstract: A method and system of reducing logging data for log analysis applications. Some embodiments may be a method comprising sending a request for logging data from a log analysis application to a repository of logging data gathered by a logging device, and sending a reply comprising a reduced representation of at least some of the logging data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07444362&OS=07444362&RS=07444362
owner: Halliburton Energy Services, Inc.
number: 07444362
owner_city: Houston
owner_country: US
publication_date: 20040727
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","BACKGROUND OF THE INVENTION","SUMMARY","NOTATION AND NOMENCLATURE","DETAILED DESCRIPTION"],"p":["None.","Not applicable.","1. Field of the Invention","Embodiments of the invention are directed to sending a reduced representation of logging data from a repository to a log analysis application.","2. Background of the Invention","Modern petroleum drilling and production operations demand a great quantity of information relating to parameters and conditions downhole. Such information may comprise characteristics of the earth formations traversed by the borehole, along with data relating to the size and configuration of the borehole itself. The collection of information relating to conditions downhole, which may be referred to as \u201clogging,\u201d can be performed by several methods.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1","b":["100","100","102","104","106","104","108","102","110","112","110","102","102","112","112","114","116","116"]},"An alternative method of logging is the collection of data during the drilling process. Collecting data during the drilling process eliminates the necessity of removing the drilling assembly to insert a wireline logging device. Designs for measuring conditions downhole, including the movement and location of the drilling assembly contemporaneously with the drilling of the well, have come to be known as \u201cmeasurement-while-drilling\u201d techniques, or \u201cMWD\u201d. Similar techniques, concentrating more on the measurement of formation properties, have been referred to as \u201clogging while drilling\u201d techniques, or \u201cLWD\u201d. While distinctions between MWD and LWD may exist, the terms MWD and LWD often are used interchangeably. For the purposes of this disclosure, the term LWD will be used with the understanding that this term encompasses both the collection of formation properties and the collection of information relating to the movement and position of the drilling assembly.","In both LWD and wireline logging, the logging data obtained from a logging device may be transferred to the surface and eventually finds its way to a data repository, such as a database. The repository stores the logging data and handles requests for accessing the logging data by applications or programs designed to aid in interpreting the log data, some of which may be web-based. Geologists may use the programs to view the measurements obtained from the logging device.","The repository may store each datum of the logging data as a pair of floating point numbers. For each datum, a first floating point number may represent the value of the formation (e.g., resistivity or conductivity) and\/or borehole characteristic measured, and a second floating point number may represent the associated depth. Thus, when requesting logging data from the repository, two floating point numbers may be sent for each datum. The time required to transfer logging data from the repository, especially over serial communication channels such as a standard 28.8 Kbps (kilo-bit per second) modem, may take from several minutes to several hours.","Thus, efficient mechanisms for transferring measurements from a data repository are desirable.","The problems noted above are solved in large part by a method and system of sending a reduced representation of logging data to a log analysis application. Some embodiments may be a method comprising sending a request for logging data from a log analysis application to a repository of logging data gathered by a logging device, and sending a reply comprising a reduced representation of at least some of the logging data.","Certain terms are used throughout the following description and claims to refer to particular system components. This document does not intend to distinguish between components that differ in name but not function.","In the following discussion and in the claims, the terms \u201cincluding\u201d and \u201ccomprising\u201d are used in an open-ended fashion, and thus should be interpreted to mean \u201cincluding, but not limited to . . . \u201d. The term \u201ccouple\u201d or \u201ccouples\u201d is intended to mean either an indirect or direct connection. Thus, if a first device couples to a second device, that connection may be through a direct connection or through an indirect connection via other devices and connections.","The term \u201cplotting\u201d refers herein not only to the printing of a plot with a printing or plotting device, but also to the displaying of a plot on a display device (e.g., a video display). In addition, the term \u201clogging data\u201d refers to data associated with measurements gathered by a logging device, independent of whether the data has its associated depth or time value.","The following discussion is directed to various embodiments of the invention. Although one or more of these embodiments may be preferred, the embodiments disclosed should not be interpreted, or otherwise used, as limiting the scope of the disclosure unless otherwise specified. In addition, one skilled in the art will understand that the following description has broad application, and the discussion of any embodiment is meant only to be illustrative of that embodiment and not intended to suggest that the scope of the disclosure is limited to that embodiment.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2A","b":["200","200","202","204","210","204","212","204","212","212","204"]},"The computer  may comprise a central processing unit (CPU)  coupled to a memory  and an input\/output (I\/O) interface . The memory  may comprise any type of volatile or non-volatile memory, such as random access memory (RAM), read only memory (ROM), and\/or a hard drive. Stored within the memory  is a log analysis application . The log analysis application  may generate plots of the logging data  and\/or otherwise allow a user to analyze the logging data. Once generated by the log analysis application , a plot may be displayed on the display  coupled to the computer , and\/or printed by the printer  coupled to the computer .","Although not specifically shown, a user may interface with the log analysis application  through devices such as a keyboard and\/or pointing device. The user may utilize these I\/O devices to specify a plot desired to be generated by the log analysis application .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2B","b":["250","250","252","204","202","254","256","252","258","260","252","258","220","202","258","220","202"]},"In alternative embodiments, the log analysis application  may execute on the server  after being invoked, possibly by way of a web-browser or web-based interface, such as \u201c.NET\u201d. In these embodiments, the web-browser may run on computer , and may communicate with the log analysis application  running on the server  though one or more application threads.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["220","204","204","302","304","302","304","220","306","216","302","302","308","216","306","308","302","220"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 4","FIG. 2A","FIG. 2B"],"b":["402","220","204","404","302","406","302","220","408","410","202","210","254","256","302"]},"One reduction technique involves sending the requested logging data without the associated depth values. In particular, a reply to a request for logging data may comprise only a start depth and an end depth value. The logging data is assumed to be equally spaced between the start depth and end depth for plotting purposes.  illustrates a layout  of a reply  () in accordance with these embodiments of the invention. The layout  comprises the following fields: a start depth , an end depth , a number of measurements , and a first logging datum  through a last logging datum . For example, each of the fields - may hold up to four bytes, the size of a single-precision floating-point number. Depending upon the number of measurements contained in layout , the total size may vary from 16 bytes (for a reply containing a single logging datum) to 4n+12 bytes, for a reply containing n measurements.","The start depth field  may store a value indicative of the vertical depth associated with the logging datum in the first logging data field . The end depth field  may store a value indicative of the vertical depth associated with the logging data in the last logging datum field . The number of measurements field  may store a total number of data points in the layout . For example, a value of \u201c50\u201d may indicate that the reply contains fifty data points, which are stored in the first measurement field  through the last measurement field . In alternative embodiments using time based logging data, the start depth field  and end depth field  may respectively contain start time and end time for the logging data.","The log analysis application  may utilize the information contained in the layout  to generate a plot. When receiving logging data in accordance with the layout , the log analysis application  may plot the data points as equally spaced points (i.e., each logging datum representing equidistant depths). Thus, for determining the depth associated with each logging datum only the start and end depths stored in the start depth field  and the end depth field  respectively, and the number of measurements stored in the number of measurement field , are needed by the log analysis application  to generate the plot. The log analysis application  may calculate the spacing between the data points using the following relation:\n\nSpacing=[abs()]\/(\u22121)\u2003\u2003(1)\n\nwhere Dis the value stored in the end depth  field; Dis the value stored in the start depth  field; Nis the value stored in the number of measurements  field; and abs( ) represents the absolute value function. Using the spacing and one of the start depth or end depth, the depth associated with each measurement may be calculated.\n","Variations in the layout  may also be used. For example, a spacing field may be included, eliminating the need for either the start depth field  or the end depth field . Regardless of the mechanism by which spacing and depth information is conveyed, using layout  results in not having to transmit a floating point value indicative of depth with every logging datum and thus a reduction in size of the reply  by approximately a factor of two over a standard reply that contains a pair of floating point numbers for each logging datum. In alternative embodiments the layout  may use an end token value. Thus, instead of a number of measurements field, the occurrence of a particular unique value in the compressed sequence may indicate the end of the sequence.","In the foregoing discussion, reduction of the floating point logging data is made by sending at least some of the floating point logging data without corresponding values indicative of depth. In some cases the resolution of the floating point logging data may be reduced without a noticeable effect on a plot generated by the log analysis application. For example, the resolution of the display  () or the resolution of a plot printed by the printer  may not require floating point precision. Thus, in addition to (or in place of) the reduction technique of sending some logging data without associated values indicative of depth, some embodiments reduce the size of the logging data sent in the layout  by mapping the logging data to lower resolution.","In accordance with at least some embodiments, the request  () may include characteristics of the plot, such as a left plot limit, a right plot limit, and attributes of the plotting parameters (i.e., linear or logarithmic). The database server  may map the requested floating point logging data to a lower resolution, based on the characteristics, before transmitting the reply . In these embodiments, the first measurement field  through last measurement field  () may contain the lower resolution data, thereby reducing the size of the layout . The following pseudo code illustrates a mapping from floating point to exemplary 16 bit unsigned integers:\n\n=[()*65535]\/()\n\nIF x<0, THEN x=0\n\nIF x>65535, THEN x=65535\n\nINTEGER=INT()\n\nwhere Mrepresents the logging datum to be mapped; Lrepresents the left-side plot limit; Rrepresents the right-side plot limit; the function INT converts a floating point to the nearest integer, rounding when appropriate; and INTEGER represents the resulting 16-bit mapped integer. Similarly, for a logarithmic plot, the database server  may map the requested floating point into lower resolution numbers, such as 16-bit unsigned numbers, using the following pseudo code:\n\n=[LOG()\u2212LOG()*65535]\/[(LOG()\u2212LOG()]\n\nIF x<0, THEN x=0\n\nIF x>65535, THEN x=65535\n\nINTEGER=INT()\n\nwhere Mrepresents the logging datum to be mapped; Lrepresents the left-side plot limit; Rrepresents the right-side plot limit; the function INT converts a floating point to the nearest integer, rounding when appropriate; LOG represents the log base 10 function; and INTEGER represents the resulting 16-bit mapped integer.\n","In some cases it may be desirable to plot logging data beyond the plot limits (e.g., plotting beyond the pre-printed grid on plot paper). In these cases, the database server  may map the requested floating point logging data into lower resolution, such as 16-bit unsigned numbers, using the following pseudo code:\n\n=[()*21844]\/()+21845;\n\nIF x<0, THEN x=0;\n\nIF x>65535, THEN x=65535;\n\nINTEGER=INT();\n\nSimilarly, for a logarithmic plot with the ability to plot beyond the plot limits, the database server  may map the requested floating point logging data into lower resolution, using the following pseudo code:\n\n=[LOG()\u2212LOG()*21844]\/[(LOG()\u2212LOG()]+21845;\n\nIF x<0, THEN x=0;\n\nIF x>65535, THEN x=65535;\n\nINTEGER=INT();\n\nwhere Mrepresents the logging data to be mapped; Lrepresents the left-side plot limit; Rrepresents the right-side plot limit; the function INT converts a floating point datum to the nearest integer, rounding when appropriate; and LOG represents the log base 10 function; and INTEGER represents the resulting mapped logging datum.\n","In embodiments that permit plotting beyond the plot limits, equal spans of integers may represent sections of the plot. For example, one-third of the numbers capable of being represented by a 16-bit integer may be utilized for wraps on the left side (i.e., 0 to 21844), one-third for wraps on the right side (i.e., 43690 to 65535), and one-third for the unwrapped data (i.e., 21845 to 43689). By mapping the logging data in the foregoing fashion, the size of the layout  may be reduced by approximately a factor of four over a standard reply containing a pair of floating point numbers for each logging datum.","In some embodiments, mapping of the floating point logging data to lower resolution (with or without the reduction technique of refraining from sending at least some values indicative of depth) may be performed on segments of floating point logging data. The segments may be chosen to optimize the compression or mapping to lower resolution, and segmenting may take many forms. In some embodiments, any one logging datum's membership in a segment may be based on the ratio of the largest logging datum to smallest logging datum of the segment.  illustrates a method of segmenting based on ratio, and then mapping to lower resolution. The procedure may start (block ), and proceed to the database server  scanning a segment of the requested logging data (block ). While scanning, the ratio of the maximum scanned logging datum to the minimum scanned logging datum is computed (block ). If the ratio does not exceed a predetermined threshold value (block ), the second logging datum becomes part of the segment and the scanning continues (block ). If a logging datum causes the ratio to be exceeded, or all of the requested logging data values has been scanned, the logging data within the segment are mapped to a lower resolution data format (block ) and transmitted to the log analysis application  (block ). If all the requested logging data has not been associated with a segment and transmitted to the log analysis application , the scanning and ratio computation continues (block ). When all of the requested logging data are received by the log analysis application  (block ), the procedure may end (block ).","As an alternative to segmenting based on a ratio of a maximum logging datum to minimum logging datum value, some embodiments may segment the data based on comparing a plurality of most significant bits of the logging data.  illustrates a method of segmenting in accordance with alternative embodiments, and then mapping to a lower resolution. The procedure may start (block ) and proceed to converting the identified logging data into integers (block ). Because at this stage maintaining as great a resolution of the logging data as possible is desired, the converting of the logging data may be from floating point numbers to 24 or 32-bit integers. As will be discussed more fully with respect to block  and , the conversion to integers is to allow for the exclusive-or operations, and in alternative embodiments where the program allows exclusive-or operations on floating point numbers, this conversion step may be omitted. The next step in the process may be the server  scanning a segment of the requested logging data (block ). While scanning, the database server  performs exclusive-or (XOR) operations (block ). If the exclusive-or operation indicates that the first N number of bits of two logging data values are the same, (block ), the second logging datum becomes a part of the segment and the scanning continues (block ). If the first N number of bits of a logging datum are not the same as the other logging data in the segment, that particular segment may be considered closed and the next step may be identifying the minimum and maximum values within the segment (block ). After the minimum and maximum values are identified, the resolution of the logging data is reduced (block ). In accordance with at least some embodiments of the invention, the resolution of the logging data within the segment may be reduced to an integer having less than 32 bits, and preferably a 16-bit integer. Thereafter, the data is transmitted (block ) and if all the segments have been reduced and sent (block ), the process ends (block ). If, on the other hand, the logging data remains to be segmented and reduced (block ), the process returns to scanning the logging data for purposes of identifying a segment (block ).","In the embodiments discussed to this point a reduced representation of the logging data is made by refraining from sending corresponding depth information and\/or mapping the logging data to lower resolution. In accordance with some embodiments, the log analysis application  may restore the logging data from the lower resolution to a higher resolution, thereby increasing the resolution of the logging data yet still reducing bandwidth requirements between the log analysis application and the repository.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 8","b":["800","800","802","804","806","808","810","812","814","816","818","802","804","816","806","818","808","810","812","812","816","818"]},"The database server  preferably maps the requested floating-point logging data to a lower resolution data format (block  of , block  of ), such as 16-bit unsigned numbers, using the following relation:\n\nINTEGER=INT(()*65535\/();\u2003\u2003(2)\n\nwhere Mrepresents the logging datum to be mapped; Mrepresents the minimum logging datum value stored in minimum value field ; the function INT converts a floating point number to the nearest integer, rounding when appropriate; and INTEGER represents the resulting mapped logging datum. By mapping in this fashion, the entire resolution provided by the lower resolution data format (e.g., a 16-bit unsigned number) is utilized to convey the logging datum.\n","Once received by the log analysis application , the mapped values may be restored to a higher resolution (block ), such as floating-point integers, using the following relation:\n\nRESTORED_VALUE=(FLOAT(INTEGER)*()\/65535)+\u2003\u2003(3)\n\nwhere INTEGER represents the mapped logging datum to be restored; Mrepresents the minimum logging datum value stored in the minimum value field ; Mrepresents the maximum logging datum stored in the maximum value field ; and the function FLOAT converts an integer into a floating point representation. Depending upon the value of the ratio chosen as a cut-off for segment formation, the logging data may be compressed by a factor of four, while losing only a small percentage of precision during restoration. For example, a ratio of  as the cut-off for segment formation may result in a maximum error between the actual measurement values and the restored measurement values of 0.000757% to 0.09995%.\n","In addition to or in place of the techniques that create the reduced representation of the logging data, at least some embodiments use a \u201cDelta\u201d compression system to reduce the requested logging data. Delta compression utilizes the change between each consecutive logging datum to encode the values. Consider, for example, a set of logging data for a particular parameter where the formation characteristic or borehole characteristic does not change or changes only slightly logging datum to logging datum. In embodiments where Delta compression is used, a first logging datum of a reply may be in unreduced form (e.g., floating point integer). For a number of consecutive logging data thereafter, in the reply only a change of the logging datum under consideration in relation to the value of the logging datum that was sent in uncompressed form is encoded into the reply. This change in value, or Delta value, may require fewer bits; therefore, the overall number of bits to transfer the logging data is reduced. An example using real numbers may be helpful in understanding the Delta compression concept.","Consider for purposes of explanation only, the following sequence of logging data: , , , , and . In one embodiment, the first logging datum encoded in the reply (i.e., ) may be in its uncompressed format. For some number of logging data points thereafter, only the changes in value from the uncompressed logging datum may be sent. In this example, the values transmitted may be: , +6, +7, +14, and +56.","In more mathematical terms, Delta values may relate back to the previous uncompressed value according to the following equation:\n\n\u2003\u2003(4)\n\nwhere A is the logging datum of interest, \u0394A is the change in value of logging datum A, n is the index to the current datum, and m is the index to the last uncompressed datum of the reply.\n","In the previous embodiments the Delta values encoded are a change in relation to the uncompressed value. However, in alternative embodiments the Delta value encoded in the reply may in relation to the immediately previous value, regardless of whether that value is compressed or uncompressed. Consider for purposes of explanation the same sequence of logging data: , , ,  and . In these alternative embodiments, the number sequence encoded in the reply may be: , +6, +1, +7 and +42. In more mathematical terms, the Delta values in this alternative embodiment may relate back to the immediately previous value (uncompressed or not) according to the following equation:\n\n1]\u2003\u2003(5)\n","Co-pending application Ser. No. 10\/619,197, U.S. Pat. No. 7,068,182, entitled \u201cMethod and Apparatus for Mud Pulse Telemetry,\u201d incorporated herein by reference, describes methods and systems for using Delta values to reduce the size of data transmissions.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 9","b":["900","900","902","904","906","908","910","912","908","910","912"]},"The above discussion is meant to be illustrative of the principles and various embodiments of the present invention. Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the following detailed description, reference will be made to the accompanying drawings in which:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
