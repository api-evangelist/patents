---
title: Speaker annotation objects in a presentation graphics application
abstract: A method, system, and program product for controlling the content displayed during a computer driven presentation of a presentation graphics application. Hidden object presentation properties are assigned to presentation graphics objects during creation of a presentation graphics file, the properties controlling the circumstances under which hidden objects are displayed during a computer driven presentation or screenshow. One type of hidden object presentation property indicates whether an object is viewable on an audience display and presenter display, or only a presenter display, during a multi-display screenshow. Another type of hidden object presentation property, such as hidden object value, determines the audience to which the object is displayed. Hidden object value properties may be hierarchical, individually selectable in any combination, or mutually exclusive. During screenshow setup, one or more display attributes are assigned to each logical display to be used in the screenshow, the display attributes determining the objects viewable thereon.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07672997&OS=07672997&RS=07672997
owner: International Business Machines Corporation
number: 07672997
owner_city: Armonk
owner_country: US
publication_date: 20031112
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application contains subject matter which is related to the subject matter of the following application, which is assigned to the same assignee as this application and is hereby incorporated herein by reference in its entirety:","\u201cMULTI-VALUE HIDDEN OBJECT PROPERTIES IN A PRESENTATION GRAPHICS APPLICATION,\u201d by Chavis et al., Ser. No. 10\/706,374, co-filed herewith, now abandoned.","The present invention relates in general to presentation graphics applications. In particular, the present invention relates to controlling the content displayed during a computer driven presentation of a presentation graphics application.","Presentation graphics software applications are well known in the art. In general, presentation graphics applications allow a user to arrange presentation graphics objects (i.e., text, charts, graphics, etc., hereinafter \u201cobjects\u201d) onto a series of pages or presentation slides, edit and rearrange the objects within a page, add and delete pages, reorder pages, and save the resulting presentation in a file. The resulting presentation may be printed or otherwise converted to physical presentation media, such as transparencies or 35 mm slides, for example.","Modern presentation graphics software applications typically provide an alternative to physical presentation media. The alternative involves delivering the presentation directly to a display device attached to a computer system. Such a computer driven presentation, often termed a \u201cslide show\u201d or \u201cscreen show,\u201d provides an alternative to delivering a presentation using physical presentation media. As used herein, the terms \u201ccomputer driven presentation,\u201d slideshow,\u201d and \u201cscreenshow\u201d are interchangeable. A computer driven presentation is delivered by a computer system running the presentation graphics application used to create the presentation. Alternatively, presentation graphics applications typically provide a user with the ability to prepare a presentation for delivery by a computer system on which the presentation graphics application is not installed.","Presentation graphics applications supporting a computer driven presentation option typically provide a degree of user control during two operations: presentation creation, and slide show setup. While creating a presentation, a user may assign various properties to presentation graphics objects: these properties are referred to herein as object properties. Some object properties, referred to herein as object presentation properties, involve aspects of how the object is presented during a slide show, such as: whether the object appears when the page first appears or upon the occurrence of some event (i.e., a user input or the passage of a user-specified time period), \u201canimation\u201d effects controlling the way in which the object is introduced during a slide show (i.e., the object may just appear, or it may slide in from the right, down from the top, etc.), sounds associated with the introduction of an object, actions to be taken when an object is \u201cclicked\u201d or \u201cmoused over\u201d during a slide show, etc. During slide show setup, a user may select various options controlling aspects of a slide show presentation. For example, user selectable options may include: various visual effects controlling how new pages are introduced, whether new pages are introduced manually or after a specified period of time, whether sounds are associated with the introduction of new pages, the pages to be shown, whether presentation controls are displayed, etc.","Once a user creates a presentation, selects object properties, and selects slide show options, a user saves the presentation in a file. If another version of the presentation is needed, such as for a presentation to a different audience, a user modifies the presentation by changing, rearranging, adding, or deleting objects; changing, rearranging, adding, or deleting pages; modifying object properties and slide show options, etc., then saving the modified presentation in a new file. Thus, if a user wishes to create two presentations containing pages that are substantially similar but differ in some respects (such as differences in the objects appearing on each page), two files are likely needed if both presentations are to be retained with all content, properties, and settings intact.","Presentation graphics objects may be associated with a presentation page by being placed on or within the page, or by other means. For example, presentation graphics applications often provide an opportunity for a user to associate objects such as text or notes with each page of a presentation. These notes, often called speaker notes or simply notes, are typically intended for the presenter rather than the audience. Speaker notes are typically entered in a window or screen region which is separate from the presentation page with which the notes are associated. Speaker notes are, therefore, an example of a presentation graphics object that is associated with a presentation page, but which does not appear on or within the page. Speaker notes may be viewed in a variety of ways. For example, a user may view speaker notes while creating or editing a presentation. Presentation graphics applications often provide the ability to print speaker notes along with the presentation page associated with the notes, for use by a presenter in rehearsing or delivering a presentation.","Modern personal computers, both portable and desktop models, typically support multiple physical display devices. For example, a portable or laptop computer typically includes a permanently attached display, such as an LCD display, often integrated into the laptop cover. Laptop computers further typically include support for an external monitor or projector, which may be used instead of or in addition to the laptop monitor. Furthermore, as DVD drives become more commonly available in laptops, support for television monitors has become more common as well, often provided via an additional physical connector, such as an S-video output. Desktop computer systems typically provide support for a computer monitor, and may also provide support for multiple computer monitors, and may further provide support for a television monitor through an S-video or other output. Hardware support for the plurality of monitors may be provided by a plurality of hardware controllers or adapters, often one adapter per monitor. Alternatively, a single graphics controller may be capable of emulating multiple different controllers and providing multiple outputs at once, providing support for multiple physical display devices with a single hardware graphics controller.","Multiple physical display devices may be treated as a single logical display, or multiple logical displays. When treated as a single logical display, the multiple display devices each display the same content. When treated as multiple logical displays, however, different content may be displayed on each physical device. Operating systems such as MICROSOFT WINDOWS 98 and subsequent versions provide support for multiple monitors, allowing a user to define two logical displays, and various characteristics of each display, such as the resolution and relative logical locations of the two displays.","In order to advantageously use multiple logical displays, a method is employed to determine the content shown on each logical display. Methods are known in the art that involve mapping objects to an intermediate attribute, and then determining the content of each display based upon the intermediate attribute. Specifically, methods involving intermediate attributes such as screen or window, screen or window region, color, page, etc., are known in the art. For instance, a method using a window intermediate attribute displays one set of windows on one logical display, and another set of windows on a second logical display. On each logical display, all objects within displayed windows are displayed, no objects are displayed from non-displayed windows. Also for instance, a method using color as an intermediate attribute displays objects of one set of colors on one logical display, and objects of another set of colors on a second logical display. In this manner, all objects of the same color are shown on the same set of logical displays. Methods involving page or screen region operate in a similar fashion: one set of pages or screen regions is displayed on one logical display, and another set of pages or screen regions are displayed on another logical display. All objects within the same page or screen region are displayed on the same set of logical displays. For example, methods of determining the content of multiple logical displays involving a screen or window intermediate attribute are illustrated in the following U.S. patents: \u201cELECTRONIC PRESENTATION SYSTEM USING PORTABLE STORAGE MEDIA,\u201d by McCullough, U.S. Pat. No. 5,539,658, issued Jul. 23, 1996; \u201cPRESENTATION SUPPORTING METHOD AND APPARATUS THEREFORE,\u201d by Tanikoshi et al., U.S. Pat. No. 5,634,018, issued May 27, 1997; \u201cREMOTE COLLABORATION SYSTEM PERFORMED BY A HOST COMPUTER RUNNING AN APPLICATION PROGRAM AND REMOTE COMPUTERS RUNNING A PROGRAM DISTINCT FROM THE APPLICATION PROGRAM,\u201d by Pommier et al., U.S. Pat. No. 5,944,785, issued Aug. 31, 1999; \u201cCOOPERATIVE WORK SUPPORT SYSTEM FOR MANAGING A WINDOW DISPLAY,\u201d by Katsurabayashi, U.S. Pat. No. 6,308,199, issued Oct. 23, 2001. Methods of determining the content of multiple logical displays involving a page intermediate attribute are illustrated in the following United States Patents: \u201cCOMPUTER CONFERENCING SYSTEM FOR SELECTIVELY LINKING AND UNLINKING PRIVATE PAGE WITH PUBLIC PAGE BY SELECTIVELY ACTIVATING LINKED MODE AND NON-LINKED MODE FOR EACH PARTICIPANT,\u201d by McArdle et al., U.S. Pat. No. 5,581,702, issued Dec. 3, 1996; \u201cMETHOD OF APPARATUS FOR DISPLAYING A SPLIT BAR WINDOW,\u201d by Porter, U.S. Pat. No. 5,721,852, issued Feb. 24, 1998; and \u201cAPPARATUS AND METHOD FOR LINKING PUBLIC AND PRIVATE PAGES IN A CONFERENCING SYSTEM,\u201d by McArdle et al., U.S. Pat. No. 5,859,974, issued Jan. 12, 1999. Methods of determining the content of multiple logical displays involving a screen or window region intermediate attribute are illustrated in the following U.S. patent: \u201cPRIVATE REGIONS WITHIN A SHARED WORKSPACE,\u201d by Smith et al., U.S. Pat. No. 5,107,443, issued Apr. 21, 1992.","A further example of mapping objects to an intermediate attribute, and then determining the content of each display based upon the intermediate attribute, involves displaying a presentation to an audience while displaying additional information, shown in different windows or different window regions, to the presenter. For example, a presentation graphics application sold under the name MICROSOFT POWERPOINT provides support for multiple monitors when used in an operating system environment also having multiple monitor support. The MICROSOFT POWERPOINT presentation graphics application allows a user to establish an audience screen where the presentation is displayed, and a presenter screen where the presentation plus additional information, such as speaker notes and other information, are displayed. All of the additional information displayed on the presenter display is mapped to screen or window regions outside of the presentation pages. Thus, the screen or window region representing the presentation page is shown on both displays, while additional information outside of this region is displayed only on the presenter display.","For the foregoing reasons, therefore, there is a need in the art for a method of determining the content presented on a plurality of logical displays, without mapping presentation objects to an intermediate attribute.","The shortcomings of the prior art are overcome, and additional advantages realized, through the provision of methods of assigning properties to objects, and further through the provision of methods of determining the content displayed during a computer driven presentation based upon the assigned object properties.","In one aspect, the present invention involves a method of assigning hidden object presentation properties to objects within a presentation graphics application, by providing at least one user-selectable hidden object presentation property for a selected object, the object being within a presentation page, the at least one hidden object presentation property indicating at least one display attribute for which the selected object is presented during a computer-driven presentation, the computer-driven presentation being deliverable on a plurality of logical displays, and by associating a selected hidden object presentation property with the selected object in response to a user selection.","In another aspect, the present invention involves a method of displaying a computer-driven presentation on a plurality of logical displays, by providing at least one user-selectable display attribute for each of the plurality of logical displays, the at least one display attribute indicating hidden object properties of objects to be presented on each logical display during the computer-driven presentation, the objects being within presentation pages, by assigning one of said at least one display attribute to each of said plurality of logical displays in response to a user selection, and by presenting, on each of the plurality of logical displays, all objects associated with hidden object presentation properties indicated by the at least one display attribute assigned to each of the plurality of logical displays.","System and computer program products corresponding to the above-summarized methods are also described and claimed herein.","It is therefore an object of the present invention to provide a method for determining the content presented on a plurality of logical displays, without mapping presentation objects to an intermediate attribute.","It is a further object of the present invention to provide a method of assigning user-selectable properties to presentation graphics objects, where the properties are indicative of the intended viewers of the object.","It is a further object of the present invention to provide user-selectable display attributes assignable to a plurality of logical displays during setup of a computer-driven presentation, where the display attributes are indicative of the audience viewing the display, and the display attributes determine the objects viewable by the audience on the display during a computer-driven presentation.","The recitation herein of a list of desirable objects which are met by various embodiments of the present invention is not meant to imply or suggest that any or all of these objects are present as essential features, either individually or collectively, in the most general embodiment of the present invention or in any of its more specific embodiments.","Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with advantages and features, refer to the description and to the drawings.","In accordance with preferred embodiments of the present invention, methods of assigning properties to objects, and methods of determining the content displayed during a computer driven presentation based upon the assigned object properties are disclosed herein.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","110","110"]},"Laptop  includes standard hardware components as known in the art, such as a central processor, memory, nonvolatile storage such as a hard disk drive (HDD), keyboard, pointing device, etc., interconnected by an internal bus structure. Standard hardware components such as these are not illustrated in , for simplicity. Laptop  includes a display , such as an LCD type display, which is typically integrated into the laptop cover. Laptop  further includes one or more video controllers , supporting various display devices such as an external computer monitor  or a projection device , or a television monitor . In preferred embodiments of the present invention, laptop  includes a single video controller  having multiple outputs and being capable of emulating and simultaneously supporting multiple display types. Such multiple output controllers are known in the art, and typically include a single embedded controller with separately addressable memory regions to support multiple logical displays, thereby enabling a user to display different content on each supported logical display. One example of a single graphics controller capable of supporting multiple logical displays is a controller sold under the name INTEL 82830M (or 830M) Graphics Controller (marketed by Intel of Santa Clara, Calif.). Alternatively, laptop  may include multiple video controllers , one controller  for each supported display type.","Laptop  provides a platform on which software components such as application  operate. Application  is a presentation graphics application per an embodiment of the present invention. Application  interfaces with a set of application programming interfaces (APIs) . API  provides application  with functions in support of multiple logical displays. API  may be included in an operating system, such as MICROSOFT WINDOWS 98 (or subsequent versions of MICROSOFT WINDOWS), or similar operating systems providing support for multiple logical monitors. API  in turn interfaces with one or more software drivers , which provide instructions and data to video controller(s) .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2"},"As a further example, another type of hidden object presentation property is \u201chidden object value, or in preferred embodiments, \u201chidden object level.\u201d Such a property as hidden object value provides a user with the ability to place objects on a presentation page or otherwise associate objects with a presentation page, and designate the audience or display attributes for which the object is presented during a computer-driven presentation. For example, an embodiment of the present invention includes a hierarchical, three level object presentation property. In this embodiment, an object with which no hidden object presentation property is assigned (i.e., one that is always visible) is considered level . A level  hidden object property is assigned to objects viewable by a subset of all audiences. A level  property is assigned to objects viewable only by a more restrictive subset of audiences, and a level  property is assigned to objects viewable only by a further restricted subset of audiences. During setup of a computer-driven presentation, an audience or display attribute is selected, indicating the hidden object level(s) displayable to the audience. In this embodiment, selecting a level  display attribute presents only objects associated with a level  property or lower (i.e., level  or objects that are always viewable). Selecting a level  display attribute presents only objects associated with a level  property or lower: in this manner, level  objects, level  objects, and always viewable (level  objects) are presented. Finally, selecting a level  display attribute presents all objects. While a preferred embodiment of the present invention includes three levels of hidden objects, more or fewer levels are envisioned within the spirit and scope of the present invention. Alternative embodiments are also envisioned in which hidden object property values operate other than hierarchically. In such an embodiment, a user selects all hidden object property values to be associated with an object. The object is presented whenever any corresponding display attribute is selected during the setup of a computer-driven presentation. A further alternative is envisioned wherein hidden object property values are mutually exclusive.","Object properties such as \u201cpresenter only\u201d and \u201chidden object value\u201d may be used individually as previously described, or together as described herein. For example, in one embodiment of the present invention, a hidden object level attribute is independently selectable for each logical display used during a computer-driven presentation. In this manner, for example, one logical display is assigned a set of attributes such as \u201caudience\u201d and \u201clevel \u201d while another logical display is assigned a different set of attributes such as \u201cpresenter\u201d and \u201clevel .\u201d In this example, the display to which the \u201cpresenter\u201d attribute is assigned presents two categories of objects in addition to the objects presented on the display to which the \u201caudience\u201d attribute is assigned: speaker annotations, and level  objects.","As previously noted, the term \u201chidden object\u201d refers to any object with which a hidden object presentation property is associated, where the object presentation property indicates that the object is viewable under some but not all circumstances. For instance, in the illustrative examples previously provided herein, a hidden object is any object to which any of the following hidden object presentation properties are assigned: presenter only, level , level , level .","Method  for assigning hidden object presentation properties, illustrated in , begins at . A user first attempts to open a file, step , in order to create a new presentation or modify an existing presentation. If the file is new, step , the new file is opened and processing continues at step . If the file is not new, step , method  determines the level of support provided for hidden objects, steps  through . A determination is made as to whether or not the application supports hidden objects, step . This determination can be made, for example, through the use of a new file type or file extension. If the application recognizes the file type, it has some level of support for hidden objects: the file is then opened at step , and processing continues at step . If the application does not recognize the new file type or extension, step , the file cannot be opened, step , an appropriate error message is returned, and processing terminates, . As an alternative to using a new file type or extension, existing file types may be modified to include one or more indicators, such as one or more flag bits, designating that a file is created, modified, or last saved using an application having support for hidden objects, and whether or not hidden objects are present in the file.","Once an existing file is opened, step , the level of hidden object support provided by the application is determined, step . For example, an application might provide full support for hidden objects, by providing multiple types of hidden object presentation properties and multiple values or levels of hidden object presentation properties. Alternatively, an application might provide reduced support for hidden objects, such as \u201cbinary\u201d support where an object is designated either \u201chidden\u201d or \u201cnot hidden\u201d (i.e., always viewable). If the application provides full hidden field support, existing objects retain all preset property value(s), step , and processing continues at step . When full hidden object support is provided, new hidden objects are given the full hidden property capabilities of multiple hidden property values or levels. If the application provides binary support, existing objects will be characterized as either hidden or not hidden, step . Such binary objects are referred to herein as \u201csimple\u201d objects. All objects having at least one hidden object presentation property are designated \u201chidden\u201d (hidden value  or on), including speaker notes. All other objects are designated not hidden, or always viewable (hidden value , or off). Once hidden values (on or off) are established for all objects, step , processing continues at step .","Upon opening a new file, or upon opening an existing file and determining that the application provides an acceptable level of support, objects are created or edited at step . Once an object is created or edited, step , a user determination is made regarding assignment of one or more hidden object presentation properties, step . As previously noted, assignment of one or more hidden object presentation properties designates an object as a hidden object, i.e., viewable under some but not all circumstances. If a user determination is made that the object is not a hidden object, processing continues at step . If a user determination is made that the object is a hidden object, hidden object presentation properties are assigned to the hidden object, step , and processing then continues at step . As described in detail herein, the options available for setting hidden object properties vary depending on the level of support (full or binary). If there are additional objects to create or edit, step , processing continues at step  where the next object is created or edited. If there are no additional objects to create or edit, step , processing continues at step , where the file is saved and closed. Processing then terminates, step .","With reference now to , A, and B, additional details of a hidden object presentation property assignment method of an embodiment of the present invention is disclosed.  discloses additional details of process , . Upon a user determination that an object is a hidden object, hidden object presentation properties are assigned, process  of . As illustrated in , process  begins at step , where an object properties dialog is opened. In one embodiment of the present invention, an object properties dialog may be opened by right-clicking the hidden object, thereby opening an object menu, and selecting \u201cproperties\u201d from the object menu. Alternatively, hidden object properties may be accessed by adding an item such as \u201cSet Hidden Object Properties\u201d directly to an existing menu, such as an object menu invoked by right-clicking on an object, or a menu item shown in a menu bar such as a Format menu. An example of a properties dialog per an embodiment of the present invention is illustrated in , dialog box . A properties dialog of preferred embodiments of the present invention, such as dialog box  of , includes multiple categories of properties, such as fonts, colors, alignment options, etc., each of which is represented by tabs  within the properties dialog. One such category of object properties, represented by tab , is \u201cpresentation properties,\u201d selected at step . As illustrated in  tab , a presentation properties tab may be identified by an icon, such as a projector or other presentation device. Embodiments of the present invention include \u201chidden object\u201d properties as one sub-category of object presentation properties, selectable by clicking button  on the presentation properties tab, step .","In preferred embodiments of the present invention, hidden object properties are assigned, step , by using a Set Hidden Properties dialog box , as illustrated in . Dialog box  is presented in response to user selection of hidden object properties button , at step . In the embodiment illustrated in , dialog box  allows a user to select two types of hidden object presentation properties, as previously described: a presenter only property (, ), and a hidden object level property (, ). In preferred embodiments of the present invention, a user may select either type of hidden object presentation property, or both types may be used together for a single object. Alternative embodiments are envisioned wherein only one type of hidden object presentation property (presenter only, or object level) may be selected for any one object.","A user assigns the \u201cpresenter only\u201d property to an object by selecting \u201cpresenter only\u201d button . Preferred embodiments of the present invention provide comment field , associated with the \u201cpresenter only\u201d property. A user enters a descriptive comment in field , such as \u201ccrib notes\u201d or \u201cspeaker annotations,\u201d describing how the property is used in the current presentation file. Comments entered in field  are applied whenever dialog  is opened, changes in field  are applied to all objects within a presentation file. When a screenshow is presented using a platform providing support for multiple logical displays, such as a laptop computer , objects with which the \u201cpresenter only\u201d property is associated are viewable only on logical displays associated with a display attribute of \u201cpresenter\u201d or \u201cshow speaker notes\u201d or the like.","In addition to the \u201cpresenter only\u201d property, preferred embodiments of the present invention provide multiple hidden object property values. In one embodiment of the present invention having hierarchical hidden object property levels, a user assigns a hidden object level by selecting one hidden level from the available levels, . As previously discussed, when a hierarchical set of properties is used, lower level object properties indicate that an object is viewable by a wider range of audiences than higher level object properties. Preferred embodiments of the present invention further provide comment fields , where a user may enter text describing how each particular level is used in the current presentation file. As with comments , comments  are applied whenever dialog  is opened, changes in field  are applied to all objects within a presentation file. In the illustrative embodiment of , for example, comment fields  indicate the security or privacy level of each hidden object property level. Level , for example, may be shown to internal audiences only. Level  includes information of a more sensitive or confidential nature, and is viewable by a subset of internal audiences. Finally, Level  includes information of a highly sensitive nature, and is viewable by a more restricted subset of internal audiences. In this illustrative embodiment, level  objects (i.e., always viewable or not hidden) are viewable by all audiences without restriction, whether internal or external.","When a screenshow is presented using a platform providing support for multiple logical displays, such as a laptop computer , one or more display attributes are associated with each logical display. The display attribute determines the hidden objects viewable on each logical display. For example, in embodiments using hierarchical hidden object properties, a display attribute of \u201clevel \u201d allows no hidden objects to be displayed. A display attribute of \u201clevel \u201d allows level  hidden objects to be displayed. A display attribute of \u201clevel \u201d allows both level  and level  objects to be displayed, and a display attribute of \u201clevel \u201d allows level , , and  objects to be displayed.","Alternative embodiments are envisioned where hidden object values  are individually selectable rather than hierarchical. Values may be mutually exclusive (i.e., only one value may be selected per object), or in the alternative any or all values may be selected in any combination. User-selectable options may be provided to determine whether hidden object values operate in a hierarchical, mutually exclusive, or combined manner.","Once appropriate hidden object properties are assigned, step , dialog box  is closed and process  terminates, step . Processing then continues with step  of .","In alternative embodiments of the present invention providing only binary hidden object support, dialog box  may be greatly simplified or even entirely omitted. Since the hidden status of an object in such an embodiment is essentially a binary value or switch, a single selection is all that is required to set an object's hidden property. In such an embodiment, dialog box  need only contain one selection: HIDDEN. Alternatively, in binary support embodiments, object properties dialog  may be modified to include this single selection in place of \u201cSet Hidden Object Properties\u201d button . Other alternatives are envisioned, such as providing a selectable switch on an object menu accessed by right-clicking an object.","Preferred embodiments of the present invention further provide the ability to apply hidden object presentation properties to portions of objects, to collections of objects, or to groups of objects, all within the spirit and scope of the present invention. As used herein, a collection of objects (or object collection) consists of a plurality of objects temporarily selected for the same action or actions. A group of objects (or object group) consists of a plurality of associated objects, such that the association persists until specifically terminated by a user action.","In some circumstances, it may be desirable to create a single object, such as a text object, and apply different hidden object presentation properties to different portions of the text object. In preferred embodiments of the present invention, hidden object properties may be assigned to a portion of a text object by selecting a portion of the text object, step , then performing steps  through  on the selected object portion. Object collections are handled in a similar manner: multiple objects are first selected, step , then steps  through  are performed on the object collection. Existing object groups are also handled similarly: an object group is first selected, step , then steps  through  are performed on the object group.","Preferred embodiments of the present invention include methods to resolve conflicts during object group creation, and to restore the hidden object properties of individual objects when a group is terminated (or ungrouped). An object group is formed by selecting a plurality of existing objects, then selecting an action to group the objects into a compound object or object group. The individual objects may or may not share the same hidden object presentation properties. If all of the individual objects share the same hidden object presentation properties, the newly formed object group is assigned these common hidden object presentation properties. If, however, the individual objects do not share the same hidden object presentation properties, property conflicts are resolved by assigning a default set of properties to the newly created group. In preferred embodiments of the present invention, the newly created group is always shown: using the preceding examples of , neither presenter-only button  or any hidden property level buttons  are selected for the new group. Default group properties may be modified as previously described. Each individual object within the new group retains its hidden object properties, however these properties are overridden by the group property. If the group is subsequently terminated or ungrouped, thereby restoring the individual objects, the retained hidden object properties of each individual object are restored.","As previously noted, objects may be associated with a presentation page either by being placed on or within the page, or by other means such as by being placed in a window or screen region outside of the presentation page. Speaker notes are an example of an object associated with a presentation page and typically located in a window or screen region outside of the presentation page. The methods of the present invention are applicable to objects such as speaker notes that are associated with a page but not placed within the page. Once such an object is selected, or alternatively once a portion of such an object is selected, hidden object presentation properties are assignable to the selected object (or selected portion) as previously discussed with reference to .",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 3","FIG. 2"]},"Method  of  begins by attempting to open a presentation file, step . A determination is made, step , whether the application provides hidden object presentation property support. This determination can be made, for example, through the use of a new file type or file extension. If the application recognizes the file type, it has some level of support for hidden objects: the file is then opened at step , and processing continues at step . If the application does not recognize the new file type or extension, step , the file cannot be opened, step , an appropriate error message is returned, and processing terminates, . As an alternative to using a new file type or extension, existing file types may be modified to include one or more indicators, such as one or more flag bits, designating that a file is created, modified, or last saved using an application having support for hidden objects, and whether or not hidden objects are present in the file.","If the application supports hidden objects, the file is opened at step . Processing continues at step , user selection of screenshow or slideshow setup. The open file is next examined to determine if it includes hidden objects, step . If the open file does not contain hidden objects, processing continues at step , providing a standard screen show or slide show as known in the art. If the open file contains hidden objects, step , processing continues at step , where a determination is made regarding the level of hidden object support provided by the application (i.e., full or binary support). If the application provides full support, step , processing continues at step  where a determination is made regarding the level of support for multiple logical displays provided by the operating system and hardware. This determination is made, for example, by using operating system routines to query the video controller(s)  present in system , to determine whether or not multiple monitor support is available. If multiple logical display support is available, processing continues at step , where one or more display attributes are assigned to the audience display(s), such as a hidden object level attribute, thereby determining the objects viewable on the audience display during a screenshow or slideshow. Processing then continues at step , where one or more presentation attributes are assigned to the presenter display. As noted above, attributes such as hidden object level and display annotations may be assigned to a presenter logical display, thereby determining the objects viewable on the presenter display during a screenshow or slideshow. A screenshow or slideshow is then presented, step , where appropriate objects are displayed on the audience display and the presenter display based upon the display attribute selections made in steps  and .","If full hardware support for multiple logical monitors is not provided, step , one hidden object level is selected and assigned to the single logical display, step . This level is viewed by both audience and presenter. Processing then continues at step , where the selected level is displayed. Thus, the hidden object level property aspect of the present invention may be advantageously utilized without hardware support for multiple logical monitors.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 4C","b":["480","334","335","338","480","482","484","488","486","334","335","480","482","482","484","488","482","488","484","484","488","482","484","488","488","484","488","488","335","486","482","486"]},"During step , dialog box  presents fewer user-selectable options, since hardware support for multiple logical displays is unavailable. During step , synchronization button  is both selected and grayed-out: since only one logical display is supported, a user is prevented from selecting different hidden object level attributes for different physical displays. As before, one set of object level attribute selection buttons  and  is grayed out, preferred embodiments gray out buttons . Finally, show annotations button  is also grayed out, since only one logical display is supported.","As previously noted, a presentation graphics application might provide partial support for hidden object properties, rather than providing multiple levels of hidden object properties. For example, rather than supporting multiple levels of hidden object properties as in preferred embodiments of the present invention, an application might provide binary hidden object properties: all objects are either hidden or always viewable. If the open file includes hidden objects, step , a determination is next made whether the application provides full hidden object support or partial (i.e., binary) hidden object support, step . If the application provides binary hidden object property support, processing continues at step , where a determination is made regarding the level of support for multiple logical displays provided by the operating system and hardware. This determination is made in a manner similar to that of step , for example, by using operating system routines to query the video controller(s)  present in system , to determine whether or not multiple monitor support is available. If multiple logical display support is available, processing continues at steps  and , where hidden objects are turned ON or OFF for the presenter display, step , and hidden objects are turned ON or OFF for the audience display, step . A screenshow or slideshow is then presented, step , where appropriate objects are displayed on the audience display and the presenter display based upon the user selections made during steps  and . If full hardware support for multiple logical monitors is not provided, step , hidden objects are turned ON or OFF for the single logical display, step . The presentation is then displayed in accordance with the user selection of step , at step . Processing then terminates, step .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 4D","b":["490","316","322","490","492","494","498"]},"During steps  and , only binary support for hidden objects is available: dialog  therefore presents fewer options than dialog . A user may select display synchronization button , thereby causing both logical displays to present the same level of hidden objects. In response to user selection of button , one of object attribute switches  and  is \u201cgrayed-out,\u201d thereby preventing a user from making a conflicting selection. In preferred embodiments of the present invention, when button  is selected, object attribute switch  (audience display) is grayed-out, and hidden object ON\/OFF selection is performed using presenter switch . Alternative embodiments are envisioned where the presenter view switch  is grayed out, and the hidden object ON\/OFF attribute selection is performed using switch . If synchronization button  is not selected, hidden object ON\/OFF attribute switches  and  are independently selectable, allowing a user to turn all hidden objects ON for one logical display and OFF for another logical display.","During step , dialog box  presents fewer user-selectable options, since hardware support for multiple logical displays is unavailable. During step , synchronization button  is both selected and grayed-out: since only one logical display is supported, a user is prevented from selecting different values for switches  and . As before, one of switches  and  is grayed out, preferred embodiments gray out buttons .","By way of illustrative example,  depict sample presentation pages viewable under various circumstances, utilizing various features of the present invention. In particular, the illustrative example of  utilizes at least two levels of hierarchical hidden object presentation property levels, and speaker annotation objects (text and graphics). All views presented in  represent a single presentation page within a presentation graphics application file, where hidden object properties are assigned to objects within the single presentation page. The various views depicted in , as described below, represent various views of the single presentation page created by selecting various sets of display attributes during screenshow setup. Thus, the various views of the single presentation page represented by  are displayable without requiring modifications to the single presentation page or the objects contained therein.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 5","FIG. 5","FIG. 4C","FIG. 5"],"b":["500","510","520","510","520","0","0","0"]},{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 6A","FIG. 6A","FIG. 4C","FIG. 4B"],"b":["1","510","520","0","1","630","630","1","1","520","1","620","0","1","620","1","620","1","520","620"]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 6B","FIG. 6B","FIG. 4C","FIG. 6A","FIGS. 5"],"b":["2","1","2","510","630","620","2","640","1","620","2","621","520","620","621","6","6","621","1","1","2","2"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 7A","FIG. 7A","FIG. 4C","FIG. 7A","FIG. 6A","FIG. 7A","FIG. 7A"],"b":["1","1","1","1","1","0","510","1","630","620","0","1","760","770","760","0","0","1","1","770","0","0","1","1"]},{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 7B","FIG. 7B","FIG. 4C","FIG. 7B","FIG. 6B","FIG. 7B"],"b":["2","2","2","2","2","0","510","1","630","2","640","620","0","2","2","1","2","2","1","2","1","780","790"]},"The capabilities of the present invention can be implemented in software, firmware, hardware or some combination thereof.","As one example, one or more aspects of the present invention can be included in an article of manufacture (e.g., one or more computer program products) having, for instance, computer usable media. The media has embodied therein, for instance, computer readable program code means for providing and facilitating the capabilities of the present invention. The article of manufacture can be included as a part of a computer system or sold separately.","Additionally, at least one program storage device readable by a machine, tangibly embodying at least one program of instructions executable by the machine to perform the capabilities of the present invention can be provided.","The flow diagrams depicted herein are just examples. There may be many variations to these diagrams or the steps (or operations) described therein without departing from the spirit of the invention. For instance, the steps may be performed in a differing order, or steps may be added, deleted or modified. All of these variations are considered a part of the claimed invention.","While the invention has been described in detail herein in accord with certain preferred embodiments thereof, many modifications and changes therein may be effected by those skilled in the art. Accordingly, it is intended by the appended claims to cover all such modifications and changes as fall within the true spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The subject matter which is regarded as the invention is particularly pointed out and distinctly claimed in the concluding portion of the specification. The invention, however, both as to organization and method of practice, together with further objects and advantages thereof, may best be understood by reference to the following description taken in connection with the accompanying drawings in which:",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 4D"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 6"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIGS. 7"}]},"DETDESC":[{},{}]}
