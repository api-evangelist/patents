---
title: Distributed handling of associated data sets in a computer network
abstract: A networked database includes the automatic creation of follow-on data sets from initial data sets. A dialogue routine is implemented for initiating a dialogue-type communication that includes inputting and confirming data required for creating the follow-on data sets. The database is provided with a plurality of data sets and is capable of generating and displaying a list of data sets according to user-defined criteria. For a data set in the generated list that allows for the automatic creation of a follow-on data set, a related, configurable, user-activated control element is displayed. Upon user-activation, the control element, generates a control signal for initiating the automatic creation of the follow-on data set based on data derived from the selected data set and/or any data set associated with the selected data set. The newly created follow-on data set is then associated with the selected data set.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07693893&OS=07693893&RS=07693893
owner: SAP AG
number: 07693893
owner_city: Walldorf
owner_country: DE
publication_date: 20040927
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["This application claims the benefit of priority from U.S. Provisional Patent Application No. 60\/510,472, filed on Oct. 10, 2003, and entitled \u201cDistributed Handling of Associated Data Sets in a Computer Network,\u201d which is fully incorporated herein by reference for all purposes.","1. Field of the Invention","The invention relates to the distributed handling of associated data sets in a computer network. More specifically, the invention relates to creating one or more follow-on data sets for an initial data set.","2. Description of Related Art","Modern database related processes, i.e., processes that are based on repeatedly accessing one or more databases, commonly involve transitions between multiple processing stages. Transitions from one processing stage to another are often accompanied by the generation of data specific for a particular transition and indicative of the current processing stage (i.e., the processing stage from which the transition is occurring). Conventionally, the transition from one processing stage to another is initiated by dialogue-type communications during which data required for creating a particular follow-on data set is input, verified and confirmed.","As an example of such database-related processes, consider the computer-assisted procurement of goods and services or the computer-assisted manufacturing of complex machinery. During a procurement process, data pertaining to different processing stages, like purchase requisition, goods ordering, goods receiving and invoicing, are successively generated and have to be successively stored. Hence, individual data sets associated with the individual processing stages will have to be handled as the procurement process proceeds.","Due to the very nature of processes of the above type, generation of a data set during a particular processing stage usually requires the evaluation of data sets that have been generated earlier during one or more preceding processing stages. Thus, from the point of view of an initial data set that has been created during an earlier processing stage, in later processing stages follow-on data sets somehow associated with the initial data set are generated.","Since complex database related processes necessitate the interaction of a plurality of users, software mechanisms handling the generation, storage and manipulation of process-related data sets usually run on distributed components of a computer network. This requirement implies that individual data sets can be accessed from different network components at different processing stages.","When a user is accessing or manipulating a particular data set, this data set will usually be locked for other users to ensure a high data integrity. This means that the other users will experience an access delay, which depending on the specific situation can last from a few seconds to several hours. Such access delays are particularly disruptive in scenarios of the above type where follow-on data sets have to be created from an initial data set. The reason for this is that the access delays may additionally prevent a smooth transition to from one processing stage to another processing stage.","Although annoying, access delays and consecutive processing stage transition delays might be tolerated in scenarios that involve only a few collaborative users, a few processing stages and\/or a small number of processes running in parallel. In such scenarios mutual communication between the few users, for example, by telephone or via e-mail can resolve potential conflicts and ensure a smooth and rapid transition from one processing stage to another. However, with increasing numbers of collaborative users, increasing numbers of parallel processes and\/or increasing process stage complexity, such conventional conflict resolution mechanisms can no longer be employed.","Consequently, what is needed is efficient handling of associated data sets stored within one or more databases to enable automatic and standardized processing of large amounts of the associated data sets for accelerated creation of follow-on data sets.","According one aspect of the invention, a method is provided for handling data sets in a computer network by automatically creating, for a data set, at least one associated follow-on data set, wherein the data sets may be directly or indirectly accessible from a plurality of network components and wherein a dialogue routine is implemented for initiating one or more dialogue-type communications that include at least one of inputting and confirming data required for creating the follow-on data set. The method comprises the steps of providing a database with a plurality of data sets, generating a list of data sets according to one or more user-defined criteria, and displaying the list at least partially, wherein one or more data sets of the list allow for the automatic creation of a follow-on data set. Upon selection of an individual data set that allows for the automatic creation of a follow-on data set, the dialogue routine is skipped for the follow-on data set to be created, the follow-on data set for the selected data set is automatically created on the basis of data automatically derived from at least one of the selected data set and any data set associated with the selected data set, and the newly created follow-on data set is associated with the selected data set. Selection of a particular data set that allows for the automatic creation of a follow-on data set may be implemented by displaying a first control element related to a displayed data set that allows for the automatic creation of a follow-on data set. The first control element may be configured to be activated by a user-operated input device like a mouse or a keyboard to generate a first control signal for initiating the automatic creation of a follow-on data set for the data set selected by activating the related first control element. Upon creation of the first control signal, the follow-on data set is automatically created.","The method may be performed in a scenario that is based on a single follow-on data set type or in a scenario that involves a plurality of different follow-on data set types. The latter scenario may include a process that comprises several consecutive processing stages. Each processing stage may be associated with a particular follow-on data set type, so that as the process proceeds, two or more follow-on data sets are consecutively created.","As has been mentioned above, the list of data sets is generated according to one or more user-defined criteria. Thus, the method may further include the input of one or more selection criteria that are to be considered when generating the list of data sets. The selection criteria may be related to various aspects of the data sets such as the creation date, a particular data set status, a specific user or user group in charge of handling the data set, etc.","In the case two or more different follow-on data set types are defined, the selection criteria may additionally or alternatively include a particular follow-on data set type. Upon selection of a particular follow-on data set type, the list of data sets may thus be generated from data sets that allow for a creation of follow-on data sets of the selected type. Selection of a particular follow-on data set type may be performed in various ways. According to one exemplary implementation, selection of a follow-on data set type is enabled by displaying a list of two or more follow-on data set types and by relating a second control element to each type, the second control element being configured to be activated by a user-operated input device to generate a second control signal indicative of the selected type. The second control signal may be evaluated prior to generating the list of data sets. Hence, the list of data sets may selectively include only data sets that allow for the creation of a follow-on data set of a particular type.","In a scenario that includes a plurality of different follow-on data set types, for each follow-on data set type an individual type of first control element may be defined. In a further step an individual data set (e.g., of the list of data sets) may be assessed to find out if a follow-on data set can be created for this particular data set and to determine the type of follow-on data set that can be created for this particular data set. Thus, a data set for which a follow-on data set of a specific type can be created may be displayed together with the corresponding type of first control element. In such a case display of the first control element not only informs the user about the fact that a follow-on data set can be created but additionally informs the user of the particular type of follow-on data set that can be created for the displayed data set.","The list of data sets may only include data sets for which a non-specified or a previously selected follow-on data set can automatically be created skipping the implemented dialogue routine. According to a further variant of the invention, the list of data sets may also include data sets for which an associated follow-on data set can only be created using the dialogue routine. For such data sets necessitating dialogue-typed interactions no related first control elements may be displayed or, if displayed, may be configured as non-active.","The individual data sets stored in the database can have various formats. According to one exemplary data set format, each data set includes a header with individual data set information like a data set denomination or a time stamp (e.g., creation date). Additionally, a data set may include one, two or more individual data items following the data set header. According to one variant of the invention, follow-on data sets may be created for the individual data items of a data set. In such a case two or more follow-on data sets of the same follow-on data set type may be created independently for a single data set. For each independently created follow-on data set one or more further follow-on data sets may be created. Thus, a single individual data set may form the root of a tree that includes leafs and\/or knots in the form of associated follow-on data sets. Each knot may in turn have one, two or more sons.","If a data set is comprised of one or more individual data items, the list of data sets may be generated from data sets that include at least one data item that allows for a creation of a follow-on data set. For each individual data item that allows for a creation of a follow-on data set an individual first control element may be provided.","The first control element related to a data set that allows for the automatic creation of a follow-on data set may be displayed in an overview screen on which the list of data sets is presented also. Presentation of the list of data sets can be performed for example by displaying for each data set belonging to the list characteristic information like a data set denomination derived from the data set header.","A third control element may be related to each displayed data set of the list of data sets. The third control element may be configured to be activated by a user-operated input device to generate a third\/control signal. Generation of the third control signal may result in additional information about the data set selected by activating a particular third control element being displayed. Additionally, generation of the third control signal may result in a display of the first control element for the selected data set. Thus, the first control element may remain invisible until generation of the third control signal. This means that the third control signal may precede a related first control signal.","Upon generation of the first control signal, at least one of the selected data set and any data set associated therewith may be locked at least partially with respect to changing data comprised therein. Such a mechanism prevents that the particular user having created the first control signal or any third user can interfere with the background process of automatically creating a follow-on data set.","Creation of a follow-on data set for a selected data set may require the processing of particular data. This data may for example be input in the course of the dialogue routine. If the dialogue routine is skipped, the data required for creating a follow-on data set may be automatically derived by assessing at least one of the selected data set for which the follow-on data set will be created and any data set associated with the selected data set. This may include that the selected data set and\/or any associated data set are evaluated to determine if the available information suffices for automatically creating a follow-on data set.","The data required for creating a particular follow-on data set may be derived in various ways and at various points in time. The required data may for example be derived by comparing an initially specified numerical value with an accumulated numerical value that has been generated from individual numerical values input, confirmed or derived in context with the creation of at least one of the selected data set and any associated data set. The difference between the initially specified numerical value and the accumulated numerical value may form the basis for creating the follow-on data set.","Once the follow-on data set has been created, it may be associated with the selected data set for which it has been created. To this end a link between the newly created follow-on data set and the selected data set may be established for example by writing information relating to the newly created follow-on data set in a memory location of the selected data set or any data set associated with the selected data set. Alternatively or additionally, information about the selected data set or any data set associated therewith may be written in a memory location the newly created follow-on data set.","Information included in the newly created follow-on data set may be used to control a printing device arranged in the network to generate a document like a goods receipt or an invoice. A further possibility is to send the newly created follow-on data set or information included therein via e-mail or in any other electronic form to a remote network component.","The present invention may be implemented as software, as a piece of hardware, or as a combination thereof. Thus, the invention also relates to a computer program product with program code portions for performing the individual steps of the invention when the computer program is run on one or more network components. The computer program product may include a first program code portion for searching a database for data sets according to one or more users defined criteria and for generating a data set list thereof, and a second program code portion for displaying the data set list at least partially. For a data set of the list that allows for the automatic creation of a follow-on data set a related control element may be displayed, the control element being configured to be activated by a user-operated input device to generate a control signal for initiating the automatic creation of a follow-on data set for the data set selected by activating a related control element. The computer program product may further comprise a third program code portion responsive to generation of the control signal, for skipping a dialogue routine for the follow-on data set to be created, for automatically creating the follow-on data set on the basis of automatically derived data, and for associating the newly created follow-on data set with the selected data set.","According to a further (hardware) aspect of the invention, a network component is provided that belongs to a computer network including a database with a plurality of data sets and several network components having access to the database. The network component comprises a first interface for providing an access to the database, a processor for generating an instruction for searching the database for data sets according to one or more user-defined criteria and for generating a list thereof, and a second interface to a presentation unit that displays the generated list at least partially. The list may include at least one data set that allows for the automatic creation of a follow-on data set. A control element related to the data set that allows for the automatic creation of a follow-on data set may be displayed and configured to be activated by a user-operated input device to generate a control signal for initiating the automatic creation of a follow-on data set for the data set selected by activating the related control element. Upon receipt of the control signal via the second interface, the processor skips a dialogue routine implemented for inputting data required to create a follow-on data set, automatically creates the follow-on data set on the basis of previously derived data, and associates the selected data set with the newly created follow-on data set.","The network component may for example be configured as an application server that communicates with further network components according to the hypertext transfer protocol (HTTP). The further network components communicating with the application server may include one or more database servers on which the database is installed and one or more presentation servers functioning as presentation units.","The present invention will now be described in detail with reference to the drawings, which are provided as illustrative examples of the invention so as to help enable those skilled in the art to practice the invention. Notably, the figures and examples below are not meant to limit the scope of the present invention. Where appropriate, the same reference numbers will be used throughout this detailed description in conjunction with the drawings to refer to the same or like parts. Where certain elements of the present invention can be partially or fully implemented using known components, only portions of such known components that are necessary for an understanding of the present invention will be described in detail, while other portions of such known components will be omitted so as not to obscure the invention. Further, the present invention encompasses present and future known equivalents to the components referred to herein by way of illustration.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 1","b":["100","101","102","190","100","101","102","190"]},"Network component  can include a processor , a memory , a bus , and, optionally, one or more input devices  and one or more output devices  (collectively, I\/O devices , ) acting as a user interface , interoperating in a conventionally known manner. However, one or more of these elements can be combined or eliminated without deviating from the intended scope of the invention. The present invention can be embodied in a computer program product (hereinafter CPP) residing on a program carrier  and\/or in the memory , and generating program signals , collectively called a \u201cprogram\u201d.","The remaining network components , , etc., which are also referred to as \u201cremote computers,\u201d can include many or all of the elements described with respect to the network component . Hence, the elements  to  in the network component  collectively illustrate corresponding elements in the other network components , , etc. of the network .","The network component  can be, for example, a conventional personal computer (PC), an laptop computer or a hand-held device, a multiprocessor computer, a microprocessor-based or programmable consumer electronics device, a minicomputer, a mainframe computer, a personal digital assistant (PDA), a mobile telephone, a portable or stationary personal computer, a palmtop computer or the like. Further, the network component  can communicate with the network using any form of wired or wireless communications.","The processor  can be, for example, a central processing unit (CPU), a micro-controller unit (MCU), digital signal processor (DSP), or the like. The memory  symbolizes elements or components that temporarily or permanently can store data and\/or instructions that can be used by processor . Although the memory  is conveniently illustrated as a part of the network component , a memory function can also be implemented as an independent node in the network , in the other components of the network, in the processor  (e.g., cache, register, etc.), or elsewhere.","The memory  can be a read only memory (ROM), a random access memory (RAM), or a memory with other access options or capabilities. The memory  may be physically implemented as machine-accessible media, such as a magnetic media (e.g., a hard disk, a floppy disk, other magnetic disk, a tape, etc.), an optical media (e.g., an optical disk like a CD-ROM, CD-RAM or a digital versatile disk, or DVD), a semiconductor media (e.g., DRAM, SRAM, EPROM, EEPROM, a memory stick, etc.), or by any other media. Optionally, the memory  is distributed across different media. Portions of the memory  can be removable or non-removable with respect to a particular network component. For reading from media and for writing into media, the network component  uses devices well known in the art such as, for example, disk drives, tape drives, memory card, memory stick reader\/writers, and the like.","The memory  can store one or more software program support modules such as, for example, a basic input\/output system (BIOS), an operating system (OS), a program library, a compiler, an interpreter, communication programs, drivers, protocol converters, application software programs like text processors, (Internet-) browsers, database applications, and so on. Although the CPP is illustrated as being stored in memory , the CPP can also be located elsewhere. For example, the CPP can also be embodied on the program carrier .","The CPP includes program instructions and, optionally, data or variables that cause processor  to execute the steps forming the methodology of the present invention. The method steps are explained in greater detail below. The CPP can define and control the operation of the network component  and its interaction with the network system . For example, and without limitation, the CPP can be available as source code in any programming language, and as object code (\u201cbinary code\u201d) in a compiled presentation. Persons of ordinary skill in the art can use the CPP in connection with any of the above mentioned support modules, as well as others not mentioned but included within the scope of the invention. The functionalities of one or more of the network components , , , etc. and of the CPP are closely related. Phrases, such as \u201cthe computer provides,\u201d \u201cthe program provides,\u201d and the like are used hereinafter to express actions by one or more network nodes that is\/are controlled by the CPP in accordance with the one or more embodiments of the invention.","The program carrier  is illustrated as being outside the network component . For communicating the CPP to the network component , the program carrier  can be inserted into an input device . The carrier  can be implemented as any computer readable medium, such as one of the media explained above in relation to memory . Generally, the program carrier  is an article of manufacture comprising a computer readable medium having computer readable program code and means embodied therein for executing an exemplary method of the present invention. Further, the program signals  can also embody the CPP. The signals  travel on the computer network  to and from the network component . The steps of the computer program product CPP can be executed solely in the network component , in which case the computer network  may be omitted, or can be executed in a distributed manner in one or more of the network components , , , etc. in conjunction with the computer network .","The input device  can be a device that provides data and instructions for processing by the network component . For example, the device  can be a keyboard, a pointing device (e.g., a mouse, a trackball, cursor direction keys), a microphone, a joystick, a game pad, a scanner, and the like. While these examples are devices requiring human interaction, the device  can also operate without human interaction, such as a wireless receiver (e.g., with\/out a satellite dish or terrestrial antenna), a sensor, a counter (e.g., goods counter in a factory), and the like. The input device  can also serve to retrieve the program code of the CPP from the program carrier .","The output device  can be a device that presents instructions and data that have been processed. It can be, for example, a monitor or display (e.g., a cathode ray tube, a flat panel display, a liquid crystal display, etc.), a speaker, a printer, a plotter, a vibration alert device, and the like. Similar to the input device , the output device  can communicate with the user(s), but it can also communicate with further network components or devices. The input device  and the output device  can be combined into a single device.","The bus  and the computer network  can provide logical and\/or physical connections to, within and between the network components , , , etc. by conveying instructions and data signals. While the bus  can conveniently handle connections and communications inside the network component , the network  can handle connections and communications between different network components. Optionally, the network  can include gateways, routers and the like programmed to effect data transmission and protocol conversion.","The I\/O devices ,  can be coupled to the network component  by the bus , as illustrated, or, optionally, by the network . While the signals within the network components , , , etc. and the network  can be electrical signals, the signals can also include magnetic, optical and wireless (radio) signals, or any combination thereof.","The network  can include one or more of an office-wide computer network, an enterprise-wide computer network, an intranet, an extranet or the Internet (i.e. World Wide Web). The World Wide Web (WWW) represents all of the computers on the Internet that offer users access to information on the Internet via interactive documents or Web pages. Web information can reside on Web servers on the Internet or within company or community networks, such as intranets. Network  can include wired or wireless networks, such as, for example, a local area network (LAN), a wide area network (WAN), a wireless LAN (WLAN), a public switched telephone network (PSTN), an integrated services digital network (ISDN), an infrared (IR) or Bluetooth link, a radio link, and the like according to the Universal Mobile Telecommunications System (UMTS), the Global System for Mobile Communication (GSM), a Code Division Multiple Access (CDMA) system, a satellite link and so on.","Transmission protocols, mechanisms and data formats to effect communications between network components that are connected within, to and by the network  are known, for example, as transmission control protocol\/internet protocol (TCP\/IP), hyper text transfer protocol (HTTP), secure HTTP, wireless application protocol (WAP), unique resource locator (URL), unique resource identifier (URI), hyper text markup language (HTML), extensible markup language (XML), extensible hyper text markup language (XHTML), wireless application markup language (WML), electronic data interchange (EDI), which is an electronic exchange of business information between or inside organizations and their information technology (IT) infrastructure in a structured format, remote function call (RFC), via an application programming interface (API), and the like.","Interfaces coupled between individual elements and components are also well known in the art. For simplicity, interfaces are not illustrated. An interface can be, for example, a serial port interface, a parallel port interface, a game port, a universal serial bus (USB) interface, an internal or external modem (wired or wireless), a video adapter, or a sound card.","The software and the hardware infrastructure of an embodiment of the invention utilize the network node  having the graphical display unit  and the input unit , e.g., a mouse or trackball. The network node  can be connected to a wide area network (WAN) , for operating in an intranet and for providing access to the Internet to which a number of members of a group of the similar or identical network components , , etc. can also be connected. In order to operate the CPP according to the invention, one or more of the network components , , , etc. can act as a host server that has archival data storage for access by the group. In addition to its server tasks, the host server can also provide firewall and security functions, authenticate the distributed client components connected to the computer network , and the like.","The CPP according to the present invention can be part of a complex software system embedded in a hardware structure. The cooperation of the software system and the hardware structure is sometimes referred to as IT backbone system or infrastructure. The backbone system can have a layered structure with individual software components acting in accordance with the client\/server concept as service providers, service requesters, or both. For example, application software can include software components that provide services for presentation, or acting as a server. But at the same time the application software also can act as service requester of database services provided by a lower layer. The layered components can communicate with each other via predefined (hardware and\/or software) interfaces.","In one exemplary implementation of a layered software structure, a lower layer can include network-related functionalities, a physical database and an operating system for the network components. A middle layer that interfaces with the lower layer can integrate software applications in the upper layer above it. The middle layer can include components like software tools, system administration tools, data handling tools, authorization and security management tools, cross-application modules, a system kernel and so on. The system kernel can use communications and application program interfaces to access components like application software in the upper layer or the operating system, the database, and the network in the lower layer. This system kernel can operate independently from the applications and can be located \u201cunder\u201d the application software and the data layers of the software system. The upper layer can contain the different software applications for controlling and monitoring processes relating to, for example, the management of human resources, sales and distribution, financials, materials, manufacturing, inventories, warehousing, and the like.","One possible client\/server configuration in which an embodiment of the present invention can be carried out is the so-called three-tiered architecture that separates a network system's components into three functional groups: presentation, application, and database.  illustrates a schematic diagram of an exemplary hardware-oriented view of a three-tiered client\/server configuration of the system depicted in .","As shown in , each hardware group can be set up to support the demands of its functions. One or more database servers  can contain the one or more databases. One or more application servers  can interface with the database server(s)  and can include the processing logic of the system with services such as spooling, dispatching user requests, formatting data and so on. One or more presentation servers , which can be, for example, personal computers or workstations, handle the tasks related to the presentation of data, enabling easy access to the system. Presentation server(s)  can include an one or more external servers connected to the application servers  via the Internet and\/or a web server\/Internet transaction server . Communication among the three tiers can be accomplished using, for example, standard protocol services mentioned above, such as the ones provided by TCP\/IP or Common Programming Interface Communication (CPIC), which can include standard functions and services for program-to-program communication.","The three-tiered hardware architecture depicted in  can also be shown in a software-related view.  illustrates a schematic diagram of an exemplary software-oriented view of a three-tiered client\/server configuration of the system depicted in . As shown in , the software components used in context with the present invention can include a graphical user interface (GUI) installed on the presentation server  of  and an application that runs on the application server . The application can have interfaces to the database installed on database servers , to the Internet and, via the messaging component installed on a message server , to the GUI. The message server  can be a service used by different application servers  to exchange data and internal\/external messages. Tasks of the message server  can include the transfer of messages and the distribution of work load between individual application servers .","The application running on the application server  can include a dispatcher  capable of interfacing with the message server  and with one or more presentation servers  on the one hand, and a plurality of parallel work processes  on the other hand. Each work process  can include an interface to the database on database server . Furthermore, a gateway  can either be installed, from a hardware point of view, on the application server  or on a dedicated gateway server (not shown). The gateway service provided by the gateway  can allow for communication between different applications using, for example, the CPIC protocol. The function of the gateway  can exchange large amounts of data between application servers, in contrast to the message server , which usually exchanges brief internal and control messages. The application component depicted in  can further include dispatcher queues , memory pipes  and an Internet Communication Manager (ICM) , interfacing with the Internet via, for example, HTTP.","In the following, the co-operation of the individual software components depicted in  is described in more detail.","As data is entered in the presentation server , the data can be received by the GUI, converted to a standard format, and sent via the messaging component to the dispatcher . The connection between the GUI on the presentation server  and the dispatcher  is made with a protocol like diagnostic responder protocol (DIAG), according to which small data packages are sent through the network  depicted in .","The dispatcher  can check whether there are available work processes for processing a request received from the GUI. If no work processes are available, the request can be kept together with other requests in the dispatcher queue  until a work process becomes available.","Once a work process becomes available, the dispatcher  sends the user data received from the GUI to the available work process . A work process  can be, for example, a program in charge of executing the application tasks of the present invention. Each work process  can act as a specialized system service. From the point of view of an operating system, a group of parallel work processes  as depicted in  makes up at least part of a runtime system. Each individual work process  can include a task handler, a processor, a memory and a database interface (not shown).","The work processes  can execute dialogue steps for the presentation server . These steps generally relate to the processing or display of a single GUI screen, which means that right after one work process  finishes the execution of a dialogue step for a user session, it can become available for use by another user session (i.e., either from a different user or the same user). For processing purposes, each dialogue step can use code, dictionary objects, data, and the like. These elements can come from one or more database residing on the database server(s)  or from an internal memory (not shown) of the application server . Within a dialogue step, a task handler (not shown) of a work process  can be in charge of assigning the corresponding tasks to the internal components (e.g., processor, dialogue interpreter, database interface, etc.), finally sending a structured query language (SQL) request to the database server(s) . The database servers  can send the requested data back to the requesting work process , which in turn can process it and pass it via the dispatcher  to the presentation server . The GUI on the presentation server  can format the requested data and build up a screen for the user.","If during a particular work process , application data has to be exchanged with other applications such as legacy applications or external applications, the functionality of the gateway  can be activated.","The ICM  can allow for directly processing HTTP requests, or other such protocols, coming from the Internet and\/or a browser running on a presentation server , and for sending HTTP requests as HTTP client requests to the Internet. The ICM , which can be configured as a dedicated kernel process, can use threads to communicate as a server or as a client on the Internet. If a work process  is processing an HTTP request, the memory pipes  can be used for data transfer. The memory pipes  can be, for example, located in a shared memory portion. In its Web client position, a work process  can create an HTTP request that is sent to a Web server . It can then receive the HTTP response, allowing the work process  to proceed on the basis of the HTTP response.","An exemplary database-related process capable of using the technical concept(s), above, according to an exemplary embodiment of the invention will now be described with reference to . From a business point of view, the database-related process can be, for example, described as the electronic procurement of goods and services.","The electronic procurement process can, for example, begin with an electronic requirement request to create a shopping cart data set (or simply \u201cshopping cart\u201d), followed by an approval process, if necessary (not shown). Then, a follow-on data set in the form of a purchase order data set (or simply \u201cpurchase order\u201d) can be created, and a status and tracking query, if desired, can be formulated and processed (dashed line from shopping cart to central database). A consecutive follow-on data set in the form of a goods and services receipt data set (or simply \u201cconfirmation\u201d) can follow next. Generation of a follow-on data set from the confirmation in the form of an invoice data set, electronic invoice approval and payment (or simply \u201cinvoice\u201d) can complete the process.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 4","FIG. 4","FIG. 3","FIG. 4"]},"In a first step of the electronic procurement process depicted in , a search of the electronic catalogue can create a shopping cart. The electronic catalogue can be regularly updated, which, for example, can facilitate real-time pricing and availability checking for goods or services to be ordered. Updating of the electronic catalogue can be performed via a vendor database or vendor catalog. The electronic catalogue can also be wholly or partly updated manually. It should be noted that the electronic catalogue may partially or completely be located in a central database of the intranet. Instead of or in addition to using the electronic catalogue, requirements for a product or service to be ordered may be entered directly on a GUI of a presentation server and transferred to the shopping cart.","A shopping cart can include a single data item (e.g., product category) or a plurality of data items in the case of complex orders. Additionally, each shopping cart can include a header with general data (e.g., time stamp, denomination, etc.) and a follow-on data set table. The follow-on data set table can contain the follow-on data set records for the shopping cart or references to these records. As a result, the individual processing stages can be documented and dependencies can be saved.","Once a shopping cart has been created, the requirements comprised therein may be held or ordered. When holding the requirements, the shopping cart can be temporarily stored locally (or externally) for processing at a later time. When the user wishes to initiate the next processing stage (i.e., the purchase order), including creation of a follow-on data set, the application server checks whether the shopping cart needs to be approved. Generally, but not always, a requirement request (i.e., shopping cart) should be routed for approval before a purchase order is created. To this end, the application server can inform a user responsible for releasing or approving the purchase order using a Web-compatible work process. Approval can be carried out using an automated release strategy or, if the requisition is above a predefined threshold allowed for automatic approvals, by initiating a Web-compatible approval work process involving the approver's presentation server.","If a shopping cart is approved or if it is determined that no approval is required, the system automatically creates a follow-on data set in the form of a purchase order (step ). Both the shopping cart and the purchase order can be stored in the central database of the intranet, although other storage mechanisms are equally applicable. On creation of the purchase order, a reference to this follow-on data set can be written in the follow-on data set table of the shopping cart. By this, a purchase order can be associated with the shopping cart from which it originated. It should be noted that multiple individual purchase orders can be created from a single shopping cart. This may be the case, for example, if different data items (e.g., goods and\/or services) of the shopping cart are ordered from different vendors.","Once a purchase order has been created, it can be sent electronically via the Internet to the vendor's system (step ) using, for example, XML. Other messaging protocols and messaging services, like e-mail or electronic data interchange (EDI), may be used also. As an alternative to sending the purchase order to a particular vendor, it can also be placed on the electronic market place as mentioned above (step ).","After the goods are delivered or the services have been performed, a confirmation work process can be executed using, for example, a dedicated GUI (step ). During the confirmation work process, a follow-on data set can be created as will be explained below in more detail. The confirmation work process can be initiated via a presentation server located in the intranet or via the vendor's system attached to the intranet via the Internet layer. If the confirmation is entered from the vendor's system, an approval work process can be started within the intranet. During the approval work process a presentation server of the intranet can display a GUI that requests confirmation approval.","Once the confirmation has been created, a reference to this follow-on data set can be written in the follow-on data set table of the shopping cart. Additionally, the confirmation can be stored in the central database of the Intranet and, if required, printed by a printer via, for example, a line printer terminal (LPT). It should be noted that for a single purchase order two or more confirmations can be created, for example, when the ordered goods are received with different deliveries. In such a case a first confirmation can be created for the initial delivery and a second (or more) confirmation can be created for the amount of goods still open after the first delivery.","In a fifth step, a further follow-on data set in the form of an invoice can be created by the vendor's system and transferred, for example, by XML to the intranet where it can be stored in the central database. At the same time a reference to this newly created follow-on data set can be written in the follow-on data set table of the shopping cart and an approval work process can be started. During the approval work process, a presentation server of the intranet can display a GUI that requests invoice approval. If required, the invoice may be printed using the printer via LPT.","It should be noted that in principle the invoice can also be created solely within the intranet. On the other hand, the confirmation need not be created within the intranet, but can be created by the vendor's system and transferred to the intranet via the Internet layer.","As has become apparent from the above, the electronic procurement process described with reference to  involves the distributed handling of a plurality of data sets including an initial data set (shopping cart) and three independent follow-on data sets (purchase order, confirmation, invoice). However, as will be evident to those skilled in the art from the disclosure of this exemplary embodiment, one or more of these data sets can be eliminated, or one or more other data sets can be added, without deviating from the intended scope of the invention. Creation of a particular follow-on data set can be performed using a work process that involves one or more dialogue routines as generally depicted in .",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 5","FIG. 5"],"b":["1","10","2","12","14"],"sub":"1"},"Once the confirmation (data set ) has been created, a further work process including similar dialogue-type communications can be performed to create the next follow-on data set (data set ) like, for example, an invoice. As has been mentioned above with reference to , creation of the invoice can involve the presentation server located on the vendor's side.","The consecutive creation of follow-on data sets may continue involving a further work processes, including further dialogue-type communications and a further presentation server as depicted in .","In the following, an embodiment of the present invention that includes the skipping of one or more of the dialog-type communications illustrated in  will be described with reference to . According to this embodiment, one or more follow-on documents, such as, for example, confirmations or invoices, can be created automatically. Moreover, in this embodiment the follow-on documents may not be created for individually retrieved data sets, but from a user-defined list of data sets that allow for the creation of follow-on data sets. This approach facilitates the mass handling of data sets.",{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 6","FIG. 6"],"b":["40","42"]},"The exemplary GUI of  is part of a function for checking a shopping cart status. Using this function, users can check the status of individual data items in their shopping carts according to user-defined criteria. Thus, information about each particular data item of a shopping cart can be tracked as an order associated with the data item is processed by the individual stages of the electronic procurement process. Provided the system has not yet created any follow-on data set(s) for a shopping cart, the system allows changes to the individual data items. As soon as a follow-on data set has been created, the shopping cart and the individual data items comprised therein can be locked.","The search portion  of the exemplary GUI of  can include a status selector . The status selector  can enable a selection of a particular follow-on data set type that is to be automatically created, for example, either a confirmation (\u201cOpen for confirmation\u201d) or an invoice (\u201cOpen for invoice\u201d), as shown. The status selector  thus allows to either select the follow-on data set type \u201cconfirmation\u201d or the follow-on data set type \u201cinvoice\u201d. An individual control element , can be associated with each follow-on data set type displayed in the search portion . Each of the individual control elements , can be configured for activation by a user-operated pointing device, like a mouse, to generate a control signal indicative of the selected type.","In , for example, the control element associated with the follow-on data set type \u201cinvoice\u201d has been activated. This means that upon activation of the \u201cSTART SEARCHING\u201d control element , a list of shopping carts that are open for invoice and that allow for the automatic creation of a follow-on data set of the type \u201cinvoice\u201d, can be generated.","Additionally, the search window  includes a further control element  that allows for a specification of another search criteria. This second search criteria, for example, can relate to the creation date of the shopping cart data sets that are to be included in the list. In the view depicted in , all shopping carts that are open for invoice and that have been generated within the last week will be listed. Although not shown in , further search criteria, for example, like the name of a shopping cart or a description of a particular data item may be specified.","Additionally, with respect to the display portion  of the  GUI, an individual control element  can be related with each shopping cart. The control element  can be configured for activation by a user-operated input device, like a mouse, to generate a dedicated control signal. Activation of an individual control element  can enable an expansion of (i.e., the display of additional information about) a particular shopping cart for which the previously specified follow-on data set, i.e., an invoice, is to be automatically created.","Upon activation of a control element  associated with a particular shopping cart, a control signal can be generated that requests the expansion of the shopping cart or, more particularly, the display of the one or more individual data items of the shopping cart that allow for the automatic creation of an invoice. Simultaneously, a further control element  associated with the data item that allows for the automatic creation of an invoice can be displayed.","In the view depicted in , the shopping cart titled \u201cOrder 9\u201d has been expanded after activation of the control element  associated with this shopping cart. The expanded shopping cart titled \u201cOrder 9\u201d includes a single data item \u201cpencils\u201d that is ready for automatic invoicing. Together with the description of the data item, the open quantity to be invoiced (i.e., the confirmed but not yet invoiced quantity) and the control element  for initiating the automatic creation of an invoice for the data item \u201cpencils\u201d and the specified open quantity are displayed.","Referring now to the flow chart of , the steps involved when performing the method according the  embodiment of the present invention will be described in more detail.","The method starts with selecting a particular follow-on data set type as described above with reference to the status selector  of the GUI's search portion  and by the optional specification of further search criteria (step ). Once the user activates the \u201cSTART SEARCH\u201d control element , an HTTP control signal, for example, can be generated and sent from the presentation server to the application server. This control signal can include the search criteria and can request the application server to initiate a search in the one or more databases stored on database server (step ). In the scenario depicted in , the search relates to all shopping carts that have been created during the last week and that include one or more data items allowing for the automatic creation of an invoice. The database server can deliver information about the shopping carts that match the criteria back to the application server for generating the shopping cart list (step ) as will be described later with reference to .","Once the data set list has been generated, it can be transferred from the application server to the presentation server for displaying in the display portion  of the GUI (step ). As can be gathered from , the displayed shopping cart list includes, for each shopping cart matching the search criteria, the shopping cart name, a characteristic number assigned to the shopping cart, the shopping cart status (here, conf.=\u201cconfirmed\u201d), the creation date of the shopping cart and the total value associated with the shopping cart. This information can correspond, for example, to the information included in the shopping cart header. However, more or less information can also be included.","As soon as a shopping cart is expanded and the data item that allows for the automatic creation of an invoice as well as the associated control element  are displayed, a selection of this data item (and thus of the corresponding shopping cart) for automatic creation of an invoice can be enabled (step ). The GUI now waits for generation of a control signal by activating the control element  (step ). As soon as a user activates the control element , a control signal can be generated that initiates a work process associated with the automatic creation of an invoice for the selected data item. This work process can skip the dialogue-type communications illustrated in  and can create the invoice for the selected data item (i.e., \u201cpencils\u201d) in a background process. Background processing allows for shorter processing time than the processing time of an interactive process, for example, as the ones depicted in . Not only are access delays reduced and transitions between consecutive processing stages facilitated, but processing resources within the application server are released and time out errors often associated with the time-consuming interactive generation of follow-on data sets are avoided.","The background work process associated with the automatic creation of a follow-on data set in context with the present invention includes a plurality of steps that are performed chronologically when the control element  in the display portion  of the  GUI is activated. These steps can include, for example, an authorization control step, a refreshing of pertinent data set tables, an evaluation of the data set history to derive the required data for generation of the particular follow-on data set (step ), a locking of one or more existing data sets associated with the selected data set for which a follow-on data set is to be created, the preparation of an approval work process, the creation of the requested follow-on data set (i.e., of the invoice) (step ) and storing of the newly created follow-on data set.","In a last step  the newly created follow-on data set (invoice) is associated with the selected data item. This can be done by writing a reference to the newly created follow-on data set in the follow-on data set table of the initial data set (i.e., the shopping cart).","During step , for example in the context of , during generation of the data required for creating the invoice for the data item \u201cpencils\u201d, or earlier (e.g., prior to step ), an assignment routine can be performed that derives the not yet invoiced but already confirmed quantity. In the case of partial invoices that have been created earlier using, e.g., manual dialogue-type communications as depicted in , these partial quantities can also be taken into account when calculating the open quantity that is to be automatically invoiced. When deriving the required data for automatically creating the invoice, the initially ordered quantity specified in the shopping cart can be compared with the quantity that has already been invoiced and the remainder can automatically be invoiced. In order to determine the quantity that has already been invoiced, one or more invoices that have already been created for the particular data item \u201cpencils\u201d in  are taken into account and the accumulated already-invoiced quantity is determined.","In principle, the data required for automatically creating the invoice (or any other follow-on data set, like a confirmation) may be derived during various processing steps. The data may, for example, already be derived when searching the database and creating the data set list according to the user-defined criteria, i.e., during one or both of steps  and  in . This allows the data from which the automatic creation of the requested follow-on data set is based to be displayed simultaneously with the control element  for initiating the automatic creation of the requested follow-on data set.","This means, in the context of , that the open quantity can already be calculated prior to displaying the data set list (step ) so that the open quantity may be displayed together with the control element . Hence, the user is informed for which quantity an invoice will be generated upon activation of the control element . However, some or all of the data required for automatically generating the invoice or any other follow-on data set may additionally or alternatively be derived after the control element  has been activated (e.g., during the background work process, described above).","In the following, the process of searching the database (step  in ) for matching shopping carts will be explained in more detail with reference to the flow chart of .","In a first sub step , the shopping cart headers in the database can be searched according to the supplementary search criteria only (i.e., the temporal criteria selected by control element  in the search portion  of the GUI depicted in ). In sub step , the type of follow-on data set (i.e., invoice) selected using the control element  can be disregarded. In sub step  a first list is generated from all shopping carts that were created within the last week as specified by control element  in , regardless of whether they allow for the automatic creation of an invoice.","In a next sub step  all previously created confirmations associated with the shopping carts of the first list can be determined by reading the appropriate confirmation data sets. For each data set of the first list from step , one or more confirmations, if existing, can be evaluated to find out whether the automatic creation of an invoice is possible for the particular data set of the first list. In this context it is determined, for example, if there is a quantity greater than zero open for invoicing (i.e., already confirmed but not yet invoiced). Otherwise, no automatic invoicing can be performed. Simultaneously, the amount open for invoicing can be calculated for displaying later in the data field \u201copen QTY\u201d of the GUI's display portion . As has been mentioned above, the evaluation can be performed on a data item basis.","All confirmation data sets that are associated with a shopping cart for which it has been determined that an invoice can automatically be created are accumulated in a second list in sub step .","In the following sub step  the second list can be evaluated and all shopping carts from the first list that include at least one data item allowing for the automatic creation of an invoice are marked accordingly. The marked data set list can then be used as the basis for generating the GUI as depicted in  (display portion ). Only for the marked data items of the shopping carts a control element  will be shown upon expansion of the corresponding shopping cart. As will be evident to those skilled in the art from the disclosure of this exemplary embodiment, the order in which the lists are processed can be reversed. Further, additional search criteria can be similarly used to create the list(s).","The basic differences between an electronic procurement process involving only work processes with dialogue-type communications as depicted in  and an electronic procurement process making use of the automatic creation of follow-on data sets as described above with reference to  become apparent from the schematic diagram shown in .",{"@attributes":{"id":"p-0114","num":"0113"},"figref":["FIG. 9","FIG. 9","FIG. 5","FIG. 9","FIG. 6","FIG. 5","FIG. 9"],"b":["3","56","14","12","10"],"sub":"2 "},"Another embodiment of the invention will be described with reference to . In , a GUI similar to the GUI depicted in  is shown. Corresponding elements are denoted with corresponding reference signs and a more detailed description thereof is omitted. Instead, only the differing aspects will be explained.",{"@attributes":{"id":"p-0116","num":"0115"},"figref":["FIG. 10","FIG. 10"],"b":["40","44","42"]},"Once initiated, as explained for the embodiment of , the search routine can evaluate the individual shopping carts matching the search criteria not only with respect to the question of whether a follow-on data set can automatically be created for any data item of this particular shopping cart, but additionally with respect to the particular type of follow-on data set that can be created. This type information can additionally be included in the data stream from the application server to the presentation server and can enable the presentation server's GUI to display an appropriate type of control element as will now be explained in more detail.","For each follow-on data set type (i.e. confirmation\/invoice) an individual control element type can be defined. This becomes apparent from . For example, in the data item \u201cpencils\u201d of shopping cart \u201cOrder 9,\u201d a confirmation can automatically be created. This can be indicated by the caption \u201cCF\u201d of control element  (\u201cCF type\u201d). If the data item \u201cpencils\u201d allowed for the automatic creation of an invoice, the control element  would be captioned \u201cIV\u201d (\u201cIV type\u201d) as shown in .","Together with the description of the data item, the open quantity to be invoiced (i.e., the confirmed but not yet invoiced quantity) and, if the data item allows for the automatic creation of a follow-on data set, the appropriate type of control element  for initiating the automatic creation of the particular follow-on data set (here: an invoice for the data item \u201cpencils\u201d) can be displayed as shown in .","The basic concept underlying this embodiment of the invention is schematically illustrated in the diagram of . As shown in , the shopping carts of the shopping cart list can individually be subjected to an evaluation step during which can determine if a particular shopping cart includes a data item that allows for an automatic creation of a follow-on data set. If this is the case, the type of follow-on data set that can be created for an individual data item can be determined and corresponding type information can be included in the shopping cart list.","Upon expansion of a particular shopping cart that includes a data item allowing for a creation of a particular follow-on data set, the type information can be assessed and an appropriately captioned control element , as shown in , can be displayed. Upon activation of the control element  shown in , a control signal can be generated that initiates the automatic creation of the appropriate follow-on data set for the selective data item (i.e. either a confirmation or an invoice).","Although the present invention has been particularly described with reference to exemplary embodiments thereof, it should be readily apparent to those of ordinary skill in the art that various changes, rearrangements, modifications and substitutions are intended within the form and details thereof, without departing from the spirit and scope of the invention. Accordingly, it will be appreciated that in numerous instances some features of the invention will be employed without a corresponding use of other features. Further, those skilled in the art will understand that variations can be made in the number and arrangement of components illustrated in the above figures. It is intended that the scope of the appended claims include such changes and modifications."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further aspects, features, details, embodiments, modifications and enhancements of the invention may be obtained from consideration of the following detailed description of various illustrative embodiments of the invention in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
