---
title: Method for regenerating selected rows for an otherwise static result set
abstract: Methods for updating query results are provided. In one embodiment, a stored query is modified to retrieve a selected subset of rows from stored query results without retrieving a remaining portion of the stored results. The modified query is executed, updated results are obtained from the modified query, and the updated results are displayed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07747640&OS=07747640&RS=07747640
owner: International Business Machines Corporation
number: 07747640
owner_city: Armonk
owner_country: US
publication_date: 20050120
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention generally relates to a method for updating query results.","2. Description of the Related Art","Databases are computerized information storage and retrieval systems. A relational database management system is a computer database management system (DBMS) that uses relational techniques for storing and retrieving data. The most prevalent type of database is the relational database, a tabular database in which data is defined so that it can be reorganized and accessed in a number of different ways.","Regardless of the particular architecture, in a DBMS, a requesting entity (e.g., an application or the operating system) demands access to a specified database by issuing a database access request. Such requests may include, for instance, simple catalog lookup requests or transactions and combinations of transactions that operate to read, change and add specified records in the database. These requests are made using high-level query languages such as the Structured Query Language (SQL). Illustratively, SQL is used to make interactive queries for getting information from and updating a database such as International Business Machines' (IBM) DB2, Microsoft's SQL Server, and database products from Oracle, Sybase, and Computer Associates. The term \u201cquery\u201d denominates a set of commands for retrieving data from a stored database. Queries take the form of a command language that lets programmers and programs select, insert, update, find out the location of data, and so forth.","Information in a database may be constantly changing. For instance, in a database that stores medical records, new records may be added, old records may be deleted, and existing records may be updated with new information such as test results. A user executing queries against the database may wish to remain up-to-date with respect to the latest information in the database. For instance, the user may wish to remain up-to-date because the user may be conducting ongoing research using the database. One method for keeping the user up-to-date with respect to information in the database is to allow the user to store queries which the user has executed against the database. The user may run a query once to obtain an initial set of results and the user may decide to store the query. Later, the user may run the stored query again to obtain a new set of results. The user may also wish to store the results of the initial query execution for later reference, analysis, or comparison with subsequent results. The results stored by the user may be stored in a table consisting of several rows and columns of data.","In some cases, the user may wish to obtain updated results, but the user may not want to update the entire table of stored results. For instance, the user may only be interested in updating certain rows in the stored results because those rows contain information, such as test results, which the user is tracking. For instance, the user may wish to update results only with respect to a certain patient that the user is interested in. Where the results contain several rows for a single patient, representing different test dates for instance, the user may only wish to update results for those test dates. In other cases, the user may also wish to have outdated rows removed and to be informed of any new rows which have been added. If the user wants to update those desired rows, the user may have to rerun the stored query and update the entire table.","Rerunning the stored query may be costly. For instance, the stored query may be executed against a database with many tables and many records. The stored query may require many comparisons and calculations to be performed as well. When the user only wishes to see updated results for certain rows in the stored results, the user would prefer not to have to run the stored query and update the entire set of results because of the associated execution costs. Accordingly, what is needed is a method for updating results wherein the user only wishes to update a selection of the rows in the results.","The present invention generally provides methods for updating query results. One embodiment provides a method for updating query results. The method generally provides for receiving results for an executed query, wherein the results contain two or more rows, storing the query and the results, and receiving a request to update a selected subset of the two or more rows in the stored results, the subset being less than all of the two or more rows. The stored query is retrieved from storage, and, in response to the request, the retrieved query is modified to retrieve the selected subset of rows without retrieving a remaining portion of the two or more rows. The modified query is executed, updated results are obtained from the modified query, and the updated results are displayed.","Another embodiment provides a computer-implemented method for updating query results. The method generally provides for receiving results for an executed query, wherein the results contain two or more rows and wherein each row contains a data value in a restricting data field. The query and the results are stored. The method further provides for receiving a request to update a selected subset of two or more rows in the stored results, the subset being less than all of the two or more rows, and retrieving the stored query from storage. In response to the request, the retrieved query is modified to retrieve the selected subset of rows without retrieving a remaining portion of the two or more rows, wherein modifying the retrieved query comprises inserting a first query condition into the retrieved query, wherein the first query condition contains the respective data value in the restricting data field for the selected subset of rows. The modified query is executed, updated results are obtained from the modified query, and the updated results are displayed.","Yet another embodiment provides a method of programmatically providing a user interface for updating query results. The method generally includes providing graphical user interface content which defines a graphical user interface. The graphical user interface generally includes a listing of two or more results rows, the results rows obtained from a query, and a graphical selection element for each of the two or more results rows which may be used to select each of the two or more results rows individually. The method further provides for receiving a request to update one or more selected rows from the two or more results rows, wherein the graphical selection element for each of the two or more results rows is used to individually select the one or more selected rows, and modifying the query to retrieve the one or more selected rows without retrieving a remaining portion of the two or more results rows. For at least those of the one or more selected rows having updated values, the modified results are displayed, the modified results being returned as results of the executed modified query.","The present invention generally provides methods for updating query results. Embodiments generally provide for receiving results for an executed query, wherein the results contain two or more rows, storing the query and the results, and receiving a request to update a selected subset of the two or more rows in the stored results, the subset being less than all of the two or more rows. The stored query is retrieved from storage, and, in response to the request, the retrieved query is modified to retrieve the selected subset of rows without retrieving a remaining portion of the two or more rows. The modified query is executed, updated results are obtained from the modified query, and the updated results are displayed.","In the following, reference is made to embodiments of the invention. However, it should be understood that the invention is not limited to specific described embodiments. Instead, any combination of the following features and elements, whether related to different embodiments or not, is contemplated to implement and practice the invention. Furthermore, in various embodiments the invention provides numerous advantages over the prior art. However, although embodiments of the invention may achieve advantages over other possible solutions and\/or over the prior art, whether or not a particular advantage is achieved by a given embodiment is not limiting of the invention. Thus, the following aspects, features, embodiments and advantages are merely illustrative and are not considered elements or limitations of the appended claims except where explicitly recited in a claim(s). Likewise, reference to \u201cthe invention\u201d shall not be construed as a generalization of any inventive subject matter disclosed herein and shall not be considered to be an element or limitation of the appended claims except where explicitly recited in a claim(s).","While embodiments below are described with reference to a system utilizing abstract queries and data abstraction, other embodiments of the invention are contemplated in which the queries being executed by the user are executed against a database which does not utilize abstract queries and data abstraction.","One embodiment of the invention is implemented as a program product for use with a computer system such as, for example, the computer system shown in  and described below. The program(s) of the program product defines functions of the embodiments (including the methods described herein) and can be contained on a variety of signal-bearing media. Illustrative signal-bearing media include, but are not limited to: (i) information permanently stored on non-writable storage media (e.g., read-only memory devices within a computer such as CD-ROM disks readable by a CD-ROM drive); (ii) alterable information stored on writable storage media (e.g., floppy disks within a diskette drive or hard-disk drive); or (iii) information conveyed to a computer by a communications medium, such as through a computer or telephone network, including wireless communications. The latter embodiment specifically includes information downloaded from the Internet and other networks. Such signal-bearing media, when carrying computer-readable instructions that direct the functions of the present invention, represent embodiments of the present invention.","In general, the routines executed to implement the embodiments of the invention, may be part of an operating system or a specific application, component, program, module, object, or sequence of instructions. The software of the present invention typically is comprised of a multitude of instructions that will be translated by the native computer into a machine-readable format and hence executable instructions. Also, programs are comprised of variables and data structures that either reside locally to the program or are found in memory or on storage devices. In addition, various programs described hereinafter may be identified based upon the application for which they are implemented in a specific embodiment of the invention. However, it should be appreciated that any particular nomenclature that follows is used merely for convenience, and thus the invention should not be limited to use solely in any specific application identified and\/or implied by such nomenclature.","Physical View of Environment",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1","b":["100","100","102","102","104","104","102","104","126","126","126"]},"The client computer  includes a Central Processing Unit (CPU)  connected via a bus  to a memory , storage , an input device , an output device , and a network interface device . The input device  can be any device to give input to the client computer . For example, a keyboard, keypad, light-pen, touch-screen, track-ball, or speech recognition unit, audio\/video player, and the like could be used. The output device  can be any device to give output to the user, e.g., any conventional display screen. Although shown separately from the input device , the output device  and input device  could be combined. For example, a display screen with an integrated touch-screen, a display with an integrated keyboard, or a speech recognition unit combined with a text speech converter could be used.","The network interface device  may be any entry\/exit device configured to allow network communications between the client computer  and the server computer  via the network . For example, the network interface device  may be a network adapter or other network interface card (NIC).","Storage  is preferably a Direct Access Storage Device (DASD). Although it is shown as a single unit, it could be a combination of fixed and\/or removable storage devices, such as fixed disc drives, floppy disc drives, tape drives, removable memory cards, or optical storage. The memory  and storage  could be part of one virtual address space spanning multiple primary and secondary storage devices.","The memory  is preferably a random access memory sufficiently large to hold the necessary programming and data structures of the invention. While the memory  is shown as a single entity, it should be understood that the memory  may in fact comprise a plurality of modules, and that the memory  may exist at multiple levels, from high speed registers and caches to lower speed but larger DRAM chips.","Illustratively, the memory  contains an operating system . Illustrative operating systems, which may be used to advantage, include Linux and Microsoft's Windows\u00ae. More generally, any operating system supporting the functions disclosed herein may be used.","The memory  is also shown containing a browser program  that, when executed on CPU , provides support for navigating between the various servers  and locating network addresses at one or more of the servers . In one embodiment, the browser program  includes a web-based Graphical User Interface (GUI), which allows the user to display Hyper Text Markup Language (HTML) information. More generally, however, the browser program  may be any GUI-based program capable of rendering the information transmitted from the server computer .","The server computer  may be physically arranged in a manner similar to the client computer . Accordingly, the server computer  is shown generally comprising a CPU , a memory , and a storage device , coupled to one another by a bus . Memory  may be a random access memory sufficiently large to hold the necessary programming and data structures that are located on the server computer .","The server computer  is generally under the control of an operating system  shown residing in memory . Examples of the operating system  include IBM OS\/400\u00ae, UNIX, Microsoft Windows\u00ae, and the like. More generally, any operating system capable of supporting the functions described herein may be used.","The memory  further includes one or more applications , an abstract query interface  and a rule application manager . The applications , the abstract query interface  and the rule application manager  are software products having a plurality of instructions that are resident at various times in various memory and storage devices in the computer system . When read and executed by one or more processors  in the server , the applications , the abstract query interface  and the rule application manager  cause the computer system  to perform the steps necessary to execute steps or elements embodying the various aspects of the invention. The applications  (and more generally, any requesting entity, including the operating system  and, at the highest level, users) issue queries against a database (e.g., databases . . . , collectively referred to as database(s) ). Illustratively, the databases  are shown as part of a database management system (DBMS)  in storage . The databases  are representative of any collection of data regardless of the particular physical representation. By way of illustration, the databases  may be organized according to a relational schema (accessible by SQL queries) or according to an XML schema (accessible by XML queries). However, the invention is not limited to a particular schema and contemplates extension to schemas presently unknown. As used herein, the term \u201cschema\u201d generically refers to a particular arrangement of data.","The memory  may also include a result updater  according to one embodiment of the invention. The result updater  may be used to store and update results according to one embodiment of the invention. The operation of the result updater  is described below in greater detail.","In one embodiment, the queries issued by the applications  are defined according to an application query specification  included with each application . The queries issued by the applications  may be predefined (i.e., hard coded as part of the applications ) or may be generated in response to input (e.g., user input). In either case, the queries (referred to herein as \u201cabstract queries\u201d) are composed using logical fields defined by the abstract query interface . In particular, the logical fields used in the abstract queries are defined by a data repository abstraction component  of the abstract query interface . The abstract queries are executed by a runtime component  which first transforms the abstract queries into a form consistent with the physical representation of the data contained in the DBMS , e.g., by translating abstract queries into concrete queries. The rule application manager  implements a rule application mechanism for restricting queryable data to a subset of all available data contained in the DBMS . In one embodiment, the rule application manager  restricts the queryable data by redefining a query that is executed against the database in order to execute the redefined query against the queryable data. Alternatively, the rule application manager  restricts the queryable data using a condition retrieved from storage when executing a received query. Still alternatively, the rule application manager  restricts the queryable data by modifying the data repository abstraction component. The application query specification , the abstract query interface  and the rule application manager  are further described with reference to .","In one embodiment, elements of a query are specified by a user through a graphical user interface (GUI). The content of the GUIs is generated by the application(s) . In a particular embodiment, the GUI content is hypertext markup language (HTML) content which may be rendered on the client computer systems  with the browser program . Accordingly, the memory  includes a Hypertext Transfer Protocol (HTTP) server process  (e.g., a web server) adapted to service requests from the client computer . For example, the process  may respond to requests to access a database(s) , which illustratively resides on the server . Incoming client requests for data from a database  invoke an application . When executed by the processor , the application  causes the server computer  to perform the steps or elements embodying the various aspects of the invention, including accessing the database(s) . In one embodiment, the application  comprises a plurality of servlets configured to build GUI elements, which are then rendered by the browser program .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 1","FIG. 1"],"b":["102","104","152"]},"Logical\/Runtime View of Environment",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIGS. 2A-B","FIG. 1"],"b":["200","140","202","142","202","154","142","204","206","204"]},"The logical fields specified by the application query specification  and used to compose the abstract query  are defined by the data repository abstraction component . In general, the data repository abstraction component  exposes information as a set of logical fields that may be used within a query (e.g., the abstract query ) issued by the application  to specify criteria for data selection and specify the form of result data returned from a query operation. The logical fields are defined independently of the underlying data representation being used in the DBMS , thereby allowing queries to be formed that are loosely coupled to the underlying data representation.","In general, the data repository abstraction component  exposes information as a set of logical fields that may be used within a query (e.g., the abstract query ) issued by the application  to specify criteria for data selection and specify the form of result data returned from a query operation. The logical fields are defined independently of the underlying data representation being used in the database , thereby allowing queries to be formed that are loosely coupled to the underlying data representation.","In one embodiment, the data repository abstraction component  comprises a plurality of field specifications , , , and (five shown by way of example), collectively referred to as the field specifications . Specifically, a field specification is provided for each logical field available for composition of an abstract query. Each field specification contains a logical field name , , , , (collectively, field name ) and an associated access method , , , , (collectively, access method ). The access methods associate (i.e., map) the logical field names to a particular physical data representation , . . . in the database (e.g., database ). By way of illustration, two data representations are shown, an XML data representation and a relational data representation . However, the physical data representation indicates that any other data representation, known or unknown, is contemplated. In one embodiment, a single data repository abstraction component  contains field specifications (with associated access methods) for two or more physical data representations . In an alternative embodiment, a different single data repository abstraction component  is provided for each separate physical data representation .","Any number of access methods is contemplated depending upon the number of different types of logical fields to be supported. In one embodiment, access methods for simple fields, filtered fields and composed fields are provided. The field specifications , and exemplify simple field access methods , , and , respectively. Simple fields are mapped directly to a particular entity in the underlying physical data representation (e.g., a field mapped to a given database table and column). By way of illustration, the simple field access method shown in  maps the logical field name (\u201cFirstName\u201d) to a column named \u201cf_name\u201d in a table named \u201ccontact\u201d. The field specification exemplifies a filtered field access method . Filtered fields identify an associated physical entity and provide filters used to define a particular subset of items within the physical data representation. An example is provided in  in which the filtered field access method maps the logical field name (\u201cAnyTownLastName\u201d) to a physical entity in a column named \u201cI_name\u201d in a table named \u201ccontact\u201d and defines a filter for individuals in the city of \u201cAnytown\u201d. Another example of a filtered field is a New York ZIP code field that maps to the physical representation of ZIP codes and restricts the data only to those ZIP codes defined for the state of New York. The field specification exemplifies a composed field access method . Composed access methods compute a logical field from one or more physical fields using an expression supplied as part of the access method definition. In this way, information which does not exist in the underlying data representation may be computed. In the example illustrated in  the composed field access method maps the logical field name \u201cAgeInDecades\u201d to \u201cAgeInYears\/10\u201d. Another example is a sales tax field that is composed by multiplying a sales price field by a sales tax rate.","It is contemplated that the formats for any given data type (e.g., dates, decimal numbers, etc.) of the underlying data may vary. Accordingly, in one embodiment, the field specifications  include a type attribute which reflects the format of the underlying data. However, in another embodiment, the data format of the field specifications  is different from the associated underlying physical data, in which case a conversion of the underlying physical data into the format of the logical field is required.","By way of example, the field specifications  of the data repository abstraction component  shown in  are representative of logical fields mapped to data represented in the relational data representation . However, other instances of the data repository abstraction component  map logical fields to other physical data representations, such as XML.","An illustrative abstract query corresponding to the abstract query  shown in  is shown in TABLE I below. By way of illustration, the illustrative abstract query is defined using XML. However, any other language may be used to advantage.",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ABSTRACT QUERY EXAMPLE"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["001","<?xml version=\u201c1.0\u201d?>"]},{"entry":["002","<!--Query string representation: (FirstName = \u201cMary\u201d AND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"LastName ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["003","\u201cMcGoon\u201d) OR State = \u201cNC\u201d-->"]},{"entry":["004","<QueryAbstraction>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["005","<Selection>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["006","<Condition internalID=\u201c4\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["007","<Condition field=\u201cFirstName\u201d operator=\u201cEQ\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"value=\u201cMary\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["008","internalID=\u201c1\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["009","<Condition field=\u201cLastName\u201d operator=\u201cEQ\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"value=\u201cMcGoon\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["010","internalID=\u201c3\u201d relOperator=\u201cAND\u201d><\/Condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["011","<\/Condition>"]},{"entry":["012","<Condition field=\u201cState\u201d operator=\u201cEQ\u201d value=\u201cNC\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"internalID=\u201c2\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["013","relOperator=\u201cOR\u201d><\/Condition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["014","<\/Selection>"]},{"entry":["015","<Results>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["016","<Field name=\u201cFirstName\u201d\/>"]},{"entry":["017","<Field name=\u201cLastName\u201d\/>"]},{"entry":["018","<Field name=\u201cStreet\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["019","<\/Results>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["020","<\/QueryAbstraction>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Illustratively, the abstract query shown in TABLE I includes a selection specification (lines 005-014) containing selection criteria and a results specification (lines 015-019). In one embodiment, a selection criterion consists of a field name (for a logical field), a comparison operator (=, >, <, etc) and a value expression (what is the field being compared to). In one embodiment, result specification is a list of abstract fields that are to be returned as a result of query execution. A result specification in the abstract query may consist of a field name and sort criteria.","An illustrative Data Repository Abstraction is shown in TABLE II below. By way of illustration, the illustrative Data Repository Abstraction is defined using XML. However, any other language may be used to advantage.",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"DATA REPOSITORY ABSTRACTION EXAMPLE"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"001","<?xml version=\u201c1.0\u201d?>"]},{"entry":[{},"002","<DataRepository>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"003","<Category name=\u201cDemographic\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"004","<Field queryable=\u201cYes\u201d name=\u201cFirstName\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"displayable=\u201cYes\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"005","<AccessMethod>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"006","<Simple columnName=\u201cf_name\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"tableName=\u201ccontact\u201d><\/Simple>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"007","<\/AccessMethod>"]},{"entry":[{},"008","<Type baseType=\u201cchar\u201d><\/Type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"009","<\/Field>"]},{"entry":[{},"010","<Field queryable=\u201cYes\u201d name=\u201cLastName\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"displayable=\u201cYes\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"011","<AccessMethod>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"012","<Simple columnName=\u201cl_name\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"tableName=\u201ccontact\u201d><\/Simple>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"013","<\/AccessMethod>"]},{"entry":[{},"014","<Type baseType=\u201cchar\u201d><\/Type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"015","<\/Field>"]},{"entry":[{},"016","<Field queryable=\u201cYes\u201d name=\u201cState\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"displayable=\u201cYes\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"017","<AccessMethod>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"018","<Simple columnName=\u201cstate\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"tableName=\u201ccontact\u201d><\/Simple>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"019","<\/AccessMethod>"]},{"entry":[{},"020","<Type baseType=\u201cchar\u201d><\/Type>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"021","<\/Field>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"022","<\/Category>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"023","<\/DataRepository>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 3","FIG. 2","FIG. 1"],"b":["300","150","300","302","150","202","304","150","306","150","306","308","310","312","308","150","148","150","310","154","300","306","306"]},"After building the data selection portion of the concrete query, the runtime component  identifies the information to be returned as a result of query execution. As described above, in one embodiment, the abstract query defines a list of abstract fields that are to be returned as a result of query execution, referred to herein as a result specification. A result specification in the abstract query may consist of a field name and sort criteria. Accordingly, the method  enters a loop at step  (defined by steps , ,  and ) to add result field definitions to the concrete query being generated. At step , the runtime component  looks up a result field name (from the result specification of the abstract query) in the data repository abstraction  and then retrieves a Result Field Definition from the data repository abstraction  to identify the physical location of data to be returned for the current logical result field. The runtime component  then builds (as step ) a Concrete Query Contribution (of the concrete query that identifies physical location of data to be returned) for the logical result field. At step , Concrete Query Contribution is then added to the Concrete Query Statement. Once each of the result specifications in the abstract query has been processed, the query is executed at step .","One embodiment of a method  for building a Concrete Query Contribution for a logical field according to steps  and  is described with reference to . At step , the method  queries whether the access method associated with the current logical field is a simple access method. If so, the Concrete Query Contribution is built (step ) based on physical data location information and processing then continues according to method  described above. Otherwise, processing continues to step  to query whether the access method associated with the current logical field is a filtered access method. If so, the Concrete Query Contribution is built (step ) based on physical data location information for some physical data entity. At step , the Concrete Query Contribution is extended with additional logic (filter selection) used to subset data associated with the physical data entity. Processing then continues according to method  described above.","If the access method is not a filtered access method, processing proceeds from step  to step  where the method  queries whether the access method is a composed access method. If the access method is a composed access method, the physical data location for each sub-field reference in the composed field expression is located and retrieved at step . At step , the physical field location information of the composed field expression is substituted for the logical field references of the composed field expression, whereby the Concrete Query Contribution is generated. Processing then continues according to method  described above.","If the access method is not a composed access method, processing proceeds from step  to step . Step  is representative of any other access methods types contemplated as embodiments of the present invention. However, it should be understood that embodiments are contemplated in which less then all the available access methods are implemented. For example, in a particular embodiment only simple access methods are used. In another embodiment, only simple access methods and filtered access methods are used.","As described above, it may be necessary to perform a data conversion if a logical field specifies a data format different from the underlying physical data. In one embodiment, an initial conversion is performed for each respective access method when building a Concrete Query Contribution for a logical field according to the method . For example, the conversion may be performed as part of, or immediately following, the steps ,  and . A subsequent conversion from the format of the physical data to the format of the logical field is performed after the query is executed at step . Of course, if the format of the logical field definition is the same as the underlying physical data, no conversion is necessary.","Updating Query Results","As described above, a user executing queries in a database system may wish to store the results of a query and later update a selected subset of rows contained in the results. The user may not wish to update the results by rerunning the original query because rerunning the original query would update the entire set of results. Rerunning the original query may also take time and be computationally expensive. Embodiments of the invention allow the user to update the selected subset of rows without rerunning the original query by executing a modified query which retrieves the selected subset of rows without retrieving the remaining portion of the results.","After receiving a user's abstract query, transforming the abstract query into a concrete query, and executing the query (as described above with respect to ), the process  for saving and updating query results may be initiated.  depicts a process  for saving and updating query results according to one embodiment of the invention. According to one embodiment of the invention, the process  may be performed by the result updater . In other embodiments, the process  may be performed by other components such as the runtime component , or by any other application located on the server  or the client computer .","In order to better understand the process  for saving and updating query results, consider the following exemplary database tables and exemplary query.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE III"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXEMPLARY PATIENT INFORMATION TABLE"},{"entry":"Name: Table1"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID",{},{},{}]},{"entry":["(Primary Key)","Last_Name","First_Name","Birth_Date"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Russell","Kevin","Oct. 15, 1935"]},{"entry":["456","Smith","Bill","Sep. 6, 1946"]},{"entry":["789","Waters","Jane","Nov. 2, 1933"]},{"entry":["900","Gibbons","Lindsey","Apr. 4, 1950"]},{"entry":["905","Field","Albert","Jun. 28, 1942"]},{"entry":["907","Wilson","Leticia","Sep. 9, 1939"]},{"entry":["921","Johnson","Wayne","Aug. 13, 1943"]},{"entry":["930","Turner","Judith","Jul. 30, 1952"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE IV"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXEMPLARY TEST RESULT TABLE"},{"entry":"Name: Table2"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Test_Type","Test_Results","Test_Date"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Type A","44","Sep. 1, 2004"]},{"entry":["456","Type A","46","Aug. 30, 2004"]},{"entry":["456","Type B","48","Sep. 9, 2004"]},{"entry":["789","Type A","48","Sep. 12, 2004"]},{"entry":["900","Type B","59","Sep. 21, 2004"]},{"entry":["905","Type A","44","Sep. 2, 2004"]},{"entry":["907","Type B","42","Aug. 22, 2004"]},{"entry":["921","Type B","34","Oct. 8, 2004"]},{"entry":["930","Type A","41","Aug. 28, 2004"]},{"entry":["930","Type B","39","Sep. 15, 2004"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE V"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXEMPLARY QUERY"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"001","SELECT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"002","Table1.Patient_ID"]},{"entry":[{},"003","Table1.Last_Name"]},{"entry":[{},"004","Table2.Test_Type"]},{"entry":[{},"005","Table2.Test_Results"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"006","WHERE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"007","Table1.Patient_ID = Table2.Patient_ID AND"]},{"entry":[{},"008","Table2.Test_Results > 40"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"009","ORDER BY"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"010","Table1.Patient_ID ASC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The database being searched may contain two tables. The first table, called \u201cTable1\u201d and shown in TABLE III above, may have columns containing various patient information such as a patient ID, the patient's last name, the patient's first name, and the patient's birth date. The second table, called \u201cTable2\u201d and shown in TABLE IV above, may have data about each patient's test results. The second table contains the patient ID, the patient's test result, the test type, and the test date.","The exemplary query displayed in TABLE V consists of three parts. The first part, the \u201cSELECT\u201d clause, selects values which will be displayed as columns in the results. The \u201cSELECT\u201d clause in the exemplary query selects four columns to be displayed: the Patient ID from Table1, the last name of the patient from Table1, the test type from Table2, and the test results from Table2. The second clause in the exemplary query, the \u201cWHERE\u201d clause, limits the data which will be selected by the \u201cSELECT\u201d clause. In the \u201cWHERE\u201d clause, data from the \u201cSELECT\u201d clause is limited to rows where the Patient ID is the same in Table1 and Table2 (\u201cTable1.Patient_ID=Table2.Patient_ID\u201d) and where the value in the test results column of Table2 is greater than 40 (\u201cTable2.Test_Results>40\u201d). The third clause, the \u201cORDER BY\u201d clause, specifies how the results should be ordered, in this case by the Patient ID number in ascending order. Thus, the exemplary query has the effect of displaying the Patient ID, the last name, the test type, and the test results for patients whose test results are greater than 40. The results of the exemplary query are shown in TABLE VI below.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE VI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RESULTS OF THE EXEMPLARY QUERY"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Russell","Type A","44"]},{"entry":["456","Smith","Type A","46"]},{"entry":["456","Smith","Type B","48"]},{"entry":["789","Waters","Type A","48"]},{"entry":["900","Gibbons","Type B","59"]},{"entry":["905","Field","Type A","44"]},{"entry":["907","Wilson","Type B","42"]},{"entry":["930","Turner","Type A","41"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The process  for storing and updating results may begin at step  and continue to step  where the results from the execution of the query, shown in Table VI, are received. The results may be received in a file, data structure, as a stream of data, or by any means known to those skilled in the art. At step  the received results may be stored. The results may be stored so the user may later view the results and use them to select which rows the user would like to update (described below). The results of the query may be stored on the storage device  according to one embodiment of the invention. In other embodiments, the results may be stored on a storage server or in the storage  on the client computer .","After storing the query results at step , identifier values for each row in the stored results may also be stored at step . Identifier values are values which are used to identify rows in the stored results. Identifier values are typically stored in the same database and in some cases in the same tables as the data which is being queried. The identifier values may include primary keys, foreign keys, indexes, unique indexes, or any other identifier values known to those skilled in the art. The identifier values may also be marked as identifier values within the database, marked as an attribute of a logical field in a data repository abstraction (described above), or the identifier values may be implicitly marked or used as identifier values inside the programs and components which use them, such as the runtime component .","In one embodiment of the invention, the identifier values may be identified, retrieved, and stored separately from the received results. According to other embodiments of the invention, the identifier values may be identified, retrieved, and stored simultaneously with the results, or as a part of the results themselves. With respect to the exemplary query and results, the identifier values are the values in the Patient_ID column, and are thus received as part of the results. The values in the Patient_ID column are recognizable as identifier values in the underlying database tables because the Patient_ID column is labeled as a primary key column in the underlying database table (Table1). The identifier values may be identified as such by parsing the query to determine which tables in the database are being searched (in this case, Table1 and Table2). The attributes of the columns in the tables being searched may then be analyzed to determine which column contains the identifier values (here, Table1 contains the column Patient_ID which has the primary key attribute and thus contains the identifier values). In other embodiments of the invention, the identifier values may not be determined until they are actually used to identify the rows in the stored results (described below).","While the identifier values may be used to identify rows in the stored results, the identifier values may not be unique for each row. In other words, a given identifier value may identify two or more rows in a given set of results. For instance, as shown in Table VI, the retrieved rows contain test results and the identifier value for each row is a patient ID for the patient undergoing the test. However, because a patient may take different tests, or because a patient may take the same test on different dates, the results may contain several rows of test results for the same patient, each of which is identified by the same patient ID. Thus, with respect to TABLE VI, the identifier value for patient 456 appears twice because the patient, Bill Smith, was tested on two different dates (Aug. 30, 2004 and Sep. 9, 2004), both of which resulted in a test value above 40. Use of the identifier value in updating the results is described below in greater detail.","After storing the identifier values for each row of the stored results, the query may be stored at step . The query may be stored so that it may be later modified and executed to update the results upon receiving an update request. In some embodiments of the invention, the user may also be allowed to retrieve the stored query, modify the stored query, and\/or re-execute the stored query.","After the results, identifier values, and query have been stored, the stored results may be retrieved and displayed at step .  depicts a graphical user interface  for displaying the stored results according to one embodiment of the invention. The graphical user interface  may contain a table  with rows  and columns  of results. The table  may also provide the identifier value for each row in a column  as well as graphical selection elements - for selecting one or more of the rows  to be updated. The graphical user interface may also contain a graphical element  for initiating requests to update the results.","According to one embodiment of the invention, the results may be immediately displayed to the user after the results have been stored. According to another embodiment of the invention, the results may be stored until the user later requests to view the results. In other embodiments of the invention, the user may be provided with other options regarding the results, such as the ability to download the results from the server computer , the ability to delete unwanted results, or other options for manipulating stored results generally known to those skilled in the art.","After retrieving and displaying the stored results, a request to update a selected subset of the rows in the stored results may be received at step . The request may be made by any requesting entity such as a user or computer program. According to one embodiment of the invention, the subset of rows may be selected by the user using the graphical selection elements - provided in the graphical user interface  for displaying the results. For instance, as depicted in , the user may have selected rows , , and  to be updated by clicking on the graphical selection elements , , . According to another embodiment, the subset of rows may selected by allowing the user to enter the identifier values for the rows to be selected. The request to update the rows may be initiated by activating the graphical element  for initiating update requests. According to another embodiment of the invention, the request may be made by keyboard input, such as a keyboard shortcut. The subset of rows may also be selected and the request may also be initiated by other means known to those skilled in the art according to other embodiments of the invention.","After the request to update the query has been received, the stored query may be retrieved at step  and the identifier values for the selected rows may be loaded at step . The stored query and the identifier values are retrieved in order to create a modified query which will update the selected rows without having to run the original query and update the entire set of results. At step , the query may be modified to retrieve the selected subset of rows using the respective identifier value for each of the selected rows. The process for modifying the stored query is depicted in .",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 8","FIG. 7"],"b":["800","802","804","3","806","3","808"]},{"@attributes":{"id":"p-0083","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE VII"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PARTIALLY MODIFIED EXEMPLARY QUERY"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"001","SELECT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"002","Table1.Patient_ID"]},{"entry":[{},"003","Table1.Last_Name"]},{"entry":[{},"004","Table2.Test_Type"]},{"entry":[{},"005","Table2.Test_Results"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"006","WHERE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"007","Table1. Patient_ID = Table2.Patient_ID AND"]},{"entry":[{},"008","Table2.Test_Results > 40 AND"]},{"entry":[{},"009","(Table1.Patient_ID=465)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"010","ORDER BY"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"011","Table1.Patient_ID ASC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"After modifying the query at step , the loop iterating across each selected row may continue at step . Accordingly, the next selected row evaluated by the loop will be row . At step , the identifier value for that row (patient ID equal to 900) may be retrieved and at step  a limiting condition with the identifier value may be inserted into the query. Because the user wishes to update more than one row (rows , , and ), the limiting condition may be inserted as an alternative (disjunctively) with respect to the other limiting conditions. Accordingly, the modification to the \u201cWHERE\u201d clause may become \u201c(Table1.Patient_ID=465 OR Table1.Patient_ID=900)\u201d after the second iteration of the loop.","After the third iteration of the loop, the identifier for the next selected row (Patient_ID equal to 905 for row ) will also be added as a limitation and joined disjunctively to the other limiting conditions in the modified query, resulting in \u201c(Table1.Patient_ID=465 OR Table1.Patient_ID=900 OR Table1.Patient_ID=905)\u201d. Thus, when the query is executed, the query will only select data containing one of the identifier values contained in the selected rows, causing the query to retrieve updated results for each of the selected rows. Furthermore, because the query contains a very limited condition in the \u201cWHERE\u201d clause (the condition selecting the identifier values), the database engine executing the modified query may optimize the execution of the modified query by causing the limiting condition to be applied first when the query is executed. Accordingly, when the remaining conditions in the modified query (such as the \u201cTable2.Test_Results>40\u201d condition) are executed, the remaining conditions will be executed against a more limited selection of rows (only those with the patient IDs of 465, 900, or 905) as compared to the original query (which may have been executed against all of the patient IDs), causing the modified query to retrieve and update the selected rows much more quickly and selectively than could be accomplished with the original query.","After the loop has iterated across each selected row, the loop may finish and the process  of updating the results may continue from step . The final result of the modification process  is shown in TABLE VIII.",{"@attributes":{"id":"p-0087","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE VIII"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MODIFIED EXEMPLARY QUERY"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["001","SELECT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["002","Table1.Patient_ID"]},{"entry":["003","Table1.Last_Name"]},{"entry":["004","Table2.Test_Type"]},{"entry":["005","Table2.Test_Results"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["006","WHERE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["007","Table1.Patient_ID = Table2.Patient_ID AND"]},{"entry":["008","Table2.Test_Results > 40 AND"]},{"entry":["009","(Table1.Patient_ID=465 OR Table1.Patient_ID=900 OR"]},{"entry":["010","Table1.Patient_ID=905)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["011","ORDER BY"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["012","Table1.Patient_ID ASC"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"After the process  of modifying the query finishes, the query may be executed at step . At step , the results from the execution of the modified query may be obtained. The obtained results may depend on any changes which have taken place in the underlying database. Consider, for example, the changed test result table shown in TABLE IX. Changed values are marked by asterisks (\u201c*\u201d)",{"@attributes":{"id":"p-0089","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE IX"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CHANGED EXEMPLARY TEST RESULT TABLE"},{"entry":"Name: Table2"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Test_Type","Test_Results","Test_Date"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Type A","44\u2002","Sep. 1, 2004"]},{"entry":["456","Type A","47*","Nov. 30, 2004*"]},{"entry":["456","Type B","38*","Nov. 9, 2004*"]},{"entry":["789","Type A","48\u2002","Sep. 12, 2004"]},{"entry":["900","Type B","48*","Nov. 21, 2004*"]},{"entry":["905","Type A","44\u2002","Sep. 2, 2004"]},{"entry":["\u2002907*","Type A*","44*","Nov. 22, 2004*"]},{"entry":["907","Type B","42\u2002","Aug. 22, 2004"]},{"entry":["921","Type B","44*","Nov. 8, 2004*"]},{"entry":["930","Type A","39*","Nov. 28, 2004*"]},{"entry":["930","Type B","39*","Sep. 15, 2004"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Numerous changes in the underlying table may have taken place. For instance, some rows may have been added, some rows may have been deleted, and some rows may have been replaced with updated test results. After the modified query depicted in TABLE VII is executed at step  against the changed results shown in TABLE IX, the results obtained at step  will appear as in TABLE X.",{"@attributes":{"id":"p-0091","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE X"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RESULTS OF THE MODIFIED EXEMPLARY QUERY"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["456","Smith","Type A","47"]},{"entry":["900","Gibbons","Type B","48"]},{"entry":["905","Field","Type A","44"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"With respect to the results depicted in TABLE X, only rows containing results which meet each condition of the modified query are returned. Accordingly, only rows containing at least one of the identifier values (Patient_ID=456, 900, or 905) from the selected subset of rows will be selected. If the values in the changed rows do not contain data meeting the original requirements of the query, the rows will not be selected. Furthermore, even though new rows may be added to the underlying table which meet the conditions of the original query (such as the new row for patient  with Test_Type A and a test result over 40, depicted in TABLE IX), if the new rows do not contain the identifier value for one of the selected rows, the new rows will not be included in the returned results.","After the updated results from the modified query are returned at step , the updated results may be merged with the stored results at step .  depicts a process  for merging updated results according to one embodiment of the invention. The process may begin at step  and continue to step  where the selected rows are removed from the stored results. The rows may be removed from the stored results in order to place the new, updated rows in the spaces where the removed rows were (described below).","After the selected rows are removed, the rows with duplicate identifier values (i.e., the same identifier values as the selected rows) may also be removed at step . Thus, as depicted in , row  with a patient ID of  is selected. Because the modified query may also retrieve an updated version of row , which has a duplicate identifier value (Patient_ID is also 456), row  must be deleted from the results in order to make a space for the updated version of the row, if any. In another embodiment of the invention, rows with duplicate identifier values may not be deleted unless an updated version of the row is actually available. In yet other embodiments of the invention, the selected rows and rows with duplicate values may be removed just after a request to update selected rows is received in order to make space for the updated results. The stored results, after removal of the selected rows and the rows with duplicate identifier values, may appear as shown in TABLE XI.",{"@attributes":{"id":"p-0095","num":"0094"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"STORED RESULTS OF THE EXEMPLARY"},{"entry":"QUERY AFTER DELETING ROWS"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Russell","Type A","44"]},{"entry":["789","Waters","Type A","48"]},{"entry":["907","Wilson","Type B","42"]},{"entry":["930","Turner","Type A","41"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"At step , the number of removed rows may be recorded. The number of removed rows may be recorded in order to inform the user of the changes which have been made to the stored results. After recording the number of removed rows, the new rows from the results of the modified query may be placed in the empty rows in the stored results at step . If there are fewer updated rows returned by the modified query than empty rows in the stored results, some rows in the stored results may remain empty until the rows are sorted (described below). There may be fewer updated rows returned by the modified query because the original rows have been deleted since the original query was executed or because the original rows in the underlying table, after being modified or updated by other processes or users in the system, no longer satisfy the conditions of the modified query. Accordingly, with respect to the changed exemplary test result table shown in TABLE IX, the Type B test value for Patient_ID 456 has been changed to 38 for a new test performed on Nov. 11, 2004. While the modified query does allow rows with a Patient_ID of 456 to be selected, the modified query restricts those rows to test values of greater than 40. Thus, the Test B results for patient 456 do not satisfy the modified query and the row is not returned in the modified query results. If there are more updated rows returned by the modified query than empty rows in the stored results, the additional rows may be inserted at the end of the stored results at step . After the updated rows from the modified query results have been inserted into the stored results, the merged results may appear as shown in TABLE XII.",{"@attributes":{"id":"p-0097","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"STORED RESULTS OF THE EXEMPLARY"},{"entry":"QUERY AFTER INSERTING ROWS"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Russell","Type A","44"]},{"entry":["456","Smith","Type A","47"]},{"entry":["900","Gibbons","Type B","48"]},{"entry":["789","Waters","Type A","48"]},{"entry":["905","Field","Type A","44"]},{"entry":["907","Wilson","Type B","42"]},{"entry":["930","Turner","Type A","41"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"After the updated rows have been inserted, the \u201cORDER BY\u201d clause of the modified query may be applied to the merged results at step . For the modified query shown in Table VII, the \u201cORDER BY\u201d clause specifies that the results be sorted by the Patient_ID value in ascending order. When the \u201cORDER BY\u201d clause is applied to the merged results, any blank rows will be placed at the end of the merged results and effectively deleted. The results of applying the \u201cORDER BY\u201d clause are depicted in TABLE XIII.",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XIII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"STORED RESULTS OF THE EXEMPLARY QUERY AFTER"},{"entry":"APPLYING THE \u201cORDER BY CLAUSE\u201d"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Russell","Type A","44"]},{"entry":["456","Smith","Type A","47"]},{"entry":["789","Waters","Type A","48"]},{"entry":["900","Gibbons","Type B","48"]},{"entry":["905","Field","Type A","44"]},{"entry":["907","Wilson","Type B","42"]},{"entry":["930","Turner","Type A","41"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"After the updated rows and the stored results have been merged and ordered, a determination may be made of whether the number of rows has changed or whether the order of the rows has changed. To determine if the number of rows has changed, the number of removed rows may be compared to the number of inserted rows. To determine if the order of the merged results has changed, the merged results may be compared with the original stored results. If the number of rows has changed or the order has changed, a warning may be displayed to the user at step . The warning may be a textual message displayed along with the results, a pop-up box, highlighting or italicizing of the changed rows, or any other warning known to those skilled in the art.","After the process  of merging the results is finished, the process  of saving and updating the results may continue after step . At step , the merged results may be displayed. The merged results may be displayed in a graphical user interface, such as the graphical user interface  depicted in , according to one embodiment. The changed values may be italicized as shown in . According to other embodiments of the invention, the changed values may be highlighted or displayed next to the original stored values for comparison. After the merged results have been displayed, the process  of updating the results may terminate at step .","Other embodiments of the invention are also contemplated which provide different variations of the above process of storing and updating query results. For instance, one embodiment may provide that selected rows are not be deleted from the stored results where the row has been deleted from the underlying table in the database. As an alternative, such rows may remain in the merged results, but the row may be marked with a notification message which explains that the underlying data contained in the row has been deleted.","Updating Query Results with Results in Restricting Fields","In some cases, a user may wish to update rows in a more selective manner. For instance, the user may wish identify rows to be updated based on more specific criteria than identifier values for each row, especially where a given identifier value identifies more rows in the query results than the user wishes to update. Thus, with respect to the query results depicted in the graphical user interface  in , if the user selects row  to be updated, using the above method for updating query results may cause both rows  and  to be updated because both rows are identified by the same identifier value (Patient_ID equal to 456). In some cases, the user may wish to update all of the data regarding patient 456. In other cases, the user may only wish to update the selected row.","To allow the user to be more selective in updating rows, the user may be provided with modified queries which utilize restricting fields. Restricting fields, as the name implies, restrict modified queries so that only updated rows containing both the identifier value and the value in the restricting field are returned. Values in restricting fields may be referred to as restricting values. As an example of the use of restricting fields, if the user uses the graphical user interface  to select row  to be updated, and if the Test_Type column is designated as a restricting field, the modified query will only update rows with a matching identifier value (Patient_ID equal to 456) and a matching restricting value in the restricting field (Test_Type equal to \u201cType A\u201d, where \u201cType A\u201d is the restricting value). According to one embodiment of the invention, the user may be allowed to specify which columns in the query results should be used as restricting fields. According to another embodiment of the invention, the restricting fields may be defined as an attribute of a logical field in a data repository abstraction (described above).","The process for storing and updating stored results utilizing restricting fields is similar to the process depicted in  for storing and updating results where restricting fields are not used. According to one embodiment, the process for updating results using restricting fields may only differ with respect to modifying the stored query and merging the updated results (both of which are described below). Thus, the process may begin by storing the query, query results, and identifier values for the results. After the query information is stored, the process may retrieve and display the results, and a request to update a selected subset of rows in the stored results may be received. Upon receiving a request to update selected rows, the stored query and identifier values may be retrieved, and the query may be modified using identifier values and restricting fields to retrieve the selected rows.",{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIG. 11","FIG. 6"],"b":["1100","1102","1104","2","5","2","1106","2","2","1108"]},{"@attributes":{"id":"p-0107","num":"0106"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE XIV"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PARTIALLY MODIFIED EXEMPLARY QUERY"},{"entry":"(WITH RESTRICTING VALUES)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["001","SELECT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["002","Table1.Patient_ID"]},{"entry":["003","Table1.Last_Name"]},{"entry":["004","Table2.Test_Type"]},{"entry":["005","Table2.Test_Results"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["006","WHERE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["007","Table1.Patient_ID = Table2.Patient_ID AND"]},{"entry":["008","Table2.Test_Results > 40 AND"]},{"entry":["009","((Table1.Patient_ID = 456) AND (Table2.Test_Type ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201cType A\u201d))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["010","ORDER BY"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["011","Table1.Patient_ID ASC"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"After modifying the query at step , the loop iterating across each selected row may continue at step . Accordingly, the next selected row evaluated by the loop will be row . At step , the identifier value for that row (Patient_ID equal to 900) may be retrieved and at step  and a limiting condition with the identifier value and restricting value may be inserted into the query at step . Because the user wishes to update more than one row (rows  and ), the limiting condition may be inserted as an alternative (disjunctively) with respect to the other limiting conditions. Accordingly, the modification to the \u201cWHERE\u201d clause may become \u201c(((Table1.Patient_ID=456) AND (Table2.Test_Type=\u201cType A\u201d)) OR ((Table1.Patient_ID=900) AND (Table2.Test_Type=\u201cType B\u201d)))\u201d after the second iteration of the loop. Thus, when the query is executed, the query will only select data containing at least one of the identifier values contained in the selected rows along with the restricting value from the same row, causing the query to retrieve updated results for each of the selected rows.","After the loop has iterated across each selected row, the loop may finish and the process of updating the results may continue from step . The final result of the query modification process  is shown in TABLE XV.",{"@attributes":{"id":"p-0110","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE XV"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MODIFIED EXEMPLARY QUERY"},{"entry":"(WITH RESTRICTING VALUES)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["001","SELECT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["002","Table1.Patient_ID"]},{"entry":["003","Table1.Last_Name"]},{"entry":["004","Table2.Test_Type"]},{"entry":["005","Table2.Test_Results"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["006","WHERE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["007","Table1.Patient_ID = Table2.Patient_ID AND"]},{"entry":["008","Table2.Test_Results > 40 AND"]},{"entry":["009","(((Table1.Patient_ID = 456) AND (Table2.Test_Type ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201cType A\u201d)) OR"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["010","((Table1.Patient_ID=900) AND (Table2.Test_Type ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201cType B\u201d)))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["011","ORDER BY"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["012","Table1.Patient_ID ASC"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"After the process  of modifying the query finishes, the query may be executed and the results from the execution of the modified query may be obtained. As before, the obtained results may depend on any changes which have taken place in the underlying database. For instance, after the modified query depicted in TABLE XV is executed against the changed results shown in TABLE IX, the results obtained from the modified query will appear as in TABLE XVI.",{"@attributes":{"id":"p-0112","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XVI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RESULTS OF THE MODIFIED EXEMPLARY"},{"entry":"QUERY (WITH RESTRICTING VALUES)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["456","Smith","Type A","47"]},{"entry":["900","Gibbons","Type B","48"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"With respect to the results depicted in TABLE XVI, only rows containing results which meet each condition of the modified query are returned. Accordingly, only rows containing at least one combination of identifier values and restricting values (456 and \u201cType A\u201d or 900 and \u201cType B\u201d) from the selected subset of rows were selected.","After the updated results from the modified query are returned, the updated results may be merged with the stored results.  depicts a process  for merging updated results with stored results containing restricting fields according to one embodiment of the invention. The process may begin at step  and continue to step  where the selected rows are removed from the stored results. The rows may be removed from the stored results in order to place the new, updated results in the spaces where the old rows were removed (described below).","After the selected rows are removed, the rows containing both the duplicate identifier values (the same identifier values as the selected rows) and the duplicate values in restricting fields may be removed at step . The duplicate values may be removed in case more than one row in the stored results and in the updated results match the conditions imposed by a selected row (for instance, if two rows contained both Patient_ID=456 and Test_Type=\u201cType A\u201d). Before, where restricting fields were not used (see description above with respect to ), the removal of duplicative rows resulted in removed rows which were not selected. Specifically, with respect to , row , with an identifier value of 456 and Test_Type of \u201cType A\u201d, was removed as well as row  which also had an identifier value of 456 but a Test_Type of Type B. The extra rows were removed because the only limiting condition used by the modified query was the identifier value (456), and the identifier value was not unique for each row (rows  and  both contain the identifier value of 456).","Where restricting fields are used, the modified query and the merging process  are more selective as to how the results are updated. Accordingly, where row  is selected to be updated, the merging process  only removes row  (identifier value of 456 and restricting value of Test_Type=\u201cType A\u201d), but row  is not removed because the identifier value (Patient_ID=456) and restricting value (Test_Type=\u201cType B\u201d) do not match both the identifier and restricting values from the selected row.","The modified results, after removal of the selected rows (rows  and ) and after removal of the rows with duplicated identifier values and restricting values (none of the rows for the exemplary results shown in Table VI), may appear as shown in TABLE XI.",{"@attributes":{"id":"p-0118","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XI"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MODIFIED RESULTS OF THE EXEMPLARY QUERY AFTER"},{"entry":"DELETING ROWS (WITH RESTRICTING VALUES)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Russell","Type A","44"]},{"entry":["456","Smith","Type B","48"]},{"entry":["789","Waters","Type A","48"]},{"entry":["905","Field","Type A","44"]},{"entry":["907","Wilson","Type B","42"]},{"entry":["930","Turner","Type A","41"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"At step , the number of removed rows may be recorded. The number of removed rows may be recorded in order to inform the user of the changes which have been made to the stored results. After recording the number of removed rows, the new rows from the results of the modified query may be placed in the empty rows in the stored results at step . As described above, if there are fewer updated rows returned by the modified query than empty rows in the stored results, some rows in the stored results may remain empty until the rows are sorted. If there are more updated rows returned by the modified query than empty rows in the stored results, the additional rows may be inserted at the end of the stored results at step . After the updated rows have been inserted, the \u201cORDER BY\u201d clause of the modified query may be applied to the merged results at step . After the updated rows from the modified query results have been inserted into the stored results and the \u201cORDER BY\u201d clause has been applied, the merged results may appear as shown in TABLE XII.",{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE XII"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"MERGED RESULTS (WITH RESTRICTING VALUES)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Patient_ID","Last_Name","Test_Type","Test_Results"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["123","Russell","Type A","44"]},{"entry":["456","Smith","Type A","47"]},{"entry":["456","Smith","Type B","48"]},{"entry":["789","Waters","Type A","48"]},{"entry":["900","Gibbons","Type B","48"]},{"entry":["905","Field","Type A","44"]},{"entry":["907","Wilson","Type B","42"]},{"entry":["930","Turner","Type A","41"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"After the updated rows and the stored results have been merged and ordered, a determination may be made of whether the number of rows has changed or whether the order of the rows has changed. If the number of rows has changed or the order has changed, a warning may be displayed to the user at step . After the process  of merging the results is finished, the process of saving and updating the results may continue at step . As before, the merged results may be displayed and the process of updating the results may then terminate.","While embodiments are described above with respect to usage of a single restricting field, other embodiments are contemplated in which multiple restricting fields are utilized. Accordingly, multiple restricting fields as well as identifier values may be used to more specifically select and update rows from stored query results.","While the foregoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features, advantages and objects of the present invention are attained and can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to the embodiments thereof which are illustrated in the appended drawings.","It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 2A-B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
