---
title: Flash memory organization
abstract: A flash-memory system is organized into a plurality of blocks and a plurality of pages in each block, each page having 2data locations and K spare locations. At least one page in the memory has 2user data sectors and each sector has 2+L locations therein. Because L is at least 1 but less than 2, user data is stored in the spare memory locations. By storing user data in spare locations that were previously off-limits to user data, enterprise-sized sectors can be efficiently stored in flash memories with little wasted memory, thereby making flash-memory systems compatible with existing hard-drive storage systems in enterprise system applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08555141&OS=08555141&RS=08555141
owner: LSI Corporation
number: 08555141
owner_city: Milpitas
owner_country: US
publication_date: 20090604
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Acronyms and Definitions","Exemplary Embodiments of the Invention"],"p":["The subject matter of this application is related to copending U.S. patent application Ser. No. 12\/478,013, filed concurrently with this application, having common inventors with this application, assigned to the same assignee as this application, and the teachings of which are incorporated herein in its entirety by reference. The subject matter of this application is also related to U.S. patent application Ser. Nos. 12\/436,227 filed May 6, 2009, 12\/475,710 filed Jun. 1, 2009, 12\/475,716 filed Jun. 1, 2009, 12\/478,013 filed Jun. 4, 2009, 12\/508,879 filed Jul. 24, 2009, 12\/508,915 filed Jul. 24, 2009, 12\/643,471 filed Dec. 21, 2009, 12\/649,490 filed Dec. 30, 2009, 12\/722,828 filed Mar. 12, 2010, 12\/730,627 filed Mar. 24, 2010, 12\/731,631 filed Mar. 25, 2010, 12\/767,985 filed Apr. 27, 2010, 12\/768,058 filed Apr. 27, 2010, 12\/769,882 filed Apr. 29, 2010 and 12\/769,910 filed Apr. 29, 2010.","The present invention relates to flash-memory generally, and, in particular, to flash-memory file system architectures or the like.","Disk-drive (or hard-drive) memory systems are being replaced with solid-state memory systems utilizing flash-memory technology. Compared to hard-drive systems, flash-memory systems offer the reliability of semiconductor-based memory along with less energy consumption and smaller size. While significant in-roads have been made in replacing hard-drives in consumer-based products such as in laptop computers, few of the hard-drives in enterprise-level systems have been replaced with solid-state drives for a variety of reasons. The most notable reason is the incompatibility of the file system structure in existing flash drive systems with the file system structure in enterprise-based hard-drives. This incompatibility is forced by the flash-memory architecture and by de facto hard-disk file structure system conventions.","Generally, flash-memory architecture requires the erasure of large blocks of memory but subsections, referred to as pages, may be written to as needed. Within each page, there are usually 2bytes of memory (N is an integer and, at present, N ranges from 10 to 14 or more) for storing user data and an additional 100 to 500 or more bytes of memory for storing redundancy data (ECC) and file system information (e.g., metadata). The ECC is for detecting and correcting data stored in the corresponding user data in the page and the file system information is used for mapping virtual to physical addresses and vice-versa. As such, the additional bytes of memory are \u201chidden\u201d from the user and are not available for storing data.","For consumer applications, hard-drive systems have data sectors that are generally arranged with data sized in powers of two, e.g., 2or 2bytes per sector. This works well with flash memories having similarly structured user data memory pages. However, for enterprise-based systems, the sectors are not sized by powers of two but larger, e.g., 520 or 528 bytes instead of 512 bytes (2). At present, forcing these larger sectors into existing flash-memory architectures results in inefficient designs with many unused bytes in each page, at least partially negating the advantages of flash-memory systems over hard-drive systems.","In one embodiment, the present invention is a flash-memory system having a plurality of blocks and a plurality of pages in each block, at least one page having 2data memory locations and K spare memory locations. At least one of the pages is adapted to have 2user data sectors for storing user data, each data sector having 2+L memory locations therein, where M, N, L, and K are positive integers, N>M, M\u22671, and 1\u2266L<2.","In another embodiment, the present invention comprises a method of retaining user data in a memory system, the method comprising: providing a flash-memory system organized into a plurality of blocks and a plurality of pages in each block, at least one of the pages having 2data locations and K spare locations, the at least one page having 2user data sectors therein, each sector having 2+L locations therein, where M, N, L, and K are positive integers, N>M, M\u22671, 1\u2266L<2; and storing user data in at least one of the 2user data sectors.","Application Programming Interface (API): protocol or format used by an application to communicate with a different application.","Block: the number of memory locations that are erased at one time in a flash-memory.","ECC data: error correction code information. This is redundancy information relating to data written to the memory used to detect and, if possible, correct data read from the memory.","Inter-Processor Communications (IPC): communications protocol for communications between processors or systems.","Page: the minimum number of memory locations that are read or written at a time within a block.","Sector: the number of bytes that are grouped together within a page. There are multiple sectors in each page.","For purposes of this description and unless explicitly stated otherwise, each numerical value and range should be interpreted as being approximate as if the word \u201cabout\u201d or \u201capproximately\u201d preceded the value of the value or range. Further, signals and corresponding nodes, ports, inputs, or outputs may be referred to by the same name and are interchangeable.","Additionally, reference herein to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment can be included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment, nor are separate or alternative embodiments necessarily mutually exclusive of other embodiments. The same applies to the terms \u201cimplementation\u201d and \u201cexample.\u201d","Also for purposes of this description, the terms \u201ccouple,\u201d \u201ccoupling,\u201d \u201ccoupled,\u201d \u201cconnect,\u201d \u201cconnecting,\u201d or \u201cconnected,\u201d refer to any manner known in the art or later developed in which a signal is allowed to be transferred between two or more elements and the interposition of one or more additional elements is contemplated, although not required. Conversely, the terms \u201cdirectly coupled,\u201d \u201cdirectly connected,\u201d etc., imply the absence of such additional elements.","In , a simplified exemplary flash-memory storage system  is diagrammed. Here, the memory system  communicates with a utilization device , such as a computer system, via communication link . The communication link  may be one of a variety of standard communication interface standards and protocols, such as SAS\/SCSI (serial attached storage\/small computer system interface), SATA (serial advanced technology attachment), USB (universal serial bus), IEEE 802.11, IEEE 802.1, etc., or a custom interface, as desired. Inside of the storage system  is a flash controller  and flash-memory array  in communication with the controller  by a conventional communications path . As will be explained in more detail below, the flash controller  controls the writing and reading of data from the utilization device  and the memory . For purposes here, the flash controller  has one or more processors (not shown) therein along with the software\/firmware as needed for operation.","As is well known in the art, the flash-memory may be composed of a single chip or multiple chips. Operation of the flash-memory  (e.g., erase, write, and read operations) is well known; see, for example, \u201cNAND Flash 101: An Introduction to NAND Flash and How to Design it into Your Next Product\u201d by Micron Technology, Inc., TN-29-19, July, 2004, incorporated herein by reference in its entirety. Each memory chip is physically organized into blocks and typical memories have blocks of one megabyte or more. The blocks are in turn subdivided into pages, and each page further subdivided into sectors. Thus, and as will be discussed in more detail below, a file system utilizing a flash-memory writes data into a block on a page-by-page basis, each page having multiple sectors therein. Similarly, when reading data from the memory, a page at a time is read and all the sectors within the page are read. Data is organized into sectors to retain compatibility with hard-disk file systems.","Existing flash memories typically have a power of two pages per block (e.g., 2, 2, etc.); each page has power of two memory locations (e.g., 2memory locations, each location storing a byte) allocated for data storage and a spare set of memory locations available for reading and writing along with the other bytes in the page (e.g., 128, 218, 224 bytes for a 2byte page, and 376 or 520 bytes for a 2byte page). The spare set of memory locations has heretofore been reserved for storing ECC data segments and other metadata (used by the FTL process, described below) for the data stored in the memory locations of the page. In a typical consumer flash-memory system, such as in an MP3 player, each page has multiple sectors, each sector having 2memory locations (512 bytes). This results in the page storing eight sectors (2\/2=8), along with the spare memory locations containing the necessary ECC data and metadata related to the sectors in the page. However, hard-disk enterprise (non-consumer) systems have 520 or 528 bytes in each sector and attempting to store eight of these larger sectors in a page will exceed the number of memory locations allocated for data storage.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["106","106","106","102","202","204","104","102","106","206","208","100","208","100","208","210","208","108","210","212","212","108"]},"As is well understood in the art, the FTL  translates the logical-to-physical addresses (and vice-versa) of data stored in the memory  by using, for example, the metadata stored in the flash-memory page being accessed. Further, the FTL  provides \u201cgarbage collection\u201d (the identification of unused flash-memory pages for reuse), error recovery (adding redundancy information to data stored in the memory  and correcting erroneous data read from the memory), and wear leveling (spreading the erasing and writing of blocks of memory cells over the entire flash-memory to avoid repeatedly erasing and writing a subset of the memory blocks, thereby making the flash-memory last longer than would otherwise occur). Details on how an FTL operates and is organized are described in \u201cA Superblock-based Flash Translation Layer for NAND Flash-memory\u201d by Kang et al., presented at EMSOFT '06, 22-25 Oct. 2006 in Seoul, Korea, included herein by reference in its entirety.","In accordance with one embodiment of the invention,  illustrates a new organization of the pages in a memory file system permitting the efficient storing of enterprise-sized sectors in a page. Here, an exemplary page  in a flash-memory block (not shown) has therein two portions, the conventional data storage portion  having 2(N=12 in this example) memory locations, and the \u201cspare\u201d area  having several-hundred memory locations. In this example, 2(here M=3) conventional enterprise-sized sectors -(here 2+L bytes per sector, where 1\u2266L<2; for a 520 or 528 bytes sector in this example, L=8 (2) or 16 (2), respectively) are shown filling the portion  and excess  of sector (the part of sector not fitting within the boundary of portion ) being stored in the spare area . Further, ECC data segments  (shown here as one ECC data segment), related to the corresponding sectors -, are stored in the spare area , along with metadata  (if any). The metadata  may have its own ECC (not shown) to protect the metadata from corruption, or the ECC data  may also cover the metadata , as desired. The remainder  of the spare area  may be unused or allocated for additional metadata or ECC data as required. Alternatively, for example where N=13, L can be larger (e.g., 2, 2or 2) with a correspondingly larger sector size or more sectors to the page.","In accordance with another embodiment of the invention,  illustrates another new organization of the pages in a memory file system permitting the efficient storing of enterprise-sized sectors in a page. Because the page organization in  is similar to the page organization of , the elements in  that are similar to corresponding elements in  will be referred to using the nomenclature 4XX, where XX refers to the corresponding element in . Here, the eight conventional enterprise-sized sectors -are shown filling the portion  and excess  of sector (the part of sector not fitting within the boundary of portion ) being stored in the spare area . However, distinct from the page organization of , the ECC data segments -are related to and stored adjacent to the corresponding sectors -. The metadata  may remain in the spare area  (along with ECC data (not shown) used to protect the metadata ) and the remainder  of the spare area  may be unused or allocated for additional metadata or ECC data as required. Alternatively, the metadata  is divided up and placed into the ECC data segments -, and the metadata protected by the corresponding ECC data segment.","Advantageously, by using the spare area (, ) that was previously off-limits to user data, enterprise-sized sectors can be efficiently stored in flash memories with little wasted memory, thereby making flash-memory systems compatible with existing hard-drive storage systems in enterprise system applications.","It is understood that the FTL process  () is configured (programmed) to implement the new page structures of ; changes to the FTL process  are conventional given the teachings of the file system structure described above.","It is further understood that various changes in the details, materials, and arrangements of the parts and processes which have been described and illustrated in order to explain the nature of this invention may be made by those skilled in the art without departing from the scope of the invention as expressed in the following claims.","The use of figure numbers and\/or figure reference labels in the claims is intended to identify one or more possible embodiments of the claimed subject matter in order to facilitate the interpretation of the claims. Such use is not to be construed as necessarily limiting the scope of those claims to the embodiments shown in the corresponding figures.","Although the elements in the following method claims, if any, are recited in a particular sequence with corresponding labeling, unless the claim recitations otherwise imply a particular sequence for implementing some or all of those elements, those elements are not necessarily intended to be limited to being implemented in that particular sequence."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The aspects, features, and advantages of the present invention will become more fully apparent from the following detailed description, the appended claims, and the accompanying drawings in which like reference numerals identify similar or identical elements.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 4","FIGS. 1 and 2"]}]},"DETDESC":[{},{}]}
