---
title: Mobile communication device dynamic service application and dynamic service application scripting
abstract: A dynamic service application is stored and executed on a mobile or wireless communication device (e.g., a cellular telephone) to enable it to be programmed without specialized hardware, software, and other proprietary information. For example, dynamic service application programs or scripts may be entered directly by a user or may be received as a wireless or radiated digital message transmission. The dynamic service application executes the dynamic service application script, which is of a format to accommodate wireless or radiated transmission and storage on the device. The dynamic service application script may be written directly by a user on a computer or a mobile communication device or may be written with the aid of scripting “wizard” software that runs on a computer and guides the writing of script without the user having to work directly with the dynamic service application script. In addition to being received as radiated transmissions, dynamic service application scripts may also be sent as radiated transmissions from mobile communication devices to other devices or computers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07725103&OS=07725103&RS=07725103
owner: Microsoft Corporation
number: 07725103
owner_city: Redmond
owner_country: US
publication_date: 20041214
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to and is a divisional of U.S. patent application Ser. No. 09\/789,432, filed Feb. 20, 2001, which is incorporated herein by reference.","The present invention relates to mobile or wireless communication devices, including digital cellular telephones, and in particular to a short text message dynamic service application for such devices.","Programming small mobile or wireless communication devices, like digital cellular telephones phones, typically requires specialized hardware or software, or access to proprietary information like authentication keys, codes, etc. As a consequence, it is typically difficult or impossible for end-users to program such mobile devices. As is known in the art, digital cellular telephones of the GSM-type include removable Subscriber Identity Modules (SIMs), which are sometimes called smart cards or chip cards. To program a GSM cellular telephone, for example, it is necessary to use a smart card programming device and a smart card programming toolkit, and to access the account authentication key, the last of which is typically not accessible except by wireless service providers. The inability of users to program or modify mobile or wireless communication devices limits the versatility and usefulness of such devices.","Accordingly, the present invention includes a dynamic service application that is stored and executed on a mobile or wireless communication device to enable it to be programmed without specialized hardware, software, and other proprietary information. For example, the dynamic service application may be distributed with or stored on the wireless device in a conventional manner, but dynamic service application programs or scripts may be entered directly by a user or may be received as a wireless or radiated digital message transmission. In contrast, conventional programming of such a device requires a direct or conductive hardware coupling to the device.","The dynamic service application executes the dynamic service application script, which is of a format that accommodates wireless or radiated transmission and storage on the device. The dynamic service application script may be written directly by a user on a computer or a mobile communication device or may be written with the aid of scripting \u201cwizard\u201d software that runs on a computer and guides the writing of script without the user having to work directly with the dynamic service application script. In addition to being received as radiated transmissions, dynamic service application scripts may also be sent as radiated transmissions from mobile communication devices to other devices or computers.","In one exemplary implementation, a dynamic service application of the present invention may be stored on a SIM or smart card for use in an associated GSM cellular telephone. Dynamic service application scripts may be received at and sent from the GSM cellular telephone as short text message dynamic service scripts that conform to the short message service (SMS) format for GSM cellular telephones. In communicating with a conventional (e.g., desktop) computer, the scripts may be prepared and sent or received and run by software operating locally on the computer or at a site on the global computer network (e.g., a Web site).","The dynamic service application interprets and executes short text message dynamic service scripts that the cellular telephone receives, whenever the scripts are supported by a service present on the cellular telephone. The contents of the short text message dynamic service script could be either a new application, a part of the application (e.g., applications could be broken into segments), an application update, a command to execute, or data for a particular application. The user can also send messages from the phone to the web site. These messages can be distributed to other users as needed.","Additional objects and advantages of the present invention will be apparent from the detailed description of the preferred embodiment thereof, which proceeds with reference to the accompanying drawings.","The present invention relates to mobile or \u201cwireless\u201d communication devices capable of transmitting and\/or receiving radiated (i.e., wireless) fixed length text messages of up to a maximum fixed length. Such communication devices may be implemented with various functions and in numerous forms including digital cellular telephones, portable and handheld computers, personal digital assistants, etc. The invention is described in reference to a digital cellular telephone, but is similarly applicable to other mobile or wireless communication devices that transmit and\/or receive radiated fixed length text messages.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["10","10","10"]},"GSM cellular telephone  includes a removable Subscriber Identity Module (SIM) , which is sometimes called a smart card or chip card. For example, SIM  can be of a smart card format that has the well-known size of credit cards (e.g., standardized dimensions of 53.98 mm\u00d785.60 mm\u00d70.76 mm), or can be of a smaller format that is sometimes called a \u201cplug-in SIM\u201d. SIM  includes a medium  that supports a SIM electronic circuit  (e.g., one or more semiconductor integrated circuits or chips). Medium  typically includes multiple laminated synthetic layers, with one or more internal layers being between outer layers. SIM electronic circuit  is incorporated into or on at least one of the internal layers.","SIM electronic circuit  includes a central processing unit or CPU  (e.g., a microprocessor or microcontroller) in conjunction with a memory system , a data transmit interface , and a data receive interface , all of which are interconnected by a bus structure . Similarly, GSM cellular telephone  includes a central processing unit or CPU  (e.g., a microprocessor or microcontroller) in conjunction with a memory system , a data transmit interface , and a data receive interface , all of which are interconnected by a bus structure . In addition, GSM cellular telephone  includes a system display  and a user input device or keypad , as well as a power supply (e.g., a battery), telephonic audio input and output elements, and radio frequency transmitting and receiving elements that are not shown.","While SIM electronic circuit  includes the basic elements of a simple computer, neither SIM  nor SIM electronic circuit  is capable of functioning as a stand-alone computer. Neither SIM  nor SIM electronic circuit  includes a power source nor user interface components by which a user could interact with SIM  or SIM electronic circuit . The computer functionality of SIM  can be accessed only by connecting it to another computer, such as GSM cellular telephone  or a SIM reader that is connected to a personal computer, as is known in the art. When connected to another computer, such as GSM cellular telephone , SIM  is powered and communicates through its interfaces  and  to receive data from and provide data to the other computer.","As is common, GSM cellular telephone  supports a fixed length text message service by which radiated (i.e., wireless) fixed length text messages of up to a maximum fixed length may be transmitted or received by GSM cellular telephone . As an example, the fixed length text message service could include or conform to the short message service (SMS) standard that is part of the GSM Phase 1 standard. The SMS standard allows transmission of radiated fixed length text messages of up to 160 characters in length. Such a fixed length text message service may be distinguished from conventional network connections or services in which files of generally arbitrary size may be transmitted. While referring to transmission of SMS messages, the following description may be similarly applicable to other standards or formats for radiated fixed length text messages.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2","b":["50","54","56","10"]},"For purposes of simplicity, this illustration is directed to communication in only direction: from transmitting short message terminal  to receiving short message terminal . It will be appreciated that each of short message terminals  and  would typically be capable of bi-directional communication so that the following description would be similarly applicable to communication from terminal  to any or all of terminals .","Transmitting short message terminal  may be any text-capable digital device, including a computer (e.g., desktop, portable, handheld, server, etc.), a personal digital assistant, a digital telephone, a digital cellular telephone, etc. An SMS message created at transmitting short message terminal  is transmitted over a communication channel  to a short message service center or message center  that functions as a store and forward center for transmitting SMS messages between short message terminals. For example, message center  receives a SMS message from transmitting short message terminal  and stores the SMS message until it can be forwarded to receiving short message terminal . Message center  then transmits the SMS message to receiving short message terminal  over a communication channel .","In view of the variety of devices that can function as message terminals  and , communication channels  and  may be or include any public or private computer network (e.g., the global computer network called the Internet) or any telephone network (e.g., any PSTN or any cellular or other wireless communication network). With receiving short message terminal being GSM cellular telephone  in the illustrated example, communication channel  will include at least a GSM cellular telephone network.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3","b":["100","100","50","12","54","56"]},"Process block  indicates that a short text message dynamic service script is formed. In one implementation, the short text message dynamic service script may conform to the SMS message format associated with GSM cellular telephones.","Process block  indicates that the short text message dynamic service script is transmitted to a receiving short message terminal. For example, the short text message dynamic service script could be transmitted via a message center  to GSM cellular telephone .","Process block  indicates that the short text message dynamic service script is interpreted and executed by the dynamic service application. Interpretation of the short text message dynamic service script by the dynamic service application includes correlating operations indicated by the short text message dynamic service script with the corresponding application programming interfaces (APIs) and any other resources available from SIM . For example, one option is to save the script and add the application name to the cellular telephone.","Process block  indicates that the short text message dynamic service script is received and stored, such as on a SIM  of a GSM cellular telephone .","Process block  indicates that the short text message dynamic service script is executed, such as on a SIM  of a GSM cellular telephone .","The short text message dynamic service scripts functions as short text message applications and can be formed in a variety of ways. As one example, a user could write a short text message application directly in accordance with a scripting notation, as described below in greater detail. As another example, a user may be guided through a script formation process or \u201cwizard\u201d that is accessed from a personal computer. The script formation process or \u201cwizard\u201d may be run locally on the personal computer or may be accessed from a network site (e.g., a Web page) on the global computer network.","Set forth below are exemplary steps through which scripting wizard software could direct a user creating a short text message dynamic service script or application. The exemplary steps could be offered or presented to the user in different sequences according to choices or selections made by the user. Once each branch or segment of the application is completed, the scripting wizard software codes and encrypts the application so that it can be sent to the receiving mobile communication device (e.g., GSM cellular telephone ) as one or more short text messages (e.g., SMS messages). Once it receives the one or more short text messages, the dynamic service application on the mobile communication device interprets it or them and executes the steps as specified in the script. As an example, one option is to save the script and add the application name to the mobile communication device (e.g., cellular telephone).","User Selects Application Options:",{"@attributes":{"id":"p-0031","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["1. Specify application name and various application properties\n        \n        ","2. Execute on the cell phone only once\n        \n        ","3. Execute on the cell phone more than once\n        \n        ","1. Show selection list (user is required to select item(s) from a list)\n        \n        ","2. Show \u201cedit box\u201d (user is required to enter text)\n        \n        ","3. Print text\n        \n        ","4. Play tone\n        \n        ","5. Send message\/command to specified destination(s)\n        \n        ","6. File operation\n        \n        "]}}}},"Selected aspects of a first implementation of a format of a short text message dynamic service script are described below with reference to an exemplary script. It will be appreciated that this exemplary script is provided merely to illustrate the various script elements and does not include all potential elements in the script format or the full range of potential functionality that can be provided by the script format.","In this implementation, a typical script includes a file or variable with multiple successive statements that each may include one or more script elements. The successive statements of a script may form one or more files that are each no larger than the basic memory buffer size for a receiving mobile or \u201cwireless\u201d communication device (e.g., 128 bytes for a SIM), thereby allowing a complete script file to be completely contained in the memory buffer. In the illustrated exemplary script, different statements are initiated by the terms Start, Efopen, Cont1, Iter, Cont2, which may be referred to as the statement names.",{"@attributes":{"id":"p-0034","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Start:"]},{"entry":[{},"!gEFopen"]},{"entry":[{},"oF1\u2033\/Pgm\/SV.m\u2033"]},{"entry":[{},"gCont1"]},{"entry":[{},"EFopen:"]},{"entry":[{},"T1 = \u2033Error opening file\u2033"]},{"entry":[{},"T1 < T0 < \u2033 (\u2033<hIE<\u2033)\u2033"]},{"entry":[{},"pT1"]},{"entry":[{},"q"]},{"entry":[{},"Cont1:"]},{"entry":[{},"T2 = \u2033T1 = s\u2033"]},{"entry":[{},"!gCont2"]},{"entry":[{},"I1 = 0"]},{"entry":[{},"Iter:"]},{"entry":[{},"T2 < \u2033,\u2033 < h22 < F1 (I1, 11) < h22"]},{"entry":[{},"I1 + 16"]},{"entry":[{},"gIter"]},{"entry":[{},"Cont2:"]},{"entry":[{},"T2 < \u2033q;\u2033"]},{"entry":[{},"!q"]},{"entry":[{},"cF1"]},{"entry":[{},"xT2"]},{"entry":[{},"tT1"]},{"entry":[{},"T2 = \u2033\/Pgm\/\u2033"]},{"entry":[{},"T2 < T1"]},{"entry":[{},"T2 < \u2033.a\u2033"]},{"entry":[{},"oF1T2"]},{"entry":[{},"xF1"]},{"entry":[{},"q"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this implementation, script elements are generally represented by only one or two alphanumeric characters to minimize the script size, and operators are indicated by lower case letters. For example, the Start statement begins with an error handling indicator \u201c!\u201d that is coupled with a get element \u201cg\u201d and a statement name \u201cEFopen.\u201d This script element combination is interpreted and executed by the dynamic service application as follows: if an error arises (!), get (g) the indicated statement (EFopen). The get element g may have as its argument any statement name in a file, a file name, a memory location pointer, etc. Accordingly, the get element g functions as a versatile program control device for directing script execution toward a variety of elements.","The EFopen statement sets a text variable (T1) to a text string \u201cError opening file,\u201d and the element T1<T0<\u201c(\u201c<hIE<\u201d)\u201d functions to append a text variable T0 and the text \u201c(32)\u201d (where the value of 32 is an example value of the file handle, hIE) to text variable T1, with the text variable T0 being a temporary buffer having the value of _the file name (last statement's text). Element pT1 functions to print (p) (i.e., display) the error indication specified for variable T1 (i.e., text string \u201cError opening file.\u201d), and the quit element (q) ends execution of the script.","In the absence of an error indication by the executing mobile device, the Start statement proceeds to the script element oF1\u201cIPgm\/SV.m\u201d, which opens (o) as a file variable (F1) the file SV.m stored on the device in subdirectory Pgm. The .m extension may indicate that the file SV.m is a listing or menu of available script or application files available in the Pgm subdirectory. The script element gCont1 then gets (g) statement Cont1. The file variable (F1) represents a file-type variable that can be indexed over a range of values to support file operations (e.g., open, o). This script format implementation also includes, for example, an indexed text variable (e.g., T1) and an indexed numeric or numeric variable (e.g., I1) to support text and integer operations, respectively.","In the Cont1 statement, script element T2=\u201cT1=s\u201d sets a text variable index T2 to the indicated text string (T1=s). Script element !gCont2 directs the script to get or goto (g) statement Cont2 in case of an error indication. Script element I1=0 sets a value of zero to the integer variable I1.","In the absence of an error indication in it, statement Cont1 proceeds to statement Iter, which functions as an iteration operation. Script element T2<\u201c,\u201d<h22<F1(I1, 11)<h22 appends to text variable T2 a comma, a quote (by operation of element h22), 11 characters at iteration variable location I1 in file F1, and another quote (by operation of element h22). Element I1+16 is an integer operation adding variable I1 and the number 16. Element glter repeats operation of statement Iter for another iteration. For example, each address location in a file could include 16 character positions, so this script element would function to obtain the first 11 characters at each address location in file F1.","In the Cont2 statement, element T2<\u201cq;\u201d appends a quit operator to text variable T2. As a result, of the operation of statements Iter and Cont2, variable T2 includes the following elements:\n\n","The exemplary script functions to display a list of text message applications available on a mobile communication device and to allow a user to select and execute one of the applications. It will be appreciated that such an application would typically require significantly greater memory and syntax resources if it were written in a conventional scripting language.","Selected aspects of a second implementation of a short text message dynamic service script format are described below. This second implementation includes more programming specificity than the first, but disadvantageously increases the memory requirements of the dynamic service application.\n\n","In accordance with the practices of persons skilled in the art of computer programming, the present invention is described above with reference to acts and symbolic representations of operations that are performed by various computer systems, including mobile communication devices and \u201csmart cards.\u201d Such acts and operations are sometimes referred to as being computer-executed and may be associated with the operating system or the application program as appropriate. It will be appreciated that the acts and symbolically represented operations include the manipulation by a CPU of electrical signals representing data bits, which causes a resulting transformation or reduction of the electrical signal representation, and the maintenance of data bits at memory locations in a memory system to thereby reconfigure or otherwise alter the computer system operation, as well as other processing of signals. The memory locations where data bits are maintained are physical locations that have particular electrical, magnetic, or optical properties corresponding to the data bits.","Having described and illustrated the principles of our invention with reference to an illustrated embodiment, it will be recognized that the illustrated embodiment can be modified in arrangement and detail without departing from such principles. It should be understood that the programs, processes, or methods described herein are not related or limited to any particular type of computer apparatus, unless indicated otherwise. Various types of general purpose or specialized computer apparatus may be used with or perform operations in accordance with the teachings described herein. Elements of the illustrated embodiment shown in software may be implemented in hardware and vice versa.","In view of the many possible embodiments to which the principles of our invention may be applied, it should be recognized that the detailed embodiments are illustrative only and should not be taken as limiting the scope of our invention. Rather, we claim as our invention all such embodiments as may come within the scope and spirit of the following claims and equivalents thereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
