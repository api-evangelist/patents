---
title: Building controller with operating system interaction through an integrated display
abstract: A building controller for controlling one or more building control components in a building, wherein the building controller is configured for bidirectional communication via a communication network between the building controller and the one or more building control components. The building controller can include a housing, a control unit, and a display unit. The control unit can execute an operating system and a building control application program having a control algorithm. The display unit may be configured to display at least one screen that facilitates user monitoring of diagnostic messages of the operating system of the control unit. Alternatively, or in addition, the display unit can be configured to display a screen to facilitate user entry of operating system parameters and/or a screen to facilitate entry of operating system commands for execution on by the control unit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09026253&OS=09026253&RS=09026253
owner: Honeywell International Inc.
number: 09026253
owner_city: Morristown
owner_country: US
publication_date: 20111122
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DESCRIPTION"],"p":["The disclosure is directed to building controllers, and more particularly, to a building controller that has an operating system that supports execution of one or more building control application programs.","Building control systems often include software and hardware that can be used to control one or more HVAC, lighting and\/or refrigeration units, and\/or perform energy management functions within a single building or for multi-site facilities. In some cases, the building control hardware can include stand-alone embedded controllers running building control application programs that are supported by an embedded operating system. In many cases, software packages running on a remote personal computer allow a technician to configure the building control application program for one or more sites, such as setting temperature set points or modifying alarm settings. Some building controllers include a graphical user interface to facilitate similar user access to the building application program settings (e.g., temperature set points and alarm settings).","The disclosure is directed to a building controller, and more particularly, to a building controller that has an operating system that supports execution of one or more building control application programs.","In some instances, a building controller for controlling one or more building control components of a building is provided, wherein the building controller is configured for bidirectional communication via a communication network or the like between the building controller and the one or more building control components. In one illustrative example, the building controller may include a housing and a control unit situated in the housing. The control unit may be configured to execute an operating system having one or more operating system parameters. The control unit may also execute a building control application program having a control algorithm and one or more building control application parameters, wherein the operating system may support execution of the building control application program. The control algorithm of the building control application program can be configured to control the one or more building control components. In some cases, the building controller can include a display unit that can be secured relative to the housing and be visible from outside of the housing. The display unit can be configured to communicate with the control unit, and to display at least one screen that facilitates user monitoring of diagnostic messages of the operating system of the control unit. In addition, it is contemplated that the display unit can display at least one screen that facilitates user monitoring of diagnostic messages of the building control application program, if desired.","In some instances, the control unit can be configured to communicate with the display unit via a serial port steering circuit. The serial port steering circuit may be configured to provide messages from the control unit to the display unit, and from the control unit to a serial port accessible from outside of the housing.","In some cases, the building controller can be configured to display at least one screen that facilitates entry of one or more operating system commands that can then be submitted for execution on the control unit. An example of a building controller can include a display unit that can be configured to display at least one screen that facilitates user manipulation of one or more operating system parameters. Examples of such operating system parameters can include, but are not limited to, parameters for controlling communication between the control unit and one or more remotely located devices, parameters facilitating troubleshooting of how the building control application runs within the embedded operating system, and\/or any other suitable operating system parameters.","The preceding summary is provided to facilitate an understanding of some of the innovative features unique to the present disclosure and is not intended to be a full description. A full appreciation of the disclosure can be gained by taking the entire specification, claims, drawings, and abstract as a whole.","While the disclosure is amenable to various modifications and alternative forms, specifics thereof have been shown by way of example in the drawings and will be described in detail. It should be understood, however, that the intention is not to limit aspects of the disclosure to the particular embodiments described. On the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the disclosure.","The following description should be read with reference to the drawings in which similar elements in different drawings are numbered the same. The description and the drawings, which are not necessarily to scale, depict several illustrative embodiments that are meant to be illustrative of the claimed disclosure, and are not intended to limit the scope of the disclosure.","FIG. is a schematic view of a portion of an illustrative building control system  configured to control one or more building control components  of one or more buildings. In the example shown, the building control system  includes a building controller  configured to control one or more building control components  within a building (not explicitly shown). The building controller  can be communicatively coupled to the one or more building control components  using a communication link , such as via a network interface port  or any other suitable connection. The illustrative building controller  can include a processor , a memory  and an integrated display unit . The processor  can be configured to execute a board support package (BSP) , an operating system , and a building control application program . In some cases, the display unit  can include a viewing area , wherein the viewing area can be configured to display one or more screens . In some cases, the display unit  may include its own processor , but this is not required.","In some cases, the building controller  can include one or more communication buses . The processor  can be configured to communicate to at least one of the display unit , a serial communication port , and\/or an option card interface  using a serial port steering circuit . In some cases, a computing device , such as a personal computer (PC) or laptop, can communicate with the building controller  via a communication link , if desired.","An example building control system  can include supervisory software such as the Novar Opus Supervisor application software, and one or more building controllers , such as one or more Novar XCM building controllers. In some cases, a user of the Novar Opus Supervisor can manage and communicate with tens, hundreds, thousands or more of remote site controllers from a centralized location, sometimes via a communication link  such as an intranet or the Internet. The Novar XCM in turn may manage and\/or communicate with one, tens, hundreds or more building control components  within the site, which can perform real time control of building equipment such as HVAC units, lighting panels and\/or refrigeration circuits.","In some instances, the building controller  can operate using shared hardware, such as an industrial computer (PC), but this is not required. For example, a PC-based building controller can include a PC card-based controller (e.g., ISA bus plug-in card, or PC- bus plug-in card) or a software-based controller running within a PC-based operating system (OS) (e.g. Microsoft Windows, Linux), or a real-time OS (RTOS) extension of the PC-based OS (e.g., RTX or RTAI.)","In some cases, the building controller  can be configured to control one or more building control components  at one or more geographical locations (e.g., within a single building, within multiple buildings at a single site, or within multiple buildings at two or more building sites.) Examples of the building control components  can include one or more HVAC controllers, lighting controllers, refrigeration controllers, or other similar devices including those to perform energy management functions. In another example, the building control system  can include devices configured to control or coordinate other facility management functionality, such as managing security systems and\/or fire alarm systems. In some cases, the building controller  can be configured to communicate with the building control components  using a communication link  and a networking port . In some instances, the communication link  can include one or more standardized communication protocols (e.g., Ethernet, Ethernet\/IP, BACnet, Modbus, LonWorks, etc.), or proprietary communication protocols, as desired.","In some cases, the building controller  can be configured as a dedicated building control device, such as an embedded controller. In an example, the building controller  can include a control unit, such as a processor  based on an embedded controller platform. Examples of embedded controller platforms can include Niagara Processor Module (NPM) based systems offered by Tridium Inc., (e.g., Tridium Java Application Control Engine (JACE) engine product family or other products based on the NPM). In some cases, building controller  can include an NPM based device (e.g., the Novar XCM20R, etc.). The building controller  can include a common housing, a processor circuit, (e.g., an NPM module), a display unit (e.g., an XCM.LCD embedded display platform), and a baseboard that can include, among other things, a power supply, input and output (I\/O) module interfaces, programmable logic devices, and communications circuitry, as desired.","In one example, the processor  of the building controller  can be configured to operate using instructions stored in a machine-readable format on a memory, such as the memory . Examples of such instructions can include the BSP , the OS  and building control application program . The BSP , the OS  and the building control application program  can include associated parameters or data files associated to support the operation of the BSP , the OS  and the building control application program . The memory  can include any desired type of volatile and\/or non-volatile memory such as, for example, static random access memory (SRAM), dynamic random access memory (DRAM), flash memory, read-only memory (ROM), and the like. In another example, the memory  can include any other medium which can be used to carry or store desired instructions in the form of machine-executable instructions or data structures that can be accessed by a machine with a processor (e.g., a CD-ROM, a DVD, a USB memory device, hard disk, etc.).","In some instances, the processor  can be configured to communicate with the display unit  via a communication bus (e.g., a serial bus), sometimes through serial port steering circuit . In one example, the building controller  can include two or more serial communication buses, wherein the first communication bus can be configured to provide a mechanism for transferring information between the processor  and the display unit , such as to facilitate the operation of the building control application program  (e.g., building control application parameters, alarms, i\/o data, etc.). For example, the processor  may be communicatively coupled to the display unit  via a communication bus using a serial communication protocol (e.g., RS-232, RS-485, etc.) to facilitate user manipulation and viewing of building control application data such as manipulating alarm settings, viewing current and historical alarm information and\/or manipulating temperature, humidity and\/or other set points. A second communication bus (e.g., communication bus ) may be configured to facilitate user interaction with the OS  or the BSP , such as to manipulate operating system parameter values, enter operating system commands, monitor BSP diagnostic information, or view operating system diagnostics. In some cases, a common communications bus or other communication path may be used, if desired.","In some instances, the processor  may communicate with two or more interfaces over the communication bus , such as by using the serial port steering circuit . The serial port steering circuit  can be configured to route data between the processor  and the external serial port interface , the option card interface  and\/or the display unit . For example, the serial port steering circuit  can route messages from the processor  to a specified interface (e.g., the serial port interface , the option card interface  or the display unit ), or broadcast messages to two or more of the connected interfaces, if desired. Further, and in some instances, the serial port steering circuit  can be used to route messages received from each of the serial port interface , the option card interface , and\/or the display unit  to the processor .","In an example, the option card interface  can be used to facilitate communication between the processor  and an option card that is optionally included within the building controller . The option card interface  can be configured to support I\/O cards or additional communication interfaces that can be used to gather additional information useful for the operation of the building control application program  or provide information to an external user interface. Such option cards can include, for example, a modem, a wireless Ethernet card, a discrete I\/O card, a Fieldbus card, or any other suitable option card, as desired.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 2","b":["110","130","110","137","135","137","133","137","237","135","235","237","235","140","137","135","133","130","150","170","180","160","190","110","240","160","170","180"]},"In some cases, the BSP  can include instructions and configuration files (e.g., memory size information, OS image information, map files, etc.) stored in the memory , such that the BSP  can initialize the processor  and other associated hardware (e.g., communication buses, the interrupt controller, the system clock, etc.). The BSP  can include a bootloader that can be executed at power on, such that the bootloader initializes the processor  and loads the OS instructions to be run on the processor . In some cases, the bootloader can be customized for the embedded system hardware used in the building controller . An example of the bootloader can be implemented such that the initialization process is completed as a series of discrete, identifiable steps. Each step can produce information about the initialization process (e.g., power on, bootloader starts, initialize minimum hardware, load OS kernel into memory, start OS, OS initialization of system, begin user application such as the building control application, etc.), and can be used to indicate the bootloader progress for debugging purposes.","Embedded systems, such as some building controllers , can be designed to use a Real-Time Operating Systems (RTOS). In one example, an RTOS (e.g., QNX) can be based on an OS standard such as POSIX, such that a standard application programming interface (API) can be used to design a scalable system. In some cases, an API can include, for example, functions (e.g., commands) and data structures, that can be used for process management, device I\/O interfacing, file system management, inter-process communication, etc. In an example, the API can be designed using functions similar to a common programming language (e.g., ANSI C). The API can include functions or data structures that allow a user to customize the OS for operation with a specific hardware platform. Other features that can be included in the RTOS include real-time extensions (e.g., interrupt handling mechanisms, semaphores, process scheduling mechanisms, signal access mechanisms, timer mechanisms, etc.) and thread management functionality (e.g., creating threads, starting threads, stopping threads, etc.).","In some cases, the OS  can be an RTOS for an embedded system such as QNX, VxWorks, pSOS, VRTX, Nucleus, MC\/OSII, and OSE. Such RTOSs typically can support preempted multi-tasking (e.g., prioritized task structure) for stopping execution of a certain task to execute another task having a higher priority. An RTOS can facilitate the processor  in responding in \u201creal-time\u201d (e.g., within microseconds) to local environmental or remote network generated events. An RTOS design can implement time-sharing scheduling with priority driven pre-emptive scheduling for the operation of one or more threads. In order for the RTOSs to support the preempted multi-tasking, each of the tasks typically must have an assigned priority. Real-time in an RTOS means that an execution end time of a certain task must be in an expected schedule, therefore higher priorities can be specified for these tasks relative to the priority of other tasks. For example, a task, such as a watchdog timer, must complete within a specified duration so its priority is set higher than other tasks (e.g. a serial communication task). If priorities of tasks are inverted, execution end times of the tasks cannot be in an expected schedule, resulting in ruining the real-time characteristic in an RTOS. The OS information  can include data (e.g., flags, semaphores, register data, etc.) that can provide information about the operation of one or more threads","The OS  can be structured having a kernel that provides a specified level of functionality to support one or more processes (e.g., services) and\/or device drivers. The processes and devices drivers can be designed to support running the building control application program  on the hardware of the building controller . For example, the kernel can be designed to support a file system management process, a user interface service (e.g., a service to support a graphical user interface), a communication service (e.g., a Ethernet communication service, a serial communication service, etc.), a scheduling service, a synchronization service, a message handling service, device drivers (e.g., serial port driver, an Ethernet port driver, a memory controller, etc.), and the like.","In one example, the OS  can include a service that facilitates user manipulation of at least part of the OS information  via a communication interface (e.g., a network port, serial port, etc.). For example, the building controller , such as a Tridium JACE product, can include a \u201cserial shell\u201d interface that can allow a user to manipulate at least some of the OS information  via the serial port interface . The serial shell interface can be used, for example, to reboot the controller or to manipulate communication parameters such as FTP\/IP parameters (e.g., Hostname, Domain, IP address, Gateway address, subnet mask, etc.), Telnet parameters, file sharing parameters, licensing information, system time information, and\/or any other suitable information. In some instances, the user may use a terminal emulation program on a PC  (e.g., HyperTerminal) using the communication link  (e.g., RS-232 or Telnet) connected to the serial port interface ","In some instances, the processor  can be configured to share the communication bus  between two or more interfaces (e.g., the serial port interface  and the option card interface ) using a jumper circuit . For example, the processor  may be configured to route messages to the serial port interface  when a jumper is installed in the jumper circuit , or to the option card interface  when the jumper is absent. Such a serial interface can be problematic during commissioning or installation. For example, manual intervention may be required to configure jumper settings on the controller and to connect an external computer via a serial connection. In some installations, using the serial interface to view or modify OS information may be impractical due to the required manual jumper settings, external laptop, serial cable and terminal emulation program. Further, due to the separate physical interface, much of the OS information, including the diagnostic information and commissioning information, may not be available to a user via the building control application program . However, such problems can be overcome by, for example, using the serial port steering circuit  with the communication bus  between the display unit  for manipulating the OS information  (e.g., parameters or diagnostics).","In one example, the serial port steering circuit  may be implemented within a programmable logic circuit (e.g., a PLD, a CPLD, an FPGA, a PLA, etc.) or with discrete elements (e.g., resistors, capacitors, transistors). In some cases, the serial port steering circuit  can be used to \u201csteer\u201d communications between two or more interfaces that use a common communication bus . For example, messages (e.g., serial shell communications) can be transmitted by the serial port steering circuit  to one or both of the serial port interface  and the display unit . The serial port steering circuit  can be configured such that the serial shell messages are transmitted to the display unit  of the building controller , sometimes whether or not a jumper is installed in the jumper circuit . Messages received by serial port steering circuit  from either the display unit  or the serial port interface  can be steered to the processor . In some cases, if messages are received from both the display unit  and the serial port interface , the serial port steering circuit  can include logic to determine precedence.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIGS. 3-10","FIG. 1"],"b":["155","150","300","155","150"]},"Turning now to , shows a screen  that displays an illustrative menu of a building controller that facilitates user access of administrator functionality of the building controller . Screen  can include a name field  and one or more navigation buttons to allow a user to view different screens, such as a home button , a previous screen button A, a next screen button B, and a back button . The illustrative screen  can be configured to allow a user to select from a list of sub-screens, such as by using one or more screen selection buttons, such as the Administrator Options button . A user can navigate through the list of sub-screens such as by using navigation buttons A, B. Upon selecting a desired sub-screen from the list of sub-screen options, the building controller displays the selected sub screen, such as screen  of . After the selection of a sub-screen, access to the sub-screen can be restricted such as by using a prompt for user verification (e.g., user name, password, etc.). When provided, such user verification can be done using another screen or pop-up window, as desired.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 4","b":["400","400","410","420","430","400","440","110"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 5","FIG. 4"],"b":["500","500","410","500"]},"The Parameter Settings screen  can display buttons configured to allow a user to manipulate the OS information  by functionality or as a parameter list. For example, the buttons can be arranged as a list (e.g., a TCP\/IP button , a System Time button , a Ping Host button , an Update Platform Account button , or an Enable File Sharing button ) that can be navigated using the navigation buttons A, B. The user can select a button on the screen  to prompt the display unit  to display the selected sub-screen, such as the TCP\/IP screen  of . In one example, the selected sub-screen can allow a user to modify a single parameter or a list of parameters. In one example, some parameter settings can be used by the OS immediately (e.g., licensing information), while other parameter settings can be used by the OS after rebooting the control (e.g., TCP\/IP parameters). In some cases, the display unit  can be configured to prompt a user to reboot the control when applicable, such as by using a screen or pop-up window, if desired.","Referring specifically to , the illustrative menu may be used to facilitate user manipulation of one or more operating system parameters. For example, the display unit  can display TCP\/IP screen , which may allow a user to manipulate the TCP\/IP communication parameters, including a host name , a DHCP client, a domain name , a Gateway address , an IP address , a subnet mask , a broadcast address, a default router, and\/or any other suitable TCP\/IP communication parameters. The parameters can be displayed as a list, such as in screen , that is navigable using the buttons A, B. The parameter list can include buttons (e.g., the buttons -) that prompt the display unit  to display either a subsequent screen or a pop-up window to allow the user to modify the selected parameter. Alternatively, the parameter list can include a list of editable fields that allow a user to manipulate the parameter values directly, or a combination of the editable fields and\/or buttons as desired.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7","b":["700","110","700","135","133","740","750"]},"In some cases, the diagnostics screen  can include a selection button to allow a user to access debug information, which as can be inserted into the firmware before compiling the firmware, or by using the a programming interface such as that shown in . In one example, the debugging screen can be configured to display at least some information available to a programmer by using firmware debugging software, such as by displaying selected register values or debug messages within the firmware code. In an example, the diagnostic screen can include an option for displaying diagnostic log information stored over a duration of time, such as the boot monitor information or at least a portion of the runtime diagnostics information.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 8","FIG. 7","FIG. 1"],"b":["800","135","750","810","820","130","810","135"]},"Memory usage information  can be used to provide information about the operational efficiency of the OS  and the building control application program . Memory in embedded systems is often fixed and not expandable, so efficient use of the memory  is desirable. In some cases, the runtime diagnostics screen  can include memory usage information , such as minimum usage, maximum usage, and current usage, as a percentage of the total available memory resources (e.g. memory ).",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 9","FIG. 4"],"b":["900","900","430","900","910","920","930","940","910","150","130","135","130"]},"In some cases, the user can select the save button  to save the entered code to the memory . In some instances, the save button  may be used to open a screen that allows a user to save the entered code as a file, which can be store within the file system in memory . The transfer button can be used to transfer code between the building controller  and another device. For example, the transfer button can be used to upload a file from a device, such as a USB drive, to the building controller , or to transfer a file stored on the building controller  to, for example, the USB drive. In some cases, the transfer button  can be used to open a screen to transfer a file over a network, such as by using FTP. For example, in some cases, a user can transfer a file containing commands, or code, to be executed on the processor , such as code developed on another building controller , or a patch, such as to update the building controller firmware.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 10","FIG. 9"],"b":["1000","1000","940","150","110","130","1010","1020","1030"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 11","b":["1100","1110","130","235","135","133","137"]},"At , the display unit  communicatively coupled to the processor  may display at least one screen  on the viewing area  that is configured to facilitate the entry of at least one or more operating system commands to be executed by the processor . In one example, the display unit  may display at least one screen to allow a user to manipulate one or more operating system parameters (e.g., communication parameters, troubleshooting parameters, etc.).","At , the display unit  may provide the operating system command entered by the user via enter code option  to the processor  for execution. In one example, the display unit  can display at least one screen configured to allow a user to monitor diagnostic messages about the operation of the OS . In some cases, an OS system parameter manipulated by a user via a first screen  on the viewing area  can be used with an operating system command entered using a second screen , where a third screen  can display a diagnostic message based on the execution of the OS command and the OS parameter data.","Those skilled in the art will recognize that aspects of the present disclosure may be manifested in a variety of forms other than the specific examples (e.g., embodiments) described and contemplated herein. Accordingly, departure in form and detail may be made without departing from the scope and spirit of the present disclosure as described in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The disclosure may be more completely understood in consideration of the following description of various illustrative embodiments in connection with the accompanying drawings, in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
