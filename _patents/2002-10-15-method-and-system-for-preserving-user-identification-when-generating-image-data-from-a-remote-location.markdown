---
title: Method and system for preserving user identification when generating image data from a remote location
abstract: A method for a user using a thick client to send a print job to a server wherein the user name is preserved and can be determined by the server. When the image file is processed, the processing comprising appending a user identification to the file. A destination driver is invoked, which creates raw print data from the image file for each selected driver. The raw print data is sent to the server, wherein the server parses the raw data and determines the user identification. The raw print data can then be sent to the user's inbox on the server. In a preferred embodiment, the user identification comprises the sequence of ASCII 60 (or 3C hex), the username, and ASCII 62 (or 3E hex), or “<username>”. Preferably, the user identification is appended to the document name.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07565400&OS=07565400&RS=07565400
owner: Toshiba Tec Kabushiki Kaisha
number: 07565400
owner_city: 
owner_country: JP
publication_date: 20021015
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF INVENTION"],"p":["This application is related to U.S. application Ser. No. 10\/098,775 filed Mar. 14, 2002 and U.S. application Ser. No. 10\/112,104 filed Mar. 29, 2002.","The present invention is related to document management systems for multifunction peripherals in general and more particularly to a method for printing from a thick client to a document management module.","A Document Distribution Module (DMM) provides users the ability to send documents to multiple destinations, including but not limited to faxes, e-mail, iSP DMM, Web Post, and print. Typically, the distribution is accomplished by two types of clients, a thick client (similar to a print driver) on Microsoft Windows platforms, and a thin client, browser based client, which may be based on any platform. This distribution normally a network-based document service appliance for image Service Platform appliance (or iSP) that is a document distribution solution with document management capabilities and device management support. The document management component enables users to quickly store and retrieve documents from a central repository. Device management is used to discover devices, monitor device availability and provide device status to the user and Administrator.","A problem with this type of architecture is that the user's identity is often lost when performing print jobs from the thick client. This is because while application is logged in the context as user, the print processor in creating the raw print data is logged in the context as the special Windows user \u201cSYSTEM.\u201d Because the print processor is loaded by Windows in the context of SYSTEM, the DMM or native driver used to send output from the client machine to the server machine, normally via a remote procedural call (\u201cRPC call\u201d) connects to the server as the user SYSTEM. Therefore, when the iSP server receives the job from the remote, (client) spooler, the actual user name is lost and the iSP server is unable to place documents in the user's inbox. Therefore, a need exists for a method for preserving user identification when sending print data from a remote (client) computer to an iSP server.","Additional objects, advantages and novel features of the invention will be set forth in part in the description which follows, and in part will become apparent to those skilled in the art upon examination of the following or may be learned by practice of the invention. The objects and advantages of the invention may be realized and attained by means of instrumentalities and combinations particularly pointed out in the appended claims.","In view of the aforementioned needs, the invention contemplates a method for a user using a thick client to send a print job to a server wherein the user name is preserved and can be determined by the server. The method comprises invoking an application that runs in the user's context and initiating the print job. After initiating the print job, a distribution driver is loaded and displays a user interface comprising one or more drivers pointing to at least one queue on the server. The user selects at least one driver from the display. The method further comprises creating an image file for each driver selected. The image file is processed, the processing comprising appending a user identification to the file. A destination driver is invoked, which creates raw print data from the image file for each selected driver. The raw print data is sent to the server, wherein the server parses the raw data and determines the user identification. The raw print data can then be sent to the user's inbox on the server. In a preferred embodiment, the user identification comprises the sequence of ASCII 60 (or 3C hex), the username, and ASCII 62 (or 3E hex). Preferably, the user identification is appended to the document name.","It is contemplated that the present invention would be used on a system for sending a print job from a thick client to a server, comprising an application program, a distribution driver user interface, a graphical device interface, a print processor, a native driver; and a server communicatively coupled to the native driver. The graphical device interface is communicatively coupled to the application program, the distribution driver interface, the print processor, and the native driver. The print processor appends user identification to the image file and forwards the image file to the native driver, the native driver creating raw print data and sending the raw print data to the server. The server parses the raw print data and determines the user identification, puts the user identification into control data, and stores the raw print data and control data in a repository, the repository having a section dedicated to the user.","Preferably, a remote procedure call is used to communicate between the native driver and the server. Typically, in response to a print request from the application program, the print request initiated by a user, the graphical device interface accesses the distribution driver user interface, when the distribution device user interface is completed processing, the graphical device interface creates an image file, the image file is forwarded to the print processor. The system may further comprise a spooler, wherein the print processor is a component of the spooler.","In the preferred embodiment, the application program, graphical device interface, and distribution are in context of the user of the application program, the print processor, native driver, and server are in the context of System, the special Windows user.","In a preferred embodiment, the method identifies a user by saving the user name along with other User Interface Data collected by a distribution driver. The user interface data is subsequently passed to the print processor which invokes the native print driver by routing the respective EMF files created by the graphical data interface. The print processor appends the user name to the filename by encapsulating it within the tokens \u201c<\u201d and \u201c>\u201d or ASCII 60 (3C hex) and ASCII 62 (3E hex).","As those skilled in the art can readily appreciate, the present invention may be realized by using either hardware, software, or a combination thereof.","Among those benefits and improvements that have been disclosed, other objects and advantages of this invention will become apparent from the following description taken in conjunction with the accompanying drawings. The drawings constitute a part of this specification and include exemplary embodiments of the present invention and illustrate various objects and features thereof.","Throughout this description, the preferred embodiment and examples shown should be considered as exemplars, rather than limitations, of the present invention.","The present invention is directed to a system that includes a document management system that provides access to the document management repository via a folder incorporated into the existing operating system file structure","When utilizing a Microsoft Windows\u00ae operating system, the system provides access to network-based documents via Windows Explorer\u00ae. Although this feature represents a only a subset of the operations available to a user who uses the present invention, the browser-based client provides ease-of-use to a user who is accustomed to using the Windows tools and environment, and provides sufficient functionality for the user who simply needs to perform basic functions.","When a user invokes the Windows Explorer file manager, a document repository is represented as another folder within the Explorer folder pane. A user can perform the following operations on the repository folder insofar as the user has the appropriate access rights: expand the folder tree structure, view folder properties, delete a folder, rename the folder, copy the folder, move the folder, drag-and-drop a document, delete the document, rename the document, copy the document, move the document, view document properties, and view the document content as read-only. When the document is moved or copied within the repository file structure, the document, as well as its meta data, are \u201cmoved\u201d or \u201ccopied\u201d. When the document is moved or copied to a folder that is located outside the repository, only the document content is moved or copied (this operation is equivalent to a download operation).","Referring now to , there is illustrated a block diagram of a conceptual overview of a system  incorporating a document management architecture. The system  includes a network-based document service appliance  (hereinafter also denoted as iSP appliance for image Service Platform appliance) that is a document distribution solution with document management capabilities and device management support. The document management component enables users to quickly store and retrieve documents from a central repository. Device management is used to discover devices, monitor device availability and provide device status to a user.","The appliance  replaces or supplements existing fax, print and e-mail servers, and offers a more efficient method of transmitting, tracking and storing business-to-business documents. The appliance  is a client\/server system suitably implemented in single and collaborative corporate workgroups (although not limited to such environments) designed to increase productivity and reduce costs by making document communications simple to perform and more reliable. Users can share documents and conduct collaborative work between various workgroups. For example, collaboration between sales and accounting can occur when issuing customer quotes, generating offers or approving a credit line, tracking job costs, and charging back users.","A typical application consists of transmitting critical documents that impact the operations of a business. These critical documents can be from, but are not limited to, the following functional areas of a business: Sales, Accounting, Purchasing, Engineering, Warehouse, and Human Resources. All of these documents are representative of a critical business process. A job routing component allows a user to direct jobs to one or more Multifunction Peripheral devices (MFPs) and other LPD-compliant devices, to faxes, e-mail and web servers. An LPD-compliant device is a Network Print Server (i.e., Line Printer Daemon (or spool area handler)) that allows access to printers from a local computer across a TCP\/IP network, e.g., the Internet.","Like many conventional appliances, the iSP appliance  is a plug-n-play device having a hardware component consisting of a closed-box server that is easy to install, configure and support, and the software component is the iSP software, both of which will be described in greater detail hereinbelow. The appliance  provides routing services, document management services, and device management services on behalf of one or more iSP clients. For example, in a local area network (LAN) environment, the appliance  provides services from a first \u201cthin\u201d browser-based client  to one or more local network peripherals ( and ) disposed on the LAN. The disclosed appliance architecture is suitably accommodating for a \u201cthick\u201d driver-based client  also disposed on the LAN, such that the thick client  can access the services provided by the appliance  in the LAN environment.","The system  is suitably operable to provide services to the thin client  and the thick client  over a packet-switched TCP\/IP-based global communication network (GCN)  to one or more remote peripherals ( and ) disposed thereon. Such remote devices ( and ) comprise the same types of network peripheral devices ( and ) disposed on the LAN, e.g., printers, faxes, copiers, multifunction peripherals, scanners, etc.","Referring now to , there is illustrated a block diagram of a client\/server topology, in accordance with a disclosed embodiment. From an architectural standpoint, an appliance  (similar to appliance ) is a client\/server system comprising a document distribution solution with document management capabilities and device management support. In support of such capabilities, the appliance  comprises the following three modules: a Document Management Module (DMM) ; a Device Management Module (DVMM) ; and a Document Distribution Module (DDM) . Note that the architecture is not limited to these three modules, but is suitably extensible to include other modules that facilitate document and device management. The main function of the DMM module  is to store documents in a central document repository and to facilitate user capability to modify documents, collaborate during document editing, and search and locate stored documents. The main function of the DDM module  is to route jobs to destinations such as printers, faxes, e-mail servers, the DMM repository, and web servers. The main function of the DVMM module  is to provide a centralized facility for discovering, examining, and controlling networked output devices.","The DDM  interfaces to the DMM  to distribute documents to the DMM  in native file formats, and PDF (Portable Document Format). The DDM  interfaces to both internal and external servers to distribute files thereto. For example, the DDM  distributes files to one or more local web servers  in both PDF and native file formats; one or more internal SMTP e-mail servers  in PDF and native file formats, as attachments; and one or more internal fax modems  in G3\/G4 fax file formats. Where such devices are remote from the appliance , the DDM  interfaces to one or more of the following devices for the transmission of files thereto: a remote web server  in PDF and native file formats; a remote SMTP (Simple Mail Transfer Protocol) e-mail server in PDF and native file formats, as attachments; and a remote MFP\/network printer\/fax modem  in G3\/G4 fax file formats.","A client block  represents both a thick client type  (similar to thick client ) and a thin client type  (similar to thin client ) with general interfaces to the appliance block . The DVMM  of the appliance  reports device status signals to the client block , indicating that such status signals are transmitted to the thick client types  and the thin client types . Both the thick client  and the thin client  interface to the DDM  for document distribution to selected internal and external devices. The DDM  also reports back to the client block  the job status of the documents forwarded to the DDM  for distribution. Documents received into the DDM  are spooled to a spool device  internal to the appliance .","Documents  input to the thick client  are opened within a native application , and sent to the thick client  in response to a print command of the native application . Since the thin client  is browser-based for selecting documents from a server, the documents  are uploaded to the thin client . Additionally, the thin client  suitably communicates with a remote DMM  of a second appliance .","The DDM  has a client-server architecture, where the appliance  is the server component and all the user machines (thin and thick types) are the clients. The primary function of the DDM  is to route jobs to various types of destinations from virtually any type of client operating system (OS) (e.g., Windows, Unix, Mac, etc.) without requiring a user to have special skills in managing output devices. As described hereinabove, there are two types of clients available: the thick client  (i.e., operating through a printer driver), and the thin client  (i.e., operating through a browser). (Note that the thick client  is only available on supported Windows platforms.) In the embodiment of , the appliance  runs a Linux OS. The DDM , in turn, routes the job to its final destination (either internal or external). Thus the appliance  becomes the focal point for monitoring and controlling delivery of these jobs to the respective destinations. The clients ( and ) offer the capability of saving a particular set of routing options as a profile, and by doing so, simplifies user tasks when submitting jobs with the same options, and to the same destination. The destination types include a network printer (of MFP ), e-mail servers ( and ), web servers ( and ), and fax modem (, and of MFP ).","The thin client  can send documents to all destinations that can be reached via the thick client  with one important distinction-no format conversions are applied to these documents. These documents are delivered to the final destination in the original (i.e., \u201cnative\u201d) format.","The browser interface featured by the thin client  provides a user the capability to browse for the document that needs to be distributed to one or more destination devices, select one or more destination types, select one or more specific destinations, and select the properties of the specific destination. When selecting the destination-types, and in the case of a printer or fax destination, the document  should be in the specific format supported by the respective printer or fax, as the document will be routed as is. The thin client  supports the following destination types: network printer, e-mail, web server post, fax modem, and DMM. The specific destinations can then be selected, and the corresponding properties of the specific destination, for example, e-mail properties, web-post properties, fax modem properties, network printer properties, and DMM properties.","Under the E-mail properties (when this destination type is configured the iSP Admin has to provide the hostname of the respective SMTP server), the following options are provided: \u201cTo\u201d E-mail address, \u201cCC\/BCC\u201d E-mail address, \u201cSubject\u201d, \u201cMessage\u201d, \u201cFrom User\u201d will be the Windows login username, and Address book with MAPI support.","Under The Web-post properties (a web-service needs to be installed on the posting web server), the Document Title and Comment may be viewed. With the Fax Modem properties, the user can select one or more available fax devices and the corresponding vendor specific properties. The Network Printer properties allows the user to select one or more available print devices, however, no vendor-specific properties are selectable. The user can also check the status of the appliance queue associated with the selected device. The DMM properties (the document is routed to a user inbox) allow the Document Title and Comments to be viewed.","The client installation is performed according to the type of client and user platform. For Windows platforms, the thick client  is installed via a point-and-print capability. The thick client  can also be installed by pointing the browser to the URL (Uniform Resource Locator) path of the appliance . The thin client  does not require any special installation, as this functionality is made available by pointing the browser to the URL of the appliance . For Unix platforms, the thin client  does not require any special installation, as this functionality is made available by pointing the browser to the URL of the appliance .","The number and nature of the screens presented to a user by the thick client  depends on the type and number of selected destinations. To route a document via the thick client , a user opens a document  in its native application , and selects the File\/Print menu. To use the thick client  for routing, the native application  must support the print functionality of the Windows OS. As a next step, the user needs to select a destination. If the user intends to send the job to only one destination, then the subsequent sequence of steps is similar to any other Windows print operation. However, if the user intends to send the job to multiple destinations, then the user selects the following options: Print Driver, in the Printer dialog box (some applications may have a different way of selecting the destination printer), destination-type(s), specific destination(s), properties of the specific destination, or alternatively, to avoid navigating the property screens, select and load a previously-stored job delivery profile. The user can also store the current job profile.","When the user is in the Print Driver option and further selects the Properties button, a common, generic set of properties (these properties may be overridden by the application's page setup values) can be applied to the routed document, for example, Page Size, Orientation, Color\/B&W, and number of Copies.","When in the user is in the destination-types option, the user can select Network Printer, E-Mail, Web post, Fax modem, and DMM. The specific destination can then be selected, and the corresponding properties of the specific destination, for example, E-mail properties, Web-post properties, Fax modem properties, Network printer properties, and DMM properties.","Under the E-mail properties (when this destination type is configured the iSP Admin has to provide the host name of the respective SMTP server), the following options are provided: \u201cTo\u201d E-mail address, \u201cCC\/BCC\u201d E-mail address, \u201cSubject\u201d, \u201cMessage\u201d, \u201cFrom User\u201d will be the Windows login username, and Address book with MAPI support. Under the Web-post properties (an iSP web-service needs to be installed on the posting web server), the Document Title and Comment may be viewed. With the Fax Modem properties, the user can select one or more available fax devices and the corresponding vendor specific properties. The Network Printer properties allow the user to select one or more available print devices and the corresponding vendor specific properties. The user can also check the status of the appliance queue associated with the selected device. The DMM properties (the document is routed to a user inbox) allow the Document Title and Comments to be viewed. Alternatively, to avoid navigating the property screens, the user has the option to select and load a previously stored job delivery profile. The user can also store the current job profile.","Under the E-mail properties (when this destination type is configured the iSP Admin has to provide the host name of the respective SMTP server), the following options are provided: \u201cTo\u201d E-mail address, \u201cCC\/BCC\u201d E-mail address, \u201cSubject\u201d, \u201cMessage\u201d, \u201cFrom User\u201d will be the Windows login username, and Address book with MAPI support. Under the Web-post properties (an iSP web-service needs to be installed on the posting web server), the Document Title and Comment may be viewed. With the Fax Modem properties, the user can select one or more available fax devices and the corresponding vendor specific properties. The Network Printer properties allow the user to select one or more available print devices and the corresponding vendor specific properties. The user can also check the status of the appliance queue associated with the selected device. The DMM properties (the document is routed to a user inbox) allow the Document Title and Comments to be viewed. Alternatively, to avoid navigating the property screens, the user has the option to select and load a previously stored job delivery profile. The user can also store the current job profile.","Referring now to  there is shown a client\/server system  contemplated by the preferred embodiment of the present invention. An application  is running under the context user on the client machine. The application  communicates with the graphical data interface (GDI) . The application  sends document properties or print commands to the GDI .","A spooler  with a print processor  is communicatively coupled to the GDI . A distribution driver  is invoked when the application  initiates a print request. As shown in , the distribution driver  is invoked via the spooler . The distribution driver is invoked in the context of the user and displays a user interface wherein the user can select one or more destinations (not shown), such as native printers, some of which may be configured on a server , preferably the server is an image Service Platform appliance (or iSP).","After printers have been selected, a data file  is created. The GDI  creates an Enhanced Meta Files (EMF). The EMF is then sent to the spooler  and is processed by the print processor . The print processor , which runs in the context of the special Windows user SYSTEM reads and interprets the EMF and reads the user selections from the data file . The print processor  then appends the user identification to the file name. Preferably, the user name is encapsulated by special characters, such as \u201c<\u201d and \u201c>\u201d or ASCII 60 (3C hex) and ASCII 62 (3E hex). For each destination selected by the user, the print processor  translates EMF commands to commands that the native driver  understands, and then routes the processed file to the native driver .","A native driver  receives the print data and control data from the print processor  via the spooler  and the GDI . The native driver  is configured for sending output to a document management system and is invoked by the GDI  in the context of the user of the application  that initiated the print job, which for thick clients in the case of normal Windows platforms is the user of the print processor, SYSTEM. The native driver  creates raw print data and then initiates a remote procedure call to the server . The native driver  then sends the raw print data and the control data to the server via the spooler  and the port monitor (not shown). The server  receives the print job from the native driver, the print job context being from the SYSTEM user. However, the server  parses the raw print data and separates the user name from the document data and changes the user from SYSTEM to the correct user name. Once the correct user name has been determined, the server  forwards the raw print data and control data to the user's inbox  in the document management system.","Referring now to  there is illustrated a method contemplated by the present invention. The method starts at step  when the user invokes an application  running in the user's context and requests a print job. The user then receives a print dialog and selects the distribution driver , which for this example is the Toshiba Distribution Driver as shown in step . Selecting the distribution driver  in step  causes the application to call the document\/properties application programming interface, and as shown in step  the distribution driver displays a user interface (not shown). The user then selects one or more native drivers  that point to print queues on the server . The print queues may be configured to send the output to the document management system. The user interface saves the selected destinations and their properties in a data file  and also saves the user's user name to the document file (not shown).","At step  the user prints the job. The application  calls the GDI's  application programming interface to print to the distribution device's  device context. The GDI creates an EMF (not shown) and passes it on to the spooler .","At step  the spooler  receives the EMF and calls the print processor  which is running in the context of the special Windows user SYSTEM. The print processor  reads and processes the EMF. Furthermore, the print processor  appends the user name to the document name, as this is the only control data field which can be modified by the print processor to include the user name.","At step  the print processor  invokes the selected destination's native driver . When the native destination driver  is invoked by the print processor , it is under the print processor's context which is the special Windows user SYSTEM. The native driver  for the destination creates the raw print data and sends it to the server  via the spooler  and port monitor (not shown).","At step  the server  receives the control data and raw print data from the native driver, the context is user SYSTEM. The server  then parses the document name in the control data and separates the actual user name in the control data and changes the name from SYSTEM to the actual user name.","Once the user's actual name has been determined, the server  sends the output to the user's inbox  in the document management system as shown in step .","Although the invention has been shown and described with respect to a certain preferred embodiment, it is obvious that equivalent alterations and modifications will occur to others skilled in the art upon the reading and understanding of this specification. The present invention includes all such equivalent alterations and modifications and is limited only by the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING","p":["The drawings illustrate the best mode presently contemplated of carrying out the invention.","In the drawings:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
