---
title: Security management system including feedback and control
abstract: A system uses automatic feedback and control to secure a network infrastructure by iterative convergence of the network's security structure to meet a security policy. Following initialization, a security feedback control system of the security management system makes dynamic adjustments to the system using bi-directional services that are controlled via policy decision components, without user intervention.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07472422&OS=07472422&RS=07472422
owner: Symantec Corporation
number: 07472422
owner_city: Cupertino
owner_country: US
publication_date: 20030910
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Table 55"],"p":["1. Field of the Invention","The present invention relates generally to network security, and more particularly to using feedback and control to enhance network security.","2. Description of Related Art","Network security is typically provided by multi-vendor security services and products. Each security service and product typically generates a security event in response to one or more specified detected actions and generates a log of the security events. Typically, each vendor for a security service and product utilizes a format for the security event that is unique to that vendor.","System administrators monitor the security events and\/or logs to determine whether any modification to the security services and\/or products are required to maintain network security. Unfortunately, in an enterprise network, the volume of security events makes it difficult to monitor the network security in real time. Thus, while there may be a well-defined security policy, assuring the policy is properly implemented at all times on the network is difficult, if not impossible.","This problem is exacerbated because there is not a common technique or structure for security events. Consequently, a system that attempts to monitor security events from multi-vendor security services and products is required to deal with the various formats, protocols, structures etc., associated with each security product and\/or service on the network. For this reason, an integrated approach to network security management is a very complex and difficult to implement. Moreover, an approach developed for one enterprise network many not be applicable to another enterprise network due to the differences in the network structure, the security products and services, and the use of the network.","A service-oriented system includes a security management system. The security management system includes a network security feedback and control system. The security feedback and control system receives a plurality of normalized events and issues at least one normalized command in response to a predefined event in the plurality of normalized events.","The service-oriented system also may include, but is not limited to a service oriented architecture that includes any combination of a bootstrap service, an inventory service, an operational state service, a configuration service, a logging service, an alerting service, a command service, a notification service, and\/or a heartbeat service.","In one embodiment, the network security feedback and control system includes a feedback and control manager. The feedback and control manager processes the at least one normalized event and generates the at least one normalized command.","The feedback and control manager includes, in one embodiment, at least one rules engine. The rules engine includes a rule having a condition object that uses information from the at least one normalized event.","The service-oriented system further includes, in one embodiment, a managed node coupled to the security management system. The managed node includes a security management agent, which in one embodiment, executes on the managed node.","In still another embodiment, the system includes at least one managed product coupled to the security management agent. The at least one managed product forwards at least one of the normalized events to the security management agent and receives normalized commands from the security management agent.","In another embodiment, a system includes an event subscription filter and a feedback and control manager coupled to the event subscription filter. The system further includes a knowledge database coupled to the feedback and control manager. The system also includes a directory coupled to the feedback and control manager. In one embodiment, the system includes a configuration adapter connected between the feedback and control manager and the directory.","A method, in one embodiment, includes receiving events from managed products by a network security feedback and control system, and using information in the events by the network feedback and control system in dynamically implementing a predefined security policy.","A computer-program product comprises a computer-readable medium containing computer program code for a method including:\n\n","A structure includes:\n\n","In one embodiment of this method, the event sink includes a security feedback and control system. The second tier object includes a security management agent. The third tier object includes a security management server.","In another embodiment, a computer-program product comprises a computer-readable medium containing computer program code for a method including:\n\n","Hence, in this embodiment, a structure includes:\n\n","Another method includes:\n\n","Accordingly, a computer-program product comprises a computer-readable medium containing computer program code for a method comprising:\n\n","Also, a structure includes:\n\n","In a further embodiment, a method includes:\n\n","For this embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","A structure, for this embodiment, includes:\n\n","In a still further embodiment, a method includes:\n\n","For this embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","A structure, for this embodiment, includes:\n\n","A memory structure includes a security event structure. The security event structure includes an event identifier field, an event class identifier field, and a category field. The security event structure further includes severity field, and a software feature identifier field.","In still yet a further embodiment, a method includes:\n\n","For this embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","For this embodiment, a structure includes:\n\n","In another embodiment, a method includes:\n\n","In the drawings and the following detailed description, elements with the same reference numeral are the same or equivalent elements. Also, for three digit reference numerals, the first digit of the reference numeral is the figure number in which the corresponding element first appears. For four digit and five digit reference numerals, the first two digits of the reference numeral are the figure number in which the corresponding element first appears.","System  uses automatic feedback and control in a heterogeneous environment, in one embodiment, and in a homogeneous environment, in another embodiment, to secure a network infrastructure by iterative convergence of the network's security structure to meet a security policy. Following initialization, security feedback control system  of security management system  makes dynamic adjustments to system , using bi-directional services that are controlled via policy decision components, without user intervention.","Unlike prior art systems that presented information to a console for analysis by a security expert, and relied upon the security expert to initiate appropriate actions, security feedback and control system  analyzes security event data directly and initiates appropriate actions. The actions are not limited to reconfiguring firewalls and\/or intrusion detection systems. The actions may include scanning storage devices, isolating devices, isolating users, isolating information, isolating programs, reconfiguring applications and\/or operating systems, updating applications and\/or operating systems, and other operations required to maintain the security of system  according to the specified security policy.","Moreover, security feedback and control system  is not limited to implementing single acts in response to a particular security threat or attack. Rather, system  dynamically monitors and tightens the security of system  over and above the capabilities of any individual security service. Security feedback and control system  monitors and tracks the current state of the network environment and continuously adjusts security sensors and security enforcement points to converge on a steady secure state.","Security feedback and control system  receives security events from a variety of devices including email servers , WINDOWS servers  (WINDOWS is a trademark of Microsoft Corp. of Redmond, Wash.), UNIX servers  (UNIX is a trademark of American Telephone and Telegraph Company Corporation, New York, N.Y.), Web servers , workstations , applications , storage area networks , switches , routers , intrusion detection systems , firewalls , gateways , and any other elements, hardware or software, included in a computer network that are associated with the security of the network over which the elements communicate. In , servers  and  are characterized by the operating system and servers  and  are characterized by the function performed. These examples are illustrative only of servers in general and are not intended to limit the invention to the specific embodiments of servers illustrated.  illustrates the heterogeneous nature of system .","As, explained more completely below, the security events are normalized security events, i.e., have a hierarchical structure that includes at least a base security event, so that security and feedback control system  is extensible without concern to the particular type or manufacturer of products controlled by security management system . In particular, each security sensor and security enforcement point, independent of vendor, operating system, etc., utilizes security events that include at least a predefined security base event.","Security feedback and control system  analyses information in the security events and automatically generates normalized control instructions. The normalized control instructions are provided to appropriate products in system  to implement the security policy embedded in security feedback and control system .","As used herein, a security event includes a raw security event, a security alert event, sometimes called alert, and a security incident event, sometimes called incident. In the following description, reference to an event, an alert, or an incident should be interpreted as a security event, a security alert, or a security incident, respectively. Herein, a security event is an event associated with a security aspect of a network that includes at least information in the security base event.","Hence, in one embodiment, security and feedback control system  processes raw events, in another embodiment processes alerts, in yet another embodiment processes incidents, and in still another embodiment processes any desired combination of raw events, alerts, and incidents and generates, in each instance, appropriate control instructions, e.g., a command or a configuration change.","The products in system  receiving the control instructions act upon the instructions. A product, typically, at least generates a normalized security event that indicates whether the control instructions were executed successfully. In response to these successful or unsuccessful normalized security events, feedback and control system  may invoke further control instructions for the same, or other products. This iterative process of feedback and control is used to converge on a steady security state for the network.","As explained more completely below, the managed products integrate their security event streams via an extensible security management agent. The security management agent forwards the event streams to a middle tier of servers in security management system .","This middle tier of servers routes the events to other servers including for example security feedback and control system , which are event sinks. The middle tier of servers also removes the requirement that a managed product know the location of a service supported by security management system . The security management agent also submits queries to the middle tier of servers that in turn route the query to the appropriate event sink, and receives responses to the queries on behalf of the managed products associated with the security management agent.","Hence, one service provided by security management system  is feedback and control service for network security management. While network security management, and in particular computer network security management are used to illustrate an embodiment of this invention, the feedback and control service is not limited to only network security. For example, a similar system could be implemented with a distributed database system and used to monitor and control queries on the database. As explained more completely below, in addition to the feedback and control service, in one embodiment, security management system  also includes other services and functions such as product registration and discovery, product policy configuration management, incident data collection and management, security event and alert logging, alert notification management, file transfer and remote task invocation on behalf of a product, and security management console operations.",{"@attributes":{"id":"p-0109","num":"0154"},"figref":"FIG. 2","b":["150","150","200","101","112","201","1","201","220","1","220","155","201","210"],"sub":["\u2014","\u2014","\u2014","\u2014"],"i":["n","n ","i ","j. "]},"A managed product is used in a generic sense and can be a physical device or computer program code in the form of an application or an operating system, for example. Sometimes a managed product is referred to as an application. In one embodiment, managed products include but are not limited to any one of, or any combination of anti-virus applications, firewalls, intrusion detection systems, vulnerability assessment applications, hubs, routers, switches, computers including servers, workstations, and personal computers, and access control lists.","In the example of , managed node _ includes a single managed product _, while managed node includes k managed products, where k is an integer. Each managed product , where j ranges from one to the total number of managed products, includes a product specific operation control module that is used in communicating with managed product and with a security management agent , where m ranges from one to n in .","As explained more completely below, each managed product registers with security management agent and with security management system A. Managed product provides security management system A with specified information such as identification and configuration data. In one embodiment, this information is provided using a schema in the eXtensible Markup Language (XML), hereinafter XML.","Product specific control module for managed product has a security event package that includes a security event class or security event classes needed to communicate with security feedback and control system A. In general, if the product has a library for the security event package, the product has the security event package natively integrated. Alternatively, the product can be coupled to an event collector that provides the security event package. As explained more completely below, in one embodiment, a security event is generated in the form of fields in table where each field stores specified information. The table format facilitates storing the security events in a database.","Security management agent has standardized programmatic interfaces for receiving normalized command instructions from security control system A and for transmitting normalized events to security feedback and control system A. In the embodiment of , the standardized interface for transmitting events to security feedback and control system A is included in an event adapter . The standardized interface for receiving normalized command instructions is included in a method adapter ","As explained more completely below, when a security related action occurs, product specific control module generates a security event having a predefined structure and content, and forwards the security event to security management agent . Security management agent adds information to the security event. In one embodiment, depending upon the information in the security event, e.g., did product specific control module mark the event as an alert, security management agent either transmits the event directly to security feedback and control system A via network , or queues the event for subsequent transfer to security feedback and control system A over network .","Thus, security management agent acts as a collector of events for managed products and as an interface to security management system A. The collection of events is independent of the particular types of managed products coupled to security management agent . Consequently, the problem of controlling a system with multi-vendor security products and\/or services is minimized through the use of security events having predefined structures and content.","In one embodiment, security management agent maintains a queue for each managed product registered with security management agent . In another embodiment, security management agent maintains a single queue for all managed products registered with security management agent . Security management agent flushes each queue to security management system  according to one or more predefined criterion.","Upon receipt of an event from security management agent , security management system  logs the event, in one embodiment, and transfers the event to security feedback and control system A. As explained more completely below, in one embodiment, not every event is passed to security feedback and control system A. Rather, only events that are processed by security feedback and control manager A are passed to security feedback and control system A.","In one embodiment, security feedback and control manager A includes at least one rules engine . However, in other embodiments, security feedback and control manager A includes a plurality of rules engines where each rules engines process security information. For example, one rules engine processes a set of raw events, while another rules engine processes alerts.","The rules engine processing alerts could, for example, eliminate false alerts and pass the remaining valid alerts to yet another rules engine for analysis. Hence, the plurality of rules engines can act independently, or can be cascaded in one embodiment.","In the example of , rules engine  is a dynamic decision point that implements a security policy. Rules are information structures in the form of cascaded condition-action object pairings, e.g., condition object  and action object  of rule A. Dynamic input to condition object  is information from an event, or other security information derived from an event or events. Static or pseudo-static inputs to the condition and action objects are from a knowledge base  with generic knowledge of the security enforcement and detection points. For example, security enforcement and detection point knowledge base A, in one embodiment, includes known validated security threats, demographic and geographic information about the managed products.","As an example, consider the embodiment where managed product is an anti-virus application that has detected and quarantined an unknown virus and has sent an event to rules engine . At least the fields of the security base event that are inherited by the event are generic and do not depend upon the specific characteristics of managed product . However, information in these fields is managed product specific, such as an identifier assigned to managed product . As explained more completely below, managed product can define a custom event that adds fields to the fields for the security base event, for example. The additional fields in the custom event could be specific to managed product only, but the format and information in each field is predefined. Herein, when it is stated that information in a field is predefined, it means that the information to be supplied in the field is predefined, but the actual value of the information is determined at the time the information is supplied in the event.","When rules engine  receives the event from managed product , the information in the event is tested in the condition objects. A condition object that corresponds to the event for a detected and quarantined virus in rules engine  is true and so the corresponding action object is executed.","In one embodiment, the action is to send a command to each method adapter in a security management agent that has an anti-virus application registered. The command is to run a method that reloads the anti-virus definitions, e.g., get the latest version of the anti-virus definitions, and load them.","In another embodiment, the command is sent to the specific security management agent that transmitted the original event. In another example, the command is sent to all security management agents that support an anti-virus application that has not updated the virus definitions within a predefined period.","When method adapter receives the command, method adapter transfers the command to product specific operation control module for managed product , which in this example is an anti-virus application. Product specific operation control module translates the reload virus definitions command into a command that can be executed by managed antivirus product and sends the translated command to managed product ","Upon completion of execution of the translated command, managed product returns either a success or failure to product specific operation control module . Product specific operation control module builds a command completion status event indicating the success of failure of the command to reload the anti-virus definitions and sends the command completion status event to event adapter that in turn sends the event to security management system .","The completion status event is sent to rules engine . If the completion status is successful, a command object for successful completion of the reload anti-virus definition command is true. The action object for that condition object is executed. In this example, the action object is to send a rescan volume command to security management agent ","Conversely, if the completion status is unsuccessful, a command object for unsuccessful completion of the reload anti-virus definition command is true. The action object for that condition object is executed. In this example, the action object is to isolate managed node containing managed product and to send a notification to the system administrator for managed node ","In either case, the appropriate command is transmitted to the appropriate method adapter and to a product specific operation control module and ultimately to a managed product. The success or failure of execution of the command is reported back to rules engine . Thus, security management system A has automatically configured the appropriate managed node or nodes appropriately for the original security event, without waiting for a system administrator to detect the problem and initiate an appropriate response.",{"@attributes":{"id":"p-0131","num":"0176"},"figref":"FIG. 3","b":["300","211","301","302","302","310","330","303"],"sub":"\u2014","i":"j "},"Populate event operation  adds event characterization data B to event A. In one embodiment, operations  and  are performed using an interface that includes a plurality of methods. When a method in the interface is called, the method adds a field to the event structure that includes the information associated with that field. Hence, in this embodiment, the generation and population of the event are not discrete operations.","Also, in one embodiment, the interface used to generate the event examines a locale parameter and based upon the locale parameter correctly converts event data to a UTF-8 format. In this embodiment, both Unicode and multi-byte event data strings are converted to the UTF-8 format. The UTF-8 format encoding is the encoding in which event data is sent to security management system A. The use of UTF-8 encoding is known to those of skill the art. For example, see F. Yergeau, \u201cUTF-8, a transformation format of ISO 10646,\u201d RFC 2279, January 1998, which is incorporate herein by reference as evidence of the level of skill in the art.","Typically, event characterization data B includes: an event identifier, a class identifier, a product version string, a software feature ID, a computer name of the computer on which the managed product is running, a computer IP address, a computer IP subnet, an identifier for the computer on which the managed product is running, a MAC address of the network card in the computer, an event category, and an event severity as explained more completely below. Upon completion, populate event operation  transfers processing to transmit operation .","Transmit operation  transfers event A to security management agent . In one embodiment, the transfer uses XML over HTTP to transfer event A. Before initiation of process, , communication with agent is established, e.g., a handshake with agent is initialized to establish a connection. When managed product closes, all connections with agent are closed using, in one embodiment, a shutdown method.","Upon receipt of event A, process  () that is executed by security management agent transitions from event available check operation  to valid event check operation .","Valid event check operation  determines whether event A is a valid event. In one embodiment, valid event check operation  determines whether event A contains bad data, e.g., invalid data, no application identifier, no software feature identifier, an unknown event type, no product version, or an invalid locale. If any one of these is missing or invalid, event A is considered invalid. If event A is valid, processing transfers to populate event operation  and otherwise transfers to send error operation .","In send error operation , an appropriate error identifier is returned to product specific control module . Upon completion, send error operation  returns to event available check operation .","Populate event operation  adds time stamp and location data A to event A. Typically, time stamp data includes a time the event was created and a time the event was logged by security management agent . Location data includes a domain of the computer running managed product , a user name, and an organizational unit of the computer, as explained more completely below. In one embodiment, upon completion, populate event operation  transfers processing to transfer direct check operation .","As used herein, an event includes raw events, alert events, and incident events. Raw events are events that are not either alert events or incident events.","In one embodiment, managed product marks a field in event A to request direct transfer of event A through security management agent to security feedback and control system A. In another embodiment, when a managed product registers with security management agent , managed product defines severity codes that correspond to events, alert events and incident events.","In addition, or alternatively, a combination of events can be part of an alert configuration. Security management agent knows these events are in the alert configuration, but when these events occur, security management agent expedites delivery of the events by sending these events, one by one, since the events may happen over time, in direct mode, rather than queueing the events for delivery. The logging service also knows these are events that take part in an alert configuration, so the logging service passes the information to the alert service. The alert service generates an alert, when any or all of the events that make up a given alert configuration are received within the proper frame of time, or number.","In this embodiment, events in an alert configuration, alert events and incidents are transferred directly through security management agent to security and feedback control system A. In either embodiment, raw events are placed in a queue for subsequent transfer to security feedback and control system A.","Hence, if event A is an event in an alert configuration, an alert event or an incident event, transfer direct operation  transfers to transmit operation  and otherwise transfers to queue full check operation . Transmit operation  places event A in an output buffer for transfer via a secure transfer methodology over network  to security feedback and control system A. In one embodiment, the event is transferred using Web Based Enterprise Management (WBEM) compliant XML over HyperText Transport Protocol (HTTP).","In one embodiment, if a connection is not available with security management system A, transmit operation  places event A in a queue for managed product , if a queue exists. If no queue exists, event A is discarded and an error condition is logged. An alternative embodiment is described below with respect to operations , , , and .","If event A is a raw event, queue full check operation  determines whether the event queue for managed product is full. If the event queue is full, check operation  transfers to send error operation  and otherwise transfers to queue event operation .","Send error operation  sends a message to managed product indicating that security management agent is not accepting events. In one embodiment, the message includes an identifier indicating the event queue is full. Upon completion, send error operation  transfers to event available check operation .","Queue event operation  places event A in a queue for managed product and transfers processing to transfer queue check operation . The specific implementation of transfer queue check operation  depends upon the queuing method utilized by security management agent . For example, in a first embodiment, security management agent has a separate queue for each managed product registered with security management agent . In another embodiment, security management agent includes a single queue for all managed products registered with security management agent , i.e., a queue for the managed node.","In each embodiment, the basic operations performed in transfer queue check operation  are equivalent, but the flush criteria considered and the setting of the parameters defining the flush criteria may be different if multiple queues are implemented.","In general, there is at least one flush criterion associated with each queue maintained by security management agent . However, a plurality of flush criterion can be associated with a queue. If any flush criterion is true, transfer queue check operation  transfers to transmit operation  and otherwise transfers to maximum spool size check operation  ().","In this embodiment, transfer queue check operation  () is one method for assuring that each managed product , if multiple queues are used, and\/or each managed node, if a single queue is used, has access to security feedback control system A. This method eliminates the complexity of implementing a round robin queue scheme or other fairness protocol and assures that the connection to security feedback and control system A is available to all managed products.","One embodiment of transfer queue check operation  is illustrated in . In this embodiment, security management agent () has k managed products and so maintains k managed product queues _m . . . _mk, one for each managed product in this example.","In this example, security management agent has a set of queue parameters _m . . . _mk for each managed product queue _m . . . _mk, respectively. In the embodiment of , three queue flush criterion are used. Each criterion is defined by a flush parameter.","While in this embodiment, each managed product queue has three queue flush criterion, this is illustrative only and is not intended to limit the invention to this specific number of criteria, or to limit the invention to having the same number of criterion for each managed product queue.","Thus, each set of queue parameters _mr, where r can be any of 1 to k, includes a set of flush parameters _mr. The flush parameters are product flush time AppFlushTime_mr, product flush size AppFlushSize_mr, and product flush count AppFlushCount_mr, each of which is described more completely below.","For convenience, different reference numerals AppFlushTime_mr, AppFlushSize_mr, and AppFlushCount_mr are used in each set of flush parameters _mk. This is for reference purposes only and should not be interpreted as defining any relationship between the flush parameters in the various sets of flush parameters.","Product flush time AppFlushTime_mr is the number of seconds that security management agent queues events for managed product _mr before attempting to send the events on to security and feedback control system A. In one embodiment, product flush time AppFlushTime_mr is an integer in the range of 10 (10 seconds) to 43,200 (12 hours), and has a default value of 300 (300 seconds).","Product flush size AppFlushSize_mr is a size, in kilobytes, of events in managed product queue _mr that security management agent holds before attempting to send at least that size of the events on to security and feedback control system A. In one embodiment, product flush size AppFlushSize_mr is an integer in a range of 3 to 1000, and has a default of 50, e.g., 50 KB.","Product flush count AppFluBhCount_mr is a number of events in managed product queue _mr that causes security management agent to attempt to send at least that number of events on to security and feedback control system A. In one embodiment, product flush count AppFlushCount_mr is an integer in a range of 20 and 2000, and has a default value of 35.","Product spool size AppSpoolSize_mr is a size in kilobytes of managed product queue _mr that security management agent holds in a volatile memory. If the size of managed product queue _mr exceeds product spool size AppSpoolSize_mr, managed product queue _mr is moved from a volatile memory to a non-volatile memory, e.g., a hard disk drive, in one embodiment. In one embodiment, product spool size AppSpoolSize_mr is an integer in a range of 0 to 1000, and a default value is 100, e.g., 100 KB.","A queue on a non-volatile memory is much slower to access that the same queue in volatile memory, because all queue information is encrypted as the information is written to the non-volatile. Hence, in some embodiments, when the queue size in the volatile memory reaches product spool size AppSpoolSize_mr, the queue information is written to the non-volatile memory and new events are stored in managed product queue _mr in volatile memory. Thus, part of the queue is volatile memory and part is in non-volatile memory.","The queue in volatile memory is appended to the queue in non-volatile memory when the queue size again reaches product spool size AppSpoolSize_mr. This process continues until either the queue is transmitted in transmit operation , or the size of the queue exceeds product maximum queue size MaxQueueSize_mr.","Product maximum queue size MaxQueueSize_mr is the maximum size in kilobytes of managed product queue _mr. Once managed product queue _mj reaches this size any future events from managed product are refused in queue full check operation  (). Each of the other managed products may continue to log events until its queue reaches product maximum queue size MaxQueueSize_mr for that queue. The most likely cause for managed product queue _mr to reach this size is if feedback and control system A cannot be contacted. In one embodiment, product maximum queue size MaxQueueSize_mr is an integer in a range of 60 to 10000, and has a default value of 2000, e.g., 2000 KB.","Returning to the embodiment of transfer queue check operation  (), flush time check operation  determines whether the time elapsed either from the logging of the first event in managed product queue _mr, after either generation of managed product queue or after the last flush of managed product queue is equal to or greater than product flush time AppFlushTime_mr. If the elapsed time is equal to or exceeds product flush time AppFlushTime_mr, flush time check operation  transfers to transmit operation  () and otherwise to flush size check operation .","Flush size check operation  determines whether the size of the information in managed product queue _mr is greater than or equal to product flush size AppFlushSize_mr. If the size of the information is equal to or exceeds product flush size AppFlushSize_mr, flush size check operation  transfers to transmit operation  () and otherwise to flush count check operation .","Flush count check operation  determines whether the number of events in managed product queue _mr is greater than or equal to product flush count AppFlushCount_mr. If the number of events is equal to or exceeds product flush count AppFlushCount_mr, flush count check operation  transfers to transmit operation  () and otherwise to maximum spool size check operation  (), which is described more completely below.","Transmit operation  places a single event in an output buffer for transfer to security and feedback control system A if processing transferred to transmit operation  from transfer direct check operation  (). Transmit operation  () places a queue of events in the output buffer for transfer to security and feedback control system A if processing transferred to transmit operation  from transfer queue check operation .","In one embodiment, transmit operation  first determines whether a connection if available to security and feedback control system A over network . If a connection is unavailable, transmit operation  does not place any information in the output buffer and instead transfers directly to transmit check operation . If a connection is available, and the connection is secure, transmit operation  places the events in the output buffer as described above. If a connection is available and the connection is un-secure, the event data is encrypted before being placed in the output buffer. Thus, the events are transmitted in a secure manner in transmit operation . Upon completion of transmit operation , operation  also transfers to transmit check operation .","Transmit check operation  determines whether transmit operation  had a connection available. If a connection was available, transmit check operation  transfers to event available check operation  and otherwise transfers to send error operation ","Send error operation  sends an error message to managed product indicating that feedback and control system A is unavailable, and transfers processing to direct transmit check operation .","Recall that security management agent transmits an event directly, either when managed product placed information in the event indicating that the event required immediate processing by feedback and control system A, or when an event was included in an alert configuration. Hence, if direct transmit check operation  determines that security management agent  attempted to transfer the event directly, check operation  transfers to alternate event handler check operation  and otherwise to maximum spool size check operation .","Alternate event handler check operation  determines whether security management agent can redirect the event to another event handler, e.g., a SNMP manager that directs the event to an application that can process the event.","If an alternate event handler is available, alternate event handler check operation  transfers processing to transmit to alternate operation  and otherwise transfers to send error operation . Transfer to alternate operation  passes either the event or information from the event to the alternate event handler. Operation  transfers to transfer check operation .","If the alternate event handler is successful in transmitting the event, check operation  transfers to event available check operation  and otherwise to queue available check operation . If security management agent has a queue for managed product , queue available check operation  transfers to queue full check operation  () and otherwise to send error operation .","Send error operation  sends an error message to managed product indicating that transmission of the event was unsuccessful to both feedback and control system A and to any alternate event handling application. Send error operation , upon completion, transfers to event available check operation .","Returning to direct transmit check operation , if transmit operation  failed to find a connection for a flush of a managed product queue, direct transmit check operation  transfers to maximum spool size check operation , as indicated above.","Maximum spool size check operation  determines whether the managed product queue _mj that received the last event has a size greater than product spool size AppSpoolSize_mj that was described above. If the size of managed product queue _mj exceeds product spool size AppSpoolSize_mj, maximum spool size check operation  transfers to move queue operation  and otherwise returns to event available check operation .","In move queue operation , managed product queue _mj is moved from a volatile memory to a non-volatile memory, e.g., a hard disk drive, in one embodiment. Upon completion of move queue operation , operation  also transfers processing to event available check operation .","When security management system A receives an event or events from security management agent , event available check operation  () transfers to valid event check operation . Valid event check operation  analyzes the content of event to ascertain whether the event contains appropriate information, or whether the event is unrecognized, is missing information, contains inconsistent information, or contains invalid information. As explained more completely below, each event has a standard format that can be recognized by security management system A and certain fields contain information that must be one of a set of enumerated values. In one embodiment, security management systems A determines whether the event is a valid event by ascertaining whether information in the event is internally consistent, and whether the information is consistent with a managed product and agent registered with security management system A.","If the event is a valid event, valid event check operation  transfers processing to log event  operation and otherwise to send error operation . Send error operation  informs security management agent of the invalid event. The techniques used to transmit information to security management agent are the same as those described more completely below for send method operation .","Log event operation  enters the valid event in an event database, e.g., forwards the event to a database server that in turn logs the event in an event database. Log event operation  transfers to an optional preprocess event check operation . If preprocess event check operation is not used, log event operation  transfers to condition object check operation .","In one embodiment, preprocess event check operation  is performed by security feedback and control system A. Thus, security feedback and control system A is an event sink for valid logged events, in this embodiment.","Preprocess event check operation  determines whether security feedback and control system A is preprocessing events to generate additional information for use by security feedback and control manager A. If security feedback and control system A is preprocessing events, preprocess event check operation  transfers to process event operation , and otherwise to condition check operation .","The operations performed in process event operation  depend upon the information stored in processed event database  and\/or the information needed to evaluate one or more rules. For example, if counts based upon characteristics of events or other characterization of events is being stored, process event operation  updates the information in processed event database  appropriately.","Alternatively, process event operation  could be one or more filters and the output of the filter or filters are stored in processed event database . In still another embodiment, process event operation  could perform a statistical analysis either to generate baseline values for characteristics of events, or to identify particular types of activity or activities. In this embodiment, processed event database  enhances the robustness of security feedback and control manager A without requiring an increased load on feedback and control manager A to generate the information stored in preprocessed event database .","In this embodiment, feedback and control manager is a rules based system where each rule A includes a condition object  and action object  pairing, Rules are information structures in the form of cascaded condition-action object pairings. Dynamic input to the condition object is in the form of events flowing in via event adaptors. Static or pseudo-static inputs to the condition and action objects are in the form of a knowledge base A with generic knowledge of the security enforcement and detection points and optionally an event knowledge base .","Hence, condition check operation  determines whether a condition object of a current rule is true. If the condition object is false, condition check operation  transfers to done check operation .","Done check operation  determines whether there is at least one additional rule to evaluate. If there is another rule to evaluate, processing returns to condition check operation  and otherwise returns to event available check operation .","As illustrated in , a condition object can use information from the current event and\/or information from preprocessed event database  and\/or information from security enforcement and detection point knowledge base A. For example, security enforcement and detection point knowledge base A, in one embodiment, includes known validated security threats, demographic and geographic information about the managed products.","When a condition object is true, condition check operation  transfers to action operation . Action object operation  performs the specified operation for the true condition object. This action could be writing information to processed event data base . This action could also to transmit a method call in a particular managed product interface to one or more managed products. The action could be to set a flag or parameter and to continue processing additional rules.","In general, as explained above, each condition object and associated action object are designed to detect particular security issues and issue instructions to address those particular security issues. Thus, both the command object and the action object depend upon the particular event or events processed by rules engine  and the security policy associated with that event or events.","For example, certain events may match conditions that trigger actions that would reconfigure an Internet gateway firewall to block certain IP addresses and ports, and invoke a method that rescans files that may have previously passed through the firewall. Events that indicate files are infected or worms are installed may trigger other rules that reconfigure client firewalls on the infected hosts so that programs cannot send outbound traffic. Infected files may be submitted to an analysis center after another method is invoked against a quarantine system on the infected host.","In one embodiment, a plurality of generic interfaces for managed products is defined for use by action objects in the rules of rules engine . The generic interfaces include an antivirus managed product interface, an intrusion detection system managed product interface, a vulnerability assessment managed product interface, an access control list managed product interface, and a router\/switch managed product interface.","In this embodiment, the antivirus managed product interface includes a scan volume method and a reload virus definitions method. The intrusion detection system managed product interface includes a reload IDS signatures method. The vulnerability assessment managed product interface includes a run checks method. The access control list managed product interface includes grant access method and a deny access method. Both methods have arguments: principal, resource and permissions, in one embodiment. The routers\/switches managed interface includes a shunt traffic to subnet method, a reroute traffic method, a stop services method, a disable port method and an enable port method. The name of each of these methods is indicative of the function performed by the method.","The methods and the interfaces are illustrative only, and are not intended to limit the invention to the specific methods described. In view of this disclosure, those of skill in the art can define generic interfaces for managed products of interest. These methods are referred to as generic because the methods are independent of any particular managed product and so apply to the family of managed products in general. It is the responsibility of product specific control module to translate the generic method call into a method call for managed product ","In , operation  is shown as branching to both done check operation  and to method check operation . Method check operation  determines whether the action object called a method in a managed product generic interface. If a method is called, processing transfers to send method operation  and otherwise to done check operation .","Done check operation  determines whether all rules have been processed and whether further processing of rules has been terminated. If either condition is true processing transfers to event available check operation  and otherwise to condition check operation .","Send method operation  notifies the security management agent or security management agents identified by the action object that resulted in the method call for the managed product. The security management agent(s) notified can be the agent at the managed node where the event originated, or perhaps a broader set of agents, e.g., agents for the same managed product at other managed nodes, all agents, particular agents associated with groupware or servers, etc. The LDAP directory includes the service access point for each agent. Send method operation  can be accomplished in a variety of ways. In one embodiment, a secure push operation is used to send the method call.","In another embodiment, the method call is stored in a predefined location for managed product and security management agent(s) is pinged in a notify agent operation . (\u201cPing,\u201d as used here, is a small innocuous transmission without a specific instruction.) A ping is interpreted by method adapter as a request to query.","Hence, in response to being pinged, method adapter of security management agent accesses the predefined storage location in memory of security management system A and securely pulls down the information sent by rules engine. In one embodiment, this is a generic XML command such as a call to a reload configuration method.","This method is particularly advantageous for transmitting information from security management system C to security management agents and is particularly secure, because if an interloper were to see a security management agent being pinged and tried to replicate the action, the security management agent would access security management system C. Consequently, the interloper obtains no useful information by replicating the observed ping action.","After method adapter receives the method call, method adapter transmits the method call to product control module for the specified managed product in call product operation . In operation , product control module maps the generic method call into a method call appropriate for managed product and issues that call.",{"@attributes":{"id":"p-0203","num":"0248"},"figref":["FIG. 8","FIG. 2"],"b":["150","155","155","155","810","155"]},"Event subscription filter  analyzes incoming events to security management system B and only passes those events for which system A registered to system A. In one embodiment, subscription filter  is implemented as a management server that logs valid events and forwards valid events to event sinks that have registered for particular events, e.g., places the events in a queue for the event sink. Hence, feedback and control system A is an event sink.","Security management system B, in one embodiment, makes a distinction between a generic command and a generic setting change by an action object in a rule for rules engine . A generic command is implemented as described above using a generic method call on a standardized generic interface. A generic setting change is made via a setting change request on a standardized interface and is directed to configuration adapter .","In this embodiment, each managed product is registered with security management system B and configuration data for each managed product is stored in a directory , as described more completely below. Hence, when configuration adapter  receives a generic setting change, e.g., close a port on all firewall managed products, configuration adapter  queries configuration data to identify all managed products affected by the generic setting change, and then appropriately changes the data in configuration data for the appropriate managed products in directory .","When the configuration data in directory  is updated, in one embodiment, configuration adapter  sends a successful setting change event to subscription filter  that in turn forwards the event to feedback and control manager A. The condition object that has a test for a successful setting change event has an action object that issues a load configuration method call to the appropriate security management agent for managed product for which the configuration setting was changed.","As described above, security management agent is pinged, and upon accessing the load configuration command, queries directory  to obtain the configuration data. The configuration data is securely downloaded, and the load configuration command is forwarded to control module for managed product ","While in this embodiment, feedback and control manager A was described in terms of a rules engine  that processed rules having condition object  and action object  pairings, in more general terms, feedback and control manager A is a dynamic security policy decision point that can be implemented as either an expert system or a rules engine.","Also, rules engine , while shown as a single entity, may be configured to include any desired combination of rules engines. For example, in , feedback and control manager B includes a plurality of rules engines _ to _(n+1).","A plurality of subscription filters _ to are also used, where each subscription filter subscribes to specific information, e.g., a set of events. For example, one subscription filter could subscribe to an antivirus incident family of events, a content filtering incident family of events, or a network intrusion family of events, etc. See for example . Subscription filter filters information that is output form rules engine _. Hence, subscription filters are used not only to select events, but also to select other information.","In one embodiment, security management system  is implemented using an N-tiered architecture.  is a diagram of an embodiment of security management system  (), e.g., security management system C, implemented in an N-tiered architecture.","In this embodiment, there are at least two database server tiers. A first database tier  manages repositories for incident data, logging and alerts. First database tier  includes a log database server A with a logged event SQL database A and an alert event database server B with alert event SQL database B.","A second database tier  is a directory tier, where managed product registration, configuration and security policy information is maintained. Second database tier  is completely independent from first database tier  providing different services and using completely different methods and data management tools.","A middle tier  of the N-tiered architecture includes at least one management server A that brokers requests for services made by managed products installed on the network. Middle tier , in some embodiments includes a plurality of management servers A, B.","Management server A receives, interprets and serializes all the service requests made via events from managed products and routs the events to the appropriate event sink or sinks, e.g., a database server, whether it is a directory server A, log database server A, an alert event database server B, and\/or security and feedback control system C. In this embodiment, management server A performs the function of subscription filter  ().","Management server A contains the logic for answering all of the \u201cwhat,\u201d \u201cwhere,\u201d and \u201chow\u201d questions related to the requested service. This means that the calling managed product has been completely freed from needing to know anything about the location and implementation of the service being called. Thus, a separate middleware tier has been established.","Yet another tier in the N-tiered architecture further separates managed products from management operations. This tier is the security management agent tier  that includes a first plurality of security management agents _, a second plurality of security management agents _ and security management agent _. Each security management agent of the security management agents are similar to the security management agents described above. See also,  and the description of  below.","In this example, there is a plurality of client managed nodes _ and each client managed node includes one security management agent _in first plurality of security management agents _. The managed products in at least one client node include managed product SAV, managed product SDF, and managed product SHIDS. An example of managed product SAV is an enterprise antivirus client. An example of managed product SCF is a client firewall application, and an example of managed product SHIDS is a host intrusion detection system.","In this example, there also is a plurality of server managed nodes _ and each server managed node includes one security management agent _in second plurality of security management agents _. The managed products in at least one server node include managed product SAV_Server, managed product SAV_Notes managed product ESM, and managed product IA\/NP. An example of managed product SAV_Server is an enterprise antivirus server. An example of managed product SAV_Notes is an enterprise antivirus server for the IBM Notes product. An example of managed product ESM is an enterprise security manager, and an example of managed product IA\/NP is an intruder alert and net prowler application.","Also, in this example, there is a gateway managed node _ that includes security management agent _. The managed products in this example for managed node _ include managed product SMS, managed product SWS, and managed product SEF. An example of managed product SMS is a mail security application. An example of managed product SWS is a web security application, and an example of managed product SEF is an enterprise firewall application.","Each security management agent _in agents _, _, _ is a thin, extensible UI-less process that is co-located on every host system, i.e., managed node, where managed products are installed. As described above and more completely below, each security management agent receives all service requests and events from all managed products running on the same managed node and routes the service requests and events to the appropriate management server. Security management agent likewise passes responses back to the calling managed product.","Yet another tier in N-tier security system management architecture is a management console  that provides administrators with navigation, configuration and reporting capabilities needed to administer all managed products installed on the network. In one embodiment, a web browser-based user interface is supplied for management console . Management console  runs independently from all other security management system elements and communicates directly with directory A containing product policy and configuration data and with the log and alert event databases A, B.","In one embodiment, administrative operations available through management console  include (1) browsing and selective viewing of managed objects, including systems on the network, sometimes called managed nodes, on which one or more managed products has been installed, (2) changing policies and configuration for deployed managed products, (3) performing queries and generating reports on managed objects, including managed products, and (4) browsing and selectively viewing log and alert events generated from managed products, including the query and reporting capability associated with logging and event services.","The user interface for management console  is easy-to-use, supplies rapid and flexible navigation capabilities, and includes operations that permit administrators to operate on all members of selected collections of managed objects using a single, simple transaction dialog. View and command scope are available based on the authorizations granted to an administrator.","Because, in one embodiment, HTTP is used for all communication between managed products and services provided by security management system C, e.g., security feedback and control system C, one or more web servers are used in every interaction between a managed products and security management system C. This is yet another tier in the architecture of security management system C.","The N-tier architecture of security management system C has at its core a communication infrastructure comprised of (1) an extensible security management agent that resides on each system that hosts at least one managed product and (2) one or more management servers distributed around the target network environment that, as mentioned above, broker the requests for services sent by security management agents on behalf of managed products.","In this embodiment, security management agent  () handles all of the data and command traffic between managed products installed on the local system and security management services on system C. Security management agent  packages and forwards requests for services and\/or events received from local managed products using mini HTTP server  and HTTP transport client .","Conversely, security management agent  routes data and commands from security management server A to the local managed products. In one embodiment, security management agent  also includes an extension, file transfer plug-in , that supports a standard file transfer protocol for both point-to-point file uploading and downloading, as well as multicast file download operations.","Security management agent  is installed along with a first managed product installed on any system, i.e., any managed node, connected to the network. In fact, managed products are installed as extensions , or plug-ins, to an agent module  of security management agent ","Other extensions to agent module  are added to security management agent  for other purposes. In fact, security management system C itself supplies agent extensions for key management service functions, such as logging and alerting extension , file transfer extension , and an application launch extension . Managed products may also supply applets for launch or agent extensions of their own.","Agent module  of security management agent  is started at computer boot up time, since security management agent  is available to process commands from security management system C as well as service extension requests. In this embodiment, agent module  maintains a key\/value configuration database (flat file) that can be used by extensions of agent module , as well as by agent module  itself, to store configuration parameters.","One of the uses of this storage is to store a prioritized list of directory addresses within security management services. This list can be edited by the administrator at the time security management agent  is deployed, and thereafter via the agent's entries in the directory, or by direct communication to security management agent  itself, i.e., security management agent  is effectively a managed product. Security management agent  connects to the list of directory addresses and, among other things, gets the address of one or more logging and event servers to which security management agent  posts information on behalf of managed product plug-ins.","Each managed product, sometimes called application, is assigned an application ID. When agent module  starts up, agent module  looks in the configuration database, which is in agent support files that include product provider registrations, for the names and locations of agent extensions and associates each agent extension with an application ID assigned to that agent extension. Commands received by agent module  are routed to the target extension via the application ID.","In one embodiment, agent module  is based on the CIMOM (Common Information Model Object Manager) architecture that is implemented using the JAVA programming language in one embodiment. (JAVA is a trademark of Sun Microsystems, of Santa Clara, Calif., USA.) With the CIMOM architecture, security management agents are extensible by means of a well-documented interface for the creation of providers. Providers can be implemented to perform various operations.","The Common Information Model (CIM), published by the Distributed Management Task Force (DMTF), is an information model that covers all network objects and collections involved in managing distributed systems. In one embodiment, CIM is at version 2.2 and version 2.6 for the specification and schema, respectively, was used.","See for example, , Ver. 2.2, Distributed Management Task Force, Inc., Portland, Oreg., Jun. 14, 1999, which is incorporated herein by reference to demonstrate the level of skill in the art. As is known to those of skill in the art, CIM is, first of all, a declarative modeling language, and secondly, a set of core and common schema for network management entities ranging from systems and devices to networks, users, policies, events and methods. In this embodiment, CIM is used as the foundation of the management model of security management system C.","In addition to CIM, Web Based Enterprise Management (WBEM) and Directory Enabled Networks (DEN) are utilized. Before considering  in further detail, CIM, WBEM, and DEN are briefly described.","WBEM uses CIM as its information model, along with its schema, and defines CIM mappings on XML and the transport of these CIM mappings using XML over HTTP. This allows managed entities to inter-operate in heterogeneous environments. In this embodiment, WBEM is used in all security management services applications, and for management console , in particular.","Web-Based Enterprise Management (WBEM) is a set of management and Internet standard technologies that have been defined and developed to unify the management of enterprise computing environments. A core set of standards that make up WBEM. These standards include (1) the Common Information Model (CIM) standard already described above; (2) an encoding specification, the \u201cxmlCIM Encoding Specification;\u201d and (3) a transport mechanism, \u201cCIM Operations over HTTP.\u201d","The CIM schema developed in one embodiment of this invention includes models for systems, applications, networks (LAN) and devices. The CIM schema enables applications from different developers on different platforms to describe management data in a standard format so that it can be shared among a variety of management applications. Specifically, in one embodiment, the CIM modeling language is used to create new hierarchical event structures for security events as described more completely below.","The xmlCIM Encoding Specification defines XML elements, written in Document Type Definition (DTD), which can be used to represent CIM classes and instances. The CIM Operations over HTTP specification defines a mapping of XML-encoded CIM operations onto HTTP that allows implementations of CIM to interoperate in an open, standardized manner and completes the technologies that support WBEM.","Most operating systems, and their management tools, support CIM and WBEM. For example, Microsoft Corp. delivers a CIM object manager with its WINDOWS operating systems as part of its Windows Management Instrumentation (WMI) implementation of CIM. The CIM object manager supports a provider architecture where in-process COM servers (DLLs) that are mated to the CIM descriptions for a product or service are loaded into the WMI object manager. A managed product group would write the COM server that knows how to communicate with the managed product either directly, or with the managed product's native configuration format.","Similarly, Sun Microsystems provides a WBEM SDK and object manager for the Solaris operating systems. Tivoli is planning to ship its own object manager with future versions of TME. The Sun and Tivoli provider architectures are Java based, while Microsoft uses a COM provider architecture. Note that CIM 2.3 and higher includes a set of classes that map CIM objects to an LDAP directory as part of the DEN initiative. In this embodiment, each product specific operation control module includes CIM client capability.","In the embodiment of , for registration, policy and configuration data management for managed products, directory services are used. The Lightweight Directory Access Protocol (LDAP) specification is used to implement directory services. The DEN includes a set of mappings CIM objects into the object classes and hierarchical structures used by LDAP directories.","DEN also specifies a way to configure and maintain network nodes using standard directory services. Hence, in the embodiment of  security management system C uses the following widely-used standards-based models and implementations:\n\n","Hence, in this embodiment, the event hierarchy, written using the CIM modeling language, is be used for tier , the alert event and logging system of security management system C, and the settings and configuration schema for product configuration.","Typically, administrators manage users and machines. For users, administrators manage authentication, authorizations and policies, most often by way of user groups and roles. The machines administrators manage include client systems, file and application servers, gateways and the array of commonly-used network devices, including but not limited to routers, switches, hubs, etc. Security management system C is flexible and versatile so that groups of users, groups of servers, groups of both, and groups of groups can be maintained and managed. CIM encompasses this diversity and provides for user-based management where appropriate and for machine-based management where appropriate.","CIM is also leveragable. CIM is extended by managed products for use in implementing product-specific management components.","Security management systems C provides a unified policy configuration management system that is used across all managed products. The term, policy, generally includes (1) a set of managed objects, or types of objects, to which the policy applies, (2) a set of specific conditions under which the policy applies and (3) the specific rules or actions to be applied when these conditions are either met, or not met, as the case may be.","In another embodiment, policy configuration management is based on a simpler definition of policy. In this embodiment, \u201cpolicy\u201d simply means a named information structure that (1) applies to one policy group only and (2) specifies one or more product services, along with the configurations and permissions for those product services, to be applied to members of the target policy group.","A configuration is defined as a named aggregate of settings for one particular product, feature or service. While CIM can incorporate settings from multiple products into a single configuration, security management system C, in this embodiment, limits configurations to settings for a single product.","Hence, a policy group is simply a collection of managed objects, usually users or systems, which can be managed under the same policy. Any defined collection of managed objects is called a group in CIM, and may be a collection of users, systems, configurations, a combination of these elements, or even other groups. There are virtually no restrictions in CIM for defining a group of managed objects. However, for security management system A, policy groups do have definite rules. A policy group cannot contain other policy groups and a particular managed object can belong to one and only one policy group.","For example, a company might have a policy group named Santa Monica Human Resources. This policy group could be associated with a higher level human resources group, but in security management system C, cannot be contained by the higher level human resources group. For this policy group there might be a policy named Security_A. Security_A might specify the set of security products that must be installed on a managed computer contained in the Santa Monica HR policy group, and would specify the configurations that are enforced for these products. (Note that the policy group in this example is composed of managed computers. Alternatively, a policy group could contain users and a policy for this group might define the products that must be installed on a computer logged into by a user in the policy group.)","This definition of policy is very simply structured and lends itself to simple implementation. It does not include the concept of conditions under which the policy is to be applied. Instead, a security management system policy, in this embodiment, applies unconditionally to one policy group. Since there are no conditions associated with policies, a rules-based approach to defining or implementing policies is not supported. However, with security feedback and control system C, conditions under which a policy is implemented can be considered and implemented.","In this embodiment, distributed directories are used for managing users and policies. The Internet standard in distributed directories is Lightweight Directory Access Protocol (LDAP) compliant directories. Security management system C, in this embodiment, uses a LDAP directory-based architecture.","In this embodiment, LDAP directories are used for managed object database server functions. Managed objects in these directory services include systems, software products and services, policies, configurations, users and groups of these managed objects. Security management system services and managed products use these directories, for example, to do software registration, software configuration, system and software discovery, and user authentication and authorization.","Directory A provides fast access to data that is used frequently but is not changed often. Directory A provide for immediate and continuous availability of data through replication. Directory A supports partitioning of information to enable load balancing and scaling, and to accommodate differences in network bandwidth and connectivity over geographically separate parts of an enterprise.","As stated above, DEN includes a set of classes for mapping CIM objects to LDAP directories. These mappings are used by security management system directory-based services.","Security management system services use CIM-based LDAP directories for managed collection data. The term for a managed collection is simply \u201cgroup.\u201d The primary client of this schema is middleware services that are described more completely below and management console .","From management console , managed groups are created and deleted. Entries are added, changed, moved from one group to another, etc. In addition, data is imported from existing directories. For example, existing WINDOWS NT Domains can be used to populate security management system directories with initial user groups and to synchronize changes.","Managed products also use CIM-based LDAP directories for user and application policy data. The primary clients of this schema are the security management tools, including those within managed products, that can set or edit policies, and the managed products that can query and apply policies in their own operations, e.g., security feedback and control system C or for the users that attach to those products, if they are user-based.","For more volatile data, usually stored in databases or other proprietary formats, pointers are placed in the directory rather than the data itself. Conversely, tags can be placed in existing customer directories for objects that are managed by security management system C. Rapidly changing and transaction-type data are stored in a SQL database. For security management system C, log and alert data in particular are better suited to SQL databases than to directories. Log and alert data is being continuously written in significant volumes and the read-versus-write ratio is much lower than is normally associated with directories.","Furthermore, reports across managed groups, and managed products can be created easily using standard reporting tools if product logs and alert events are being written or forwarded to an SQL database. Databases can be replicated using their built-in replication facilities (these are non-standard) for consolidation or for wider and more immediate availability. Managed products can use these databases for their own purposes as well.",{"@attributes":{"id":"p-0265","num":"0316"},"figref":["FIG. 12","FIGS. 10 and 12A"],"b":["150","1210","10200","12220","12500","12500","10220","12210","10200","10116","10111"]},"An optional load balancing server  is positioned between web server  and management server A. This is a deployment option that balances the processing of service requests across a specified set of management servers, thus assuring the most rapid processing possible for requests for services.","As mentioned above, management servers \u201cbroker\u201d all requests for security management services. Management server A selects the actual server to be used to provide the desired service. In addition, management server A supplies all of the information concerning where on the network the desired server is located, what internal naming conventions are to be used for objects stored in directories and other any parametric, location and the services they are requesting.","In one embodiment, for directory A, a namespace application programming interface (API) layer  actually defines the physical location of directory objects, and the related naming conventions (relative distinguished name) for these objects, and automatically provides the linkage to them for calling applications. In one embodiment, namespace API layer  is a set of classes implemented in the JAVA programming language that abstract all of the lower-level methods for the CIM-LDAP mapping classes. Namespace API layer  is exposed to the security management agents, e.g., security management agent , and shields security management agent , and consequently, managed product , from having to know any of the \u201cwhere,\u201d \u201cwhat\u201d and \u201chow\u201d of the services that are requested. Namespace API layer  actually defines the physical location and the related naming conventions (relative distinguished name) for new directory objects.","Below namespace API layer  is another API layer, a LDAP wrapper API layer . LDAP wrapper API layer  wraps the actual program code that interprets requests for services and transforms the requests into lower-level calls used to actually access the CIM-based LDAP directories. \u201cWrapping\u201d in this context means providing simplified access to a complex set of services where this simplified access method has been tailored for a specific type or set of applications. In one embodiment, security management agents or managed products do not use this wrapper layer directly, but circumstances may arise that require this use. LDAP wrapper API layer  is also built on a set of classes implemented in the JAVA programming language.","A third layer is the actual LDAP access code, a LDAP services layer , which performs the low-level calls to CIM-LDAP directory server A. In this embodiment, the access to LDAP directories is on a round robin basis. Direct calls to the directory server are physically possible, but in one embodiment are not permitted. Hence, in this embodiment, management server A accesses directory services using three distinct functional layers to complete a service request.","In the embodiment of , layers  to  are the same as described for  and that description is incorporated herein by reference. However, in this embodiment, configuration adapter  () is shown as configuration adapter . Configuration adapter  utilizes layers , , and  as needed to modify configuration information in the LDAP directories.","In addition to feedback and control service C and the directory service, another service provided by security management system C is a logging and alerting service. In this embodiment, the security management agent on each managed node on the network includes a client service extension that provide a common logging and alerting function for all managed products associate with that security management agent. See .","Logging and event service requests sent by security management agents (), as described above, are also brokered by a management server, e.g., server A and sent to the servers performing these services, e.g., server A or B. In this embodiment, all security management services are designed to be stateless. Neither the security management agent nor management server A maintains any state-related information on behalf of either managed products or security management services. State information is maintained by the directory and the database.","As explained more completely below, a minimum schema (database tables, and table fields) required for a managed product to participate in the common logging and alerting system is defined by a security base event package. A managed product may define product specific additional fields, if necessary, for its own purposes via a custom event that extends a security base event. In most cases, the standard schema suffices for any managed application.","In this embodiment, all events are posted by way of HTTP POST directives sent by logging and alerting extension  () to a management server A that is an extension of web server . Suitable web servers for use in this embodiment include the IIS web server, the Apache web server, or any other full-featured web server. Web server  receives the relatively short (1-3 KB) events and routes the events to either or both of an alert event database server B, which in this embodiment is implemented as alert servlet B and logging database server A, which is implemented as logging servlet A.","In one embodiment, servlets A and B are implemented as JAVA 2 Enterprise Edition (J2EE) servlets as part of a web application. Logging servlet A processes the events received and writes the events to the appropriate tables in the designated SQL database A.","In one embodiment, database A resides on the same server as logging servlet A, which is a minimum installation. Typically, multiple managers are located on different systems and these different systems are different from the system having the database.","Events that are marked as alert events are also sent by alert servlet B to an alert notification manager , which, in this embodiment, is also running on management server A. Managed product  can mark certain events as alert-able, and can supply information about the severity of the event, based on configurable settings. Likewise, based on configurable settings, alert notification manager  can assign the type of notification associated with events of a particular severity, or from a particular managed product at a specified severity level.","For inter-operability as well as redundancy, security management agent  supports the firing of Simple Network Management Protocol (SNMP) traps, as does alert notification manager , in this embodiment. This allows managed products, e.g., managed product , installed with security management agent  to operate in a standalone manner. This means that, during failures or maintenance of security management system servers, e.g., server A, log and alert messages are still sent directly to an alert management system such as any SNMP manager that collects traps.","In this embodiment, a Management Information Base (MIB) is defined and loaded into the database of system  so that system  recognizes traps sent from security management agent  and understands their information structure. Traps are sent for conditions where no manager connection is available, and subsequently for events having a predefined severity. For example, for these events, the event ID and severity code are sent.","Thus, when agent  of security management agent  receives an alert, for example, from managed product  via log\/event provider  and a connection with web server  is unavailable, agent  passes the alert to SNMP trap extension . SNMP trap extension  forwards the alert to SNMP agent  that in turn transfers the alert to SNMP manager . SNMP manager  forwards the alert to any SNMP manager that collects traps, such as HP OpenView ITO system . Hence, these messages bypass management servers and related brokering services of security management system C. Accordingly, the SNMP infrastructure provides a back-up system for managed product . The SNMP, SNMP agents, SNMP managers, MIBs, and systems that utilize SNMP, such as HP OpenView ITO are known to those of skill in the art and so are not considered further.","Each managed product, e.g., managed product  may create its own database table, distinct from other managed products, within central database A. Alternatively, a managed product extends an existing schema for a reporting family. The table stores tokens sent from the logging and alerting provider  on behalf of managed product  to logging servlet A. In addition, language translation tables for the tokens are created for each translated language. In one embodiment, a key to a local definition table includes a language identifier and an event type identifier. The language is used to select a local definition table, and the event type identifier is use to select a particular item in the local definition table. At report generation time, SQL views are populated that query one or more product token and translation tables for a report in a particular language. These views and queries may be stored as for future reporting.","For example, an antivirus application SAV for Microsoft WINDOWS NT Server has a table that has fields for its product ID, platform ID, server group, host machine, log messages, virus events, etc. An antivirus application for Microsoft Exchange has a different table with similar information. All of these tables have the same table schema. Hence, a report can be later generated that indicates the number of virus events across both products, for a particular week, or for a particular server group.","The logging and event API for a managed product can be relatively simple, with delimited fields within a line-feed terminated record passed to the logging and alerting provider  in security management agent . The mandatory fields in the event are parsed in a particular order, including a time stamp, before any optional fields defined by the managed product.","Among the mandatory fields are an assigned application ID and log record ID scoped within the package ID. These log record IDs must be unique within the package ID scope and are part of table indexes created for the token and translation tables in the database. This allows management console  the ability to provide some rudimentary event correlation configuration by assigning particular alert-able records with a certain severity level to a specific notification action. It also allows translation of the log into a spoken language on the fly using the language identifier and event type identifier described above.","For example, a severity  alert-able event for one product might require an email to a different person than the same type of event for a different product. At a more granular level, each event for a particular managed product corresponds to an alert-able record with a specific ID, each of which could be handled separately.","In one embodiment, a security base event package  () includes events that are likely to be common to all vendor products managed by security management system , A, B, C. These events include simple events like Application Stop, Application Start, Application Update, Configuration Update, etc.","In the following description of one embodiment of hierarchical event structure suitable for use with this invention, security management system  is used as a shorthand for security management system , A, B, C, and should be interpreted as indicating that the hierarchical event structure is suitable for use with all embodiments of the security management system.","Similarly, reference numerals from  are used to relate the description to the drawings. Again, this is illustrative only and is not intended to limit the use of the events to the embodiment of . In view of the following description, the hierarchical event structure can be implemented in any desired network, system, or application to transfer information in a structured platform independent manner in addition to the various embodiments of the security management system described herein.","Security Base Event Package P A security base event package  () contains a security base event class CLASS_BASE. In this embodiment, all other event classes extend security base event class CLASS_BASE. This means that the fields in security base event class CLASS_BASE are common to all events in security management system . Upon the creation of an event by a product specific operation control module , module first populates the security base event class fields, then adds the data to populate additional fields specific to the event class instantiated for the managed product.","TABLE 1 and  present one embodiment of a base class hierarchy in security base event package  and event IDs used for objects of each class in the hierarchy. Herein, and in security management system , event IDs are used to distinguish between events and to uniquely name each event.",{"@attributes":{"id":"p-0292","num":"0343"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event Class","Event IDs"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CLASS_BASE","EVENT_APPLICATION_START"]},{"entry":[{},"EVENT_APPLICATION_STOP"]},{"entry":["CLASS_APP_UPDATE","EVENT_APPLICATION_UPDATE"]},{"entry":[{},"EVENT_APPLICATION_UPDATE_FAILED"]},{"entry":["CLASS_CONFIG_UPDATE","EVENT_CONFIGURATION_CHANGE"]},{"entry":[{},"EVENT_CONFIGURATION_CHANGE_FAILED"]},{"entry":["CLASS_DEF_UPDATE","EVENT_VIRUS_DEFINITION_UPDATE"]},{"entry":[{},"EVENT_FIREWALL_RULE_UPDATE"]},{"entry":[{},"EVENT_VULNERABILTIY_DEFINITION_UPDATE"]},{"entry":[{},"EVENT_DICTIONARY_UPDATE"]},{"entry":[{},"EVENT_LIST_UPDATE"]},{"entry":[{},"EVENT_VIRUS_DEFINITION_UPDATE_FAILED"]},{"entry":[{},"EVENT_FIREWALL_RULE_UPDATE_FAILED"]},{"entry":[{},"EVENT_VULNERABILTIY_DEFINITION"]},{"entry":[{},"UPDATE_FAILED"]},{"entry":[{},"EVENT_DICTIONARY_UPDATE_FAILED"]},{"entry":[{},"EVENT_LIST_UPDATE_FAILED"]},{"entry":["CLASS_NETWORK","EVENT_NETWORK_EVENT"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In this embodiment, for each event class, an instance of the event class includes a corresponding event identifier (ID), an event category and an event severity. An embodiment of the event classes and events, in a plurality of event packages, including descriptions and data types of the fields for each event class is presented below. The names of the event classes, events, and data types as well as the identifiers for each are illustrative only and are not intended to limit the invention to the specific names and identifiers used herein.","Moreover, each table that presents the fields included in a particular event class represents a structure in a memory for each instance of the class. The memory-based structure contains information for a particular event. Moreover, the various views presented below also represent memory structures with information that can be used to generate displays or can be used as input to rules engines, for example, for feedback and control, or for further processing of the security information.","Security Base Event Class","Security base event class CLASS_BASE has, in this embodiment, a predefined event class identifier, e.g., . Event objects, that are instantiations of security base event class CLASS_BASE include event EVENT_APPLICATION_START (), an application start event; and event EVENT_APPLICATION_STOP, an application stop event. (Here and below, the event ID is used as a reference numeral for the event.) The event category for both events is category CAT_APPLICATION. The event severity for both events is severity SEV_INFORMATIONAL","Base Class Fields","TABLE 2 presents one embodiment of the fields in security base event class CLASS_BASE. The type of each field also is presented in TABLE 2. A description of the value in each field follows TABLE 2.  illustrates a security base event memory structure  stored in a memory  that includes fields  of TABLE 2. Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0297","num":"0348"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_EVENT_ID","id"]},{"entry":[{},"FIELD_EVENTCLASS_ID","id"]},{"entry":[{},"FIELD_PRODUCT_ID","id"]},{"entry":[{},"FIELD_PRODUCT_VERSION","version"]},{"entry":[{},"FIELD_SWFEATURE_ID","id"]},{"entry":[{},"FIELD_MACHINE","info"]},{"entry":[{},"FIELD_MACHINE_IP","info"]},{"entry":[{},"FIELD_MACHINE_SUBNET","info"]},{"entry":[{},"FIELD_MACHINEID","info"]},{"entry":[{},"FIELD_MACHINE_MAC","info"]},{"entry":[{},"FIELD_EVENT_DT","date"]},{"entry":[{},"FIELD_CREATE_DT","date"]},{"entry":[{},"FIELD_POST_DT","date"]},{"entry":[{},"FIELD_LOGGED_DT","date"]},{"entry":[{},"FIELD_DATE_ADJUST","date"]},{"entry":[{},"FIELD_CATEGORY_ID","id"]},{"entry":[{},"FIELD_SEVERITY","int"]},{"entry":[{},"FIELD_DOMAIN","info"]},{"entry":[{},"FIELD_USER_NAME","info"]},{"entry":[{},"FIELD_EVENT_DESC","info"]},{"entry":[{},"FIELD_ORGUNIT","info"]},{"entry":[{},"FIELD_CONFIGURATION","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"An event identifier value is stored in an event identifier field FIELD_EVENT_ID. In one embodiment, the event identifier value is supplied using a create event function in an API that creates an event in base class package , or alternatively another event that inherits from security base event class CLASS_BASE, but is not included in base class package .","A class identifier is stored in an event class identifier field FIELD_EVENTCLASS_ID. In this embodiment, the class ID is defined in a header file for the event package containing the event. The class ID value is supplied by the create event function. A product version string is stored in a product version field FIELD_PRODUCT_VERSION. This is the initial managed product version in most instances.","A software feature ID is stored in a software feature identifier field FIELD_SWFEATURE_ID. The software feature ID is defined in header file for managed product in one embodiment. Each managed product has at least one software feature ID defined for logging and configuration purposes. Additional software feature IDs can be defined within an ID range for managed product . In one embodiment, the value of the software feature ID is supplied by managed product using a client initialization function.","A computer name of the computer on which managed product is running and\/or operating, e.g., a name of the managed node, is stored in a machine field FIELD_MACHINE. The computer IP address on which managed product is running and\/or operating is stored in a machine address field FIELD_MACHINE_IP. A computer IP subnet, to which the computer on which managed product is running and\/or operating belongs, is stored in a machine subnet field FIELD_MACHINE_SUBNET.","An identifier for the computer on which managed product is running and\/or operating is stored in a machine identifier field FIELD_MACHINEID. The identifier stored in field FIELD_MACHINEID is used by security management system . A MAC address of the network card in the computer on which managed product is running and or operating is stored in a machine MAC address field FIELD_MACHINE_MAC.","Field FIELD_EVENT_DT stores the date and time the event is received by security management agent . The date and time is considered the data and time that the event occurred.","Filed FIELD_CREATE_DT is the date and time agent created its own record for the event. This data is supplied by agent ","Field FIELD_POST_DT stores the date and time the event was cached by the logging service on the server, i.e., posted.","Field FIELD_LOGGED_DT stores the date and time the event was logged, i.e., put in the database by the logging service on the server.","Data adjust field FIELD_DATE_ADJUST stores a number of seconds that the values stored in fields FIELD_EVENT_DT and FIELD_CREATE_DT were adjusted to normalize the client date with the date of security manager A. In the embodiment of , this data is supplied by logging servlet A.","Event category identifier field FIELD_CATEGORY_ID stores a category of the event. A category value is supplied by managed product using a create event function. In one embodiment, the event category is represented by an enumerated value that in turn represents one of the categories in TABLE 3. In this embodiment, the categories include application, communication, quality of service, device, environment, security and diagnostic.","The categories presented in TABLE 3 are illustrative only and are not intended to limit the invention to this specific set of categories. In view of this disclosure, those of skill in the art can define a set of categories suitable for use with a particular embodiment of security management system .",{"@attributes":{"id":"p-0310","num":"0361"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Category Value","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CAT_APPLICATION","Application activities"]},{"entry":[{},{},"including software or"]},{"entry":[{},{},"processing faults."]},{"entry":[{},"CAT_COMMUNICATIONS","Procedures and or"]},{"entry":[{},{},"processes required to"]},{"entry":[{},{},"convey information from"]},{"entry":[{},{},"one point to another"]},{"entry":[{},"CAT_QOS","Degradation or errors in"]},{"entry":[{},{},"performance or function."]},{"entry":[{},"CAT_DEVICE","Equipment or hardware"]},{"entry":[{},{},"fault."]},{"entry":[{},"CAT_ENVIRONMENT","Condition relating to an"]},{"entry":[{},{},"enclosure in which"]},{"entry":[{},{},"hardware resides or"]},{"entry":[{},{},"other environmental"]},{"entry":[{},{},"considerations."]},{"entry":[{},"CAT_SECURITY","Security violations,"]},{"entry":[{},{},"detection of viruses,"]},{"entry":[{},{},"and similar issues."]},{"entry":[{},"CAT_DIAGNOSTIC","Software application"]},{"entry":[{},{},"operation tracing and"]},{"entry":[{},{},"debugging. Severity is"]},{"entry":[{},{},"understood to mean trace"]},{"entry":[{},{},"level."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Event severity field FIELD_SEVERITY (TABLE 2) stores a severity of the event. The event severity is supplied by managed product using a create event function. In one embodiment, the event severity is represented by an enumerated value that in turn represents one of the severities in TABLE 4. In this embodiment, the severities include informational, warning, minor, major, critical, and fatal.","The severities presented in TABLE 4 are illustrative only and are not intend to limit the invention to this specific set of severities. In view of this disclosure, those of skill in the art can define a set of severities suitable for use with a particular embodiment of security management system .",{"@attributes":{"id":"p-0313","num":"0364"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Severity Value","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SEV_INFORMATIONAL","Purely informational"]},{"entry":[{},{},"event"]},{"entry":[{},"SEV_WARNING","Feedback and control"]},{"entry":[{},{},"system, or"]},{"entry":[{},{},"alternatively, user"]},{"entry":[{},{},"decides if action is"]},{"entry":[{},{},"needed"]},{"entry":[{},"SEV_MINOR","Action needed but"]},{"entry":[{},{},"situation not serious at"]},{"entry":[{},{},"this time"]},{"entry":[{},"SEV_MAJOR","Action needed NOW"]},{"entry":[{},"SEV_CRITICAL","Action needed NOW and"]},{"entry":[{},{},"the scope is broad."]},{"entry":[{},"SEV_FATAL","Error occurred but too"]},{"entry":[{},{},"late to take remedial"]},{"entry":[{},{},"action"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Domain field FIELD_DOMAIN (TABLE 2) stores a domain of a computer running managed product . The value stored in field FIELD_DOMAIN is supplied by the managed product. In another embodiment (not shown), both the domain of the managed product and the domain of the security agent are stored in the base event. User name field FIELD_USER_NAME stores a user name of a user logged on to the computer. This value stored in FIELD_USER_NAME is also supplied by security agent ","A description of the event, if needed, is stored in an event description field FIELD_EVENT_DESC. An organizational unit of the machine on which managed product is running is stored in organizational unit field FIELD_ORGUNIT. The information stored in organizational unit field FIELD_ORGUNIT is provided by security management agent ","Configuration field FIELD_CONFIGURATION is an additional field provided for storing information indicating the configuration name (HR settings, Marketing settings.) used by the managed product at the time of the event. The information in this field is used for reporting purposes, in one embodiment. As explained more completely in copending, commonly filed and commonly assigned U.S. patent application Ser. No. 10\/660,422, entitled \u201cConfiguration System and Methods Including Configuration Inheritance and Revisioning,\u201d of Paul M. Agbabian and David R. Hertel, which is incorporated herein by reference in its entirety, for an event, the information in this field is used to cross-reference into a configuration revision history and if available, an inheritance tree at the time of the event to determine the effective configuration.","Application Update Class","Application update class CLASS_APP_UPDATE () inherits from security base event class CLASS_BASE. In this embodiment, application update class CLASS_APP_UPDATE has a predefined event class identifier, e.g.,  Event objects, that are instantiations of application update class CLASS_APP_UPDATE include event EVENT_APPLICATION_UPDATE (), an application update succeeded event; and event EVENT_APPLICATION_UPDATE_FAILED, an application update failed event.","For event EVENT_APPLICATION_UPDATE, the event category is category CAT_APPLICATION (See TABLE 3). The event severity is severity SEV_INFORMATIONAL. (See TABLE 4).","For event EVENT_APPLICATION_UPDATE_FAILED, the event category is category CAT_APPLICATION. The event severity is severity SEV_WARNING.","In addition to the fields presented in TABLE 2 for security base event class CLASS_BASE, application update event class CLASS_APP_UPDATE adds the fields presented in TABLE 5 to the fields for security base event class CLASS_BASE. The type of each field also is presented in TABLE 5. A description of the value in each field follows TABLE 5.",{"@attributes":{"id":"p-0321","num":"0372"},"figref":"FIG. 16B","b":["16600","16100","16500","15500","16500","16600","16100"]},{"@attributes":{"id":"p-0322","num":"0373"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_APP_PREV_VERSION","Version"]},{"entry":[{},"FIELD_APP_CURR_VERSION","Version"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A previous version number of managed product is stored in an application previous version field FIELD_APP_PREV_VERSION. (TABLE 5) A current version number of managed product is stored in an application current version field FIELD_APP_CURR_VERSION.","In one embodiment, an application update event is used for revision updates. For example, an application continues to report 1.0 in field FIELD_PRODUCT_VERSION as its base version, reports 1.0.1 in field FIELD_APP_PREV_VERSION as its previous version, and reports 1.0.2 in field FIELD_APP_CURR_VERSION as its current version.","TABLE 6 is an example of a view  () that uses the information in application update event  (). A view is a database object that is defined for an event class by a managed product , as described more completely below. View , which is stored in memory , can be used to retrieve information for display, or a report, or input, for example, to a rules engine as illustrated in TABLE 6.",{"@attributes":{"id":"p-0326","num":"0377"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Data Retrieved with View"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Application"]},{"entry":["FIELD_SEVERITY","1"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Application Update Succeeded"]},{"entry":["FIELD_PRODUCT_ID","SAV"]},{"entry":["FIELD_MACHINE","Bluegill"]},{"entry":["FIELD_PRODUCT_VERSION","1.0"]},{"entry":["FIELD_APP_PREV_VERSION","1.0.1"]},{"entry":["FIELD_APP_CURR_VERSION","1.0.2"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Configuration update class CLASS_CONFIG_UPDATE () inherits from security base event class CLASS_BASE. In this embodiment, configuration update class CLASS_CONFIG_UPDATE has a predefined event class identifier, e.g., .","Event objects, which are instantiations of configuration update class CLASS_CONFIG_UPDATE, include event EVENT_CONFIGURATION_CHANGE (), a configuration change succeeded event; and event EVENT_CONFIGURATION_CHANGE_FAILED, a configuration change failed event.","For event EVENT_CONFIGURATION_CHANGE, the event category is category CAT_APPLICATION. (See TABLE 3.) The event severity is severity SEV_INFORMATIONAL. (See TABLE 4.)","For event EVENT_CONFIGURATION_CHANGE_FAILED, the event category is category CAT_APPLICATION. The event severity is severity SEV_WARNING.","In addition to the fields presented in TABLE 2 for security base event class CLASS_BASE, configuration update event class CLASS_CONFIG_UPDATE () adds the fields presented in TABLE 7 to the fields for security base event class CLASS_BASE. The type of each field also is presented in TABLE 7. A description of the value in each field follows TABLE 7.",{"@attributes":{"id":"p-0332","num":"0383"},"figref":"FIG. 17B","b":["17600","15100","17600","15500","17500","17600","17100"]},{"@attributes":{"id":"p-0333","num":"0384"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_CONFIG_NAME","info"]},{"entry":[{},"FIELD_CONFIG_REVISION","info"]},{"entry":[{},"FIELD_CONFIG_SOURCE","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A name of the configuration is stored in a configuration name field FIELD_CONFIG_NAME. A revision indicator for the configuration of managed product is stored in a configuration revision field FIELD_CONFIG_REVISION. A source of the configuration change is stored in configuration source field FIELD_CONFIG_SOURCE. For example, the source can be security management system , security feedback and control system , a GUI for managed product , or some other mechanism.","Definition Update Class","Definition update class CLASS_DEF_UPDATE () inherits from security base event class CLASS_BASE. In this embodiment, configuration update class CLASS_DEF_UPDATE has a predefined event class identifier, e.g., .","Event objects, which are instantiations of configuration update class CLASS_DEF_UPDATE, include:\n\n","For events EVENT_VIRUS_DEFINITION_UPDATE, EVENT_FIREWALL_RULE_UPDATE, EVENT_VULNERABILTIY_DEFINITION_UPDATE, EVENT_DICTIONARY_UPDATE, and EVENT_LIST_UPDATE, the event category is category CAT_APPLICATION. (See TABLE 3.) The event severity is severity SEV_INFORMATIONAL. (See TABLE 4.)","For events EVENT_VIRUS_DEFINITION_UPDATE_FAILED, EVENT_FIREWALL_RULE_UPDATE_FAILED, EVENT_VULNERABILTIY_DEFINITION_UPDATE_FAILED, EVENT_DICTIONARY_UPDATE_FAILED, and EVENT_LIST_UPDATE_FAILED, the event category is category CAT_APPLICATION. The event severity is severity SEV_WARNING.","In addition to the fields presented in TABLE 2 for security base event class CLASS_BASE, configuration update event class CLASS_DEF_UPDATE (, A, B) adds the fields presented in TABLE 8 to the fields for security base event class CLASS_BASE. The type of each field also is presented in TABLE 8. A description of the value in each field follows TABLE 8.",{"@attributes":{"id":"p-0340","num":"0401"},"figref":"FIG. 18C","b":["18600","18100","18600","15500","18500","18600","18100"]},{"@attributes":{"id":"p-0341","num":"0402"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 8"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Fields","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_PREV_VERSION","version"]},{"entry":[{},"FIELD_PREV_VERSION_DATE","date"]},{"entry":[{},"FIELD_PREV_VERSION_INFO","info"]},{"entry":[{},"FIELD_CURR_VERSION","version"]},{"entry":[{},"FIELD_CURR_VERSION_DATE","date"]},{"entry":[{},"FIELD_CURR_VERSION_INFO","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A previous version of the definition is stored in a previous version definition field FIELD_PREV_VERSION. In one embodiment, the format of this field is YYYYMMDD.RRR, where YYYY is the year, MM is the month, DD is the day and RRR is the number of the previous version of the definition.","A date associated with the previous version, if any, is stored in a date of previous version definition field FIELD_PREV_VERSION_DATE. Typically, a previous version number is stored in a previous version definition info field FIELD_PREV_VERSION_INFO. The previous version number, e.g., the number of the previous revision, is in the RRR portion of the value stored in field FIELD_PREV_VERSION. If the version numbering scheme does not include revision numbers, the previous version string itself is stored in this field. This field is not translated.","A current version of the definition is stored in a current version definition field FIELD_CURR_VERSION. In one embodiment, the format of this field is YYYYMMDD. RRR, where YYYY is the year, MM is the month, DD is the day and RRR is the number of the current version of the definition.","A date associated with the current version, if any, is stored in a current version definition date field FIELD_CURR_VERSION_DATE. Typically, a current version number is stored in a current version definition info field FIELD_CURR_VERSION_INFO. The current revision number is in the RRR portion of the value stored in field FIELD_CURR_VERSION. If the version numbering scheme does not include revision numbers, the current version string itself is stored in this field. This field is not translated.","TABLE 9 is an example of a view  () that can be used to extract information in application update event  (), when that event is for example a virus definition update event EVENT_VIRUS_DEFINITION_UPDATE. View , which is stored in memory , can be used to retrieve information for display or a report or input, for example, to a rules engine as illustrated in TABLE 9.",{"@attributes":{"id":"p-0347","num":"0408"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Retrieved field Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Application"]},{"entry":["FIELD_SEVERITY","1"]},{"entry":["FIELD_EVENT_DT","Jan. 11, 2000, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Virus Definition Update"]},{"entry":[{},"Succeeded"]},{"entry":["FIELD_PRODUCT_ID","SAV"]},{"entry":["FIELD_MACHINE","Bluegill"]},{"entry":["FIELD_PRODUCT_VERSION","1.0"]},{"entry":["FIELD_PREV_VERSION","19981230.002"]},{"entry":["FIELD_CURR_VERSION","19991231.021"]},{"entry":["FIELD_PREV_VERSION_DATE","Dec. 30, 1998, 11:20:00 PM"]},{"entry":["FIELD_CURR_VERSION_DATE","Dec. 31, 1999, 1:20:00 AM"]},{"entry":["FIELD_PREV_VERSION_INFO","002"]},{"entry":["FIELD_CURR_VERSION_INFO","021"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Network CLASS_NETWORK () inherits from security base event class CLASS_BASE. In this embodiment, application network class CLASS_NETWORK has a predefined event class identifier, e.g., .","Event objects, that are instantiations of network class CLASS_NETWORK include event EVENT_NETWORK_EVENT (). For event EVENT_NETWORK_EVENT, the event category is category CAT_SECURITY. The event severity can be any of the severity levels in TABLE 4.","In addition to the fields presented in TABLE 2 for security base event class CLASS_BASE, network class CLASS_NETWORK extends security base event class CLASS_BASE, in one embodiment, with the fields presented in TABLE 10. The type of each field also is presented in TABLE 10. A description of the value in each field follows TABLE 10.",{"@attributes":{"id":"p-0351","num":"0412"},"figref":"FIG. 19B","b":["19600","19100","19600","15500","19500","19600","18100"]},{"@attributes":{"id":"p-0352","num":"0413"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 10"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_NETWORK_PROTOCOL_ID","id"]},{"entry":[{},"FIELD_IP_TYPE_ID","id"]},{"entry":[{},"FIELD_SOURCE_IP","info"]},{"entry":[{},"FIELD_DESTINATION_IP","info"]},{"entry":[{},"FIELD_SOURCE_PORT","count"]},{"entry":[{},"FIELD_DESTINATION_PORT","count"]},{"entry":[{},"FIELD_SOURCE_MAC","info"]},{"entry":[{},"FIELD_DESTINATION_MAC","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A type of network protocol used on the network is stored in a network protocol field FIELD_NETWORK_PROTOCOL_ID. In one embodiment, the entry in network protocol field FIELD_NETWORK_PROTOCOL_ID is selected from TABLE 11",{"@attributes":{"id":"p-0354","num":"0415"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 11"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"Network Protocol ID Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NETWORK_PROTOCOL_UNKNOWN"]},{"entry":[{},"NETWORK_PROTOCOL_ARP"]},{"entry":[{},"NETWORK_PROTOCOL_TCP"]},{"entry":[{},"NETWORK_PROTOCOL_UDP"]},{"entry":[{},"NETWORK_PROTOCOL_ICMP"]},{"entry":[{},"NETWORK_PROTOCOL_IGMP"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"150"},"A type of IP address is stored in a network IP type field FIELD_IP_TYPE_ID. In one embodiment, the entry in network IP type field FIELD_IP_TYPE_ID is selected from TABLE 12",{"@attributes":{"id":"p-0356","num":"0417"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 12"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"IP Type ID Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"NETWORK_IP_TYPE_UNKNOWN"]},{"entry":[{},"NETWORK_IP_TYPE_IPV4"]},{"entry":[{},"NETWORK_IP_TYPE_IPV6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"An IP address of the source host is stored in a source IP field FIELD_SOURCE_IP. The local host may be the source or destination. This field can also be used to identify the starting point for a range of addresses, such as a filter range. The IP version can be IPv4 or IPv6 based on the value in network IP type field FIELD_IP_TYPE_ID.","An IP address of the destination host is stored in a destination IP field FIELD_DESTINATION_IP. The local host may be the source or destination. This field can also be used to identify the endpoint for a range of addresses, such as a filter range. The IP version can be IPv4 or IPv6 based on the value in IP type field FIELD_IP TYPE_ID.","A port of the source host is stored in a source port field FIELD_SOURCE_PORT. The value in source IP field FIELD_SOURCE_IP is interpreted in conjunction with the value in source port field FIELD_SOURCE_PORT.","A port of the destination host is stored in a destination port field FIELD_DESTINATION_PORT. The value in destination IP field FIELD_DESTINATION_IP is interpreted in conjunction with the value in destination port field FIELD_DESTINATION_PORT.","A source MAC address is stored in a source MAC address field FIELD_SOURCE_MAC. A destination MAC address is stored in a source MAC address field FIELD_DESTINATION_MAC.","Intrusion Detection Package","In this embodiment, the intrusion detection package  () is relatively simple, and is not intended to capture all details from an IDS event log. If desired, this package can be expanded with subclasses. In particular, a subclass for network-detected intrusions may be added.","In this embodiment, the event schema of intrusion detection package  introduces two classes CLASS_HOST_INTRUSION and CLASS_NETWORK_INTRUSION that extend intrusion class CLASS_INTRUSION. Intrusion class CLASS_INTRUSION extends network event class CLASS_NETWORK that in turn extends security base event class CLASS_BASE. In one embodiment, the event class hierarchy for intrusion detection package  is stored in a memory as illustrated in .","An IDS event may be instantiated on the machine on which the event occurred, or alternatively, the data may be collected by a managed product on a different machine. In the first embodiment, the base class event information is instantiated using the API for the security base event class. In the second embodiment, some data in the base class event information concerns the machine on which the event occurred. Under these circumstances, the fields are filled in differently. The methods in the API that would normally provide information concerning the machine on which managed product is executing are not called and instead methods are called to provide information concerning the machine on which the intrusion detection event occurred.","Consequently, the information entered in the fields of security base event class CLASS_BASE and the fields of network event class CLASS_NETWORK depends upon which of the embodiments is active. Therefore, before considering the extensions to these classes, consideration in populating the fields in base class event (TABLE 2) and network class event (TABLE 10) are considered.","Use of Base Class","A managed product logging an intrusion event populates machine field FIELD_MACHINE, machine address field FIELD_MACHINE_IP, machine subnet field FIELD_MACHINE_SUBNET, machine identifier field FIELD_MACHINEID, machine MAC address field FIELD_MACHINE_MAC, and user name field FIELD_USER_NAME with the appropriate information for the computer on which the intrusion activity occurred or was detected if managed product is executing on that machine. The values in machine field FIELD_MACHINE, machine address field FIELD_MACHINE_IP, machine subnet field FIELD_MACHINE_SUBNET, and machine MAC address field FIELD_MACHINE_MAC should all be for the same computer. Thus, as described, a collector managed product should specify the values of the computer on which the intrusion activity occurred and for which managed product is collecting the events so that a security base event view shows not the collector machine information, but the information of the machine where the intrusion activity took place or was detected.","In one embodiment, the value in machine identifier field FIELD_MACHINEID must contain an identifier of a computer registered with security management system . Thus, if the machine on which the collector managed product is running, the collector machine, is registered, but the computer on which the intrusion activity took place or was detected is not registered, the value in field FIELD_MACHINEID is the identifier for the collector machine.","If managed product is collecting intrusion events from another machine or machines, the date and time when the intrusion activity was logged by the other machine is entered in field FIELD_CREATE_DT. If this cannot be determined, this field is populated in the normal manner. Similarly, the date and time when the intrusion activity was first detected is entered in field FIELD_EVENT_DT. This value may be the same as in field FIELD_CREATE_DT.","A so-called \u201cnatively integrated\u201d managed product should allow the security management agent to populate these fields using the information the agent collects from the computer both the agent and product are running on. Natively integrated means the product makes API calls directly, rather than via a collector. Normally, these fields are automatically populated using the same time for native events, but for a collector, the times are usually different, since the product already had logged the event before the collector picked up the event.","Some IDS products may log events for activities that are not (or probably are not) attacks. An example is a product that logs all user login attempts, whether successful or not. The severity of events that are (probably) not attempted attacks is, in one embodiment, SEV_INFORMATIONAL. (See TABLE 4.) The category for intrusion detection system events, in this embodiment, is CAT_SECURITY. (See TABLE 3.)","For a collector managed product, the other fields in security base event class CLASS_BASE are populated as described above.","Use of Network Class","In populating the fields of network class CLASS_NETWORK that were described above, the source is the source of the threat or the attacker, if known. If the information is not known, the fields are left blank. The host is the target of the threat, or the target.","Intrusion Class","As described above, intrusion class CLASS_INTRUSION extends network event class CLASS_NETWORK that in turn extends security base event class CLASS_BASE. In addition to the fields for security base event class CLASS_BASE and network event class CLASS_NETWORK, class CLASS_INTRUSION () includes fields presented in TABLE 13. The type of each field also is presented in TABLE 13. A description of the value in each field follows TABLE 13. In this embodiment, intrusion class CLASS_INTRUSION is an abstract class and so no events are defined for this class.",{"@attributes":{"id":"p-0374","num":"0435"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 13"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Type"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_INTRUSION_SOURCE_MACHINE","info"]},{"entry":["FIELD_INTRUSION_DESTINATION_MACHINE","info"]},{"entry":["FIELD_INTRUSION_VENDOR_NAME","intl_varstr"]},{"entry":[{},"(32)"]},{"entry":["FIELD_INTRUSION_VENDOR_SIG","intl_varstr"]},{"entry":[{},"(64)"]},{"entry":["FIELD_INTRUSION_VENDOR_SEVERITY","intl_varstr"]},{"entry":[{},"(16)"]},{"entry":["FIELD_INTRUSION_SIG","intl_varstr"]},{"entry":[{},"(64)"]},{"entry":["FIELD_INTRUSION_INTENT","id"]},{"entry":["FIELD_INTRUSION_OUTCOME","id"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A computer name of the computer from which the attack originated is stored in an intrusion source machine field FIELD_INTRUSION_SOURCE_MACHINE. field FIELD_INTRUSION_SOURCE_MACHINE is left blank if the computer name is unknown or not applicable for the attack. The value should be a host computer name, but may be another kind of name, e.g., \u201cPDR-DHERTEL,\u201d or \u201cpdr-dhertel1.Corp.Symantec.Com.\u201d","A computer name of the computer at which the attack was directed, the target machine, is stored in intrusion destination machine field FIELD_INTRUSION_DESTINATION_MACHINE. Field FIELD_INTRUSION_DESTINATION_MACHINE is left blank if the computer name is unknown or not applicable for the attack. The value should be a host computer name, but may be another kind of name, e.g., \u201cPDR-DHERTEL,\u201d or \u201cpdr-dhertel1.Corp.Symantec.Com.\u201d","A string that identifies a naming standard used in field FIELD_INTRUSION_VENDOR_SIG is stored in an intrusion vendor name field FIELD_INTRUSION_VENDOR_NAME. The string, in one embodiment is the name of a vendor or product that detected the intrusion. The purpose of the value in this field is to scope the value of the vendor signature to prevent naming collisions and other problems. For example, an event with vendor name \u201cProductX\u201d and vendor signature \u201c100\u201d may describe a completely different attack than an event with vendor name \u201cProductY\u201d and vendor signature \u201c100.\u201d Examples of strings that might be used in this field are \u201cIntruderAlert,\u201d or \u201cEntercept.\u201d","A string that uniquely identifies the intrusion activity, as it is known by the event creator, is stored in an intrusion vendor signature field FIELD_INTRUSION_VENDOR_SIG. In one embodiment, the string is specified using the naming standard specified by the vendor identified in field FIELD_INTRUSION_VENDOR_NAME. This string is often called the attack signature (not to be confused with the specific detection technique of pattern matching). The value in this field may be blank if unknown or not applicable. Examples of strings entered in this field include \u201cFile Tampering,\u201d or \u201c1234.\u201d","A string that identifies the severity of the intrusion activity, as it is known by the event creator, is stored in vendor intrusion severity code field FIELD_INTRUSION_VENDOR_SEVERITY. This string is the vendor or product specific severity code that is associated with the value of in field FIELD_INTRUSION_VENDOR_SIG. This string may useful to an administrator viewing the event details or to security feedback and control system  that includes product ID aware rules. Because there is no standard format for this string, the string is not useful for reporting or correlation purposes. In particular, different vendors may use different numeric scales and directions, for example, 1 may mean low or high. This field is left blank if the value is unknown or not applicable. Examples of strings used in this field include \u201c1,\u201d \u201clow,\u201d or \u201chigh.\u201d","A name of the attack, as defined by security management system , is stored in a security system intrusion signature field FIELD_INTRUSION_SIG. If the attack is unknown, or the data in this field is not applicable to the intrusion, field FIELD_INTRUSION_SIG is left blank. The name in field FIELD_INTRUSION_SIG provides the same information as the combination of the information in fields FIELD_INTRUSION_VENDOR_SIG and FIELD_INTRUSION_VENDOR_SIG, but the name has a format that maps multiple vendor signatures representing the same activity into one normalized signature for correlation and reporting purposes. In one embodiment, this field is populated by security management agent . However, as the set of attack signatures grows, assignment of this field can be performed at a management server of security management system , not by security management agent ","A string stored in intrusion intent field FIELD_INTRUSION_INTENT indicates the overall intent of the attempted intrusion activity. In one embodiment, the value entered in this field is one of a set of predefined entries presented in TABLE 14.",{"@attributes":{"id":"p-0382","num":"0443"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 14"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Entries for field FIELD_INTRUSION_INTENT"]},{"entry":[{},"INTRUSION_INTENT_NONE"]},{"entry":[{},"INTRUSION_INTENT_OTHER"]},{"entry":[{},"INTRUSION_INTENT_UNKNOWN"]},{"entry":[{},"INTRUSION_INTENT_ACCESS"]},{"entry":[{},"INTRUSION_INTENT_INTEGRITY"]},{"entry":[{},"INTRUSION_INTENT_DEGRADATION"]},{"entry":[{},"INTRUSION_INTENT_RECON"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The last portion of each entry in TABLE 14 gives the intent associated with that entry. See also, TABLE 20 below. In this embodiment, the intent of the intrusion is one of NONE, OTHER, UNKNOWN, ACCESS, INTEGRITY, DEGRADATION, and RECON. Thus, a value of NONE, i.e., INTRUSION_INTENT_NONE, indicates the intrusion activity had no intent. However, it should be possible to characterize nearly any intrusion activity with one of ACCESS, INTEGRITY, DEGRADATION (including denial of service), or RECON (including pre-attack probes). A value of OTHER is for the case where the intent is known, but not one of the specific predefined values.","A string stored in intrusion outcome field FIELD_INTRUSION_OUTCOME indicates an outcome of the attempted intrusion activity. In one embodiment, the value entered in this field is one of a set of predefined entries presented in TABLE 15.",{"@attributes":{"id":"p-0385","num":"0446"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 15"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Entries for field FIELD_INTRUSION_OUTCOME"]},{"entry":[{},"INTRUSION_OUTCOME_NONE"]},{"entry":[{},"INTRUSION_OUTCOME_OTHER"]},{"entry":[{},"INTRUSION_OUTCOME_UNKNOWN"]},{"entry":[{},"INTRUSION_OUTCOME_SUCCEEDED"]},{"entry":[{},"INTRUSION_OUTCOME_FAILED"]},{"entry":[{},"INTRUSION_OUTCOME_PREVENTED"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The last portion of each entry in TABLE 15 gives the outcome associated with that entry. See also, TABLE 20 below. In this embodiment, the outcome of the intrusion is one of NONE, OTHER, UNKNOWN, SUCCEEDED, FAILED, and PREVENTED.","If value in field FIELD_INTRUSION_INTENT is INTRUSION_INTENT_NONE, the value in field FIELD_INTRUSION_OUTCOME should be INTRUSION_OUTCOME_NONE. It is unlikely that the value in this field would ever be set to INTRUSION_OUTCOME_OTHER, but the value is available for the sake of completeness, in this embodiment.","The attack signatures used by a managed IDS product often have static information associated with them. This information may include alternate names for the attack, short and long summaries, technical information, recommended responses, links to additional information, attack categories and subcategories, related Bugtraq and CVE vulnerability identifiers, and so on. Because of its length, in this embodiment, the static data is unsuitable for repeated inclusion in each event describing an instance of that attack.","Thus, in one embodiment, a database within security management system  holds this data. In this embodiment, the data is based upon a predefined attack signature set so that the data is independent of any particular managed product data. For example, the data is queried based upon the value in security system intrusion signature field FIELD_INTRUSION_SIG to obtain further information concerning the attack. The database does not hold actual events. The IDS events are useful both with and without this static database.","Class Host Intrusion","Host intrusion event class CLASS_HOST_INTRUSION extends intrusion class CLASS_INTRUSION () with information specific to activity detected at a host. Host intrusion event class CLASS_HOST_INTRUSION has a predefined event class identifier.","Event objects, that are instantiations of host intrusion event class CLASS_HOST_INTRUSION include event EVENT_HOST_INTRUSION (), a host intrusion event that is logged when intrusion behavior is detected using host IDS examination techniques. For event EVENT_HOST_INTRUSION, the event category is category CAT_SECURITY. The event severity is determined by the event creator based upon the intrusion.","In addition to the fields  (FIG. B_) for security base event class CLASS_BASE, fields  for network event class CLASS_NETWORK, and fields  (FIG. B_) for class CLASS_INTRUSION, host intrusion event class CLASS_HOST_INTRUSION () adds fields  presented in TABLE 16 for a host intrusion detection event . The type of each field also is presented in TABLE 16. A description of the value in each field follows TABLE 16.","FIGS. B_ and B_ illustrate a host intrusion event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0394","num":"0455"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 16"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_INTRUSION_SOURCE_USER_NAME","info"]},{"entry":[{},"FIELD_INTRUSION_SOURCE_PROCESS","info"]},{"entry":[{},"FIELD_INTRUSION_TARGET_TYPE","id"]},{"entry":[{},"FIELD_INTRUSION_TARGET_NAME","info"]},{"entry":[{},"FIELD_INTRUSION_ACTION","Id"]},{"entry":[{},"FIELD_INTRUSION_DATA","intl_varstr"]},{"entry":[{},{},"(2048)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A user name of the attacker is stored in a source user name field FIELD_INTRUSION_SOURCE_USER_NAME. If this information is not applicable to the intrusion attack, this field is left blank. Examples of possible entries for this field include \u201cbaduser\u201d or \u201cSYSTEM.\u201d","A process name of the attacker is stored in a source process field FIELD_INTRUSION_SOURCE_PROCESS. The information in this field may be a user-friendly name or the name of an image file with or without a path. If this information is not applicable to the intrusion attack, this field is left blank. Examples of possible entries for this field include: \u201cService Control Manager,\u201d \u201cSecurity,\u201d \u201cIEXPLORER.EXE,\u201d and \u201cc:\\temp\\temp.exe\u201d","A value stored in intrusion target type field FIELD_INTRUSION_TARGET_TYPE indicates the type of the attacker's target. In one embodiment, the value is selected from TABLE 17.",{"@attributes":{"id":"p-0398","num":"0459"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 17"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"Intrusion Target Type Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"INTRUSION_TARGET_NONE"]},{"entry":[{},"INTRUSION_TARGET_OTHER"]},{"entry":[{},"INTRUSION_TARGET_UNKNOWN"]},{"entry":[{},"INTRUSION_TARGET_OS_SESSION"]},{"entry":[{},"INTRUSION_TARGET_USER_SESSION"]},{"entry":[{},"INTRUSION_TARGET_FILE"]},{"entry":[{},"INTRUSION_TARGET_DIRECTORY"]},{"entry":[{},"INTRUSION_TARGET_LINK"]},{"entry":[{},"INTRUSION_TARGET_PROCESS"]},{"entry":[{},"INTRUSION_TARGET_SERVICE"]},{"entry":[{},"INTRUSION_TARGET_PORT"]},{"entry":[{},"INTRUSION_TARGET_URL"]},{"entry":[{},"INTRUSION_TARGET_USER_ACCOUNT"]},{"entry":[{},"INTRUSION_TARGET_USER_INFO"]},{"entry":[{},"INTRUSION_TARGET_USER_PRIVS"]},{"entry":[{},"INTRUSION_TARGET_USER_POLICY"]},{"entry":[{},"INTRUSION_TARGET_GROUP"]},{"entry":[{},"INTRUSION_TARGET_REGISTRY"]},{"entry":[{},"INTRUSION_TARGET_REGISTRY_KEY"]},{"entry":[{},"INTRUSION_TARGET_REGISTRY_VALUE"]},{"entry":[{},"INTRUSION_TARGET_REGISTRY_DATA"]},{"entry":[{},"INTRUSION_TARGET_OS_CONFIG"]},{"entry":[{},"INTRUSION_TARGET_APP_CONFIG"]},{"entry":[{},"INTRUSION_TARGET_NETWORK_PROTOCOL"]},{"entry":[{},"INTRUSION_TARGET_NETWORK_STACK"]},{"entry":[{},"INTRUSION_TARGET_NETWORK_DATA"]},{"entry":[{},"INTRUSION_TARGET_NETWORK_SECURITY"]},{"entry":[{},"INTRUSION_TARGET_HARDWARE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"A name of the attacker's target is stored intrusion target name field FIELD_INTRUSION_TARGET_NAME. The name entered in this field is a name of an object of the type specified by field FIELD_INTRUSION_TARGET_TYPE. If this information is not applicable to the intrusion attack, this field is left blank. Examples of possible entries for this field include: \u201cc:\\program files\\Symantec\\criticalprogram.exe,\u201d and \u201cHKEY_CURRENT_USER\\Software\\Micrsoft\\Windows\\CurrentVersion\\Runonce.\u201d","A value stored in intrusion action field FIELD_INTRUSION_ACTION indicates an action attempted by the intrusion attacker. In one embodiment, the value is selected from TABLE 18.",{"@attributes":{"id":"p-0401","num":"0462"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Intrusion Action Value"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"INTRUSION_ACTION_NONE"]},{"entry":[{},"INTRUSION_ACTION_OTHER"]},{"entry":[{},"INTRUSION_ACTION_UNKNOWN"]},{"entry":[{},"INTRUSION_ACTION_CREATE"]},{"entry":[{},"INTRUSION_ACTION_ACCESS"]},{"entry":[{},"INTRUSION_ACTION_MODIFY"]},{"entry":[{},"INTRUSION_ACTION_DELETE"]},{"entry":[{},"INTRUSION_ACTION_COPY"]},{"entry":[{},"INTRUSION_ACTION_MOVE"]},{"entry":[{},"INTRUSION_ACTION_LINK"]},{"entry":[{},"INTRUSION_ACTION_START"]},{"entry":[{},"INTRUSION_ACTION_RESTART"]},{"entry":[{},"INTRUSION_ACTION_STOP"]},{"entry":[{},"INTRUSION_ACTION_LOGIN"]},{"entry":[{},"INTRUSION_ACTION_LOGOUT"]},{"entry":[{},"INTRUSION_ACTION_EXECUTE"]},{"entry":[{},"INTRUSION_ACTION_EXECUTE_PRIVILEGED"]},{"entry":[{},"INTRUSION_ACTION_CRASH"]},{"entry":[{},"INTRUSION_ACTION_MISUSE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A string containing additional data specific to this event is stored in an intrusion data field FIELD_INTRUSION_DATA. This field may be used to store text captured from system logs, or other details useful to an administrator viewing the event details. Because there is no standard format for this text, the information in this field is not useful for reporting or correlation purposes. This field may be left blank.","Class Network Intrusion","Network Intrusion Event","class CLASS_NETWORK_INTRUSION extends intrusion class CLASS_INTRUSION () with information specific to activity detected at a network level. Network intrusion event class CLASS_NETWORK_INTRUSION has a predefined event class identifier.","Event objects, that are instantiations of network intrusion event class CLASS_NETWORK_INTRUSION include event EVENT_NETWORK_INTRUSION (), a network intrusion event is logged when intrusion behavior is detected using network IDS examination techniques. For event EVENT_NETWORK_INTRUSION, the event category is category CAT_SECURITY. The event severity is determined by the event creator based upon the intrusion.","In addition to fields  (FIG. B_) for security base event class CLASS_BASE, fields  for network event class CLASS_NETWORK, and fields  (FIG. B_) for class CLASS_INTRUSION, network intrusion event class CLASS_NETWORK_INTRUSION () adds fields  of TABLE 19 for a network intrusion detection event . The type of each field also is presented in TABLE 19. A description of the value in each field follows TABLE 19.","FIGS. B_ and B_ illustrate a network intrusion event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0407","num":"0468"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 19"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Type"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_INTRUSION_PACKET","varstr (4096)"]},{"entry":["FIELD_INTRUSION_PAYLOAD","varstr (1024)"]},{"entry":["FIELD_INTRUSION_PAYLOAD_START","Count"]},{"entry":["FIELD_INTRUSION_PAYLOAD_END","Count"]},{"entry":["FIELD_INTRUSION_CONTEXT","intl_varstr (512)"]},{"entry":["FIELD_INTRUSION_VLAN","Count"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"An entire IP packet including headers, which was being examined when the attack was detected, is stored in an intrusion packet field FIELD_INTRUSION_PACKET.","Usually, this field contains the entire payload or a portion of the entire payload. The packet is stored as a hex string with no spaces in one embodiment. This field may be blank.","A portion of the application-layer datastream, which contains the offending bytes, padded by the bytes which came before and after in the stream is stored in an intrusion payload field FIELD_INTRUSION_PAYLOAD. The offending bytes are highlighted using the payload start and payload end indexes. The data is stored as a hex string with no spaces in one embodiment. This field may be blank.","A byte offset to the start of the offending bytes (anomaly or signature) in the payload is stored in an intrusion payload start field FIELD_INTRUSION_PAYLOAD_START. This field may be blank if the payload in field FIELD_INTRUSION_PAYLOAD is blank. The value in this field is the byte offset, and not an index into the hex string. Multiply the value in this field by two to obtain the hex string index.","A byte offset to the start of the offending bytes (anomaly or signature) in the payload is stored in an intrusion payload start field FIELD_INTRUSION_PAYLOAD_END. This field may be blank if the payload in field FIELD_INTRUSION_PAYLOAD is blank. The value in this field is the byte offset, and not an index into the hex string. Multiply the value in this field by two to obtain the hex string index.","Supplemental information about the session, in which the attack was detected, is store in intrusion context field FIELD_INTRUSION_CONTEXT. For example, for an exploit against an FTP server, this field may contain the username, and for one against an HTTP server, the field may contain the URL. The data is stored as a normal string. This field may be blank.","An ID of the VLAN on which the attack was detected is stored in an intrusion virtual local area network field FIELD_INTRUSION_VLAN. This field may be blank.","In some embodiments, there may be limitations on the amount of data that can be stored in a single event. For example, binary large object (BLOB) fields may not be supported, and\/or second, the total size of an event may be limited by a maximum row size in the database used to store events. In such situations, as a general rule, fields in an event should not be larger than two to four Kbytes, depending on the number of other large fields in the class and super classes. Storing packet payloads in an event presents a problem because the payloads can be up to 64K in length (128K if encoded in hex), though typical TCP\/IP packets are from one half to two Kbytes.","One way to address these issues is to support a facility for attaching an arbitrary number of key\/value pairs to an event, which are then stored in a special event extension table. The extension table supports all types of values including BLOB values. This facility provides a good alternative to the size-limited field FIELD_INTRUSION_PAYLOAD.","In one embodiment, as illustrated in , three event families for all intrusion detection events are defined. Intrusion detection event family  includes events EVENT_HOST_INTRUSION and EVENT_NETWORK_INTRUSION. Host intrusion detection event family  includes event EVENT_HOST_INTRUSION. Network intrusion detection event family  includes event EVENT_NETWORK_INTRUSION. In , the event ID is used as reference numeral to represent the event memory structure having that event ID as described above, and incorporated herein by reference. These families may also include other intrusion events that are defined from the classes described above, or from classes that are added. In general, an event family is a group of associated events, and may include events from different classes. A unique identifier is assigned to each event family.","TABLE 20 gives the English translation of all event IDs and event field string value IDs used in the intrusion classes.",{"@attributes":{"id":"p-0419","num":"0480"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 20"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},"English"]},{"entry":["Event\/Value ID","Translation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Events"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EVENT_HOST_INTRUSION","Host Intrusion"]},{"entry":[{},"Event"]},{"entry":["EVENT_NETWORK_INTRUSION","Network"]},{"entry":[{},"Intrusion Event"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Target Types"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["INTRUSION_TARGET_NONE","None"]},{"entry":["INTRUSION_TARGET_OTHER","Other"]},{"entry":["INTRUSION_TARGET_UNKNOWN","Unknown"]},{"entry":["INTRUSION_TARGET_OS_SESSION","OS Session"]},{"entry":["INTRUSION_TARGET_USER_SESSION","User Session"]},{"entry":["INTRUSION_TARGET_FILE","File"]},{"entry":["INTRUSION_TARGET_DIRECTORY","Directory"]},{"entry":["INTRUSION_TARGET_LINK","Link"]},{"entry":["INTRUSION_TARGET_PROCESS","Process"]},{"entry":["INTRUSION_TARGET_SERVICE","Service"]},{"entry":["INTRUSION_TARGET_PORT","Port"]},{"entry":["INTRUSION_TARGET_URL","URL"]},{"entry":["INTRUSION_TARGET_USER_ACCOUNT","User Account"]},{"entry":["INTRUSION_TARGET_USER_INFO","User Information"]},{"entry":["INTRUSION_TARGET_USER_PRIVS","User Privileges"]},{"entry":["INTRUSION_TARGET_USER_POLICY","User Policy"]},{"entry":["INTRUSION_TARGET_GROUP","Group"]},{"entry":["INTRUSION_TARGET_REGISTRY","Registry"]},{"entry":["INTRUSION_TARGET_REGISTRY_KEY","Registry Key"]},{"entry":["INTRUSION_TARGET_REGISTRY_VALUE","Registry Value"]},{"entry":["INTRUSION_TARGET_REGISTRY_DATA","Registry Data"]},{"entry":["INTRUSION_TARGET_OS_CONFIG","OS Configuration"]},{"entry":["INTRUSION_TARGET_APP_CONFIG","Application"]},{"entry":[{},"Configuration"]},{"entry":["INTRUSION_TARGET_NETWORK_PROTOCOL","Network Protocol"]},{"entry":["INTRUSION_TARGET_NETWORK_STACK","Network Stack"]},{"entry":["INTRUSION_TARGET_NETWORK_DATA","Network Data"]},{"entry":["INTRUSION_TARGET_NETWORK_SECURITY","Network Security"]},{"entry":["INTRUSION_TARGET_HARDWARE","Hardware"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Actions"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["INTRUSION_ACTION_NONE","None"]},{"entry":["INTRUSION_ACTION_OTHER","Other"]},{"entry":["INTRUSION_ACTION_UNKNOWN","Unknown"]},{"entry":["INTRUSION_ACTION_CREATE","Create"]},{"entry":["INTRUSION_ACTION_ACCESS","Access"]},{"entry":["INTRUSION_ACTION_MODIFY","Modify"]},{"entry":["INTRUSION_ACTION_DELETE","Delete"]},{"entry":["INTRUSION_ACTION_COPY","Copy"]},{"entry":["INTRUSION_ACTION_MOVE","Move"]},{"entry":["INTRUSION_ACTION_LINK","Link"]},{"entry":["INTRUSION_ACTION_START","Start"]},{"entry":["INTRUSION_ACTION_RESTART","Restart"]},{"entry":["INTRUSION_ACTION_STOP","Stop"]},{"entry":["INTRUSION_ACTION_LOGIN","Login"]},{"entry":["INTRUSION_ACTION_LOGOUT","Logout"]},{"entry":["INTRUSION_ACTION_EXECUTE","Execute"]},{"entry":["INTRUSION_ACTION_EXECUTE_PRIVILEGED","Execute"]},{"entry":[{},"Privileged"]},{"entry":["INTRUSION_ACTION_CRASH","Crash"]},{"entry":["INTRUSION_ACTION_MISUSE","Misuse"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Intents"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["INTRUSION_INTENT_NONE","None"]},{"entry":["INTRUSION_INTENT_OTHER","Other"]},{"entry":["INTRUSION_INTENT_UNKNOWN","Unknown"]},{"entry":["INTRUSION_INTENT_ACCESS","Access"]},{"entry":["INTRUSION_INTENT_INTEGRITY","Integrity"]},{"entry":["INTRUSION_INTENT_DEGRADATION","Degradation"]},{"entry":["INTRUSION_INTENT_RECON","Reconnaissance"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Action Outcomes"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["INTRUSION_OUTCOME_NONE","None"]},{"entry":["INTRUSION_OUTCOME_OTHER","Other"]},{"entry":["INTRUSION_OUTCOME_UNKNOWN","Unknown"]},{"entry":["INTRUSION_OUTCOME_SUCCEEDED","Succeeded"]},{"entry":["INTRUSION_OUTCOME_FAILED","Failed"]},{"entry":["INTRUSION_OUTCOME_PREVENTED","Prevented"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"TABLE 21 shows several kinds of reports that can be generated using intrusion events. These reports are for illustrative purposes only and are not intended to limit the invention to the specific reports presented herein.",{"@attributes":{"id":"p-0421","num":"0482"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 21"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Report Title","Type","Key Field"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["All IDS","List","most"]},{"entry":"Events"},{"entry":["IDS Events:","Pie Chart","FIELD_INTRUSION_VENDOR_NAME"]},{"entry":["By Vendor",{},"and"]},{"entry":["Name",{},"FIELD_INTRUSION_VENDOR_SIG"]},{"entry":["IDS Events:","Pie Chart","FIELD_INTRUSION_SIG"]},{"entry":"By Symantec"},{"entry":"Name"},{"entry":["IDS Events:","Pie Chart","FIELD_SEVERITY"]},{"entry":"By Severity"},{"entry":["IDS Events:","Pie Chart","FIELD_INTRUSION_INTENT"]},{"entry":"By Intent"},{"entry":["IDS Events:","Pie Chart","FIELD_SOURCE_IP"]},{"entry":"By Threat"},{"entry":"Source"},{"entry":["IDS Events:","Pie Chart","FIELD_DESTINATION_IP"]},{"entry":"By Threat"},{"entry":"Target"},{"entry":["IDS Events:","Pie Chart","FIELD_DESTINATION_PORT"]},{"entry":"By Service"},{"entry":["IDS Events:","Line","FIELD_EVENT_DT"]},{"entry":["Last 24","Graph"]},{"entry":["hours","(need"]},{"entry":[{},"hourly or"]},{"entry":[{},"even finer"]},{"entry":[{},"granularity)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"TABLE 22 is a view  () for one host intrusion event, e.g., a file tampering event, which is detected by an IDS. The information retrieved from host intrusion events  using view  may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . As explained above, a view is a database object that is defined for an event class by a managed product , as described more completely below. View  is stored in memory .",{"@attributes":{"id":"p-0423","num":"0484"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 22"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Sample",{}]},{"entry":[{},"Column Label","Sample Display"]},{"entry":["Field Name","for Display","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Category","Security"]},{"entry":["FIELD_SEVERITY","Severity","2 - Warning"]},{"entry":["FIELD_EVENT_DT","Event Date","Jan. 1, 2003,"]},{"entry":[{},{},"12:00:00 AM"]},{"entry":["FIELD_EVENT_ID","Event Type","Host Intrusion"]},{"entry":[{},{},"Event"]},{"entry":["FIELD_PRODUCT_ID","Product","Acme Security"]},{"entry":["FIELD_PRODUCT_VERSION","Product","1.0"]},{"entry":[{},"Version"]},{"entry":["FIELD_SWFEATURE_ID","Software","Acme HIDS"]},{"entry":[{},"Feature","Event"]},{"entry":[{},{},"Collector"]},{"entry":["FIELD_USER_NAME","User Name","SYSTEM"]},{"entry":["FIELD_MACHINE","Machine","troubledhost"]},{"entry":["FIELD_EVENT_DESC","Description","File Tampering"]},{"entry":["FIELD_INTRUSION_VENDOR","Vendor","Acme"]},{"entry":["NAME","Signature"]},{"entry":[{},"Type"]},{"entry":["FIELD_INTRUSION_VENDOR","Vendor","Rule5689"]},{"entry":["SIG","Signature"]},{"entry":["FIELD_INTRUSION_SIG","Symantec"]},{"entry":[{},"Signature"]},{"entry":["FIELD_INTRUSION_SOURCE","Acting User","administrator"]},{"entry":"USER_NAME"},{"entry":["FIELD_INTRUSION_SOURCE","Acting","troubledhost"]},{"entry":["MACHINE","Computer"]},{"entry":["FIELD_INTRUSION_SOURCE","Acting","rogueapp.exe"]},{"entry":["PROCESS","Process"]},{"entry":["FIELD_INTRUSION_TARGET","Target Type","File"]},{"entry":"TYPE"},{"entry":["FIELD_INTRUSION_TARGET","Target","c:\\winnt\\syste"]},{"entry":["NAME",{},"m32\\file.dll"]},{"entry":["FIELD_INTRUSION_ACTION","Action","Delete"]},{"entry":["FIELD_INTRUSION_INTENT","Intent","Integrity"]},{"entry":["FIELD_INTRUSION_OUTCOME","Outcome","Succeeded"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"TABLE 23 is another example of a view similar to view  () for another host intrusion event, e.g., a login event, which is detected by an IDS. The information retrieved from login events may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . In the displayed or printed report, the field name may be replaced by the English equivalent, or not included in the report.",{"@attributes":{"id":"p-0425","num":"0486"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 23"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Sample",{}]},{"entry":[{},"Column","Sample Display"]},{"entry":["Field","Label","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Category","Security"]},{"entry":["FIELD_SEVERITY","Severity","2 - Warning"]},{"entry":["FIELD_EVENT_DT","Event Date","Jan. 1, 2003,"]},{"entry":[{},{},"12:00:00 AM"]},{"entry":["FIELD_EVENT_ID","Event Type","Host Intrusion"]},{"entry":[{},{},"Event"]},{"entry":["FIELD_PRODUCT_ID","Product","Acme Security"]},{"entry":["FIELD_PRODUCT_VERSION","Product","1.0"]},{"entry":[{},"Version"]},{"entry":["FIELD_SWFEATURE_ID","Software","Acme HIDS"]},{"entry":[{},"Feature","Event Collector"]},{"entry":["FIELD_USER_NAME","User Name","SYSTEM"]},{"entry":["FIELD_MACHINE","Machine","troubledhost"]},{"entry":["FIELD_EVENT_DESC","Description","Failed Login"]},{"entry":[{},{},"Attempt"]},{"entry":["FIELD_INTRUSION_VENDOR","Vendor","Acme"]},{"entry":["NAME","Signature"]},{"entry":[{},"Type"]},{"entry":["FIELD_INTRUSION_VENDOR","Vendor","Rule5699"]},{"entry":["SIG","Signature"]},{"entry":["FIELD_INTRUSION_SIG","Symantec"]},{"entry":[{},"Signature"]},{"entry":["FIELD_INTRUSION_SOURCE","Acting User","smith"]},{"entry":"USER_NAME"},{"entry":["FIELD_INTRUSION_SOURCE","Acting","troubledhost"]},{"entry":["MACHINE","Computer"]},{"entry":["FIELD_INTRUSION_SOURCE","Acting"]},{"entry":["PROCESS","Process"]},{"entry":["FIELD_INTRUSION_TARGET","Target Type","None"]},{"entry":"TYPE"},{"entry":["FIELD_INTRUSION_TARGET","Target"]},{"entry":"NAME"},{"entry":["FIELD_INTRUSION_ACTION","Action","Login"]},{"entry":["FIELD_INTRUSION_INTENT","Intent","Access"]},{"entry":["FIELD_INTRUSION_OUTCOME","Outcome","Failed"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Firewalls have the capacity to generate very large numbers of events, but only a relatively small subset is useful for security management (\u201crelatively\u201d being the operative word here\u2014it can still amount to dozens of discrete events). In this embodiment, the firewall event classes have been designed around the information necessary to produce useful reports. Two event classes a firewall network class and a firewall connection statistics class, () have been defined.","As explained more completely below, the firewall network class contains information useful for determining nodes, protocols and rules being used, common events such as denied connections, VPN connections, and user authentication events. Firewall-specific classes for additional information or events that may be unique to a specific firewall can added to extend these classes.","The firewall connection statistics class focuses on information relating to traffic through firewalls. This includes the information in the firewall network class, plus volume and duration information.","Since security management system  has an open interface for logging events, events from firewalls of many brands and varieties are logged. One of the key benefits of a centralized event logging system is an ability to extract useful information from that event database. Thus, there is a need to present information drawn from events from a heterogeneous set of firewalls in a single report.","To do this with consistency and efficiency, the most common information is gathered in a single event for all the different firewalls. Two event classes have been devised for logging firewall events. Although not all firewall events relate to network connections, the events that are of greatest interest generally are.","All network- or connection-related events that provide more product-specific detail are derived from the firewall network class. All firewall products should log their connection-related statistics (byte\/packet counts, durations, etc.) using firewall connection statistics events, or their own event that is derived from this package.","Reports that span different types of firewalls allow a concise global view of firewall activity in a network. This is the main purpose of having a single common event class for logging the common network-related information for firewall events. It is not intended that the firewall network class be able to contain all the information for any event a firewall generates. When the event data overlaps the fields in the firewall network class, these events are logged as firewall network class events, or a class derived from the firewall network class.","The firewall network class defines several events. These events can be used at \u201cface value,\u201d or these events can be used as a category of events when a firewall generates many different events that comprise these types (from a reporting perspective). It is important that the firewalls make use of the event IDs defined whenever appropriate in order to provide the best reporting and security feedback and control possible from the event database.","In this embodiment, the event schema of firewall event package  introduces CLASS_FIREWALL_CONNECTION_STATISTICS that extends firewall network class CLASS_FIREWALL_NETWORK. Firewall network class CLASS_FIREWALL_NETWORK extends network event class CLASS_NETWORK that in turn extends security base event class CLASS_BASE. One embodiment of the event class hierarchy for firewall event package  stored in a memory is illustrated in .","Firewall Network Class","Firewall network class CLASS_FIREWALL_NETWORK provides a base set of fields to allow common data to be logged by all firewalls in a consistent manner. This single consistent table of data allows for common reporting and processing of many events across different firewall products, which helps improve firewall management by providing a single view of information.","As described above, firewall network class CLASS_FIREWALL_NETWORK extends network event class CLASS_NETWORK that in turn extends security base event class CLASS_BASE. In this embodiment, firewall network class CLASS_FIREWALL_NETWORK has a predefined event class identifier.","Event objects, that are instantiations of firewall network class CLASS_FIREWALL_NETWORK include: event EVENT_CONNECTION_ACCEPTED (), a connection through the firewall was accepted by the firewall event; event EVENT_CONNECTION_REJECTED, an attempted connection was rejected by the firewall event; event EVENT_CONNECTION_DROPPED, a connection through the firewall was dropped for other than a rule violation or failed authentication event; event EVENT_USER_AUTHENTICATED, a user authenticated to the firewall successfully event; event EVENT_USER_AUTHENTICATION_FAILED (), a user failed in an attempt to authenticate to the firewall event; event EVENT_REMOTE_MANAGEMENT_CONNECTION, a remote host connected to firewall management console event; event EVENT_REMOTE_CLIENT_VPN_CONNECTION, a remote client VPN connection has been established through the firewall event; and event EVENT_REMOTE_CLIENT_VPN_AUTHENTICATION_FAILURE, a remote client VPN connection through the firewall failed due to authentication failure event.","For all these events, the event category is category CAT_COMMUNICATIONS. The event severity is severity SEV_INFORMATIONAL.","In addition to fields  (FIG. C_) for security base event class CLASS_BASE and fields  for network event class CLASS_NETWORK, firewall network class CLASS_FIREWALL_NETWORK (, A and B) adds fields  that are presented in TABLE 24 to a firewall event .","FIGS. C_ and C_ illustrate a firewall network event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0441","num":"0502"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 24"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Field Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_SOURCE_HOST_NAME","info"]},{"entry":[{},"FIELD_DESTINATION_HOST_NAME","info"]},{"entry":[{},"FIELD_SOURCE_SERVICE_NAME","info"]},{"entry":[{},"FIELD_DESTINATION_SERVICE_NAME","info"]},{"entry":[{},"FIELD_NETWORK_DIRECTION_ID","id"]},{"entry":[{},"FIELD_USER_ID","info"]},{"entry":[{},"FIELD_RULE","info"]},{"entry":[{},"FIELD_TARGET_RESOURCE","info"]},{"entry":[{},"FIELD_TARGET_DIRECTION_ID","id"]},{"entry":[{},"FIELD_INTERFACE_NAME","info"]},{"entry":[{},"FIELD_NW_PROTOCOL_ID","id"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A host name of the node initiating a connection to or through the firewall is stored in a source host name field FIELD_SOURCE_HOST_NAME. The value in this field may be null.","A host name of the target node for a connection through the firewall is stored in a destination host name field FIELD_DESTINATION_HOST_NAME. The value in this field may be null.","A service\/application\/protocol name associated with the port or protocol in use by the source node is stored in a source service name field FIELD_SOURCE_SERVICE_NAME. The value in this field may be null.","A service\/application\/protocol name associated with the port or protocol in use at the destination node, e.g., FTP, HTTP, etc., is stored in a destination service name field FIELD_DESTINATION_SERVICE_NAME. This field typically contains the application-level protocol. The value in this field may be null.","A value stored in network direction ID field FIELD_NETWORK_DIRECTION_ID identifies whether the connection through the firewall was initiated from an outside interface\/node to an inside interface\/node (INBOUND) or from an inside interface\/node to an outside interface\/node (OUTBOUND). For example, a computer inside the firewall initiating an HTTP connection to a server outside the firewall would be establishing an OUTBOUND connection. The value in this field may be null.","An ID used by a user for operations that require user authentication is stored in a user ID field FIELD_USER_ID. This field may be null.","A firewall rule associated with the event being logged is stored in a rule field FIELD_RULE. Generally, this field is only used in cases where a firewall rule being triggered caused the event to be logged, or possibly subsequent related events. Thus, the value in this field may be null.","An identifier of a file\/server being accessed, when appropriate, is stored in a target resource field FIELD_TARGET_RESOURCE. This identifier is the URL for an HTTP or possibly FTP connection, or just a file name or server name in other cases. The value in this field may be null.","A value in target direction ID field FIELD_TARGET_DIRECTION_ID Identifies the direction of data flow when a specific resource is being accessed. This value identifies HTTP or FTP GET vs. PUT operations. Other protocols use this field in a corresponding manner. The value in this field may be null.","A name, as known by the firewall software, of the interface on which the connection came into the firewall is stored in interface name field FIELD_INTERFACE_NAME. The value in this field may be null, but normally is not null.","A transport protocol number used in a connection is stored in a network protocol ID field FIELD_NW_PROTOCOL_ID. The value in this field is the actual protocol value.","Firewall Connection Statistics Class","Firewall connection statistics class CLASS_FIREWALL_CONNECTION_STATISTICS stores information in an event that provides details about a connection, for reporting on byte counts, services used, and connection durations.","An event object that is an instantiation of firewall connection statistics class CLASS_FIREWALL_CONNECTION_STATISTICS is event EVENT_CONNECTION_STATISTICS_RECORD (), a firewall connection statistics record event. For this event, the event category is category CAT_COMMUNICATIONS. The event severity is severity SEV_INFORMATIONAL.","In addition to fields  (FIG. B_) for security base event class CLASS_BASE, fields  for network event class CLASS_NETWORK, and fields  (FIG. B_) class CLASS_FIREWALL_NETWORK, firewall connection statistics class CLASS_FIREWALL_CONNECTION_STATISTICS () adds fields  (FIGS. B_ and B_) that are presented in TABLE 25 to a firewall connection statistics record event .","FIGS. B_ B_ and B_ illustrate a firewall connection statistics record event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0457","num":"0518"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 25"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Field Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_START_TIME","date"]},{"entry":[{},"FIELD_ELAPSED_TIME","count"]},{"entry":[{},"FIELD_PACKETS","count"]},{"entry":[{},"FIELD_BYTES","count"]},{"entry":[{},"FIELD_CLIENT_INBOUND_PACKETS","count"]},{"entry":[{},"FIELD_CLIENT_OUTBOUND_PACKETS","count"]},{"entry":[{},"FIELD_SERVER_INBOUND_PACKETS","count"]},{"entry":[{},"FIELD_SERVER_OUTBOUND_PACKETS","count"]},{"entry":[{},"FIELD_CLIENT_INBOUND_BYTES","count"]},{"entry":[{},"FIELD_CLIENT_OUTBOUND_BYTES","count"]},{"entry":[{},"FIELD_SERVER_INBOUND_BYTES","count"]},{"entry":[{},"FIELD_SERVER_OUTBOUND_BYTES","count"]},{"entry":[{},"FIELD_CLIENT_INBOUND_INTERFACE","info"]},{"entry":[{},"FIELD_CLIENT_OUTBOUND_INTERFACE","info"]},{"entry":[{},"FIELD_SERVER_INBOUND_INTERFACE","info"]},{"entry":[{},"FIELD_SERVER_OUTBOUND_INTERFACE","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A timestamp of when a connection through the firewall was initiated is stored in a firewall connection start time field FIELD_START_TIME. A duration of the connection, in seconds in one embodiment, through the firewall is stored in a firewall connection elapsed time field FIELD_ELAPSED_TIME.","A number of packets transferred during this firewall connection is stored in a firewall packets transferred field FIELD_PACKETS. A number of bytes transferred during this firewall connection is stored in a firewall bytes transferred field FIELD_BYTES.","A number of packets received from a client during this firewall connection is stored in a firewall client inbound packets field FIELD_CLIENT_INBOUND_PACKETS. A number of packets sent to the client during this firewall connection is stored in a firewall client outbound packets field FIELD_CLIENT_OUTBOUND_PACKETS.","A number of packets received from a server during this firewall connection is stored in a firewall server inbound packets field FIELD_SERVER_INBOUND_PACKETS. A number of packets sent to the server during this firewall connection is stored in a firewall server outbound packets field FIELD_SERVER_OUTBOUND_PACKETS.","A number of bytes received from the client during this firewall connection is stored in a firewall client inbound bytes field FIELD_CLIENT_INBOUND_BYTES. A number of bytes sent to the client during this firewall connection is stored in a firewall client outbound bytes field FIELD_CLIENT_OUTBOUND_BYTES.","A number of bytes received from the server during this firewall connection is stored in a firewall server inbound bytes field FIELD_SERVER_INBOUND_BYTES. A number of bytes sent to the server during this firewall connection is stored in a firewall server outbound bytes field FIELD_SERVER_OUTBOUND_BYTES.","A name of a network interface on which data from the client was received during this firewall connection is stored in a firewall client inbound interface field FIELD_CLIENT_INBOUND_INTERFACE. A name of a network interface through which data was transmitted to the client during this firewall connection is stored a in a firewall client outbound interface field FIELD_CLIENT_OUTBOUND_INTERFACE.","A name of a network interface on which data from the server was received during this firewall connection is stored in a firewall server inbound interface field FIELD_SERVER_INBOUND_INTERFACE. A name of a network interface through which data was transmitted to the server during this firewall connection is stored in a firewall server outbound interface field FIELD_SERVER_OUTBOUND_INTERFACE.","Scan Event Package","One group of managed products includes antivirus and content filtering products. Scan event package  () provides events with a schema design, described more completely below, for these managed products.","While the term scan may refer to the examination of a single data object, scan usually refers to the examination of a specific collection of data objects. Traditionally, antivirus products had three kinds of scans. A manual scan examined preexisting data, such as all files in a particular folder, when the user clicks a button in a graphic user interface (GUI). A scheduled scan was like a manual scan that was configured to run at particular times. An auto-protect scan, also called a real-time or automatic scan, examined data objects that were detected in real time, such as emails arriving at a server or disk files accessed by programs. This breakdown of the term scan can be applied to non-antivirus products as well.","This schema design allows the creation of a report showing all started (or completed) scans, and a report showing all the incidents found by a particular scan. A first report is useful for verifying that scheduled scans are running as expected either by an administrator or by security feedback and control manager A. A second report is useful for determining the effectiveness of different scans. In addition, this schema design facilitates the operation of security feedback and control system .","The schema includes events and a class to identify the start and end of each scan. A managed product generates a new GUID number for each scan and includes the GUID number in every event related to the scan. All scans are considered to be general-purpose that is, a scan is not an antivirus scan or a content filtering scan, but just a scan that may uncover incidents of any type.","Incidents","An incident is triggering of a rule with a condition and an action in a managed product . Examples of rules are \u201cif a file contains a virus, repair the file,\u201d or \u201cif repair is not possible, delete the file\u201d and \u201cif an incoming email has a subject header with a DDR score (using the Spam dictionary) greater than or equal to 20, drop the email.\u201d","Data Objects","A data object is anything that can be scanned (examined) to determine if the scan of the data object triggers one or more incident rules of the managed product . Examples of data objects are files, email messages, and boot records.","Matters are complicated by the fact that some data objects contain other data objects. An example is a Zip file that contains other files. Another example is an email message that contains several zip files, each of which contains several zip files.","Incidents can be found in any of these data objects and need to be logged individually, e.g., an event sent to security management system . Yet, scanning applications have a notion of a top-level object. These are the objects whose fates are determined based on their parts, but independently from each other. For example, a file scanner determines if the Zip file in the first example is free of viruses or not, and quarantines the whole Zip file or not. An email scanner determines if the email message is free of viruses or not, and delivers it or not.","Scan Event Package Data-Incident Events","As explained more completely below, the schema includes classes and event IDs for logging an incident in a top-level data object or one of its subcomponents. The single event describes the top-level data object, the subcomponent name (if applicable), the incident rule that was triggered, why the incident rule was triggered, and the status of the top-level data object and the subcomponent (if applicable).","If an application's scan finds multiple incidents in a single top-level data object, the application must log multiple data incident events, each of which describes the same data object but a different incident and perhaps a different subcomponent.","Scan Event Package Incident Event Types","The schema's event IDs describe the type of incident that occurred in general terms. This level of event categorization is intended for grouping events into families for determining what kind of end user view the events (antivirus administrator, spam\/content manager, human resources representative, etc.)","Scan Event Package Class Hierarchy","TABLE 26 shows one embodiment of a scan package class hierarchy and event IDs used with each class in this embodiment of scan event package. The class structure is described more completely below. Each class inherits from security base event class CLASS_BASE (TABLE 2 and ).",{"@attributes":{"id":"p-0478","num":"0539"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 26"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event Class","Event IDs"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CLASS_DATA_SCAN","EVENT_DATA_SCAN_START"]},{"entry":[{},"EVENT_DATA_SCAN_END"]},{"entry":[{},"EVENT_DATA_SCAN_PAUSE"]},{"entry":[{},"EVENT_DATA_SCAN_RESUME"]},{"entry":[{},"EVENT_DATA_SCAN_CANCEL"]},{"entry":["CLASS_DATA_INCIDENT","EVENT_DATA_GENERIC"]},{"entry":[{},"CONTENT"]},{"entry":[{},"EVENT_DATA_MALWARE"]},{"entry":[{},"CONTENT"]},{"entry":[{},"EVENT_DATA_SENSITIVE"]},{"entry":[{},"CONTENT"]},{"entry":[{},"EVENT_DATA_SPAM_CONTENT"]},{"entry":[{},"EVENT_DATA_UNSCANNABLE"]},{"entry":["CLASS_DATA_VIRUS","EVENT_DATA_VIRUS"]},{"entry":"INCIDENT"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Data scan event class CLASS_DATA_SCAN () inherits from security base event class CLASS_BASE. In this embodiment, data scan event class CLASS_DATA_SCAN has a predefined event class identifier.","Event objects, that are instantiations of data scan event class CLASS_DATA_SCAN include:\n\n","For events EVENT_DATA_SCAN_START, EVENT_DATA_SCAN_END, EVENT_DATA_SCAN_PAUSE, EVENT_DATA_SCAN_RESUME, and EVENT_DATA_SCAN_CANCEL, the event category is category CAT_SECURITY. The event severity is severity SEV_INFORMATIONAL.","In addition to fields  () that were presented in TABLE 2 for security base event class CLASS_BASE, data scan event class CLASS_DATA_SCAN () adds four fields  that are presented in TABLE 27 to the fields for security base event class CLASS_BASE. The type of each field also is presented in TABLE 27. A description of the value in each field follows TABLE 27.",{"@attributes":{"id":"p-0483","num":"0549"},"figref":"FIG. 29B","b":["29600","29100","29600","29100"]},{"@attributes":{"id":"p-0484","num":"0550"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 27"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_EVENT_GUID","guid"]},{"entry":[{},"FIELD_DATA_SCAN_GUID","guid"]},{"entry":[{},"FIELD_DATA_SCAN_NAME","info"]},{"entry":[{},"FIELD_DATA_SCAN_TYPE_ID","id"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"An event instance ID is stored in a system data scan event ID field FIELD_EVENT_GUID. This ID is supplied by security management system  and is used by system  to join the event class tables for a particular incident.","An application-generated ID number linking all events associated with a single scan of multiple objects is stored in an application data scan ID field FIELD_DATA_SCAN_GUID.","A name of the scan is stored in a data scan name field FIELD_DATA_SCAN_NAME. The name entered in this field could be an administrator-supplied name, an application-generated summary of the scan settings, or blank. The name describes the overall purpose of the scan. The name does not try to describe every detail of the scan settings. Examples of scan names include \u201cHome office weekly user database scan,\u201d \u201cScan folders for viruses,\u201d and \u201cFull system virus scan.\u201d","A type of scan is stored in data scan type field FIELD_DATA_SCAN_TYPE_ID. In one embodiment, the value entered in this field is one of DATA_SCAN_TYPE_AUTO, DATA_SCAN_TYPE_MANUAL, and DATA_SCAN_TYPE_SCHEDULED. The value selected from this set of values is determined by whether the scan is an automatic scan, a manual scan, or a scheduled scan, respectively.","One problem with data scan events is that it is not obvious when an auto-protect scan begins and ends. One approach is to say that each real-time scan of an individual data object is a complete auto-protect scan. This is the easiest approach to implement, but it generates a large volume of scan start and stop events.","Another approach is to say that an auto-protect scan starts whenever real-time scanning is activated, e.g., at application startup, or whenever auto-protect is turned on, and ends when scanning is deactivated, e.g., at application shutdown, or whenever auto-protect is turned off. This approach generates the most meaningful events, but there is the possibility that a single scan can run for days, weeks, or even months.","A third approach is to declare that auto-protect scans are not really scans at all, and to not any log scan events for them or fill in scan IDs for the data incident events. In one embodiment, the second approach is used in system .","Data Incident Class","Data incident event class CLASS_DATA_INCIDENT () inherits from security base event class CLASS_BASE. In this embodiment, data incident event class CLASS_DATA_INCIDENT has a predefined event class identifier.","Event objects, that are instantiations of data incident event class CLASS_DATA_INCIDENT include:\n\n","For events EVENT_DATA_GENERIC_CONTENT, EVENT_DATA_MALWARE_CONTENT, EVENT_DATA_SENSITIVE_CONTENT, EVENT_DATA_SPAM_CONTENT, and EVENT_DATA_UNSCANNABLE, the event category is category CAT_SECURITY. In one embodiment, the event severity is for events EVENT_DATA_GENERIC_CONTENT, EVENT_DATA_MALWARE_CONTENT, EVENT_DATA_SENSITIVE_CONTENT is selected as one of SEV_WARNING, SEV_MINOR, SEV_MAJOR, and SEV_CRITICAL as defined in TABLE 4.","For event EVENT_DATA_SPAM_CONTENT, in one embodiment, the severity is SEV_INFORMATIONAL for most spam detection events. However, severity SEV_WARNING is recommended of situations where SPAM detection is not highly reliable and the event may need to be reviewed.","For event EVENT_DATA_UNSCANNABLE, in one embodiment, the severity is SEV_WARNING if the reason for the inability to scan the data object is an error, and otherwise is SEV_INFORMATIONAL.","Data incident event class CLASS_DATA_INCIDENT has fields for describing any kind of data object and incident in general terms. Subclasses provide additional fields for special data objects or incidents requiring more detail.","In addition to fields  (FIG. B_) that were presented in TABLE 2 for security base event class CLASS_BASE, data incident event class CLASS_DATA_INCIDENT () adds fields  that are presented in TABLE 28 to fields  for security base event class CLASS_BASE. The type of each field also is presented in TABLE 28. A description of the value in each field follows TABLE 28.","FIGS. B_ and B_ illustrate a data incident event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0500","num":"0571"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 28"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_EVENT_GUID","guid"]},{"entry":[{},"FIELD_DATA_SCAN_GUID","guid"]},{"entry":[{},"FIELD_DATA_TYPE_ID","id"]},{"entry":[{},"FIELD_DATA_NAME","info"]},{"entry":[{},"FIELD_DATA_STATUS_ID","id"]},{"entry":[{},"FIELD_DATA_PART_NAME","info"]},{"entry":[{},"FIELD_DATA_PART_STATUS_ID","id"]},{"entry":[{},"FIELD_DATA_PERSISTENCE_ID","id"]},{"entry":[{},"FIELD_DATA_DIRECTION_ID","id"]},{"entry":[{},"FIELD_DATA_SOURCE_DOMAIN","info"]},{"entry":[{},"FIELD_DATA_DEST_DOMAIN","info"]},{"entry":[{},"FIELD_DATA_SOURCE_HOST","info"]},{"entry":[{},"FIELD_DATA_DEST_HOST","info"]},{"entry":[{},"FIELD_DATA_SENDER","info"]},{"entry":[{},"FIELD_DATA_RECIPIENTS","info"]},{"entry":[{},"FIELD_DATA_SUBJECT","info"]},{"entry":[{},"FIELD_DATA_HEADERS","info"]},{"entry":[{},"FIELD_DATA_INFO","info"]},{"entry":[{},"FIELD_DATA_SIZE","info"]},{"entry":[{},"FIELD_DATA_CREATED","dt"]},{"entry":[{},"FIELD_DATA_MODIFIED","dt"]},{"entry":[{},"FIELD_DATA_CREATOR","info"]},{"entry":[{},"FIELD_DATA_MODIFIER","info"]},{"entry":[{},"FIELD_DATA_QUARANTINE_ID","info"]},{"entry":[{},"FIELD_DATA_BACKUP_ID","info"]},{"entry":[{},"FIELD_DATA_RULE_DESCR","info"]},{"entry":[{},"FIELD_DATA_RULE_REASON","info"]},{"entry":[{},"FIELD_DATA_RULE_REASON_ID","id"]},{"entry":[{},"FIELD_DATA_RULE_MODIFIED","dt"]},{"entry":[{},"FIELD_DATA_SIGNATURE","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"An event instance ID is stored in a system data scan event ID field FIELD_EVENT_GUID. This ID is supplied by security management system  and is used by system  to join the event class tables for a particular incident.","An application-generated ID number linking all events associated with a single scan of multiple objects is stored in an application data scan ID field FIELD_DATA_SCAN_GUID.","A type of the data object, as a whole, is stored in data type ID field FIELD_DATA_TYPE_ID. In one embodiment, the value of the data object type ID is selected from the values in TABLE 29.",{"@attributes":{"id":"p-0504","num":"0575"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 29"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Values for field FIELD_DATA_TYPE_ID"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DATA_TYPE_MEMORY"]},{"entry":[{},"DATA_TYPE_BOOT_RECORD"]},{"entry":[{},"DATA_TYPE_FILE"]},{"entry":[{},"DATA_TYPE_HTTP"]},{"entry":[{},"DATA_TYPE_HTTPS"]},{"entry":[{},"DATA_TYPE_FTP"]},{"entry":[{},"DATA_TYPE_POP"]},{"entry":[{},"DATA_TYPE_SMTP"]},{"entry":[{},"DATA_TYPE_GROUPWARE_EMAIL"]},{"entry":[{},"DATA_TYPE_GROUPWARE_DOC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A human-readable name of the data object is stored in data object name field FIELD_DATA_NAME (TABLE 28). Examples of names include a fully qualified file name, a URL, and a Lotus Notes UNID. The name should allow an administrator or an automated process, e.g., a rules engine, to locate the data object (if possible), using also the machine information in security base event class CLASS_BASE. Examples of names that could be used in this field include \u201cMemory,\u201d \u201cDrive C: boot record,\u201d \u201cc:\\file.doc,\u201d \u201c\\\\server\\volume\\file.doc,\u201d \u201c\/home\/username\/file.doc,\u201d \u201chttp:\/\/www.badsite.com\/reallybadpage.html,\u201d \u201cM200120122242507013,\u201d and \u201cNotes:\/\/USSM-MAIL01-1\/8825677C006EA261\/38D46BF5E8F08834852564B500129B2C\/D6B 9A2082044889A88256AlE006EEAD4.","A status of the data object as a whole is stored in data object status identifier field FIELD_DATA_STATUS_ID. In one embodiment, this is the status after all parts of the whole data object that have been scanned. This implies an application should delay logging any events for a data object until the object has been completely processed.","In one embodiment, the value of the data object status identifier is selected from the values in TABLE 30.",{"@attributes":{"id":"p-0508","num":"0579"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 30"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Values for field FIELD_DATA_STATUS_ID"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DATA_STATUS_CORRECTED"]},{"entry":[{},"DATA_STATUS_PARTIALLY_CORRECTED"]},{"entry":[{},"DATA_STATUS_UNCORRECTED"]},{"entry":[{},"DATA_STATUS_INFECTED"]},{"entry":[{},"DATA_STATUS_BLOCKED"]},{"entry":[{},"DATA_STATUS_BOUNCED"]},{"entry":[{},"DATA_STATUS_DELAYED"]},{"entry":[{},"DATA_STATUS_DELETED"]},{"entry":[{},"DATA_STATUS_QUARANTINED"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A human-readable name of the part of the data object where the incident was detected is stored in a data part name field FIELD_DATA_PART_NAME. The value entered is the name or relative pathname of a subcomponent of the data object, such as a file attachment or header within a mail message, or a file within an archive (such as a zip file). Examples of values found in this field include \u201cattachment1.doc,\u201d \u201cattachment2.zip\/bad.doc, \u201cpart.mime\/part.cab\/part.uue\/part.doc,\u201d \u201cSubject:,\u201d and \u201c<script>.\u201d This field is blank if the problem was with the entire data object, e.g., a virus in a simple *.COM file.","A status of the part of the data object where the incident was detected is stored in a data object part status identifier field FIELD_DATA_PART_STATUS_ID. In one embodiment, the value of the data object part status identifier is selected from the values in TABLE 31.",{"@attributes":{"id":"p-0511","num":"0582"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 31"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Values for field"},{"entry":"FIELD_DATA_PART_STATUS_ID"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DATA_STATUS_CORRECTED"]},{"entry":[{},"DATA_STATUS_UNCORRECTED"]},{"entry":[{},"DATA_STATUS_INFECTED"]},{"entry":[{},"DATA_STATUS_DELETED"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"A permanence of the data object is stored in a data object persistence identifier field FIELD_DATA_PERSISTENCE_ID. In one embodiment, the value in field FIELD_DATA_PERSISTENCE_ID is one of DATA_PERSISTENCE_FIXED and DATA_PERSISTENCE_TRANSIENT.","A fixed data object is stored in a semi-permanent storage location and is scanned at that location. Examples of fixed data objects include a file on disk or an email message in an inbox. A transient data object is scanned as the data object passes through a scanning system. Examples of transient data objects include email in transit. The defining characteristic of a transient data object is that an attempt to locate the data object after the data object has been scanned most likely fails because the data object has moved to a new location or no longer exists","The direction of the data transfer relative to the scanning host or to the organization is stored in a data object direction identifier field FIELD_DATA_DIRECTION_ID. This field may be blank, or in one embodiment includes one of DATA_DIRECTION_INBOUND and DATA_DIRECTION_OUTBOUND. Email scanned at an Internet gateway might be characterized as inbound to the organization (from the internet) or outbound from the organization (to the internet). Email scanned at a workstation might be characterized as inbound to or outbound from the workstation","A domain from which the data object originated is stored in a data object source domain field FIELD_DATA_SOURCE_DOMAIN. This field may be blank. This information may already be present in the uniform resource identifier in field FIELD_DATA_NAME that was described above, but the information is stored separately here for reporting purposes.","A domain to which the data object is being transmitted is stored in a data object destination domain field FIELD_DATA_DEST_DOMAIN. This field may be blank. This information may already be present in the uniform resource identifier in field FIELD_DATA_NAME that was described above, but the information is stored separately here for reporting purposes.","A host from which the data object originated is stored in a data object source host field FIELD_DATA_SOURCE_HOST. This field may be blank, text, or an IP address in one embodiment. This information may already be present in the uniform resource identifier in field FIELD_DATA_NAME that was described above, but the information is stored separately here for reporting purposes.","A host to which the data object is being transmitted is stored in a data object destination host field FIELD_DATA_DEST_HOST. This field nay be blank, text, or an IP address in one embodiment. This information may already be present in the uniform resource identifier in field FIELD_DATA_NAME that was described above, but the information is stored separately here for reporting purposes.","A name of the user sending the data object is stored in a data object sender field FIELD_DATA_SENDER. This field may be blank.","Name(s) of the user(s) receiving the data object, separated by comas, is stored in data object recipients field FIELD_DATA_RECIPIENTS. If the string in this field is too long for this field, the application may truncate the string at any point and append ellipses (\u201c . . . \u201d). This information is only a helpful hint for human beings and may not be reliable for automated processing. This field may be blank.","A subject or title of the data object as a whole is stored in data object subject field FIELD_DATA_SUBJECT. This field may be blank.","Header information from the data object is stored in a data object header field FIELD_DATA_HEADERS. This field contains a sequence of header lines separated by carriage return\/linefeed. The information is this field is intended for mail or HTTP headers of the form <Name>: <Value>. If the string is too long to fit within this field, the application may truncate the string at any point and append ellipses (\u201c . . . \u201d). The application may also omit uninteresting header lines. Note that the email subject may appear within this field even thought it is also recorded in a separate field. This field may be blank. An example of header information is:\n\n","Additional information about the data object is stored in an data object information field FIELD_DATA_INFO. This field may be blank","A size of the data object as a whole in bytes is stored in a data object size field FIELD_DATA_SIZE. In one embodiment, the size is specified as a full byte number with no punctuation; for example, to log 30 MB, use 30270000. This field may be blank.","A time when the data object was created is stored in a data object created field FIELD_DATA_CREATED. This field may be blank.","A time when the data object was last modified is stored in a data object modified field FIELD_DATA_MODIFIED. This field may be blank.","A name of the user that created the data object is stored in a data object creator field FIELD_DATA_CREATOR. This field may be blank.","A name of the user that last modified the data object is stored in a data object modifier field FIELD_DATA_MODIFIED. This field may be blank.","If the data object as a whole was quarantined, the unique identifier of the quarantined copy is stored in a data quarantined identifier field FIELD_DATA_QUARANTINE_ID. Otherwise, this field is blank. The nature of this identifier entered in this field is application specific.","If a backup or archival copy of the data object as a whole was created, the unique identifier of the copy is stored in a data object backup identifier field FIELD_DATA_BACKUP_ID. If a backup or archival copy was not created, this field is blank. The nature of this identifier is application specific. Some applications can create a backup copy before attempting repairs. Others can create an archive copy (e.g. of mail messages) after performing repairs.","A name of the rule that was triggered that results in generation of the event is stored in a data rule description field FIELD_DATA_RULE_DESCR. This field may be blank, but this is not recommended. The name of the rule could be an administrator-supplied name, or an application-generated summary of the rule. The name describes the overall purpose of the rule; it does not try to describe every detail of the rule conditions. Examples of rule names include a) \u201cBlock outbound emails containing the word \u2018ProjectX\u2019,\u201d b) \u201cBlock emails containing phrases from dictionary \u2018Spam\u2019,\u201d c) \u201cBlock spam,\u201d d) \u201cDetect viruses,\u201d e) \u201cRepair or delete viruses,\u201d f) \u201cBrowse local sites only,\u201d g) \u201cBrowse approved sites,\u201d and h) \u201cLog and categorize web access.\u201d","A full or partial description of the conditions that triggered the rule in field FIELD_DATA_RULE_DESCR is entered in a data rule reason field FIELD_DATA_RULE_REASON. This field may be blank, but this is not recommended. The description entered in this field typically includes details such as words found, word categories used, blocked addresses detected, heuristic scores computed, threshold values exceeded, virus found, etc. The description should minimize use of embedded English, instead relying on administrator-assigned labels and data values. Examples, corresponding to the rule descriptions above for field FIELD_DATA_RULE_DESCR, are respectively, a) \u201cProjectX,\u201d b) \u201cGET RICH QUICK,\u201d c) \u201cKnown Spammers: 111.222.333.444\u201d or \u201cSpam: 95%\u201d (heuristic detection), d) \u201cW32.Nimda.A@mm,\u201d e) \u201cUnknown virus\u201d (heuristic detection), f) \u201chttp:\/\/www.externalsite.com,\u201d g) \u201cMilitancy: 23\u201d (heuristic detection using DDR dictionaries), and h) \u201csex\u201d (category for http:\/\/www.playboy.com)","A reason for a scan failure is stored in an event EVENT_DATA_UNSCANNABLE is stored in a FIELD_DATA_RULE_REASON_ID. If this field is used, field FIELD_DATA_RULE_REASON is left blank. In one embodiment, the value of the reason for the scan failure is selected from the values in TABLE 32.",{"@attributes":{"id":"p-0534","num":"0606"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 32"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Values for field FIELD_DATA_RULE_REASON_ID"]},{"entry":[{},"DATA_UNSCANNABLE_EXCLUDED"]},{"entry":[{},"DATA_UNSCANNABLE_PERMISSION"]},{"entry":[{},"DATA_UNSCANNABLE_SIGNED"]},{"entry":[{},"DATA_UNSCANNABLE_ENCRYPTED"]},{"entry":[{},"DATA_UNSCANNABLE_ERROR"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The values listed in TABLE 32 are illustrative only and are not intended to limit the invention to the specific values presented. One of skill in the art can use less than these values, or can add different values as appropriate. See TABLE 35 below for an interpretation of the items in TABLE 32.","A time when the rule was last modified is stored in a data rule modified field FIELD_DATA_RULE_MODIFIED. If the application does not track the modification time of each rule, the time of the configuration containing the rules instead is used. This field allows an administrator to determine if a rule has been modified but not renamed after it was triggered (or in other words, if the current version of the rule is the one used for this event). The need for this field has been reduced by the configuration history tracking system, which can reconstruct a configuration based on the configuration name and event time as described in copending, commonly filed and commonly assigned U.S. patent application Ser. No. 10\/660,422, entitled \u201cConfiguration System and Methods Including Configuration Inheritance and Revisioning,\u201d of Paul M. Agbabian and David R. Hertel, which is incorporated herein by reference in its entirety.","Field FIELD_DATA_SIGNATURE is a reserved field in this embodiment, and may be blank.","This embodiment, as described above, uses two non-translatable text fields to describe the incident rule and why the was triggered: fields FIELD_DATA_RULE_DESCR and FIELD_DATA_RULE_REASON. These fields provide a predictable and maintainable way to convey problems to administrators at a high level without specifying too many details on how the problems were detected","Data Virus Incident Class","Data virus incident event class CLASS_DATA_VIRUS_INCIDENT represents a known virus, unknown virus, worm, Trojan horse, or other type of malware detected by a virus scanner. The virus name as reported by the scanning engine should be recorded in field FIELD_DATA_RULE_REASON of the superclass.","Data virus incident event class CLASS_DATA_VIRUS_INCIDENT () inherits from security base event class CLASS_BASE and from data incident event class CLASS_DATA_INCIDENT. In this embodiment, data virus incident event class CLASS_DATA_VIRUS_INCIDENT has a predefined event class identifier.","Event objects, that are instantiations of data virus incident event class CLASS_DATA_VIRUS_INCIDENT, include event EVENT_DATA_VIRUS (), a data virus event that is generated when a virus is detected by a virus scanning engine.","For event EVENT_DATA_VIRUS, the event category is category CAT_SECURITY. The event severity is severity SEV_WARNING, when a infected data object is corrected and the virus removed. The event severity is severity SEV_MINOR, when a virus is quarantined. The event severity is severity SEV_MAJOR, when a virus is uncorrected.","In addition to the fields presented in TABLE 2 for security base event class CLASS_BASE and the fields presented in TABLE 28 for data incident class CLASS_DATA_INCIDENT, data virus incident event class CLASS_DATA_VIRUS_INCIDENT () adds the fields presented in TABLE 33 to the fields for security base event class CLASS_BASE. The type of each field also is presented in TABLE 33. A description of the value in each field follows TABLE 33.","FIGS. B_ and B_ illustrate a data incident event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0545","num":"0617"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 33"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_EVENT_GUID","guid"]},{"entry":[{},"FIELD_VIRUS_NUMBER","info"]},{"entry":[{},"FIELD_VIRUS_TYPE_ID","Id"]},{"entry":[{},"FIELD_VIRUS_DEFINITIONS","info"]},{"entry":[{},"FIELD_VIRUS_QS_NAME","info"]},{"entry":[{},"FIELD_VIRUS_QS_UUID","guid"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"An event instance ID is stored in a system data scan event ID field FIELD_EVENT_GUID. This ID is supplied by security management system  and is used by system  to join the event class tables for a particular incident.","A virus identification number as reported by a virus scanning engine is stored in a virus number field FIELD_VIRUS_NUMBER. This field may be blank.","Field FIELD_VIRUS_TYPE_ID is a reserved field and so is blank. In another embodiment, this field stores a virus type identifier.","A version of the virus definition files used by the virus scanning engine at the time of detection of the virus is stored in a virus definitions field FIELD_VIRUS_DEFINITIONS. In one embodiment, the version has a format of the form YYYYMMDD.RRR, where YYYY is the year, MM is the month, DD is the day and RRR is the number of the current version of the virus definitions.","If a virus host was submitted to a quarantine server, an identity of the quarantine server is stored in a quarantine server name field FIELD_VIRUS_QS_NAME. Otherwise, this field is blank.","If the virus host was submitted to a quarantine server, an identifier of the submission, e.g., the universal unique identifier (UUID), is stored in a quarantine server submission identifier field FIELD_VIRUS_QS_UUID. Otherwise, this field is blank","In one embodiment, as illustrated in , three event families based upon the scan events are defined. Antivirus incident event family  includes the events listed below in TABLE 34. Content Filtering Incidents family  includes the event listed below in TABLE 34. Finally, TABLE 34 presents the events in sensitive content incident events family . Families , , and  are memory structures in memory . In , the event ID is used as reference numeral to represent the event memory structure having that event ID as described above, and incorporated herein by reference. These families may also include other intrusion events that are defined from the classes described above, or from classes that are added.",{"@attributes":{"id":"p-0553","num":"0625"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 34"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event Family","Event IDs"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Antivirus Incidents","EVENT_DATA_SCAN_START"]},{"entry":[{},"EVENT_DATA_SCAN_END"]},{"entry":[{},"EVENT_DATA_SCAN_PAUSE"]},{"entry":[{},"EVENT_DATA_SCAN_RESUME"]},{"entry":[{},"EVENT_DATA_SCAN_CANCEL"]},{"entry":[{},"EVENT_DATA_UNSCANNABLE"]},{"entry":[{},"EVENT_DATA_VIRUS"]},{"entry":[{},"EVENT_DATA_MALWARE_CONTENT"]},{"entry":["Content Filtering Incidents","EVENT_DATA_SCAN_START"]},{"entry":[{},"EVENT_DATA_SCAN_END"]},{"entry":[{},"EVENT_DATA_SCAN_PAUSE"]},{"entry":[{},"EVENT_DATA_SCAN_RESUME"]},{"entry":[{},"EVENT_DATA_SCAN_CANCEL"]},{"entry":[{},"EVENT_DATA_UNSCANNABLE"]},{"entry":[{},"EVENT_DATA_GENERIC_CONTENT"]},{"entry":[{},"EVENT_DATA_SPAM_CONTENT"]},{"entry":["Sensitive Content Filtering","EVENT_DATA_SCAN_START"]},{"entry":["Incidents","EVENT_DATA_SCAN_END"]},{"entry":[{},"EVENT_DATA_SCAN_PAUSE"]},{"entry":[{},"EVENT_DATA_SCAN_RESUME"]},{"entry":[{},"EVENT_DATA_SCAN_CANCEL"]},{"entry":[{},"EVENT_DATA_UNSCANNABLE"]},{"entry":[{},"EVENT_DATA_SENSITIVE_CONTENT"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 35 gives the English translation of all event IDs and event field string value IDs used in the scan event package classes.",{"@attributes":{"id":"p-0555","num":"0627"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 35"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event\/Value ID","English Translation"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["EVENT_DATA_SCAN_START","scan started"]},{"entry":["EVENT_DATA_SCAN_END","scan ended"]},{"entry":["EVENT_DATA_SCAN_PAUSE","scan paused"]},{"entry":["EVENT_DATA_SCAN_RESUME","scan resumed"]},{"entry":["EVENT_DATA_SCAN_CANCEL","scan canceled"]},{"entry":["EVENT_DATA_UNSCANNABLE","unscannable item"]},{"entry":["EVENT_DATA_VIRUS","Virus"]},{"entry":["EVENT_DATA_GENERIC_CONTENT","content violation"]},{"entry":["EVENT_DATA_MALWARE_CONTENT","malware content"]},{"entry":["EVENT_DATA_SENSITIVE_CONTENT","sensitive content"]},{"entry":[{},"violation"]},{"entry":["EVENT_DATA_SPAM_CONTENT","Spam"]},{"entry":["DATA_SCAN_TYPE_AUTO","Automatic"]},{"entry":["DATA_SCAN_TYPE_MANUAL","Manual"]},{"entry":["DATA_SCAN_TYPE_SCHEDULED","Scheduled"]},{"entry":["DATA_TYPE_MEMORY","Memory"]},{"entry":["DATA_TYPE_BOOT_RECORD","boot record"]},{"entry":["DATA_TYPE_FILE","File"]},{"entry":["DATA_TYPE_HTTP","HTTP"]},{"entry":["DATA_TYPE_HTTPS","HTTPS"]},{"entry":["DATA_TYPE_FTP","FTP"]},{"entry":["DATA_TYPE_POP","POP mail"]},{"entry":["DATA_TYPE_SMTP","SMTP mail"]},{"entry":["DATA_TYPE_GROUPWARE_EMAIL","Groupware mail"]},{"entry":["DATA_TYPE_GROUPWARE_DOC","Groupware doc"]},{"entry":["DATA_STATUS_CORRECTED","Corrected"]},{"entry":["DATA_STATUS","Partially corrected"]},{"entry":"PARTIALLY_CORRECTED"},{"entry":["DATA_STATUS_UNCORRECTED","uncorrected"]},{"entry":["DATA_STATUS_INFECTED","Infected"]},{"entry":["DATA_STATUS_BLOCKED","Blocked"]},{"entry":["DATA_STATUS_BOUNCED","Bounced"]},{"entry":["DATA_STATUS_DELAYED","Delayed"]},{"entry":["DATA_STATUS_DELETED","Deleted"]},{"entry":["DATA_STATUS_QUARANTINED","quarantined"]},{"entry":["DATA_DIRECTION_INBOUND","Inbound"]},{"entry":["DATA_DIRECTION_OUTBOUND","Outbound"]},{"entry":["DATA_PERSISTENCE_TRANSIENT","Transient"]},{"entry":["DATA_PERSISTENCE_FIXED","Fixed"]},{"entry":["DATA_UNSCANNABLE_EXCLUDED","excluded from scan"]},{"entry":["DATA_UNSCANNABLE_PERMISSION","insufficient"]},{"entry":[{},"permissions to scan"]},{"entry":["DATA_UNSCANNABLE_SIGNED","cannot modify signed"]},{"entry":[{},"data"]},{"entry":["DATA_UNSCANNABLE_ENCRYPTED","cannot scan encrypted"]},{"entry":[{},"data"]},{"entry":["DATA_UNSCANNABLE_ERROR","error scanning"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 36 is a view  () for one event EVENT_DATA_VIRUS for an EXE file. The information retrieved from one event EVENT_DATA_VIRUS for an EXE file using view  may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . As explained above, a view is a database object that is defined for an event class by a managed product , as described more completely below. View  is stored in memory .",{"@attributes":{"id":"p-0557","num":"0629"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 36"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","2"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Virus"]},{"entry":["FIELD_PRODUCT_ID","SAV"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_DESCR","Repair or delete viruses"]},{"entry":["FIELD_DATA_RULE_REASON","W32.MEANVIRUS.1234"]},{"entry":["FIELD_DATA_TYPE_ID","file"]},{"entry":["FIELD_DATA_NAME","c:\\infected.exe"]},{"entry":["FIELD_DATA_STATUS","Fixed"]},{"entry":"FIELD_DATA_PART_NAME"},{"entry":"FIELD_DATA_PART_STATUS_ID"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 37 is another example of a view similar to view  () for an event EVENT_DATA_VIRUS for an unrepaired EXE File. The information retrieved may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . In the displayed or printed report, the field Name may be replaced by the English equivalent, or not included in the report.",{"@attributes":{"id":"p-0559","num":"0631"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 37"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","4"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Virus"]},{"entry":["FIELD_PRODUCT_ID","SAV"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_DESCR","Detect viruses"]},{"entry":["FIELD_DATA_RULE_REASON","32.MEANVIRUS.1234"]},{"entry":["FIELD_DATA_TYPE_ID","file"]},{"entry":["FIELD_DATA_NAME","c:\\infected.exe"]},{"entry":["FIELD_DATA_STATUS","Infected"]},{"entry":"FIELD_DATA_PART_NAME"},{"entry":"FIELD_DATA_PART_STATUS_ID"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 38 is still another example of a view similar to view  () for an event EVENT_DATA_VIRUS for a ZIP file. The information retrieved may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . In the displayed or printed report, the field Name may be replaced by the English equivalent, or not included in the report.",{"@attributes":{"id":"p-0561","num":"0633"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 38"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","2"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Virus"]},{"entry":["FIELD_PRODUCT_ID","SAV"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_DESCR","Repair or delete viruses"]},{"entry":["FIELD_DATA_RULE_REASON","32.UNREPVIRUS.9999"]},{"entry":["FIELD_DATA_TYPE_ID","file"]},{"entry":["FIELD_DATA_NAME","c:\\infected.zip"]},{"entry":["FIELD_DATA_STATUS","Fixed"]},{"entry":["FIELD_DATA_PART_NAME","infected.doc"]},{"entry":["FIELD_DATA_PART_STATUS_ID","Deleted"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 39 is yet still yet another example of a view similar to view  () for an event EVENT_DATA_UNSCANNABLE for a ZIP file. The information retrieved may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . In the displayed or printed report, the field Name may be replaced by the English equivalent, or not included in the report.",{"@attributes":{"id":"p-0563","num":"0635"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 39"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","2"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Unscannable item"]},{"entry":["FIELD_PRODUCT_ID","SAV"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_DESCR","Repair or delete viruses"]},{"entry":["FIELD_DATA_RULE_REASON","Insufficient permissions to"]},{"entry":[{},"scan"]},{"entry":["FIELD_DATA_TYPE_ID","file"]},{"entry":["FIELD_DATA_NAME","c:\\infected.zip"]},{"entry":["FIELD_DATA_STATUS","Uncorrected"]},{"entry":"FIELD_DATA_PART_NAME"},{"entry":"FIELD_DATA_PART_STATUS_ID"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 40 is a view  () for event EVENT_DATA_UNSCANNABLE for a ZIP file. The information retrieved from event EVENT_DATA_UNSCANNABLE for a ZIP file using view  may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . As explained above, a view is a database object that is defined for an event class by a managed product , as described more completely below. View  is stored in memory .",{"@attributes":{"id":"p-0565","num":"0637"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 40"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","2"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_PRODUCT_ID","SAV"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_REASON_ID","Insufficient permissions to"]},{"entry":[{},"scan"]},{"entry":["FIELD_DATA_NAME","c:\\infected.zip"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 41 is a view  () for event EVENT_DATA_VIRUS for a Notes email. The information retrieved from event EVENT_DATA_VIRUS for a Notes email using view  may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . As explained above, a view is a database object that is defined for an event class by a managed product , as described more completely below. View  is stored in memory .",{"@attributes":{"id":"p-0567","num":"0639"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 41"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","2"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Virus"]},{"entry":["FIELD_PRODUCT_ID","SAV for Lotus Notes"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_REASON","CodeRed"]},{"entry":["FIELD_VIRUS_DEFINITIONS","20030131.001"]},{"entry":["FIELD_DATA_NAME","Notes:\/\/USSM-MAIL01-"]},{"entry":[{},"1\/8825677C006EA261\/"]},{"entry":[{},"38D46BF5E8"]},{"entry":[{},"F08834"]},{"entry":[{},"852564B500129B2C\/"]},{"entry":[{},"D6B9A2082044"]},{"entry":[{},"889A88256A1E006EEAD4"]},{"entry":["FIELD_DATA_SUBJECT","Free Software!"]},{"entry":["FIELD_DATA_SENDER","Joe Smith"]},{"entry":["FIELD_DATA_RECIPIENTS","John Doe"]},{"entry":["FIELD_DATA_STATUS","Fixed"]},{"entry":["FIELD_DATA_PART_NAME","screenshot.gif.exe"]},{"entry":["FIELD_DATA_PART_STATUS_ID","Fixed"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 42 is a view  () for event EVENT_DATA_GENERIC_CONTENT for a blocked web page. The information retrieved from event EVENT_DATA_GENERIC_CONTENT for a blocked web page using view  may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . As explained above, a view is a database object that is defined for an event class by a managed product , as described more completely below. View  is stored in memory .",{"@attributes":{"id":"p-0569","num":"0641"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 42"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","2"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Content violation"]},{"entry":["FIELD_PRODUCT_ID","SCF for Gateways"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_DESCR","Block known bad sites"]},{"entry":["FIELD_DATA_RULE_REASON","MyBlockedSites"]},{"entry":["FIELD_DATA_NAME","http:\/\/www.externalsite.com"]},{"entry":["FIELD_DATA_RECIPIENTS","John Doe"]},{"entry":["FIELD_DATA_STATUS","Blocked"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"TABLE 43 is a view  () for event EVENT_DATA_VIRUS for a nested ZIP file that is still infected. The information retrieved from for event EVENT_DATA_VIRUS for a nested ZIP file that is still infected using view  may be formatted for printing of a list report, for display, or for further processing, for example, by security feedback and control system . As explained above, a view is a database object that is defined for an event class by a managed product , as described more completely below. View  is stored in memory .",{"@attributes":{"id":"p-0571","num":"0643"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 43"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Sample Display Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_CATEGORY_ID","Security"]},{"entry":["FIELD_SEVERITY","4"]},{"entry":["FIELD_EVENT_DT","Mar. 11, 2003, 1:20:23 PM"]},{"entry":["FIELD_EVENT_ID","Virus"]},{"entry":["FIELD_PRODUCT_ID","SAV for Lotus Notes"]},{"entry":["FIELD_MACHINE","bluegill"]},{"entry":["FIELD_DATA_RULE_DESCR","Repair or delete viruses"]},{"entry":["FIELD_DATA_RULE_REASON","BadNews"]},{"entry":["FIELD_VIRUS_DEFINITIONS","20030131.001"]},{"entry":["FIELD_DATA_NAME","c:\\file1.zip"]},{"entry":["FIELD_DATA_SIZE","24678000"]},{"entry":["FIELD_DATA_STATUS","Infected"]},{"entry":["FIELD_DATA_PART_NAME","nested.zip\/bad.doc"]},{"entry":["FIELD_DATA_PART_STATUS_ID","Infected"]},{"entry":["FIELD_DATA_CREATED","Dec. 25, 1993 11:45:52.403"]},{"entry":["FIELD_DATA_MODIFIED","Dec. 25, 2001 11:45:52.403"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Threat event package  () includes event classes that deal with threats for all managed products to use. Threat event package  provides an event hierarchy generic enough that managed products, e.g., applications, are able to record various types of threats to the system. In one embodiment, these event classes are the starting point for intrusion detection, firewall, gateway, groupware and virus type threats.","This set of classes is used for notifications of a more serious nature than routine activity. For example, assume an email gateway running an antivirus managed product detects an incoming virus. A single virus detection event would not be a threat but could result in several events being generated as described above. However, if the managed product detects  virus detection events in 10 minutes, the combination of events is a threat to the email system, and recorded as such. The same rational is applied to a firewall managed product. A single port scan or event should be recorded, but might not be considered a threat. Continuous scans of all ports would be considered a threat. The firewall managed product would then take action to deal with the threat.","Also, alert notification manager  or security feedback and control system C can uses events in this class to notify system administrators of threats to a particular subnet or other network portion. In additions security feedback and control system C could take action to isolate the subnet or to reconfigure managed products to deal with the threat.","In the following description, the following definitions are used:\n\n",{"@attributes":{"id":"p-0576","num":"0657"},"figref":"FIG. 38"},"Threat Event Package Class Hierarchy","TABLE 44 shows one embodiment of a threat event package class hierarchy and event IDs used with each class in this embodiment of threat event package . The class structure is described more completely below. Each class inherits from security base event class CLASS_BASE (TABLE 2 and ).",{"@attributes":{"id":"p-0578","num":"0659"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 44"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Event Class","Event IDs"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CLASS_THREAT",{}]},{"entry":"CLASS MALWARE"},{"entry":["CLASS","EVENT_THREAT_ADVISE_MALWARE"]},{"entry":["ADVISORY","EVENT_THREAT_UPDATE"]},{"entry":["MALWARE","EVENT_THREAT_CERTIFIED_DEFS"]},{"entry":[{},"EVENT_THREAT_NONCERTIFIED_DEFS"]},{"entry":["CLASS ACTIVITY","EVENT_THREAT_UNKNOWN_MALWARE"]},{"entry":["MALWARE","EVENT_THREAT_KNOWN_MALWARE"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Threat class CLASS_THREAT allows generation of threat events in a syntactically and semantically consistent manner. Information stored in the fields of threat class CLASS_THREAT is common to all threat events.","Threat class CLASS_THREAT extends security base event class CLASS_BASE. No events are defined for threat class CLASS_THREAT, because this class is an abstract class.","In addition to the fields presented in TABLE 2 for security base event class CLASS_BASE, class threat CLASS_THREAT () adds the fields presented in TABLE 45 to the fields for security base event class CLASS_BASE. The type of each field also is presented in TABLE 45. A description of the value in each field follows TABLE 45.",{"@attributes":{"id":"p-0582","num":"0663"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 45"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Field Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_EVENT_GUID (KEY)","guid"]},{"entry":[{},"FIELD_THREAT_GUID","guid"]},{"entry":[{},"FIELD_THREAT_NAME","info"]},{"entry":[{},"FIELD_THREAT_KNOWN_AS","info"]},{"entry":[{},"FIELD_THREAT_SUMMARY","varstr [1024]"]},{"entry":[{},"FIELD_THREAT_ASSESSMENT_ID","id"]},{"entry":[{},"FIELD_THREAT_TECHNICAL_INFO","varstr [1024]"]},{"entry":[{},"FIELD_THREAT_RESPONSE_INFO","varstr [1024]"]},{"entry":[{},"FIELD_THREAT_INFO_URL","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"An event instance ID is stored in an event ID field FIELD_EVENT_GUID. This ID is supplied by security management system  and is used by system  to join the event class tables for a particular incident.","A threat instance ID is stored in a managed product event ID field FIELD_THREAT_GUID. This ID is supplied by a managed product, and is a correlator ID that links to disparate records together that were part of the same set of events, where one event did not capture all the activity. In one embodiment, this field is not used.","A name of the threat is stored in a threat name field FIELD_THREAT_NAME. The value stored in this field is the intrusion vulnerability, virus name, or unknown, etc.","A text list of variants or other names for the threat are stored in a threat also known as field FIELD_THREAT_KNOWN_AS.","A high level English summary of the threat is stored in a threat summary field FIELD_THREAT_SUMMARY.","An identifier used to lookup a translated string is stored in a threat assessment identifier field FIELD_THREAT_ASSESSMENT_ID. The translated string is used to indicate how severe the problem is.","A detailed description of the threat is stored in a threat technical information field FIELD_THREAT_TECHNICAL_INFO. A detailed description of how to deal with the threat, if known, is stored in a threat response information field FIELD_THREAT_RESPONSE_INFO. This field may be left blank.","A uniform resource locator (URL) to additional information concerning the threat is stored in a threat information URL field FIELD_THREAT_INFO_URL. This field may be left blank.","Malware Class","Malware class CLASS_MALWARE extends class threat CLASS_THREAT that in turn extends security base event class CLASS_BASE. No events are defined for malware class CLASS_MALWARE, because this class also is an abstract class.","In addition to the fields presented in TABLE 2 for security base event class CLASS_BASE and the field presented in TABLE 45 for class threat CLASS_THREAT, malware class CLASS_MALWARE () adds the fields presented in TABLE 46 to the fields for those two classes. The type of each field also is presented in TABLE 46. A description of the value in each field follows TABLE 46.",{"@attributes":{"id":"p-0593","num":"0674"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 46"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Name","Field Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_MALWARE_INFECTION_LENGTH","info"]},{"entry":[{},"FIELD_MALWARE_MD5_SIG","info"]},{"entry":[{},"FIELD_MALWARE_VIRUS_DEF_DT","info"]},{"entry":[{},"FIELD_MALWARE_DEF_SEQ_ID","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"An infection length is stored in infection length field FIELD_MALWARE_INFECTION_LENGTH. A MD5 hash signature of the sample that is causing the outbreak is stored in a sample signature field FIELD_MALWARE_MD5_SIG. A string that gives a definition date for the antivirus definitions required to detect the malware are stored in a virus definition date and time field FIELD_MALWARE_VIRUS_DEF_DT. A sequence number that gives a definition sequencer required to detect the malware is stored in a definition sequence identifier field FIELD_MALWARE_DEF_SEQ_ID.","Malware Advisory Class","Malware advisory class CLASS_ADVISORY_MALWARE () is designed to be a warning for outbreak situations. All events based on this class are advisory and there may not be any activity found on a managed node. Since this class is designed for malicious software, its fields are oriented toward that end.","Intrusion detection and firewall applications could conceivably define custom classes at the same level as this class, i.e., derived from abstract threat class CLASS_THREAT. Information defined in these custom classes could pertain to vulnerability information. Events generated for the custom class could be vulnerability warnings that need to be recorded even when there was no activity detected. The same scenario could apply to the firewall application.","As indicated above, malware advisory class CLASS_ADVISORY_MALWARE () inherits from malware class CLASS_MALWARE that in turn extends class threat CLASS_THREAT that in turn extends security base event class CLASS_BASE. In this embodiment, malware advisory class CLASS_ADVISORY_MALWARE has a predefined event class identifier.","Event objects (), which are instantiations of malware advisory class CLASS_ADVISORY_MALWARE, include:\n\n","For event EVENT_THREAT_ADVISE_MALWARE, event EVENT_THREAT_ADVISORY_UPDATE, event EVENT_THREAT_CERTIFIED_DEFS, and event EVENT_THREAT_NONCERTIFIED_DEFS, the event category is category CAT_SECURITY. In one embodiment, the event severity is for event EVENT_THREAT_ADVISE_MALWARE is major, i.e., SEV_MAJOR. In this embodiment, the event severity is for event EVENT_THREAT_ADVISORY_UPDATE is warning, i.e., SEV_WARNING. For events EVENT_THREAT_CERTIFIED_DEFS and EVENT_THREAT_NONCERTIFIED_DEFS, the event severity is SEV_INFORMATIONAL.","Malware advisory class CLASS_ADVISORY_MALWARE has fields geared toward distributing information on the malware infection\/outbreak. In addition to fields  (FIG. B_) for security base event class CLASS_BASE, fields  for threat event class CLASS_THREAT, and fields  (FIG. B_) for class CLASS_MALWARE, Malware advisory class CLASS_ADVISORY_MALWARE () adds fields  of TABLE 47 for a malware advisory event . The type of each field also is presented in TABLE 47. A description of the value in each field follows TABLE 47. FIGS. B_ and B_ illustrate a malware advisory event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0601","num":"0686"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 47"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},"Field"]},{"entry":["Field Name","Type"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FIELD_THREAT_DISCOVERY_DT","date"]},{"entry":["FIELD_THREAT_LAST_UPDATE_DT","date"]},{"entry":["FIELD_THREAT_ASSESSMENT_WILD_ID","id"]},{"entry":["FIELD_THREAT_ASSESSMENT_DAMAGE_ID","id"]},{"entry":["FIELD_THREAT_ASSESSMENT_DISTRIBUTION_ID","id"]},{"entry":["FIELD_THREAT_ASSESSMENT_DETAIL","info"]},{"entry":["FIELD_THREAT_ASSESSMENT_DAMAGE_DETAIL","info"]},{"entry":["FIELD_THREAT_ASSESSMENT_DISTRIBUTION_DETAIL","info"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A date and time of the original discovery of the malware attack is stored in a threat discovery date and time field FIELD_THREAT_DISCOVERY_DT. A date and time that information about the malware attack was last updated is stored in a last update date and time field FIELD_THREAT_LAST_UPDATE_DT. A malware attack identifier that is used to lookup a translated string is stored in threat assessment wild identifier field FIELD_THREAT_ASSESSMENT_WILD_ID. The translated string is used to indicate how extensive the threat is found in the wild.","A malware attack damage identifier that is used to lookup a translated string is stored in threat damage assessment identifier field FIELD_THREAT_ASSESSMENT_DAMAGE_ID. The translated string is used to indicate the extent of the damage. A malware attack distribution identifier that is used to lookup a translated string is stored in threat distribution assessment identifier field FIELD_THREAT_ASSESSMENT_DISTRIBUTION_ID. The translated string is used to indicate how extreme the problem is in replicating or spreading.","A detailed description of how this threat is found in the wild is stored in threat assessment detail field FIELD_THREAT_ASSESSMENT_DETAIL. A detailed description of the damaged caused by this threat is stored in a threat damage assessment detail field FIELD_THREAT_ASSESSMENT_DAMAGE_DETAIL. A detailed description of how this threat distributes itself is stored in a threat distribution assessment detail field FIELD_THREAT_ASSESSMENT_DISTRIBUTION_DETAIL.","Malware Activity Class","Malware activity class CLASS_ACTIVITY_MALWARE () is designed for notifications of detected malicious software activity. Applications that detect malware type events at collection points can make use of this class and its defined events. For example, a process running on the management server A () can look through the virus events. When the number of virus events exceeds a threshold, a malware activity class event is generated.","Intrusion detection and firewall managed products could define a custom event class similar in nature, or semantics, but the data geared toward malicious activity in their managed product space.","As indicated above, malware activity class CLASS_ACTIVITY_MALWARE () inherits from malware class CLASS_MALWARE that in turn extends class threat CLASS_THREAT that in turn extends security base event class CLASS_BASE. In this embodiment, malware activity class CLASS_ACTIVITY_MALWARE has a predefined event class identifier.","Event objects (), which are instantiations of malware activity class CLASS_ACTIVITY_MALWARE, include:\n\n","Because the malware is a known type of malware, the solutions are already in place at the point of detection. However, the administrator and\/or security management system  still needs to determine why the malware infection is being repeatedly introduced.","For event EVENT_THREAT_UNKNOWN_MALWARE and event EVENT_THREAT_KNOWN_MALWARE, the event category is category CAT_SECURITY, and in one embodiment, the event severity is SEV_CRITICAL.","Malware activity class CLASS_ACTIVITY_MALWARE has fields geared toward distributing information on the location of the malware infection\/outbreak. In addition to fields  (FIG. B_) for security base event class CLASS_BASE, fields  for threat event class CLASS_THREAT, and fields  (FIG. B_) for class CLASS_MALWARE, Malware advisory class CLASS_ACTIVITY_MALWARE () adds fields  of TABLE 48 for a malware activity event . The type of each field also is presented in TABLE 48. A description of the value in each field follows TABLE 48. FIGS. B_ and B_ illustrate a malware advisory event memory structure  stored in memory . Memory structure  is illustrative only and is not intended to represent that the structure is stored in any particular way in memory .",{"@attributes":{"id":"p-0612","num":"0699"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 48"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Field"]},{"entry":[{},"Field Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FIELD_MALWARE_ORIG_MACHINE","info"]},{"entry":[{},"FIELD_MALWARE_ORIG_MACHINE_IP","IP"]},{"entry":[{},"FIELD_MALWARE_ORIG_SUBNET","info"]},{"entry":[{},"FIELD_MALWARE_ORIG_USER_NAME","info"]},{"entry":[{},"FIELD_MALWARE_ORIG_SITE","info"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A machine name with the unusual amount of malware activity is stored in malware originating machine field FIELD_MALWARE_ORIG_MACHINE. An IP address of the machine where the malware activity was discovered in stored in address of malware originating machine field FIELD_MALWARE_ORIG_MACHINE_IP. A subnet including the machine where the malware activity was discovered in stored in subnet of malware originating machine field FIELD_MALWARE_ORIG_SUBNET. A user identifier of where the malware activity was discovered in stored in user name of malware origination field FIELD_MALWARE_ORIG_USER_NAME. A domain of where the malware activity was discovered in stored in address of malware originating site field FIELD_MALWARE_ORIG_SITE.",{"@attributes":{"id":"p-0614","num":"0701"},"figref":["FIG. 41","FIG. 10","FIG. 10","FIG. 41","FIG. 11","FIG. 41"],"b":["41220","41221","41222","41221","41210","41220","11220"]},"Managed product A  uses product A operation control module  to communicate with product A provider . Product A provider  communicates with logging provider , state provider , and configuration provider . State provider  sends the operational state of managed products A, B, and C applications and managed node  to security manager A. Configuration provider  retrieves configurations for managed products A, B, and C from security manager A using configuration servlet . Logging provider  sends events from security management agent  to logging servlet A in security manager A.","Security management agent  also includes an inventory provider, a service notification provider, and an update provider that are not shown. The inventory provider sends information about managed products A, B, and C that are installed on managed node  from security management agent  to security manager A. The service notification provider notifies security manager A when a new configuration is available. This is a \u201cping,\u201d as described above, which indicates that a new configuration should be retrieved via configuration provider  making a call to the configuration service, e.g., configuration servlet  at management server A.","For managed product A, properties that are going to be available for configuration, i.e., product integration data, are entered in a product integration XML (PIX) file. Hence, in general, a managed product uses a PIX file to register with security manager A. The product integration data includes a product name, a product ID, and a software feature ID as well as settings and properties associated with the managed product.","There are two types of install. There is a server side install, adding registration entries to directory A, schema extensions to database A, and possible, UI extensions to console . There are also agent side installs that register the actual endpoint product with agent , as well as the product A install itself (which is usually independent of security management system C, except for the agent extensions and registration).","Security management system C uses configuration provider  to facilitate centralized configuration distribution of application properties, i.e., configuration, to managed products. To manage the configurations of managed product  from management console , managed product operation control module  must communicate with security management agent  via product A provider .","In one embodiment, configuration provider  gets new configuration data for managed product A  and writes the data to configuration text. Configuration provider  then notifies product A provider  that new configuration data is available and in turn, product A provider  notifies product A operation control module  that new configuration data is available. Product A operation control module  retrieves and installs the new configuration data.","As described above, upon completion of the configuration data installation, product A operation control module  generates an appropriate event and transmits the event to product A provider that in turn transmits the event to logging provider .","Logging provider  adds appropriate information as required to the event and forwards the event to logging servlet A. As described above, logging servlet A causes the event to be stored in database A. Actually, logging servlet A first caches events on the local file system, and then a background process inserts the events into the database, or can also forward selected events to event sinks or to other managers in a rollup operation. All of this is done via background threads processing the various queues on disk. Thus, security manager A can also forward the event to security and feedback control system  or to any other event sink registered to receive the event.","In this embodiment, the product providers, e.g., product A provider , are each a JAVA component, which integrates with agent module  () for communicating with management server A. Optionally, a user interface extension, which is a JAVA component hosted at management console , presents a visual interface for manipulating the properties that are distributed to managed product A . The user interface extension allows greater flexibility in the presentation and management of configuration data for managed product A . The configuration properties also can be managed using a generic user interface panel.","In embodiment, a product team for managed product A  decides which properties are going to be available for configuration via security manager A. These properties are described in an XML file that is used to register managed product  and its properties with security manager A, when files from managed product A are installed by security manager A.","In selecting properties, any state property that must be made available to other modules of security manager A needs to be modeled as a special case. For this information to be propagated from managed node  back up to directory A as state information, this information needs to be modeled as a property of product A provider . The properties set by provider  are automatically queried periodically and updated in directory A. Provider  can also manually call a method updatestate( ) in state provider  via a CIMClient.invokeMethod( ) API to immediately update its state.","In this embodiment, properties that are going to be available for configuration, i.e., product integration data, are entered in a product integration XML (PIX) file. Hence, in general, a managed product uses a PIX file to register with security manager A. As indicated above, the product integration data includes a product name, a product ID, and a software feature ID as well as settings and properties associated with the managed product.","The setting and properties includes information about the data type, key, description and initial value. A sample PIX file  that registers a managed product for event logging integration is presented in .","First, the XML script is identified as a product integration XML file by file identification portion . Specifically, after a standard XML declaration <?xml . . . >, a required tag <SesaIntegrationData> is added to encompass all elements in file . General information tags like tag <Version> and tag <Author> follow.","Next, the details of the managed product required for registering with security manager A are provided in a product details section . A pre-assigned product ID for this managed product must be included. The language identifiers are also predefined. Tag <DisplayName> provides a product name that is displayed throughout security management system C and in console . Software Feature IDs are within a range determined by the pre-assigned product ID. In the example of , data definition portion  defines a software feature with an software ID of 30010101.","Each managed product, in one embodiment, must have at least one software feature defined for logging and configuration purposes. When an event is logged, both product and software feature IDs are recorded. In console , configurations are managed by software feature\u2014distinct software feature IDs need to be assigned to product components, which can be configured separately.","While it is not shown in , one or more of the event packages could be identified for registration in this file. The property names listed in the PIX file are internal names. These names need to be translated for display in console . If these properties are to be edited with the console's generic settings editor, the display names are defined in a resource bundle properties file, which is registered with console . This file is registered with console  via a plugin entry in the product's PIX file. The plugin type for the resource bundle file is called \u201cgse_translations.\u201d","TABLE 49 is an example of additional XML that would be included in the PIX file for additional software features and in particular a user interface extension for console  that was mentioned above.","Properties are associated with tag <Settings>, which are logical divisions properties that can be associated with different pages within the console's extensible UI. Tag <Settings> has a tag <Caption> with a value of \u201cGeneric\u201d and a tag <Name> with a value of \u201cGeneric Settings\u201d for a software feature with an software Id of 30020101. The \u201cGeneric Settings\u201d is part of a tag <Configuration>, which has tag <Caption> with a value of \u201cDefault.\u201d This, means that the default configuration contains a tab called \u201cGeneric.\u201d","TABLE 49 defines one software feature called \u201cUIExtensions\u201d with an Id of 30020103. This software feature has tag <Settings> called \u201cGeneric,\u201d which is a plugin entry for gse_translations. Note that the plugin tag has an attribute settingName with a value set to \u201cGeneric.\u201d Attribute settingName links this plugin entry with the \u201cGeneric\u201d Settings caption tag of the software feature, 30020101. In other words, it sets the value of \u201csettingName\u201d to be the caption of its associated settings.",{"@attributes":{"id":"p-0635","num":"0722"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 49"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<SoftwareFeature Id=\u201c30020101\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Caption>Advanced Sample Application Software"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Feature<\/Caption>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Description>Software feature for the application"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Description>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Name>30020101<\/Name>"]},{"entry":[{},"<DisplayName LangId=\u201c10001\u201d>Advanced Sample"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Application Software Feature<\/DisplayName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Settings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Caption>Generic<\/Caption>"]},{"entry":[{},"<Description>Generic<\/Description>"]},{"entry":[{},"<Name>Generic Settings<\/Name>"]},{"entry":[{},"<SettingType>Main<\/SettingType>"]},{"entry":[{},"<!\u2212\u2212 Put the setting from a file \u2212\u2212>"]},{"entry":[{},"<SettingFile"]},{"entry":[{},"\u2009\u2009Name=\u201csip\/pix\/setting\/AdvSampleApp_1_0_GenericSett"]},{"entry":[{},"\u2009\u2009ing.xml\u201d DataType=\u201ctext\/xml\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Settings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":". . ."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Configuration>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Caption>Default<\/Caption>"]},{"entry":[{},"<Description>The default Advanced Application"]},{"entry":[{},"\u2009\u2009configuration.<\/Description>"]},{"entry":[{},"<Name>Default<\/Name>"]},{"entry":[{},"<SettingsName>Generic Settings<\/SettingsName>"]},{"entry":[{},"<SettingsName>Application Settings1<\/SettingsName>"]},{"entry":[{},"<SettingsName>Application Settings2<\/SettingsName>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Configuration>"]},{"entry":[{},"<FeatureRole>SESA_LOGGING<\/FeatureRole>"]},{"entry":[{},"<FeatureRole>SESA_CONFIGURING<\/FeatureRole>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/SoftwareFeature>"},{"entry":". . ."},{"entry":"<SoftwareFeature Id=\u201c30020103\u201d Virtual=\u201ctrue\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Caption>UIExtensions<\/Caption>"]},{"entry":[{},"<Description>UIExtensions<\/Description>"]},{"entry":[{},"<Name>30020103<\/Name>"]},{"entry":[{},"<DisplayName"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"LangId=\u201c10001\u201d>UIExtensions<\/DisplayName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Settings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Caption>Generic<\/Caption>"]},{"entry":[{},"<Description>Provides translation for generic"]},{"entry":[{},"\u2009\u2009settings.<\/Description>"]},{"entry":[{},"<Name>TranslationResource - Application -"]},{"entry":[{},"\u2009\u2009Generic<\/Name>"]},{"entry":[{},"<SettingType>Directory<\/SettingType>"]},{"entry":[{},"<SettingText>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<uiSettings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<plugin type=\u201cgse_translations\u201d"]},{"entry":[{},"\u2009\u2009jarFiles=\u201c\/advsample\/AdvSamplePluglets_res.jar\u201d"]},{"entry":[{},"\u2009\u2009resourcePath=\u201csdk\/AdvSampleApp\/pluglets\/resourc"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"es\/Application_Generic\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2009\u2009settingName=\u201cGeneric\u201d"]},{"entry":[{},"\u2009\u2009softwareFeatureName=\u201c30020101\u201d"]},{"entry":[{},">"]},{"entry":[{},"<\/plugin>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/uiSettings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/SettingText>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Settings>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":". . ."},{"entry":"<\/SoftwareFeature>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0051","list-style":"none"},"li":{"@attributes":{"id":"ul0051-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0052","list-style":"none"},"li":["[locale].properties\n\nAssuming a locale of es_PR (Spanish\/Puerto Rico), the resulting path plus filename would be\n","sdk\/AdvSampleApp\/pluglets\/resources\/Application_Ge neric_es_PR.properties"]}}}},"This file would be located in the jar file listed in attribute jarFiles within the resource bundle file, the code expects the following:\n\n","The following entries in a properties file (See TABLE 52 below.) for the advanced sample of TABLE 49 are used for providing the translatable values for the various translatable display items mentioned above.\n\n","TABLE 50 is an example that indicates how a property is listed in the PIX file:",{"@attributes":{"id":"p-0639","num":"0734"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 50"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Property>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Key>PollTime<\/Key>"]},{"entry":[{},"<Type subtype=\u201cduration\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"storageunits=\u201cseconds\u201d>Integer<\/Type>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Value>60<\/Value>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Property>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"TABLE 51 presents corresponding entries in the resource bundle file for the property of TABLE 50.",{"@attributes":{"id":"p-0641","num":"0736"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 51"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_key.PollTime=Poll time"]},{"entry":[{},"ids_description.PollTime=Example setting 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"TABLE 52 is an example of a resources bundle file for the advanced sample application PIX file of TABLE 49.",{"@attributes":{"id":"p-0643","num":"0738"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 52"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"# Resource Bundle properties file for the Advanced"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Sample Application Generic Settings"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_page_label.Generic=Sample Application Generic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Settings"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_page_description.Generic=Use this page to set the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"generic application settings."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_key.PollTime=Poll time"]},{"entry":[{},"ids_key.DummySetting2=DummySetting2"]},{"entry":[{},"ids_key.TextWithAMinOf2Chars=Text with a 2 character"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"min"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_key.TextWithAMaxOf6Chars=Text with a 6 character"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"max"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_key.TextLimitedTo2Chars=Text with a 2 character"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"limit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_key.AHexString=A hex string"]},{"entry":[{},"ids_key.AlphaOnlyText=Text with only letters"]},{"entry":[{},"ids_key.IPAddress=IP address"]},{"entry":[{},"ids_key.HostName=Host name"]},{"entry":[{},"ids_key.IPPort=IP port"]},{"entry":[{},"ids_key.TrueOrFalse=True or false"]},{"entry":[{},"ids_key.DateTimeStringFormat=Date\/Time default format"]},{"entry":[{},"ids_key.DateTimeFormattedBySpec=Date\/Time specified"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"format"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_key.DateTimeMillisFormat=Date\/Time stored in"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"milliseconds"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_key.Password=Password"]},{"entry":[{},"ids_key.AnyNumber=Any number"]},{"entry":[{},"ids_key.DurationInMinutes=Duration in minutes"]},{"entry":[{},"ids_key.DurationInSeconds=Duration in seconds"]},{"entry":[{},"ids_key.DurationInMinutesStoredAsSeconds=Duration in"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"minutes\/Stored as seconds"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_key.SizeInKb=Size in Kb"]},{"entry":[{},"ids_key.SizeInMb=Size in Mb"]},{"entry":[{},"ids_key.EmailAddress=Email address"]},{"entry":[{},"ids_key.DropDownList=Drop-down list"]},{"entry":[{},"ids_description.PollTime=Example setting 1"]},{"entry":[{},"ids_description.DummySetting2=Example setting2: plain"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"text"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.TextWithAMinOf2Chars=A minimum of 2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"characters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.TextWithAMaxOf6Chars=A maximum of 6"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"characters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.TextLimitedTo2Chars=A minimum of 2 and"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"a maximum of 2 characters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.AHexString=Only certain characters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"allowed"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.AlphaOnlyText=Example of excluded"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"characters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_description.IPAddress=IP Address"]},{"entry":[{},"ids_description.HostName=Host name"]},{"entry":[{},"ids_description.IPPort=IP port number"]},{"entry":[{},"ids_description.TrueOrFalse=A boolean item"]},{"entry":[{},"ids_description.DateTimeStringFormat=Initially a"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"datetime in mmm dd, yyyy hh:mm:ss format"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.DateTimeFormattedBySpec=A datetime"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"specifically formatted to be like 2001-12-31 23:59"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.DateTimeMillisFormat=Initially a"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"datetime in millisecond format"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.Password=Example of a password for an"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"account"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_description.AnyNumber=Number"]},{"entry":[{},"ids_description.DurationInMinutes=Length of time stored"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in minutes"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.DurationInSeconds=Length of time stored"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in seconds"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ids_description.DurationInMinutesStoredAsSeconds=Length"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"of time stored in seconds displayed to the user in"]},{"entry":[{},"minutes"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_description.SizeInKb=Size in kb"]},{"entry":[{},"ids_description.SizeInMb=Size in mb"]},{"entry":[{},"ids_description.EmailAddress=Email Address"]},{"entry":[{},"ids_description.DropDownList=A drop-list of selections,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"not editable"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ids_help_context=ADVSamp"]},{"entry":[{},"ids_help_topic=IDH_Samp_Generic"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"After the PIX file and any supporting files are prepared, the PIX file is installed and registered with security manager A. After registration with security manager A, a new node is presented in console  in the management tab under the products folder. In one embodiment, the settings appear in a generic settings tab with a simple Property\/Value pair tabular interface.","When a user logs onto console , the user can modify the properties presented on the screen. Upon applying the changes, the JAVA code for the console user interface writes these settings to directory A. In this embodiment, an administration servlet  writes the information to directory A. Security manager A recognizes that settings have been changed and notifies the appropriate security management agent, e.g., security management agent  via its configuration provider .","Configuration provider  makes a call to the product provider, e.g., product A provider  to notify provider  that there is a new configuration to be used. Product provider  is responsible for extracting the properties it is interested in from the entire set and using these properties as appropriate; for instance, persisting the properties in a local config.txt file .","A provider, in this embodiment, utilizes a JAVA CIMOM Provider Architecture. Specifically, in one embodiment, the JAVA CIMON provider extends a class SESAProvider interface. TABLE 53 provides an example of information included in Class SESAProvider.",{"@attributes":{"id":"p-0648","num":"0743"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 53"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public abstract class SESAProvider{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public abstract void initialize(CIMOMHandle"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ch)throws CIMException;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public abstract void cleanup( ) throws"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CIMException;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public abstract invokeMethod(CIMObject Path"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"op, String name, Vector in, Vector out)"]},{"entry":[{},"throws CIMException;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public abstract SymcObject getService( );"]},{"entry":[{},"public abstract int getProductId( );"]},{"entry":[{},"public abstract int getSoftwareFeatureId( );"]},{"entry":[{},"public abstract String getName( );"]},{"entry":[{},"public abstract void applyConfig(HashMap"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"newConfig);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public abstract void sendMessage(String"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sMessage);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"At a minimum, a provider implements a plurality of abstract methods described as follows. An initialization method initialize( ) is called once when agent  (), the CIMOM, initializes. The provider is expected to create any resources that the provider requires during this call. A cleanup method cleanup( ) is called when agent  is shutting down and the provider is expected to release any resources that the provider is using during this call, allowing agent  to shutdown. If, during method initialize( ), the provider creates any threads these should be created as daemon threads so that the CIMOM server, agent , can shutdown easily in case there are problems freeing thread resources for the provider during the call to method cleanup( ).","An invoke method invokeMethod( ) is called by agent  when a CIM method call is made to a specific provider in security management agent . The specific method name and what actions the method is to perform depend on the individual provider.","Method getService( ) is used to load the contents of the Service Definition File (described below) and populate the properties of a service derived CIM object. The inventory provider (not shown) and state provider  use this object to update information about the service in directory A.","Methods getProductId( ) and getSoftwareFeatureId( ) return the provider's product identification code and software feature identification code, respectively.","Method getName( ) returns a string representing the Service\u2014derived class name of a provider. This is typically the name of a provider's class that is declared in the MOF file.","Method sendMessage( ) is used if two or more providers need to communicate with each other without using a CIMOM method call. Method sendmessage( ) is used for a simple Java method call.","Method applyConfig( ) is called within a provider by configuration provider  when a new set of configuration data is available for the managed product. The implementation of this method recognizes the properties described in configuration settings for the managed product and deals with them appropriately. This is also where any of the State-related Provider properties are set by calling method setProperty( ) on the CIMInstance object. State provider  reports these back to directory A automatically.","Properties CurrentConfigName and CurrentConfigVersion are defined in a class Service, which is inherited by all providers. Property CurrentConfigName can be set in the CIM properties of the provider and is automatically updated by security management system C. Property CurrentConfigName in not declared in the MOF file because this property is inherited by all providers. It is important that every time a new configuration is obtained, property CurrentConfigVersion is set so its state is correctly reported to security manager A. To do this a call similar to the following is made:","m_cimClient.setProperty(\n\n",{"@attributes":{"id":"p-0658","num":"0754"},"figref":"FIGS. 43A to 43I"},"A MOF file is required to define to agent , the CIMOM, what data and methods are available. Again, instance properties are defined explicitly. The data and methods available are decided upon and specified by the developers of the provider. In this particular case, Example Provider () exposes a data property ProviderPollTime and a method called getConfigPropertyString( ). Whatever methods and data are described in the MOF file are available to calling applications through the CIMOM client interfaces.","A sample declaration for the Example Provider is presented in TABLE 54.",{"@attributes":{"id":"p-0661","num":"0757"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 54"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"[Provider(\u201cSymcProviders\u201d)]"]},{"entry":[{},"class ExampleProvider : Service"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"["]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Description(\u201cThis is the operational state"]},{"entry":[{},"\u2002value updated \u201d \u201cby the provider\u201d)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"]"]},{"entry":[{},"uint32 ProviderPollTime;"]},{"entry":[{},"["]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Description(\u201cMethod to get a config\u201d)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"]"]},{"entry":[{},"string\u2003getConfigData( );"]},{"entry":[{},"["]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Description(\u201cGet a single config property's"]},{"entry":[{},"\u2002value\u201d)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"]"]},{"entry":[{},"string\u2003getConfigProperty(string propName);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"There are a number of definition files that are used to supply information to the SymcProviders interface (See TABLE 53) to fill in properties of various CIM classes. Some of these files are required and others are optional, depending on whether the provider requires these features. The files are JAVA properties files, which are a collection of key\u2014value pairs.","A file myprovider.feat is a required software feature declaration file. In general a file with extension \u201c.feat\u201d is named with the name of the software feature and have an extension of \u201c.feat\u201d, for example, \u201cmyfeature.feat\u201d. A separate file is required for each software feature installed.","File myfeature.feat is used to declare a software feature object. These software feature objects are associated with the managed product objects and service objects by an inventory provider to describe the sum of the managed products and software features installed on the machine. An example of the software feature file for configuration provider is presented in TABLE 55.",{"@attributes":{"id":"p-0665","num":"0000"},"ul":{"@attributes":{"id":"ul0059","list-style":"none"},"li":{"@attributes":{"id":"ul0059-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0060","list-style":"none"},"li":["name=30000123","identifyingnumber=3000","productname=SESA","vendor=Symantec Corporation","version=1.0","caption=SESA Agent Configuration Provider","description=Retrieves configurations for SESA-enabled applications from the SESA Manager","status=OK","installdate=20011022120000.000000+000"]}}}},"A file myprovider.prod is a required managed product declaration file. This file should be named with the name of the managed product and have an extension of \u201c.prod\u201d, for example, \u201cmyproduct.prod\u201d.","The managed product declaration file is used to declare a managed product object. The managed product objects are used in collecting inventory and state information regarding the managed products and features installed on a machine.","As an example, a managed product declaration file for a Symantec Antivirus Product is presented in TABLE 56.",{"@attributes":{"id":"p-0669","num":"0773"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 56"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name=Symantec AntiVirus Corporate Edition"]},{"entry":[{},"identifyingnumber=12"]},{"entry":[{},"vendor=Symantec Corporation"]},{"entry":[{},"version=8.0"]},{"entry":[{},"caption=NAVCorp"]},{"entry":[{},"description=AntiVirus for desktops and file\/print"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"server"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A file myprovider.svc is a required service declaration file. The service declaration file associates a service with a software identifier. An example of the configuration provider service declaration file is presented in TABLE 57A. The file is used to declare a service object. These objects are used in collecting inventory and state information for directory A.",{"@attributes":{"id":"p-0671","num":"0775"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 57A"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"# Service.Name must start with the Software.Name"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(which is really a \u201cSoftware Feature ID\u201d)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"# where \u201cstart with\u201d is meant in the context of"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"java.lang.String.startsWith( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name=30000123.configprovider"]},{"entry":[{},"systemcreationclassname=ComputerSystem"]},{"entry":[{},"systemname=localhost"]},{"entry":[{},"creationclassname=Service"]},{"entry":[{},"caption=SESA Agent Configuration Provider Service"]},{"entry":[{},"description=SESA Agent's Configuration Provider"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Service for Symantec managed computers"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"installdate=20011022120000.000000+000"]},{"entry":[{},"status=OK"]},{"entry":[{},"startmode=Automatic"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An example provider's service definition file is presented in TABLE 57B.",{"@attributes":{"id":"p-0673","num":"0777"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 57B"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"creationclassname=Service"]},{"entry":[{},"name=30020101"]},{"entry":[{},"systemname=localhost"]},{"entry":[{},"systemcreationclassname=ComputerSystem"]},{"entry":[{},"caption=SES Sample Provider"]},{"entry":[{},"description=The example provider"]},{"entry":[{},"installdate=20011022120000.000000+000"]},{"entry":[{},"status=OK"]},{"entry":[{},"startmode=Automatic"]},{"entry":[{},"opstatenames=CurrentConfigName, CurrentConfigVersio"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"n, ProviderPollTime"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A service access point file is named with a software feature and has an extension of \u201c.sap\u201d, for example, \u201cmyprovider.sap\u201d. This file is optional.","The file is used to declare a service access point object. This is only needed if a provider defines a service access point for other processes to communication with it outside of the CIMOM environment. Log provider  declares one of these instances because provider  is contacted to perform logging functions.","TABLE 58 is an example of a log provider's service access point file.",{"@attributes":{"id":"p-0677","num":"0781"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 58"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"creationclassname=ServiceAccessPoint"]},{"entry":[{},"name=30000186"]},{"entry":[{},"systemcreationclassname=ComputerSystem"]},{"entry":[{},"systemname=localhost"]},{"entry":[{},"Software"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"File \u201cmyproduct.soft\u201d is named with a software product and has an extension of \u201c.soft.,\u201d This file is optional. The file is used to declare a software object. These objects are used in collecting inventory and state information for directory A.","The software object file for log provider  is presented in TABLE 59.",{"@attributes":{"id":"p-0680","num":"0784"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 59"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name=Symantec Enterprise Security Management"]},{"entry":[{},"version=1.0"]},{"entry":[{},"targetoperatingsystem=18"]},{"entry":[{},"othertargetos="]},{"entry":[{},"manufacturer=Symantec Corporation"]},{"entry":[{},"buildnumber=85"]},{"entry":[{},"serialnumber=1010101"]},{"entry":[{},"codeset="]},{"entry":[{},"indentificationcode=sku"]},{"entry":[{},"languageedition=en"]},{"entry":[{},"productidentifyingnumber=30000186"]},{"entry":[{},"productname=SESA"]},{"entry":[{},"productvendor=Symantec Corporation"]},{"entry":[{},"productversion=1.0"]},{"entry":[{},"installdate=20011022120000.000000+000"]},{"entry":[{},"description=Symantec Enterprise Security"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Management"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"All of the instance definition files should be installed in the same directory as security management agent ","There are a number of properties in the instance definition files, described above, which are described more completely below.","creationclassname is the name of the class that is the parent of the class being created. For example, in the LogProvider class, the value of this should be \u201cService\u201d since that is the parent class. This is used to determine the class hierarchy within the CIMOM.","identificationcode is used in the Software class and should be filled in with the SKU for a product.","identifyingnumber is the Software Feature Identification code. The identifying number and name properties are used to build associations between various CIM classes. Where these associations are needed, the values of these properties should match.","installdate is a date, in the form of YYYYMMDDHHmmSS.uuuuuu+zzz where YYYY is the year, MM is the month, DD is the date, HH is the hour, mm is the minute, SS is the seconds, uuuuuu is the number of milliseconds and zzz is the time zone adjustment. A provider installer should update installdate. For an event sink, this date is automatically updated when the servlet's object is created in directory A. Event sinks do not need to update this value.","buildnumber\u2014use a build script to automatically update the build number.","nameThis is, in most cases, the value of the software feature identification code assigned to a managed product. The value of this key is used to create associations between the Service and SoftwareFeature classes. The Product class uses this value to describe the name of the product installed.","opstatenames\u2014the state provider tracks the current operational state of the services installed. The state provider uses the value of this property to build a list of the operational state values that should be updated in directory A.","productidentifyingnumber is used in the Software class and is the Software Feature Identification code assigned to a managed product.","systemcreationclassname describes the derived CIM_ComputerSystem class that the object in question should be scoped within. Since all the providers need to have their objects scoped within the ComputerSystem class, this value should be used wherever this key is required.","systemame is the host name of the machine that the instance resides on. This should be set to localhost.","targetoperatingsystem is an enumerated list of values describing various operating systems.","Custom Event Package","A custom event package can be defined by a managed product by including the events in the PIX file or in a custom event package XML (EPX). It is necessary to reserve a globally unique event package identifier for the custom event package. An example of an EPX is presented in TABLE 60. This example defines a new event class with two custom events. The new event class is derived from the application update class (.)",{"@attributes":{"id":"p-0695","num":"0799"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 60"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<SesaIntegrationData xmlns:xsi ="},{"entry":"\u201chttp:\/\/www.w3.org\/2001\/XMLSchema-instance\u201d"},{"entry":"xsi:noNamespaceSchemaLocation = \u201cNabooBase.xsd\u201d>"},{"entry":"\u2002<SesaEvent Package>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Version>1.00<\/Version>"]},{"entry":[{},"<Author>abc<\/Author>"]},{"entry":[{},"<Revision>0.01<\/Revision>"]},{"entry":[{},"<RevDate>Feb 19 2004<\/RevDate>"]},{"entry":[{},"<!\u2212\u2212 Description of id ranges for the Advanced Sample"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"event package with a root id of 8"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ID Range Use In Use"]},{"entry":[{},"======================================="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"80000-80100","Event families"]},{"entry":[{},"80101-80999","Software Feature IDs"]},{"entry":[{},"81000-81999","Event Class IDs 81000"]},{"entry":[{},"82000-84999","Event IDs 82000-82001"]},{"entry":[{},"85000-86999","Report IDs 85000"]},{"entry":[{},"87000-88999","String IDs 87000-87004"]},{"entry":[{},"89000-89999","Other"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2212\u2212>"]},{"entry":[{},"<Event Package Id=\u201c8\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<EventFamilyMembership Id=\u201c90000\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Create the Event Class for this Advanced Sample."},{"entry":"Derive the adv_sample_update_class from the Security"},{"entry":"base event Class app_update_class, ID Number 91001."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<TableDefinitions>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!\u2212\u2212"]},{"entry":[{},"* this table stores the descriptions used in the"]},{"entry":[{},"\u2002update_type_id"]},{"entry":[{},"* (field in adv_sample_update_class). It is needed"]},{"entry":[{},"\u2002to support filtering in the UI on that field."]},{"entry":[{},"*"]},{"entry":[{},"* update_type_id: the ID of the string that"]},{"entry":[{},"\u2002describes the update type."]},{"entry":[{},"\u2212\u2212>"]},{"entry":[{},"<Table Name=\u201cadv_sample_update_type_def\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TableSpace=\u201cSESA32KUSERDEF\u201d>"]},{"entry":[{},"<Column Name=\u201cupdate_type_id\u201d Type=\u201cid\u201d"]},{"entry":[{},"Nullable=\u201cfalse\u201d\/>"]},{"entry":[{},"<PrimaryKey Col=\u201cupdate_type_id\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Table>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/TableDefinitions>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!\u2212\u2212"]},{"entry":[{},"* create the event class for Advanced Sample"]},{"entry":[{},"* derive it from the predefined app update event"]},{"entry":[{},"\u2002class"]},{"entry":[{},"* ID Range: 81,000-81,999"]},{"entry":[{},"\u2212\u2212>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<EventClassDefinitions>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<EventClass Name=\u201cadv_sample_update_class\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Id=\u201c81000\u201d Parent=\u201c91001\u201d"]},{"entry":[{},"ViewName=\u201cadv_sample_update_view\u201d>"]},{"entry":[{},"<Member Name=\u201cprivilege\u201d Type=\u201cinfo\u201d"]},{"entry":[{},"StringId=\u201c87000\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<DisplayName"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LangId=\u201c10001\u201d>Privilege<\/DisplayName>"]},{"entry":[{},"<\/Member>"]},{"entry":[{},"<Member Name=\u201cupdate_type_id\u201d Type=\u201cid\u201d"]},{"entry":[{},"StringId=\u201c87001\u201d"]},{"entry":[{},"ValueTable=\u201cadv_sample_update_type_def\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<DisplayName LangId=\u201c10001\u201d>Update"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Type<\/DisplayName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<TranslateColName StringId=\u201c87002\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"InternalName=\u201cupdate_type_name\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<DisplayName LangId=\u201c10001\u201d>Update Type"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Name<\/DisplayName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/TranslateColName>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Member>"]},{"entry":[{},"<DisplayName LangId=\u201c10001\u201d>Advanced Sample App"]},{"entry":[{},"Update<\/DisplayName>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/EventClass>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/EventClassDefinitions>"]},{"entry":[{},"<!\u2212\u2212"]},{"entry":[{},"* create the events that would apply to the event"]},{"entry":[{},"\u2002class created above"]},{"entry":[{},"* ID Range: 82,000-84,999"]},{"entry":[{},"\u2212\u2212>"]},{"entry":[{},"<EventDefinitions>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<Event Id=\u201c82000\u201d EventClassId=\u201c81000\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<DisplayName LangId=\u201c10001\u201d>Advanced Sample App"]},{"entry":[{},"Update Event1<\/DisplayName>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/Event>"]},{"entry":[{},"<Event Id=\u201c82001\u201d EventClassId=\u201c81000\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<DisplayName LangId=\u201c10001\u201d>Advanced Sample App"]},{"entry":[{},"Update Event2<\/DisplayName>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Event>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/EventDefinitions>"]},{"entry":[{},"<ViewDefinitions>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!\u2212\u2212"]},{"entry":[{},"* create a detail view for the event class created"]},{"entry":[{},"\u2002above"]},{"entry":[{},"* NOTE: a.event_guid is referred in the"]},{"entry":[{},"\u2002JoinCondition, since"]},{"entry":[{},"* event_guid is added to all event tables by"]},{"entry":[{},"\u2002default"]},{"entry":[{},"\u2212\u2212>"]},{"entry":[{},"<!\u2212\u2212"]},{"entry":[{},"* Also need to pick up the parent event class"]},{"entry":[{},"\u2002fields"]},{"entry":[{},"\u2212\u2212>"]},{"entry":[{},"<View Name=\u201cadv_sample_update_view\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<EvtClass Name=\u201cadv_sample_update_class\u201d"]},{"entry":[{},"Alias=\u201ca\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<JoinCondition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"a.event_guid = base.event_guid"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/JoinCondition>"]},{"entry":[{},"<ViewItem Name=\u201cprivilege\u201d\/>"]},{"entry":[{},"<ViewItem Name=\u201cupdate_type_id\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/EvtClass>"]},{"entry":[{},"<EvtClass Name=\u201capp_update_class\u201d Alias=\u201cb\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<JoinCondition>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"b.event_guid = base.event_guid"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/JoinCondition>"]},{"entry":[{},"<ViewItem Name=\u201cprev_version\u201d\/>"]},{"entry":[{},"<ViewItem Name=\u201ccurr_version\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/EvtClass>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/View>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ViewDefinitions>"]},{"entry":[{},"<ReportDefinitions>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!\u2212\u2212"]},{"entry":[{},"* create the default report (85000)"]},{"entry":[{},"* ID Range: 85,000-86,999"]},{"entry":[{},"\u2212\u2212>"]},{"entry":[{},"<Report Id=\u201c85000\u201d Detail=\u201c0\u201d Type=\u201cview\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<DisplayName LangId=\u201c10001\u201d>Advanced Sample App"]},{"entry":[{},"Update<\/DisplayName>"]},{"entry":[{},"<Select>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Field MapTo=\u201cevent_dt\u201d\/>"]},{"entry":[{},"<Field MapTo=\u201cupdate_type_id\u201d Translate=\u201cyes\u201d\/>"]},{"entry":[{},"<Field MapTo=\u201cprivilege\u201d\/>"]},{"entry":[{},"<Field MapTo=\u201cprev_version\u201d\/>"]},{"entry":[{},"<Field MapTo=\u201ccurr_version\u201d\/>"]},{"entry":[{},"<Field MapTo=\u201cmachine\u201d\/>"]},{"entry":[{},"<Field MapTo=\u201cmachine_ip\u201d\/>"]},{"entry":[{},"<Field MapTo=\u201cuser_name\u201d\/>"]},{"entry":[{},"<From Name=\u201cadv_sample_update_view\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Select>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/Report>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/ReportDefinitions>"]},{"entry":[{},"<StringDefinitions>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!\u2212\u2212"]},{"entry":[{},"* create the advanced app translate update type"]},{"entry":[{},"\u2002strings"]},{"entry":[{},"\u2212\u2212>"]},{"entry":[{},"<String LangId=\u201c10001\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"StringId=\u201c87003\u201d>Auto<\/String>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<String LangId=\u201c10001\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"StringId=\u201c87004\u201d>Manual<\/String>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/StringDefinitions>"]},{"entry":[{},"<DataEntry>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<SQLInsert Table=\u201cadv_sample_update_type_def\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<DataColumn"]},{"entry":[{},"Name=\u201cupdate_type_id\u201d>87003<\/DataColumn>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/SQLInsert>"]},{"entry":[{},"<SQLInsert Table=\u201cadv_sample_update_type_def\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<DataColumn"]},{"entry":[{},"Name=\u201cupdate_type_id\u201d>87004<\/DataColumn>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/SQLInsert>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/DataEntry>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/EventPackage>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/SesaEventPackage>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<SesaIntegrationData>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In one embodiment, security feedback and control system  is stored in a non-volatile memory of security management system  and moved from non-volatile memory to volatile memory as necessary for use with security management system . Suitable hardware configurations for utilizing security management system  include a personal computer, a workstation, a portable device such as a cellular telephone or a personal digital assistant, an Internet appliance, or any other device that includes components that can include a managed product and a security management agent in accordance with at least one of the embodiments as described herein.","In view of this disclosure, security management system , security feedback and control system , feedback and control manager A in accordance with one embodiment of present invention can be implemented in a wide variety of computer system configurations. In addition, the various elements could be stored as different modules in memories of different devices. For example, security feedback and control system  could initially be stored in a first server system, and then as necessary, a portion of rules  could be transferred to a second computer system and executed on the second computer system. In view of this disclosure, those of skill in the art can implement various embodiments of the present invention in a wide-variety of physical hardware configurations and network configurations.","As used herein, a computer memory refers to a volatile memory, a non-volatile memory, or a combination of the two. Herein, a computer program product comprises a medium configured to store or transport computer readable code for any one, all or any combination of the methods and structures described herein. The computer readable code could be for all or any part of the various embodiments of security management system . Some examples of computer program products are CD-ROM discs, DVDs, ROM cards, floppy discs, magnetic tapes, computer hard drives, servers on a network and signals transmitted over a network representing computer readable code.","The medium may belong to the computer system itself. However, the medium also may be removed from the computer system. This could be accomplished in a client-server system, or alternatively via a connection to another computer via modems and analog lines, or digital interfaces and a digital carrier line.","In particular, in one embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","In another embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","In yet another embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","In still yet another embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","In a further embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method including:\n\n","In a still further embodiment, a computer-program product includes a computer-readable medium containing computer program code for a method comprising:\n\n","Also, the various computer systems, networks, communication links, computer program code, storage devices, memory structures etc taken together in appropriate combinations are means for achieving the functionality described herein. For example, in one embodiment, a structure includes:\n\n","In another embodiment, a structure includes:\n\n","In yet another embodiment, a structure includes:\n\n","In still yet another embodiment, a structure includes:\n\n","In a still further embodiment, a structure includes:\n\n","In a still yet further embodiment, a structure includes:\n\n","This disclosure provides exemplary embodiments of the present invention. The scope of the present invention is not limited by these exemplary embodiments. Numerous variations, whether explicitly provided for by the specification or implied by the specification or not, may be implemented by one of skill in the art in view of this disclosure.","For example, the security management agent described above need not be a separate entity. The security management agent describes functionality that can be implement in a variety of ways. For example, an embedded product may build in the agent functionality. What is necessary is that the product communicates with the management services, such as the logging service, and can receive commands from the command service. An agent simply acts as a broker for multiple applications running on the same host, or it provides the functionality such that a standalone product does not have to implement the service client functionality. Accordingly, the embodiments described above are only one means for achieving the functionality described.","Moreover, the services described herein are illustrative only of one embodiment of a service orientated architecture and are not intended to limit the invention to the specific services described. The service oriented architecture can include, but is not limited to a service oriented architecture that includes a bootstrap service, an inventory service, an operational state service, a configuration service, a logging service, an alerting service, a command service, a notification service, and\/or a heartbeat service.","Finally, when it was stated above that an element took some action, those of skill in the art will understand that the action is the result of a computer instructions or computer instructions being executed on a processor and possibly other actions being taken by hardware and\/or automated hardware in response to the execution by hardware. Alternatively, combinations of hardware, automated hardware and\/or a processor excuting instructions can be used to implement the various elements described above."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0035","num":"0080"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0036","num":"0081"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0037","num":"0082"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0038","num":"0083"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0039","num":"0084"},"figref":["FIG. 5A","FIG. 4"]},{"@attributes":{"id":"p-0040","num":"0085"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0041","num":"0086"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0042","num":"0087"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0043","num":"0088"},"figref":["FIG. 8","FIG. 1"]},{"@attributes":{"id":"p-0044","num":"0089"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0045","num":"0090"},"figref":["FIG. 10","FIG. 1"]},{"@attributes":{"id":"p-0046","num":"0091"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0047","num":"0092"},"figref":"FIG. 12A"},{"@attributes":{"id":"p-0048","num":"0093"},"figref":"FIG. 12B"},{"@attributes":{"id":"p-0049","num":"0094"},"figref":["FIG. 13","FIG. 10"]},{"@attributes":{"id":"p-0050","num":"0095"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0051","num":"0096"},"figref":["FIG. 15A","FIG. 14"]},{"@attributes":{"id":"p-0052","num":"0097"},"figref":["FIG. 15B","FIG. 15A"]},{"@attributes":{"id":"p-0053","num":"0098"},"figref":["FIG. 16A","FIG. 14"]},{"@attributes":{"id":"p-0054","num":"0099"},"figref":["FIG. 16B","FIG. 16A"]},{"@attributes":{"id":"p-0055","num":"0100"},"figref":"FIG. 16C"},{"@attributes":{"id":"p-0056","num":"0101"},"figref":["FIG. 17A","FIG. 14"]},{"@attributes":{"id":"p-0057","num":"0102"},"figref":["FIG. 17B","FIG. 17A"]},{"@attributes":{"id":"p-0058","num":"0103"},"figref":["FIGS. 18A and 18B","FIG. 14"]},{"@attributes":{"id":"p-0059","num":"0104"},"figref":["FIG. 18C","FIGS. 18A and 18B"]},{"@attributes":{"id":"p-0060","num":"0105"},"figref":"FIG. 18D"},{"@attributes":{"id":"p-0061","num":"0106"},"figref":["FIG. 19A","FIG. 14"]},{"@attributes":{"id":"p-0062","num":"0107"},"figref":["FIG. 19B","FIG. 19A"]},{"@attributes":{"id":"p-0063","num":"0108"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0064","num":"0109"},"figref":["FIG. 21A","FIG. 20"]},"FIGS. B_ and B_ are an illustration of a host intrusion event memory structure that is used for the object of the host intrusion event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0066","num":"0111"},"figref":["FIG. 22A","FIG. 20"]},"FIGS. B_ and B_ are an illustration of a network intrusion event memory structure that is used for the object of the network intrusion event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0068","num":"0113"},"figref":"FIG. 23","b":["21","1","21","2","22","1","22","2"]},{"@attributes":{"id":"p-0069","num":"0114"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0070","num":"0115"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0071","num":"0116"},"figref":["FIGS. 26A and 26B","FIG. 25"]},"FIGS. C_ and C_ are an illustration of a firewall network event memory structure that is used for the objects of the firewall event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0073","num":"0118"},"figref":["FIG. 27A","FIG. 25"]},"FIGS. B_, B_ and B_ are an illustration of a firewall connection statistics event memory structure that is used for the object of the firewall connection statistics event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0075","num":"0120"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0076","num":"0121"},"figref":["FIG. 29A","FIG. 28"]},{"@attributes":{"id":"p-0077","num":"0122"},"figref":["FIG. 29B","FIG. 29A"]},{"@attributes":{"id":"p-0078","num":"0123"},"figref":["FIG. 30A","FIG. 28"]},"FIGS. B_ and B_ are an illustration of a data incident event memory structure that is used for the objects of the data incident event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0080","num":"0125"},"figref":["FIG. 31A","FIG. 28"]},"FIGS. B_ and B_ are an illustration of a data virus incident event memory structure that is used for the object of the data virus incident event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0082","num":"0127"},"figref":["FIG. 32","FIGS. 29B"],"b":["30","1","30","2","31","1","31","2"]},{"@attributes":{"id":"p-0083","num":"0128"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0084","num":"0129"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0085","num":"0130"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0086","num":"0131"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0087","num":"0132"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0088","num":"0133"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0089","num":"0134"},"figref":["FIG. 39A","FIG. 38"]},"FIGS. B_ and B_ are an illustration of a malware advisory event memory structure that is used for the objects of the malware advisory event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0091","num":"0136"},"figref":["FIG. 40A","FIG. 38"]},"FIGS. B_ and B_ are an illustration of a malware activity event memory structure that is used for the objects of the malware advisory event class of  according to one embodiment of the present invention.",{"@attributes":{"id":"p-0093","num":"0138"},"figref":["FIG. 41","FIG. 10"]},{"@attributes":{"id":"p-0094","num":"0139"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0095","num":"0140"},"figref":"FIGS. 43A to 43I"}]},"DETDESC":[{},{}]}
