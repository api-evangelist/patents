---
title: System and method for decentralized performance monitoring of host systems
abstract: Various embodiments of a system and method for decentralized performance monitoring of host systems are described. Embodiments may include one or more client systems, each of which may monitor the performance of one or more host systems. In some embodiments, at least some of the host systems may be members of a cloud computing environment. A given client system may collect metrics from multiple different host systems and aggregate such metrics on the client system. In various embodiments, metrics may be collected by the client system directly from the multiple different host systems without utilizing a centralized repository of metrics. In various embodiments, the given client's receipt of the metrics from the multiple different hosts systems may be an initial aggregation of those metrics together on the same computer system. The client system may generate a graphical representation of the metrics collected from multiple hosts systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08707194&OS=08707194&RS=08707194
owner: Amazon Technologies, Inc.
number: 08707194
owner_city: Reno
owner_country: US
publication_date: 20091120
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF EMBODIMENTS","Introduction","Additional Embodiments"],"p":["Cloud computing represents a paradigm shift in the way computing resources are delivered and consumed. In cloud computing, service providers may operate a \u201ccloud\u201d of network-accessible resources, such as network-accessible software applications, services (e.g., web services), storage, and computational resources (e.g., processor cycles). These resources may be offered to cloud consumers under a variety of commercial arrangements. In many cases, such arrangements may prove to be an economically viable solution to the technology needs of consumers. For instance, one example may include a \u201cpay as you go\u201d arrangement where consumers have the option to pay for only the cloud resources they consume. These arrangements may be particularly attractive to consumers that have temporary computing resource needs. For instance, a consumer looking to process a large one-time job (e.g., processing a library of books with optical character recognition) may purchase or lease cloud resources to perform the job without investing in the significant capital expenditures required to purchase physical hardware capable of performing the same job. Various other characteristics make cloud computing an attractive solution to many consumers. For instance, when time is of the essence, cloud computing can provide consumers with the necessary computing resources in an on-demand fashion, which relieves the consumer of longer lead times associated with installation and configuration of physical infrastructure. Generally, the performance of the service provider's cloud may affect the quality of the service received by consumers.","While the system and method for decentralized performance monitoring of host systems is described herein by way of example for several embodiments and illustrative drawings, those skilled in the art will recognize that the system and method for decentralized performance monitoring of host systems is not limited to the embodiments or drawings described. It should be understood, that the drawings and detailed description thereto are not intended to limit the system and method for decentralized performance monitoring of host systems to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the system and method for decentralized performance monitoring of host systems as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application, the word \u201cmay\u201d is used in a permissive sense (i.e., meaning having the potential to), rather than the mandatory sense (i.e., meaning must). Similarly, the words \u201cinclude,\u201d \u201cincluding,\u201d and \u201cincludes\u201d mean including, but not limited to.","Various embodiments of a system and method for decentralized performance monitoring of host systems are described. Embodiments may include interactions between client systems (\u201cclients\u201d) and host systems (\u201chosts\u201d). Generally, the hosts described herein may be components of a cloud computing environment (\u201ccloud\u201d). Note that references to a cloud computing environment are utilized as convenient nomenclature and are intended to be interpreted in a non-limiting manner. Generally, references to a cloud computing environment may include any network-accessible environment that is configured to provide access to one or more network-accessible resources (e.g., providing access to virtualized and non-virtualized computer systems, applications, data storage, processor cycles, services, and other network-accessible resources) to local and\/or remote clients. Generally, the entity that owns or controls a cloud may be referred to herein as a service provider. Entities that enlist the services of clouds may be referred to herein as consumers.","As used herein, the terms \u201chost\u201d and \u201chost system\u201d may refer to any system or component of a cloud computing environment. In various embodiments, hosts may be utilized to implement the network-based resources of the cloud. In various embodiments, a host may be a physical computer system configured similar to the computer system of . The host may be configured with an operating system and\/or one or more executable applications. In any of the embodiments described herein, a host may be a virtualized computer system or virtual machine implemented on a computer system. In embodiments utilizing virtualization, a single computer system may include multiple hosts, which may be virtual machines managed by a hypervisor or virtual machine monitor on the computer system. In embodiments utilizing virtualization, different hosts on the same computer system may be configured with different operating systems and\/or different virtualized hardware profiles. In various embodiments, the host membership of a cloud may change over time as hosts are added or removed by consumers (e.g., by creating or deleting instances of operating systems running on respective virtual machines). Since hosts may be virtualized, such membership changes need not result in changes to the physical configuration of the cloud topology. For instance, as a consumer's need for computing resources changes over time (e.g., a consumer's cloud-hosted website experiences a rise in popularity or the consumer completes a large, one-time processing job on the cloud), the consumer can create or delete hosts. Generally, both virtualized and non-virtualized hosts may be implemented by some underlying hardware (e.g., processor, memory, and\/or other components of ) and\/or software (e.g., processor-executable program instructions, which may implement operating systems, applications, functions, subroutines, etc.) to perform the functionality described herein.","As used herein, the terms \u201cclient\u201d and \u201cclient system\u201d are not intended to be limited to the configuration of a client utilized in traditional client-server architecture. Generally, a client may include any system that includes a performance monitoring component configured as described in more detail below or any component configured to acquire such a performance monitoring component. In various embodiments, clients may be systems owned and\/or controlled by consumers of cloud computing environments. Examples of users that might operate client systems may include administrators and developers that desire metrics for one or more hosts. In one example, a cloud consumer experiencing one or more technical difficulties (e.g., server errors, excessive latency, etc.) with a cloud-hosted website might designate a user with the task of troubleshooting such technical difficulties. The user may utilize a client system to collect, aggregate and\/or display metrics of multiple different host systems according to the various techniques described herein. Such client systems may be any type of computer system, such as laptop, desktop or some other type of computer system (e.g., any type of computer system described below with respect to ). As described above, a client system may be configured to collect, aggregate and\/or display multiple metrics of different host systems among other functionalities as described herein. In various embodiments, such functionalities may be implemented by a performance monitoring component on the client system.","The host systems described herein may be different host systems of the same cloud or host systems of different clouds. In various embodiments, a host system may include a performance reporting component configured to provide various metrics to client systems. Metrics are described in more detail below; some examples of metrics include processor utilization and memory usage. In one example, a client may utilize its respective performance monitoring component to submit requests for metrics to the performance reporting components of multiple host systems. Each performance reporting component may respond to a request by providing the requested metrics to the client. In various embodiments, values of metrics may be historical values, real time values, and\/or near real-time values of the requested metrics.","A centralized approach to distributing host metrics might include requiring that host metrics be aggregated in a centralized data store (e.g., a database), which may broker access to the metrics. In one implementation of this approach, all host systems may repeatedly (e.g., periodically or aperiodically) send updated metrics to the centralized data store (utilizing network bandwidth in the process) in order to keep the data store up to date. In contrast to a centralized approach, embodiments may utilize decentralization by forgoing the use of a centralized data store to distribute metrics from host systems to client systems. In various embodiments, multiple host systems may provide metrics to a client system by directly communicating with that client system through one or more data networks (e.g., without the use of a centralized data store acting as a broker of metrics and\/or intermediary between the different host systems and the client system). In various embodiments, the performance monitoring component on that client system may be configured to aggregate the metrics of the different host systems together on the client system (e.g., in memory of the client system and\/or as part of a graphical display of metrics). In various embodiments, this may be the initial (e.g., first) aggregation of these particular metrics together on the same computer system. This may in various embodiments mean that these particular metrics from different host systems were not previously aggregated in a centralized data store or computer system prior to arrival at the client.","In light of the above, various embodiments may prevent single point(s) of failure, such as the failure of a centralized data store of metrics. Additionally, various embodiments may avoid the latency associated with host systems providing metrics to a centralized data store and the latency associated with client systems retrieving metrics from such centralized data store. In various embodiments, a client may communicate directly with different host systems to obtain metrics. Due to little or no latency in communications between the host system and the client system, metrics may be provided in real-time or near real-time in various embodiments. Various embodiments also provide high throughput of metrics even in cases where multiple clients are receiving metrics at the same time. For instance, in many cases, different clients may receive metrics from distinct sets of hosts (e.g., non-overlapping sets of hosts and\/or overlapping sets of hosts). In such embodiments, the transfer of metrics from one set of hosts to a first client and the transfer of metrics from another set of hosts to a second client may occur concurrently and independently. Such techniques can be expanded to any number of clients and respective sets of hosts. Such embodiments may be different than a centralized approach that requires some degree of serialization and associated latency in the delivery of metrics from a centralized data store to different client systems.","Example System Configuration",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["110","120","110","112","114","120","122","124","116","110","126","120","130"]},"In various embodiments, different clouds may be coupled to each other and\/or one or more external clients through one or more networks, such as network . Network  may include any network for transmitting data or information between computer systems including but not limited to Local Area Networks (LANs) (e.g., an Ethernet or corporate network), Wide Area Networks (WANs) (e.g., the Internet), wired or wireless data networks, some other electronic data network, or some combination thereof. Examples of external clients (e.g., clients external to the clouds) may include client  and client . While only two external clients are presented in the illustrated embodiment, other embodiments may include any number of external clients. In some embodiments, some hosts may reside outside of a cloud computing environment, such as host . Host  may be configured similarly to any of the hosts described above, with the exception that host  is not part of a cloud. While the description presented herein largely refers to external clients (e.g., client ), any of the techniques described herein may also be applied to clients internal to a cloud (e.g., client ). While the description presented herein largely refers to host systems that are members of a cloud (e.g., host ), any of the techniques described herein may also be applied to hosts that are not members of a cloud (e.g., host ).","Decentralized Collection of Metrics","In various embodiments, a client system (e.g., client ) may be configured to receive metrics from multiple different hosts systems that may or may not be members of the same cloud. The description presented herein largely refers to client , although the techniques described herein may be applied in a similar manner to other clients. In various embodiments, client  may collect metrics from a set of multiple host systems. This description may refer to an example set of host systems that includes hosts  and  of cloud  and host  of cloud . Note that in various embodiments different sets of hosts may be utilized.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2","b":["200","130","100","100","202","100","200"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 3","FIG. 1","FIG. 1"],"b":["100","112","200","100","112","100","114","122","114","122","112","112","100","100","112","114","122"]},"As illustrated in , host  may include a performance reporting component . Performance reporting component  may be configured to measure or determine multiple different metrics pertaining to host . Generally, metrics of a given host may include but are not limited to information pertaining to the performance of the host as well as the performance of any components or peripherals of the hosts; such metrics may include but are not limited to performance metrics, error information, latency information and other information as described in more detail herein. Metrics may include metrics of one or more processors of host  including but not limited to current processor utilization percentage, processor load average over a specified time period (e.g., last 5 minutes), quantity of currently-running process, and total quantity of running and waiting processes. Note that the metrics of a given host may be aggregated locally on that host, as described in more detail below with respect to metric data store . In various embodiments, the metrics may include metrics of a memory of host  including but not limited to percentage of total memory used, percentage of swap used, page faults per specified time period (e.g., per second), quantity of memory page-ins or page-outs per specified time period (e.g., per second), and\/or quantity of swap-ins and swap-outs per second. The metrics may include network-related metrics of the host including but not limited to quantity of data transmitted or received over a specified time period (e.g., kilobytes per second), quantity of transmitted or received packets, and\/or quantity of received packet errors or packet drops over a specified time period (e.g., drops per second). Metrics may also include input-output metrics, such as metrics of any input-output device described below (e.g., any I\/O device of ). In various embodiments, input-output metrics may include a measure of the quantity of reads and\/or writes per second (or some other time period). Other metrics may include disk metrics, such as metrics of any disk-based storage device of a host system.","In embodiments where host  is configured with a web server application for hosting one or more websites, the metrics may include but are not limited to quantity of incoming traffic requests (e.g., requests per second), completed traffic (e.g., completed requests per second), execution time (e.g., summed per second), and\/or requests per second categorized by status code.","In embodiments where host  is configured with network-based service interfaces (e.g., to provide web services), the metrics may include but are not limited to quantities of incoming requests, completed requests, faults, failures, and throttled requests. Such metrics may in various embodiments be measured over a specified time period (e.g., on a count per second basis). Such metrics may also include but are not limited to execution time (e.g., total, activity, and\/or transmuter). Such metrics may also include but are not limited to the status of service resources including but not limited to threads in use (e.g., percentage of reserved), file descriptors in use (e.g., percentage of reserved), heap memory in use (e.g., percentage of reserved), non-heap memory in use (e.g., percentage of reserved), garbage collection time, and garbage collection object count.","In embodiments where host  is configured to implement one or more virtual machines, the metrics may include but are not limited to heap usage (e.g., absolute and percentage of total), non-heap usage (absolute and percentage of total, number of threads, quantity of garbage collection objects collected, and time spent performing garbage collection.","In various embodiments, host  may be configured with one or more executable applications (e.g., an application stored in memory of host  and executable by one or more processors of host ). In such embodiments, the metrics may include metrics about such applications. For example, in various embodiments, host  may be configured to execute a messaging application for both sending messages to and receiving messages from other hosts, services, or computer systems. In such an embodiment, the metrics described herein may include but are not limited to quantity of messages received and\/or quantity of messages sent by the message application. Other metrics may be tailored to specific applications executing on host , according to various embodiments.","In various embodiments, performance reporting component  may be configured to collect any of the above described metrics on a periodic, aperiodic, and\/or continuous basis. In various embodiments, the metrics may be stored in a local data store of host , as illustrated by metrics data store . In various embodiments, data store  may be configured as a database, as one or more mass storage devices (e.g., physical disks, logical volumes, etc.) configured to store data blocks or files, or in any other suitable configuration for data storage. For each metric, performance reporting component  may be configured to capture a value of that metric at different instances in time. In various embodiments, the granularity at which the performance reporting component captures these values may be configurable on a per metric basis. For example, performance reporting component  may capture a processor utilization metric every second and a memory utilization metric every 5 seconds. Such granularities are merely examples; other time granularities may be utilized in various embodiments. In various embodiments, any of the metrics described herein may be stored in metric data stores  and continually updated by performance reporting component .","In various embodiments, the performance reporting component  may be configured to discard metrics that are older than a specified time period (e.g., metrics older than one year, or some other configurable time period). In some embodiments, this discarding may be performed in order to conserve memory on the host. In some embodiments, the performance reporting component may be configured to offload some or all of metrics  to a storage service provided by cloud  or some other cloud. In some cases, the storage service may be utilized to store metrics for long term retention (e.g., one year or longer).","Client system  may include performance monitoring component  for collecting metrics and generating graphical representations of aggregated metrics, among other functionalities. In various embodiments, performance monitoring component  may be an executable application that is pre-installed on the client system. In other embodiments, performance monitoring component  may be an executable application that is dynamically obtained at monitoring time. For instance, in various embodiments, client  may include a web browser (or other browser configured to view network-based content) in which the monitoring component is dynamically loaded at monitor time. In such embodiments, the performance monitoring component may be a lightweight application specified according to one or more web standards, such as standard scripting languages including but not limited to JavaScript and\/or Asynchronous JavaScript and XML (AJAX). Other standards that may be utilized include the Web Workers application programming interface (API) and the canvas element of Hypertext Markup Language (HTML) 5. In another example, performance monitoring component  may be a plug-in (e.g., web browser plug-in) or application extension. In other embodiments, performance monitoring component  may be implemented with network-based standards other than those specified above, whether such standards are presently known or developed in the future.","Performance monitoring component  may also include a user-interface component  configured to interface with one or more input\/output devices , which may be configured in a manner similar to that described below with respect to input\/output devices  of . Input\/output (I\/O) device(s)  may be configured to receive data from external input components (e.g., keyboard, mouse, trackball, touchscreen, etc.) and provide data to external output components (e.g., electronic display, touchscreen, etc.). In the illustrated embodiment, I\/O devices  may receive user input  and provide such input to user interface component . In various embodiments, user input  may specify one or more metrics that are to be collected. User input  may also specify the selection of various user-interface controls for controlling aspects of performance monitoring component ; such controls are described in more detail below with respect to .","As illustrated, performance monitoring component  and performance reporting component  may be configured to perform metric collection process . In various embodiments, the illustrated communications between host  and client  may take place over one or more networks, such as network  described above. In various embodiments, performance monitoring component  may be configured to submit a request for available metrics (). Such request may be a request for a listing of metrics that are collected by the performance reporting component. Performance reporting component  may evaluate the request and provide a response to the performance monitoring component (). This response may specify a listing of metrics that the performance reporting component  is available to provide to the performance monitoring component. In various embodiments, some or all of this listing may be provided as part of graphical output . For instance, user-interface component  might generate a graphical listing of selectable metrics such that a user may select metrics of interest to be monitored. In various embodiments, some or all of the metrics may be selected and an indication of such may be provided to the performance monitoring component  as part of user input . Performance monitoring component  may be configured to provide a selection of metrics from listing  to performance reporting component , as illustrated by selection of metrics . In various embodiments, this selection of metrics may specify some or all of the metrics from the list of available metrics. Such selection may in various embodiments be based upon user input. For instance, selection of metrics  may specify a set of metrics that is the same as a set of metrics specified by user input . Performance reporting component  may be configured to evaluate selection  and provide metric information  in response to selection .","Metric information  may include, for each of the selected metrics specified by selection of metrics , one or more values of that metric at respective instances in time. For instance, if percentage of processor utilization and percentage of memory utilization were selected at , metric information may include multiple values for each of those percentages at different instances in time. In one example, metric information may specify metrics at a one second level granularity, which may mean that metric information  may specify percentage values for processor utilization and memory utilization for each second of a specified time period (e.g., the last five minutes). In various embodiments, this time period may also be specified at  along with the selection of metrics. In various embodiments, performance reporting component  may generate metric information  from metrics of metrics data store . In other embodiments, metric information  may be streamed in real time to reflect the most recent metrics captured or measured by the reporting component. In one example, such streaming may be performed by the client and host establishing an active connection (e.g., a dedicated socket connection) through which data (e.g., metrics) may be passed. In another example, the client may periodically or aperiodically poll one or more hosts for metrics (e.g., through HTTP requests). In some embodiments, metric information may be some combination of historical and real-time values.","The manner in which performance reporting component  provides metric information to performance monitoring component  may be specified by information provided by performance monitoring component . For instance, user input  may specify various configuration settings for the performance reporting component, which may be provided to the performance reporting component by performance monitoring component . In one example, such configuration settings may specify the time granularity of metric values (e.g., every second, every minute, every five minutes, etc.). In another example, such configuration settings may specify the time period for which metric values should be provided. Such time period could be a rolling window of the last 10 minutes or some other time period. Such time period could also be a specified time period in the past (e.g., a specific one hour period some time in the past). Such a time period may be useful for troubleshooting host errors known to occur during a specific time period in the past. In various embodiments, the above-mentioned configuration settings for the performance reporting component may also include settings for metric collection. For instance, settings for metric collection may specify that a given metric is to be collected on an ongoing basis and\/or according to a schedule. In some cases, such metrics may be historical metrics that are stored locally on the host (e.g., in data store ). In another example, settings for metric collection may specify that a given metric is to be collected only upon request from a client; in some cases, such a configuration may be utilized to conserve resources on the host. In various embodiments, configuration settings for the collection of metrics may apply uniformly to all metrics on a host. In other cases, configuration settings for the collection of metrics may be applied on a per-metric basis (e.g., different configuration settings may apply to different metrics).","As described above, similar metric information  may be received from multiple additional hosts, such as hosts  and . This metric information may be aggregated together on client  (e.g., in memory of client ). Performance monitoring component  may be configured to provide one or more graphical representations of the aggregated metric information received from the different hosts as well as a user interface for controlling how such representations are displayed. In various embodiments, user interface controls and graphical representations may be a part of graphical output , which may be displayed on an external display (e.g., display , described below).","In some embodiments, performance monitoring component  may be configured to determine an aggregated metric from individual metrics of different host systems. For example, the performance monitoring component may be configured to generate a value for average processor utilization of a group of hosts by averaging individual values of processor utilization associated with respective hosts of that group. In various embodiments, aggregated metrics may be determined based on any of the various types of metrics described herein. In various embodiments, these types of metrics may be displayed as part of the graphical representation generated by performance monitoring component  (e.g., graphical representation  described below).",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["400","400","325","400","320","400","100"]},"In various embodiments, display  may include a host selection control , which may include distinct controls for selection of one or more host systems of various cloud computing environments. In some cases, hosts outside of cloud computing environments (e.g., host ) may also be selected. In the illustrated embodiment, host , host  and host  are selected for monitoring. The performance monitoring component may be configured to detect the hosts selected and generate requests for available metrics that are sent to the respective hosts (similar to request  described above). In response to such request, the host performance monitor may be configured to receive a list of available metrics from each of the hosts (e.g., list  described above). These available metrics may be aggregated into a selectable list of metrics, one example of which is illustrated as performance selection control . In the illustrated embodiment, a processor utilization metric and a memory utilized metric are selected. The performance monitoring component described herein may be configured to detect such selection (e.g., such selection may be specified by user input ) and request the metrics from each of the selected hosts. One example of such a request is described above with respect to selection of metrics . In response to such requests, the performance monitoring component may, for each selected host, receive values of the selected metrics from the respective performance reporting component of that host. Such values may be utilized by the performance monitoring component on the client to generate a graphical representation of the aggregated values of the metrics for each host, as illustrated by graphical representation . In various embodiments, the graphical representation of metrics (e.g., graphical representation ) may display a default listing of metrics without a user indication of which metrics to plot. In some cases, default metrics may be stored in a user preferences file managed by the performance monitoring component. In the illustrated example, the graphical representation includes plots of the metric values over a specified time period. In various embodiments, user interface controls  may be utilized to specify such time period. For instance, in the illustrated embodiment, user interface controls  include a sliding window of time (denoted by the rectangle superimposed on the illustrated timeline) that may be adjusted for position and length. The performance reporting component may be configured to plot values corresponding to the time specified by this sliding window. In various embodiments, user interface controls  may include playback controls for controlling a moving animation of the aggregated metric plots of graphical representation . For instance, in response to the selection of a play control, the performance monitoring component may cause graphical representation  to scroll the aggregated plots of metrics over a specified time period. For instance, the graphical representation could display an animation of a rolling one-minute window of the past 10 minutes of aggregated metrics. Appropriate controls for stopping, pausing, fast-forwarding and rewinding (and other media-related functions) may also be provided.","Example Method(s)","Various methods may be performed according to the system and method for decentralized performance monitoring of host systems.  illustrate flowcharts of examples of such methods. In various embodiments, the methods of  may be performed by the performance monitoring and performance reporting components described herein.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 5","b":["100","500","410","502","330","504","332"]},"As illustrated by block , the method may also include providing a graphical representation of the available metrics through a user interface. One example of such a user interface is user interface display  described above. In various embodiments, this graphical representation may include a selectable list, such as control  described above. As illustrated by block , the method may include receiving a selection of one or more of the available metrics through the user interface. In various embodiments, this may be a selection performed by a user via one or more input devices. As illustrated by block , the method may include requesting the selected metrics from each of the hosts. One example of such a request is described above with respect to request  described above. As illustrated by block , the method may also include, for each selected host and each selected metric, receiving one or more values of that metric measured at one or more instances in time. One example of this information is described above with respect to metric information (e.g., metric information ). As illustrated by block , the method may also include creating a graphical representation of aggregated metrics received from the selected hosts (e.g., graphical representation  described above).",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 6","b":["112","600","330","602","332","604","606","315"]},"In various embodiments, the performance monitoring component described herein may be configured to save and\/or capture different graphical representations of aggregated metrics. For instance, as described above with respect to , the performance monitoring component may be configured to create an animation of aggregated metrics that scrolls across different time periods. In such embodiments, the user interface may include a control (not illustrated) for capturing an instance of that animation (e.g., an image of the animation at a particular instance in time). In various embodiments, controls for modifying the manner in which plots are display may also be provided (e.g., zoom options, axis configuration, selection of plot type, variable selection for each axis, etc.).","Various embodiments may provide mechanisms for cost attribution that enable the collection of metrics (and any associated costs) to be attributed to respective entities (e.g., individuals or organizations). In various embodiments, each host of a cloud computing environment may be associated with a particular entity, such as an entity that created an instance of the host on the cloud computing environment. In some embodiments, costs associated with metric acquisition may fall under the scope of the costs associated with creating or owning the instance of the host in the cloud computing environment. In other embodiments, entities may be charged per processing cycle or for quantity of data transfer, in which case the costs associate with metric acquisition may be attributed to the processing cycles and\/or quantity of required to complete the metric acquisition. In some cases, metrics may be acquired via client and\/or host messages. In such cases, costs may be attributed on a per message basis.","In various embodiments, the graphical representations of aggregated metrics may be correlated with one or more events. For instance, in one embodiment, the host performance monitor described above may be configured to plot events on graphical representation . In one embodiment, the host performance monitor might create a vertical line at a particular instance in time as well as a graphical indication as to which event the line corresponds to. One example of such an event might be a software deployment. In this way, events and metrics may be aggregated together and visually correlated to provide the user with a sense of how events affect the performance of various hosts.","One type of system monitor includes the \u201ctop\u201d command, which is available in most Unix-like operating system. The top command and similar commands may be referred to herein as a system monitor command. System monitor commands may provide a variety of host information, such as a list of currently running host processes and associated resources (e.g., processor usage, memory utilization, etc.). In various embodiments, the performance monitoring component described herein may be configured to perform a remote system monitor command on multiple hosts, which may span multiple cloud computing environments. Each host may respond to the system monitor command with information about the host, such as a list of currently running host processes and associated resources (e.g., processor usage, memory utilization, etc.) and possibly other information (e.g., network utilization, or other machine statistics). In various embodiments, the performance monitoring component described herein may be configured to aggregate the results of the multiple system monitor commands and provide such results in graphical form. For instance, in one example, the performance monitoring component described herein may be configured to generate a listing of all processes across different hosts, where each process is ranked by processor utilization. Other implementations are possible and contemplated.","In manner similar to the aggregated system monitor command described above, the performance monitoring component described herein may be configured to request log information from multiple hosts and aggregate the logs together on the client system. In various embodiments, the performance monitoring component may be configured to generate a graphical and\/or textual representation of an aggregated log file that includes aggregated log entries and\/or error listings of multiple hosts.","In various embodiments, the performance monitoring component described herein may be configured to provide a shell access control for submitting commands to hosts (e.g., after proper client authentication). For instance, the display of  may include a selectable control (not illustrated) for each host that, when selected, results in the display of a dialog box to submit shell commands directly to the host. In various embodiments, the performance monitoring component may be configured to aggregate heap dumps and stacks of the host systems together on the client system. In various embodiments, graphical representations of each may be provided by the performance monitoring component.","In various embodiments, in addition to aggregated metrics, the host performance monitoring component may be configured to collect and aggregate any arbitrary data, such as stock prices or sensor reading from a chemical plant or refinery. In various embodiments, the host performance monitoring component may be configured to collect and aggregate any information that host systems are capable of providing. In various embodiments, this may be performed in the decentralized manner described above (e.g., without a centralized data store that acts as an information broker).","In various embodiments, the network addresses of the various hosts may be user-specified (e.g., via user input ). In other cases, the performance monitoring component described herein may be configured to retrieve host addresses elsewhere (e.g., another host, computer system, or data base). In some cases, there may be an initial configuration of host address when the performance monitoring component is loaded on the client system.","Various embodiments presented herein are described from the perspective of client system  performing metric collection, aggregation and display. Note that the description is structured in this manner for purposes of clarity. Generally, multiple different clients may perform any of the functionality described herein (e.g., metric collection, aggregation and display) either concurrently or at different times. Further, in various embodiments, different clients may monitor different sets of host systems, which may or may not be overlapping sets of host systems.","Example Computer System","Various embodiments of a system and method for decentralized performance monitoring of host systems, as described herein, may be executed on one or more computer systems, which may interact with various other devices. Note that any component, action, or functionality described above with respect to  may be implemented via one or more computer systems configured as computer system  of , according to various embodiments. For instance, in various embodiments, computer system  may implement a host (or multiple hosts through the use of a hypervisor) or a client. In the illustrated embodiment, computer system  includes one or more processors  coupled to a system memory  via an input\/output (I\/O) interface . Computer system  further includes a network interface  coupled to I\/O interface , and one or more input\/output devices , such as cursor control device , keyboard , and display(s) . In some cases, it is contemplated that embodiments may be implemented using a single instance of computer system , while in other embodiments multiple such systems, or multiple nodes making up computer system , may be configured to host different portions or instances of embodiments. For example, in one embodiment some elements may be implemented via one or more nodes of computer system  that are distinct from those nodes implementing other elements.","In various embodiments, computer system  may be a uniprocessor system including one processor , or a multiprocessor system including several processors  (e.g., two, four, eight, or another suitable number). Processors  may be any suitable processor capable of executing instructions. For example, in various embodiments processors  may be general-purpose or embedded processors implementing any of a variety of instruction set architectures (ISAs), such as the x86, PowerPC, SPARC, or MIPS ISAs, or any other suitable ISA. In multiprocessor systems, each of processors  may commonly, but not necessarily, implement the same ISA.","System memory  may be configured to store program instructions  and\/or data  accessible by processor . In various embodiments, system memory  may be implemented using any suitable memory technology, such as static random access memory (SRAM), synchronous dynamic RAM (SDRAM), nonvolatile\/Flash-type memory, or any other type of memory. In the illustrated embodiment, program instructions  implementing performance monitoring component  and user interface component  (configured as described above) and aggregated metrics , which may include metric information from multiple different hosts, are shown stored within system memory . Additionally, data  of memory  may store any of the data structures described above, in some embodiments. In various embodiments, program instructions and\/or data may be received, sent or stored upon different types of computer-accessible media or on similar media separate from system memory  or computer system . While computer system  is illustrated as implementing the functionality of performance monitoring component , any of the components illustrated above with respect to previous Figures, (e.g., performance reporting component , etc.) may be implemented via such a computer system.","In one embodiment, I\/O interface  may be configured to coordinate I\/O traffic between processor , system memory , and any peripheral devices in the device, including network interface  or other peripheral interfaces, such as input\/output devices . In some embodiments, I\/O interface  may perform any necessary protocol, timing or other data transformations to convert data signals from one component (e.g., system memory ) into a format suitable for use by another component (e.g., processor ). In some embodiments, I\/O interface  may include support for devices attached through various types of peripheral buses, such as a variant of the Peripheral Component Interconnect (PCI) bus standard or the Universal Serial Bus (USB) standard, for example. In some embodiments, the function of I\/O interface  may be split into two or more separate components, such as a north bridge and a south bridge, for example. Also, in some embodiments some or all of the functionality of I\/O interface , such as an interface to system memory , may be incorporated directly into processor .","Network interface  may be configured to allow data to be exchanged between computer system  and other devices (e.g., any other component described above) attached to a network  (which may be similar to or the same as network  described above) or between nodes of computer system . Network  may in various embodiments include one or more networks including but not limited to Local Area Networks (LANs) (e.g., an Ethernet or corporate network), Wide Area Networks (WANs) (e.g., the Internet), wireless data networks, some other electronic data network, or some combination thereof. In various embodiments, network interface  may support communication via wired or wireless general data networks, such as any suitable type of Ethernet network, for example; via telecommunications\/telephony networks such as analog voice networks or digital fiber communications networks; via storage area networks such as Fibre Channel SANs, or via any other suitable type of network and\/or protocol.","Input\/output devices  may, in some embodiments, include one or more display terminals, keyboards, keypads, touchpads, scanning devices, voice or optical recognition devices, or any other devices suitable for entering or accessing data by one or more computer systems . Multiple input\/output devices  may be present in computer system  or may be distributed on various nodes of computer system . In some embodiments, similar input\/output devices may be separate from computer system  and may interact with one or more nodes of computer system  through a wired or wireless connection, such as over network interface .","As shown in , memory  may include program instructions  configured to implement any element or action described above, such as the functionality of performance monitoring component . In one embodiment, the program instructions may implement the methods described above, such as the method illustrated by . In other embodiments, different elements and data may be included. Note that data  may include any data described above with respect to .","Those skilled in the art will appreciate that computer system  is merely illustrative and is not intended to limit the scope of embodiments. In particular, the computer system and devices may include any combination of hardware or software that can perform the indicated functions, including computers, network devices, Internet appliances, PDAs, wireless phones, pagers, etc. Computer system  may also be connected to other devices that are not illustrated, or instead may operate as a stand-alone system. In addition, the functionality provided by the illustrated components may in some embodiments be combined in fewer components or distributed in additional components. Similarly, in some embodiments, the functionality of some of the illustrated components may not be provided and\/or other additional functionality may be available.","Those skilled in the art will also appreciate that, while various items are illustrated as being stored in memory or on storage while being used, these items or portions of them may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively, in other embodiments some or all of the software components may execute in memory on another device and communicate with the illustrated computer system via inter-computer communication. Some or all of the system components or data structures may also be stored (e.g., as instructions or structured data) on a computer-accessible medium or a portable article to be read by an appropriate drive, various examples of which are described above. In some embodiments, instructions stored on a computer-accessible medium separate from computer system  may be transmitted to computer system  via transmission media or signals such as electrical, electromagnetic, or digital signals, conveyed via a communication medium such as a network and\/or a wireless link. Various embodiments may further include receiving, sending or storing instructions and\/or data implemented in accordance with the foregoing description upon a computer-accessible medium. Generally speaking, a computer-accessible medium may include a computer-accessible storage medium or computer-accessible memory medium such as magnetic or optical media, e.g., disk or DVD\/CD-ROM, volatile or non-volatile media such as RAM (e.g. SDRAM, DDR, RDRAM, SRAM, etc.), ROM, etc. In some embodiments, a computer-accessible medium may include transmission media or signals such as electrical, electromagnetic, or digital signals, conveyed via a communication medium such as network and\/or a wireless link.","The methods described herein may be implemented in software, hardware, or a combination thereof, in different embodiments. In addition, the order of the blocks of the methods may be changed, and various elements may be added, reordered, combined, omitted, modified, etc. Various modifications and changes may be made as would be obvious to a person skilled in the art having the benefit of this disclosure. The various embodiments described herein are meant to be illustrative and not limiting. Many variations, modifications, additions, and improvements are possible. Accordingly, plural instances may be provided for components described herein as a single instance. Boundaries between various components, operations and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of claims that follow. Finally, structures and functionality presented as discrete components in the exemplary configurations may be implemented as a combined structure or component. These and other variations, modifications, additions, and improvements may fall within the scope of embodiments as defined in the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
