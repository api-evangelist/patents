---
title: Access control of edges in graph index applications
abstract: A computer-implemented method that monitors the activity of different nodes within a system as well as crowd sourcing activity. The computer-implemented method determines that a first node formed a relationship with a second node, generates an edge based on the relationship between the first node and the second node, stores the edge in a graph index and assigns a privacy setting to the edge based on the relationship between the first and second nodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09602513&OS=09602513&RS=09602513
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09602513
owner_city: Redmond
owner_country: US
publication_date: 20140902
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["In a computer system, files are typically organized and displayed to a user by showing directories on the user's local storage. Examples of such systems include those running, for example, MICROSOFT\u00ae WINDOWS\u00ae. To facilitate teamwork over a network or over the Internet, users may store, share and manage files via cloud-based content management systems such as, for example, MICROSOFT\u00ae ONEDRIVE\u2122. Such systems make it significantly easier for a user to access this shared content from across a network or the Internet. A user in such an environment has access to a tremendous amount of content, so the user needs to be able to distinguish content relevant to his or her workflow. This may be difficult because relevant content is often scattered across multiple users and stored in multiple places. One potential solution is for a system to use an enterprise graph, such as, for example MICROSOFT\u00ae OFFICE 365\u2122 or MICROSOFT\u00ae YAMMER\u00ae. Using an enterprise graph may allow a user to find relevant content in a quicker, more informed, and efficient manner, but may introduce privacy concerns.","One way to provide information about content and activities within an enterprise is the use of enterprise graphing. In particular, user actions within an enterprise may be stored in various relational data bases (db), log files, etc., and enterprise graphing analyzes these data and interactions to provide the aggregated sum of activity and facts among the enterprise users. In other words, enterprise graphing is an analytical tool to capture and illustrate enterprise data and activity.","An enterprise graph illustrates entities, called \u201cnodes,\u201d and relationships between those entities, called \u201cedges.\u201d More particularly, enterprise graphs illustrate a variety of nodes such as, for example, users, documents, presentations, meetings, emails, etc., and edges define the relationships between those nodes such as authoring, editing, viewing , sharing, sending, etc. In certain circumstances, enterprise graph queries associated with a particular user may return information that is considered private. For example, enterprises may want to restrict access to certain content among its users. Thus, when graph queries are run, the right content must be associated with the right users otherwise private information may be disclosed. However, in order to provide accurate graph data, which may be public, to illustrate the aggregated sum of activity within an enterprise, private data must be considered while ensuring that the privacy of that data is not made public. It is with respect to these and other considerations that the present improvements have been needed.","The following presents a simplified summary in order to provide a basic understanding of some novel embodiments described herein. This summary is not an extensive overview, and it is not intended to identify key\/critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.","Various embodiments are generally directed to techniques to ensure that information provided in connection with an enterprise graph query produce accurate results of the behavior of enterprise users while maintaining the privacy of this data. The edges of an enterprise graph that may be private must be taken into account in order to provide an accurate depiction of the activity of an enterprise in response to a query, the results of which may be public, without releasing the original private information. A graph index stores relationships as edges between actors and various nodes with a Boolean value indicating whether or not the edge is private. In alternative embodiments a more sophisticated data structure may be used instead of a Boolean value such as, for example, an integer value or a table showing that the edge should only be visible to a certain set of nodes. When the data within an enterprise is indexed, a Boolean value is set that is associated with an edge based on the relationship that the edge represents with the actor. When a query or request for a graph index is run, the identification (ID) of the user of the actor requesting the query is used to filter out the edges where the privacy value indicates whether the edge is private.","To the accomplishment of the foregoing and related ends, certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative of the various ways in which the principles disclosed herein can be practiced and all aspects and equivalents thereof are intended to be within the scope of the claimed subject matter. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.","With general reference to notations and nomenclature used herein, the detailed descriptions which follow may be presented in terms of program procedures executed on a computer or network of computers. These procedural descriptions and representations are used by those skilled in the art to most effectively convey the substance of their work to others skilled in the art.","A procedure is here, and generally, conceived to be a self-consistent sequence of operations leading to a desired result. These operations are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical, magnetic or optical signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It proves convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like. It should be noted, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to those quantities.","Further, the manipulations performed are often referred to in terms, such as adding or comparing, which are commonly associated with mental operations performed by a human operator. No such capability of a human operator is necessary, or desirable in most cases, in any of the operations described herein which form part of one or more embodiments. Rather, the operations are machine operations. Useful machines for performing operations of various embodiments include general purpose digital computers or similar devices.","Various embodiments also relate to apparatus or systems for performing these operations. This apparatus may be specially constructed for a specific purpose or it may comprise a general purpose computer as selectively activated or reconfigured by a computer program stored in the computer. The procedures presented herein are not inherently related to a particular computer or other apparatus. Various general purpose machines may be used with programs written in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the needed method steps. The needed structure for a variety of these machines will appear from the description given.","Reference is now made to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident, however, that the novel embodiments can be practiced without these specific details. In other instances, well known structures and devices are shown in block diagram form in order to facilitate a description thereof. The intention is to cover all modifications, equivalents, and alternatives consistent with the claimed subject matter.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","120","110","1","110","102","1","102","110","1","110","120","118","100","100","110","1","110","115","1","115","120","102","1","102","110","1","115","1","115","110","1","110","120","102","150","120","115"],"i":["n ","n","n ","n ","n ","n ","n ","n","n ","n "]},"Enterprise server  may represent one or more electronic devices that provide and host enterprise applications for multiple clients devices - . . . -and corresponding users - . . . -. Enterprise server  may be implemented as one or more on-premises electronic devices, for example, for a particular business, entity, etc. Enterprise server  may also be implemented as a remote or \u201ccloud\u201d deployment accessible over a network, such as the Internet. Enterprise server  may be arranged to provide various services such as, but not limited to, enterprise graph generation, monitoring, and recording.","Each content interface - . . . -is configured to collect usage information according to user events and provide this information to graph db  via graph index component . In particular, an exemplary content interface -monitors and collects occurrences of usage events by a user -. The usage events may be configured through an Application Programming Interface (API) and or various user interfaces (UI's). For example, an event may occur when a user -views a document or file. An event may occur, for example, when a user -modified a document or file. Each of these events is monitored by content interface - and relevant information from the event is provided to graph db  of enterprise server . The relevant information may include, for example, the ID of user -, the document or file name and path, the date and time the document or file was viewed by user -, etc. Generally, the user -may have a corresponding first node associated therewith. This node may include information unique to user -, such as the user's email address, login information, photograph, etc. It is important to note that the user's corresponding node may take many forms without detracting from the spirit of this invention, for example a single node may be shared by multiple users in a department, or a single user might have several nodes associated with the user such as, for example, a user may have one node used in communication with those outside an organization and a separate node used in communication with those inside the organization. For shorthand, a user may sometimes be referred to herein as a node, or vice-versa, but in fact this refers to situations where a particular node is associated with a user. In this example, the document or file that is accessed by the user is referred to as a second node. The act of viewing, modifying, etc., the document is the relationship between the nodes, and the edge is defined by the relationship between the nodes, namely that the first node viewed, modified, etc., the second node. It is important to note that this second node may also take multiple forms without detracting from the spirit of the invention. For example, the second node may be the document itself, or a data structure containing information unique to the document, such as a filepath, URL, network address, metadata, version control value, etc. For shorthand, a document or other piece of content may be referred to as a node, and this is intended to include situations where the node is the document or other content as well as situations where the node represents the document or content. A single node may comprise other nodes, for example a situation where a presentation (such as those made with MICROSOFT\u00ae POWERPOINT\u00ae) includes a chart (such as those made with MICROSOFT\u00ae EXCEL\u00ae) or a video (such as those made with MICROSOFT\u00ae MOVIE MAKER\u2122). Sometimes variations on the term \u201cviewing\u201d are used to describe the action that one node takes upon another node, and this term typically connotes a human being looking at something, but in this case it is used as a general shorthand for any form of accessing or reading data from a source. For example, a spreadsheet node may cull data from a database node, and this may be considered \u201cviewing\u201d even if there is no human involvement.","In an exemplary embodiment, enterprise server  may include various functional components, such as a storage device , a graph index component , an authentication component , a user authentication information store , an edge query module  and an edge generation module . Enterprise server  may include alternate, fewer or additional components to provide the functionality described herein. In various embodiments, some components may be combined into one component. The embodiments are not limited to these examples. Enterprise server  may receive activity information in storage device  via graph index component . In particular, information about various items within an enterprise, such as users, documents, meetings, conversations, files, etc., are monitored by respective content interfaces - . . . -and provided to graph db  via storage device . The system  may be configurable to collect particular usage events within an enterprise. Graph db  may be a relational database, log file, etc. configured to store usage events by users - . . . -in an enterprise. The graph db  is used to store relationships between nodes and edges with an associated Boolean value to indicate whether the edge itself is private or public. For example, if user - views a document or file, user - is considered node one, the document or file is considered node  and the relationship between the nodes is considered the edge. Whether or not an edge is private usually applies to edges going from a user, e.g. user - in this example. When the activity between nodes is stored in graph db , the private or public Boolean value is set depending on the relationship the edge represents. For example, when user - views a document or file, this activity is stored in the graph db  with the private or public Boolean value set with the generation of the edge. The Boolean value indicates whether the action (i.e. edge) the actor took is private or public.","Graph index component  is configured to receive a query from a user - . . . -and process the query to obtain search results related to usage analytics associated with the requesting user. Graph index component  may be an application\/process configured to run as a resource on enterprise server , such as for example, MICROSOFT\u00ae OFFICE 365\u2122 or MICROSOFT\u00ae SHAREPOINT\u00ae. Graph index component  utilizes authentication component  to verify the information associated with the user requesting the query also referred to as an actor as previously noted. This ensures that the query returns the correct content based on the actor. In particular, authentication component  compares the information associated with the user requesting the query with the user authentication information store . For example, authentication component  may compare the user ID, password, etc. of the actor requesting the query with the information in user authentication information store .","The query generated by the edge query module  is executed on the graph db  via graph index component . The user verification component  is accessed by edge query module  to ensure that all the nodes and edges associated with the user requesting the query are included and those edges that are marked private and not associated with the user requesting the query are excluded. This verification process run by user verification component  determines which edges are excluded from the query based on the privacy status of a particular edge. Once the verification component  verifies the user information, the user requesting the query is defined as node one and the query will exclude nodes and edges that are private to nodes other than node one. Based on the user information verified by user verification component , edge query module  generates a query of the graph db  via graph index component  to produce an enterprise graph associated with the user requesting the query. In other words, the query generated by edge query module  is formulated to exclude information from the graph that is set to be private where the user requesting the query is not identified as the first node. The query uses the user id to filter out all edges where the Boolean value for privacy is true and the first node is not equal to the ID of the user requesting the query.","Edge generation module  is configured to generate new edges for an enterprise graph. This includes generating new edges based on the concept of \u201ccrowd sourcing.\u201d Crowd sourcing refers to deriving insights based on existing connections in the enterprise graph. Crowd sourcing may provide insights about a particular node or set of nodes even if the node does not already have any existing edges. For example, if more than a threshold number of users in a particular set of users has a relationship with a node that is private, a new edge may be created for another actor within the set and the node. Edge generation module  includes crowd source component  and edge privacy component . The process of generating new edges for an enterprise graph associated with an actor may occur as a result of user action or may occur automatically, for example via crowd source component . In particular, whenever a user interacts with a document, another user, or other entity, the edge generation module may activate and undergo process  as described in more detail in . Crowd source component  may automatically activate and undergo process  described in  to form an edge between an actor within the set and a node. It is important to note that access privileges with nodes may not change as a result of the generation of an edge by edge generation module . For example, if users within a set have edges identified as private with a particular node, an edge may be created from another user within the set for that node, but if the new user does not have access to the node, then the generation of the edge does not change the access privileges. In other words, a generation of an edge by edge generation module  will not change the fact that a user does not have access to the node (e.g., document, file, etc.).","Whenever edge generation module  generates a new edge, edge privacy component  determines the privacy setting for the new edge. By way of example, edge privacy component  may make this determination based on user settings or organizational policies. For each edge, once edge generation module  is aware of the nodes, the relationship, and the privacy setting, it may formulate this data for indexing and send this data to the graph index component . However, edge generation module  may not disclose the specific users that contributed to exceeding the threshold in order to generate the edge. In this manner, a new edge may be generated and inserted into an enterprise graph based on the crowd sourcing concept.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 6"],"b":["160","161","161","161","600","161","160","162","163","162","165","165","165"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3","FIG. 4"],"b":["115","1","110","1","102","1","310","102","1","102","1","102","1","102","1","162","102","1","163","102","1","400","161","102","1","102","1","102","1","311","310","102","1","314","102","1","102","1","102","1","312","102","1","102","1","102","1","313","102","1","102","1","102","1","316","102","1","102","1","102","1","315","102","1","102","1","320","102","1","102","1","320","102","1","102","1","330","102","1","330","331","102","1","332","102","1","333","102","1","334","102","1","335","102","1"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":["400","400","400","120"]},"In the illustrated embodiment shown in , logic flow  may receive information that a first node is forming a relationship with a second node at block . Logic flow  identifies the relationship between the first node and the second node at block . For example, an event may occur when a user -views a document or file. A different event may occur, for example, when a user -modifies a document or file. The user -is referred to as a first node and the document or file that is accessed by the user is referred to as a second node. The act of viewing, modifying, etc., the document is the relationship between the nodes and the edge is defined by the relationship between the nodes, namely that the first node viewed, modified, etc. the second node.","Logic flow  may determine the privacy setting for the relationship between the first node and the second node at block . For example, when user - views a document or file, this activity is stored in the graph db  with the private or public Boolean value set with the generation of the edge. Logic flow  stores, in the graph index, identity information of the first and second nodes, the relationship therebetween and the privacy setting associated with the edge. For example, graph db  may be used to store relationships between nodes and edges with an associated Boolean value to indicate whether or not the edge is private or public.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5","b":["500","500","120"]},"Logic flow  may receive a request to query the graph index for information on relationships between nodes where information includes a first node, a second node and the nature of the relationship at block . Graph index component  is configured to receive a query from a user - . . . -and process the query to obtain search results related to usage analytics associated with the requesting user. Logic flow  verifies the identity of the user associated with the query request at block . For example, graph index component  utilizes authentication component  to verify the information associated with the user requesting the query also referred to as an actor. Logic flow  formulates the query to exclude information set to be private where the identity of the first node is different from the identity of the user associated with the request at block . The logic flow executes the query at block .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 6","b":["600","600","120"]},"Logic flow  determines whether or not more than a threshold amount of nodes in a set of nodes associated with a first node have formed relationships with a second node at block . For example, edge generation module  is configured to generate new edges for an enterprise graph based on the concept of crowd sourcing\u201d where, for example, if more than a threshold number of users in a particular set of users have associated edges, a new edge may be generated for another user within the set of users even if those edges are private. Thus, an edge may be generated for a user to enable the user to see which nodes (e.g. documents or files) are popular amongst the user's colleagues without being made aware of which specific colleagues acted with that node. Logic flow  determines the relationship between the first node and the second node at block  and stores in the graph index, information including the identity of the first node, the identity of the second node and the relationship between the first node and the second node at block .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 7A","b":["700","1","710","1","710","720","1","720","710","1","710","720","1","720","710","1","710","2","710","3","710","4","745","710","5","710","6","710","745","720","1","720","700","1","720","1","710","1","710","5","710","1","720","2","710","1","710","6","720","710","3","710","6","710","4"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 7B","FIG. 7A","FIG. 1"],"b":["765","1","700","1","765","1","775","1","775","770","780","790","795","765","1","150","140","765","1","770","780","790","795","795","775","1","720","2","710","1","710","6","775","2","720","3","710","2","710","6","775","3","720","710","3","710","6","775","4","720","1","710","1","710","5"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 7C","FIG. 1"],"b":["700","2","710","1","710","720","1","720","700","2","700","1","161","710","4","710","1","710","720","1","720","710","1","710","2","710","3","710","4","745","710","5","710","6","710","745","720","1","720","700","2","720","1","710","1","710","5","720","3","710","2","710","6","710","1","710","720","1","720","161","720","4","710","4","710","6","710","6","710","4","161","720","4","710","4","745","710","1","710","2","710","3","745","710","6","161","720","2","720","3","720","710","6","720","4","710","4","710","6","745","161"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 7D","b":["765","2","775","1","775","765","2","765","1","161","775","5","770","780","790","795","765","2","150","140","765","2","770","780","790","795","775","1","720","2","710","1","710","6","775","2","720","3","710","2","710","6","775","3","720","710","3","710","6","775","4","720","1","710","1","710","5","775","5","720","4","710","6","710","4"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 7E","b":["700","3","700","2","700","3","710","4","720","1","720","2","720","3","720","700","2","765","2","710","4","710","1","710","2","710","3","160","710","1","710","2","710","3","161","710","4","720","4","720","4","710","4","710","4","700","2","710","4","161","160","710","4","710","5","710","710","4","710","4","710","1","710","2","710","3","745","710","4"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 7F","b":["765","3","700","3","765","3","765","2","710","4","775","1","775","2","775","3","775","4","765","3","775","5","765","3","710","4","710","4"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 8A","FIG. 8B","FIG. 8C","FIG. 8D","FIG. 8A"],"b":["800","1","810","1","810","2","810","3","820","1","820","2","800","1","820","1","810","1","810","2","820","2","810","3","810","2","810","2","810","1","810","3","820","1","810","1","810","2","820","2","810","3","810","2"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 8B","b":["865","1","800","1","870","880","890","895","865","1","150","140","865","1","870","880","890","895","875","1","820","1","810","1","810","2","875","2","820","2","810","3","810","2"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8C","b":["800","2","800","1","820","3","161","810","1","810","3","810","3","810","2","810","1","820","3","810","1","810","3","163","820","3","820","1","820","2"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 8D","b":["865","2","800","2","870","880","890","895","865","2","150","140","865","2","870","880","890","895","875","1","820","1","810","1","810","2","875","2","820","2","810","3","810","2","875","3","820","3","810","1","810","3","875","3","875","1","875","2"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 9","FIG. 1"],"b":["900","900"]},"As used in this application, the terms \u201csystem\u201d and \u201ccomponent\u201d are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution, examples of which are provided by the exemplary computing architecture . For example, a component can be, but is not limited to being, a process running on a processor, a processor, a hard disk drive, multiple storage drives (of optical and\/or magnetic storage medium), an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and\/or thread of execution, and a component can be localized on one computer and\/or distributed between two or more computers. Further, components may be communicatively coupled to each other by various types of communications media to coordinate operations. The coordination may involve the uni-directional or bi-directional exchange of information. For instance, the components may communicate information in the form of signals communicated over the communications media. The information can be implemented as signals allocated to various signal lines. In such allocations, each message is a signal. Further embodiments, however, may alternatively employ data messages. Such data messages may be sent across various connections. Exemplary connections include parallel interfaces, serial interfaces, and bus interfaces.","The computing architecture  includes various common computing elements, such as one or more processors, multi-core processors, co-processors, memory units, chipsets, controllers, peripherals, interfaces, oscillators, timing devices, video cards, audio cards, multimedia input\/output (I\/O) components, power supplies, and so forth. The embodiments, however, are not limited to implementation by the computing architecture .","As shown in , the computing architecture  comprises a processing unit , a system memory  and a system bus . The processing unit  can be any of various commercially available processors, including without limitation an AMD\u00ae Athlon\u00ae, Duron\u00ae and Opteron\u00ae processors; ARM\u00ae application, embedded and secure processors; IBM\u00ae and Motorola\u00ae DragonBall\u00ae and PowerPC\u00ae processors; IBM and Sony\u00ae Cell processors; Intel\u00ae Celeron\u00ae, Core (2) Duo\u00ae, Itanium\u00ae, Pentium\u00ae, Xeon\u00ae, and XScale\u00ae processors; and similar processors. Dual microprocessors, multi-core processors, and other multi-processor architectures may also be employed as the processing unit .","The system bus  provides an interface for system components including, but not limited to, the system memory  to the processing unit . The system bus  can be any of several types of bus structure that may further interconnect to a memory bus (with or without a memory controller), a peripheral bus, and a local bus using any of a variety of commercially available bus architectures. Interface adapters may connect to the system bus  via a slot architecture. Example slot architectures may include without limitation Accelerated Graphics Port (AGP), Card Bus, (Extended) Industry Standard Architecture ((E)ISA), Micro Channel Architecture (MCA), NuBus, Peripheral Component Interconnect (Extended) (PCI(X)), PCI Express, Personal Computer Memory Card International Association (PCMCIA), and the like.","The computing architecture  may comprise or implement various articles of manufacture. An article of manufacture may comprise a computer-readable storage medium to store logic. Examples of a computer-readable storage medium may include any tangible media capable of storing electronic data, including volatile memory or non-volatile memory, removable or non-removable memory, erasable or non-erasable memory, writeable or re-writeable memory, and so forth. Examples of logic may include executable computer program instructions implemented using any suitable type of code, such as source code, compiled code, interpreted code, executable code, static code, dynamic code, object-oriented code, visual code, and the like. Embodiments may also be at least partly implemented as instructions contained in or on a non-transitory computer-readable medium, which may be read and executed by one or more processors to enable performance of the operations described herein.","The system memory  may include various types of computer-readable storage media in the form of one or more higher speed memory units, such as read-only memory (ROM), random-access memory (RAM), dynamic RAM (DRAM), Double-Data-Rate DRAM (DDRAM), synchronous DRAM (SDRAM), static RAM (SRAM), programmable ROM (PROM), erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), flash memory, polymer memory such as ferroelectric polymer memory, ovonic memory, phase change or ferroelectric memory, silicon-oxide-nitride-oxide-silicon (SONOS) memory, magnetic or optical cards, an array of devices such as Redundant Array of Independent Disks (RAID) drives, solid state memory devices (e.g., USB memory, solid state drives (SSD) and any other type of storage media suitable for storing information. In the illustrated embodiment shown in , the system memory  can include non-volatile memory  and\/or volatile memory . A basic input\/output system (BIOS) can be stored in the non-volatile memory .","The computer  may include various types of computer-readable storage media in the form of one or more lower speed memory units, including an internal (or external) hard disk drive (HDD) , a magnetic floppy disk drive (FDD)  to read from or write to a removable magnetic disk , and an optical disk drive  to read from or write to a removable optical disk  (e.g., a CD-ROM or DVD). The HDD , FDD  and optical disk drive  can be connected to the system bus  by a HDD interface , an FDD interface  and an optical drive interface , respectively. The HDD interface  for external drive implementations can include at least one or both of Universal Serial Bus (USB) and IEEE 1394 interface technologies.","The drives and associated computer-readable media provide volatile and\/or nonvolatile storage of data, data structures, computer-executable instructions, and so forth. For example, a number of program modules can be stored in the drives and memory units , , including an operating system , one or more application programs , other program modules , and program data . In one embodiment, the one or more application programs , other program modules , and program data  can include, for example, the various applications and\/or components of the system .","A user can enter commands and information into the computer  through one or more wire\/wireless input devices, for example, a keyboard  and a pointing device, such as a mouse . Other input devices may include microphones, infra-red (IR) remote controls, radio-frequency (RF) remote controls, game pads, stylus pens, card readers, dongles, finger print readers, gloves, graphics tablets, joysticks, keyboards, retina readers, touch screens (e.g., capacitive, resistive, etc.), trackballs, trackpads, sensors, styluses, and the like. These and other input devices are often connected to the processing unit  through an input device interface  that is coupled to the system bus , but can be connected by other interfaces such as a parallel port, IEEE 1394 serial port, a game port, a USB port, an IR interface, and so forth.","A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adaptor . The monitor  may be internal or external to the computer . In addition to the monitor , a computer typically includes other peripheral output devices, such as speakers, printers, and so forth.","The computer  may operate in a networked environment using logical connections via wire and\/or wireless communications to one or more remote computers, such as a remote computer . The remote computer  can be a workstation, a server computer, a router, a personal computer, portable computer, microprocessor-based entertainment appliance, a peer device or other common network node, and typically includes many or all of the elements described relative to the computer , although, for purposes of brevity, only a memory\/storage device  is illustrated. The logical connections depicted include wire\/wireless connectivity to a local area network (LAN)  and\/or larger networks, for example, a wide area network (WAN) . Such LAN and WAN networking environments are commonplace in offices and companies, and facilitate enterprise-wide computer networks, such as intranets, all of which may connect to a global communications network, for example, the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a wire and\/or wireless communication network interface or adaptor . The adaptor  can facilitate wire and\/or wireless communications to the LAN , which may also include a wireless access point disposed thereon for communicating with the wireless functionality of the adaptor .","When used in a WAN networking environment, the computer  can include a modem , or is connected to a communications server on the WAN , or has other means for establishing communications over the WAN , such as by way of the Internet. The modem , which can be internal or external and a wire and\/or wireless device, connects to the system bus  via the input device interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, can be stored in the remote memory\/storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.","The computer  is operable to communicate with wire and wireless devices or entities using the IEEE 802 family of standards, such as wireless devices operatively disposed in wireless communication (e.g., IEEE 802.11 over-the-air modulation techniques). This includes at least Wi-Fi (or Wireless Fidelity), WiMax, and Bluetooth\u2122 wireless technologies, among others. Thus, the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices. Wi-Fi networks use radio technologies called IEEE 802.11x (a, b, g, n, etc.) to provide secure, reliable, fast wireless connectivity. A Wi-Fi network can be used to connect computers to each other, to the Internet, and to wire networks (which use IEEE 802.3-related media and functions).",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 10","b":["1000","1000","1000"]},"As shown in , the communications architecture  comprises includes one or more clients  and servers . The one or more clients  may implement the client device - . . . -. The servers  may implement the enterprise server . Clients  and servers  are operatively connected to one or more respective client data stores  and server data stores  that can be employed to store information local to the respective clients  and servers , such as cookies and\/or associated contextual information.","Clients  and the servers  may communicate information between each other using a communication framework . The communications framework  may implement any well-known communications techniques and protocols. The communications framework  may be implemented as a packet-switched network (e.g., public networks such as the Internet, private networks such as an enterprise intranet, and so forth), a circuit-switched network (e.g., the public switched telephone network), or a combination of a packet-switched network and a circuit-switched network (with suitable gateways and translators).","The communications framework  may implement various network interfaces arranged to accept, communicate, and connect to a communications network. A network interface may be regarded as a specialized form of an input output interface. Network interfaces may employ connection protocols including without limitation direct connect, Ethernet (e.g., thick, thin, twisted pair 10\/100\/1000 Base T, and the like), token ring, wireless network interfaces, cellular network interfaces, IEEE 802.11 a-x network interfaces, IEEE 802.16 network interfaces, IEEE 802.20 network interfaces, and the like. Further, multiple network interfaces may be used to engage with various communications network types. For example, multiple network interfaces may be employed to allow for the communication over broadcast, multicast, and unicast networks. Should processing requirements dictate a greater amount speed and capacity, distributed network controller architectures may similarly be employed to pool, load balance, and otherwise increase the communicative bandwidth needed by clients  and the servers . A communications network may be any one and the combination of wired and\/or wireless networks including without limitation a direct interconnection, a secured custom connection, a private network (e.g., an enterprise intranet), a public network (e.g., the Internet), a Personal Area Network (PAN), a Local Area Network (LAN), a Metropolitan Area Network (MAN), an Operating Missions as Nodes on the Internet (OMNI), a Wide Area Network (WAN), a wireless network, a cellular network, and other communications networks.","Some embodiments may be described using the expression \u201cone embodiment\u201d or \u201can embodiment\u201d along with their derivatives. These terms mean that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment. Further, some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. These terms are not necessarily intended as synonyms for each other. For example, some embodiments may be described using the terms \u201cconnected\u201d and\/or \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact with each other. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other.","What has been described above includes examples of the disclosed architecture. It is, of course, not possible to describe every conceivable combination of components and\/or methodologies, but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly, the novel architecture is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7D"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7E"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7F"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8C"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8D"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 9","FIG. 1"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 10","FIG. 1"]}]},"DETDESC":[{},{}]}
