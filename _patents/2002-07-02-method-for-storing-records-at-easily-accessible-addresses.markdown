---
title: Method for storing records at easily accessible addresses
abstract: A method for identifying record segments that are to be stored for subsequent access and linking within other records. The method includes earmarking a record segment with a data reference and thereafter storing an address corresponding to the earmarked segment along with the data reference so thereafter when the data reference is recognized within another record, a link can be made between the data reference in the other record and the record segment stored at the address associated therewith.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07107281&OS=07107281&RS=07107281
owner: HyperPhrase Technologies, LLC
number: 07107281
owner_city: Madison
owner_country: US
publication_date: 20020702
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","A. System Hardware and Exemplary Database Definitions"],"p":["This application is a continuation-in-part of U.S. patent application Ser. No. 09\/326,177 which was filed on Jun. 4, 1999 now U.S. Pat. No. 6,434,567 and is entitled \u201cMethod For Specifying Enterprise-Wide Database Address Formats\u201d which is a continuation-in-part of U.S. patent application Ser. No. 09\/247,349 which was filed on Feb. 10, 1999 now U.S. Pat. No. 7,013,298 and is entitled \u201cMethod and System for Automated Data Storage and Retrieval\u201d which is a continuation-in-part of U.S. patent application Ser. No. 08\/727,293 which was filed on Oct. 9, 1996 now U.S. Pat. No. 5,895,461 and is entitled \u201cMethod and System for Automated Data Storage and Retrieval With Uniform Address Scheme\u201d which in turn claims priority from provisional Appln. Ser. No. 60\/023,126 which was filed on Jul. 30, 1996, the Ser. No. 09\/247,349 application also being a continuation-in-part of U.S. patent application Ser. No. 08\/871,818 which was filed on Jun. 9, 1997 now U.S. Pat. No. 5,903,889 and is entitled \u201cSystem and Method for Translating, Collecting and Archiving Patient Records\u201d. This application is also a continuation-in-part of U.S. patent application Ser. No. 09\/130,934 which was filed on Aug. 7, 1998 now U.S. Pat. No. 6,345,268 and is entitled \u201cMethod and System for Resolving Temporal Descriptions of Data Records in a Computer System\u201d.","Not applicable.","The present invention relates to the collection, storage and retrieval of data on computer systems. More particularly, the present invention relates to a method and apparatus for specifying address formats and rule sets for creating address formats for use throughout an information enterprise which facilitate automatic address building and storage for collected records and automatic generation of hyperlinks to stored records via database literate processors.","An exemplary information enterprise includes at least one database (DB), information collecting devices (ICDs) for collecting information to form data records for storage on the DB and one or more processors linked to the DB for running application programs which access and manipulate DB records. For example, U.S. patent application Ser. No. 09\/170,169 (hereinafter \u201cthe '169 application\u201d) entitled \u201cData Collection Device and System,\u201d which is commonly owned by the applicant of this application, describes several remote ICD types which collect information and provide the information and corresponding addresses to a DB for storage. For the purposes of this explanation ICDs may also include stationary computers or the like for data entry. U.S. patent application Ser. No. 09\/247,349 (hereinafter \u201cthe '349 application) entitled \u201cMethod and System for Automated Data Storage and Retrieval\u201d which is commonly owned by the applicant of this application, describes a database literate processor application program which automatically builds database addresses for forming hyperlinks between data references to records and the records referenced by the data references. The '349 application also teaches processors which receive information sets and based on set content, generate DB addresses for the sets and store the information sets at the generated addresses. Although the invention may be used with other application programs, to simplify this explanation the invention will be described in the context of the DB literate processor program referenced above. Hereafter DB literate processor is taken to mean any of several different types of data processors including a word processor, a spread sheet, a data entry form and so on.","The proliferation of information systems throughout all aspects of business and personal life is a clear sign that society has recognized the advantages associated with such systems. Nevertheless, conventional information systems are plagued by a number of important shortcomings which render systems difficult to use and therefore, in many cases, underutilized.","First, in most cases it is extremely difficult to develop and maintain an entire information system which is completely information compatible. Information compatibility means that when a record and a corresponding address are provided to the DB for storage, the record information is arranged in a record format required by the DB and the record address is in an address format required by the DB. Information compatibility also means that when a DB literate program identifies a DB record in a record request, the request includes an address format which is recognizable by the DB.","Generally there are two ways to facilitate information compatibility. First, each ICD program and DB literate program may be programmed to provide records and respective storage addresses in record formats and address formats required by the DB. Second, an intermediate computer may be provided which receives information from ICDs and DB literate programs and uses the received information to generate records and respective storage addresses which comport with required DB record and address formats. The intermediate computer effectively operates as a translator between the ICDs and DB literate programs on one hand and the DB on the other hand.","In either case, after a DB characterized by record formats and address formats has been defined, additional custom programming has to be done to support information compatibility. In systems which do not include an intermediate computer, each ICD program and DB literate program has to be programmed to support information compatibility. In the case of an ICD program, this means that the program can recognize information required to form a record and an address, can identify the required information and can assemble the address and record for delivery to the DB. In the case of a DB literate program, this means that the program can recognize a reference to a stored record, can recognize information required to form an address for the referenced record, can identify the required information and can assemble an address for the referenced record. In systems which include an intermediate computer, the computer has to be programmed to receive information from the ICDs and application programs, recognize information required to form a record and\/or an address, identify the required information and assemble the record and\/or address for delivery to the DB.","Thus, programming an ICD, a DB literate program, or an intermediate computer requires provision of DB address formats and record formats and rule sets for identifying required information to instantiate the formats, rule sets for how to use the identified information to instantiate the formats often including specific information forms and rules for converting the identified information into the specific information forms.","Therefore, conventional systems for defining DB address formats and record formats require at least two programming steps to facilitate information compatibility including DB definition and additional programming of either ICD programs and DB literate programs or additional programming of an intermediate computer.","While two step programming is not particularly difficult where ICDs and application programs are only used with one DB and where the DB only supports one record format and one address format, most information systems include several DBs and each DB typically supports several different record formats and address formats. In addition, most information systems also include many different ICD and application program types, each of which may internally format information in a unique manner and may provide information to an intermediate computer in a unique configuration. These different ICD and application program types further increase programming complexity.","This smorgasbord of different DBs, record formats, address formats, ICD types and application program types is due to the evolutionary nature of information systems generally. Typically information systems grow and expand along with the businesses they serve. For example, an initial system may include one type of ICD and a single application, each of which is supportable by a single programming language. As technology evolves a second ICD type may be developed and added to the system, the second ICD type having to be programmed for DB information compatibility and so on. Similarly, as a business expands, database requirements eventually exceed existing capacity and additional DBs have to be added to the information system. Many times a new DB requires different record formats and address formats. In addition, often different ICDs and applications only support a vendors proprietary software and record and addressing formats.","The second shortcoming of conventional information systems is related closely to the first and is that highly skilled programmers are typically required to facilitate information compatible programming. This is because such programming requires an intimate knowledge of DB record formats and address formats and the form in which ICDs internally store information. In addition, in systems which do not include an intermediate computer, the programmer must have knowledge about the ICD and DB literate program programming languages. In systems which have an intermediate computer the programmer must have knowledge about the intermediate computers programming language. The task of programming is further exacerbated in most cases as most information systems include many different ICD types, application program types and DBs having unique programming characteristics as described above.","Third, modifications to information systems are relatively difficult to implement. Consider the case where a new record format and a new address format are added to a DB or the case where an entirely new DB is added to an information system where the new DB requires new address formats and record formats. In either of these two cases additional customizing programming is required. In systems which do not include an intermediate computer each ICD program and each DB literate program has to be modified to accommodate the new DB record format(s) and address format(s). Also, new rule sets for identifying required information and for instantiating address formats and record formats have to be provided to each ICD and each DB literate program. In systems which include an intermediate computer the intermediate computer has to be reprogrammed to accommodate the new DB record format(s) and address format(s).","Fourth, because highly skilled programmers are required to support and maintain an information system and many businesses do not employ such programmers, often, despite a systems ability to support additional information gathering, storage, retrieval and processing capabilities, a business will not take advantage of such additional capabilities.","For example, in a medical facility ICDs including bar code readers may routinely be used to memorialize physician visits to patients. With a bar coded bracelet on each patient, at the beginning of each patient visit a physician may be required to use the ICD to read the patient's information from the bracelet. The ICD then generates a record including date, time, patient ID, physician ID and so on documenting a patient encounter. The ICD also generates a record address and, when downloaded to a DB, the DB stores the record at the corresponding address.","In this case, it may be advantageous to use the same bar code reading ICD to track other facility information. For example, facility equipment may be bar coded to track location of mobile equipment, medication containers may be bar coded when filled to track dispensation and so on. If the ICDs are used to track equipment location without custom programming equipment locations will be mistaken for patient encounters. Thus, custom programming is required. In this case, while the ICD may be ideal for other facility purposes, the programming task required to support these other capabilities may be prohibitively complex and therefore the additional capabilities may never be realized.","Fifth, especially in systems which include a large number of different devices, applications and DBS, program errors are extremely likely and, unfortunately, because of system complexity debugging is extremely difficult. For example, in the case of an ICD which generates both a data record and a corresponding address for the record from an information set and then downloads the record\/address to a DB for storage, if a new record\/address format pair is to be supported and each of the ICD and DB have to be programmed to support the new format separately, errors or incompatibilities between the DB and ICD are likely and identifying the errors would be difficult at best.","Therefore, it would be advantageous to have a method and apparatus which could be used to simplify the process of programming all of the components of an information system such that complete information compatibility can be achieved through a single programming process. It would also be advantageous if such a method and\/or apparatus could ensure information compatibility.","The present invention is to be used with a system which includes at least one and perhaps several different types of processing devices, each processing device capable of either generating a storage address for a record or generating and creating a link to record stored at a particular address or both storing and linking. To this end, each processing device requires, among other things, a database address format which can be used as a pattern for generate the storage or linking address.","The invention includes both a method and an apparatus for specifying enterprise wide address formats for the use by all processing devices for address generating purposes. To this end, the inventive method includes the steps of specifying required address formats including a plurality of fields, for each format field, specifying a field type and providing the address format to the processing devices for storing and linking processes. To facilitate field type specification, the system preferably includes pre-defined field types which have been designed specifically for the facility which employs the invention and which, to that end, are defined to be the field types most likely to be routinely used at the facility.","In systems including many different types of processing devices, by specifying address formats once and then providing the formats to all processing devices, complete enterprise wide address compatibility is ensured.","In addition to including pre-defined address format field types, the invention also provides an instantiation rule set for each pre-defined field type which includes rules for identifying information to fill in or \u201cpopulate\u201d the corresponding field. For example, for a date field, the instantiation rule set indicates how to determine (e.g., the date format) in the address. As another example, for an \u201cECG\u201d field, the instantiation rule set indicates how to determine if an information set or a data reference corresponds to an ECG and if so, how to format an ECG type address format for storage or linking purposes","It has been recognized that in a completely information compatible system there are at least two common information threads which are present in the software required to operate each system DB, device and application and that, by providing tools and methods which exploit these common information threads, the processes of defining, maintaining and modifying DB record and address formats and associated rules can be simplified appreciably. By simplifying the DB management tasks, DB management can be accomplished by less skilled administrators, in less time and can take full advantage of all DB capabilities.","The two common information threads are unique field instantiation rule sets (IRSs) and data type definitions. With respect to field IRSs, virtually all records and corresponding addresses can be divided into distinct fields. For instance, an exemplary universal resource locator (URL) address comporting with the well-known hypertext markup language (HTML) of the Internet, for a medication administration record for a specific patient at a specific time is:\n\n","However, the common field IRS thread is that most fields and corresponding IRSs (i.e. required field string gleaning rules and conversion rules) are used repetitively in many different address and record formats. This is particularly true in the case of a specialized facility where most information can generally be grouped by one or a small number of information segments. For example, in the case of the patient ID field (i.e. \u201c987654321\u201d) in the exemplary address above, a large number of records and corresponding addresses at medical facility will include a patient ID field. Therefore, if an IRS is specified once for a patient ID field and is then stored as a \u201cpre-defining\u201d field IRS, each time a patient ID field is required in an address or a record format, the pre-defining field IRS can be used. Similar predefining field IRSs can be provided for date, time, report type, server location, event (e.g. medication\/given, post-op_ecg, etc.) physician identification, and so on.","Thus, the present invention provides a method and apparatus for, in effect, \u201cpre-defining\u201d field IRSs which, therefore, can be used to easily and quickly specify new address and record formats.","In addition to expediting DB management tasks, pre-defining field IRSs force system wide information compatibility and thereby reduce and, in many cases, will even eliminate debugging requirements. This is because, after unique field IRS have been specified once, those unique IRSs are used for specific corresponding fields thereafter and hence every time the corresponding field is employed, the same field character string and rules are employed.","With respect to the data type definitions common thread, a data type definition includes standard data type definition information such as information defining the structure and type of information stored in the specific data type and defining relationships between the specific data type and other data types common to conventional data type definitions. In addition, according to an exemplary embodiment of the present invention, the data type definition also includes an address format, a record format and a unique data reference (DR) where the DR is used to refer to a record of the specific data type.","Typically, each of a system DB and at least one and more often many system devices and applications require at least a subset of data type definition information. Therefore, after being specified once, the data type definitions can simply be provided once to a relevant system DB and corresponding devices and applications. Thus, the present invention also provides a method and apparatus for specifying data type definitions, earmarking certain sections of each data type definition for provision to specific devices and applications and then downloading earmarked sections to the devices and applications.","Thus, one object of the invention is to provide a system including predefined address format fields and corresponding instantiation rule sets which can be used to quickly define address formats for use by an enterprise computing system.","Another object is to provide a system wherein address formats can be specified once for all processing devices (e.g. databases, servers, applications, data collection devices, etc.). In addition to reducing the time and effort required to support a new address format, this feature ensures enterprise wide address formatting compatibility.","These and other objects, advantages and aspects of the invention will become apparent from the following description. In the description, reference is made to the accompanying drawings which form a part hereof, and in which there is shown a preferred embodiment of the invention. Such embodiment does not necessarily represent the full scope of the invention and reference is made therefore, to the claims herein for interpreting the scope of the invention.","Although the present invention is meant to be used in a plurality of different environments, in order to simplify this explanation, the invention will be described in the context of a medical facility named \u201cSt. Mary's, Springfield\u201d. In addition, the invention will be described in the context of a single record and data type definition corresponding thereto. The record is a medication administration record. In this regard, it will be assumed that it is desirable to record each medication administration including data, time, the patient receiving medication, the physician administering medication and the medication type administered.","Referring now to the figures wherein like reference characters represent similar components, systems and sub-systems throughout the several views, and more specifically, referring to , therein is illustrated various components of an exemplary information system  including several databases DB-, DB-, . . . , DB-M, several personal computers PC-, PC-, a workstation  including a DB literate processor, several remote information collection devices (ICDs) ICD-, ICD- and ICD- and a pre-defining field instantiation rule set (IRS) DB .","Each database DB-, DB-, DB-M, includes a DB specification , , , respectively. Referring also to , exemplary DB specification  corresponding to database DB- lists data types (1-N) which are stored in database DB-. In addition, for each data type in database DB-, specification  includes a database definition  having standard database definition information including DB content or format for records of the specification type and information specifying relationships of the specific data type records to other data records and data types. For example, for a data type j in specification , the standard database definition information is identified by numeral .","1. Rule Set Specification","Referring still to , for each data type (1-N), data type definition  also includes a rule set specification (RSS). Although RSSs constitute a portion of a DB specification, referring also to , RSSs ,  and  are illustrated as distinct from corresponding DB specifications , , , respectively, to stress the fact that RSSs , ,  are in addition to standard DB definition information (e.g.  in FIG. ). RSSs  in  include, among other RSSs, RSS  in  which corresponds to data type j. RSS  includes an address rule set (ARS) , a record rule set (RRS)  and a data reference (DR) (list  and data type reference DTA are optional and described below).","A. Address Rule Set (ARS)","ARS  includes a plurality of related data constructs which together define an address format for data type j, define rules for identifying information for forming an address having the address format and define rules for using the identified information to form an address. To this end, referring to , exemplary ARS  specifies an address format including six address fields , , , ,  and .","For each field, ARS  specifies that the field is either \u201cfixed\u201d or \u201cvariable\u201d. Fixed means that the text (i.e. data object) used to instantiate a field is always the same. For example, for St. Mary's of Springfield, it will be assumed that all DBs are identified generally by a universal resource locator (URL) segment \u201chttp:\/\/hww.st_mary.springfield\u201d. In this case, all data types, including type j (see FIG. ), include a first fixed field  wherein the text to instantiate the field comprises: http:\/\/hww.st_mary.springfield\u201d. As another example, each time a medication is given to a patient, an administration record is required. In this case, an exemplary fixed text field specifying the occurrence of medication administration is \u201cmedication\/given\u201d.","Referring still to , variable means that text used to fill or instantiate a field may vary from record address to record address. For example, the character string used to fill a date field will vary daily, the character string used to fill a time field will vary as time lapses and the character string used to fill a patient field will vary depending on which patient a record is associated with. In , fields ,  and  are fixed while fields ,  and  are variable.","In addition to specifying fixed and variable characteristics, ARS  also specifies a field name for each field. For example, for fixed fields ,  and  ARS  specifies \u201cfacility\/server\u201d, \u201cmedication\/given\u201d and \u201creport.html\u201d. For variable field , ARS  specifies name \u201cpatient ID\u201d, for field  ARS  specifies name \u201cDate\u201d and for field  ARS  specifies name \u201cTime\u201d. These field names are not required by a DB, a system device or application but rather are provided to help a system user define data type definitions and to visualize address and record formats. To this end, the field names should generally describe the type of information corresponding to the field. Hence the name \u201cDate\u201d corresponds to the date field and so on.","For each field -, ARS  also provides a field instantiation rule set (IRS). As the characteristics of each IRS are similar, only IRSs  and  corresponding to fields  and , respectively, are illustrated and described in detail. IRS  includes a field format , a variable search rule set (VSRS)  and a conversion rule set (CRS) . Similarly, IRS  includes a field format  and a variable search rule set (VSRS) .","For fixed field , field format  constitutes the specific fixed text to be placed in the field. For example, for field , the field format includes \u201cmedication\/given\u201d. VSRS  includes a rule set which provides rules which indicate how, based on a set of information, to determine that medication has been given. For example, rules to determine if a medication has been given in the present example include a list of every possible medication bar code used at the St. Mary's facility. When one of the listed bar codes is identified in a set of information, medication administration is assumed. Although not illustrated, VSRS  may include other rules for determining if a medication has been administered. For example, where medication is delivered for administration in an electronically locked medication container which can signal when the container is opened (see U.S. patent application Ser. No. 08\/955,475), a rule may assume administration when a container open signal is received as a portion of an information set. As another example, when a bar code is identified, the rule may also require reception of a patient ID # prior to assuming medication administration.","Although the rule sets described herein are relatively simple, other more complex rules are contemplated. For example, rules can be in the form of a sequence of program steps which are written in the JAVA program language, in Visual Basic programming code or in some other common programming language. In addition, rules may include Boolean operations, statistical computations or natural language processing to determine relationships among data items.","Referring still to , field format  constitutes a variable character string specifying an information format required to instantiate field  with a date. In the present example, the variable character string is \u201cDD_MM_YYYY\u201d where DD indicates the day of a month, MM indicates a number corresponding to the month of a year (i.e. \u201c05\u201d is May) and YYYY indicates a four digit year (e.g. 1996). Thus, independent of how a date appears in an information set, the date must be provided in the specified variable character string form \u201cDD_MM_YYYY\u201d according to format .","VSRS  includes a rule set which is used to search an information set for any date specifying information which can be used to instantiate variable field . To this end, VSRS  specifies a separate rule corresponding to each possible format in which a date might appear in an information set (see exemplary rules in VSRS ). Exemplary rules include \u201c##\/##\/####\u201d, \u201c##_##_##\u201d and \u201c####_##_##\u201d where each \u201c#\u201d corresponds to a number in the character string. Many other rules are contemplated including rules which account for spelled out months, other date patterns and so on.","Referring still to , with respect to variable field , while corresponding date specifying information may appear in a record or information set in any of several different formats, as indicated by format field , ARS  requires a specific format for instantiating variable field . Thus, conversion rules for converting date information to specific format  are required. To this end, CRS  includes conversion rules corresponding to field . In , an exemplary rule correlates \u201c##\/##\/####\u201d with \u201cDD\/MM\/YYYY\u201d meaning the first two \u201c#'s\u201d are assumed to correspond to \u201cDD\u201d, the third and fourth \u201c#'s\u201d are assumed to correspond to \u201cMM\u201d and the last four \u201c#'s\u201d are assumed to correspond to \u201cYYYY\u201d. Thus, if a string having the form \u201c##\/##\/####\u201d is located, format \u201cDD\/MM\/YYYY\u201d is assigned to corresponding numbers. Then, D's, M's and Y's in format \u201cDD\/MM\/YYYY\u201d can be mapped to D's, M's and Y's in field format  (i.e. into \u201cDD_MM_YYYY\u201d) to make a data conversion and provide information to instantiate field  with a date having format . Similar IRSs (e.g. , , , ) are provided for each of fields  through .","Although not illustrated here, in the case of some field types, IRS rules may be relatively simple. For example, with respect to date field  in , instead of searching an information set for date information, the corresponding IRS may simply cause a device or application to arrest a processor clock and identify a current date for instantiation purposes. Similarly, with respect to time field , the processor may simply access a clock and identify time for instantiation. Hereafter, the term \u201csearching\u201d will be used generically to mean actual examination to find information within an information set and also to mean accessing information in a known location.","B. Data Reference (DR)","Referring again to , DR  is a unique phrase or word which may be used in a document to refer to a record of data type j. In the present example, where data type j corresponds to a medication given to a patient, DR  may be as simple as \u201cmedication given\u201d. As another example, where a data type corresponds specifically to an ECG report, a corresponding DR may be \u201cECG report\u201d, the purpose of the DR is explained below.","C. Record Rule Set (RRS)","RRS  includes a plurality of related data constructs which together define a record format for data type j, define rules for identifying information for forming a record having the record format and define rules for using identified information to form a corresponding record. To this end, referring to , exemplary RRS  specifies a record format including six record fields , , , ,  and . For each field, RRS  specifies that the field is either \u201cfixed\u201d or \u201cvariable\u201d. As in the case of ARS  above, fixed means that a text character string used to instantiate the field is always the same while variable means that a text character string or information to be provided within a field typically varies from record to record.","Field  is a fixed field while all other fields in RRS  are variable. In the present example it will be assumed that field  corresponds to a \u201cmedication\/given\u201d field indicating the general nature of the record, field  corresponds to a physician ID, field  corresponds to a patient ID, field  corresponds to date of medication administration, field  corresponds to a time of medication administration and field  corresponds to an administration record, including, among other things, the type of medication administered, the quantity of medication administered, the prescribing physician, the dispensing pharmacist, and so on. The type (i.e. physician ID, patient ID, etc.) of information or name for each field  through  is identified.","For each field  through , RRS  also provides a field instantiation rule set (IRS). As the characteristics of each IRS are similar, only IRSs  and  corresponding to fields  and , respectively, are illustrated and described in detail. IRS  includes a field format  and a variable search rule set . Similarly, IRS  includes a field format , a VSRS  and a converting rule set .","For fixed field , field format  constitutes the specific field text to be placed in the field. For example, for field , the field format includes \u201cmedication\/given\u201d. VSRS  includes a rule set which provides rules which indicate how, based on a set of information, to determine that medication has been given. In the present example, the rules to determine if a medication has been given for the record rule set are identical to the \u201cVSRS\u201d corresponding to field  in FIG. .","Referring to , the IRS  corresponding to variable date field  in RRS  is identical to the IRS  corresponding to ARS  and therefore is not explained here in detail.","Referring still to , IRSs , ,  and  are provided for each of fields , ,  and , respectively, each fixed field IRS including a field format and a VSRS and each variable field IRS including a field format, a VSRS and a CRS.","As indicated above, it should be appreciated that many of the fields in an ARS and a corresponding RRS and the instantiation rule sets associated therewith will be identical and therefore, in a preferred embodiment, where IRSs are identical among ARS and RRS fields, the rules are only defined once. In , similar or identical rules are illustrated twice in the interest of facilitating clear explanation of the invention.","Referring again to , an exemplary DB literate processor  is described in the '349 application which is referenced above and which is incorporated herein by reference. The processor in the '349 application is capable of performing one or both of two separate database functions including a storing function and a linking function.","With respect to storing, the database literate processor can receive a record or information set, identify a specific data type corresponding to the record or information set, identify a RSS corresponding to the specific data type wherein the RSS includes an ARS, glean information from the information set to form an address corresponding to an address format for the information set and store the information set or record at the table address for subsequent retrieval or reference.","With respect to linking, the processor searches a record or information set for a DR (e.g.  in ) and, when a DR is identified which references another record stored on a database, correlates the DR with an ARS (e.g.  in FIG. ), identifies an address format corresponding to the ARS, gleans information from the record which is required to form an address according to the address format, forms an address from the gleaned information wherein the address corresponds to the record associated with the DR and thereafter forms a hyperlink to the referenced record which, when the DR is selected (e.g. via mouse controlled cursor, not illustrated), provides the referenced record to the system user that selected the DR.","The referenced record may be provided as a complete display screen or in a screen window when the DR is selected.","Moreover, it is contemplated that when the DR is selected the referenced record may simply be expanded in the referring record or information set. For example, assume a \u201cheart image\u201d DR corresponds to an image of a heart which is stored on a system database and that a physician types the phrase \u201cheart image\u201d while entering a report about a patient visit, it is contemplated that in one embodiment of the invention, when the phrase \u201cheart image\u201d is entered, the database literate processor forms the address corresponding to the image and, instead of creating a hyperlink thereto, retrieves the image and \u201cblends\u201d (i.e. reformats the text to accommodate the image) the image into the text facilitating easy reference.","In the present example, it is assumed that processor  in  is only capable of the linking function. It is also assumed that PC- is only capable of the storing function while PC- is capable of both the linking and storing functions.","The '169 application referenced above is incorporated here in by reference and describes an exemplary remote ICD which can be provided with an address format for a specific record to be received and can then receive information which constitutes a record, use some of the received information to provide an address having the address format for the received record and then store the record and address for subsequent downloading to a DB. It is contemplated that ICD's used with the present invention, like the ICDs described in the '169 application, could have the same storing and linking capabilities of the DB literate processors described in the '349 application. To this end, it is assumed hereinafter that ICD- and ICD- are each capable of the storing database function described above while ICD- is capable of both the storing and linking database functions described above.","Thus, each of processor , PC-, PC-, ICD-, ICD- and ICD- require some subset of RSS information to perform their intended functions (i.e. linking and storing). ICD's  and  and PC- each require an ARS and corresponding RRS, each of ICD- and PC- require an ARS, a DR and a corresponding RRS and processor  requires an ARS and a corresponding DR.","D. Relevant Devices and Applications (D\/A) List","Referring again to , in addition to the ARS , RRS  and DR , RSS  may also, optionally, include a relevant devices and applications list  (D\/A list) which indicates the RSS information sub-sets to be provided to each system device and application. Referring also to , an exemplary D\/A list  corresponding to information system  includes a table having a device\/application column  and an \u201cIRS information provided\u201d column . Column  lists every device and application in system  which may receive any of the RSS information for the specific data type j. In the present example, list  includes ICD-, ICD-, ICD-, PC-, PC- and DB literate processor .","Column  lists each type of RSS information which is provided to each specific device or application in column . Thus, with respect to data type j, column  specifies that the ARS and RRS corresponding to data type j are provided to ICD-. Similar information is provided to ICD-. With respect to ICD-, information provided includes the DR, in addition to the ARS and RRS corresponding to data type j. Column  also specifies that each of the ARS and RRS are provided to PC- and that, in addition to the ARS and RRS, the DR is provided to PC-. With respect to DB literate processor , column  specifies that the ARS and DR corresponding to data type j are provided to processor .","In the alternative, instead of specifying specific RSS information to be provided to each information system device and application, all of the RSS information may be provided to every system device and application. While providing all of the RSS information to every device and application results in a simpler system, such a system would waste device and application memory and therefore, at least in cases where memory is limited, might be prohibitive.","E. Data Type Reference (DTR)","Referring yet again to , RSS  may further, optionally, include a data type reference (DTR) . DTR  serves a similar function as DR  but, instead of being used for the DB linking function, is used during the DB storing function. To this end, DTR is a reference which will always be included in an information set when a corresponding data type should be employed for storing. For example, each time a specific imaging system is used, the imaging system may provide its identification number to the ICD which is then required to log imaging system use. In this case, the imaging system ID # may be provided as a DTR corresponding to a suitably formatted RSS. Then, when an ICD identifies the imaging system ID # within an information set, the ICD can automatically identify the RSS corresponding to the DTR and generate an address and record to memorialize the imaging system use.","In the absence of the DTR, the ICD would have to search the information set for information required in each field within an ARS and each field within a corresponding RRS to determine if a record should be generated and stored. The DTR simply short circuits then process of identifying suitable data types for storing.","Instead of being a single fixed string, the DTR may be a variable character, text or other data type string. For example, if an ICD is required to memorialize each patient encounter, the DTR may include a variable character string such as \u201c#########\u201d which, when located, indicates a patient encounter. When the patient ID string is encountered, the ICD simply employs the corresponding RSS components to memorialize the encounter.","With respect to the medication given data type, referring to , the DTR  may include a variable rule set which mirrors VSRS  so that any time a medication bar code is identified, the ICD can quickly identify the correct data type for memorializing administration.","Referring again to , with database specifications ,  and  having all of the features described above, RSS information (e.g. ) can be provided to system  devices and applications to facilitate complete information compatibility.","2. Enterprise Wide IRSs and ARS Specification","Referring again to , as virtually all system devices and applications require some sub-set of RSS information, it has been recognized that, instead of specifying RSS information separately for each DB, device and application in system , the RSS information can be specified a single time so that the RSS has a unique format and characteristics and thereafter can be used with all DBs, devices and applications which constitute the system . In addition, it has been recognized that, as many address and record fields require similar information types, a pre-defining set of unique field IRSs can be developed which can be used to streamline the process of defining data type definitions.","For instance, in the present example which corresponds to a medical facility, a large percentage of total facility records will require a date corresponding to each specific field. Referring also to , and specifically to variable date field , each time a date field is required in an ARS (or an RRS), a user is required to specify a field format , a VSRS  and a CRS . According to the present invention, a pre-defining field IRS corresponding to a variable date field includes a pre-defining field format and corresponding VSRS and CRS like format , VSRS  and CRS , respectively, which are used every time a variable date field is required in an ARS.","Similarly, lRSs are provided for all other variable and fixed fields routinely used in system  data type definitions. Thus, for example, referring to , IRS  is identical to IRS . In this case, the pre-defining field rule set only includes a single instance of an IRS which, when selected and linked to a specific field, provides all of the rules required to instantiate the specific field.","Referring again to , exemplary pre-defining field IRSs are illustrated as being stored in DB  which is linked to databases DB-, DB- and DB- for use in defining DB specifications ,  and .","To facilitate use of pre-defining field IRS capabilities an inventive editor having two related editing functions is required. A first or pre-defining field editor (hereinafter \u201cfield editor\u201d) function is required to define IRSs for each field potentially useable by system DBs for addressing and record format purposes. Second, a data type editor (hereinafter \u201cdata type editor\u201d) function is required to define data type information including ARSs, RRSs, DRs and D\/A lists.","Prior to describing the data type editor and field editor functions, a general understanding of system  architecture is helpful. To this end, referring now to , system  generally includes a communication network  which links together system databases DB-, DB- and DB-M, DB literate processor , DB  and a database administration work station . Work station  includes a screen , a work station processor  and one or more interface devices . As illustrated, exemplary interface devices include a keyboard  and a mouse  which controls a cursor (not illustrated) on screen . In addition, processor  is linked to a transceiver  which can receive information from, and transmit information to, remote ICD-, ICD- and ICD- via RF or some other suitable means.","Referring still to , each of the field editor and data type editor comprise software programs which are loaded on to work station . Preferably, each of the field and format editors include similar types of tools, and, specifically, exemplary tools include instructions, selection icons and information boxes which are presented on display  screens. A work station user uses mouse  to control a cursor to select and deselect screen icons and to place the cursor within information boxes to provide information in the boxes via keyboard . Also, preferably, both the field and data type editors have similar appearances so that changing from one editor to the other is essentially seamless from the perspective of a system user.","Referring now to , an exemplary display screen  according to the present invention is illustrated. Generally, each of the screens provided on display  includes two separate sections identified as a directions section  and a definitions section . Directions corresponding to a displayed screen and for guiding a user through the process of using the field and data type editors are provided in section . Interactive tools such as information boxes and selection icons for specifying field and format information are provided in section . Each of sections  and  includes a conventional scrolling bar along the right edge thereof for scrolling within the separate section. For example, the bar corresponding to section  is identified by numeral  while the bar corresponding to section  is identified by numeral . When instructions or defining tools which are required exceed the spaces within sections  or , associated scrolling bars , , respectively, can be used to scroll within each one of the separate sections ,  to view portions of the directions and tools, respectively.","In addition to sections  and , each screen according to the preferred embodiment of the invention includes an \u201cOK\u201d icon  and a \u201cBACK\u201d . By selecting the OK icon , a work station user indicates to the editor that the information specified within definitions section  is complete. By selecting the BACK icon , the work station user is indicating that the user would like to step back to the previously displayed editor screen to either check a selection or modify a selection. Moreover, certain screens also include other useful icons. For example, screen  includes a \u201cFINISH\u201d icon which can be selected when a user is done using the editors and to exit the program.","Referring still to , the first screen  which is provided to a work station user when a user wishes to use the inventive editors is illustrated. In section , screen  directs the user to select one of the field or data type editors and provides basic instructions which indicate the differences between each of the field and data type editors. To this end, the exemplary instructions indicate that the field editor is used to define fields and instantiation rule sets (IRSs) for fields and the data type editor is used to define address rule sets and record rule sets by selecting already defined and pre-defining field IRSs.","In section , screen  provides a \u201cFIELD EDITOR\u201d icon  and a \u201cDATA TYPE EDITOR\u201d icon . When one of icons  or  is selected, the appearance of the selected icon changes. In this explanation, it will be assumed that when an icon is selected the icon appearance changes color to indicate selection. After one of icons  or  is selected, OK icon  is selected to proceed to the next editor screen.","Although each of the field and data type editors are accessible via screen  and the editors are meant to be used together, each of the field and format editors will be described in detail below separately. Most of the screen images which follow reflect some level of user selection or data entry corresponding to one or another specific field or format which is being defined in the example. Nevertheless, it should be understood that some of the images are subsequently used to explain additional field and format defining steps and that, during subsequent defining, while image features would be similar to the features illustrated, some of the displayed information would change to accommodate the specific defining steps. For example, in the process of defining a pre-defining field IRS, a user specifies a field name such as \u201cfacility\/server\u201d which thereafter is used in subsequent images to orient the system user. To this end, some of the images include the phrase \u201cfacility\/server\u201d. However, subsequently, when defining another field IRS corresponding to, for instance, a field named \u201cmedication given\u201d, the phrase \u201cmedication given\u201d would replace the phrase \u201cfacility\/server\u201d on the illustrated screens. In most cases, screen features which change during system operation to reflect current instantiation are provided in quotation marks.","B. Field Editor","Referring again to , ARS  includes six fields , , , ,  and . Prior to defining ARS , according to the present invention, each field - and a corresponding IRS must be defined using the field editor. Generally the processes of defining each field - and corresponding IRSs are similar and therefore the field defining process is only described below in the context of a sub-set of fields -. However, there are some differences in the field defining process which are made clear by the following examples. Below, the field defining or editing process is described in the context of fields ,  and .","Referring to , an exemplary address  corresponding to ARS  in  is illustrated. Similarly numbered fields in  correspond to each other. As indicated in , fields ,  and  are fixed while fields ,  and  are variable. Field  corresponds to a facility\/server and includes a character string which specifies a specific facility\/server. To this end standard URL addressing protocol is used to form the string \u201chttp:\/\/hww.st_mary.springfield\u201d. Every record stored on system  will include this first fixed field character string.","Second field  corresponds to administration of a medication and must include fixed character string \u201cmedication\/given\u201d. Similarly, field  corresponds to a report type and includes fixed string \u201creport.html\u201d indicating that the corresponding report or record is in html format. Variable fields ,  and  are described in more detail below.","Referring now to ,  and , after FIELD EDITOR icon  and OK icon  have been selected, work station  provides screen  on display . In section , screen  instructs the user to specify a name for the field which is currently being defined. In section , screen  provides an information box  for entering the name of the field being defined. Name choice is left to the system user but should typically be a name which reflects the type of field corresponding thereto so that subsequently the user and other system users will easily be able to recognize the nature of the field. For example, a field which will include a date may be name \u201cDate\u201d, a field which will include a patent I.D. may be named \u201cPatent ID\u201d, a field which will include a text report may be named \u201ctext report\u201d and so on. Referring also to FIG.  and specifically to field , the name provided for field  is \u201cfacility\/server\u201d.","In addition, name choice is unique in that the system will not allow a field name to be used more than once to allow more than one field to be referenced by the same name. Thus, where the name \u201cDate\u201d is provided for a field, the field editor will not allow subsequent use of that name. If a duplicative name is provided the editor will request entry of a new name.","Referring to ,  and , after a user provides a name in box  and selects OK icon , work station  provides screen  on display . In section , screen  instructs a user to specify if the facility\/server field is fixed or variable. As described above, fixed means that the character string which will be used to instantiate the field being defined will constitute a fixed character string while variable means that the character string which will be used to instantiate the field being defined may vary from address to address or record to record.","In section , screen  provides a \u201cFIXED\u201d icon  and a \u201cVARIABLE\u201d icon . To indicate that the facility\/server field is fixed, the user selects icon  and to indicate that the field is variable, the user selects icon . Referring to ,  and , in the present example user selects FIXED icon  and OK icon  and work station  provides screen  on display . In section , screen  instructs the user to enter a fixed character string in the information box below for the facility\/server field. In section , screen  provides an information box . The user may place a cursor within box  and type in the fixed character string for the facility\/server field. In the present example, the fixed field string \u201chttp:\/\/hww.st_mary.springfield\u201d is provided and corresponds to a field format (e.g.  in ) for first field .","At this point it should be noted that, while the present invention minimizes the amount of programming training required, some minimal amount of DB addressing training and knowledge about specific facility servers is still necessary. For example, during field definition using the field editor, a user must know how to address a facility server using a DB supported URL segment like character string \u201chttp:\/\/hww.st_mary.springfield\u201d. In the alternative, where the DBs can only be accessed via specific supported designated character strings, the field editor may be programmed to automatically provide supported DB designating character strings from the systems DBs and provide DB designating IRSs based thereon. In the present example, as it is assumed system 10 DBs are all referenced by the same designating string (i.e. http:\/\/hww.st_mary.springfield), the field editor would automatically provide the designating string as a field format for the first field in each ARS. While this automating feature is contemplated, it will be assumed in the present example that such a feature is not provided.","Referring to ,  and , after the fixed character string has been provided in box  and icon  has been selected, work station  provides screen  on display . In section , screen  instructs the user to provide a variable search rule set for the facility\/server field. In addition, the directions indicate to the user that if an \u201cALL\u201d icon is selected, all formats which include the facility\/server field will include the fixed character string corresponding to the facility server. In other words, when an ALL icon is selected, the VSRS (e.g.  in ) corresponding to first field  specifies that all formats including the corresponding field, independent of record information, meet the VSRS criteria. Thus, if the ALL icon is selected, all formats which include the facility\/server field will include the character string \u201chttp:\/\/hww.st_mary.springfield\u201d.","In section , screen  provides an \u201cALL\u201d icon , an \u201cIMPORT RULES\u201d icon  and an information box . If icon  is selected, all of the information corresponding to the facility\/server field has been defined. In the present example, all records stored on system databases are presumed to be related to the system facility and server and therefore, with respect to the facility\/server field, a user selects ALL icon  and then icon . Icon  is explained in more detail below.","Referring to ,  and , after icons  and  have been selected on screen , work station  again provides screen  on display . Again, the user has the option to select FIELD EDITOR icon  or DATA TYPE editor icon .","At this point it is assumed that the user wishes to define additional fields and therefore selects icon  and OK icon . Referring to , when icon  is selected, control passes to screen  where the user provides another unique field name in information box . Referring also to , the next field and associated IRS to be defined are field  where, when medication has been administered, field  must include fixed character string \u201cmedication\/given\u201d. An exemplary name which is selected by the user for the new field will be \u201cmedication given\u201d (not illustrated) which is provided in box . When icon  is selected, referring to , control again passes to screen  where, in section , screen  instructs the user to specify whether or not the medication given field is fixed or variable. Once again, because this field is fixed, the user selects icons  and  and control passes to screen  as illustrated in FIG. . In section , screen  instructs the user to enter a fixed character string in the box below for the medication given field. To this end, the user places a mouse controlled cursor within box  and types in the desired fixed character string \u201cmedication\/given\u201d (not illustrated). Referring again to , the text provided in box  is the field format  for the medication given field.","Referring to , after OK icon  is selected on screen , control passes to screen  where, in section , the user is instructed to provide a variable search rule set for the medication given field. In this case, the user may do one of three things. First, the user may again select ALL icon  indicating that all records including the field being defined will include the fixed character string medication\/given.","Second, the user may place a mouse controlled cursor within information box  and, using some special type of syntax, specify rules for determining whether or not a medication has been given to a patient. In this regard, although not illustrated, the special syntax would be relatively simple to learn and would be universal with respect to system . Preferably syntax rules could be specified in section .","Third, the user may select IMPORT RULES icon . When icon  is selected, it is contemplated that the user could use work station  to access already specified information or rules stored on one or more system databases for determining whether or not a medication has been given. For example, although not illustrated, a pharmacy database may be linked to system  which includes a list of medication bar codes corresponding to every type of medication which may be given within a medical facility. In this case, by accessing the pharmacy's database, all of the medication bar codes or indicators corresponding to each bar code may be imported into the variable search rule set which is currently being defined. Then, if any of the bar codes or indicators associated therewith are identified within a searched information set, it would be assumed that the medication indicated thereby has been administered.","In the present example, it is assumed that such a pharmacy database exists and that the user selects the import rules icon . Thereafter, although not illustrated, the user selects the medication bar codes from the pharmacy database as the VSRS corresponding to the \u201cmedication\/given\u201d field format  (see FIG. ).","It should be noted that the tools and methods for specifying rule sets, although important, are not at the heart of the present invention. Instead the invention is meant to cover the general concept of specifying DB structures, address and record formats and corresponding IRSs once for use by an entire information system and reusing the specified information time and again in a repetitive fashion to streamline DB definition and maintenance.","Referring to , after the variable search rule set has been provided for field , icon  is again selected and control passes again to screen . It is assumed that the system user next wishes to define variable date field  and corresponding IRS . To this end, in , the user selects FORMAT EDITOR icon  and OK icon  and control again passes to screen  as illustrated in FIG. . The user provides a field name \u201cdate\u201d in box  and again selects icon  so that control passes to screen  in FIG. .","Using screen , the user indicates that the date field is variable. Referring also to , in section  the user is instructed to enter a variable field character string for the date field. The instruction is essentially as it appears in section  except that the word \u201cvariable\u201d is substituted for \u201cfixed\u201d and the name \u201cdate\u201d is substituted for \u201cfacility\/server\u201d. In addition, although not illustrated, the directions may also indicate a system syntax for specifying a variable character string. In box , the user provides a variable character string field format corresponding to the date. In this case, referring again to , it is assumed the user provides the string \u201cDD_MM_YYYY\u201d.","After OK icon  is selected on screen , referring also to , control passes to screen . In section , screen  instructs the user to provide a VSRS for the date field. Typically, information corresponding to a variable field may take any of several different character string forms and therefore, in section , screen  provides a rule list to be defined by the system user. The rule list includes a rule number column  and a variable character string column . Initially, column  is completely blank. The user places a mouse controlled cursor within column  and begins specifying variable character strings for each of the rule numbers in column .","It is contemplated that variable numbers would be represented by a \u201c#\u201d (i.e. # may be any of 0-9), specific numbers would be identified by the specific numbers (e.g. 9 is 9), variable letters would be defined by \u201c\u2605\u201d (i.e., \u2605 may be any of a-z) and specific letters would be defined by the specific letters (e.g. x is x). Directions to this effect may be provided in Section .  reflects specification of a single variable character string . However, a large number of variable character strings are contemplated.","After all of the variable character strings have been specified in column , the user selects OK icon  indicating that the VSRS has been completely defined. Referring to , at this point, each of the field format  and VSRS  corresponding to variable date field  have been specified.","Next, the CRS  corresponding to date field  has to be specified. To this end, when icon  is selected in , control passes to screen  in FIG. . In section , screen  instructs the user to provide a CRS for the date field. In section , screen  provides a CRS table list to be defined by the system user. The table includes a variable character string column  and a converted string column . Referring also , column  in  is identical to column  in FIG.  and includes the variable character string list specified by the system user. Column  is initially completely blank. The user may place a mouse controlled cursor within column  and begin specifying converted strings for each of the variable character strings in column . To this end, referring also to , in this example, each converted string in column  must include characters which correspond to field format , although the characters in each converted string may be in a different order than the characters in field format . For example, an exemplary variable character string  is \u201c####\/##\/##\u201d. As field format  is \u201cDD_MM_YYYY\u201d, each of the Ds, Ms and Ys must be associated with one of the #s in variable character string . The corresponded converted string  has the form \u201cYYYY\/DD\/MM\u201d. Thus, information in the variable character string  is linked to specific information in field format  via converted string . Obviously additional rules would be specified in the case of a date field, the illustrated rules being minimal in an effort to simplify the present explanation.","In operation, referring to , and specifically to IRS , if any one of the character strings in VSRS  is identified, a two step conversion process occurs. First, the string is converted via a corresponding CRS  to a D, M and Y format. Second, the D, M and Y information in the CRS is converted to the D, M and Y information in the field format.","After all of the CRS rules have been defined, the user selects OK icon  on screen  and control again passes to screen  in FIG. . This process of stepping through field editor screens is repeated for every field in ARS . Similarly, referring also to , this process is repeated for every field in RRS . Where fields in RRS  are identical to fields in ARS , the fields and corresponding IRSs are only defined a single time. Furthermore, many other fields and corresponding IRSs are defined using the field editor screens as described above.","Referring again to , all of the defined fields and corresponding IRSs are stored in DB  for access by work station  to define ARSs and RRSs for use by system  using the data type editor described next.","Once again, it should be recognized that, while the rules sets described herein are relatively simple, other more complex rules are contemplated. To this end, the rules can be in the form of a sequence of program sets which are written in the JAVA program language, in Visual Basic programming code or in some other common programming language. In addition, the rules may include Boolean operations, statistical computations or natural language processing to determine relationships among data items.","C. Data Type Editor","Referring to , ,  and , the data type editor will be described in the context of a process for defining ARS , RRS , DR , a D\/A list  for data type j and a DTR  for data type j.","Referring also to , after all of the fields which will be required to construct ARSs and RRSs have been defined and stored in DB , the user selects DATA TYPE editor icon  and OK icon  to access the data type editor function. To this end, when icon  is selected, referring also to , control passes to screen .","In section , screen  instructs the user that address formats, record formats, data references, applicable devices\/applications and DTRs should be specified together for a specific data type. In addition, the directions request that, initially, the user provide a unique data reference (DR) for the data typed to be defined. In section , screen  provides an information box  in which the user specifies a DR. In the present example, the provided DR is \u201cmedication given.\u201d As indicated above, the DR is user-chosen and should be selected such that the DR is a phrase or a word which the user or some other system user would likely use when referring to a specific data type.","Referring to , after the user provides a DR and selects icon  in , control passes to screen . In section , screen  instructs the user to specify the number of address format fields which the user would like to have in an address corresponding to the medication given data type. In section , screen  provides an information box . In the present example, referring also to , because ARS  includes six fields, the user enters the number 6 in box  and then selects icon . When icon  is selected, referring also to , control passes to screen .","In section , screen  instructs the user to, with respect to the first field in the medication given data type, select a field type from the field type list in section . In addition, section  instructs the user that, if a desired or required field type does not appear within the list in section , the user should select a FIELD EDITOR icon  which is provided in the lower right-hand corner of screen . Referring also to , when FIELD EDITOR icon  is selected, control passes to screen  and the user steps through field-specifying screens to define a new field and corresponding rules.","Referring still to , section  includes a field type list table having a field column  and a type column . All of the fields which were specified earlier using the field editor and which are stored on DB  are provided in list . Exemplary-listed fields include \u201cfacility\/server,\u201d \u201cmedication\/given\u201d and \u201cdate.\u201d The general nature of each field in column  is provided in column . To this end, column  indicates whether or not a corresponding field is fixed or variable. Assuming that a required or desired field type is listed in section , the user uses a mouse-controlled cursor to select the field and then selects icon .","In the case of the first field in any ARS address format, the first field will typically be reserved for a server designating fixed character string. Therefore, in the case of the first field, when screen  is provided, it is contemplated that the data type editor may only provide a short field type list comprising system supported server(s) designating fixed character strings. For example, where the system only supports two server designating strings, column  only provides the two strings for selection to instantiate the first field.","Similarly, where the system supports only one server designating string, the data type editor may automatically select the supported string for first field instantiation in each address format. For instance, in the present case it is assumed that the only system supported server designating character string is \u201chttp:\/\/hww.st_mary.springfield\u201d and therefore, the data type editor may be programmed to provide that string in the first field for each address format. In this case, the first time screen  is provided, the user is instructed that the first field for the ARS has already been designated by default and that the user should next designate field type for the second ARS field (i.e. field  in FIG. ).","Referring still to , after a field type has been selected or provided for the first field, control passes again to screen  which instructs the user to select a field type for the second field in the medication given data type address format. The user again uses a mouse-controlled cursor to select one of the field types in section  or, if a desired or required field type does not appear in section , selects FIELD EDITOR icon  to access the field editor for field defining purposes. This process is repeated for each of the six address format fields in ARS . After a field type has been selected for the sixth field and icon  is selected in , control passes to screen  in FIG. .","In section , screen  indicates that all of the ARS fields for the medication given data type have been specified and instructs the user to specify the number of record format fields for the medication given data type. To this end, in section , screen  provides an information box . The user specifies the number of record format fields in box  and then selects icon . Referring once again to , because the RRS  includes six fields, the user specifies the number  in box .","Referring to , after the number of fields have been specified in box , the user selects a specific field type for each of the six record format fields, one field at a time. Again, if a required or desired field does not exist, the user may select icon  to access the field editor and define the required or desired field.","Referring to , after field types have been selected for all six record format fields, when icon  is selected on screen , control passes to screen . In section , screen  informs the user that all the ARS and RRS fields for the medication given data type have been specified and instructs the user to specify system devices and applications which are to receive the ARSs and RRSs and DRs corresponding to the medication given data type. In section , screen  provides a device specifying table  which includes a device\/application column , a device capabilities column  and ARS, RRS, and DR selection columns ,  and .","Referring also to , every device and every application included in system  which may require any of the ARS, RRS or DR information is listed in column . To this end, exemplary listed devices and applications include ICD-, ICD- and DB literate processor  (others would be included but are not illustrated). As indicated above, in the present example, ICD- is capable of the single database function of storing received information while ICD- is capable of both storing received information and forming links between data references in a record and other records corresponding to the data references. Similarly, processor  is only capable of forming links between data references in one record and other records corresponding to the data references and, in the present example, cannot generate addresses and records for storing purposes.","To indicate device and application capabilities, column  includes a capabilities indicator corresponding to each device in column . A key at the top column  specifies that a \u201c1\u201d indicator indicates that a corresponding device or application is only capable of storing received information, a \u201c2\u201d indicator indicates that a corresponding device is only capable of linking data references to corresponding references and a \u201c3\u201d indicator indicates that a corresponding device or application is capable of both storing and linking. As illustrated, indicators in column  indicate that ICD- is only capable of storing, ICD- is capable of storing and linking and processor  is capable of only linking.","Selection columns ,  and  are initially blank in a preferred example of the invention. Depending upon the capabilities of devices and applications, a user will only be able to select a specific subset of the ARS, RRS and DR for provision to each one of the devices and applications. For example, where a device or application is only capable of storing information and cannot link, the device or application is only capable of storing information and cannot link, the device or application would only require an ARS and RRS and would not require a DR. Therefore, with respect to ICD-, boxes in columns  and  are highlighted, indicating potential selection while the box in column  is not highlighted, indicating unselectability.","Similarly, devices or applications which can both store and link require each of the ARS, RRS and DR. Therefore, each of the boxes in columns ,  and  corresponding to ICD- are highlighted, indicating possible selection. With respect to processor , because processor  can only link, only an ARS and a DR are required and therefore boxes, columns  and  corresponding to processor  are highlighted, indicating possible selection while the box in column  corresponding to processor  is not highlighted.","Using a mouse-controlled cursor, the user can click on any of the highlighted boxes in columns ,  and\/or  to indicate that the corresponding information should be provided to associated devices and applications. When a box is selected, a flag is placed therein. The flag can be removed by again selecting the box.","The editor may include rules which insure that, when one type of information is provided to a device or application, other required types of information for that device or application to work properly are also provided. For example, referring still to , if a flag is placed in the box corresponding to column  and ICD-, a flag may also automatically be placed in the box corresponding to column  and ICD-. Other similar rules are contemplated.","Although some devices and applications are capable of both storing and linking (e.g., ICD-), where a user selects only a subset of ARS, RRS and DR for provision to the device or application, it is contemplated that when the device or application receives the subset of information, the device or application will only perform database functions for which it has sufficient IRS information. For example, in the case of ICD- which can both store and link, if a user selects only the ARS and RRS information to be provided to ICD-, and does not select a corresponding DR for provision to ICD-, during operation, ICD- will not only perform storing database functions and will not perform linking database functions. Similarly, if, upon selection, a user only provides an ARS and a corresponding DR to ICD- and fails to provide the corresponding RRS, ICD- will only perform linking functions and will not perform record formatting functions and address formatting functions. In this case, it is contemplated that some other system device, upon receiving the corresponding record with links therein, would reorder the information into a proper record format and provide an address which is consistent with a database address format for storage purposes.","After defining information to be provided to each system, device and application, when the user selects OK icon , control passes to screen  illustrated in FIG. . In section , screen  instructs the user to provide a DTR. In section  screen  provides an information box  for providing the DTR for data type j. To simplify this explanation it is assumed that the administrator will have a code book which includes reference character strings which can be used as DTRs indicating specific events\/procedures, etc. Nevertheless, as indicated above DTR  may take more complex forms such as a variable character string (e.g. in the case of a patient ID) or a variable search rule set (e.g. in the case of a medication bar code). In addition, the DTR  may include Boolean logic, natural word recognition technology and so on. In any of these cases the data type editor would have to be useable to specify the more complex DTR rules and, in this regard, would have some features similar to the field editor features described above.","Referring again to , the user provides a suitable DTR in box  and then selects icon . Referring to  control passes to screen . In section , screen  indicates that all of the information for the medication given data type has been specified and that a summary is provided below in section . In addition, section  instructs the user to select an icon in section  for an expanded summary.","In section , screen  provides a DR icon , an ARS icon , a RRS icon  a DEVICES\/APPLICATIONS icon  and a DTR icon  corresponding to the medication given data type. Referring also to , icons , ,  and  correspond to each of the five components , , ,  and , respectively, of RSS . Although not illustrated, it is contemplated that by clicking on any of icons , , ,  or , an expanded summary window corresponding to the specific type of information related to the icon is provided. For example, by selecting DR icon , the expanded window clearly indicates the DR corresponding to the medication given data type. Similarly, by selecting ARS icon , referring to , an image similarly to the ARS image presented in  would be provided on display  which graphically depicts the fields in ARS , and, possibly, all of the information in field IRSs. Referring to , if icon  is selected, it is contemplated that an image like the image illustrated in  would be provided, which graphically depicts the fields in RRS , indicates the type of field, and, possibly, provides corresponding IRSs for each field. If icon  is selected, referring also to , it is contemplated that an image similar to the image illustrated in , would be provided, which indicates system devices and applications and IRS information to be provided to each one of the devices and applications. If icon  is selected, then window indicates the DTR (or DTR VSRS).","Referring to , after reviewing the medication given data type summaries, the user selects OK icon  on screen  and control passes again to screen . Using screen , the user can again select DATA TYPE editor icon  to define another data type definition as illustrated in FIG. . After all data type definitions have been defined, the user can select FINISH icon  in the lower right hand corner of window  to indicate that all data type definitions have been specified for system .","Referring again to , after data type definitions have been specified using work station , each data type definition is stored on one of databases DB-, DB- or DB-. In addition, subsets of each data type definition are provided to each system device and application to facilitate storing and linking database functions. For example, with respect to the medication given data type in the present example, referring to , the ARS and DR are provided to database literate processor . Similarly, the ARS and RRS for the medication given data type are provided to ICD- and also to ICD- via transceiver  and are provided to PC- via network . The ARS, RRS and DR are provided to ICD- via transceiver  and are provided to PC  via network .","After receiving required data type definition information, each of the system devices and applications perform storing and linking functions as described above.","D. Topic Specific Record Indication","The field and data type editors described above provide data type definitions which can be used to quickly and easily facilitate system-wide information compatibility providing a comprehensive addressing and recording scheme for both storing and linking DB functions. Nevertheless, despite their advantages, the field and data type editors as described above still have several shortcomings.","First, despite a database administrator's attempts to define all possible data types for storage and linking using an information system, inevitably, there will be some desirable data types which are not recognized during the administrator's defining efforts and therefore are not supported by the administrator's defining efforts described above. For example, a physician may be in the process of analyzing a 3D MRI image of a patient's heart on a workstation screen. The physician may identify a particularly advantageous arterial occlusion view which the physician would like to reference in a subsequently drafted MRI report. It will be assumed the desirable view is a 42\u00b0 view (i.e. the 3D image has been rotated through a 42\u00b0 arc about the vertical axis). While the physician may want to reference the view subsequently in the MRI report via a suitable DR, herein it is assumed that a \u201c42\u00b0 view\u201d DR is not supported by the data specifications previously defined by the administrator and therefore the storing DB function does not facilitate the subsequent linking function.","Second, while the editors described above can be used to define a new data type definition including a \u201c42\u00b0 view\u201d DR and other RSS information (e.g. see FIG. ), in cases where a DR may only be used once or a small number of times, the additional benefits associated with defining a required RSS for such cases would likely not justify the time and effort needed to perform such definition. For example, to label the 42\u00b0 view, generate an address to store the 42\u00b0 view and provide rules for linking to the 42\u00b0 view in subsequent documents, a complete address rule set (ARS) (e.g. see ) would have to be defined for the 42\u00b0 view. While the ARS defining process is streamlined using the editors above, the process is still simply too tedious in such a case and would likely be foregone in the present example.","Third, within any given record or information set there may be some subset or segment which is particularly desirable for linking purposes. The 42\u25a1 MRI view described above fits this description. Unfortunately, the editors described above provide no way to earmark sub-set or segment information for linking.","Fourth, it is contemplated that a physician may, when using any system device or application, encounter a data or record segment which, although deemed useful for subsequent linking purposes, is not associated with enough segment distinct information to form a suitable DB address for linking purposes or which may include information which is too specific for an intended use. For example, a physician may be examining a 3D heart MRI image corresponding to a first patient when he encounters a particularly good image of a specific occlusion type. While the image is associated with the first patient, the physician may want to link to the image in a text report corresponding to a second patient. Even if an address could be assigned to the image as described above, the image would only be associated with the first patient, not the second, and would not be liable in the second patient report.","One solution to this problem would be to provide a system wherein any data segment can be highlighted or selected and given a unique DR for subsequent linking purposes. Unfortunately, such a system would quickly become DR saturated as DRs would have to remain unique. In other words, once the phrase \u201c42\u25a1 view\u201d is used for one patient's image, the phrase \u201c42\u25a1 view\u201d could never again be used to refer to any other segment or information sub-set without causing system confusion.","To facilitate a more user friendly system for earmarking records and record segments with DRs for linking purposes in cases where a DR may only be used seldomly, may only be used with a small number or subset of other records, or may only be recognized as advantageous during a post-defining process, the present invention contemplates yet another software application which operates in conjunction with other workstation software and one or more a special \u201cgeneral\u201d data types and corresponding RSSs. Hereinafter this application will be referred to generally as a \u201cdesignator\u201d application. To support the designator application, each of the data type editor described above and the DB literate processor described above and in other patent applications which have been incorporated herein by reference have to include additional features described below.","Next, the general data type will be described. Then, an exemplary technique for using the data type editor to define the general data type is described followed by a description of how the general data type can be used to earmark records or data segments with unique DRs for subsequent linking purposes.","Referring now to , an exemplary general ARS  and corresponding RRS  are illustrated which constitute a general data type. Referring also to , ARS  is similar to ARS  except that ARS  has a reduced field set and includes a different field combination. Fields in ARS  and ARS  having identical names have identical IRSs. Thus, fields  and  and corresponding IRSs are identical to fields  and  and corresponding IRSs, respectively.","IRS  corresponding to field  includes a fixed field format comprising a character string \u201ctable\u201d  and a VSRS  which indicates that ARS  should be accessed when a \u201cDESIGNATING DR\u201d icon is selected. An exemplary DESIGNATING DR icon is described below.","Referring still to , exemplary RRS  corresponding to general ARS  includes a single variable table field  and a corresponding IRS . IRS  includes both a field format  and a VSRS . Format  defines a simple table having both a DR column  and an address column . Hereinafter format  may be referred to as table . As explained in more detail below, as DRs are provided by a system user which are not supported by specific data types, the DRs are added to column . In addition, as a specific record, data set or data segment is earmarked with a distinct DR, the system address corresponding to the record data set or segment is provided in column  in a row corresponding to the earmarking DR.","Exemplary VSRS  includes a single rule for instantiating format . The rule specifies that a DR provided by a user to earmark a record and a corresponding record address should be retrieved and used to instantiate table .","Referring to , ARS  is defined using the data type editor in a manner similar to the manner described above in conjunction with ARS  with a few distinctions. The distinctions are highlighted by the following example. In the following example it is assumed that during data type definition a system administrator at the St. Mary's facility would like to define only one general data type and that the general type should take the form illustrated in . Thus, DRs and corresponding addresses are to be grouped into tables (e.g. see  in ) corresponding to individual patients for subsequent linking.","In this example, in the interest of simplifying this explanation, many of the screen illustrations described above are again used to describe the general data type defining process. However, additional useful screen illustrations are also described. The intermittent additional screens described hereinafter do not affect operation of the data type editor as described above but rather supplement that operation.","Referring again to , in this example, after DATA TYPE editor icon  is selected, control passes to screen  in FIG. . In section , screen  instructs the user to indicate if a data type to be defined is a specific type or a general type. Specific means a type which will be fully supported by a distinct data type definition. For example, the data type j (i.e. medication given) described above is a fully supported specific data type. General means a data type for which a DR has not yet been provided.","In section , screen  provides a \u201cSPECIFIC DATA TYPE\u201d icon  and a \u201cGENERAL DATA TYPE\u201d icon . If icon  is selected, referring to , control passes to screen  which begins the process of defining a specific data type definition. Referring to , if icon  is selected, control passes to screen .","In section , screen  instructs the user to specify the number of fields for the \u201cgeneral\u201d address format (i.e. the phrase \u201cmedication given\u201d in section  is replaced by the word \u201cgeneral\u201d). In addition, section  may also provide additional instructions for the user. For example, it is contemplated that a general address format will require at least three fields and this instruction may be provided.","In section  the user provides the number in box . In this case, referring again to , ARS  includes three fields and therefore the user provides \u201c3\u201d in box  and selects icon .","Referring to , when icon  is selected on screen , control passes to screen . Referring also to , using screen  and subsequent screens, the user selects field types for fields  and  in the manner described above. In the case of a system including only one server, field  may automatically be defined by the editor.","In the case of a general data type at least one field in an ARS, in the present example field  in ARS , is always automatically defined by the editor as a table field corresponding to fixed IRS . Thus, after defining fields  and , all fields for general ARS  have been defined.","Referring to , in the case of a general data type the RRS  is also automatically defined by the data type editor and has the form illustrated. There is no DR or DTR for the general data type and, in the present example it will be assumed that the general data type is provided to all system devices and applications so that the D\/A list (see  in ) does not have to be specified. Thus, after defining ARS  fields, control passes again to screen  in FIG. .","Operation of the designator application software will now be described. The designator application will be described in the context of an MRI viewing workstation. For the purposes of this explanation, it will be assumed, referring again to , that station  is an MRI station and that MRI image viewing and manipulation software is loaded onto processor .","Referring also to , an exemplary MRI imaging screen  which includes an information window , an image window  and manipulation icons  and  and which is provided on screen  is illustrated. Consistent with the example above, the designating editor will be described in the context of a 3D MRI heart image  provided in window .","Window  specifies information about the image being displayed including the medical facility \u201cSt. Mary's, Springfield\u201d, patient ID # \u201c987654321\u201d, the date the image was generated \u201c5\/19\/96\u201d, the time of generation \u201c13:42\u201d and the type of imaging procedure, \u201cMRI\u201d. Icons  and  are useable to rotate image  about horizontal and vertical axis , , respectively. Icons  and  are individually selectable using a mouse controlled cursor. Other tool icons are contemplated but not illustrated.","The designating application is minimally invasive and preferably only includes a \u201cDESIGNATE DATA REFERENCE\u201d icon  in a peripheral screen area (e.g. in the lower left-hand screen corner). During image examination, when a physician observes a particularly interesting heart view in window , the physician can earmark the view for subsequent linking purposes by selecting icon .","In the previously described example, assuming the physician notices an occlusion which is advantageously observable in a 42\u00b0 view, referring to , with the 42\u00b0 view displayed in window , when icon  is selected, the designator application opens window . In window , the designator application instructs the physician to provide a data reference for the displayed image and also provides an information box  and an \u201cOK\u201d icon . Again, the DR provided should be indicative of the data which the DR references. The physician enters a DR in box . In the present example, the DR is \u201c42\u00b0 view\u201d which is consistent with the displayed image.","When icon  is selected, screen  is again provided. The physician may identify a second image view of interest for subsequent linking purposes. Once again, the physician may select icon  to provide a unique DR for the second image and so on.","Referring to , ,  and , when icon  is selected on screen , in addition to providing screen  to the user, the designator application also uses ARS  to build an address which corresponds to a DR table for the specific patent identified in information window . To this end, the application fills in fields  and  generically, gleans the patient ID# from window  and then fills in the patient ID# in field . Moreover, when icon  is selected the application uses the table address to access a record corresponding thereto or, if a record does not yet exist, uses RRS  to form a record for receiving the DR when provided.","After a record address has been formed and a corresponding record has either been accessed or formatted, the application waits for the user to provide a DR in box  (see FIG. ). When a DR is provided in box  and OK icon  is selected, the application performs two functions. First, the application provides the DR in table . Second, the application identifies the current system address at which the 42\u00b0 view is stored and provides that address in column  in a row along with the earmarking DR.","Hereinafter it will be assumed that, among other data segments and information sub-sets, the physician selected a 42\u00b0 view, a 68\u00b0 view and a 135\u00b0 view and earmarks those views with distinct DRs. An exemplary DR table  corresponding to patient ID #987654321 is illustrated in FIG. .","Although not illustrated, when a DR is assigned to a specific data set via DR table , a flag is stored in a record table which earmarks the corresponding address and record for \u201ccontinued storage\u201d. In this regard, data marked for continued storage remains stored even when a larger data set of which the marked data is part is deleted. For instance, in the above example, assuming the physician earmarked the 42\u00b0 view as a DR included in table , the view and its address at ADD-P are flagged for storage even if the larger data set including the 42\u00b0 view is purged from the corresponding database or is achieved for long term storage.","After a DR table  has been generated for patient #987654321, when other system DB literate applications are used to generate or review records and database constructs corresponding to patient #987654321, the applications automatically form links to records corresponding to table DRs.","For example, when a physician enters a DB literate word processor to generate a report concerning patient #987654321, it is contemplated that the processor will require entry of the patient ID # in a specific field. Referring again to , when the patient ID number is provided, the processor automatically accesses ARS  and uses ARS  to build the address for table  (see also FIG., ). Then the processor copies table  into its own memory for use during data entry by the physician.","As the physician enters data, if one of the DRs in table  is entered, the processor forms a link to the record at the corresponding address. To this end, the processor provides the DR as a selectable segment in the record text which is linked to the address. When the selectable segment is selected, the processor retrieves the record at the linked address and provides the record to the physician for review. If desired, the processor may provide an expandable window to the physician which includes a list of DRs from table  to help the physician remember earmarking DR syntax.","It is contemplated that, instead of providing only one general data type, some systems may facilitate use of two or more general data types. For instance, referring again to  in the example above, in addition to the patient specific ARS  and RRS  which groups DRs and corresponding data segments and information sub-sets according to patient ID #s, a second general data type may include an ARS and RRS which group DRs and corresponding data segments\/sub-sets according to procedures. For example, in , instead of providing a variable patient ID field , field  may include a variable \u201cprocedure\u201d field.","In a system capable of supporting more than one general data type, the data type editor would require at least one additional screen (not illustrated) to enable a user to name the different general data types. This screen would be provided between screens  and  (see FIGS.  and ). Hereinafter it is assumed that the administrator has defined two general data types named \u201cpatient\u201d and \u201cMRI\u201d.","In addition, the designator application also requires an additional wrinkle. To this end, referring to , when icon  is selected, the designator application provides an additional screen  which, in section , explains that there are two different general data types which group segments according to patient # and procedure (e.g. MRI, PET, post-op eval, etc.). In section  screen  provides both a \u201cPATIENT\u201d icon  and a \u201cPROCEDURE\u201d icon . The general data type is selected by selecting one of icons  and .","After one of icons  or  is selected and ok icon  is selected control passes to screen  in  where a suitable DR is provided. Thereafter, when control returns to , if desired, the physician may again select icon  to earmark the displayed image for inclusion in the previously unselected general data type. Thus, one image may be earmarked for inclusion in two general data types.","In this regard, however, and generally, it should be understood that whenever two DRs may be subsequently simultaneously accessed by a single DB literate processor, the DRs must be unique so that links are not caused between a selectable segment and more than one stored record. Thus, each DR must be unique as DRs in tables corresponding to general data types are accessible to DB literate processors along with DRs corresponding to specific data types. In addition, to use such a system, a DB literate processor would require a system user to provide, in addition to a patient ID #, a procedure indication so that, prior to identifying DRs, the processor could access and retrieve the procedure DR table. Moreover, the user may also be required to provide a date for use by the processor where more than one of a specific procedure type is stored.","Where a general data type which groups data and information in tables corresponding to procedures is provided, it should be appreciated that records and data can easily be shared among various patient reports if desired. Thus, if it is described to link to an image corresponding to a first patient's MRI in a second patient's MRI report, such listing can be supported.","E. Other Preferred Embodiments and Features","1. Temporal Modifiers","The address defining, storing and linking tools and methods described above facilitate many useful functions and are particularly advantageous in cases where all of the information required for a particular address format is known. For example, referring again to , where both the specific date and specific time (i.e. information in fields  and , respectively) at which a medication was administered is known or can be gleaned. An address rule set (e.g. see ) can be used to generate an address like address for storage and linking purposes. Resolving date and time for storage purposes is typically not problematic as the processor or ICD which receives an information set for generating a record often is able to independently identify date and time for the record or, in the alternative, will be provided with a corresponding date and time in the received information set.","Unfortunately for linking purposes, date and time is not so easily resolvable in many cases. For example, assume a physician is using a DB literate processor as described above to enter a text report corresponding to a particular patient. Also assume that the physician would like to reference, via a hyperlink, an ECG report which was generated several months ago when the patient was admitted to a medical facility for an extended stay. In this case, DB literate processors have a number of shortcomings. First, in this example it is likely that the physician will not remember the specific patient admission date. While a date may not be required by all ARSs. Clearly many and perhaps most ARSs will require some type of temporal modifier. For instance, whenever more than one record of a particular type may be generated for a particular patient, the likely differentiator will be based on time (i.e. date and time). In the case of an ECG, several ECG's may be performed on a patient during the patient's lifetime, during a particular facility stay or, indeed, even during a single day. For this reason, the physician would have to be able to identify at least an admission date in order to identify an admission ECG. This date requirement is burdensome and in many cases may cause the physician to disable the linking feature instead of requiring additional work by the physician.","Second, even if a physician determines an admission date for linking purposes, in some cases more than one ECG may have been performed on a patient on a specific admission date. In this case, the DB literate processor could become confused or could provide an undesired ECG report.","Third, sometimes an ECG report may be generated after or before an admission date. For example, a patient may be examined via an ECG one day prior to actual admission. For another example, a patient may be examined via an ECG two days after an admission date. In these cases, it would be difficult for a physician to quickly identify a desired ECG report for hyperlinking purposes.","One solution to this problem is described in U.S. Pat. No. 6,345,268 entitled \u201cMethod and System for Resolving Temporal Descriptions of Data Records in a Computer System\u201d which issued on Feb. 5, 2002 which is commonly owned with the present application and which is incorporated herein by reference. According to that invention, time ranges and instructions are provided for each of several possible temporal descriptors associated with a record. When a temporal descriptor is identified, a processor applied the time range and instructions to the descriptor to identify the address of a record corresponding to the descriptor. While advantageous, unfortunately this solution has at least one shortcoming. Specifically, this solution requires pre-defined addresses associated with each temporal descriptor and cannot automatically construct addresses using address formats.","While described herein in the context of an ECG report, it should be appreciated that temporal resolution difficulties occur in most DB literate linking applications. As another example, if a physician would like to identify whether or not a particular medication was administered to a patient after an operation, the physician may use a DB interface tool which allows the physician to fill in a few fields and receive information corresponding to the patient. For example, the fields may require patient ID at a minimum. Entering just patient ID, however, would obviously generate a large number of related records, many of which have nothing to do with medication or post-op practices. To narrow the records identified another field may require an event (e.g. medication given) and another field may require a date restriction (e.g. a specific date or a date range). While this retrieval tool would be helpful, again the physician may not recollect the operation date and therefore would have a difficult time specifying a date or a date range.","To overcome the problems of resolving which record is identified by a specific DR, the present invention contemplates a system which, in addition to supporting the DRs, also supports temporal modifier references (MRs). An MR is a descriptor which is commonly used in conjunction with a corresponding DR to distinguish one record from another where the records are of the same type. A temporal MR distinguishes records based on time. For example, with respect to an ECG DR, one temporal MR is \u201cadmission.\u201d Other exemplary MRs include \u201cpost-op,\u201d \u201cdischarge,\u201d \u201cmost recent\u201d and so on. In addition to specifying MRs, the invention also provides temporal rule sets (TRSs) for determining which records may be referenced by a particular DR\/MR combination and, where more than two records fall into the referenceable category, to resolve which of the records should be linked to a specific reference.","To this end, referring again to , preferably system  further includes a temporal reference definition system (TRDS)  linked to network . Referring also to , TRDS  generally includes a database for storing a temporal descriptor definition table  and a plurality of temporal descriptor definitions (TDDs) (one TDD illustrated as ).","Table  includes a DR list  including all of the DRs supported by system . Consistent with the present example are of the listed DRs is \u201cECG\u201d . In addition, table  includes a separate TDD (e.g. ) for each DR listed.","Referring still to , exemplary TDD  includes two columns, a modifier reference (e.g. temporal descriptor) column  and a temporal rule set (TRS) column . Column  lists all possible MRs which correspond to an associated DR. In the present example, exemplary MRs associated with the ECG DR include \u201cadmission\u201d  and \u201cdischarge\u201d . Many other MRs are contemplated.","Hereinafter it is assumed that all records for which a temporal reference may be required include at least a date field and perhaps also a time field in their DB addresses. In addition, it is assumed that dates and times of all major events which are likely to be used as DR temporal descriptors are stored in one of the system DBs. For example, an admit\/discharge\/transfer (ADT) system generates records for storage indicating admission, discharge and transfer times and dates. Other system devices are used to memorialize operation dates, examination dates and other important dates. Thus, referring still to , for a particular patient, a specific date (and perhaps time) is associated with admission MR  while another specific data is associated with discharge MR .","TRS column  indicates rules for identifying one record which is referenced by a specific DR\/MR combination and therefore a separate TRS is provided for each MR in column . The TRS corresponding to MR  is identified by numeral . The TRSs in the present example have similar configurations and are used in similar manners and therefore only TRS  is explained here in detail.","TRS  includes three distinct rule subsets including a prior to event time range  (PRTR), a post event time range  (POTR) and a resolving rule  (RR). The PRTR indicates a time range prior to the specific date associated with a corresponding MR. Similarly, the POTR indicates a time range after the date associated with the corresponding MR. For example, with respect to admission MR , PRTR  may specify a time range of two days prior to the admission date while POTR  may specify a time range of three days after the admission date. These time ranges will be assumed hereinafter for the purposes of this explanation.","RR  includes a set of rules which can be used to, when more than a single record corresponds to a DR\/MR combination and falls into the range specified by PRTR  and POTR , determine which record to select for linking purposes. RR  may be extremely simple such as selecting a record corresponding to a time which is temporally closer to the admission date and time than any other record or selecting a record having the aforementioned characteristics but which is subsequent to the admission date. In the alternative RR  may be extremely complex requiring weighting of various factors, accounting for the physician generating a report, accounting for the department of a particular physician (e.g. each department may have different temporal rule requirements) and so on. Many other rules are contemplated.","It has been recognized that, despite attempts to support all MRs which may be used with a specific DR, in some cases an unanticipated and therefore unsupported MR may be employed by a system user or, in some cases, a user may not provide an MR despite the requirement for an MR. To deal with these occurrences, column  (see ) further includes a \u201cno match\u201d condition  and a corresponding set of \u201cno match rules\u201d . No match simply corresponds to a condition wherein, after a DR has been identified, none of the MRs in column  has been located and therefore, as the name implies, no MR match has been found.","Rules  provide processor rules to be followed when the no match condition occurs. Rules  may take any of several different forms. For example, where a DR is identified but no MR is identified, rules  may cause an information window to open on a display screen to indicate that an MR is required and may provide an MR list to the user for selection. In the alternative, rules  may simply specify that where a no match condition occurs, no link is made. As another example, rules  may specify that in the absence of an MR, the most recent record corresponding to the DR should be linked. Hereinafter, while various rules  are contemplated, it will be assumed that rules  specify that when no match occurs, no link is formed.","Referring still to , although not illustrated, TDD  may also include a rule set for each MR in column  which is similar to the instantiation rule sets described above. For example, the rule set may include various permutations of the corresponding MR for searching purposes. For admission MR , the rule set may include \u201cadmission,\u201d \u201cadmit,\u201d \u201cadm.,\u201d etc. so that, during searching for an MR, virtually all possible permutations are sought. In addition, the rule set may also include rules for where to search for an MR. For instance, one rule may indicate that, when a DR is identified, a processor should search the three terms before and the three terms after the DR for any permutation of a specific MR. Other MR searching rules are contemplated.","Hereinafter, to simplify this explanation, it will be assumed that the rules for searching for an MR are extremely simple. To this end, first, it will be assumed that an exact MR must be located (i.e. no permutations are searched). Second, it will be assumed that only the word or character string immediately preceding a DR is searched to find an MR.","Although not illustrated here, it should be appreciated that additional editor features could be added to the editors described above for specifying temporal descriptor definitions and MRs for each DR and that much of the information required to support such specification could be pre-defined for repeated use during defining. For example, in many cases MRs for a specific facility will be identical or substantially identical for various DRs. For instance, each of an ECG and a PET DR may be modified by an \u201cadmission\u201d MR. Similarly, each of the ECG and PET DRs may be modifiable via a \u201cdischarge\u201d MR and so on. Thus, the advantages of predefining described above can be used to streamline TDD defining.","Referring still to , assuming a complete temporal descriptor definition table  and corresponding TDDs (e.g. ) have been stored on system , operation of processor  to form links between DRs in one document which reference other documents will be explained in the context of the following example.","In this example, it will be assumed that a patient was admitted into the St. Mary's facility on Jan. 3, 1997 for some heart monitoring and testing. To this end, referring also to , an admission record memorializing the admission date has been stored on a system DB and is accessible by processor . An exemplary ARS  corresponding to an ECG DR and the address above is illustrated in FIG.  and includes a fixed facility\/server field , a patient ID field , a date field , a time field  and a fixed report type field or ECG.html field .","In addition, it will be assumed that the patient's ID # is \u201c123456789\u201d and that an ECG was performed and a corresponding report was generated on Jan. 5, 1997. Moreover, it is assumed that, prior to admission, several other ECG reports for the same patient were generated and stored on a system DB. Specifically, the prior reports include one report which was generated 20 days prior to admission and another report generated the day before admission (e.g. on Jan. 2, 1997). The ECG report of Jan. 5, 1997 is stored at DB address:\n\n","Furthermore, referring also to , it is assumed that RR  specifies the following rules. First, if an ECG report occurs on the admission date, the ECG report is assumed to be the report to be linked. Second, if more than one ECG report occurs on the admission date, the last of the reports on the admission date is assumed to be the report to be linked. Third, if no ECG reports occur on the admission date, then the temporally next ECG report after the admission date is assumed to be linked if within the POTR (see  in FIG. ). Fourth, if none of the above criteria are met, the temporally subsequent ECG report prior to the admission date is assumed to be linked if within the PRTR. Furthermore, it is assumed a physician is presently using DR literate processor , in this case a word processor, to enter text to generate another report corresponding to patient ID #123456789 and that, during data entry, the physician enters the phrase \u201cadmission ECG\u201d.","Referring also to , a flowchart illustrating exemplary DB literate processor  operation as text is entered by the physician is illustrated. At process block  processor  monitors text entered by the physician searching for any of several supported DRs including the ECG DR. Control loops through blocks  and  until a DR is identified. At decision block , when the ECG DR is entered, processor  identifies the ECG DR and performs two distinct but related functions. First, at block , processor  identifies an ARS corresponding to the ECG DR. In the present example ARS  in  is illustrated. In addition, at block  processor  gleans ARS information and instantiates all ARS fields except for the date and time fields  and , respectively.","Second, referring also to , at block  processor  accesses table  in TRDS  (see ) and, based on the ECG DR, identifies the corresponding TDD . Next, at block  processor  compares the term or character string immediately preceding the ECG DR in the entered text to each of the MRs in column  or until a match is identified.","At decision block , if no match is identified (i.e., the term prior to the ECG DR does not match an MR), control passes to block .","At block  where the term previous to the ECG DR matches an MR, control passes to block . In the present example, the term previous to the ECG DR is \u201cadmission\u201d which, referring to , matches MR  and therefore control passes to block .","At block  processor  first identifies the date corresponding to admission MR  for the particular patient prior to the date of the current report. In the present example, processor  identifies the admission date by identifying another ARS corresponding to an admission report, gleaning information for the admission ARS from the record being entered, forming an address to an admission report, accessing the report and gleaning the admission date from the admission report. Although not illustrated, this process is essentially identical to all other address generating methods described above and in previous related applications. In the alternative, the admission address may be sought by accessing an ADT system (not illustrated) which may more readily be able to provide the required date. In the present example, the admission date is identified as Jan. 3, 1997.","In addition, at block , processor  identifies the PRTR and POTR ranges , , respectively, and uses ranges  and  and the admission date to identify a relevant date range for the admission ECG report. In the present example, the date range is three days before and three days after the admission date and therefore is Dec. 21, 1996 through Jan. 6, 1997. After block  control passes to process block .","Referring still to , at block  processor  searches the previous input to identify if a specific data for the record to be linked has been provided. If a specific date is identified control passes to block . If a specific date is not identified control passes to block  where the \u201cno match\u201d rules  (see ) are performed. In the present example, rules  specify that without an MR or specific date, no link should be made and therefore control passes back to block  to continue text monitoring.","At block  processor  sweeps through every date and time combination within the relevant date range and instantiates the ECG address format with each of the date\/time combinations to check system DBs for ECG reports for the particular patient which were generated during the relevant date range. Each report address corresponding to an ECG report which is identified as being for the patient within the relevant date range is retrieved and stored in a processor  memory. In the present example, one ECG report was generated 20 days prior to admission, a second report was generated one day before admission and the third report was generated two days after admission on Jan. 5, 1997. Thus, of the three ECG reports, processor  retrieves addresses corresponding to the January 2 and January 5 reports.","Continuing, at block , processor  applies the RR  to the dates and times of the retrieved records in order to identify one of the retrieved records for linking purposes. To this end, because no ECG reports were generated on the admission date, according to RR  the temporally next ECG report after the admission date which is within the relevant date range is assumed to be the report to be linked. In the present case, the ECG report dated Jan. 5, 1997 is the only report having a date which fits this description and therefore, the address corresponding thereto is selected for linkage.","At block  a link is formed between the ECG DR and the Jan. 5, 1997 ECG report via the selected address. The link is preferably in the form of a hyperlink wherein the term \u201cECG\u201d or the phrase \u201cadmission ECG\u201d is highlighted within the text and is linked to the selected address such that when the highlighted term is selected (e.g., via a mouse-controlled cursor), the processor accesses the ECG report and provides the report via a display for user observation.","Although a preferred embodiment of the invention for supporting MRs is described above, other embodiments are contemplated. For example, in the present example, when an ECG record is initially stored as soon thereafter, a tag may be provided for the record which indicates the relationship between the record and one or more of the MRs. For instance, when the Jan. 2, 1997 ECG report is initially created, it is contemplated that a processor would not tag the report with respect to an admission MR as no admission date would exist (i.e., in this example admission is on Jan. 3, 1997). However, on Jan. 3, 1997 when the patient is admitted, when an admission record is generated which includes an admission date, the processor would automatically search for patient reports which could be tagged. During this process, referring again to , the processor would apply the TDDs to the Jan. 2, 1997 date of the ECG report. Upon admission the Jan. 5, 1997 report does not exist and therefore, the Jan. 2, 1997 report would be the admission ECG report. Thus, when the admission date is provided, the processor tags the Jan. 2, 1997 report as the admission ECG report. Thereafter, until another ECG report is generated which, based on the RR (see  in FIG. ), supersedes the January 2 report as an admission ECG report when an \u201cadmission ECG\u201d DR\/MR combination is identified in text, the processor automatically identifies the January 2 report for linking purposes.","Continuing, on Jan. 5, 1997, when the next ECG report for the particular patient is generated, the processor would again apply the ECG TDD (see  in ) to determine if the new ECG report should be tagged with any of the MRs. In the present example, indeed, based on RR  the January 5 report should replace the January 2 report as the admission ECG report and therefore tag correction would occur (i.e., the January 2 report is de-tagged while the January 5 report is tagged as the admission ECG report for the particular patient). Thereafter the January 5 report is used by processor  for linking purposes when the \u201cadmission ECG\u201d DR\/MR combination is identified in entered text.","It should be understood that the methods and apparatuses described above are only exemplary and do not limit the scope of the invention, and that various modifications could be made by those skilled in the art that would fall under the scope of the invention. For example, while the system described above includes only one general data type, clearly systems could be provided which include more than a single general data type. For example, in addition to grouping table entries around patient ID number for linking purposes in related records, table entries may also be grouped around events or procedures such as MRI, PET, NM, etc. procedures. In this case additional general data type definitions would have to be provided.","In addition, while the general data type ARS (see  in ) is described as including only three fields, the invention contemplates general ARSs which include more than three fields. For example, ARS  in  may also include a date field so that a corresponding DR table will only include records or data segments corresponding to a particular patient on a particular date. Then, during DB literate processing, the user would be required to indicate both patient ID and date prior to data entry for linking purposes.","In addition, the invention also contemplates some peripheral aspects related to the general invention. For example, where a DR is identified in information being entered into a document, after a corresponding address is generated, an additional feature causes the address generating processor to search the database for the existence of a record at the generated address and, if the address does not exist, the processor may perform any of several different functions. For instance, where a referenced record does not exists, the processor may indicate to the person entering the data that the record does not exist. In the alterative the processor may simply not cause a link to be formed or may be programmed to provide a list of similar links for user consideration.","Similarly, if, upon generating an address for storage purposes the processor generates an address which is already occupied by a record, the processor may be equipped to recognize this addressing overlap and take any of several different steps to deal with the incongruity.","As another example a billing feature is also contemplated. For instance, assuming a database of specific records which are often useful to facility users is maintained by an outside provider and which is accessible via the internet on a per reference basis. This may be the case, for example, in a law firm which routinely forms links to on-line full text opinion sites in briefs, motions and other documents. In this case, then an opinion is referenced in a brief, a database literate processor forms a link between the reference and the opinion. Therefore, each time the opinion is accessed via a hyperlink, a server which stores the full text opinion automatically generates a bill for the specific access. Referring to , an exemplary billing server  is illustrated.","One other peripheral example is that while temporal MRs are described above, the invention contemplates other MR types which can be used to more specifically reference records. For example, a descriptive MR for an \u201cECG\u201d DR may be \u201cwaveform\u201d. In this case, when the DR ECG is identified, prior to forming an address, the processor first searches for the \u201cwaveform\u201d MR according to specific search rules. If the MR is identified the processor then constructs an address to a record corresponding to the more specific \u201cECG waveform\u201d combination. The descriptive MRs are similar to the temporal MRs described above except that the descriptive MRs are not time based.","Moreover, while the general data type is described above as being used with a real time DB literate processor, the general data type may also be used with a batch type DB literate processor which receives a complete record and creates links for DRs in the record. In this case when the processor receives a record, the processor initially uses the general data type ARS to identify record information for forming a record address for the DR table record corresponding to the received record, accesses the DR table and then uses the DR table to form links.","Furthermore, it is contemplated that the designating application can be used with all facility applications which are used to view, listen to, generate, etc., date records and segments and to form links to many different data types. To this end, referring again to , icon  can be provided as an overlay on virtually all facility screens. For example, when in one text document, if a physician encounters some text the physician would like to reference in some other document, the physician may highlight the desired text and then select icon  to earmark the text with a designating DR. Similarly, if an audible heartbeat is stored on a system DB, while listening to the beat, the physician can select icon  to earmark the heartbeat.","In addition, while the data type editor is described above as being used to define both an ARS, a corresponding RRS and a corresponding DR, other simpler editors are contemplated which are used to define subsets of the ARS, RRS and DR information. For example, an editor may only be capable of defining an ARS. As another example, an editor may only be capable of defining an ARS and a corresponding DR.","To apprise the public of the scope of this invention, the following claims are made:"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0035","num":"0037"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0036","num":"0038"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0037","num":"0039"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0038","num":"0040"},"figref":["FIG. 3A","FIG. 3"]},{"@attributes":{"id":"p-0039","num":"0041"},"figref":["FIG. 4","FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0040","num":"0042"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0041","num":"0043"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0042","num":"0044"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0043","num":"0045"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0044","num":"0046"},"figref":["FIG. 9","FIG. 7"]},{"@attributes":{"id":"p-0045","num":"0047"},"figref":["FIG. 10","FIG. 7"]},{"@attributes":{"id":"p-0046","num":"0048"},"figref":["FIG. 11","FIG. 7"]},{"@attributes":{"id":"p-0047","num":"0049"},"figref":["FIG. 12","FIG. 7"]},{"@attributes":{"id":"p-0048","num":"0050"},"figref":["FIG. 13","FIG. 7"]},{"@attributes":{"id":"p-0049","num":"0051"},"figref":["FIG. 14","FIG. 7"]},{"@attributes":{"id":"p-0050","num":"0052"},"figref":["FIG. 15","FIG. 7"]},{"@attributes":{"id":"p-0051","num":"0053"},"figref":["FIG. 16","FIG. 7"]},{"@attributes":{"id":"p-0052","num":"0054"},"figref":["FIG. 17","FIG. 7"]},{"@attributes":{"id":"p-0053","num":"0055"},"figref":["FIG. 18","FIG. 7"]},{"@attributes":{"id":"p-0054","num":"0056"},"figref":["FIG. 19","FIG. 7"]},{"@attributes":{"id":"p-0055","num":"0057"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0056","num":"0058"},"figref":["FIG. 21","FIG. 20"]},{"@attributes":{"id":"p-0057","num":"0059"},"figref":["FIG. 22","FIG. 7"]},{"@attributes":{"id":"p-0058","num":"0060"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0059","num":"0061"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0060","num":"0062"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0061","num":"0063"},"figref":["FIG. 26","FIG. 22"]},{"@attributes":{"id":"p-0062","num":"0064"},"figref":["FIG. 27","FIG. 22"]},{"@attributes":{"id":"p-0063","num":"0065"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0064","num":"0066"},"figref":["FIG. 29","FIG. 28"]},{"@attributes":{"id":"p-0065","num":"0067"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0066","num":"0068"},"figref":"FIG. 31"}]},"DETDESC":[{},{}]}
