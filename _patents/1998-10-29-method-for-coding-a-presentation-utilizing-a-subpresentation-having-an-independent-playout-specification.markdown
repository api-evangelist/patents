---
title: Method for coding a presentation utilizing a sub-presentation having an independent play-out specification
abstract: A coded presentation comprises a number of sub-presentations, each comprising a number of presentation elements. A presentation element is an elementary part that is to be presented and comprises text, audio, video or an image. A sub-presentation has an interface that provides a reference for the presentation elements in that sub-presentation. This reference can relate to timing aspects and to locations aspects relevant during play out, and to a priority as to whether or not the sub-presentation is to be played out.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07051272&OS=07051272&RS=07051272
owner: Koninklijke Philips Electronics N.V.
number: 07051272
owner_city: Eindhoven
owner_country: NL
publication_date: 19981029
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The invention relates to a method for coding a presentation, the coded presentation comprising at least one presentation element and a play-out specification of the presentation element indicating how the presentation element is to be played out.","The invention further relates to a method for playing out a coded presentation comprising at least one presentation element, in which method the presentation element is played out according to a play-out specification.","The invention further relates to an apparatus for playing out a coded presentation, coded according to the above method for coding a presentation.","The invention further relates to an apparatus comprising a converter module for amending a coded presentation, the coded presentation comprising:\n\n","The invention further relates to an information carrier comprising a coded presentation, which is coded according to the above method for coding a presentation.","It is known to code a presentation into a description according to a given format. The coded presentation may be transferred via a network or stored in a memory medium for subsequent play out by a suitable apparatus. An example of such a format is the ISO\/IEC standard IS 13522-5, better known as MHEG. This standard is described in the document \u201cISO\/IEC International Standard IS 13522-5 (MHEG) Information Technology\u2014Coding of multimedia and hypermedia information, Part 5: Support for base-level interactive applications\u201d, November 1996. The presentation may include presentation elements comprising text, audio, video or an image. A presentation element can be regarded as an elementary item that is to be presented. In MHEG, a presentation element is called a Presentable. The coded presentation may include a play-out specification for the play out of a given presentation element. An example in MHEG is where a presentation element somewhere in the presentation may cause the start of another presentation element somewhere else in the presentation. This event-action mechanism provides the author of the presentation with control over the timing of the various presentation elements. So, during play out of a coded presentation, a specific presentation element may be triggered by a running presentation element and the timing behaviour of said specific presentation element is determined on the basis of the direct relation between the running presentation element and that specific presentation element. This causes the problem that the presentation must be executed integrally and that it is very cumbersome to remove a presentation element or substitute it by another one.","It is an object of the invention to provide a method for coding a presentation of the kind set forth in the opening paragraph, in which the description of the play-out specification is improved. This object is achieved according to the invention in a method that is characterised in that the coded presentation comprises a sub-presentation which comprises the presentation element, and that the sub-presentation is provided with an interface providing a reference for the play-out specification of the presentation element. By grouping the presentation elements into respective sub-presentations, the coded presentation is given an explicit structure which makes it easier to handle it, e.g. to play out the coded presentation. By providing a reference for the play-out specification of its constituting presentation elements, the sub-presentation becomes a self-contained entity with respect to play out. The sub-presentation may be played out autonomously without there being a need to consult other sub-presentations in the presentation. Furthermore, the sub-presentation may be substituted by another sub-presentation having the same interface as far as the provided reference is concerned. The content and the behaviour of the substituted sub-presentation may differ from the content and the behaviour of the original sub-presentation as long as they interact with their environment in the presentation, i.e. through the definition of their respective interfaces, in mutually the same way. Organising the coded presentation into sub-presentations, results in a coded presentation that is simpler to process, e.g. for playback, because the processing apparatus does not need to interpret the whole presentation prior to handling a sub-presentation. This means that the processing apparatus, which may be a consumer playback apparatus, can be designed with a smaller processor and a smaller working memory. At the level of the coded presentation, it is not necessary to know the play-out specification of the various presentation elements. This knowledge can now be specified at the level of the sub-presentation which comprises the particular presentation element.","An embodiment of the method according to the invention is defined in claim . By providing the sub-presentation with an interface providing a time reference, the timing specification of its presentation elements may be made relative to that interface. Doing so offers the advantage that the sub-presentation has become a self-contained entity as far the timing behaviour is concerned. The timing issues of the presentation elements can be resolved internally, i.e. without reference to other presentation elements outside the sub-presentation. This means that substituting or removing a presentation element is a relatively easy process because it is not necessary to check the whole of the presentation for broken relations and timing inconsistencies. Furthermore, a sub-presentation may be substituted by another sub-presentation according to the invention, provided that the interface of the two sub-presentations is the same. Also, since the sub-presentation is a self-contained entity, the sub-presentation may be individually played out, separate from the rest of the presentation. This is useful when only a fragment of the presentation is needed or when a part of the presentation is to be verified.","An embodiment of the method according to the invention is defined in claim . The start of the presentation element is one of the aspects of the timing behaviour that can be advantageously specified relative to the time reference of the sub-presentation. Apart from the timing specification relative to the time reference, a presentation element may have a further timing specification that is specified relative to another presentation element within the same sub-presentation. For example, the start of a presentation element is specified relative to the time reference of the sub-presentation and the end of that presentation element is specified relative to another presentation element in the sub-presentation.","An embodiment of the method according to the invention is defined in claim . By providing a location frame of reference via the interface of the sub-presentation, the location specification of the presentation elements of the sub-presentation may be made relative to that location frame of reference. Then the sub-presentation has become a self-contained entity as far the locations of the presentation elements are concerned. The location issues of the presentation elements can be resolved internally, i.e. without referring to other presentation elements outside the sub-presentation. The location issues concern for example the layered organisation of the presentation elements on a display. To reconstruct which presentation element is to be displayed in front of which other presentation element, their relative layering must be known. Another example is the specification of the window in which the presentation elements are to be displayed.","An embodiment of the method according to the invention is defined in claim . By providing the priority for presenting the presentation elements via the interface, the priority is established for the sub-presentation as a whole. In this way, it can be decided during play out whether or not the sub-presentation is to be played out in view of its priority. This is particularly advantageous for play out on a minimal resource platform, i.e. a platform with small processing capacity and a small working memory. If such a platform is not able to completely process the presentation, it can now skip the sub-presentation with the lowest priority. An author preparing a presentation may actively use this priority encoding mechanism to create a presentation that is suitable to be played out on various types of apparatus, each according to its own capabilities. The author assigns to the more important sub-presentations a high priority and to the less important ones a lower priority. A powerful apparatus will play out all sub-presentations whereas a smaller apparatus will skip the sub-presentations that are indicated to be less important.","It is a further object of the invention to provide a method for playing out a coded presentation of the kind set forth with an improved mechanism for determining the play-out specification of a presentation element. This object is achieved according to the invention in a method that is characterised in that that the presentation comprises a sub-presentation which comprises the presentation element, that the sub-presentation comprises an interface providing a reference, and that the presentation element is played out according to the play-out specification relative to this reference. The interface of the sub-presentation provides a reference for the presentation elements in the sub-presentation. This causes the sub-presentation to be self-contained with respect to the behaviour of the presentation elements, and during play out all relations can be resolved internally to the sub-presentation. There is no need to refer to presentation elements outside the currently played out sub-presentation and this greatly facilitates the play out process.","It is a further object of the invention to provide an apparatus comprising a converter module of the kind set forth with an improved mechanism for substituting a sub-presentation. This object is achieved according to the invention in an apparatus that is characterised in that that the coded presentation comprises a sub-presentation which comprises the presentation element, that the sub-presentation comprises an interface providing a reference for the play-out specification of the presentation element, and that the converter module is arranged to substitute the sub-presentation by a further sub-presentation comprising a corresponding interface. This apparatus allows easy substitution of a specific sub-presentation with a sub-presentation comprising a corresponding interface. This can advantageously be used for amending a coded presentation with text presentation elements in one language into a new coded presentation with these text presentation elements in another language.","Further advantageous embodiments of the invention are recited in the dependent claims.","Corresponding features in the various Figures are denoted by the same reference symbols.",{"@attributes":{"id":"p-0026","num":"0027"},"figref":"FIG. 1","b":["102","104","104","106","106","106","108","110","112","114","116","114","106","118","120","122","124","126"]},{"@attributes":{"id":"p-0027","num":"0028"},"figref":"FIG. 2","b":["202","204","206","208","210","212","214","204","216","208","206","218","214","212","220","214"]},{"@attributes":{"id":"p-0028","num":"0029"},"figref":"FIG. 3","b":["302","304","306","304","308","310","312","306","314","316","317"]},"Sub-presentation  comprises an interface  which provides a time reference for the whole of the sub-presentation . This time reference may provide a point in time from which the starting and end times of presentation elements can be scheduled and it may provide a clock for synchronising the pace of presenting the presentation elements for a specified duration. The timing specification for presentation elements ,  and  is specified relative to the time reference of the interface . The interface  of sub-presentation  provides a translation between the time reference valid for the enclosing presentation  and the elements of the sub-presentation . Sub-presentation  has its own interface  providing a time reference for that sub-presentation. The timing specification for a presentation element need not be directly related to the interface. Presentation element  is specified relative to an event of presentation element  of the same sub-presentation. For example, is that presentation element  is started when presentation element  ends. Furthermore, different aspects of the timing specification may be specified relative to different events. Presentation element  is specified for one aspect relative to the interface  of the sub-presentation and for another aspect relative to event  of presentation element . For example, the starting time of presentation element  is given relative to the interface  and the end time of presentation element  is given relative to the event  in presentation element . However, although in both cases the timing specification is not specified in direct relation to the interface, it is still given within the scope of sub-presentation . So all timing issues, such as the start of a presentation element or the verification of the timing in a sub-presentation, can be resolved by merely consulting the sub-presentation and the presentation elements included therein. There is no need to take into account other presentation elements in other sub-presentations. Because of this organisation of the timing specifications, a sub-presentation can be played out separately from the rest of the presentation. This may be useful for testing purposes when certain small changes have been made to the presentation, and it would take excessively long to play out the whole presentation. Furthermore, this organisation allows a complete sub-presentation to be substituted by another as long as the new one has an interface which is compatible with the original one.","A sub-presentation has a structural meaning in that it describes the structure of the presentation in groups of presentation elements. A sub-presentation can further have scheduling information as to the timing of the play out of the presentation elements. The interface of the sub-presentation provides for communication regarding the play-out specification, i.e. the start of a sub-presentation passes information via the interface into the sub-presentation for the play out of the presentation elements. The communication may also be from inside the sub-presentation to the outside of the sub-presentation, i.e. to the enclosing (sub-)presentation. An example is the export of a clock triggered by a presentation element.",{"@attributes":{"id":"p-0031","num":"0032"},"figref":"FIG. 4","b":["400","402","404","406","408","404","406","408","400"],"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":["(1) .","(2) .","(3) .","(4) <par>","(5) <audio id = \u201caudio1\u201d>","(6) <seq clock = \u201caudio1\u201d>","(7) <text id = \u201ctxt1\u201d begin = \u201c0\u201d>","(8) <text id = \u201ctxt2\u201d begin = \u201c10s\u201d>","(9) <text id = \u201ctxt3\u201d begin = \u201c20s\u201d>","(10) <\/seq>","(11) <\/par>","(12) .","(13) .","(14) .\n\nLines 1\u20133 symbolise that various lines of the coded presentation have been omitted from the example and that only the part corresponding to  has been given. Line 4 defines the beginning of a so-called parallel sub-presentation of sub-presentations and\/or presentation elements which are to be presented in parallel, i.e. simultaneously. Line 11 defines the end of that parallel sub-presentation. The parallel sub-presentation of this example contains two parts that are to be presented simultaneously. These are a presentation element defined in line 5 and a sequential sub-presentation defined in lines 6\u201310. A sequential sub-presentation comprises sub-presentations and\/or presentation elements that are to be presented sequentially, i.e. one after the other. The sequential sub-presentation of this example comprises three presentation elements each comprising a text, called txt1, txt2 and txt3, respectively. The presentation element of the parallel sub-presentation comprises an audio piece called audio1, as defined in line 5. Now, in order to define the instant that a particular presentation element of the sequential sub-presentation is to be presented, each such presentation element is given a starting time. In the example, the starting time is 0, 10 and 20 seconds, respectively. In the context of the sequential sub-presentation, the start of a textual presentation element implies the end of the preceding textual presentation element. According to the invention, the starting times of the presentation elements are given relative to the time reference of the enclosing sub-presentation. In line 6, the interface of the sequential sub-presentation specifies that the time reference corresponds to the time reference of the presentation element audio1. This means that the presentation of txt1 starts at the same time as the presentation of audio1. The timing specifications of the presentation elements for txt1, txt2 and txt3 are specified with respect to the interface of the sequential sub-presentation and do not themselves refer directly to the presentation element audio1. This is an important aspect because it ensures that the timing issues of the sequential sub-presentation defined in lines 6\u201310 can be resolved internally and that no reference outside the sub-presentation need be verified.\n"]}},"An alternative to a coded presentation for the presentation  is the following:\n\n",{"@attributes":{"id":"p-0033","num":"0062"},"figref":"FIG. 5","b":["500","502","504","502","504","506","504","508","510","512","514","500"],"ul":{"@attributes":{"id":"ul0005","list-style":"none"},"li":["(1) .","(2) .","(3) .","(4) <par>","(5) <seq id = \u201cseq1\u201d export clock x_origin = \u201c30\u201d y_origin = \u201c0\u201d>","(6) <video id = \u201cvideo1\u201d>","(7) <video id = \u201cvideo2\u201d>","(8) <\/seq>","(9) <seq id = \u201cseq2\u201d clock = \u201cseq1\u201d x_origin = \u201c30\u201d y_origin= \u201c 80\u201d>","(10) <text id = \u201ctxt1\u201d dur = \u201c10s\u201d>","(11) <text id = \u201ctxt2\u201d dur = \u201c10s\u201d>","(12) <text id = \u201ctxt3\u201d dur = \u201c10s\u201d>","(13) <text id = \u201ctxt4\u201d dur = \u201c10s\u201d>","(14)<\/seq>","(15)<\/par>","(16) .","(17) .","(18) .\n\nThe coded presentation comprises a parallel sub-presentation of a sequential video sub-presentation seq1, defined in lines 5\u20138, and a sequential textual sub-presentation seq2, defined in lines 9\u201314. The sub-presentation seq1 has a time reference according to which its presentation elements video1 and video2 are presented. This time reference is available inside sub-presentation seq1, but through the interface defined in line 9 it becomes also available to the enclosing parallel sub-presentation. According to the timing interface of sub-presentation seq2, which is defined in line 9, the time reference exported by seq1 is to be used inside seq2. So the duration of the textual presentation elements of lines 10\u201313 is synchronised with the presentation of the video presentation elements.\n"]}},{"@attributes":{"id":"p-0034","num":"0081"},"figref":"FIG. 5","b":["516","518","520","518","520"]},{"@attributes":{"id":"p-0035","num":"0082"},"figref":["FIG. 6","FIG. 5"],"b":["602","604","606"],"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":["(1) .","(2) .","(3) .","(4) <par>","(5) <seq id = \u201cseq1\u201d export clock x_origin = \u201c0\u201d y_origin = \u201c0\u201d>","(6) <video id = \u201cvideo1\u201d>","(7) <video id = \u201cvideo2\u201d>","(8) <\/seq>","(9) <seq id = \u201cseq2\u201d clock = \u201cseq1\u201d x_origin = \u201c0\u201d y_origin = \u201c80\u201d>","(10) <text id = \u201ctxt1\u201d dur = \u201c10s\u201d>","(11) <text id = \u201ctxt2\u201d dur = \u201c10s\u201d>","(12) <text id = \u201ctxt3\u201d dur = \u201c10s\u201d>","(13) <text id = \u201ctxt4\u201d dur = \u201c10s\u201d>","(14)<\/seq>","(15)<\/par>","(16) .","(17) .","(18) .\n\nThis coded presentation results in the same presentation as the previous one, but in somewhat larger frames. Such difference in frames could be used to prepare a presentation for a TV screen with a traditional aspect ratio of 4:3 and a presentation for a wide-screen TV with an aspect ratio of 16:9. The following coded presentation is useful in particular for that purpose:\n","(1) .","(2) .","(3) .","(4) <par x_origin = \u201c0\u201d y_origin = \u201c0\u201d>","(5) <seq id = \u201cseq1\u201d export clock>","(6) <video id = \u201cvideo1\u201d>","(7) <video id = \u201cvideo2\u201d>","(8) <\/seq>","(9) <seq id = \u201cseq2\u201d clock = \u201cseq1\u201d y_origin = \u201c80\u201d>","(10) <text id = \u201ctxt1\u201d dur = \u201c10s\u201d>","(11) <text id = \u201ctxt2\u201d dur = \u201c10s\u201d>","(12) <text id = \u201ctxt3\u201d dur = \u201c10s\u201d>","(13) <text id = \u201ctxt4\u201d dur = \u201c110s\u201d>","(14)<\/seq>","(15)<\/par>","(16) .","(17) .","(18) .\n\nThe x_origin defined in line 4 is valid for the whole parallel sub-presentation. This means that changing from wide-screen, as in the coded presentation above, to traditional screen requires only amending line 4 to:\n","(4)<par x_origin = \u201c30\u201d y_origin = \u201c0\u201d>\n\nThen the whole presentation starts at an offset of 30.\n"]}},{"@attributes":{"id":"p-0036","num":"0120"},"figref":"FIG. 7","b":"700","ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":["(1) .","(2) .","(3) .","(4) <par>","(5) <img id = \u201cfr\u201d layer = \u201c3\u201d>","(6) <par layer = \u201c2\u201d>","(7) <img id = \u201cim1\u201d layer = \u201c5\u201d>","(8) <img id = \u201cim2\u201d layer = \u201c3\u201d>","(9) <img id =\u201cim3\u201d layer =\u201c1\u201d>","(10) <\/par>","(11) <img id = \u201cbck\u201d layer = \u201c1\u201d>","(12) <\/par>","(13) .","(14) .","(15) .\n\nIn the coded presentation, the number of a layer determines which layer is on top of which other layer and consequently which layer is visible at the expense of another. A higher layer number is displayed in front of a lower layer number. The example comprises a parallel sub-presentation defined in lines 4\u201312, comprising image fr at layer 3, a parallel sub-presentation of images at layer 2 and image bck at layer 1. This means that image fr is always on top of other images, that image bck is at the back of other images and that the group of images of the sub-presentation is between fr and bck. The parallel sub-presentation of images is defined in lines 6\u201310 and comprises image im1 at layer 5, image im2 at layer 3 and image im1 at layer 1. It is to be noted that these layer numbers refer to the frame of reference of the sub-presentation, which frame is not available outside the sub-presentation. So the layer numbers indicate the relative position of layers within the sub-presentation, which itself resides at the level of the presentation at layer 2. So, image im1 having local layer number 5 is not on top of image fr having layer number 3 simply because from the perspective of image fr all images of the sub-presentation reside on layer 2. The local layer number is not available at the level of the presentation and cannot be compared with the layer number of image fr.\n"]}},"The examples given refer to a coded presentation with sub-presentations which have an interface providing a time and\/or a location frame of reference according to the invention. Sub-presentations may be nested, i.e. a sub-presentation may include another sub-presentation, whereby the included sub-presentation also has such a timing and\/or location interface. The concept of interface may also be extended to the coded presentation as a whole. The timing aspects and the location aspects of such a coded presentation are then fully described in the interface. This makes it possible to substitute one coded presentation with another, provided that the interfaces are the same. Furthermore, it is possible then to treat the coded presentation as a sub-presentation and to include a coded presentation in another coded presentation. This may be used for dividing the presentation into two sub-presentations and to offer the user a choice as to which sub-presentation must be played out. Offering this choice may be implemented as presenting the user two still images, representing the respective sub-presentations. A selection by the user of one of the images results in play out of the corresponding sub-presentation. Additionally, the absence of a user selection during a predetermined time may result in the sequential play out of the sub-presentations. Note that the, in this example two, sub-presentations relate to each other as one sub-presentation being contained by the others sub-presentation. The part of the one sub-presentation is not played out if the user\/machine selects the other sub-presentation.",{"@attributes":{"id":"p-0038","num":"0137"},"figref":"FIG. 8","b":["800","802","804","806","808","810","810","812","814","816","818","820","818","820","822","804"]},"The apparatus may be provided with a converter module  that is capable of substituting one specific sub-presentation with a predetermined sub-presentation. Apart from being incorporated in the playback apparatus, the converter module may be implemented in a stand-alone apparatus whose only function is to substitute the sub-presentation. The substitution may be executed off-line on the coded presentation stored in the storage medium. The result is either the modified coded presentation or a new copy of the presentation containing the amendment. The substitution may also be executed real-time, while the coded presentation is being played out. In this case, the converter apparatus receives the original coded presentation, either from a storage medium or from a network, and outputs a coded presentation containing the amendment. So the converter apparatus may produce as output a coded presentation described in the same format as the coded presentation that the apparatus received as input."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention and its attendant advantages will be further elucidated with the aid of exemplary embodiments and the accompanying schematic drawings, wherein:",{"@attributes":{"id":"p-0017","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0023"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0023","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0025"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
