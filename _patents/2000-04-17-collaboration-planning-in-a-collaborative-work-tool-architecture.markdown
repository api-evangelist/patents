---
title: Collaboration planning in a collaborative work tool architecture
abstract: The present disclosure provides for affording collaboration planning in a collaborative work tool architecture. A client user interface including an activity data field is provided. Then, activity data is received from a facilitator user, wherein the activity data includes a start time for the activity and a duration of the activity. The received activity data is then stored on a server via a network. Finally, a multiple of participant users are allowed access to the stored activity data via the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07082430&OS=07082430&RS=07082430
owner: Accenture LLP
number: 07082430
owner_city: Palo Alto
owner_country: US
publication_date: 20000417
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present invention relates to meeting facilitating software and more particularly to electronic, collaborative work tools.","It is a problem in the field of scheduling systems to provide a calendar based system which is both simple to use and provides adequate functionality to justify a company or user in investing in and making use of such a system. There are numerous calendar based time planning systems presently available, and many of these are paper based wherein the user is provided with a calendar which is segmented by a particular time period desired by the user. There are daily, weekly, monthly calendar systems and systems which incorporate combinations of these time periods to enable an individual to schedule meetings and to plan out their daily activities. What differentiates the various scheduling systems embodied in these calendars is the additional features provided by the format used to present the calendar information to the individual. These various formats are typically directed to enabling the individual to list important tasks to be accomplished during the noted time period and\/or record expenses that are incurred by the individual in the pursuance of their business.","The scheduling systems of the prior art also include software based systems which typically automate the existing well known paper based systems. The software based scheduling systems provide further enhancements in the form of an address book and other such data management capabilities. These enhancements are disjunct in that they do not integrate with the basic functionality provided by the calendar system. Thus, the software based scheduling systems provide little additional functionality above and beyond those provided by the paper based systems and do not in and of themselves represent a breakthrough in the field of scheduling systems.","Numerous devices and methods have been employed by individuals to record a schedule of activities. Most notably, the Daytimer.TM. organizer, a notebook calendar based system has been provided to record appointments, activities and the like. Another calendar based system for recording an activity schedule is disclosed in U.S. Pat. No. 5,271,172 by Ureta. Ureta discloses a calendar system having a separate day sheet for each day where each of the day sheets has on one side a grid with numbered rows for recording activities. On the other side of each day sheet in Ureta, is a 24 hour clock surrounded by 48 enclosed spaces disposed at one half hour increments. Ureta discloses that reference numbers corresponding to activities recorded in the numbered rows on the opposite side of the day sheet can be written in each of these enclosed spaces around the 24 hour clock thereby recording a schedule of activities for a given day. A number of such devises are well known in the art. Maintaining reliable personal schedules has long been a concern of people confronted with numerous and varied activities.","Notwithstanding the presence in the prior art of a number of highly effective scheduling systems such as those referred to above there is a need for a simple scheduling device that can be used by people participating in scheduled activities. More particularly, those participating in an organized group activity require a means to network more effectively.","The present invention provides for affording collaboration planning in a collaborative work tool architecture. A client user interface including an activity data field is provided. Then activity data is received from a facilitator user, wherein the activity data includes a start time for the activity and a duration of the activity. The received activity data is then stored on a server via a network. Finally, a multiple of participant users are allowed access to the stored activity data via the network.","In one aspect of the present invention, the activity data is accessed by the participant users asynchronously. In another aspect, the activity data is accessed by the participant users synchronously.","In one embodiment of the present invention, the collaborative work tool architecture is non-distributed. In another embodiment, the collaborative work tool architecture is distributed. Additionally, the client user interface may be capable of facilitating real-time user discussion utilizing a chat window.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 1","b":["100","102","104","106","108"]},"The present invention is a platform-independent tool that supports both asynchronous and synchronous sessions, independent of the physical whereabouts of the participants. The present invention offers a range of activities, \u2014such as brainstorming and discussion. Advantageously, the present invention provides ease of installation and use, over 300 session participants at a time, high level of security, client-server architecture support, and dial-up capability.","The present invention is an electronic, collaborative work tool that enables efficient and effective collaboration and communication in work sessions between two or more people independent of time and place.","The present invention is further capable of connecting a company's knowledge capital over a network, such as an intranet or the Internet. Further, the present invention provides users with a powerful set of collaborative tools that can help the user achieve their objectives.","Due to its possibilities of both hosting an asynchronous and a distributed meeting, the present invention offers more functionality in its design than a conventional meeting facilitating software. The graphic user interface and the simplicity of use of the present invention are strong points in its advantage. The transparency of the program is a key feature, since the user spends time working on the meeting and the problems therein instead of getting to grips with the program.","To facilitate discussion, important terms related to the present invention will now be defined. The term Groupware refers computer-mediated collaboration that increases the productivity or functionality of person-to-person processes. Groupware services can include the sharing of calendars, collective writing, e-mail handling, shared database access, electronic meetings with each person able to see and display information, and other activities. A taxonomy of collaborative tools will include electronic mail and messaging, group calendaring and scheduling, electronic meeting systems, desktop video and real-time data conferencing (synchronous), non real-time data conferencing (asynchronous), group document handling, workflow and workgroup utilities, development tools groupware frameworks, groupware services, groupware applications and collaborative, internet-based applications and products.","Groupware as a term thus encompasses all tools that allow for distributed collaboration, independent of whether they are synchronous or asynchronous.","The terms asynchronous\/synchronous refer to the time-aspect of the meeting hosted on the groupware. With the term asynchronous it is meant that the participants do not have to be attending the session simultaneously. Synchronous tools open up for real-time meetings, i.e. all participants are collaborating at the same time. The present invention is made to facilitate for both kinds of sessions.","Distributed\/undistributed refer to the physical placements of the participants. Distributed tools open up for participants that are connected to the tool from remote locations, whilst undistributed groupware demands that the participants are close to each other. The present invention allows for both distributed and undistributed forms of meetings.","Group functionality allows for a structured organisation of users. It also increases security by restricting access between the client users of the present invention. Users will not be able to see users from other companies.","In addition the group functionality eases customer support, since the firm administrator will be the first-line responsible support. The firm administrator may then contact central support if the need arises.","The voting activity consists of three different voting \u201cschemes\u201d: Yes\/No, Scale of Agreement and Scale of Numbers. The Scale of Numbers voting scheme (\u201cscale\u201d) is now reprogrammed to allow for the facilitator to specify the range of the scale used in a voting activity. Thus the facilitator may find it useful to have a \u201c1 to 3\u201d-range, or a 2\u20137 or anything between 1 and 10 (inclusive).","Additionally the facilitator may choose not to participate in the voting, which thus enables groups where the facilitator should observe a discrete and neutral role. The facilitator may skip the voting altogether, and see the results as the participants vote. The facilitator (and participants after they have voted) will also be able to see the spread of the scale voting.","Present invention offers three methods of contributing text to a session: Brainstorming, Discussion, Categorization. Brainstorming does not allow for replies (ref. normal brainstorming). Discussion allows for replies, whilst Categorization allows the facilitator (only) to structure the contributions by specifying categories where the participants may put their contributions. If the participants do not put their contributions in the correct category (or even the right activity)\u2014the facilitator may move these to the appropriate category.","The facilitator is responsible for planning, conducting and following up the session (meeting). In that regard he must invite people to a session (and create user IDs for the ones that do not have access to the electronic collaborative work environment) and check to see that everything is clear. During the session, the facilitator conducts the session (moves through the agenda), and helps with questions. After the session, the facilitator has a responsibility of following up the session with regard to tasks and participants' wishes. Amongst these responsibilities is distributing the report, although everyone participating may create one at any time. Present invention supports these processes.","Inviting people: present invention has its own user database which contains information about the user, this includes:\n\n","The facilitator may only invite people who does not have access to the system through the invitation system. If he needs to invite people who do not yet have access to the program, then he must contact the system administrator who is able to create a user profile for the ones the facilitator needs to be invited. This process is very quick, and includes sending out a mail with user ID and password (and installation files).","The facilitator conducts the session by starting and stopping activities (participants may not contribute to an activity that is not active). In addition the participant may send pop-up chat messages to get everyone's attention whilst using present invention. The participants generally click on an \u201cOK\u201d-button for the message-box to disappear.","There are two types of system administrators: client company administrator (CCA) and super-administrator (SA). The client company administrator is responsible for the use of the present invention within the client organisation. Thus client employees who need access to the system contact the CCA to get the installation file and basic support. In addition, the CCA will be responsible to update and maintain the current user list from that specific client company. The CCA is also able to create company groups. He is not able to view or edit other companies' users. The CCA is able to designate roles.","The SA is able to create client company administrators and designate roles (administrator, normal user or guest user) for any company. He does not have access to specific sessions (due to security issues). The SA is able to support the CCA with more advanced support questions.","These roles are supported by present invention. By screening the information sent out to the CCA, present invention enables a secure environment for several companies to work on the same server. In addition, the SA has privileges which enable him to support the various processes.","In one embodiment, the present invention provides collaborative service over the Internet, to make a ubiquitous collaborative work environment.  is an illustration showing a ubiquitous collaborative work environment  in accordance with an embodiment of the present invention. The ubiquitous collaborative work environment  includes a physical collaborative work environment  having users , and an electronic collaborative work environment  having electronic agents  and collaborative software .","The electronic collaborative work environment utilizes the key elements of people, knowledge, services and supporting software. The ability to instantly share knowledge, search for information and work together will allow members of the collaborative work environment to co-operate on a new level. The collaborative work environment can be split into a physical component (people, knowledge services)\u2014CWE and an electronic component (supporting software).",{"@attributes":{"id":"p-0064","num":"0067"},"figref":"FIG. 1B","b":["126","126","128","130"]},"The electronic agents  act as intermediaries between the collaborative software  and the users . In addition each electronic agent serves as an intermediary between the user  and the electronic agent  of other users . electronic agents  aid users  in the search for others users  with the same interests and competencies. As such they are a part of the foundation to create virtual communities, and assist the user  in tasks. To illustrate with an example: The electronic agents  are able to search out users  with wanted competencies and other attributes and allow a user  through a directory service to pick the users  that comply with their requirements. These can then be invited to the user's personalised electronic collaborative work environment .","The electronic agent  also enables information gathering both within and outside the collaborative environment, by searching for information\/persons that might be of interest to the owner of the electronic agent. As such, extensive profiles may be utilised, to create a more proficient electronic agent. The more information the user enters about himself, the better equipped will the electronic agent  be to search and communicate with other agents\u2014and thus provide for a dynamic and vibrant community of users. The electronic agents aid the users to meet the right people at the right time.","Conventional meeting facilitating software ranges across a wide field of asynchronous, synchronous, distributed and undistributed forms of virtual collaboration. The problem with conventional meeting facilitating software is that they are not made for supporting the meeting process.","A preferred embodiment of a system in accordance with the present invention is preferably practiced in the context of a personal computer such as an IBM compatible personal computer, Apple Macintosh computer or UNIX based workstation. A representative hardware environment is depicted in , which illustrates a typical hardware configuration of a workstation in accordance with a preferred embodiment having a central processing unit , such as a microprocessor, and a number of other units interconnected via a system bus . The workstation shown in  includes a Random Access Memory (RAM) , Read Only Memory (ROM) , an I\/O adapter  for connecting peripheral devices such as disk storage units  to the bus , a user interface adapter  for connecting a keyboard , a mouse , a speaker , a microphone , and\/or other user interface devices such as a touch screen (not shown) to the bus , communication adapter  for connecting the workstation to a communication network (e.g., a data processing network) and a display adapter  for connecting the bus  to a display device . The workstation typically has resident thereon an operating system such as the Microsoft Windows NT or Windows\/95 Operating System (OS), the IBM OS\/2 operating system, the MAC OS, or UNIX operating system. Those skilled in the art will appreciate that the present invention may also be implemented on platforms and operating systems other than those mentioned.","A preferred embodiment is written using JAVA, C, and the C++ language and utilizes object oriented programming methodology. Object oriented programming (OOP) has become increasingly used to develop complex applications. As OOP moves toward the mainstream of software design and development, various software solutions require adaptation to make use of the benefits of OOP. A need exists for these principles of OOP to be applied to a messaging interface of an electronic messaging system such that a set of OOP classes and objects for the messaging interface can be provided.","OOP is a process of developing computer software using objects, including the steps of analyzing the problem, designing the system, and constructing the program. An object is a software package that contains both data and a collection of related structures and procedures. Since it contains both data and a collection of structures and procedures, it can be visualized as a self-sufficient component that does not require other additional structures, procedures or data to perform its specific task. OOP, therefore, views a computer program as a collection of largely autonomous components, called objects, each of which is responsible for a specific task. This concept of packaging data, structures, and procedures together in one component or module is called encapsulation.","In general, OOP components are reusable software modules which present an interface that conforms to an object model and which are accessed at run-time through a component integration architecture. A component integration architecture is a set of architecture mechanisms which allow software modules in different process spaces to utilize each others capabilities or functions. This is generally done by assuming a common component object model on which to build the architecture. It is worthwhile to differentiate between an object and a class of objects at this point. An object is a single instance of the class of objects, which is often just called a class. A class of objects can be viewed as a blueprint, from which many objects can be formed.","OOP allows the programmer to create an object that is a part of another object. For example, the object representing a piston engine is said to have a composition-relationship with the object representing a piston. In reality, a piston engine comprises a piston, valves and many other components; the fact that a piston is an element of a piston engine can be logically and semantically represented in OOP by two objects.","OOP also allows creation of an object that \u201cdepends from\u201d another object. If there are two objects, one representing a piston engine and the other representing a piston engine wherein the piston is made of ceramic, then the relationship between the two objects is not that of composition. A ceramic piston engine does not make up a piston engine. Rather it is merely one kind of piston engine that has one more limitation than the piston engine; its piston is made of ceramic. In this case, the object representing the ceramic piston engine is called a derived object, and it inherits all of the aspects of the object representing the piston engine and adds further limitation or detail to it. The object representing the ceramic piston engine \u201cdepends from\u201d the object representing the piston engine. The relationship between these objects is called inheritance.","When the object or class representing the ceramic piston engine inherits all of the aspects of the objects representing the piston engine, it inherits the thermal characteristics of a standard piston defined in the piston engine class. However, the ceramic piston engine object overrides these ceramic specific thermal characteristics, which are typically different from those associated with a metal piston. It skips over the original and uses new functions related to ceramic pistons.","Different kinds of piston engines have different characteristics, but may have the same underlying functions associated with it (e.g., how many pistons in the engine, ignition sequences, lubrication, etc.). To access each of these functions in any piston engine object, a programmer would call the same functions with the same names, but each type of piston engine may have different\/overriding implementations of functions behind the same name. This ability to hide different implementations of a function behind the same name is called polymorphism and it greatly simplifies communication among objects.","With the concepts of composition-relationship, encapsulation, inheritance and polymorphism, an object can represent just about anything in the real world. In fact, one's logical perception of the reality is the only limit on determining the kinds of things that can become objects in object-oriented software. Some typical categories are as follows:\n\n","With this enormous capability of an object to represent just about any logically separable matters, OOP allows the software developer to design and implement a computer program that is a model of some aspects of reality, whether that reality is a physical entity, a process, a system, or a composition of matter. Since the object can represent anything, the software developer can create an object which can be used as a component in a larger software project in the future.","If 90% of a new OOP software program consists of proven, existing components made from preexisting reusable objects, then only the remaining 10% of the new software project has to be written and tested from scratch. Since 90% already came from an inventory of extensively tested reusable objects, the potential domain from which an error could originate is 10% of the program. As a result, OOP enables software developers to build objects out of other, previously built objects.","This process closely resembles complex machinery being built out of assemblies and sub-assemblies. OOP technology, therefore, makes software engineering more like hardware engineering in that software is built from existing components, which are available to the developer as objects. All this adds up to an improved quality of the software as well as an increased speed of its development.","Programming languages are beginning to fully support the OOP principles, such as encapsulation, inheritance, polymorphism, and composition-relationship. With the advent of the C++ language, many commercial software developers have embraced OOP. C++ is an OOP language that offers a fast, machine-executable code. Furthermore, C++ is suitable for both commercial-application and systems-programming projects. For now, C++ appears to be the most popular choice among many OOP programmers, but there is a host of other OOP languages, such as Smalltalk, Common Lisp Object System (CLOS), and Eiffel. Additionally, OOP capabilities are being added to more traditional popular computer programming languages such as Pascal.","The benefits of object classes can be summarized, as follows:\n\n","Inevitably, similar pieces of code end up doing similar things in slightly different ways and do not work as well together as they should. Class libraries are very flexible. As programs grow more complex, more programmers are forced to reinvent basic solutions to basic problems over and over again. A relatively new extension of the class library concept is to have a framework of class libraries. This framework is more complex and consists of significant collections of collaborating classes that capture both the small scale patterns and major mechanisms that implement the common requirements and design in a specific application domain. They were first developed to free application programmers from the chores involved in displaying menus, windows, dialog boxes, and other standard user interface elements for personal computers.","Frameworks also represent a change in the way programmers think about the interaction between the code they write and code written by others. In the early days of procedural programming, the programmer called libraries provided by the operating system to perform certain tasks, but basically the program executed down the page from start to finish, and the programmer was solely responsible for the flow of control. This was appropriate for printing out paychecks, calculating a mathematical table, or solving other problems with a program that executed in just one way.","The development of graphical user interfaces began to turn this procedural programming arrangement inside out. These interfaces allow the user, rather than program logic, to drive the program and decide when certain actions should be performed. Today, most personal computer software accomplishes this by means of an event loop which monitors the mouse, keyboard, and other sources of external events and calls the appropriate parts of the programmer's code according to actions that the user performs. The programmer no longer determines the order in which events occur. Instead, a program is divided into separate pieces that are called at unpredictable times and in an unpredictable order. By relinquishing control in this way to users, the developer creates a program that is much easier to use. Nevertheless, individual pieces of the program written by the developer still call libraries provided by the operating system to accomplish certain tasks, and the programmer must still determine the flow of control within each piece after it's called by the event loop. Application code still \u201csits on top of\u201d the system.","Even event loop programs require programmers to write a lot of code that should not need to be written separately for every application. The concept of an application framework carries the event loop concept further. Instead of dealing with all the nuts and bolts of constructing basic menus, windows, and dialog boxes and then making these things all work together, programmers using application frameworks start with working application code and basic user interface elements in place. Subsequently, they build from there by replacing some of the generic capabilities of the framework with the specific capabilities of the intended application.","Application frameworks reduce the total amount of code that a programmer has to write from scratch. However, because the framework is really a generic application that displays windows, supports copy and paste, and so on, the programmer can also relinquish control to a greater degree than event loop programs permit. The framework code takes care of almost all event handling and flow of control, and the programmer's code is called only when the framework needs it (e.g., to create or manipulate a proprietary data structure).","A programmer writing a framework program not only relinquishes control to the user (as is also true for event loop programs), but also relinquishes the detailed flow of control within the program to the framework. This approach allows the creation of more complex systems that work together in interesting ways, as opposed to isolated programs, having custom code, being created over and over again for similar problems.","Thus, as is explained above, a framework basically is a collection of cooperating classes that make up a reusable design solution for a given problem domain. It typically includes objects that provide default behavior (e.g., for menus and windows), and programmers use it by inheriting some of that default behavior and overriding other behavior so that the framework calls application code at the appropriate times.","There are three main differences between frameworks and class libraries:\n\n","Implementation versus design. With class libraries, programmers reuse only implementations, whereas with frameworks, they reuse design. A framework embodies the way a family of related programs or pieces of software work. It represents a generic design solution that can be adapted to a variety of specific problems in a given domain. For example, a single framework can embody the way a user interface works, even though two different user interfaces created with the same framework might solve quite different interface problems.","Thus, through the development of frameworks for solutions to various problems and programming tasks, significant reductions in the design and development effort for software can be achieved. A preferred embodiment of the invention utilizes HyperText Markup Language (HTML) to implement documents on the Internet together with a general-purpose secure communication protocol for a transport medium between the client and ?. HTTP or other protocols could be readily substituted for HTML without undue experimentation. Information on these products is available in T. Berners-Lee, D. Connoly, \u201cRFC 1866: Hypertext Markup Language\u20142.0\u201d (November 1995); and R. Fielding, H, Frystyk, T. Berners-Lee, J. Gettys and J. C. Mogul, \u201cHypertext Transfer Protocol\u2014HTTP\/1.1: HTTP Working Group Internet Draft\u201d (May 2, 1996). HTML is a simple data format used to create hypertext documents that are portable from one platform to another. HTML documents are SGML documents with generic semantics that are appropriate for representing information from a wide range of domains. HTML has been in use by the World-Wide Web global information initiative since 1990. HTML is an application of ISO Standard 8879; 1986 Information Processing Text and Office Systems; Standard Generalized Markup Language (SGML).","To date, Web development tools have been limited in their ability to create dynamic Web applications which span from client to server and interoperate with existing computing resources. Until recently, HTML has been the dominant technology used in development of Web-based solutions. However, HTML has proven to be inadequate in the following areas:\n\n","Sun Microsystem's Java language solves many of the client-side problems by:\n\n","With Java, developers can create robust User Interface (UI) components. Custom \u201cwidgets\u201d (e.g., real-time stock tickers, animated icons, etc.) can be created, and client-side performance is improved. Unlike HTML, Java supports the notion of client-side validation, offloading appropriate processing onto the client for improved performance. Dynamic, real-time Web pages can be created. Using the above-mentioned custom UI components, dynamic Web pages can also be created.","Sun's Java language has emerged as an industry-recognized language for \u201cprogramming the Internet.\u201d Sun defines Java as: \u201ca simple, object-oriented, distributed, interpreted, robust, secure, architecture-neutral, portable, high-performance, multithreaded, dynamic, buzzword-compliant, general-purpose programming language. Java supports programming for the Internet in the form of platform-independent Java applets.\u201d Java applets are small, specialized applications that comply with Sun's Java Application Programming Interface (API) allowing developers to add \u201cinteractive content\u201d to Web documents (e.g., simple animations, page adornments, basic games, etc.). Applets execute within a Java-compatible browser (e.g., Netscape Navigator) by copying code from the server to client. From a language standpoint, Java's core feature set is based on C++. Sun's Java literature states that Java is basically, \u201cC++ with extensions from Objective C for more dynamic method resolution.\u201d","Another technology that provides similar function to JAVA is provided by Microsoft and ActiveX Technologies, to give developers and Web designers wherewithal to build dynamic content for the Internet and personal computers. ActiveX includes tools for developing animation, 3-D virtual reality, video and other multimedia content. The tools use Internet standards, work on multiple platforms, and are being supported by over 100 companies. The group's building blocks are called ActiveX Controls, small, fast components that enable developers to embed parts of software in hypertext markup language (HTML) pages. ActiveX Controls work with a variety of programming languages including Microsoft Visual C++, Borland Delphi, Microsoft Visual Basic programming system and, in the future, Microsoft's development tool for Java, code named \u201cJakarta.\u201d ActiveX Technologies also includes ActiveX Server Framework, allowing developers to create server applications. One of ordinary skill in the art readily recognizes that ActiveX could be substituted for JAVA without undue experimentation to practice the invention.",{"@attributes":{"id":"p-0097","num":"0124"},"figref":"FIG. 3","b":["300","302","304","306","308"]},"In one aspect of the present invention the participant users asynchronously access the activity data. In another aspect, the participant users synchronously access the activity data.","In one embodiment of the present innovation, the collaborative work tool architecture affords non-distributed work groups. In another embodiment, the collaborative work tool architecture affords distributed work groups.","Additionally, the client user interface may enable real-time user discussion utilizing a chat window.","When planning a meeting utilizing the present invention, a facilitator user is able to invite participant users to a session using the client user interface, discussed in greater detail subsequently. The facilitator user is then able to generate a list of activities, which is similar to an agenda, to occur during the session. The activities can be defined using at least six different activity tools, which are essentially collaboration techniques. These activity tools include, brainstorming tools, discussion tools, categorization tools, voting tools, action list (summary) tools, and external activity (breaks) tools.",{"@attributes":{"id":"p-0102","num":"0129"},"figref":"FIG. 4","b":["400","402","404","406"]},"In one aspect of the present invention, the activity may be defined as a brainstorming activity. Alternatively, the activity may be defined as a discussion activity. Optionally, the activity may be defined as a categorization activity. Also optionally, the activity may be defined as a voting activity. In addition, the activity may be defined as a summary activity.","In one embodiment of the present invention, a message window capable of displaying user messages in real-time may be displayed Additionally, the defined data may be sent to a specific participant user in response to user selection of the specific participant user from a participant user menu. In another embodiment, the defined activity may be sent to a database in response to user selection of a submit button.",{"@attributes":{"id":"p-0105","num":"0132"},"figref":"FIG. 5","b":["500","500","502","504","506","508","510"]},"The graphical user interface  further includes a list of predefined activity types , a real-time message window , and a participant menu . The user is further able to define the start time for the activity , the duration of the activity , and the title of the activity  using the list of activities  area of the graphical user interface .","In this manner, an activity list for a session may be created. Furthermore, other session participants may view the agenda in preparation for the session. Participants may further interact with one another using the real-time message window . The participant menu  may be selected using a computer pointing device. Once selected, the participant menu preferable displays a list of session participants to which a user may send messages and other information. Thus, using the participant menu , a user may direct communications to specific users, or choose to send communications to a group of users. Optionally, the participants users may use the participant menu (\u201cOnline Now\u201d)  to direct communications to specific users. Finally, during the session, the present invention determines a status  for each activity in the list of activities  utilizing the activity start time  and the activity duration .",{"@attributes":{"id":"p-0108","num":"0135"},"figref":"FIG. 6","b":["600","602","604","606","608","610","612"]},"In one aspect of the present invention, the meeting data may be voting data on a predefined topic. Optionally, the meeting data may be user readable sentences concerning a predefined topic. Alternatively, the data may be user readable assigned tasks as defined by the participant users.","In one embodiment of the present invention, the data may be accessed by the participant users asynchronously. In another embodiment, the data may be accessed by the participant users synchronously. In one embodiment of the present innovation, the collaborative work tool architecture affords non-distributed work groups. In another embodiment, the collaborative work tool architecture affords distributed work groups.","The present invention allows a user to conduct a session having formal collaboration, using the activity tools, and\/or informal communication, using the real-time message window. Moreover, the present invention allows the user to conduct multiple activities within a session simultaneously. Additionally, the user may conduct activities anonymously utilizing the present invention.",{"@attributes":{"id":"p-0112","num":"0139"},"figref":"FIG. 7","b":["700","700","702","704","704","706","706","708","710","712","714","716","718"]},"In use, a user may elect to participate in a session  by selecting a reply button  using a computer selection device, such as a mouse. In this manner, users may participate in multiple sessions simultaneously. Moreover, individual users may selectively indicate which sessions they will participate in and facilitator users may select which users to invite to particular sessions. As discussed in greater detail previously, the present invention determines a status  for each activity as the sessions proceed.",{"@attributes":{"id":"p-0114","num":"0141"},"figref":["FIG. 7A","FIG. 7B"],"b":["1","2","4","6","8"]},{"@attributes":{"id":"p-0115","num":"0142"},"figref":"FIG. 7B","b":["721","721","722","724","726","728","730","732","734","736"]},"In use, the user is further able to add \u201cbrainstorming\u201d ideas to the list of idea expressions  utilizing the contribution input window . The user enters their contribution into the contribution input window  and then submits the entered idea expression utilizing a submit button . The entered idea expression is then be listed in the brainstorming contribution window . It should be borne in mind that \u201cbrainstorming\u201d in the present invention generally allows only posting. This is, generally replies to idea contributions are not allowed in the brainstorming activity. For replies, the discussion activity is utilized, as discussed in greater detail subsequently.",{"@attributes":{"id":"p-0117","num":"0144"},"figref":["FIG. 7C","FIG. 7D"],"b":["740","742","744","746","748"]},{"@attributes":{"id":"p-0118","num":"0145"},"figref":["FIG. 7D","FIG. 7B","FIG. 7B"],"b":["750","750","752","754","756","758","760","750","762","764","766","768"]},"In operation, the user is further able to add \u201cdiscussion\u201d ideas to the list of discussion expressions  utilizing the contribution input window . The user enters their contribution into the contribution input window  and then submits the entered discussion expression utilizing a submit button . The entered discussion expression is then listed in the discussion contribution window .","The user is further able to reply to discussion expressions  utilizing the contribution input window . The user enters their reply into the contribution input window  and then submits the entered reply utilizing a reply button . The entered reply  is then listed in the discussion contribution window  under the corresponding discussion expression .",{"@attributes":{"id":"p-0121","num":"0148"},"figref":"FIG. 8","b":["800","802","804","806","808"]},"In one aspect of the present invention, the defined relationships between the nodes of the discussion tree are hieratical relationships. Additionally, the tree nodes of the discussion tree may be collapsible.","In one embodiment of the present invention, a message window capable of displaying real-time messages from participant users is displayed. In another embodiment, the real-time messages is sent to a specific participant user in response to selection of the specific participant user from a participant user menu. In yet a further embodiment, participant users may add contributions to the discussion categories by selecting a specific tree node from the discussion tree utilizing computer pointing device.",{"@attributes":{"id":"p-0124","num":"0151"},"figref":"FIG. 9","b":["900","900","902","904","906","908","902","904"]},"In use, participants may select discussion nodes to add their contributions to the various categories. In addition, to the formal collaboration using categorization activities, such as the discussion tree set forth above, informal communication may be accomplished utilizing the real-time message window . As described previously, users may communicate in real-time using the real-time message window  in conjunction with the participant menu . Hence, the present invention supports both formal and informal communication among participants of a session.",{"@attributes":{"id":"p-0126","num":"0153"},"figref":"FIG. 10","b":["1000","1002","1004","1006","1008","1010","1012"]},"In one aspect of the present invention, the voting window displays agreement voting information. Optionally, the voting window may display yes\/no voting information. Also optionally, the voting window may display customised scale voting information.","In one embodiment of the present invention, the voting window may display voting information on a plurality of issues. In another embodiment, a message window capable of displaying user messages real-time is displayed.",{"@attributes":{"id":"p-0129","num":"0156"},"figref":"FIG. 11","b":["1100","1100","1102","1104","1106","1100","1108","1110","1112"]},"In use, a user selects a voting issue  using the issue description . The user then selects their voting preference using the voting options  of the voting issue .  shows an example of agreement voting, however, preferably the present invention may support yes\/no voting and customised scale voting. The voting type display  shows the type of voting activity currently in use. At any point in the voting process, the present invention preferably allows the user to clear the voting field of all voting issues by selecting the clear votes button . Once the user is satisfied with their voting selections, the user submits their votes by selecting the final vote button .",{"@attributes":{"id":"p-0131","num":"0158"},"figref":"FIG. 12","b":["1200","1202","1204","1206","1208","1210","1212"]},"In one aspect of the present invention, the session report is generated as an HTML file. In another aspect, the facilitator user is allowed to edit the session report. In yet a further aspect, the session report is sent to the participant users via the network.","In one embodiment of the present invention, the network is the Internet. Optionally, the network may be an intranet. Additionally, the activity data may include a start time for the activity and a duration of the activity.","The present invention allows a session report to be created at anytime during a session. Moreover, the session report may include a selection or all of the activities listed for the session. Furthermore, the report may be saved as word processing document, such as a Microsoft Word document, and\/or an HTML file capable of being further edited in any text editor that supports HTML.",{"@attributes":{"id":"p-0135","num":"0162"},"figref":"FIG. 13","b":["1300","1300","1302","1304","1306","1308","1310","1302"]},"To assist in the creation of the session report, the graphical user interface  includes a session creation assistant . The session creation assistant  allows a user to select what will be included in the session report, such as a list of the session activities, a list of the session participants, and a list of the people invited but not participating in the session. Using the session creation assistant , a user may easily create session reports and distribute the reports to desired individuals.",{"@attributes":{"id":"p-0137","num":"0164"},"figref":"FIG. 14","b":["1400","1402","1404","1406","1408"]},"In one aspect of the present invention, the database further includes session reports. In another aspect, the user is allowed to search the database for a specific session report.","In one embodiment of the present invention, the session report is an HTML file. In another embodiment, the activity data is accessed by users asynchronously. Additionally, the collaborative work tool architecture may be distributed. Thus, the present invention allows archiving of session materials for later reference. Moreover, the present invention allows users to search the archived sessions for material they desire to use.",{"@attributes":{"id":"p-0140","num":"0167"},"figref":"FIG. 14A","b":["1420","1420","1422","1424","1426"]},"The client tier  includes swing services , swing workers , a client data model , and message receiver . Typically, the foregoing components execute in an operating system environment, such as Microsoft Windows 95\/98 .","The business tier  includes business services , adapters , a broadcaster , and a business object model . Generally, the adaptors  of the business tier  are utilized by the system to communicate with the swing workers  of the client tier .","The backend tier  includes database services , a database system , mail services , and a mail gateway . In operation, the database services component  is utilized by the system for bi-directional communicatation with the business object model  of the business tier . In addition, the mail services component  provides mail services to the business object model of the business tier. Typically, the backend tier executes on a service operating system such as Microsoft Windows NT. To provide secure transactions, BEA weblogic is used for security between the client tier  and the business tier , as discussed in greater detail with reference to .",{"@attributes":{"id":"p-0144","num":"0171"},"figref":"FIG. 14B","b":["1460","1460","1462","1464","1466"]},"As discussed previously, the client tier  communicates with the business tier  using the swing workers  and the message receiver  components. In this embodiment, the swing workers  and the message receiver  components communicate with the BEA Weblogic client , which authenticates the user, generally via a userID and password. The BEA Weblogic server  is then used for server authentication, generally by SSL using forty bits encryption.",{"@attributes":{"id":"p-0146","num":"0173"},"figref":"FIG. 15","b":"1500"},"In accordance with an embodiment of the present invention, a BackgroundFinder (BF) is implemented as an agent responsible for preparing an individual for an upcoming meeting by helping him\/her retrieve relevant information about the meeting from various sources. BF receives input text in character form indicative of the target meeting. The input text is generated in accordance with an embodiment of the present invention by a calendar program that includes the time of the meeting. As the time of the meeting approaches, the calendar program is queried to obtain the text of the target event and that information is utilized as input to the agent. Then, the agent parses the input meeting text to extract its various components such as title, body, participants, location, time etc. The system also performs pattern matching to identify particular meeting fields in a meeting text. This information is utilized to query various sources of information on the web and obtain relevant stories about the current meeting to send back to the calendaring system. For example, if an individual has a meeting with Netscape and Microsoft to talk about their disputes, and would obtain this initial information from the calendaring system. It will then parse out the text to realize that the companies in the meeting are \u201cNetscape\u201d and \u201cMicrosoft\u201d and the topic is \u201cdisputes.\u201d Then, the system queries the web for relevant information concerning the topic. Thus, in accordance with an objective of the invention, the system updates the calendaring system and eventually the user with the best information it can gather to prepare the user for the target meeting. In accordance with an embodiment of the present invention, the information is stored in a file that is obtained via selection from a link imbedded in the calendar system.","Program Organization:","A computer program in accordance with an embodiment of the present invention is organized in five distinct modules: BF.Main, BF.Parse, Background Finder.Error, BF.PatternMatching and BF.Search. There is also a frmMain which provides a user interface used only for debugging purposes. The executable programs in accordance with an embodiment of the present invention never execute with the user interface and should only return to the calendaring system through Microsoft's Winsock control. An embodiment of the system executes in two different modes which can be specified under the command line sent to it by the calendaring system. When the system runs in simple mode, it executes a keyword query to submit to external search engines. When executed in complex mode, the system performs pattern matching before it forms a query to be sent to a search engine.","Data Structures:","The system in accordance with an embodiment of the present invention utilizes three user defined structures:\n\n","The user-defined structure, tMeetingRecord, is used to store all the pertinent information concerning a single meeting. This info includes userID, an original description of the meeting, the extracted list of keywords from the title and body of meeting etc. It is important to note that only one meeting record is created per instance of the system in accordance with an embodiment of the present invention. This is because each time the system is spawned to service an upcoming meeting, it is assigned a task to retrieve information for only one meeting. Therefore, the meeting record created corresponds to the current meeting examined. ParseMeetingText populates this meeting record and it is then passed around to provide information about the meeting to other functions.","If GoPatternMatch can bind any values to a particular meeting field, the corresponding entries in the meeting record is also updated. The structure of tMeetingRecord with each field described in parentheses is provided below in accordance with an embodiment of the present invention.","Public Type tMeetingRecord",{"@attributes":{"id":"p-0152","num":"0000"},"ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":{"@attributes":{"id":"ul0013-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":["sUserID As String (user id given by Munin)","sTitleOrig As String (original non stop listed title we need to keep around to send back to Munin)","sTitleKW As String (stoplisted title with only keywords)","sBodyKW As String (stoplisted body with only keywords)","sCompany( ) As String (companies identified in title or body through pattern matching)","sTopic( ) As String (topics identified in title or body through pattern matching)","sPeople( ) As String (people identified in title or body through pattern matching)","sWhen( ) As String (time identified in title or body through pattern matching)","sWhere( ) As String (location identified in title or body through pattern matching)","sLocation As String (location as passed in by Munin)","sTime As String (time as passed in by Munin)","sParticipants( ) As String (all participants engaged as passed in by Munin)","sMeetingText As String (the original meeting text w\/o userid)\n\nEnd Type\n"]}}}},"There are two other structures which are created to hold each individual pattern utilized in pattern matching. The record tAPatternRecord is an array containing all the components\/elements of a pattern. The type tAPatternElement is an array of strings which represent an element in a pattern. Because there may be many \u201csubstitutes\u201d for each element, we need an array of strings to keep track of what all the substitutes are. The structures of tAPatternElement and tAPatternRecord are presented below in accordance with an embodiment of the present invention.","Public Type tAPatternElement",{"@attributes":{"id":"p-0154","num":"0000"},"ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":{"@attributes":{"id":"ul0015-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":["elementArray( ) As String\n\nEnd Type\n\nPublic Type tAPatternRecord\n","patternArray( ) As tAPatternElement\n\nEnd Type\n\nUser Defined Constants:\n"]}}}},"Many constants are defined in each declaration section of the program which may need to be updated periodically as part of the process of maintaining the system in accordance with an embodiment of the present invention. The constants are accessible to allow dynamic configuration of the system to occur as updates for maintaining the code.","Included in the following tables are lists of constants from each module which I thought are most likely to be modified from time to time. However, there are also other constants used in the code not included in the following list. It does not mean that these non-included constants will never be changed. It means that they will change much less frequently.",{"@attributes":{"id":"p-0157","num":"0200"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"For the Main Module (BF.Main):"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PRESET",{}]},{"entry":["CONSTANT","VALUE","USE"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["MSGTOMUNIN_TYPE","6","Define the message"]},{"entry":[{},{},"number used to identify"]},{"entry":[{},{},"messages between BF"]},{"entry":[{},{},"and Munin"]},{"entry":["IP_ADDRESS_MUNIN","\u201c10.2.100.48\u201d","Define the IP address of"]},{"entry":[{},{},"the machine in which"]},{"entry":[{},{},"Munin and BF are"]},{"entry":[{},{},"running on so they can"]},{"entry":[{},{},"transfer data through"]},{"entry":[{},{},"UDP."]},{"entry":["PORT_MUNIN","7777","Define the remote port in"]},{"entry":[{},{},"which we are operating"]},{"entry":[{},{},"on."]},{"entry":["TIMEOUT_AV","60","Define constants for"]},{"entry":[{},{},"setting time out in inet"]},{"entry":[{},{},"controls"]},{"entry":["TIMEOUT_NP","60","Define constants for"]},{"entry":[{},{},"setting time out in inet"]},{"entry":[{},{},"controls"]},{"entry":["CMD_SEPARATOR","\u201c\\\u201d","Define delimiter to tell"]},{"entry":[{},{},"which part of Munin's"]},{"entry":[{},{},"command represents the"]},{"entry":[{},{},"beginning of our input"]},{"entry":[{},{},"meeting text."]},{"entry":["OUTPARAM_SEPARATOR","\u201c::\u201d","Define delimiter for"]},{"entry":[{},{},"separating out different"]},{"entry":[{},{},"portions of the output."]},{"entry":[{},{},"The separator is for"]},{"entry":[{},{},"delimiting the msg type,"]},{"entry":[{},{},"the user id, the meeting"]},{"entry":[{},{},"title and the beginning of"]},{"entry":[{},{},"the actual stories"]},{"entry":[{},{},"retrieved."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0158","num":"0201"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"For the Search Module (BF.Search):"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CURRENT",{}]},{"entry":["CONSTANT","VALUE","USE"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["PAST_NDAYS","5","Define number of days you"]},{"entry":[{},{},"want to look back for Alta"]},{"entry":[{},{},"Vista articles. Doesn't"]},{"entry":[{},{},"really matter now because we"]},{"entry":[{},{},"aren't really doing a news"]},{"entry":[{},{},"search in alta vista. We"]},{"entry":[{},{},"want all info."]},{"entry":["CONNECTOR_AV_URL","\u201c+AND+\u201d","Define how to connect key-"]},{"entry":[{},{},"words. We want all our key-"]},{"entry":[{},{},"words in the string so for"]},{"entry":[{},{},"now use AND. If you want to"]},{"entry":[{},{},"do an OR or something, just"]},{"entry":[{},{},"change connector."]},{"entry":["CONNECTOR_NP_URL","\u201c+AND+\u201d","Define how to connect key-"]},{"entry":[{},{},"words. We want all our key-"]},{"entry":[{},{},"words in the string so for"]},{"entry":[{},{},"now use AND. If you want to"]},{"entry":[{},{},"do an OR or something, just"]},{"entry":[{},{},"change connector."]},{"entry":["NUM_NP_STORIES","3","Define the number of stories"]},{"entry":[{},{},"to return back to Munin from"]},{"entry":[{},{},"NewsPage."]},{"entry":["NUM_AV_STORIES","3","Define the number of stories"]},{"entry":[{},{},"to return back to Munin"]},{"entry":[{},{},"from Alta Vista."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0159","num":"0202"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"For the Parse Module (BF.Parse):"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CURRENT",{}]},{"entry":["CONSTANT","VALUE","USE"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["PORTION_SEPARATOR","\u201c::\u201d","Define the separator"]},{"entry":[{},{},"between different"]},{"entry":[{},{},"portions of the meeting"]},{"entry":[{},{},"text sent in by Munin."]},{"entry":[{},{},"For example in"]},{"entry":[{},{},"\u201c09::Meet with"]},{"entry":[{},{},"Chad::about life:: Chad |"]},{"entry":[{},{},"Denise::::::\u201d \u201c::\u201d is the"]},{"entry":[{},{},"separator between"]},{"entry":[{},{},"different parts of the"]},{"entry":[{},{},"meeting text."]},{"entry":["PARTICIPANT_SEPARATOR","\u201c|\u201d","Define the separator"]},{"entry":[{},{},"between each participant"]},{"entry":[{},{},"in the participant list"]},{"entry":[{},{},"portion of the original"]},{"entry":[{},{},"meeting text. Refer to"]},{"entry":[{},{},"example above."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"For Pattern Matching Module (BFPatternMatch): There are no constants in this module which require frequent updates.","General Process Flow:","The best way to depict the process flow and the coordination of functions between each other is with the five flowcharts illustrated in .  depicts the overall process flow in accordance with an embodiment of the present invention. Processing commences at the top of the chart at function block  which launches when the program starts. Once the application is started, the command line is parsed to remove the appropriate meeting text to initiate the target of the background find operation in accordance with an embodiment of the present invention as shown in function block . A global stop list is generated after the target is determined as shown in function block . Then, all the patterns that are utilized for matching operations are generated as illustrated in function block . Then, by tracing through the chart, function block  invokes GoBF  which is responsible for logical processing associated with wrapping the correct search query information for the particular target search engine. For example, function block  flows to function block  and it then calls GoPatternMatch as shown in function block . To see the process flow of GoPatternMatch, we swap to the diagram titled \u201cProcess Flow for BF's Pattern Matching Unit.\u201d","One key thing to notice is that functions depicted at the same level of the chart are called by in sequential order from left to right (or top to bottom) by their common parent function. For example, Main  calls ProcessCommandLine , then CreateStopListist , then CreatePatterns , then GoBackgroundFinder .  detail the logic for the entire program, the parsing unit, the pattern matching unit and the search unit respectively.  details the logic determinative of data flow of key information through BackgroundFinder, and shows the functions that are responsible for creating or processing such information.","Search Architecture Under the Basic Search\/Simple Query Mode","Search ALTA VISTA (Function Block  of ):","The Alta Vista search engine utilizes the identifies and returns general information about topics related to the current meeting as shown in function block  of . The system in accordance with an embodiment of the present invention takes all the keywords from the title portion of the original meeting text and constructs an advanced query to send to Alta Vista. The keywords are logically combined together in the query. The results are also ranked based on the same set of keywords. One of ordinary skill in the art will readily comprehend that a date restriction or publisher criteria could be facilitated on the articles we want to retrieve. A set of top ranking stories are returned to the calendaring system in accordance with an embodiment of the present invention.","NewsPage (Function Block  of ):","The NewsPage search system is responsible for giving us the latest news topics related to a target meeting. The system takes all of the keywords from the title portion of the original meeting text and constructs a query to send to the NewsPage search engine. The keywords are logically combined together in the query. Only articles published recently are retrieved. The NewsPage search system provides a date restriction criteria that is settable by a user according to the user's preference. The top ranking stories are returned to the calendaring system.",{"@attributes":{"id":"p-0165","num":"0208"},"figref":"FIG. 17","b":["1700","1710","1720","1730","1740","1750","1780","1760","1762","1764","1766"]},"Pattern Matching:","Limitations Associated with a Simple Searching Method Include:","1. Because it relies on a stop list of unwanted words in order to extract from the meeting text a set of keywords, it is limited by how comprehensive the stop list is. Instead of trying to figure out what parts of the meeting text we should throw away, we should focus on what parts of the meeting text we want.","2. A simple search method in accordance with an embodiment of the present invention only uses the keywords from a meeting title to form queries to send to Alta Vista and NewsPage. This ignores an alternative source of information for the query, the body of the meeting notice. We cannot include the keywords from the meeting body to form our queries because this often results in queries which are too long and so complex that we often obtain no meaningful results.","3. There is no way for us to tell what each keyword represents. For example, we may extract \u201cAndy\u201d and \u201cGrove\u201d as two keywords. However, a simplistic search has no way knowing that \u201cAndy Grove\u201d is in fact a person's name. Imagine the possibilities if we could somehow intelligently guess that \u201cAndy Grove\u201d is a person's name. We can find out if he is an Andersen person and if so what kind of projects he's been on before etc. etc.","4. In summary, by relying solely on a stop list to parse out unnecessary words, we suffer from \u201cinformation overload\u201d.","Pattern Matching Overcomes these Limitations:","Here's how the pattern matching system can address each of the corresponding issues above in accordance with an embodiment of the present invention.","1. By doing pattern matching, we match up only parts of the meeting text that we want and extract those parts.","2. By performing pattern matching on the meeting body and extracting only the parts from the meeting body that we want. Our meeting body will not go to complete waste then.","3. Pattern matching is based on a set of templates that we specify, allowing us to identify people names, company names etc from a meeting text.","4. In summary, with pattern matching, we no longer suffer from information overload. Of course, the big problem is how well our pattern matching works. If we rely exclusively on artificial intelligence processing, we do not have a 100% hit rate. We are able to identify about 20% of all company names presented to us.","Patterns:","A pattern in the context of an embodiment of the present invention is a template specifying the structure of a phrase we are looking for in a meeting text. The patterns supported by an embodiment of the present invention are selected because they are templates of phrases which have a high probability of appearing in someone's meeting text. For example, when entering a meeting in a calendar, many would write something such as \u201cMeet with Bob Dutton from Stanford University next Tuesday.\u201d A common pattern would then be something like the word \u201cwith\u201d followed by a person's name (in this example it is Bob Dutton) followed by the word \u201cfrom\u201d and ending with an organization's name (in this case, it is Stanford University).","Pattern Matching Terminology:","Terminology associated with pattern matching includes:\n\n","In parentheses are the illustrative placeholders used in the code as representation of the corresponding meeting fields.","Each placeholder may have the following meaning:\n\n","The following table represents patterns supported by BF. Each pattern belongs to a pattern group. All patterns within a pattern group share a similar format and they only differ from each other in terms of what indicators are used as substitutes. Note that the patterns which are grayed out are also commented in the code. BF has the capability to support these patterns but we decided that matching these patterns is not essential at this point.",{"@attributes":{"id":"p-0182","num":"0242"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"char"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","1.1.1.1.1.1","$PEOPLE$ of","Paul Maritz of Microsoft"]},{"entry":[{},{},"$COMPANY$"]},{"entry":[{},"b","$PEOPLE$ from","Bill Gates, Paul Allen and"]},{"entry":[{},{},"$COMPANY$","Paul Maritz from Microsoft"]},{"entry":["2","a","$TOPIC_UPPER$ meeting","Push Technology Meeting"]},{"entry":[{},"b","$TOPIC_UPPER$ mtg","Push Technology Mtg"]},{"entry":[{},"c","$TOPIC_UPPER$ demo","Push Technology demo"]},{"entry":[{},"d","$TOPIC_UPPER$","Push Technology interview"]},{"entry":[{},{},"interview"]},{"entry":[{},"e","$TOPIC_UPPER$","Push Technology"]},{"entry":[{},{},"presentation","presentation"]},{"entry":[{},"f","$TOPIC_UPPER$ visit","Push Technology visit"]},{"entry":[{},"g","$TOPIC_UPPER$ briefing","Push Technology briefing"]},{"entry":[{},"h","$TOPIC_UPPER$","Push Technology"]},{"entry":[{},{},"discussion","discussion"]},{"entry":[{},"i","$TOPIC_UPPER$","Push Technology"]},{"entry":[{},{},"workshop","workshop"]},{"entry":[{},"j","$TOPIC_UPPER$ prep","Push Technology prep"]},{"entry":[{},"k","$TOPIC_UPPER$ review","Push Technology review"]},{"entry":[{},"l","$TOPIC_UPPER$ lunch","Push Technology lunch"]},{"entry":[{},"m","$TOPIC_UPPER$ project","Push Technology project"]},{"entry":[{},"n","$TOPIC_UPPER$ projects","Push Technology projects"]},{"entry":["3","a","$COMPANY$ corporation","Intel Corporation"]},{"entry":[{},"b","$COMPANY$ corp.","IBM Corp."]},{"entry":[{},"c","$COMPANY$ systems","Cisco Systems"]},{"entry":[{},"d","$COMPANY$ limited","IBM limited"]},{"entry":[{},"e","$COMPANY$ ltd","IBM ltd"]},{"entry":["4","a","about $TOPIC_ALL$","About intelligent agents"]},{"entry":[{},{},{},"technology"]},{"entry":[{},"b","discuss $TOPIC_ALL$","Discuss intelligent agents"]},{"entry":[{},{},{},"technology"]},{"entry":[{},"c","show $TOPIC_ALL$","Show the client our"]},{"entry":[{},{},{},"intelligent agents"]},{"entry":[{},{},{},"technology"]},{"entry":[{},"d","re: $TOPIC_ALL$","re: intelligent agents"]},{"entry":[{},{},{},"technology"]},{"entry":[{},"e","review $TOPIC_ALL$","Review intelligent agents"]},{"entry":[{},{},{},"technology"]},{"entry":[{},"f","agenda","The agenda is as follows:"]},{"entry":[{},{},{},"--clean up"]},{"entry":[{},{},{},"--clean up"]},{"entry":[{},{},{},"--clean up"]},{"entry":[{},"g","agenda: $TOPIC_ALL$","Agenda:"]},{"entry":[{},{},{},"--demo client intelligent"]},{"entry":[{},{},{},"agents technology."]},{"entry":[{},{},{},"--demo ecommerce."]},{"entry":["5","a","w\/$PEOPLE$ of","Meet w\/Joe Carter of"]},{"entry":[{},{},"$COMPANY$","Andersen Consulting"]},{"entry":[{},"b","w\/$PEOPLE$ from","Meet w\/Joe Carter from"]},{"entry":[{},{},"$COMPANY$","Andersen Consulting"]},{"entry":["6","a","w\/$COMPANY$ per","Talk w\/Intel per Jason"]},{"entry":[{},{},"$PEOPLE$","Foster"]},{"entry":["7","a","At $TIME$","at 3:00 pm"]},{"entry":[{},"b","Around $TIME$","Around 3:00 pm"]},{"entry":["8","a","At $LOCATION$","At LuLu's resturant"]},{"entry":[{},"b","In $LOCATION$","in Santa Clara"]},{"entry":["9","a","Per $PEOPLE$","per Susan Butler"]},{"entry":["10","a","call w\/$PEOPLE$","Conf call w\/John Smith"]},{"entry":[{},"B","call with $PEOPLE$","Conf call with John Smith"]},{"entry":["11","A","prep for $TOPIC_ALL$","Prep for London meeting"]},{"entry":[{},"B","preparation for","Preparation for London"]},{"entry":[{},{},"$TOPIC_ALL$","meeting"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0183","num":"0243"},"figref":"FIG. 18","b":["1800","1810","1820","1830","1840","1841","1842","1843","1844","1845","1846","1850","1852","1854","1860","1862","1864","1870","1880","1882"]},"Using the Identified Meeting Fields:","Now that we have identified fields within the meeting text which we consider important, there are quite a few things we can do with it. One of the most important applications of pattern matching is of course to improve the query we construct which eventually gets submitted to Alta Vista and News Page. There are also a lot of other options and enhancements which exploit the results of pattern matching that we can add to BF. These other options will be described in the next section. The goal of this section is to give the reader a good sense of how the results obtained from pattern matching can be used to help us obtain better search results.",{"@attributes":{"id":"p-0185","num":"0245"},"figref":"FIG. 19","b":["1900","1910","1930","1940","1960","1920","1921","1928"]},"Alta Vista Search Engine:","A strength of the Alta Vista search engine is that it provides enhanced flexibility. Using its advance query method, one can construct all sorts of Boolean queries and rank the search however you want. However, one of the biggest drawbacks with Alta Vista is that it is not very good at handling a large query and is likely to give back irrelevant results. If we can identify the topic and the company within a meeting text, we can form a pretty short but comprehensive query which will hopefully yield better results. We also want to focus on the topics found. It may not be of much merit to the user to find out info about a company especially if the user already knows the company well and has had numerous meetings with them. It's the topics they want to research on.","News Page Search Engine:","A strength of the News Page search engine is that it does a great job searching for the most recent news if you are able to give it a valid company name. Therefore when we submit a query to the news page web site, we send whatever company name we can identify and only if we cannot find one do we use the topics found to form a query. If neither one is found, then no search is performed. The algorithm utilized to form the query to submit to Alta Vista is illustrated in . The algorithm that we will use to form the query to submit to News Page is illustrated in .","The following table describes in detail each function in accordance with an embodiment of the present invention. The order in which functions appear mimics the process flow as closely as possible. When there are situations in which a function is called several times, this function will be listed after the first function which calls it and its description is not duplicated after every subsequent function which calls it.",{"@attributes":{"id":"p-0189","num":"0249"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Main","Public","None","This is the main function"]},{"entry":["(BF.Main)","Sub",{},"where the program first"]},{"entry":[{},{},{},"launches. It initialized BF"]},{"entry":[{},{},{},"with the appropriate"]},{"entry":[{},{},{},"parameters(e.g. Internet"]},{"entry":[{},{},{},"time-out, stoplist . . . ) and"]},{"entry":[{},{},{},"calls GoBF to launch the"]},{"entry":[{},{},{},"main part of the program."]},{"entry":["ProcessCommand-","Private","Main","This function parses the"]},{"entry":["Line","Sub",{},"command line. It assumes"]},{"entry":["(BF.Main)",{},{},"that the delimiter indicating"]},{"entry":[{},{},{},"the beginning of input from"]},{"entry":[{},{},{},"Munin is stored in the"]},{"entry":[{},{},{},"constant"]},{"entry":[{},{},{},"CMD_SEPARATOR."]},{"entry":["CreateStopList","Private","Main","This function sets up a stop"]},{"entry":["(BF.Main)","Function",{},"list for future use to parse out"]},{"entry":[{},{},{},"unwanted words from the"]},{"entry":[{},{},{},"meeting text."]},{"entry":[{},{},{},"There are commas on each"]},{"entry":[{},{},{},"side of each word to enable"]},{"entry":[{},{},{},"straight checking."]},{"entry":["CreatePatterns","Public","Main","This procedure is called once"]},{"entry":["(BF.Pattern","Sub",{},"when BF is first initialized to"]},{"entry":["Match",{},{},"create all the potential"]},{"entry":[{},{},{},"patterns that portions of the"]},{"entry":[{},{},{},"meeting text can bind to. A"]},{"entry":[{},{},{},"pattern can contain however"]},{"entry":[{},{},{},"many elements as needed."]},{"entry":[{},{},{},"There are"]},{"entry":[{},{},{},"two types of elements. The"]},{"entry":[{},{},{},"first type of elements are"]},{"entry":[{},{},{},"indicators. These are real"]},{"entry":[{},{},{},"words which delimit the"]},{"entry":[{},{},{},"potential of a meeting field"]},{"entry":[{},{},{},"(e.g. company) to follow."]},{"entry":[{},{},{},"Most of these indicators are"]},{"entry":[{},{},{},"stop words as expected"]},{"entry":[{},{},{},"because"]},{"entry":[{},{},{},"stop words are words"]},{"entry":[{},{},{},"usually common to all"]},{"entry":[{},{},{},"meeting text so it makes"]},{"entry":[{},{},{},"sense they form patterns. The"]},{"entry":[{},{},{},"second type of elements are"]},{"entry":[{},{},{},"special strings which"]},{"entry":[{},{},{},"represent placeholders."]},{"entry":[{},{},{},"A placeholder is always in"]},{"entry":[{},{},{},"the form of $*$ where * can"]},{"entry":[{},{},{},"be either PEOPLE,"]},{"entry":[{},{},{},"COMPANY,"]},{"entry":[{},{},{},"TOPIC_UPPER,"]},{"entry":[{},{},{},"TIME,LOCATION or"]},{"entry":[{},{},{},"TOPIC_ALL. A pattern can"]},{"entry":[{},{},{},"begin with either one of the"]},{"entry":[{},{},{},"two types of elements and"]},{"entry":[{},{},{},"can be however long,"]},{"entry":[{},{},{},"involving however any"]},{"entry":[{},{},{},"number\/type of elements."]},{"entry":[{},{},{},"This procedure dynamically"]},{"entry":[{},{},{},"creates a new pattern record"]},{"entry":[{},{},{},"for"]},{"entry":[{},{},{},"each pattern in the table and"]},{"entry":[{},{},{},"it also dynamically creates"]},{"entry":[{},{},{},"new tAPatternElements for"]},{"entry":[{},{},{},"each element within a"]},{"entry":[{},{},{},"pattern. In addition, there is"]},{"entry":[{},{},{},"the concept of being able to"]},{"entry":[{},{},{},"substitute indicators within a"]},{"entry":[{},{},{},"pattern. For example, the"]},{"entry":[{},{},{},"pattern $PEOPLE$ of"]},{"entry":[{},{},{},"$COMPANY$ is similar to"]},{"entry":[{},{},{},"the pattern $PEOPLE$ from"]},{"entry":[{},{},{},"$COMPANY$. \u201cfrom\u201d is a"]},{"entry":[{},{},{},"substitute for \u201cof\u201d. Our"]},{"entry":[{},{},{},"structure should be able to"]},{"entry":[{},{},{},"express such a need for"]},{"entry":[{},{},{},"substitution."]},{"entry":["GoBF","Public","Main","This is a wrapper proceduror"]},{"entry":["(BF.Main)","Sub",{},"that calls both the parsing"]},{"entry":[{},{},{},"and the searching"]},{"entry":[{},{},{},"subroutines of the"]},{"entry":[{},{},{},"BF. It is also responsible for"]},{"entry":[{},{},{},"sending data back to Munin."]},{"entry":["ParseMeeting","Public","GoBackGroundFinder","This function takes the initial"]},{"entry":["Text","Function",{},"meeting text and identifies"]},{"entry":["(BF.Parse)",{},{},"the userID of the record as"]},{"entry":[{},{},{},"well as other parts of the"]},{"entry":[{},{},{},"meeting text including the"]},{"entry":[{},{},{},"title, body, participant list,"]},{"entry":[{},{},{},"location and time. In"]},{"entry":[{},{},{},"addition, we call a helper"]},{"entry":[{},{},{},"function ProcessStopList to"]},{"entry":[{},{},{},"eliminate all the unwanted"]},{"entry":[{},{},{},"words from the original"]},{"entry":[{},{},{},"meeting title and meeting"]},{"entry":[{},{},{},"body so that only keywords"]},{"entry":[{},{},{},"are left. The information"]},{"entry":[{},{},{},"parsed out is stored in the"]},{"entry":[{},{},{},"MeetingRecord structure."]},{"entry":[{},{},{},"Note that this function does"]},{"entry":[{},{},{},"no error checking and for the"]},{"entry":[{},{},{},"most time assumes that the"]},{"entry":[{},{},{},"meeting text string is"]},{"entry":[{},{},{},"correctly formatted by"]},{"entry":[{},{},{},"Munin."]},{"entry":[{},{},{},"The important variable is"]},{"entry":[{},{},{},"thisMeeting Record is the"]},{"entry":[{},{},{},"temp holder for all info"]},{"entry":[{},{},{},"regarding current meeting."]},{"entry":[{},{},{},"It's eventually returned to"]},{"entry":[{},{},{},"caller."]},{"entry":["FormatDelimitation","Private","ParseMeetingText,","There are 4 ways in which"]},{"entry":["(BF.Parse)",{},"DeterminNumWords,","the delimiters can be placed."]},{"entry":[{},{},{},"We take care of all these"]},{"entry":[{},{},"GetAWordFromString","cases by reducing them"]},{"entry":[{},{},"String","down to Case 4 in which"]},{"entry":[{},{},{},"there are no delimiters"]},{"entry":[{},{},{},"around but only between"]},{"entry":[{},{},{},"fields in a stnng(e.g."]},{"entry":[{},{},{},"A::B::C)"]},{"entry":["DetermineNumWords","Public","ParseMeetingText,","This functions determines"]},{"entry":["(BF.Parse)","Function","ProcessStop","how many words there are in"]},{"entry":[{},{},{},"a string (stInEvalString) The"]},{"entry":[{},{},{},"function assumes that each"]},{"entry":[{},{},{},"word is separated by a"]},{"entry":[{},{},{},"designated separator as"]},{"entry":[{},{},{},"specified in stSeparator. The"]},{"entry":[{},{},{},"return type is an integer that"]},{"entry":[{},{},{},"indicates how many words"]},{"entry":[{},{},{},"have been found assuming"]},{"entry":[{},{},{},"each word"]},{"entry":[{},{},{},"in the string is separated by"]},{"entry":[{},{},{},"stSeparator. This function is"]},{"entry":[{},{},{},"always used along with"]},{"entry":[{},{},{},"GetAWordFromString and"]},{"entry":[{},{},{},"should be called before"]},{"entry":[{},{},{},"calling GetAWordFrom"]},{"entry":[{},{},{},"String."]},{"entry":["GetAWord-","Public","ParseMeetingText,","This function extracts the ith"]},{"entry":["FromString","Function","ProcessStopList","word of the"]},{"entry":["(BF.Parse)",{},{},"string(stInEvalString)"]},{"entry":[{},{},"List","assuming that each word in"]},{"entry":[{},{},{},"the string is separated by a"]},{"entry":[{},{},{},"designated"]},{"entry":[{},{},{},"separator contained in the"]},{"entry":[{},{},{},"variable stSeparator."]},{"entry":[{},{},{},"In most cases, use this"]},{"entry":[{},{},{},"function with"]},{"entry":[{},{},{},"DetermineNumWords. The"]},{"entry":[{},{},{},"function returns the wanted"]},{"entry":[{},{},{},"word. This function checks"]},{"entry":[{},{},{},"to make sure that"]},{"entry":[{},{},{},"iInWordNum is within"]},{"entry":[{},{},{},"bounds so that i"]},{"entry":[{},{},{},"is not greater than the total"]},{"entry":[{},{},{},"number of words in string or"]},{"entry":[{},{},{},"less than\/equal to zero. If it"]},{"entry":[{},{},{},"is out of bounds, we return"]},{"entry":[{},{},{},"empty string to indicate we"]},{"entry":[{},{},{},"can't get anything. We try to"]},{"entry":[{},{},{},"make sure this doesn't"]},{"entry":[{},{},{},"happen by calling"]},{"entry":[{},{},{},"DetermineNumWords first."]},{"entry":["ParseAndCleanPhrase","Private","ParseMeetingText","This function first grabs the"]},{"entry":["(BF.Parse)","Function",{},"word and send it to"]},{"entry":[{},{},{},"CleanWord in order strip"]},{"entry":[{},{},{},"the stuff that nobody wants."]},{"entry":[{},{},{},"There are things in"]},{"entry":[{},{},{},"parseWord that will kill"]},{"entry":[{},{},{},"the word, so we will need a"]},{"entry":[{},{},{},"method of looping through"]},{"entry":[{},{},{},"the body and rejecting"]},{"entry":[{},{},{},"words without killing the"]},{"entry":[{},{},{},"whole function"]},{"entry":[{},{},{},"i guess keep CleanWord and"]},{"entry":[{},{},{},"check a return value"]},{"entry":[{},{},{},"ok, now I have a word so I"]},{"entry":[{},{},{},"need to send it down the"]},{"entry":[{},{},{},"parse chain. This chain goes"]},{"entry":[{},{},{},"ParseCleanPhrase \u2014>"]},{"entry":[{},{},{},"CleanWord \u2014>"]},{"entry":[{},{},{},"EvaluateWord. If the word"]},{"entry":[{},{},{},"gets through the"]},{"entry":[{},{},{},"entire chain without being"]},{"entry":[{},{},{},"killed, it will be added at the"]},{"entry":[{},{},{},"end to our keyword string."]},{"entry":[{},{},{},"first would be the function"]},{"entry":[{},{},{},"that checks for \u201c\/\u201d as a"]},{"entry":[{},{},{},"delimiter and extracts the"]},{"entry":[{},{},{},"parts of that. This I will call"]},{"entry":[{},{},{},"\u201cStitchFace\u201d (Denise is more"]},{"entry":[{},{},{},"normal and calls it"]},{"entry":[{},{},{},"GetAWordFromString)"]},{"entry":[{},{},{},"if this finds words, then each"]},{"entry":[{},{},{},"of these will be sent, in turn,"]},{"entry":[{},{},{},"down the chain. If"]},{"entry":[{},{},{},"these get through the entire"]},{"entry":[{},{},{},"chain without being added or"]},{"entry":[{},{},{},"killed then they will be"]},{"entry":[{},{},{},"added rather than tossed."]},{"entry":["FindMin","Private","ParseAndClean-","This function takes in 6 input"]},{"entry":["(BF.Parse)","Function","Phrase","values and evaluates to see"]},{"entry":[{},{},{},"what the minimum non"]},{"entry":[{},{},{},"zero value is. It first creates"]},{"entry":[{},{},{},"an array as a holder so that"]},{"entry":[{},{},{},"we can sort the five"]},{"entry":[{},{},{},"input values in ascending"]},{"entry":[{},{},{},"order. Thus the minimum"]},{"entry":[{},{},{},"value will be the first non"]},{"entry":[{},{},{},"zero value element of the"]},{"entry":[{},{},{},"array. If we go through"]},{"entry":[{},{},{},"entire array without finding"]},{"entry":[{},{},{},"a non zero value, we know"]},{"entry":[{},{},{},"that there is an error and we"]},{"entry":[{},{},{},"exit the function."]},{"entry":["CleanWord","Private","ParseAndClean-","This function tries to clean"]},{"entry":["(BF.Parse)","Function","Phrase","up a word in a meeting text."]},{"entry":[{},{},{},"It first of all determines if the"]},{"entry":[{},{},{},"string is of a valid length. It"]},{"entry":[{},{},{},"then passes it through a"]},{"entry":[{},{},{},"series of tests to see it is"]},{"entry":[{},{},{},"clean and when needed, it"]},{"entry":[{},{},{},"will edit the word and strip"]},{"entry":[{},{},{},"unnecessary characters off of"]},{"entry":[{},{},{},"it. Such tests includes"]},{"entry":[{},{},{},"getting rid of file extensions,"]},{"entry":[{},{},{},"non chars, numbers etc."]},{"entry":["EvaluateWord","Private","ParseAndClean-","This function tests to see if"]},{"entry":["(BF.Parse)","Function","Phrase","this word is in the stop list so"]},{"entry":[{},{},{},"it can determine whether to"]},{"entry":[{},{},{},"eliminate the word from the"]},{"entry":[{},{},{},"original meeting text. If a"]},{"entry":[{},{},{},"word is not in the stoplist, it"]},{"entry":[{},{},{},"should stay around as a"]},{"entry":[{},{},{},"keyword and this function"]},{"entry":[{},{},{},"exits beautifully with no"]},{"entry":[{},{},{},"errors. However, if the"]},{"entry":[{},{},{},"words is a stopword, an error"]},{"entry":[{},{},{},"must be returned. We must"]},{"entry":[{},{},{},"properly delimit the input"]},{"entry":[{},{},{},"test string so we don't"]},{"entry":[{},{},{},"accidentally retrieve sub"]},{"entry":[{},{},{},"strings."]},{"entry":["GoPattemMatch","Public","GoBF","This procedure is called"]},{"entry":["(BF.Pattern","Sub",{},"when our QueryMethod is"]},{"entry":["Match",{},{},"set to complex query"]},{"entry":[{},{},{},"meaning we do want to do all"]},{"entry":[{},{},{},"the pattern matching stuff."]},{"entry":[{},{},{},"It's a simple wrapper function"]},{"entry":[{},{},{},"which initializes some arrays"]},{"entry":[{},{},{},"and then invokes pattern"]},{"entry":[{},{},{},"matching on the title and the"]},{"entry":[{},{},{},"body."]},{"entry":["MatchPatterns","Public","GoPatternMatch","This procedure loops through"]},{"entry":["(BF.Pattern","Sub",{},"every pattern in the pattern"]},{"entry":["Match)",{},{},"table and tries to identify"]},{"entry":[{},{},{},"different fields within a"]},{"entry":[{},{},{},"meeting text specified by"]},{"entry":[{},{},{},"sInEvalString. For"]},{"entry":[{},{},{},"debugging purposes it also"]},{"entry":[{},{},{},"tries to tabulate how many"]},{"entry":[{},{},{},"times a certain pattern was"]},{"entry":[{},{},{},"triggered and stores it in"]},{"entry":[{},{},{},"gTabulateMatches to see"]},{"entry":[{},{},{},"whichp pattern fired the"]},{"entry":[{},{},{},"most. gTabulateMatches is"]},{"entry":[{},{},{},"stored as a global because we"]},{"entry":[{},{},{},"want to be able to run a batch"]},{"entry":[{},{},{},"file of 40 or 50 test strings"]},{"entry":[{},{},{},"and still be able to know how"]},{"entry":[{},{},{},"often a pattern was triggered."]},{"entry":["MatchAPattern","Private","MatchPatterns","This function goes through"]},{"entry":["(BF.Pattern","Function",{},"each element in the current"]},{"entry":["Match)",{},{},"pattern. It first evaluates to"]},{"entry":[{},{},{},"determine whether element is"]},{"entry":[{},{},{},"a placeholder or an indicator."]},{"entry":[{},{},{},"If it is a placeholder, then it"]},{"entry":[{},{},{},"will try to bind the"]},{"entry":[{},{},{},"placeholder with some value."]},{"entry":[{},{},{},"If it is an indicator, then we"]},{"entry":[{},{},{},"try to locate it. There is a"]},{"entry":[{},{},{},"trick however. Depending on"]},{"entry":[{},{},{},"whether we are at current"]},{"entry":[{},{},{},"element is the head of the"]},{"entry":[{},{},{},"pattern or"]},{"entry":[{},{},{},"not we want to take different"]},{"entry":[{},{},{},"actions. If we are at the head,"]},{"entry":[{},{},{},"we want to look for the"]},{"entry":[{},{},{},"indicator or the placeholder."]},{"entry":[{},{},{},"If we can't find it, then we"]},{"entry":[{},{},{},"know that the current pattern"]},{"entry":[{},{},{},"doesn't exist and we quit."]},{"entry":[{},{},{},"However, if it is not the"]},{"entry":[{},{},{},"head, then we continue"]},{"entry":[{},{},{},"looking, because there may"]},{"entry":[{},{},{},"still be a head somewhere."]},{"entry":[{},{},{},"We retry in this case."]},{"entry":["MatchMeetingField","Private","MatchAPattern","This function uses a big"]},{"entry":["(BF.Pattern","Function",{},"switch statement to first"]},{"entry":["Match)",{},{},"determine what kind of"]},{"entry":[{},{},{},"placeholder we are talking"]},{"entry":[{},{},{},"about and depending on what"]},{"entry":[{},{},{},"type of placeholder, we have"]},{"entry":[{},{},{},"specific requirements"]},{"entry":[{},{},{},"and different binding criteria"]},{"entry":[{},{},{},"as specified in the"]},{"entry":[{},{},{},"subsequent functions called"]},{"entry":[{},{},{},"such as BindNames,"]},{"entry":[{},{},{},"BindTime etc. If binding is"]},{"entry":[{},{},{},"successful we add it to our"]},{"entry":[{},{},{},"guessing record."]},{"entry":["BindNames","Private","MatchMeeting-","In this function, we try to"]},{"entry":["(BF.Pattern","Function","Field","match names to the"]},{"entry":["Match)",{},{},"corresponding placeholder"]},{"entry":[{},{},{},"$PEOPLE$. Names are"]},{"entry":[{},{},{},"defined as any consecutive"]},{"entry":[{},{},{},"two words which are"]},{"entry":[{},{},{},"capitalized. We also what to"]},{"entry":[{},{},{},"retrieve a series of names"]},{"entry":[{},{},{},"which are connected by and ,"]},{"entry":[{},{},{},"or & so we look until we"]},{"entry":[{},{},{},"don't see any of these 3"]},{"entry":[{},{},{},"separators anymore. Note"]},{"entry":[{},{},{},"that we don't want to bind"]},{"entry":[{},{},{},"single word names because it"]},{"entry":[{},{},{},"is probably"]},{"entry":[{},{},{},"too general anyway so we"]},{"entry":[{},{},{},"don't want to produce broad"]},{"entry":[{},{},{},"but irrelevant results. This"]},{"entry":[{},{},{},"function calls"]},{"entry":[{},{},{},"BindAFullName which binds"]},{"entry":[{},{},{},"one name so in a since"]},{"entry":[{},{},{},"BindNames collects all the"]},{"entry":[{},{},{},"results from BindAFullName"]},{"entry":["BindAFullName","Private","BindNames","This function tries to bind a"]},{"entry":["(BF.Pattern","Function",{},"full name. If the $PEOPLE$"]},{"entry":["Match)",{},{},"placeholder is not the head of"]},{"entry":[{},{},{},"the pattern, we know that it"]},{"entry":[{},{},{},"has to come right at the"]},{"entry":[{},{},{},"beginning of the test string"]},{"entry":[{},{},{},"because we've been deleting"]},{"entry":[{},{},{},"stuff off the head of the"]},{"entry":[{},{},{},"string all along."]},{"entry":[{},{},{},"If it is the head, we search"]},{"entry":[{},{},{},"until we find something that"]},{"entry":[{},{},{},"looks like a full name. If we"]},{"entry":[{},{},{},"can't find it, then there's no"]},{"entry":[{},{},{},"such pattern in the text"]},{"entry":[{},{},{},"entirely and we quit entirely"]},{"entry":[{},{},{},"from this pattern. This"]},{"entry":[{},{},{},"should eventually return us"]},{"entry":[{},{},{},"to the next pattern in"]},{"entry":[{},{},{},"MatchPatterns."]},{"entry":["GetNextWord-","Private","BindAFullName,","This function grabs the next"]},{"entry":["AfterWhiteSpace",{},"BindTime,","word in a test string. It looks"]},{"entry":["(BF.Pattern",{},"BindCompanyTo-","for the next word after white"]},{"entry":["Match)",{},"picLoc","spaces, @ or \/. The word is"]},{"entry":[{},{},{},"defined to end when we"]},{"entry":[{},{},{},"encounter another one of"]},{"entry":[{},{},{},"these white spaces or"]},{"entry":[{},{},{},"separators."]},{"entry":["BindTime","Private","MatchMeeting-","Get the immediate next word"]},{"entry":["(BF.Pattern","Function","Field","and see if it looks like a time"]},{"entry":["Match)",{},"pattern.","If so we've found a"]},{"entry":[{},{},{},"time and so we want to add it"]},{"entry":[{},{},{},"to the record. We probably"]},{"entry":[{},{},{},"should add more time"]},{"entry":[{},{},{},"patterns. But people don't"]},{"entry":[{},{},{},"seem to like to enter the time"]},{"entry":[{},{},{},"in their titles these days"]},{"entry":[{},{},{},"especially since we now have"]},{"entry":[{},{},{},"tools like OutLook."]},{"entry":["BindCompanyTopicLoc","Private","MatchMeeting-","This function finds a"]},{"entry":["(BF.Pattern","Function","Field","continuous capitalized string"]},{"entry":["Match)",{},{},"and binds it to stMatch"]},{"entry":[{},{},{},"which is passed by reference"]},{"entry":[{},{},{},"from MatchMeetingField. A"]},{"entry":[{},{},{},"continuous capitalized string"]},{"entry":[{},{},{},"is a sequence of capitalized"]},{"entry":[{},{},{},"words which are not"]},{"entry":[{},{},{},"interrupted"]},{"entry":[{},{},{},"by things like, . etc. There's"]},{"entry":[{},{},{},"probably more stuff we can"]},{"entry":[{},{},{},"add to the list of"]},{"entry":[{},{},{},"interruptions."]},{"entry":["LocatePatternHead","Private","MatchAPattern","This function tries to locate"]},{"entry":["(BF.Pattern","Function",{},"an element which is an"]},{"entry":["Match)",{},{},"indicator. Note that this"]},{"entry":[{},{},{},"indicator SHOULD BE AT"]},{"entry":[{},{},{},"THE HEAD of the pattern"]},{"entry":[{},{},{},"otherwise it would have gone"]},{"entry":[{},{},{},"to the function"]},{"entry":[{},{},{},"LocateIndicator instead."]},{"entry":[{},{},{},"Therefore, we keep on"]},{"entry":[{},{},{},"grabbing the next word until"]},{"entry":[{},{},{},"either there's no word for us"]},{"entry":[{},{},{},"to grab (quit) or if we find"]},{"entry":[{},{},{},"one of the indicators we are"]},{"entry":[{},{},{},"looking for."]},{"entry":["ContainInArray","Private","LocatePattern-","\u2018This function is really"]},{"entry":["(BF.Pattern","Function","Head,","simple. It loops through all"]},{"entry":["Match)",{},"LocateIndicator","the elements in the array\u2019"]},{"entry":[{},{},{},"to find a matching string."]},{"entry":["LocateIndicator","Private","MatchAPattern","This function tries to locate"]},{"entry":["(BF.Pattern","Function",{},"an element which is an"]},{"entry":["Match)",{},{},"indicator. Note that this"]},{"entry":[{},{},{},"indicator is NOT at the head"]},{"entry":[{},{},{},"of the pattern otherwise it"]},{"entry":[{},{},{},"would have gone to"]},{"entry":[{},{},{},"LocatePatternHead instead."]},{"entry":[{},{},{},"Because of this, if our"]},{"entry":[{},{},{},"pattern is to be satisfied, the"]},{"entry":[{},{},{},"next word we grab HAS to"]},{"entry":[{},{},{},"be the indicator or else we"]},{"entry":[{},{},{},"would have failed. Thus we"]},{"entry":[{},{},{},"only grab one word, test to"]},{"entry":[{},{},{},"see if it is a valid indicator"]},{"entry":[{},{},{},"and then return result."]},{"entry":["InitializeGuesses-","Private","MatchAPattern","This function reinitializes"]},{"entry":["Record","Sub",{},"our temporary test structure"]},{"entry":["(BF.Pattern",{},{},"because we have already"]},{"entry":["Match)",{},{},"transferred the info to the"]},{"entry":[{},{},{},"permanent structure, we can"]},{"entry":[{},{},{},"reinitialize it so they each"]},{"entry":[{},{},{},"have one element"]},{"entry":["AddToMeetingRecord","Private","MatchAPattern","This function is only called"]},{"entry":["(BF.Pattern","Sub",{},"when we know that the"]},{"entry":["Match)",{},{},"information stored in"]},{"entry":[{},{},{},"tInCurrGuesses is valid"]},{"entry":[{},{},{},"meaning that it represents"]},{"entry":[{},{},{},"legitimate guesses of"]},{"entry":[{},{},{},"meeting fields ready to be"]},{"entry":[{},{},{},"stored in the permanent"]},{"entry":[{},{},{},"record,tInMeetingRecord."]},{"entry":[{},{},{},"We check to make sure that"]},{"entry":[{},{},{},"we do not store duplicates"]},{"entry":[{},{},{},"and we also what to clean up"]},{"entry":[{},{},{},"what we want to store so that"]},{"entry":[{},{},{},"there's no cluttered crap such"]},{"entry":[{},{},{},"as punctuations, etc. The"]},{"entry":[{},{},{},"reason why we don't clean up"]},{"entry":[{},{},{},"until now is to save time. We"]},{"entry":[{},{},{},"don't waste resources calling"]},{"entry":[{},{},{},"ParseAndCleanPhrase until"]},{"entry":[{},{},{},"we know for sure that we are"]},{"entry":[{},{},{},"going to add it permanently."]},{"entry":["NoDuplicateEntry","Private","AddToMeet-","This function loops through"]},{"entry":["(BF.Pattern","Function","Record","each element in the array to"]},{"entry":["Match)",{},{},"make sure that the test string"]},{"entry":[{},{},{},"aString is not the same as"]},{"entry":[{},{},{},"any of the strings already"]},{"entry":[{},{},{},"stored"]},{"entry":[{},{},{},"in the array. Slightly"]},{"entry":[{},{},{},"different from"]},{"entry":[{},{},{},"ContainInArray."]},{"entry":["SearchAltaVista","Public","GoBackGround-","This function prepares a"]},{"entry":["(BF.Search)","Function","Finder","query to be submitted to"]},{"entry":[{},{},{},"AltaVista Search engine. It"]},{"entry":[{},{},{},"submits it and then parses the"]},{"entry":[{},{},{},"returning result in the"]},{"entry":[{},{},{},"appropriate format"]},{"entry":[{},{},{},"containing the title, URL and"]},{"entry":[{},{},{},"body\/summary of each story"]},{"entry":[{},{},{},"retrieved. The number of"]},{"entry":[{},{},{},"stories retrieved is specified"]},{"entry":[{},{},{},"by the constant"]},{"entry":[{},{},{},"NUM_AV_STORIES."]},{"entry":[{},{},{},"Important variables include"]},{"entry":[{},{},{},"stURLAltaVista used to store"]},{"entry":[{},{},{},"query to submit"]},{"entry":[{},{},{},"stResultHTML used to store"]},{"entry":[{},{},{},"html from page specified by"]},{"entry":[{},{},{},"stURLAltaVista."]},{"entry":["ConstructAltaVistaURL","Private","SearchAltaVista","This function constructs the"]},{"entry":["(BF.Search)",{},{},"URL string for the alta vista"]},{"entry":[{},{},{},"search engine using the"]},{"entry":[{},{},{},"advanced query search mode."]},{"entry":[{},{},{},"It includes the keywords to"]},{"entry":[{},{},{},"be used, the language and"]},{"entry":[{},{},{},"how we want to rank the"]},{"entry":[{},{},{},"search. Depending on"]},{"entry":[{},{},{},"whether we want to use the"]},{"entry":[{},{},{},"results of our pattern"]},{"entry":[{},{},{},"matching unit, we construct"]},{"entry":[{},{},{},"our query differently."]},{"entry":["ConstructSimple-","Private","ConstructAlta-","This function marches down"]},{"entry":["KeyWord","Function","VistaURl,","the list of keywords stored in"]},{"entry":["(BF.Search)",{},"ConstructNews-","the stTitleKW or stBodyKW"]},{"entry":[{},{},"PageURL","fields of the input meeting"]},{"entry":[{},{},{},"record and links them up into"]},{"entry":[{},{},{},"one string with each keyword"]},{"entry":[{},{},{},"separated by a connector as"]},{"entry":[{},{},{},"determined by the input"]},{"entry":[{},{},{},"variable stInConnector."]},{"entry":[{},{},{},"Returns this newly"]},{"entry":[{},{},{},"constructed string."]},{"entry":["ConstructComplex-","Private","ConstructAlta-","This function constructs the"]},{"entry":["AVKeyWord","Function","VistaURL","keywords to be send to the"]},{"entry":["(BF.Search)",{},{},"AltaVista site. Unlike"]},{"entry":[{},{},{},"ConstructSimpleKeyWord"]},{"entry":[{},{},{},"which simply takes all the"]},{"entry":[{},{},{},"keywords from the title to"]},{"entry":[{},{},{},"form the query, this function"]},{"entry":[{},{},{},"will look at the results of"]},{"entry":[{},{},{},"BF's pattern matching process"]},{"entry":[{},{},{},"and see if we are able to"]},{"entry":[{},{},{},"identify any specific"]},{"entry":[{},{},{},"company names or topics for"]},{"entry":[{},{},{},"constructing"]},{"entry":[{},{},{},"the queries. Query will"]},{"entry":[{},{},{},"include company and topic"]},{"entry":[{},{},{},"identified and default to"]},{"entry":[{},{},{},"simple query if we cannot"]},{"entry":[{},{},{},"identify either company or"]},{"entry":[{},{},{},"topic."]},{"entry":["JoinWithConnectors","Private","ConstructComplex-","This function simply"]},{"entry":["(BF.Search)","Function","AVKeyWord,","replaces the spaces between"]},{"entry":[{},{},"ConstructComplex-","the words within the string"]},{"entry":[{},{},"NPKeyWord,","with a connector which is"]},{"entry":[{},{},"Refine With","specified by the input."]},{"entry":[{},{},"Rank"]},{"entry":["RefineWithDate","Private","ConstructAlta-","This function constructs the"]},{"entry":["(NOT","Function","VistaURL","date portion of the alta vista"]},{"entry":["CALLED",{},{},"query and returns this portion"]},{"entry":["AT THE",{},{},"of the URL as a string. It"]},{"entry":["MOMENT)",{},{},"makes sure that alta vista"]},{"entry":["(BF.Search)",{},{},"searches for articles within"]},{"entry":[{},{},{},"the past PAST_NDAYS."]},{"entry":["RefineWithRank","Private","ConstructAlta-","This function constructs the"]},{"entry":["(BF.Search)","Function","VistaURL","string needed to passed to"]},{"entry":[{},{},{},"AltaVista in order to rank an"]},{"entry":[{},{},{},"advanced query search. If"]},{"entry":[{},{},{},"we are constructing the"]},{"entry":[{},{},{},"simple query we will take in"]},{"entry":[{},{},{},"all the keywords from the"]},{"entry":[{},{},{},"title. For the complex query,"]},{"entry":[{},{},{},"we will take in words from"]},{"entry":[{},{},{},"company and topic, much the"]},{"entry":[{},{},{},"same way we formed the"]},{"entry":[{},{},{},"query in"]},{"entry":[{},{},{},"ConstructComplexAVKeyWord."]},{"entry":["IdentifyBlock","Public","SearchAltaVista,","This function extracts the"]},{"entry":["(BF.Parse)","Function","SearchNewsPage","block within a string marked"]},{"entry":[{},{},{},"by the beginning and the"]},{"entry":[{},{},{},"ending tag given as inputs"]},{"entry":[{},{},{},"starting at a certain"]},{"entry":[{},{},{},"location(iStart). The block"]},{"entry":[{},{},{},"retrieved does not include the"]},{"entry":[{},{},{},"tags themselves. If the block"]},{"entry":[{},{},{},"cannot be identified with the"]},{"entry":[{},{},{},"specified delimiters, we"]},{"entry":[{},{},{},"return unsuccessful through"]},{"entry":[{},{},{},"the parameter"]},{"entry":[{},{},{},"iReturnSuccess passed to use"]},{"entry":[{},{},{},"by reference. The return type"]},{"entry":[{},{},{},"is the block retrieved."]},{"entry":["IsOpenURLError","Public","SearchAltaVista,","This function determines"]},{"entry":["(BF.Error)","Function","SearchNewsPage","whether the error"]},{"entry":[{},{},{},"encountered is that of a"]},{"entry":[{},{},{},"timeout error. It restores the"]},{"entry":[{},{},{},"mouse to default arrow and"]},{"entry":[{},{},{},"then returns true if it is a"]},{"entry":[{},{},{},"time out or false otherwise."]},{"entry":["SearchNewsPage","Public","GoBackGround-","This function prepares a"]},{"entry":["(BF.Search)","Function","Finder","query to be submitted to"]},{"entry":[{},{},{},"NewsPage Search"]},{"entry":[{},{},{},"engine. It submits it and then"]},{"entry":[{},{},{},"parses the returning result in"]},{"entry":[{},{},{},"the appropriate format"]},{"entry":[{},{},{},"containing the title, URL and"]},{"entry":[{},{},{},"body\/summary of each story"]},{"entry":[{},{},{},"retrieved. The number of"]},{"entry":[{},{},{},"stories retrieved is specified"]},{"entry":[{},{},{},"by the constant"]},{"entry":[{},{},{},"UM_NP_STORIES"]},{"entry":["ConstructNews-","Private","SearchNewsPage","This function constructs the"]},{"entry":["PageURL","Function",{},"URL to send to the"]},{"entry":["(BF.Search)",{},{},"NewsPage site. It uses the"]},{"entry":[{},{},{},"information contained in the"]},{"entry":[{},{},{},"input meeting record to"]},{"entry":[{},{},{},"determine what keywords to"]},{"entry":[{},{},{},"use. Also depending whether"]},{"entry":[{},{},{},"we want simple or complex"]},{"entry":[{},{},{},"query, we call different"]},{"entry":[{},{},{},"functions to form strings."]},{"entry":["ConstructComplex-","Private","ConstructNews-","This function constructs the"]},{"entry":["NPKeyWord","Function","PageURL","keywords to be send to the"]},{"entry":["(BF.Search)",{},{},"NewsPage site."]},{"entry":[{},{},{},"UnlikeConstructKeyWordString"]},{"entry":[{},{},{},"which simply takes all"]},{"entry":[{},{},{},"the keywords from the title"]},{"entry":[{},{},{},"to form the query, this"]},{"entry":[{},{},{},"function will look at the"]},{"entry":[{},{},{},"results of BF's pattern"]},{"entry":[{},{},{},"matching process and see if"]},{"entry":[{},{},{},"we are able to identify any"]},{"entry":[{},{},{},"specific company names or"]},{"entry":[{},{},{},"topics for constructing"]},{"entry":[{},{},{},"the queries."]},{"entry":["ConstructOverall-","Private","GoBackGround-","This function takes in as"]},{"entry":["Result","Function","Finder","input an array of strings"]},{"entry":["(BF.Main)",{},{},"(stInStories) and a"]},{"entry":[{},{},{},"MeetingRecord which stores"]},{"entry":[{},{},{},"the information for the"]},{"entry":[{},{},{},"current meeting. Each"]},{"entry":[{},{},{},"element in the array stores"]},{"entry":[{},{},{},"the stories retrieved from"]},{"entry":[{},{},{},"each information source."]},{"entry":[{},{},{},"The function simply"]},{"entry":[{},{},{},"constructs the appropriate"]},{"entry":[{},{},{},"output to send to Munin"]},{"entry":[{},{},{},"including a return message"]},{"entry":[{},{},{},"type to let Munin know that"]},{"entry":[{},{},{},"it is the BF responding and"]},{"entry":[{},{},{},"also the original user_id and"]},{"entry":[{},{},{},"meeting title so Munin"]},{"entry":[{},{},{},"knows which meeting BF is"]},{"entry":[{},{},{},"talking about."]},{"entry":["ConnectAnd-","Public","GoBackGround-","This function allows"]},{"entry":["TransferToMunin","Sub","Finder","Background Finder to"]},{"entry":["(BF.Main)",{},{},"connect to Munin and"]},{"entry":[{},{},{},"eventually transport"]},{"entry":[{},{},{},"information to Munin. We"]},{"entry":[{},{},{},"will be using the UDP"]},{"entry":[{},{},{},"protocol instead of the TCP"]},{"entry":[{},{},{},"protocol so we have to set up"]},{"entry":[{},{},{},"the remote host and port"]},{"entry":[{},{},{},"correctly. We use a global"]},{"entry":[{},{},{},"string to store gResult"]},{"entry":[{},{},{},"Overall because although it"]},{"entry":[{},{},{},"is unnecessary with UDP, it"]},{"entry":[{},{},{},"is needed with TCP and if we"]},{"entry":[{},{},{},"ever switch back don't want"]},{"entry":[{},{},{},"to change code."]},{"entry":["Disconnect-","Public"]},{"entry":["FromMuninAndQuit","Sub"]},{"entry":"(BF.Main)"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0190","num":"0250"},"figref":"FIG. 20","b":["2001","2002","2003","2004","2005","2006","2007"]},{"@attributes":{"id":"p-0191","num":"0251"},"figref":"FIG. 21","b":["2105","2106","2107","2108"]},{"@attributes":{"id":"p-0192","num":"0252"},"figref":["FIG. 22","FIG. 21"],"b":["2200","2220","2230","2240"]},"Although only a few embodiments of the present invention have been described in detail herein, it should be understood that the present invention may be embodied in many other specific forms without departing from the spirit or scope of the invention. Therefore, the present examples and embodiments are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention will be better understood when consideration is given to the following detailed description thereof. Such description makes reference to the annexed drawings wherein:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7C"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7D"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 14A"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 14B"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 22","FIG. 21"]}]},"DETDESC":[{},{}]}
