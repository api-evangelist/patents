---
title: Method, system, and program for querying adaptors in a system to determine information on the adaptor connections
abstract: Provided are a method, system, and program for querying a plurality of adaptors in a system. A request is received to determine connection information for the adaptors in the system. A master task spawns a plurality of tasks to query the adaptors. Each spawned task updates adaptor information with information gathered from querying the adaptor. If no tasks are available to query at least one adaptor that has not been queried, then the master task queries one adaptor and updates the adaptor information with information gathered by querying the adaptor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07296099&OS=07296099&RS=07296099
owner: International Business Machines Corporation
number: 07296099
owner_city: Armonk
owner_country: US
publication_date: 20040107
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","ADDITIONAL EMBODIMENT DETAILS"],"p":["1. Field of the Invention","The present invention relates to a method, system, and program for querying adaptors in a system to determine information on the adaptor connections","2. Description of the Related Art","A storage subsystem, or enterprise storage server, such as the International Business Machines Corporation's (\u201cIBM) (IBM is a registered trademark of IBM) Enterprise Storage Server, includes multiple adaptor cards to enable communication with different devices. The storage subsystem typically manages access to a storage system for multiple attached hosts. Certain of the ports on the adaptor cards in the storage subsystem may be connected to another device over a network, where such connection may comprise a point-to-point connection, arbitrated loop, fabric (e.g., Storage Area Network (SAN)), a broadcast bus (e.g., Ethernet) and other network topologies known in the art. The devices attached to the adaptors may comprise storage devices or other systems. Other adaptor ports may connect to a switch that provides connections to multiple devices or further cascading switches. The adaptors may support protocols such as Fibre Channel and additional network protocols.","A storage controller may also include a management interface to allow administrators to determine information on the storage controller and its connections. A management interface may be used to invoke a process to query each of the adaptor cards in the storage subsystem to determine the devices to which the storage subsystem is connected. This query process may involve querying a device directly connected to the adaptor or querying a switch to determine all possible devices in the network to which that port may connect through the one or more switches and determine the state of the connection and devices on the connection. The devices terminating on the connections may comprise another storage subsystem, storage devices or a switch providing a connection to additional switches, storage devices, and storage subsystems. The queried information allows the network administrator to obtain information on the nodes in the network available through the storage subsystem. Host systems may access the storage subsystem to access storage volumes on storage devices accessible to the storage subsystem.","In current storage subsystems, a single task may be dispatched to serially query each adaptor in a synchronous manner to determine status information on the connections supported by the queried adaptor and devices terminating on such connections.","Provided are a method, system, and program for querying a plurality of adaptors in a system. A request is received to determine connection information for the adaptors in the system. A master task spawns a plurality of tasks to query the adaptors. Each spawned task updates adaptor information with information gathered from querying the adaptor. If no tasks are available to query at least one adaptor that has not been queried, then the master task queries one adaptor and updates the adaptor information with information gathered by querying the adaptor.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments of the present invention. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the present invention.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["2","4","6","8","2","8","2","10","10","10","12","12","12","14","14","14","16","16"],"i":["a","b ","n ","a","b ","m "]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2","b":["6","10","10","10","30","8","30","8","30","32","10","10","10","34","36","36","2","36","2","2"],"i":["a","b ","n ","a","b ","n"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3","b":["32","32","10","10","10","60"],"i":["a","b ","n "],"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["Adaptor ID : provides a unique identifier of the adaptor , . . . ","Port ID : unique identifier of port representing a connection, such as a point-to-point connection in the adaptor identified by field , where each adaptor , . . . may have multiple ports.","Status : indicates the current status of the port  and connection represented by the port.","End Node : identifies an end node to which the port identified by field  connects.","End Node Status : identifies the status of the identified end node ."]}}}},"Upon initialization, the initialization routine  would also generate an assigned task table  that includes an entry for each adaptor.  illustrates each assigned task entry  as including an adaptor identifier , a task identifier  of a task assigned to query the adaptor information for the identified adaptor, and a status  of the query operation, such as completed, pending, unassigned.","With respect to , the adaptor query invocation  would spawn a master thread  to execute the initialization routine , which initializes the adaptor information  and other information used during processing, such as the assigned task table . The master task  further executes a dispatch routine . The dispatch routine  in turn spawns another thread , . . . to execute an asynchronous query routine . The asynchronous query routine  allows for concurrent querying of the adaptors on different tasks , . . . of execution, and asynchronous updating of the adaptor information  with the adaptor query results. The master task  would execute a serial query routine  to perform serial and synchronous querying of the adaptors if there are no more tasks available, i.e., the maximum number of adaptor query tasks  are being used for adaptor querying. After an adaptor is queried and information on the port, connection and end node are obtained, a clean-up and update routine  is executed on the task that performed the query to add the gathered adaptor information to the update record  in the adaptor information  and then call the dispatch routine  to initiate any further adaptor query processes until all adaptors , . . . have been queried.",{"@attributes":{"id":"p-0021","num":"0025"},"figref":["FIGS. 5-10","FIG. 2","FIG. 5"],"b":["10","10","10","100","30","8","38","102","40"],"i":["a","b ","n "]},{"@attributes":{"id":"p-0022","num":"0026"},"figref":"FIG. 6","b":["40","38","110","40","112","2","10","10","10","10","10","10","2","32","60","10","10","10","40","116","34","36","52","118","80","10","10","10","82","66","42","120","38"],"i":["a","b ","n ","a","b ","n ","a","b ","n ","a","b ","n"]},{"@attributes":{"id":"p-0023","num":"0027"},"figref":["FIG. 7","FIG. 4"],"b":["42","38","42","150","152","52","10","10","10","32","154","156","80","52","86","158","42","154","156","42","158","34","36","160","10","10","10","52","42","162","44","44","44","46","160"],"i":["a","b ","n ","a","b ","n ","a","b ","n "]},"The dispatch routine  further adds (at block ), for each spawned task , . . . a task ID to the task ID field  () for the entry  in the assigned task table  for the adaptor, identified in field , being queried by the task and sets the status  for the entry to \u201cpending\u201d. The asynchronous query routine  is separately and concurrently executed (at block ) with each spawned task, and called with the identity of the adaptor , . . . to query. The number of query tasks  is incremented (at block ) by the number of spawned tasks. If (at block ) tasks are spawned for all adaptors that have not been queried, then there are no more adaptors to be queried and control proceeds to block  to wait until all the adaptor queries have completed. Otherwise, if there are still adaptors , . . . to query (i.e., having a status  of \u201cunassigned\u201d), then the dispatch routine  adds (at block ) the master task ID to the task ID field  () for the entry in the assigned task table  for the adaptor to query and sets the status for the entry to \u201cpending\u201d. The dispatch routine  then calls (at block ) the serial query routine  executed on the master task  to query the adaptor whose entry was updated in the assigned task table . After the master task  completes processing the serial query routine , control proceeds to block  to consider whether there are any adaptors that still need to be queried.","The dispatch routine  thus uses the maximum allowable number of tasks to asynchronously query the adaptors. If there are no more tasks available for querying the adaptors, then the dispatch routine  will use the master task executing the dispatch routine  to execute a serial query routine  to query one adaptor in a serial and synchronous manner.",{"@attributes":{"id":"p-0026","num":"0030"},"figref":["FIG. 8","FIG. 3"],"b":["46","44","44","44","46","200","46","202","10","10","10","66","68","78","204","10","10","10","50","206","32","44","44","44","46"],"i":["a","b ","n","a","b ","n ","a","b ","n","a","b ","n "]},{"@attributes":{"id":"p-0027","num":"0031"},"figref":["FIG. 9","FIG. 3"],"b":["48","230","48","38","48","232","10","10","10","66","68","78","234","10","10","10","50","236","32","38"],"i":["a","b ","n ","a","b ","n"]},{"@attributes":{"id":"p-0028","num":"0032"},"figref":["FIG. 10","FIG. 3","FIG. 4"],"b":["50","10","10","10","46","48","250","52","38","44","44","44","60","10","10","10","32","252","80","254","50","256","34","258","80","86","84"],"i":["a","b ","n ","a","b ","n","a","bb ","n "]},"With the described embodiments, a dispatch routine uses a maximum number of permitted tasks to asynchronously query the adaptors to determine adaptor information, such as connection status, connected end devices , . . . , , and status of end devices. If the maximum number of tasks are already in use querying the adaptors, then the same task executing the dispatch routine would execute a serial query routine to synchronously query an adaptor. After performing the serial query, the master task would then return to the dispatch routine to determine if there are any adaptors still left to query, and if so asynchronously query such adaptors using any available tasks or again synchronously query the adaptor on the master task. In this way, adaptor information is gathered in an asynchronous manner while balancing the use of system resources. Further, by asynchronously querying adaptors, any latencies or delays at one adaptor will not affect the information gathering performed asynchronously with respect to other adaptors.","The described embodiments for performing the adaptor query operations may be implemented as a method, apparatus or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof. The term \u201carticle of manufacture\u201d as used herein refers to code or logic implemented in hardware logic (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.) or a computer readable medium, such as magnetic storage medium (e.g., hard disk drives, floppy disks, tape, etc.), optical storage (CD-ROMs, optical disks, etc.), volatile and non-volatile memory devices (e.g., EEPROMs, ROMs, PROMs, RAMs, DRAMs, SRAMs, firmware, programmable logic, etc.). Code in the computer readable medium is accessed and executed by a processor. The code in which preferred embodiments are implemented may further be accessible through a transmission media or from a file server over a network. In such cases, the article of manufacture in which the code is implemented may comprise a transmission media, such as a network transmission line, wireless transmission media, signals propagating through space, radio waves, infrared signals, etc. Thus, the \u201carticle of manufacture\u201d may comprise the medium in which the code is embodied. Additionally, the \u201carticle of manufacture\u201d may comprise a combination of hardware and software components in which the code is embodied, processed, and executed. Of course, those skilled in the art will recognize that many modifications may be made to this configuration without departing from the scope of the present invention, and that the article of manufacture may comprise any information bearing medium known in the art.","In the described embodiments, certain operations were described with respect to specific routines. In additional implementations, additional or fewer routines may be used to perform the operations described herein.","In the described embodiments, usage of variable numbers such as \u201cn\u201d or \u201cm\u201d refers to any integer value, and such value may differ in different uses of this variable to indicate that any number of a components or elements may be present.","In the described implementations, the adaptors connect to nodes in a fabric comprised of devices and\/or switches connecting further devices. In alternative embodiments, the devices to which the adaptors communicate may be present in network types other than a fabric.","In the described embodiments, the querying of an adaptor would determine information on the device or switch terminating at a connection from such adaptor. In additional embodiments, querying an adaptor connected to one switch or cascading switches may additionally return information on all end devices connected to the switch or the cascading switches to which the adaptor is directory and indirectly connected.","The illustrated logic of  show certain events occurring in a certain order. In alternative embodiments, certain operations may be performed in a different order, modified or removed. Moreover, steps may be added to the above described logic and still conform to the described embodiments. Further, operations described herein may occur sequentially or certain operations may be processed in parallel. Yet further, operations may be performed by a single processing unit or by distributed processing units.",{"@attributes":{"id":"p-0036","num":"0040"},"figref":["FIG. 11","FIG. 1"],"b":["300","300","302","304","306","306","306","304","302","308","310","312","310","302","312","302"]},"The foregoing description of various embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 3 and 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 5-10"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 11","FIG. 1"]}]},"DETDESC":[{},{}]}
