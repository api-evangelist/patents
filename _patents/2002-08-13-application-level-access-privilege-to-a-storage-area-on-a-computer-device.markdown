---
title: Application level access privilege to a storage area on a computer device
abstract: An application's access to storage is limited on a per application basis. The application is granted access to a portion of the storage. The application may manipulate that portion of the storage by creating distinct file structures within that portion, modifying, reading and writing files contained therein. The application is denied access to the storage area outside the granted portion. Similarly, other applications stored in the storage area follow a similar paradigm. In one embodiment, the storage area is a hierarchical file structure and applications are stored as children in the file structure. The applications, however, are mapped to indicate each are stored at the root of the file structure to prevent access to other areas of the file structure. In another embodiment, the file structure supports a shared directory that multiple applications are mapped to, also as a root directory but to another drive.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07921287&OS=07921287&RS=07921287
owner: Qualcomm Incorporated
number: 07921287
owner_city: San Diego
owner_country: US
publication_date: 20020813
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","CONCLUSION"],"p":["This application claims the benefit of Provisional Application No. 60\/312,177, filed Aug. 13, 2001, pending, which application is incorporated herein by reference in its entirety.","The present invention relates to processing of applications for use in a computer device, and more particularly, to the storing of applications in a file structure and limiting the access of applications to the storage area on a computer device.","Wireless communication has experienced explosive growth in recent years. As consumers and businesses rely more on their wireless devices, such as mobile phones and personal digital assistants (PDAs), wireless service providers, i.e., carriers, strive to provide additional functionality on these wireless devices. This additional functionality will not only increase the demand for wireless devices but also increase the usage among current users.","The environment of a wireless device creates unique challenges when one considers the execution of application on a wireless device. Methods of downloading the applications and removing the applications need to be developed. In addition, there is a need for security on the wireless device. Security concerns on the wireless device include controlling the environment the best way possible so that an application cannot, intentionally or unintentionally, degrade or corrupt other files on the wireless device or the network on which the wireless device communicates.","Applications, during execution, may perform various operations such as reading, writing, and modifying files stored on the device, or accessible to the device. These files can be system files used by the device, such as device drivers, other application files or data files.","It is desirable to control the application's access to other files accessible to the device as a security measure to limit any damage an application may have on the device, or other systems connected to the device. This damage may be intended via a virus on the application or may be unintended where the application executes with poorly written code that unintentionally dominates a resource, damages other applications or data.","Currently, the only method of controlling an application's access to storage area includes defining privilege levels to users. A user may be given a privilege level that allows the user to read, write or modify files in various storage areas. This mechanism only controls access at the user level.","This practice, however, does not allow the limiting of storage access based on the application executing. While the user itself may attempt to limit the application's access to storage, applications executed by the user are all given the same access to storage as is defined to the user. Furthermore, there is no mechanism to limit the application's access to storage outside of the control of the user.","Consequently, what is needed in the art is a system and method for limiting an application's access to storage. In addition, it is preferable that such limitation be established so that the device or user of the device be unable to change the access limitation imposed on the application.","Systems and methods consistent with the present invention overcome the shortcomings of existing systems by creating a safer environment for application storage and limiting access of the application to other storage areas. Furthermore, systems and methods consistent with the present invention provide a mechanism such that the device and\/or user of the device be unable to change the access limitation imposed on the application.","In one embodiment, the present invention provides a method of executing an application on a device comprising the steps of receiving a request to execute the application, determining if the application was modified, in the event the application was not modified, mapping the application to a unique storage location, granting the application access to the unique storage location, and denying a second application access to the unique storage location.","In another embodiment, the present invention provides a device having a file structure, comprising a control program to store files within the file structure, wherein the control program is operable to store multiple applications within the file structure, each application having an associated portion of the file structure and the control program is operable to grant each application access to its associated portion and deny access to each application to other associated portions of the storage area.","In yet another embodiment, the present invention provides a method for storing an application on a device, comprising the steps of receiving the application at the device, storing the application in a storage on the device, and limiting access of the application to a unique portion on the storage, independent of a user access privilege on the device. Further embodiments of the present invention are also described in the following description and attached drawings.","Reference will now be made in detail to the presently exemplary and preferred embodiments of the invention as illustrated in the accompanying drawings, in which like reference characters designate like or corresponding parts throughout the several drawings. The nature, objectives and advantages of the present invention will become more apparent to those skilled in the art after considering the following detailed description in connection with the accompanying drawings.","Introduction","The present invention limits an application's access to a storage area on a computer device. The same user on a device may install multiple applications. The user may have access to all the applications and the storage area of each application. Systems and methods consistent with the present invention, however, limit each of the application's access to areas of storage other than that allocated to the specific application. By defining this access per application and not per user, safer execution of applications can be achieved by reducing the unwanted consequence that may occur by an application overwriting or inappropriately accessing areas of storage that the application should not. This increased level of safety is provided even when the user, executing the application, has the rights to access the other storage areas that the application is prohibited from accessing.","Furthermore, systems and methods consistent with the present invention also provide for the access to shared areas of storage so that multiple applications may maintain their private and secure areas, but may also share files, such as data and libraries, with other applications.","It will be recognized to those skilled in the art that the forgoing describes an application file type being distributed and executed for simplicity of description. An \u201capplication\u201d may also include files having executable content, such as: object code, scripts, java file, a bookmark file (or PQA files), WML scripts, byte code, and perl scripts. In addition, an \u201capplication\u201d referred to herein, may also include files that are not executable in nature, such as documents that may need to be opened or other data files that need to be accessed.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["105","110","115","120","130"]},"The computer device  may interface with outside systems via a network  and also may receive applications or other data via of the I\/O device  (such as via CD-ROM, smart card, or floppy disk) into the I\/O interface . The storage area  of the computer device  is used to store data and applications received into the computer device . The storage area  may comprise a hard disk drive, flash memory or other methods of storage (not shown). Furthermore, the computer device may store other information in storage area , such as operating system files, resource files, configuration files, and libraries. A separate storage area, such as ROM, EPROM and RAM, however, may also be used to store these or other files.","The computer device may be a personal computer with a fixed location when connected to the network  or may be a mobile wireless device that may change geographic location as it is communicating with the network .","The applications  may be received by the computer device via of the network  or via the I\/O device . As described above, these applications include, but are not limited to, files having executable content, such as: object code, scripts, java file, a bookmark file (or PQA files), WML scripts, byte code, and perl scripts.","The network  may be a landline network incorporating private and public networks, such as the Internet or may incorporate an RF network, such as that used for wireless communication.","In one embodiment of the present invention, the computing device  may also contain a control program, such as the BREW API developed by QUALCOMM Incorporated. A control program can be used to coordinate the storage mechanism that provides the limiting access to the applications, as disclosed herein.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":"202"},"In one embodiment, the central server database  consists of a record of the identifications for each application program downloaded at any time onto each wireless device  in the network , an Electronic Service Number (\u201cESN\u201d) for the individual who downloaded the application program, and a Mobile Identification Number (\u201cMIN\u201d) unique to the wireless device  carrying that application program. Alternatively, the central server database  contains records for each wireless device  in the network  of the wireless device model, wireless network carrier, the region where the wireless device  is used, and any other information useful to identify which wireless device  are carrying which application programs. In addition, the central server database may also store this developer identifying information associated with an application.","The central server  communicates with one or more computer servers , over a network , such as the Internet (preferably secured). The servers  also communicate with a carrier network  via a network . The carrier network  communicates with the MSC  by both the Internet and POTS (plain ordinary telephone system). The Internet connection  between the carrier network  and the mobile switching center (MSC)  transfers data, and the POTS  transfers voice information. The MSC , in turn, is connected to multiple base stations (\u201cBTS\u201d) . The MSC  is connected to the BTS by both the Internet  (for data transfer) and POTS  (for voice information). The BTS  sends messages wirelessly to the wireless devices  by short messaging service (\u201cSMS\u201d), or any other over-the-air method.","The above network may be used to send an application to a computer device, such as the wireless device . The application, in one embodiment, has a unique identifier to distinguish it from other applications or files and a digital signature to detect modifications to the application. This digital signature may be bound to the application and stored on the wireless device either bound or separate, but still associated with, the application. The application is sent to the wireless device from the central server to one of the various servers  through the MSC and BTS to the wireless devices .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 3","FIG. 3"]},"In this embodiment, the root of the file structure defines the files to be stored in this portion of the storage area. Subdirectories to the File root directory  include Applications  and Shared . As the computer device receives applications, they are stored in subdirectories (e.g., App X  and App Y ) under the Applications directory . It will be recognized by those skilled in the art that this hierarchical structure can be structured in many ways using various subdirectory schemes while still implementing the present invention.","In one embodiment of the present invention, the permissions associated with each of the applications are stored in the Applications directory . These permissions may be used to grant the application rights to specific files, such as APIs, data and libraries.","It is preferable that each application has a unique identifier associated with it and this unique identifier be used to create the individual applications' subdirectories under Applications subdirectory . In one embodiment, each application has a unique name and the subdirectory is created using the name of the applications.","As each application is stored under the Application subdirectory , a mapping is created and associated with each application. This mapping prevents the application from accessing other areas of the file structure. In one embodiment, App X subdirectory  is mapped to a root directory with respect to App X's calls to the storage area. For example, from App X's perspective, it is stored at a root directory in the file structure even though in actuality, it is a subdirectory. In this embodiment, by mapping the App X subdirectory  to a root directory, calls from App X cannot access any of the files outside of the App X  directory. App X can, however, access the App X subdirectory  and any subdirectories (not shown) under the App X subdirectory . Consequently, under this implementation, App X cannot access the Files root directory , the Applications subdirectory  or, importantly, App Y subdirectory .","Similarly, within the same device accessed by the same user, when the computer device receives App Y, it is stored under the Applications subdirectory  in the App Y subdirectory . As with App X, a mapping is created with App Y such that it appears to App Y that it is stored at the root directory. This limits access of App Y to just the App Y subdirectory  and any subdirectories under it (not shown). This file structure and mapping scheme provides the advantage, similar as with App X, of preventing App Y from accessing other parts of the file structure.","Consequently on the computer device, applications may be granted access to files based on the specific applications and not based solely on the access privilege level of the user using the computer device.","Mapping the applications directory as a root directory in the file structure is one embodiment of the present invention and it will be recognize by those skilled in the art that other paradigms exist, such as semaphores, permission lists, and other techniques used to limit an, applications access to the storage area.","In another embodiment of the present invention, it is anticipated that it may be desirable to share files, such as data or libraries, among applications. Therefore, in such instances, it is preferred to establish a shared directory  and include a mapping of the shared directory to each of the applications that want to share data. It is also preferable that this shared data be mapped to the applications such that it exists at a root directory, for example, of a separate drive. Mapping the shared directory  as a root directory will prevent each of the applications' access to the parent directories of the shared directory and consequently to any subdirectories to the parent directories of the shared directory.","In addition, it is preferred that digital signatures are associated with the unique identifier, such as the application name described above. By using digital signatures, or some other modification detection technique, it may be detected whether an application modifies the unique identifier by which the subdirectory is created. The modification detection and\/or prevention creates a safer system by providing an indication when an application is acting inappropriately, such as renaming itself the name of another application to access it's subdirectory. For example should App X rename itself App Y, and should the system allow a remapping based on the name, i.e., the unique identifier in this case, App X would then have access to App Y's files.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4","b":"400"},"In one embodiment, the unique identifier is the application name. In this embodiment, applications sent to or received by the computer device need to be monitored such that the same application name is not sent to or received by the computer device. Other identifiers may be used and it is recognized by one skilled in the art how to monitor incoming applications to determine if a duplicate identifier exists.","The process proceeds to store the received application in a subdirectory in the file structure (Step ). This may include creating the subdirectory using the unique identifier received with the application. The process then creates a mapping of the application subdirectory as root directory (Step ). Consequently when the application is executing, it appears to the application that it is located at a root directory.","The process then proceeds to provide the application access to a shared directory by creating a mapping of another root directory to the shared directory (Step ). This shared directory may be set up so that multiple applications have access to this directory for the sharing of files, such as data and libraries.","If the computer device receives a subsequent application (step ), the process repeats but creates a separate subdirectory for the subsequent application based on the unique identifier. Consequently, it appears to the subsequent application that it is located at a root directory. Furthermore, it may be mapped to the same shared directory as the previous application was mapped for the sharing of files.","If no additional applications are received, the process ends (Step ).",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 5","b":"500"},"In one embodiment, the application has a digital signature associated with the application to detect modifications. In this embodiment, the process proceeds to evaluate the digital signature associated with the application (Step ). If the application was modified, as determined by the digital signature the computer device may choose many courses of action, including any one or many of the following: denying execution of the application, informing the user of the modified application, notifying the computer device monitoring system of the modified application, or notifying a server or other computer system of the modified application.","If the application is not modified, the process creates access privileges to the application (Step ). These privileges may be created by using the mapping process described above with respect to . Other privilege schemes, however, may be used to define privilege rights of the application to the storage areas on the device.","During the execution of the application, the application may receive a request from to access to a storage area (Step ). For example, the application may request to perform a read, write or modify operation on a file located in the storage area. Such files may include those files that control resources of the computer device. The computer device determines if the application is granted privilege to the location of the file (Step ). If the mapping paradigm is used above, the computer system determines the privilege by virtue of the fact that the application cannot access files above the root directory to which the application is mapped.","If the application has privilege to the file's location as determined in Step , then the application is granted access to the file (Step ). If the application is not permitted access to the file's location, access is denied (Step ) and the process ends (Step ).","The foregoing description of an implementation of the invention has been presented for purposes of illustration and description. It is not exhaustive and does not limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practicing of the invention. For example, the described implementation includes software but one embodiment of the present invention may be implemented as a combination of hardware and software or in hardware alone. The invention may be implemented with both object-oriented and non-object-oriented programming systems. Additionally, although aspects of the present invention are described as being stored in memory, those skilled in the art will appreciate that these aspects can also be stored on other types of computer-readable media, such as secondary storage devices, like hard disks, floppy disks, or CD-ROM; or other forms of RAM or ROM. The scope of the invention is defined by the claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate presently preferred embodiments of the invention and, together with the general description given above and the detailed description of the preferred embodiments given below, serve to explain the principles of the invention. In the drawings:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
