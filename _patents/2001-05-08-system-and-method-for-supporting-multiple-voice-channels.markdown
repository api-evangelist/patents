---
title: System and method for supporting multiple voice channels
abstract: A communications system is configured with a plurality of media terminal adapters, a telephone line, and a gateway configured to exchange voice and data packets between a network and each of the media terminal adapters over the telephone line. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or the meaning of the claims.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07961712&OS=07961712&RS=07961712
owner: Broadcom Corporation
number: 07961712
owner_city: Irvine
owner_country: US
publication_date: 20010508
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION(S)","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application claims priority to provisional Application No. 60\/203,057, filed May 8, 2000, and provisional Application No. 60\/214,932 filed on Jun. 29, 2000, under 35 U.S.C. \u00a7119. These applications are expressly incorporated herein by referenced as though fully set forth in full.","The present invention relates generally to telecommunications systems, and more particularly, to telecommunications systems supporting voice and data services on a shared medium.","Subscribers today are demanding additional capability of their telephone service. An outcome of this demand is that the telephone service providers must install additional lines in the home to support this demand. The challenge faced by the providers is that the existing home wiring is limited in many cases to a single wire pair. This means that additional wire pairs must be pulled through walls in the home to add the requested new service. The wire installation procedure is both expensive for the service provider and disruptive for the subscriber because drywall must be cut and potentially repaired in the home.","In one aspect of the present invention, a communications system includes a plurality of media terminal adapters, a telephone line, and a gateway configured to exchange voice and data packets between a network and each of the media terminal adapters over the telephone line.","In another aspect of the present invention, a method of communication includes, comprising exchanging voice and data packets between a network and a plurality of media adapter terminals coupled to a telephone line.","It is understood that other embodiments of the present invention will become readily apparent to those skilled in the art from the following detailed description, wherein it is shown and described only embodiments of the invention by way of illustration. As will be realized, the invention is capable of other and different embodiments and its several details are capable of modification in various other respects, all without departing from the spirit and scope of the present invention. Accordingly, the drawings and detailed description are to be regarded as illustrative in nature and not as restrictive.","An exemplary embodiment of a telecommunications system is directed to techniques and systems to support telephony and other services in the home using existing wire pairs already installed in the home. The exemplary telecommunications system may be implemented in numerous ways depending on the specific application, the overall design constraints imposed on the system, and other relevant factors. Moreover, those skilled in the art will appreciate that the techniques and systems disclosed herein for supporting telephony and other services in the home are applicable to a wide variety of telecommunications networks.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1","i":["a ","a ","b ","a ","b "],"b":["102","102","104","102","106","106","106","108","109","108","106","110","102"]},"The exemplary residential gateway  provides a mechanism to convert the physical media and protocols used for the IP network to the physical media and protocols used on the home wire pairs. In the described exemplary embodiment, a DOCSIS (Data Over Cable Service Interface Specification) network is used for delivery of broadband services, such as IP services over the IP network (an HFC network), to the network port . A residential gateway  with a cable modem can be used to perform this function. Alternatively, the residential gateway  can include a fiber optics link, a DSL (Digital Subscriber Line) link, a PSTN (Public Switched Telephone Network) link, a fixed wireless link, or any other residential gateway known in the art. Moreover, the residential gateway  can be implemented with multiple network ports to support various combinations of network links.","In the exemplary residential gateway, a cable modem is used as described by the CableLabs DOCSIS specification except that the telephony and services delivered to the subscriber port are not limited to Ethernet, but rather can support any physical media and protocol compatible with the specific in home LAN. In the described exemplary embodiment, the residential gateway  supports two protocols at the subscriber ports and . The first protocol is a baseband protocol to deliver POTS to the conventional telephone  via the first subscriber port . This protocol is described by Bellcore (now Telcordia) in TR-NWT-000057, the contents of which is expressly incorporated herein by reference as though set forth in full. To this end, the exemplary residential gateway  may include high voltage circuits and processing elements to convert packetized voice delivered over IP network to the continuous analog voltages used for POTS. The second protocol is HomePNA (Home Phoneline Network Alliance) to deliver telephony and services over the LAN  via the second subscriber port , and is described in the HomePNA Specification Version 2.0, the contents of which is expressly incorporated herein by reference as though set forth in full.","In the described exemplary embodiment utilizing a residential gateway  with a cable modem for delivery of telephony and services to a HomePNA LAN , the cable modem functions as a proxy for the voice over HomePNA devices connected to the LAN . The cable modem proxy can perform an interface conversion function at two levels, the first is a transport packet conversion and the second is the signaling protocol conversion.","In addition to the convention POTS telephone  coupled to the first subscriber port of the residential gateway , a second conventional POTS telephone  can be coupled to the LAN  via the second subscriber port . The residential gateway  could further be configured to bridge additional POTS telephones on the single wire pair. In this configuration, these bridged phones will behave as a bridged phone on a traditional POTS line. All bridged telephones are assigned to the same phone number and the ring\/dial tone behavior is as described in TR-NWT-000057.","In the described exemplary embodiment, the HomePNA LAN  is configured to support a number of telephony and network devices. In addition to the conventional POTS telephone , a home appliance , such as a coffee maker, is shown attached to the HomePNA LAN . The concept here is to allow home appliance controllers on the HomePNA LAN  to access and control connected devices. By way of example, a personal computer connected to the HomePNA LAN might control the start time for the coffee maker.","Also shown connected to the HomePNA LAN is a printer device . This can be any type of computer peripheral that permits resource sharing from any one of multiple personal computers or other control devices connected to the HomePNA LAN.","An additional POTS telephone  can be connected to the HomePNA LAN via a HomePNA adaptor . The HomePNA adapter  communicates over the HomePNA LAN  to the HomePNA proxy function that resides within the residential gateway . A second HomePNA adapter  can be used to support a conventional facsimile machine . The facsimile machine  is a standard POTS device that could be used to receive service on the POTS connections via the first subscriber port , or alternatively replace the POTS telephone  connected directly to the HomePNA LAN . In the described exemplary embodiment shown in , the HomePNA adapters  and  provide two additional phone numbers that are different from the phone numbers assigned to the two POTS lines connected to the subscriber ports and of the residential gateway .","A HomePNA telephone  may also be connected directly to the HomePNA LAN . The HomePNA telephone is a device that integrates the function of the HomePNA adapter and the telephone. This HomePNA telephone  may look and work just like any conventional POTS telephone, the difference is that it uses an HomePNA interface to accomplish the voice transport and signaling functions instead of a POTS interface.","The connection of four telephones and one facsimile machine shown in allows these devices to be connected with up to five independent telephone numbers. These five phone numbers can be supported using only two wire pairs. Using traditional POTS interfaces, five phone numbers requires five wire pairs. The four telephone and one facsimile connections are shown for ease of description only. Those skilled in the art will appreciate that various embodiments can be used to support any number of telephone and facsimile machines within the home.","In the described exemplary embodiment, two personal computers  and  are connected to the HomePNA LAN . One personal computer  is described as Net Meeting and the other personal computer  is described as Netscape. These describe two possible applications that are supported by personal computers connected to networks, in this case an HomePNA LAN. Those skilled in the art will appreciate that any computer application can be substituted or added.","The last item shown connected to the HomePNA LAN  is a television . This can be used to display television programming streamed from the external IP network or spooled from memory systems of an attached video server. This video server could be a dedicated device for this purpose or specialized programming on one of the attached personal computers.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 1","FIG. 1"],"i":["b ","b"],"b":["134","102","134","134"]},"In the downstream direction, the DOCSIS MAC\/PHY  determines whether the packet payload is voice or data. If the packet payload is data, then the DOCSIS MAC\/PHY  routes the packet directly to a HomePNA controller . The HomePNA controller  translates the data packet to a HomePNA packet and transmits the HomePNA packet to a media terminal adapter (MTA)  over the HomePNA LAN . The MTA  represents any HomePNA device shown connected to the HomePNA LAN in . Conversely, if the DOCSIS MAC\/PHY  determines that the packet payload is voice, the packet is routed to a proxy gateway  to be processed in a manner to be described in greater detail below. The proxy gateway  further determines whether the packet is destined for the HomePNA LAN  or the POTS telephone . If the packet is destined for the POTS telephone, the packet is routed to a voice and data processor  for decompression and depacketization in a manner to be described in greater detail below. The voice and data processor  generates an analog voice signal from the decompressed signal and delivers the analog voice signal to the POTS telephone  via the SLIC . If the proxy gateway  determines that the packet is destined for the HomePNA LAN , then the processed packet is routed to the HomePNA controller  for conversion to a HomePNA format for transmission to the MTA  over the HomePNA LAN .","In the upstream direction, the HomePNA controller  receives packets from the MTA  over the HomePNA LAN . The HomePNA controller  converts the HomePNA packet to a internal format which, in at least some embodiments, is protocol independent. The HomePNA controller  further determines whether packet payload contains voice or data. If the packet payload contains data, the packet is routed directly to the DOCSIS MAC\/PHY  where it is converted to a packet format suitable for transmission on the WAN, such as VoIP. Conversely, if the packet payload is voice, the HomePNA controller  transmits the packet to the proxy gateway  for processing in a manner to be described in greater detail later. The proxy gateway  determines whether the voice packet is destined for the WAN or the POTS telephone . If the processed packet is destined for the POTS telephone , the packet is routed to the voice and data processor  for depacketization, decompression and digital-to-analog conversion. The analog voice signal is then routed from the voice and data processor  to the POTS telephone  via the SLIC. If the processed packet is destined for the WAN, it is routed to the DOCSIS MAC\/PHY . The DOCSIS MAC\/PHY  converts the packet to a format suitable for transmission on the WAN.","Analog voice signals from the POTS telephone  are transmitted to the voice and data processor  via the SLIC . The voice and data processor  samples the analog voice signal, compresses the voice signals and packetizes the compressed voice into the internal packet format. The voice packets from the voice and data processor  are coupled to the proxy gateway  for processing. The proxy gateway  further determines whether the voice packet is destined for the MTA  or the WAN. If the voice packet is destined for the WAN, it is routed to the DOCSIS MAC\/PHY  for conversion to a format suitable for transmission over the WAN. Conversely, if the voice packet is destined for the MTA , it is routed to the HomePNA controller  for conversion to a HomePNA format for transmission over the HomePNA LAN  to the MTA .","1. Residential Gateway","1.1 Overview","An exemplary embodiment of the residential gateway is shown schematically in . The described exemplary embodiment may provide a highly integrated solution implemented in a single chip that is compliant with the Data Over Cable Service Interface Specification (DOCSIS). DOCSIS was developed to ensure that cable modem equipment built by a variety of manufacturers is compatible, as is the case with traditional dial-up modems. The described exemplary embodiment can provide integrated functions for communicating with a cable head (not shown) end via the network port . By way of example, a QPSK upstream modulator  is configured to transmit data to the cable head end, and a QAM downstream demodulator  is configured to receive data from the cable head end, and a QPSK out of band downstream demodulator  is configured to receive out of band MPEG-2 encoded messages from the cable head end.","In addition, the described exemplary embodiment can support multiple inputs in accordance with a variety of protocols. For example, a universal serial bus transceiver  can provide transparent bi-directional IP traffic between devices operating on a USB such as for example a PC (personal computer) workstation, server printer or other similar devices (not shown). Additionally, an I.EEE 802.3 compliant media independent interface (MII)  in conjunction with an Ethernet MAC  can also provide bi-directional data exchange between devices such as, for example a number of PCs and\/or Ethernet phones (not shown).","In the exemplary embodiment residential gateway, the QAM downstream demodulator  may utilize either 64 QAM or 256 QAM in the 54 to 860 MHz bandwidth to interface with the cable modem head end. The QAM downstream demodulator  is configured to accept an analog signal centered at the standard television IF frequencies, and amplify and digitize the signal with an integrated programmable gain amplifier and A\/D converter (not shown). The digitized signal is demodulated with a recovered clock. Matched filters (not shown) followed by adaptive filters (not shown) can be used to remove multi-path propagation effects and narrowband co-channel interference. Soft decisions can then be passed off to an ITU-T J.83 Annex A\/B\/C compatible decoder (not shown). The integrated decoder performs error correction and forwards the processed received data, in either parallel or serial MPEG-2 format to a DOCSIS Media Access Controller (MAC) .","The DOCSIS MAC  may include baseline privacy encryption and decryption as well as robust frame acquisition and multiplexing with MPEG2-TS compliant video and audio streams. The DOCSIS MAC  implements the downstream portions of the DOCSIS protocol. The DOCSIS MAC  extracts DOCSIS MAC frames from MPEG-2 frames, processes MAC headers, and filters and processes messages and data.","Downstream data packets and message packets may be then placed in system memory  by a SDRAM interface  via an internal system bus . The SDRAM interface  may interface to a number of off the shelf SDRAMs which are provided to support the high bandwidth requirements of the Ethernet MAC  and other peripherals. In the described exemplary embodiment, the SDRAM interface  may support multiple combinations of 8, 16 or 32 bit wide SDRAMs, allowing for external data storage in the range of about 2 to 32 MBytes. The DOCSIS MAC  may include a number of direct memory access (DMA) channels for fast data access to and from the system memory  via the internal system bus .","The DOCSIS MAC  can also implement the upstream portions of the DOCSIS protocol before transmission by the upstream modulator . The DOCSIS MAC  receives data from system memory  via a DMA channel, requests bandwidth and frames the data for TDMA with other modems on the same upstream frequency.","The upstream modulator  provides an interface with the cable head end. The upstream modulator  may be configured to operate with numerous modulation schemes including for example, QPSK and 16-QAM. In the described exemplary embodiment, the upstream modulator  supports bursts or continuous data, provides forward error correction (FEC) encoding and pre-equalization, filters and modulates the data stream and provides a direct 0-65 MHz analog output.","The DOCSIS MAC  interfaces with a processor, such as a MIPS core , via the ISB . An exemplary embodiment of the MIPS core  includes a high performance CPU operating at a speed of at least 80 MHz with 32-bit address and data paths. The MIPS core  may include two way set associative instruction and data caches on the order of about 4K bytes each. Further, the MIPS core  may provide standard EJTAG support with debug mode, run control, single step and software breakpoint instruction as well as additional optional EJTAG features.","The MIPS core  controls the upstream modulator  and the downstream demodulator  via a serial interface that is compatible with a subset of the Motorola M-Bus and the Philips IC bus. The interface consists of two signals, serial data (SDA) and serial clock (SCL), which may control a plurality of devices on a common bus. The addressing of the different devices may be accomplished in accordance with an established protocol on the two wire interface.","The described exemplary embodiment of the residential gateway includes the full-speed universal serial bus (USB) transceiver  and a USB MAC  that is compliant with the USB 1.1 specification. The USB MAC  and USB transceiver  provide two way communication of information to a device operating on a USB, such as for example a PC on a USB 1.1 compliant twisted pair. In the described exemplary embodiment, the USB MAC  provides concurrent operation of control, bulk, isochronous and interrupt endpoints. The USB MAC  may also support standard USB commands as well as class\/vendor specific commands. The USB MAC  includes integrated RAM that allows flexible configuration of the device. The USB MAC  can be arranged for hardware fragmentation of higher layer packets from USB packets with automatic generation and detection of zero length USB packets.","The USB MAC  may include DMA channels which are used to communicate received data to the system memory  via the ISB . Data stored in system memory  may then be processed and communicated to the cable modem head end (not shown) via the DOCSIS MAC  and the upstream modulator . Similarly data received from the cable modem head end and processed by the downstream demodulator  and stored in system memory  as higher layer packets can be retrieved by the USB MAC  via the ISB  and assembled into USB packets with automatic generation of zero length USB packets. USB packets may then be communicated to the external device operating on the USB via the USB transceiver .","In the described exemplary embodiment, the media independent interface (MII)  and Ethernet MAC  provide bidirectional communication with devices, such as, for example a personal computer (PC) operating on an Ethernet. The media independent interface  forwards data to and receives information from the Ethernet MAC . The Ethernet MAC  can also perform all the physical layer interface (PHY) functions for 100BASE-TX full duplex or half-duplex Ethernet as well as 10BBASE-T full or half duplex. The Ethernet MAC  may also decode the received data in accordance with a variety of standards such as for example 4B5b, MLT3, and Manchester decoding. The Ethernet MAC  can perform clock and data recovery, stream cipher de-scrambling, and digital adaptive equalization. The Ethernet MAC  may include DMA channels which are used for fast data communication of processed data to the system memory  via the ISB . Processed data stored in system memory  may then be communicated to the cable modem head end (not shown) via the upstream modulator . Similarly, data received from the cable modem head end can be processed by the downstream demodulator  and stored in system memory  as higher layer packets which can then be retrieved by the Ethernet MAC  via the ISB  and encoded into Ethernet packets for communication to the external device operating on the Ethernet via the MII . The Ethernet MAC  may also perform additional management functions such as link integrity monitoring, etc.","In addition to the SDRAM interface , the described exemplary embodiment of the residential gateway includes an external bus interface (EBI)  that supports connections to flash memory , external SRAM  or EPROMS . Additionally, the EBI  may be used to interface the exemplary residential gateway with additional external peripherals. The EBI  can provide a 24 bit address bus and a 16-bit bi-directional data bus. Separate read and write strobes can be provided along with multiple firmware configurable chip select signals. Each chip select can be fully programmable, supporting block sizes between about 4 K-bytes and 8 Mbytes, extended clock cycle access control and 8 or 16-bit selection of peripheral data bus width.","In the described exemplary residential gateway, the EBI  can support both synchronous and asynchronous transfers. Pseudonymous transfers may be supported through the use of read\/write strobes to indicate the start and duration of a transfer. The EBI  can include DMA access capability to or from the SDRAM interface . The DMA operation may take one or more forms. For example, in EBI mode, an EBI bridge can act as a DMA controller, and perform all pointer and buffer management tasks during DMA operations. In an external mode, an external device can act as the DMA controller and the EBI  can serve as a simple bridge. In DMA mode the MIPS core  can be responsible for DMA setup.","The residential gateway may be vulnerable to network breaches due to peripheral devices such as PCs employing windows or network Macintosh computers. These operating systems include \u201cfile sharing\u201d and \u201cprinter sharing\u201d which allow two or more networked computers in a home or office to share files and printers. Therefore the exemplary embodiment of the residential gateway includes IP security module  which interfaces with ISB . In the described exemplary embodiment of the residential gateway, the MIPS core  can set-up and maintain all security associations. The MIPS core  can also filter all IP traffic and route any messages requiring security processing to the IP security module  via the ISB . The IP security module  may support single DES (CBC and ECB modes) triple DES (CBC and ECB modes) MD-5 and SHA authentication in hardware to provide support for virtual private networks.","The IP security module  can implement the basic building blocks of the developing IP Security Standard (IPsec). The security module  may also implement other security schemes that use the same basic two protocol technique as IPsec to provide traffic security. A first protocol, IP encapsulating security payload (ESP), provides private data privacy with encryption and limited traffic flow confidentiality. ESP may also provide connection less integrity, data source authentication and an anti-replay service. A second format, IP authentication header (AH), provides connection less integrity, data source authentication and an optical anti-replay service. Both protocols may be used to provide access based on the distribution of cryptographic keys and the management of traffic flows. The protocols may be used alone or in combination to satisfy the security requirements of a particular system. In addition, the security module  can support multiple modes of operation depending on a security association to the traffic carried by a simplex connection. For example, transport mode security association between two hosts, primarily protects protocols above the IP layer while tunnel mode security association provides security and control to a tunnel of IP packets.","An exemplary security module  addresses possible differences in packet format between IPsec and future security applications with a generalized scheme to determine where the authentication\/encryption algorithms are applied within a data packet. The authentication\/encryption algorithms consider each packet to consist of three parts, a header, body and trailer. The appropriate algorithm can be applied, using any specified parameters to the body section only.","In encryption mode, the security module  can add and initialize any necessary headers, determine necessary parameters, generate the associated control message and add the control and data message. In the authentication mode, the control fields of the received data packets are parsed, the parameters are determined via a security association lookup table, a control message is created and the control and data messages are queued.","The exemplary embodiment of the residential gateway includes a DMA controller  having a number of channels that enable direct access over the ISB  between peripherals and the system memory . With the exception of the IP security module , packets received by the residential gateway cause DMA transfers from a peripheral to memory, which is referred to as a receive operation. A DMA transfer from memory to a peripheral is referred to as a transmit operation. Programmable features in each channel can allow the DMA controller  to manage maximum ISB burst lengths for each channel, enable interrupts, halt operation in each channel, and save power when certain modules are not operational. The maximum ISB burst length may be programmed independently for each channel preferably up to sixty four 32 bit words.","In the described exemplary embodiment of the residential gateway, each channel may include maskable interrupts connected to the MIPS core  that indicate buffer complete, packet complete and or invalid descriptor detected. Busy DMA channels may be stalled or completely disabled by the MIPS core . Source clocks (not shown) for each channel can be connected to the channels based on the internal peripheral they service. For power reduction, these clocks may be turned off and on coincident with the respective peripheral's clock.","The DMA controller  can be operable in both non-chaining and chaining mode. In the non-chaining mode the DMA channel refers to its internal registers for the pertinent information related to a scheduled DMA burst transfer. The DMA controller can set-up the buffer start address, byte count, and status word registers before initiating the DMA channel for each allocated buffer. In the transmit direction, the DMA channels can send the specified number of bytes (preferably up to 4095) from the specified byte address. In the receive direction, the DMA channels can insert data into a specified memory location until a buffer has been completely filled or the end of a packet is detected.","In the chaining mode, the system memory  can be partitioned as shown in  preferably using descriptor rings containing pointers to memory buffers as well as status information for each memory buffer. The MIPS core  can write the descriptor pointers while the DMA controller  follows by inserting\/taking data into\/from the location designated by the descriptor. Upon completion of the transfer of a buffer, the DMA controller  effectively clears the descriptor by updating the status to indicate that the data has been inserted\/taken. Specific information may be added to the descriptor to indicate the length of data in the block, specifying whether the data is the first or last block of a packet, etc.","In the downstream direction, the MIPS core  can fill or recognize a data block for a particular DMA channel, then write the next unused descriptor in the ring indicating that the block is filled and where the downstream data exists in memory. The DMA controller  can follow a MIPS write to the descriptor ring, sending out data and clearing the descriptor when the transfer is complete. When the DMA controller  reads a descriptor that does not contain valid data, it can go idle until initiated by the MIPS core.","In the upstream direction, the MIPS core , allocates memory space for incoming data, then writes the descriptor with the start address for that buffer. The DMA controller  reads the base address and inserts data until either the buffer is full or an end of packet has been detected. The DMA controller  can update the descriptor, communicating to the MIPS core  that the block is full, indicating the length of the data on the block, and\/or asserted first and or last buffer flags.","A voice and data processor  is used for processing and transporting voice over packet based networks such as PCs running network on a USB (Universal Serial Bus) or an asynchronous serial interface, LANs such as Ethernet, WANs such as IP, Frame Relay (FR), Asynchronous Transfer Mode (ATM), Public Digital Cellular Network such as TDMA (IS-13x), CDMA (IS-9x) or GSM for terrestrial wireless applications, or any other packet based system. The described embodiment of the voice and data processor  also supports the exchange of voice, as well as facsimile and modem, between the POTS telephone  (see ), or any number of telephony devices, and the cable head end. The voice and data processor  may be implemented with a variety of technologies including, by way of example, embedded communications software that enables transmission of voice over packet based networks. In the described exemplary embodiment, the voice and data processor  includes the proxy gateway function described in connection with . Alternatively, the proxy gateway function could be implemented in the MIPS core . The functional partitioning of the voice and data processor  and the MIPS core  can take on various forms depending upon the particular application, the overall design constrains or other relevant factors.","The embedded communications software is preferably run on a programmable digital signal processor (DSP). In an exemplary embodiment the voice and data processor  utilizes a ZSP core from LSI Logic Core ware library for mid to high end telecommunications applications. The DSP core may include an internal instruction RAM  and an internal data RAM . The voice and data processor  interfaces with the ISB  via a DSP\/ISB interface  and a peripheral bus  via a DSP\/PB interface .","The voice and data processor  may include a grant synchronizer that insures timely delivery of voice signals to the MIPS core  for upstream transmission. In addition, a PCM interface  can provide the voice and data processor  with an interface to an internal audio processor  as well as an external audio processing circuits (not shown) to support constant bit rate (CBR) services such as telephony through the subscriber port . The PCM interface  can provide multiple PCM channel controllers to support multiple voice channels. In the described exemplary embodiment of the residential gateway, there are four sets of transmit and receive FIFO registers, one for each of the four PCM controllers. However, the actual number of channels that may be processed may vary and is limited only by the performance of the DSP. The ISB  is used to transfer data, control and status messages between the voice and data processor  and the MIPS core . FIFO registers can be used in each direction to store data packets.","The internal audio processor  includes an analog front end  that interface the voice and data processor  with external subscriber line interface circuits (SLICs) for bidirectional exchange of voice signals via the subscriber port . The audio processor  may include programmable elements that implement filters and other interface components for a plurality of voice channels.","In the transmit mode the analog front end  accepts an analog voice signal from the subscriber port and digitizes the signal and forwards the digitized signal to the audio processor . The audio processor  decimates the digitized signal and conditions the decimated signal to remove far end echos. As the name implies, echos in telephone systems is the return of the talker's voice resulting from the operation of the hybrid with its two-four wire conversion. If there is low end-to-end delay, echo from the far end is equivalent to side-tone (echo from the near-end), and therefore, not a problem. Side-tone gives users feedback as to how loud they are talking, and indeed, without side-tone, users tend to talk too loud. However, far end echo delays of more than about 10 to 30 msec significantly degrade the voice quality and are a major annoyance to the user. The audio processor can apply a fixed gain\/attenuation to the conditioned signal and forwards the gain adjusted signal to the voice and data processor  via the PCM interface . In the receive mode the audio processor  accepts a voice signal from the PCM interface  and may apply a fixed gain\/attenuation to the received signal. The gain adjusted signal is then interpolated from 8 KHz to 96 KHz before being converted to an analog signal for communication through one of the subscriber ports of the residential gateway to a telephony device via a SLIC interface (not shown).","The described exemplary embodiment of the residential gateway may further include integrated peripherals such as independent periodic interval timers , a dual universal asynchronous receiver-transmitter (UART)  that handles asynchronous serial communication, a number of internal interrupt sources , and a GPIO module  that provides multiple, individually configurable input\/output ports. In addition, multiple GPIO ports can be provided to drive various light emitting diodes (LEDs) and to control a number of external SLICs. A peripheral bus bridge  can be used to interface low speed peripherals to the ISB .","A HomePNA controller  enables a 4-32 Mbits\/sec LAN using existing in home telephone wiring. The HomePNA controller  can be a fully integrated MAC\/PHY device that provides bi-directional communication with devices such as for example a HomePNA phone, computer etc., operating on a HomPNA LAN via the subscriber port of the residential gateway. The HomePNA controller  may include DMA channels which are used for fast data communication of processed data to the system memory  via the ISB . In the described exemplary embodiment, the HomePNA controller  includes a digital PHY having a FDQAM\/QAM transmitter and receiver coupled to an analog front end (AFE) .","An exemplary cable modem without HomePNA capability is disclosed in U.S. patent application Ser. No. 09\/548,400, entitled \u201cGateway with Voice,\u201d the contents of which is hereby incorporated by reference as though fully set forth herein.","1.2 Voice and Data Processor","The voice and data processor provides an interface between the WAN connected to the network port of the residential gateway and the subscriber ports of the residential gateway. In the described exemplary embodiment, the subscriber ports support a POTS telephone and an HomePNA LAN. In the downstream direction, the voice and data processor receives packets from the WAN and makes a routing decision based on the destination address within the packet. The destination of the packet will be one of two possibilities: (1) the HomePNA LAN, or (2) the POTS telephone. In the downstream direction, the packets from the HomePNA LAN and the voice signal from the POTS telephone are routed to the network port.","In the described exemplary embodiment, the voice and data processor performs a translation function between the packets in a HomePNA LAN format (VoHN) to packets in the VoIP format. The specific translation is direction dependent. Packets arriving from the HomePNA controller are translated to a VoIP format and delivered to the DOCSIS MAC. Packets arriving from the DOCSIS MAC are translated to a VoHN format and delivered to the HomePNA controller.","The voice and data processor also performs a media and protocol translation between VoIP formats and PCM voice samples which are delivered to or received from the audio processor. This transformation may include conversion from compressed audio formats as well as signaling transformations.","1.2.1. The Voice and Data Processor Architecture","An exemplary voice and data processor may be implemented with a programmable DSP software architecture as shown in . This architecture includes a high speed DSP  with program memory , preferably on the order of about a 80K word SRAM, and data memory  preferably on the order of about a 48K word SRAM. A PCM highway  provides the voice and data processor access to the audio processor optional external audio processing circuits. A grant synchronizer  facilitates upstream transmission. The grant synchronizer  signals the DSP  that a pending grant is about to arrive at the residential gateway from the WAN so as to allow the DSP  to synchronize itself to scheduled grants at the residential gateway. A host interface  transfers data, control and status messages between the DSP  and the MIPS core.","1.2.2. The DSP Architecture and Software","The exemplary programmable DSP is effectively hidden within the embedded communications software layer. The software layer binds all core DSP algorithms together, interfaces the DSP hardware to the host, and provides low level services such as the allocation of resources to allow higher level software programs to run. An exemplary multi-layer software architecture loaded into the program memory for execution on the DSP platform is shown in . An applications layer  provides overall executive control and system management, and directly interfaces a DSP server  to the MIPS core (see to ). The DSP server  provides DSP resource management and telecommunications signal processing. Operating below the DSP server layer are a number of physical devices (PXD) , , . Each PXD provides an interface between the DSP server  and an external telephony device (not shown) via a hardware abstraction layer (HAL) . In the described exemplary embodiment, the external telephony device is a POTS telephone (see ) support by a single PXD. In this case, the HAL  provides an interface between the single PXD and the audio processor.","The DSP server  includes a resource manager  which receives commands from, forwards events to, and exchanges data with the applications layer . An application programming interface  (API) provides a software interface between the user MTA call client  and the resource manager . The resource manager  manages the internal\/external program and data memory of the DSP. In addition the resource manager dynamically allocates DSP resources, performs command routing as well as other general purpose functions.","The DSP server  also includes virtual device drivers (VHDs) , , . The VHDs are a collection of software objects that control the operation of and provide the facility for real time signal processing. Each VHD , , includes an inbound and outbound media queue (not shown) and a library of signal processing services specific to that VHD , , . In the described exemplary embodiment, each VHD , , is a complete self-contained software module for processing a single channel with a number of different telephony devices. Multiple channel capability can be achieved by adding VHDs to the DSP server . The resource manager  dynamically controls the creation and deletion of VHDs and services.","A switchboard  in the DSP server  dynamically inter-connects the PXDs , , with the VHDs , , . Each PXD , , is a collection of software objects which provide signal conditioning for one external telephony device. For example, a PXD may provide volume and gain control for signals from a telephony device prior to communication with the switchboard . Multiple telephony functionalities can be supported on a single channel by connecting multiple PXDs, one for each telephony device, to a single VHD via the switchboard . Connections within the switchboard  can be managed by the applications layer  via a set of API commands to the resource manager . The number of PXDs and VHDs is expandable, and limited only by the memory size and the MIPS (millions instructions per second) of the underlying hardware.","The HAL  interfaces directly with the underlying DSP and exchanges telephony signals between the external telephony devices and the PXDs. The HAL  includes basic hardware interface routines, including DSP initialization, target hardware control, CODEC sampling, and hardware control interface routines. The DSP initialization routine is invoked by the MTA call client  to initiate the initialization of the signal processing system. The DSP initialization sets up the internal registers of the signal processing system for memory organization, interrupt handling, timer initialization, and DSP configuration. Target hardware initialization involves the initialization of all hardware devices and circuits external to the signal processing system. The HAL  is a physical firmware layer that isolates the communications software from the underlying hardware. This methodology allows the communications software to be ported to various hardware platforms by porting only the affected portions of the HAL  to the target hardware.","1.2.2.1. The Proxy Gateway","As indicated above, the proxy gateway function can be implemented in the voice and data processor. In the described exemplary embodiment, the proxy gateway function is implemented with embedded software at the applications layer. Referring to , the applications layer includes an MTA call client  which provides overall control. A host application programming interface (HAPI)  provides a software messaging interface between the MIPS core  in the residential gateway (see ) and the voice processor DSP. The HAPI  facilitates the issuing of commands from the MIPS core to the voice processor DSP as well the sending of events from the voice processor DSP to the MIPS core. In addition, the applications layer further includes a VoHN interface  which provides a software messaging interface between the MIPS core and the voice processor DSP via the HomePNA controller  (see ). The VoHN interface  also facilitates the issuing of commands from the MIPS core to the voice processor DSP as well the sending of events from the voice processor DSP to the MIPS core.","In addition, the MTA call client  may provide all signaling and encapsulation elements required to support voice over the WAN, in this case a DOCSIS network  including media transport and call signaling via quality service logic . For example, gateway control protocol (GCP) logic  receives and mediates call-signaling information between the DOCSIS network and a PSTN. The GCP logic  maintains and controls the overall call state for calls requiring PSTN interconnection. The GCP logic  controls the voice processor DSP, via the MTA call client  and the HAPI interface , as well as the MTA  and VoHN interface  by instructing it to create, modify, and delete connections that support the media stream over the DOCSIS network. The GCP logic  also instructs the voice and data processor and the MTA  to detect and generate events and signals. The GCP logic  also exercises attribute control over the voice and data processor and the MTA , providing instructions as to which attributes to apply to a connection, such as, for example, encoding method, use of echo cancellation, security parameters, etc.","The GCP logic  also interfaces with an external control element, such as, for example, a call agent or call management server (CMS)  to terminate and generate the call signaling from and to the network side of the residential gateway in accordance with the network-based call signaling (NCS) protocol specification. The NCS architecture places call state and feature implementation in the centralized the CMS , and places telephony device controls in the MTA call client . The MTA call client  passes device events to the CMS , and responds to commands issued from the CMS . The CMS , is responsible for setting up and tearing down calls, providing advanced services such as custom calling features, performing call authorization, and generating billing event records, etc.","For example, the CMS  instructs the MTA call client  to inform the CMS  when a phone goes off hook, and seven dual tone multi frequency (DTMF) digits have been entered. The CMS  instructs the MTA call client  to create a connection, reserve quality of service (QoS) resources through the access network for the pending voice connection, and to play a locally generated ringback tone. The CMS  in turn communicates with a remote CMS (or MGC) to setup the call. When the CMS  detects answer from the far end, it instructs the MTA call client  to stop the ringback tone, activate the media connection between the MTA call client  and the far-end MTA call client, and begin sending and receiving packets.","When a voice channel is successfully established, real time transport protocol (RTP) is used to transport all packets to guarantee interoperability. Real time transport protocol (RTP) provides end-to-end delivery services for data with real time characteristics, such as interactive audio and video. Those services include payload type identification, sequence numbering, timestamping and delivery monitoring of the quality of service (QoS) and conveys to participants statistics such as for example packet and byte counts for the session. RTP resides right above the transport layer. The described exemplary embedded MTA call client  includes RTP logic  that converts RTP packets (headers) to a protocol independent format utilized by the voice and data processor and vice versa.","The described exemplary embedded MTA call client  may include channel associated signaling (CAS) logic  that interfaces with the SLIC  (see ) via the GPIO interface  (see ) to provide ring generation, hookswitch detection, and battery voltage control. The CAS logic  may support custom calling features such as for exam distinctive ringing. The CAS logic  can be implemented in the voice and data processor, or alternatively be resident on the MIPs core.","The described exemplary embedded MTA call client  may include MTA device provisioning logic  that enables the embedded MTA call client  to register and provide subscriber services over the DOCSIS network . The provisioning logic  provides initialization, authentication, and registration functions. The provisioning logic  also provides attribute definitions required in the MTA configuration file. The provisioning logic  includes a SNMP logic  that exchanges device information and endpoint information between the MTA call client  and an external control element called a provisioning server (not shown). The MTA call client  also sends notification to the provisioning server that provisioning has been completed along with a pass\/fail status using the SNMP protocol.","The provisioning logic  also includes DHCP logic  that interfaces with an external dynamic host configuration protocol (DHCP) server to assign an IP address to the MTA call client . The DHCP server (not shown) is a back office network element used during the MTA call client provisioning process to dynamically allocate IP addresses and other client configuration information. Further provisioning logic preferably includes domain name server (DNS) logic  which interfaces with an external DNS server (not shown) to obtain the IP address of a DOCSIS server given its fully qualified domain name.","The MTA configuration file is downloaded to the MTA call client  from an external trivial file transfer protocol (TFTP) server (not shown) through TFTP logic . The TFTP server is a back office network element used during the MTA call client provisioning process to download configuration files to the MTA call client. An HTTP server may be used instead of a TFTP server to download configuration files to the MTA call client .","Each of the protocol interfaces is subject to threats that could pose security risks to both the subscriber and service provider. The DOCSIS architecture addresses these threats by specifying, for each defined protocol interface, the underlying security mechanisms (such as IPSec) that provide the protocol interface with the security services it requires, e.g., authentication, integrity, confidentiality. Security logic  provides end-to-end encryption of RTP media streams and signaling messages, to reduce the threat of unauthorized interception of communications. The security logic  can provide additional security services such as, for example, authentication, access control, integrity, confidentiality and non-repudiation.","DOCSIS service logic  may provide the primary interface between the MTA call client  and the DOCSIS cable modem (i.e. DOCSIS MAC and modulator\/demodulator) of the residential gateway. The DOCIS service logic  provides multiple sub-interfaces such as, for example, a control sub-interface that manages DOCSIS service-flows and associated QoS traffic parameters and classification rules. The DOCIS service logic  also provides a synchronization interface that is used to synchronize packet and scheduling prioritization for minimization of latency and jitter with guaranteed minimum constant bit rate scheduling. In addition, the DOCSIS service logic  is used to request bandwidth and QoS resources related to the bandwidth. The DOCIS cable modem features of the residential gateway then negotiate reserve bandwidth, guaranteed minimum bit rate etc, utilizing DOSCIS 1.1 quality of service feature. Similarly, DOCSIS service logic  may include a transport interface that is used to process packets in the media stream and perform appropriate per-packet QoS processing.","Referring to , the GCP logic implements the NCS features of the PacketCable 1.0 specification including protocol transaction management, parsing, verification and formatting of protocol data units (PDUs) and other utility functions. The PacketCable protocol typically requires an acknowledgment that a request has been received. Therefore, the GCP logic includes transmitter queue  which registers all requests sent from the GCP logic to the call management server via a transmitter scheduler  and the MTA call client. A receive router  then analyzes packets received from the call management server via the MTA call client to determine if the received message is an acknowledgment or a new request. The receiver router  forwards new requests to a transaction queue . If the received packet is an acknowledgment of a request previously sent from the GCP logic to the call management server, the receiver router  clears that request that request by forwarding the acknowledgment () to the transmitter queue . The transmitter queue  periodically retransmits buffered requests until an acknowledgment from the call management server is received.","The transaction queue  registers the receipt of a given request from the call management server as well as the transmission of an acknowledgment of that request from the GCP logic to the call management server. Further, in the described exemplary embodiment the transaction queue  detects and requests re-transmitted from the call management server for which an acknowledgment has already been sent. In addition, the transaction queue  parses the incoming requests according to the type of requests. The transaction queue  routes connection messages to a connection message parser . Connections messages are used to create or terminate a connection. The connection message parser  generates and forwards connection controls (including connection attributes) () to the MTA call client which are then communicated to the DSP  via the HAPI interface  or the MTA  via the VoHN interface  (see ). The transaction queue  routes request\/notify messages to a request\/notify message parser . Request\/notify messages may be signal requests such as play dial tone, busy tone etc. or requests to detect events such as for example, detect DTMF digits, fax tone, modem tone etc. The request\/notify message parser  can generate and forward signal requests () to the DSP via the MTA and HAPI interface or the MTA via the VoHN interface. The request\/notify message parser  flags event detection requests () to an event filter .","Actual events detected by the DSP and the MTA (such as, for example, fax tone) or channel associated signaling (such as, for example, off hook detected) are forwarded to the event filter  via the MTA call client. The event filter  filters the events and only transmits those detected events that the call management server requested, as indicted by flags () communicated to the event filter by the request\/notify message parser . The event filter  can forward detected events of interest to the call management server to a message formatter . The message formatter  formats the detected event into the appropriate protocol and forwards the detected event message to transmitter queue , which registers the message and will retransmit the message if an acknowledgment is not received in a timely manner via the receiver router (). The transmitter queue  forwards the message to the transmitter scheduler  which bundles outgoing messages and forwards them to the MTA call client (not shown) for communication to the call management server.","The PacketCable 1.0 specification provides for the use of a digit map which is designed to reduce the number of messages communicated between the call management server and the MTA call client when a user is dialing a number. For example, the dialing of long distance number involves the use of ten digits (i.e. the area code and number) which would require ten requests and acknowledgments i.e. one per digit. In the alternative the call management server may provide a digit map to the MTA call client which instruct digit map logic  to collect detected digits from the voice and data processor according to a specified format, for example ten digits for long distance call. The digit map logic  then forwards for example all ten digits to the event filter  which filters the digit detection, and forwards events of interest to the message parser  for communication to the call management server as previously described through transmitter queue  and transmitter scheduler .","Event quarantine logic  buffers detected events received from the CAS or the DSP via the MTA call client for which the event filter  has not received a detect event request from the call server manager via the request\/notify message parser flag (). Responses or the result () of a connection or signal requests are forwarded from the MTA call client to a response formatter  within the GCP logic that formats the result into the proper protocol. The response formatter  then forwards that result to the transmitter scheduler  for communication to the call management server via the MTA call client. In addition, the response formatter  notifies the transaction queue  that an acknowledgment has been sent in response to a given request. The transaction queue  may then detect the retransmission of a request from the call management server should that acknowledgment be lost or otherwise not received by the call management server. The transaction queue  may instruct the response formatter  to retransmit an acknowledgment when the transaction queue  detects the retransmission of a request for which an acknowledgment had been previously sent.","Referring to , RTP logic  can convert RTP packets to the protocol independent packet format utilized by the VoHN interface  and the HAPI interface  and vice versa. In the described exemplary embodiment, the protocol independent packet payload can be identical to the RTP packet payload so that the RTP logic  need only convert between RTP and the headers used in the independent protocol. In the described exemplary embodiment a RTP shim  provides two way exchange of protocol independent packets with the MTA call client . The RTP shim  accepts these packets from the MTA call client , converts the packet header, to a RTP header and forwards the RTP packet to a RTP stack . The RTP stack  provides the statistical monitoring function required by the RTP protocol such as, for example, collecting statistics on the number of bytes sent and received, the number of packets lost as well as how much jitter was present. The RTP stack  provides two way exchange of RTP packet between the MTA call client  and the RTP logic , receiving RTP packets from the RTP shim  and forwarding them to the MTA call client  and vice versa.","Referring to the described exemplary VoHN interface  provides a software messaging interface between the MTA call client  and the MTA . The VoHN interface  facilitates the issuing of commands from the MIPS core via the MTA call client  to the MTA  as well the sending of events from the MTA  to the MTA call client . The VoHN interface  may be scalable to support multiple channels as well as multiple media adapters. In addition the VoHN interface  is a thread safe environment, providing multi-threading capability to support multiple channels. Multi-threading provides multiple, simultaneously executing \u201cthreads\u201d within a single application. The benefit of a multi-threaded application is similar to that of a multi-tasked operating system, the application may perform multiple tasks by using separate threads.","The described exemplary VoHN interface  receives commands from and issues responses to the MTA call client . The VoHN interface  processes incoming packets to identify the channel that should process the packet as well as other processing parameters such as for example, packet type (i.e. voice or fax), packet length, etc. For example, VoHN signaling messages are data link layer frames that are identified by a unique IEEE assigned Ethertype value in the frame header. Further, in the described exemplary embodiment, the frame header may also include one or more payload element fields. Each payload element may be variable length and multiple payload types such as for example voice, channel associated signaling, etc., may be concatenated in a single frame in any order.","For example, in the described exemplary embodiment, voice payload fields transfer packetized voice encoded to ITU standards such as, for example, G.711 a-law, G.711 u-law, G.728 or G.729A\/B\/E. The size of the frame depends on the voice encoder frame rate selected for the media stream, normally a multiple of 10 ms. Voice payload fields are transmitted at the selected frame rate while a voice path is established to the line termination. Some voice encoder algorithms incorporate voice activity detection (VAD) and reduce packet rate significantly during periods of silence.","In the described exemplary embodiment, voice-band data traffic (such as, for example, G.711 u-law\/A-law) may be treated as a special case. Voice-band data is less sensitive to delay, but more sensitive to frame loss than voice traffic. Therefore, in operation, frames containing voice-band data contain two payload fields to increase delivery reliability over the HomePNA segment. In the described exemplary embodiment, the first payload field contains voice samples from the current frame period, and a second payload field contains a repeat of the voice samples from the most recent previous frame period.","In the described exemplary embodiment, signaling and voice payloads are encoded in frames that are transported as a Link Layer Protocol according to the formats and procedures for HomePNA 2.0 Link Layer Framing. The VoHN interface  forwards processed messages () to the HomePNA MAC\/PHY  to provide access to the physical media and transparent transfer of link layer frames between the network gateway and MTA . In the described exemplary embodiment, individual line terminations are identified by single pre-defined\/well-known MAC station addresses. Frames destined for a specific line termination are transmitted to the destination MAC address assigned for that line, rather than using the unique unicast MAC address of the network gateway or remote media adapter. The line termination or \u201cstation\u201d addresses are actually multicast MAC addresses allowing multiple MTAs to share the same line termination and thus transmit\/receive using the same station address. This addressing model permits implementation of distributed conferencing. Further, the sender of a communication may be identified from its unique unicast MAC station source address. The MAC may also performs error detection on received frames and silently discards frames with errors.","In the described exemplary embodiment, frames may be transmitted at one of two rates. For example, during static or quiescent periods when no state transitions are occurring, frames may be transmitted at a background rate on the order of about one frame every five seconds. However, when state information changes, frames may be transmitted at a foreground rate of one every 10 msec. In the described exemplary embodiment, frames are transmitted at the foreground rate until a quiescent period of at least about 50 msec has elapsed.","The MTA  forwards processed packets, such as, for example, encoded voice packets, to the HomePNA PHY\/MAC  of the residential gateway. The HomePNA MAC\/PHY  can reformat the response into a VoHN message and forwards the VoHN message to system memory. In addition, when a processed packet is written into system memory the MIPS core interrupts a VoHN Task Thread  that retrieves the processed VoHN message from the memory. The VoHN Task Thread  determines whether the message is an event such as, for example, a voice or fax packet or a DTMF detection which are forwarded directly to the MTA call client , or a response to a command\/request from the MTA call client. For example, the MTA call client  may command the MTA  to turn off echo cancellation. Such a command is preferably processed by the VoHN interface  into the appropriate link layer format and forwarded to the HomePNA MAC\/PHY . The MAC formats the message in accordance with HomePNA V.2 protocol and forwards the command over the HomePNA LAN to the MTA .","When the command has been complied with the MTA  returns an acknowledgment to the HomePNA PHY\/MAC  of the residential gateway via the HomePNA LNA. The HomePNA MAC formats the response into a VPHN message and forwards it to the VoHN Task Thread  which then forwards it as a VoHN response to the VoHN interface . The VoHN interface  correlates the VoHN responses received from the VoHN Task Thread  to the corresponding command\/request that prompted the response and forwards a VoHN response to the MTA call client .","The interaction of an exemplary embedded MTA call client and the MTA  may best be illustrated in the context of a typical voice communication across the DOCSIS network. The table set forth in illustrates the call flow for an outgoing call origination. In this example, the network is initially in an idle state. The MTA call client and CAS of the residential gateway transmit a loop current feed (LCF) state indication to the MTA that returns a loop open or on hook indication. The user initiates a communication by going off hook. The MTA performs hook-switch monitoring on the SLIC and relays a loop closed offhook state indication to the residential gateway. The CAS logic detects an offhook state and forwards a detection event to the MTA call client. The MTA call client then instructs the GCP logic to generate an off hook signal. The GCP logic generates an off hook signal which is forwarded to the MTA call client and transmitted out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the residential gateway and the cable head end. The call management server typically would transmit a return signal via the cable modem head end, DOCSIS MAC and downstream demodulator of the residential gateway to the MTA call client via the QoS service logic. The MTA call client forwards that signal to the GCP logic that decodes the signal, typically play dial tone. The GCP logic would then signal the MTA call client to play dial tone. The MTA call client then sends a command to the remote media adapter via the VoHN interface and HomePNA MAC\/PHY to play dial tone. The user then hears a dial tone.","Upon hearing a dial tone a user will then typically dial a number. The MTA includes a DTMF detector that detects the dialed digits and generates DTMF tone on and tone off events that are forwarded to the MTA call client as events via the HomePNA PHY\/MAC and the VoHN interface. The MTA call client forwards the event to the GCP logic that encodes the dialed digits into a signaling message which is returned to the MTA call client. The MTA call client transmits the signaling message out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the residential gateway and the cable modem head end. The call management server would then instruct a called party MTA call client to generate a ring to the called number. If the call is answered by going off hook, the CAS of the called MTA call client would detect an off hook condition and signal the call management server. The call management server then instructs the MTA call client via the cable modem head end, and downstream demodulator, DOCSIS MAC and QoS service logic of the residential gateway to establish a voice connection with a given set of features, i.e. use echo cancellation, and silence suppression, use given coder etc. In addition, the MTA call client is given the IP address of the called party, to which the RTP voice packets should be sent. The MTA call client forwards the received message to the GCP logic that decodes the received message. The GCP logic generates attribute instructions for the MTA such as, for example, encoding method, use of echo cancellation, security parameters, etc. which are communicated to the remote media adapter via the MTA call client, the VoHN interface and the HomePNA MAC\/PHY.","Voice packets are then exchanged. For example, if the calling party speaks, the MTA would process the voice and forward voice packets to the MTA call client via HomePNA PHY\/MAC and the VoHN interface. The MTA call client forwards those voice packets to the RTP logic that converts the packet from a protocol independent packet format to the RTP format. The RTP voice packets are then returned to the MTA call client which transmits the RTP voice packet to the cable modem head end via the QoS service logic and the DOCSIS MAC and upstream demodulator of the residential gateway. The voice packets are then routed to the called party. Similarly, voice packets from the called party are communicated to the MTA call client of the call client via the QoS service logic. The MTA call client forwards the RTP voice packets to the RTP logic that converts the packet from the RTP format to the protocol independent packet format. The protocol independent voice packets are returned to the MTA call client that forwards them to the VoHN interface. The MTA decodes the packets and communicates a digital stream to the called party. Voice exchange would continue in a similar manner until an on hook condition is detected by either the calling or called party. The CAS would then forward an on hook detection event to its respective MTA call client. The MTA call client instructs the GCP logic to generate a hook detection signaling message that is returned to the MTA call client and forwarded to the call management server. The call management server generates a request to play (dial tone, silence or receiver off hook) which is forwarded to the opposite MTA call client. The MTA call client would forward the request to the GCP logic that would then instruct the MTA to play dial tone via the MTA call client, VoHN interface and HomePNA MAC\/PHY.","Telephony calls in the other direction are similarly processed. For example, the call management server instructs the MTA call client to ring a dialed number. The MTA call client instructs the GCP logic to generate a command to ring the dialed number. The command is then forwarded to the CAS via the MTA call client. The CAS generates a ring signal and forwards that signal to the VoHN interface for communication across the network to the MTA. The MTA call client may also instruct the GCP logic to present call ID that preferably generates a command for the MTA to present caller ID. If the user picks up the phone the CAS would detect an off hook condition and signal an off hook event back to the MTA call client. The MTA call client then instructs the GCP logic to create an off hook detection signaling message, which when created is returned to the MTA call client and forwarded to the external call management server via the QoS service logic, DOCSIS MAC and upstream modulator of the residential gateway and the cable modem head end. A communication channel would again be established with a given set of attributes as previously described. In the described exemplary embodiment, the residential gateway transmits CAS and CLASS payload frames to a multicast MAC destination address that is associated with the line termination. In this way, ringing and caller ID messages are distributed to each MTA bound to the line. In the described exemplary embodiment, the residential gateway is responsible for timing of state transitions on the MTA loop interface. The residential gateway generates ring signal cadence and by timing ringer on and ringer off events and manages ring-trip removal. It is responsible for managing the timing between CAS state events and CLASS messages for on-hook and off-hook CLASS services, according to Bellcore GR-30. It is responsible for meeting for the ring-trip removal delay requirement. The proxy gateway performs hook-switch event detection based on the timing of hook-switch events reported from the MTA according to Bellcore GR-506. The Proxy Gateway is able to determine off-hook, on-hook and hook-flash events and report those events to the upstream telephony service.","In the described exemplary embodiment, the residential gateway may also transmit test payloads to the MTAs to perform loop test and diagnostic functions on the line termination handled by the remote media adapter. For example, a ping request payload requests that the receiving media adapter respond with a ping response payload containing the same payload data field as the request. An analog loopback payload requests that the receiving remote media adapter perform an analog loopback (i.e. as close to the SLIC interface as possible). In the analog loopback test, subsequent voice payloads received should be played out (D\/A conversion) and re-encoded (A\/D conversion) for transmission upstream. A digital loopback payload requests that the receiving MTA perform a digital loopback. Subsequent voice payloads received should be echoed back unchanged for transmission upstream.","Referring to the described exemplary host application programming interface (HAPI) provides a software messaging interface between the MTA call client  and the DSP. The HAPI  facilitates the issuing of commands from the MIPS core via the MTA call client  to the DSP as well the sending of events from the DSP to the MTA call client . The HAPI interface  can be scalable to support multiple channels as well as multiple DSPs. In addition the HAPI interface  is a thread safe environment, providing multi-threading capability to support multiple channels. Multi-threading provides multiple, simultaneously executing \u201cthreads\u201d within a single application. The benefit of a multi-threaded application is similar to that of a multi-tasked operating system, the application may perform multiple tasks by using separate threads.","In the described exemplary HAPI, an application programming interface (API)  receives commands from and issues responses to the MTA call client . The API  processes incoming packets adding an additional header word to identify the channel that should process the packet as well as other processing parameters such as for example, packet type (i.e. voice or fax), packet length, etc. The API  forwards processed API messages () to a physical interface (firmware layer)  that interfaces with the host port of the DSP underlying the voice and data processor so as to isolate the MTA call client software and the signal processing software from the underlying hardware. This methodology allows the software to be ported to various hardware platforms by porting only the hardware interface portions of the HAPI interface to the target hardware. The physical interface  formats the message in accordance with the underlying DSP and forwards or transmits the message to the telephony algorithms executing on the DSP.","Similarly, the underlying DSP forwards processed packets, such as, for example, encoded voice packets, to the physical interface . The physical interface  preferably reformats the response into an API message. When a processed packet is forwarded to the physical interface  the underlying DSP also interrupts an APITask Thread  that retrieves the processed API messages from the physical interface . The APITask Thread  determines whether the API message is an event such as, for example, a voice or fax packet or a DTMF detection which are forwarded directly to the MTA call client (), or a response to a command\/request from the MTA call client . For example, the MTA call client  may command the voice and data processor to turn off the echo canceller. Such a command can be processed by the API interface  to add the appropriate header word and forwarded to the physical interface . The physical interface  formats the message in accordance with the underlying DSP and issues the command to the underlying voice channel to turn off the echo canceller.","When the command has been complied with a response is returned from the underlying DSP to the physical interface . The physical interface  formats the response into an API message and forwards it to the APITask thread  which then forwards it as an API response to the API interface . The API interface  correlates the API responses received from the APITask Thread  to the corresponding command\/request that prompted the response and forwards a HAPI response to the MTA call client .","The operation of an exemplary embedded MTA call client and the voice and data processor may best be illustrated in the context of a typical voice communication across the DOCSIS network. The user initiates a communication by going off hook. The CAS detects the off hook condition from the SLIC and sends an off hook event to the MTA call client. The MTA call client then instructs the GCP logic to generate a off hook signal. The GCP logic generates an off hook signal which is forwarded to the MTA call client and transmitted out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the residential gateway and the cable modem head end. The call management server typically would transmit a return signal via the cable modem head end, DOCSIS MAC and downstream demodulator of the network gateway to the MTA call client via the QoS service logic. The MTA call client preferably forwards that signal to the GCP logic that decodes the signal, typically play dial tone. The GCP logic would then signal the MTA call client to play dial tone. The MTA call client then sends a command to the voice and data processor via the HAPI interface to play dial tone. The user then hears a dial tone.","Upon hearing a dial tone a user will typically dial a number. The voice and data processor includes a DTMF detector which detects the dialed digits and forwards the detected digits to the MTA call client as events via the HAPI interface. The MTA call client forwards the event to the GCP logic that encodes the dialed digits into a signaling message that is returned to the MTA call client. The MTA call client transmits the signaling message out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the residential gateway and the cable modem head end. The call management server would then instruct a called party MTA call client to generate a ring to the called number. If the called number answers by going off hook, the CAS of the called MTA call client would detect an off hook condition and signal the call management server. The call management server then instructs the MTA call client via the cable modem head end, and downstream demodulator, DOCSIS MAC and QoS service logic of the residential gateway to establish a voice connection with a given set of features, i.e. use echo cancellation, and silence suppression, use given coder etc. In addition, the MTA call client is given the IP address of the called party, to which the RTP voice packets should be sent. The MTA call client forwards the received message to the GCP logic that decodes the received message. The GCP logic generates attribute instructions for the voice and data processor such as, for example, encoding method, use of echo cancellation, security parameters, etc. that are communicated to the voice and data processor via the MTA call client and the HAPI interface.","Voice packets are then exchanged. For example, if the calling party speaks, the voice and data processor would process the voice and forward voice packets to the MTA call client via the HAPI interface. The MTA call client forwards the voice packet to the RTP logic that converts the packet from a protocol independent packet format to the RTP format. The RTP voice packets are then returned to the MTA call client which transmits the RTP voice packet to the cable modem head end via the QoS service logic and the DOCSIS MAC and upstream demodulator of the residential gateway. The voice packets are then routed to the called party. Similarly, voice packets from the called party are communicated to the MTA of the call client via the QoS service logic. The MTA call client forwards the RTP voice packets to the RTP logic that converts the packet from the RTP format to the protocol independent packet format. The protocol independent voice packets are returned to the MTA call client that forwards them to the voice and data processor via the HAPI interface. The voice and data processor decodes the packets and communicates a digital stream to the called party. Voice exchange would continue in a similar manner until an on hook condition is detected by either the calling or called party. The CAS would then forward an on hook detection event to its respective MTA call client. The MTA call client instructs the GCP logic to generate a hook detection signaling message which is returned to the MTA call client and forwarded to the call management server. The call management server generates a request to play (dial tone, silence or receiver off hook) which is forwarded to the opposite MTA call client. The MTA call client would forward the request to the GCP logic which would then instruct the voice and data processor to play dial tone via the MTA call client and HAPI interface.","Telephony calls in the other direction are similarly processed. For example, the call management server instructs the MTA call client to ring a dialed number. The MTA call client instructs the GCP logic to generates a command to ring the dialed number. The command is then forwarded to the CAS via the MTA call client. The CAS generates a ring signal and forwards that signal to the SLIC that then rings the called telephony device. The MTA call client may also instruct the GCP logic to present call ID that preferably generates a command for the voice and data processor to present caller ID. If the user picks up the phone the CAS would detect an off hook condition and signal an off hook event back to the MTA call client. The MTA call client instructs the GCP logic to create an off hook detection signaling message, which when created is returned to the MTA call client and forwarded to the external call management server via the QoS service logic, DOCSIS MAC and upstream modulator of the residential gateway and the cable modem head end. A communication channel would again be established with a given set of attributes as previously described.","Referring to , the described channel associated signaling (CAS) logic  utilizes a foreign exchange office (FXO) interface to provide exchange of commands and detection of events between the MTA call client  and standard commercial analog loop\/ground start devices such as, for example, plain old telephone sets (POTS), group three facsimiles, modems, answering machine or other similar devices. The CAS logic  can operate in switch mode, such that ABCD bits  are terminated within the CAS logic . The MTA call client  interfaces with the CAS logic  through high level commands  and events . For example, if the CAS logic  detects a phone going off the hook, a detection event is forwarded to the MTA call client  which may then notify the call management server as previously described. The MTA call client is also able to issue high level commands to the CAS logic .","For example, to ring a phone coupled to the network gateway via the voice and data processor, the MTA call client  sends a ring generation profile to the CAS logic . The CAS logic  reformats the command into raw CAS bits by FXO termination logic  to control the external interface via a hardware abstraction layer (HAL)  (see ). The HAL  provides a physical interface to the connected SLIC  (see ). The HAL  formats message signals in accordance with the underlying SLIC  and forwards or transmits the message signal to the connected POTS telephone  via the SLIC .","Ringing a telephony device via the HomePNA LAN proceeds similarly, with raw CAS bits generated by the FXO termination logic  are forwarded to the MTA  via the HomePNA MAC\/PHY . Further, detected events, signaled from the SLIC  or the MTA , including on\/off hook, flash hook and potentially pulse dial, are returned to the FXO termination logic  from the HAL  or HomePNA MAC\/PHY  respectively as raw CAS bits.","The FXO termination logic  can verify the integrity of the detected event and forwards a detected event message to the MTA call client . The FXO termination logic  includes a state machine that monitors detected events signaled from the SLIC  via the HAL . The FXO termination logic  qualifies detected events signaled by the SLIC  to determine if a valid on\/off hook, flash hook or pulse dial has been detected. The FXO termination logic  analyzes the period of the received signal to determine valid flash hook or pulse dial conditions. Similarly, the FXO termination logic  includes a state machine that associated with the ringing of connected phones. When the MTA call client  issues a command to ring a connected phone with a pre-defined cadence and the associated FXO termination state machine will ring the connected phone in accordance with the MTA command.","Those skilled in the art will appreciate that the proxy gateway functionality may be partitioned into a number of implementations depending of the particular application and overall design constraints. By way of example, the proxy gateway function can be implemented in the MIPS core rather than the voice and data processor. Alternatively, the proxy gateway functions can be split between the MIPS core and the voice processor. In yet another approach, the proxy gateway functions may be implemented in whole or part in a separate DSP, an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components such as, e.g., registers and FIFO, a processor executing a set of firmware instructions, any conventional programmable software module and a processor, or any combination thereof. The processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. The software module could reside in RAM memory, flash memory, ROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art.","1.2.2.2. Voice and Data Processing","The exemplary software architecture described above can be integrated into numerous telecommunications products. In an exemplary embodiment, the software architecture is designed to support telephony signals between telephony devices (and\/or circuit switched networks) and packet based networks. A network VHD (NetVHD) is used to provide a single channel of operation and provide the signal processing services for transparently managing voice, fax, and modem data across a variety of packet based networks. More particularly, the NetVHD encodes and packetizes DTMF, voice, fax, and modem data received from various telephony devices and\/or circuit switched networks and transmits the packets to the user application layer. In addition, the NetVHD disassembles DTMF, voice, fax, and modem data from the user application layer, decodes the packets into signals, and transmits the signals to the circuit switched network or device.","An exemplary embodiment of the NetVHD operating in the described software architecture is shown in . The NetVHD includes four operational modes, namely voice mode , voiceband data mode , fax relay mode , and data relay mode . In each operational mode, the resource manager invokes various services. For example, in the voice mode , the resource manager invokes call discrimination , packet voice exchange , and packet tone exchange . The packet voice exchange  may employ numerous voice compression algorithms, including, among others, Linear 128 kbps, G.711 u-law\/A-law 64 kbps (ITU Recommendation G.711 (1988)\u2014Pulse code modulation (PCM) of voice frequencies), G.726 16\/24\/32\/40 kbps (ITU Recommendation G.726 (12\/90)\u201440, 32, 24, 16 kbit\/s Adaptive Differential Pulse Code Modulation (ADPCM)), G.729A 8 kbps (Annex A (11\/96) to ITU Recommendation G.729\u2014Coding of speech at 8 kbit\/s using conjugate structure algebraic-code-excited linear-prediction (CS-ACELP)\u2014Annex A: Reduced complexity 8 kbit\/s CS-ACELP speech CODEC), and G.723 5.3\/6.3 kbps (ITU Recommendation G.723.1 (03\/96)\u2014Dual rate coder for multimedia communications transmitting at 5.3 and 6.3 kbit\/s). The contents of each of the foregoing ITU Recommendations being incorporated herein by reference as if set forth in full.","The packet voice exchange  is common to both the voice mode  and the voiceband data mode . In the voiceband data mode , the resource manager invokes the packet voice exchange  for exchanging transparently data without modification (other than packetization) between the telephony device (or circuit switched network) and the packet based network. This is typically used for the exchange of fax and modem data when bandwidth concerns are minimal as an alternative to demodulation and remodulation. During the voiceband data mode , a human speech detector service  is also invoked by the resource manager. The human speech detector  monitors the signal from the near end telephony device for speech. In the event that speech is detected by the human speech detector , an event is forwarded to the resource manager which, in turn, causes the resource manager to terminate the human speech detector service  and invoke the appropriate services for the voice mode  (i.e., the call discriminator, the packet tone exchange, and the packet voice exchange).","In the fax relay mode , the resource manager invokes a packet fax data exchange  service. The packet fax exchange  may employ various data pumps including, among others, V.17 which can operate up to 14,400 bits per second, V.29 which uses a 1700-Hz carrier that is varied in both phase and amplitude, resulting in 16 combinations of 8 phases and 4 amplitudes which can operate up to 9600 bits per second, and V.27ter which can operate up to 4800 bits per second.","Likewise, the resource manager invokes a packet modem data exchange  service in the data relay mode . The packet modem data exchange  may employ various data pumps including, among others, V.22bis\/V.22 with data rates up to 2400 bits per second, V.32bis\/V.32 which enables full-duplex transmission at 14,400 bits per second, and V.34 which operates up to 33,600 bits per second. The ITU Recommendations setting forth the standards for the foregoing data pumps are incorporated herein by reference as if set forth in full.","In the described exemplary embodiment, the applications layer does not need to manage any service directly. The applications layer manages the session using high-level commands directed to the NetVHD, which in turn directly runs the services. However, the applications layer can access more detailed parameters of any service if necessary to change, by way of example, default functions for any particular application.","In operation, the user application layer opens the NetVHD and connects it to the appropriate PXD. The applications layer may then may configure various operational parameters of the NetVHD, including, among others, default voice compression (Linear, G.711, G.726, G.723.1, G.723.1A, G.729A, G.729B), fax data pump (Binary, V.17, V.29, V.27ter), and modem data pump (Binary, V.22bis, V.32bis, V.34). The applications layer then loads an appropriate signaling service (not shown) into the NetVHD, configures it and sets the NetVHD to the On-hook state.","In response to events from the signaling service (not shown) via the POTS telephone  (hookswitch) (see ), or signal packets from the far end, the applications layer will set the NetVHD to the appropriate off-hook state, typically voice mode. In an exemplary embodiment, if the signaling service event is triggered by the POTS telephone, the packet tone exchange will generate dial tone. Once a DTMF tone is detected, the dial tone is terminated. The DTMF tones are packetized and forwarded to the applications layer for transmission on the packet based network via the DOCSIS MAC and the upstream modulator. The packet tone exchange could also play ringing tone back to the POTS telephone (when a far end telephony device is being rung), and a busy tone if the far end telephony device is unavailable. Other tones may also be supported to indicate all circuits are busy, or an invalid sequence of DTMF digits were entered on the POTS telephone.","Once a connection is made between the POTS telephone and far end telephony devices, the call discriminator is responsible for differentiating between a voice and machine call by detecting the presence of a 2100 Hz. tone (as in the case when the telephony device is a fax or a modem), a 1100 Hz. tone or V.21 modulated high level data link control (HDLC) flags (as in the case when the telephony device is a fax). If a 1100 Hz. tone, or V.21 modulated HDLC flags are detected, a calling fax machine is recognized. The NetVHD then terminates the voice mode and invokes the packet fax exchange to process the call. If however, 2100 Hz tone is detected, the NetVHD terminates voice mode and invokes the packet data exchange.","The packet data exchange service further differentiates between a fax and modem by continuing to monitor the incoming signal for V.21 modulated HDLC flags, which if present, indicate that a fax connection is in progress. If HDLC flags are detected, the NetVHD terminates packet data exchange service and initiates packet fax exchange service. Otherwise, the packet data exchange service remains operative. In the absence of an 1100 or 2100 Hz. tone, or V.21 modulated HDLC flags the voice mode remains operative.","1.2.2.2.1. The Voice Mode","Voice mode provides signal processing of voice signals. Voice mode enables the transmission of voice over a packet based system such as Voice over IP (VoIP, H.323), Voice over Frame Relay (VoFR, FRF-11), Voice Telephony over ATM (VTOA), or any other WAN. The voice mode should also permit voice to be carried over traditional media such as time division multiplex (TDM) networks and voice storage and playback systems.","The PXDs for the voice mode provide echo cancellation, gain, and automatic gain control. The network VHD invokes numerous services in the voice mode including call discrimination, packet voice exchange, and packet tone exchange. These network VHD services operate together to provide: (1) an encoder system with DTMF detection, call progress tone detection, voice activity detection, voice compression, and comfort noise estimation, and (2) a decoder system with delay compensation, voice decoding, DTMF generation, comfort noise generation and lost frame recovery.","The services invoked by the network VHD in the voice mode and the associated PXD is shown schematically in . In the described exemplary embodiment, the PXD  provides two way communication with the POTS telephone  (see ) via the audio processor and the voice AFE (see ). The incoming PCM signal from the audio processor is initially processed by the  to remove far end echos. As the name implies, echos in telephone systems is the return of the talker's voice resulting from the operation of the hybrid with its two-four wire conversion. If there is low end-to-end delay, echo from the far end is equivalent to side-tone (echo from the near-end), and therefore, not a problem. Side-tone gives users feedback as to how loud they are talking, and indeed, without side-tone, users tend to talk too loud. However, far end echo delays of more than about 10 to 30 msec significantly degrade the voice quality and are a major annoyance to the user.","An echo canceller  is used to remove echos from far end speech present on the incoming PCM signal before routing the incoming PCM signal back to the far end user over the WAN. The echo canceller  samples an outgoing PCM signal from the far end user and destined for the audio processor, filters it, and combines it with the incoming PCM signal. The echo canceller  may be followed by a non-linear processor (NLP)  which mutes the digital voice samples when far end speech is detected in the absence of near end speech from the POTS telephone  (see ). The echo canceller  may also inject comfort noise which in the absence of near end speech from the POTS telephone may be roughly at the same level as the true background noise or at a fixed level.","After echo cancellation, the power level of the digital voice samples is normalized by an automatic gain control (AGC)  to ensure that the conversation is of an acceptable loudness. Alternatively, the AGC can be performed before the echo canceller , however, this approach would entail a more complex design because the gain would also have to be applied to the sampled outgoing PCM signal. In the described exemplary embodiment, the AGC  is designed to adapt slowly, although it should adapt fairly quickly if overflow or clipping is detected. The AGC adaptation should be held fixed if the NLP  is activated.","After AGC, the digital voice samples are placed in the media queue  in the network VHD  via the switchboard . In the voice mode, the network VHD  invokes three services, namely call discrimination, packet voice exchange, and packet tone exchange. The call discriminator  analyzes the digital voice samples from the media queue to determine whether a 2100 Hz, a 1100 Hz. tone or V.21 modulated HDLC flags are present. As described above with reference to , if either tone or HDLC flags are detected, the voice mode services are terminated and the appropriate service for fax or modem operation is initiated. In the absence of a 2100 Hz, a 1100 Hz. tone, or HDLC flags, the digital voice samples are coupled to the encoder system which includes a voice encoder , a voice activity detector (VAD) , a comfort noise estimator , a DTMF detector , a call progress tone detector  and a packetization engine .","Typical telephone conversations have as much as sixty percent silence or inactive content. Therefore, high bandwidth gains can be realized if digital voice samples are suppressed during these periods. The VAD , operating under the packet voice exchange, is used to accomplish this function. The VAD  attempts to detect digital voice samples that do not contain active speech. During periods of inactive speech, the comfort noise estimator  couples silence identifier (SID) packets to the packetization engine . The SID packets contain voice parameters that allow the reconstruction of the background noise at the far end.","From a system point of view, the VAD  may be sensitive to the change in the NLP . For example, when the NLP  is activated, the VAD  may immediately declare that voice is inactive. In that instance, the VAD  may have problems tracking the true background noise level. If the echo canceller  generates comfort noise during periods of inactive speech, it may have a different spectral characteristic from the true background noise. The VAD  may detect a change in noise character when the NLP  is activated (or deactivated) and declare the comfort noise as active speech. For these reasons, the VAD  should be disabled when the NLP  is activated. This is accomplished by a \u201cNLP on\u201d message passed from the NLP  to the VAD .","The voice encoder , operating under the packet voice exchange, can be a straight 16 bit PCM encoder or any voice encoder which supports one or more of the standards promulgated by ITU. The encoded digital voice samples are formatted into a voice packet (or packets) by the packetization engine . These voice packets are formatted according to an applications protocol and outputted to the host (not shown). The voice encoder  is invoked only when digital voice samples with speech are detected by the VAD . Since the packetization interval may be a multiple of an encoding interval, both the VAD  and the packetization engine  should cooperate to decide whether or not the voice encoder  is invoked. For example, if the packetization interval is 10 msec and the encoder interval is 5 msec (a frame of digital voice samples is 5 ms), then a frame containing active speech should cause the subsequent frame to be placed in the 10 ms packet regardless of the VAD state during that subsequent frame. This interaction can be accomplished by the VAD  passing an \u201cactive\u201d flag to the packetization engine , and the packetization engine  controlling whether or not the voice encoder  is invoked.","In the described exemplary embodiment, the VAD  is applied after the AGC . This approach provides optimal flexibility because both the VAD  and the voice encoder  are integrated into some speech compression schemes such as those promulgated in ITU Recommendations G.729 with Annex B VAD (March 1996)\u2014Coding of Speech at 8 kbits\/s Using Conjugate-Structure Algebraic-Code-Exited Linear Prediction (CS-ACELP), and G.723.1 with Annex A VAD (March 1996)\u2014Dual Rate Coder for Multimedia Communications Transmitting at 5.3 and 6.3 kbit\/s, the contents of which is hereby incorporated by reference as through set forth in full herein.","Operating under the packet tone exchange, a DTMF detector  determines whether or not there is a DTMF signal present at the POTS telephone  (see ). The DTMF detector  also provides a pre-detection flag which indicates whether or not it is likely that the digital voice sample might be a portion of a DTMF signal. If so, the pre-detection flag is relayed to the packetization engine  instructing it to begin holding voice packets. If the DTMF detector  ultimately detects a DTMF signal, the voice packets are discarded, and the DTMF signal is coupled to the packetization engine . Otherwise the voice packets are ultimately released from the packetization engine  to the applications layer (not shown). The benefit of this method is that there is only a temporary impact on voice packet delay when a DTMF signal is pre-detected in error, and not a constant buffering delay. Whether voice packets are held while the pre-detection flag is active could be adaptively controlled by the user application layer.","Similarly, a call progress tone detector  also operates under the packet tone exchange to determine whether a precise signaling tone is present at the near end. Call progress tones are those which indicate what is happening to dialed phone calls. Conditions like busy line, ringing called party, bad number, and others each have distinctive tone frequencies and cadences assigned them. The call progress tone detector  monitors the call progress state, and forwards a call progress tone signal to the packetization engine to be packetized and transmitted across the packet based network. The call progress tone detector may also provide information regarding the hook status of the POTS telephone  (see ) which is relevant to the signal processing tasks. If the hook status is on hook, the VAD should preferably mark all frames as inactive, DTMF detection should be disabled, and SID packets should only be transferred if they are required to keep the connection alive.","The decoding system of the network VHD  essentially performs the inverse operation of the encoding system. The decoding system of the network VHD  comprises a depacketizing engine , a voice queue , a DTMF queue , a call progress tone queue , a voice synchronizer , a DTMF synchronizer , a call progress tone synchronizer , a voice decoder , a VAD , a comfort noise estimator , a comfort noise generator , a lost packet recovery engine , a tone generator , and a call progress tone generator .","The depacketizing engine  identifies the type of packets received from the host (i.e., voice packet, DTMF packet, call progress tone packet, SID packet), transforms them into frames which are protocol independent. The depacketizing engine  then transfers the voice frames (or voice parameters in the case of SID packets) into the voice queue , transfers the DTMF frames into the DTMF queue  and transfers the call progress tones into the call progress tone queue . In this manner, the remaining tasks are, by and large, protocol independent.","A jitter buffer is utilized to compensate for network impairments such as delay jitter caused by packets not arriving at the same time or in the same order in which they were transmitted. In addition, the jitter buffer compensates for lost packets that occur on occasion when the network is heavily congested. In the described exemplary embodiment, the jitter buffer for voice includes the voice synchronizer  that operates in conjunction with the voice queue  to provide an isochronous stream of voice frames to the voice decoder .","Sequence numbers embedded into the voice packets at the far end can be used to detect lost packets, packets arriving out of order, and short silence periods. The voice synchronizer  can analyze the sequence numbers, enabling the comfort noise generator  during short silence periods and performing voice frame repeats via the lost packet recovery engine  when voice packets are lost. SD packets can also be used as an indicator of silent periods causing the voice synchronizer  to enable the comfort noise generator . Otherwise, during far end active speech, the voice synchronizer  couples voice frames from the voice queue  in an isochronous stream to the voice decoder . The voice decoder  decodes the voice frames into digital voice samples suitable for the audio processor, such as a 64 kb\/s PCM signal for a PSTN line. The output of the voice decoder  (or the comfort noise generator  or lost packet recovery engine  if enabled) is written into a media queue  for transmission to the PXD .","The comfort noise generator  provides background noise to the POTS telephone  (see ) during silent periods. If the protocol supports SID packets, (and these are supported for VTOA, FRF-11, and VoIP), the comfort noise estimator at the far end encoding system should transmit SID packets. Then, the background noise can be reconstructed by the near end comfort noise generator  from the voice parameters in the SID packets buffered in the voice queue . However, for some protocols, namely, FRF-11, the SID packets are optional, and other far end users may not support SID packets at all. In these systems, the voice synchronizer  must continue to operate properly. In the absence of SID packets, the voice parameters of the background noise at the far end can be determined by running the VAD  at the voice decoder  in series with the comfort noise estimator .","In the described exemplary embodiment, the voice synchronizer  is not dependent upon sequence numbers embedded in the voice packet. The voice synchronizer  can invoke a number of mechanisms to compensate for delay jitter in these systems. For example, the voice synchronizer  can assume that the voice queue  is in an underflow condition due to excess jitter and perform packet repeats by enabling the lost frame recovery engine . Alternatively, the VAD  at the voice decoder  can be used to estimate whether or not the underflow of the voice queue  was due to the onset of a silence period or due to packet loss. In this instance, the spectrum and\/or the energy of the digital voice samples can be estimated and the result fed back to the voice synchronizer . The voice synchronizer  can then invoke the lost packet recovery engine  during voice packet losses and the comfort noise generator  during silent periods.","When DTMF packets arrive, they are depacketized by the depacketizing engine . DTMF frames at the output of the depacketizing engine  are written into the DTMF queue . The DTMF synchronizer  couples the DTMF frames from the DTMF queue  to the tone generator . Much like the voice synchronizer, the DTMF synchronizer  is employed to provide an isochronous stream of DTMF frames to the tone generator . Generally speaking, when DTMF packets are being transferred, voice frames should be suppressed. To some extent, this is protocol dependent. However, the capability to flush the voice queue  to ensure that the voice frames do not interfere with DTMF generation is desirable. Essentially, old voice frames which may be queued are discarded when DTMF packets arrive. This will ensure that there is a significant inter-digit gap before DTMF tones are generated. This is achieved by a \u201ctone present\u201d message passed between the DTMF queue and the voice synchronizer .","The tone generator  converts the DTMF signals into a DTMF tone suitable for the POTS telephone  (see ). The tone generator  overwrites the media queue  to prevent leakage through the voice path and to ensure that the DTMF tones are not too noisy.","There is also a possibility that DTMF tone may be fed back as an echo into the DTMF detector . To prevent false detection, the DTMF detector  can be disabled entirely (or disabled only for the digit being generated) during DTMF tone generation. This is achieved by a \u201ctone on\u201d message passed between the tone generator  and the DTMF detector . Alternatively, the NLP  can be activated while generating DTMF tones.","When call progress tone packets arrive, they are depacketized by the depacketizing engine . Call progress tone frames at the output of the depacketizing engine  are written into the call progress tone queue . The call progress tone synchronizer  couples the call progress tone frames from the call progress tone queue  to a call progress tone generator . Much like the DTMF synchronizer, the call progress tone synchronizer  is employed to provide an isochronous stream of call progress tone frames to the call progress tone generator . And much like the DTMF tone generator, when call progress tone packets are being transferred, voice frames should be suppressed. To some extent, this is protocol dependent. However, the capability to flush the voice queue  to ensure that the voice frames do not interfere with call progress tone generation is desirable. Essentially, old voice frames which may be queued are discarded when call progress tone packets arrive to ensure that there is a significant inter-digit gap before call progress tones are generated. This is achieved by a \u201ctone present\u201d message passed between the call progress tone queue  and the voice synchronizer .","The call progress tone generator  converts the call progress tone signals into a call progress tone suitable for the POTS telephone  (see ). The call progress tone generator  overwrites the media queue  to prevent leakage through the voice path and to ensure that the call progress tones are not too noisy.","The outgoing PCM signal in the media queue  is coupled to the PXD  via the switchboard . The outgoing PCM signal is coupled to an amplifier  before being outputted on the PCM output line to the audio processor (see ).","An exemplary voice signal processor is disclosed U.S. patent application Ser. No. 09\/522,185, entitled \u201cVoice and Data Exchange Over a Packet Based Network,\u201d the contents of which is hereby incorporated by reference as though fully set forth herein.","1.2.2.2.2. The Fax Relay Mode","Fax relay mode provides signal processing of fax signals. Fax relay mode enables the transmission of fax signals over a packet based system such as VoIP, VoFR, FRF-11, VTOA, or any other proprietary network. For the purposes of explanation, first fax machine is called a sending fax that is connected to the sending network gateway through a PSTN. The sending network gateway is connected to a cable head end via a HFC network. Additional fax machines may be on line connections coupled to the other end of the cable head end via a network gateway and a HFC network, or off line connections, coupled to the cable head end CMTS for example by a telephone residential gateway and a PSTN.","In the described exemplary embodiment, the residential gateway is shown only with a POTS telephone  (see ) coupled directly to the residential gateway. However, those skilled in the art will appreciate that additional POTS telephone can be connected to the residential gateway. Moreover, one or more fax machines can be connected directly to the residential gateway with additional subscriber ports. The additional fax machines should each have their own subscriber port, however, those skilled in the art will further recognize that one or more fax machines may share a common subscriber port using conventional multi-access techniques such as time-division multi-access or frequence-division multi-access. In applications supporting a fax machine connected directly to the residential gateway, fax signals between the near end fax machine and a far end fax machine will interface through the voice and data processor in the fax relay mode, the audio processor and the voice AFE (seeb ).","The transfer of fax signals over packet based networks may be accomplished by at least three alternative methods. In the first method, fax data signals are exchanged in real time. Typically, the sending and receiving fax machines are spoofed to allow transmission delays plus jitter of up to about 1.2 seconds. The second, store and forward mode, is a non real time method of transferring fax data signals. Typically, the fax communication is transacted locally, stored into memory and transmitted to the destination fax machine at a subsequent time. The third mode is a combination of store and forward mode with minimal spoofing to provide an approximate emulation of a typical fax connection.","In the fax relay mode, the network VHD invokes the packet fax data exchange. The packet fax data exchange provides demodulation and re-modulation of fax data signals. This approach results in considerable bandwidth savings since only the underlying unmodulated data signals are transmitted across the packet based network. The packet fax data exchange also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange. Additionally, the packet fax data exchange compensates for lost data packets with error correction processing. Spoofing may also be provided during various stages of the procedure between the fax machines to keep the connection alive.","The packet fax data exchange is divided into two basic functional units, a demodulation system and a re-modulation system. In the demodulation system, the network VHD couples fax data signals from a circuit switched network, or a fax machine, to the packet based network. In the re-modulation system, the network VHD couples fax data signals from the packet network to the switched circuit network, or a fax machine directly.","During real time relay of fax data signals over a packet based network, the sending and receiving fax machines are spoofed to accommodate network delays plus jitter. Typically, the packet fax data exchange can accommodate a total delay of up to about 1.2 seconds. Preferably, the packet fax data exchange supports error correction mode (ECM) relay functionality, although a full ECM implementation is typically not required. In addition, the packet fax data exchange should preferably preserve the typical call duration required for a fax session over a PSTN\/ISDN when exchanging fax data signals between two terminals.","The packet fax data exchange for the real time exchange of fax data signals between a circuit switched network and a packet based network is shown schematically in . In this exemplary embodiment, a connecting PXD (not shown) connecting the fax machine to the switch board \u2032 is transparent, although those skilled in the art will appreciate that various signal conditioning algorithms could be programmed into PXD such as echo cancellation and gain.","After the PXD (not shown), the incoming fax data signal is coupled to the demodulation system of the packet fax data exchange operating in the network VHD via the switchboard .","The incoming fax data signal is received and buffered in an ingress media queue . A V.21 data pump  demodulates incoming T.30 message so that T.30 relay logic  can decode the received T.30 messages . Local T.30 indications are packetized by a packetization engine  and if required, translated into T.38 packets via a T.38 shim  for transmission to a T.38 compliant remote network gateway (not shown) across the packet based network. The V.21 data pump  is selectively enabled\/disabled by the T.30 relay logic  in accordance with the reception\/transmission of the T.30 messages or fax data signals. The V.21 data pump  is common to the demodulation and re-modulation system. The V.21 data pump  communicates T.30 messages such as for example called station tone (CED) and calling station tone (CNG) to support fax setup between a local fax device (not shown) and a remote fax device (not shown) via the remote network gateway.","The demodulation system further includes a receive fax data pump  which demodulates the fax data signals during the data transfer phase. The receive fax data pump  supports the V.27ter standard for fax data signal transfer at 2400\/4800 bps, the V.29 standard for fax data signal transfer at 7200\/9600 bps, as well as the V.17 standard for fax data signal transfer at 7200\/9600\/12000\/14400 bps. The V.34 fax standard, once approved, may also be supported. The T.30 relay logic  enables\/disables the receive fax data pump  in accordance with the reception of the fax data signals or the T.30 messages.","If error correction mode (ECM) is required, receive ECM relay logic  performs high level data link control (HDLC) de-framing, including bit de-stuffing and preamble removal on ECM frames contained in the data packets. The resulting fax data signals are then packetized by the packetization engine  and communicated across the packet based network. The T.30 relay logic  selectively enables\/disables the receive ECM relay logic  in accordance with the error correction mode of operation.","In the re-modulation system, if required, incoming data packets are first translated from a T.38 packet format to a protocol independent format by the T.38 packet shim . The data packets are then de-packetized by a depacketizing engine . The data packets may contain T.30 messages or fax data signals. The T.30 relay logic  reformats the remote T.30 indications and forwards the resulting T.30 indications to the V.21 data pump . The modulated output of the V.21 data pump  is forwarded to an egress media queue  for transmission in either analog format or after suitable conversion, as 64 kbps PCM samples to a local fax device.","De-packetized fax data signals are transferred from the depacketizing engine  to a jitter buffer . If error correction mode (ECM) is required, transmitting ECM relay logic  performs HDLC de-framing, including bit stuffing and preamble addition on ECM frames. The transmitting ECM relay logic  forwards the fax data signals, (in the appropriate format) to a transmit fax data pump  which modulates the fax data signals and outputs 8 KHz digital samples to the egress media queue . The T.30 relay logic selectively enables\/disables () the transmit ECM relay logic  in accordance with the error correction mode of operation.","The transmit fax data pump  supports the V.27ter standard for fax data signal transfer at 2400\/4800 bps, the V.29 standard for fax data signal transfer at 7200\/9600 bps, as well as the V.17 standard for fax data signal transfer at 7200\/9600\/12000\/14400 bps. The T.30 relay logic selectively enables\/disables () the transmit fax data pump  in accordance with the transmission of the fax data signals or the T.30 message samples.","If the jitter buffer  underflows, a buffer low indication is coupled to spoofing logic . Upon receipt of a buffer low indication during the fax data signal transmission, the spoofing logic  inserts \u201cspoofed data\u201d at the appropriate place in the fax data signals via the transmit fax data pump  until the jitter buffer  is filled to a pre-determined level, at which time the fax data signals are transferred out of the jitter buffer . Similarly, during the transmission of the T.30 message indications, the spoofing logic  can insert \u201cspoofed data\u201d at the appropriate place in the T.30 message samples via the V.21 data pump .","An exemplary fax relay is disclosed U.S. patent application Ser. No. 09\/522,185, entitled \u201cVoice and Data Exchange Over a Packet Based Network,\u201d the contents of which has been previously incorporated herein by reference.","1.2.2.2.3. Data Relay Mode","Data relay mode provides full duplex signal processing of data signals. Data relay mode enables the transmission of data signals over a packet based system such as VoIP, VoFR, FRF-11, VTOA, or any other proprietary network. The data relay mode should also permit data signals to be carried over traditional media such as TDM. The described exemplary embodiment of the residential gateway support the exchange of data signals with other network gateways via an HFC network and cable head end or off line devices via for example a circuit switched network such as the PSTN. By way of example, the Netscape computer  described in connection with can communicate with another far end device using an internal modem and the residential gateway to access the WAN. The internal modem causes the voice and data processor in the residential gateway to invoke the packet modem data exchange for this purpose. For the purposes of explanation, the internal modem is referred to as a call modem. Far end modems are typically called answer modems.","In data relay mode, a local modem connection is established on each end of the packet based network. That is, the call modem and the residential gateway of establish a local modem connection, as does the destination answer modem and its respective answer network gateway. Next, data signals are relayed across the packet based network. The voice and data processor in the residential gateway demodulates the data signal and formats the demodulated data signal for the particular packet based network. The answer network gateway compensates for network impairments and remodulates the encoded data in a format suitable for the destination answer modem. This approach results in considerable bandwidth savings since only the underlying demodulated data signals are transmitted across the packet based network.","In the data relay mode, the packet data modem exchange provides demodulation and modulation of data signals. With full duplex capability, both modulation and demodulation of data signals can be performed simultaneously. The packet data modem exchange also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange. Additionally, the packet data modem exchange compensates for system clock jitter between modems with a dynamic phase adjustment and resampling mechanism. Spoofing may also be provided during various stages of the call negotiation procedure between the modems to keep the connection alive.","The packet data modem exchange invoked by the network VHD in the data relay mode is shown schematically in . In the described exemplary embodiment, a connecting PXD (not shown) connecting a modem to the switch board  is transparent, although those skilled in the art will appreciate that various signal conditioning algorithms could be programmed into the PXD such as filtering, echo cancellation and gain.","After the PXD, the data signals are coupled to the network VHD via the switchboard . The packet data modem exchange provides two way communication between the internal modem of the netscape computer and the packet based network with two basic functional units, a demodulation system and a remodulation system. In the demodulation system, the network VHD exchanges data signals from the internal modem to the packet based network. In the remodulation system, the network VHD exchanges data signals from the packet based network to the internal modem.","In the demodulation system, the data signals are received and buffered in an ingress media queue . A data pump receiver  demodulates the data signals from the ingress media queue . The data pump receiver  supports the V.22bis standard for the demodulation of data signals at 1200\/2400 bps; the V.32bis standard for the demodulation of data signals at 4800\/7200\/9600\/12000\/14400 bps, as well as the V.34 standard for the demodulation of data signals up to 33600 bps. Moreover, the V.90 standard may also be supported. The demodulated data signals are then packetized by the packetization engine  and coupled to the DOCSIS MAC.","In the remodulation system, packets of data signals from the packet based network are first depacketized by a depacketizing engine  and stored in a jitter buffer . A data pump transmitter  modulates the buffered data signals with a voiceband carrier. The modulated data signals are in turn stored in the egress media queue  before being output to the PXD (not shown) via the switchboard . The data pump transmitter  supports the V.22bis standard for the transfer of data signals at 1200\/2400 bps; the V.32bis standard for the transfer of data signals at 4800\/7200\/9600\/12000\/14400 bps, as well as the V.34 standard for the transfer of data signal up to 33600 bps. Moreover, the V.90 standard may also be supported.","During jitter buffer underflow, the jitter buffer  sends a buffer low indication to spoofing logic . When the spoofing logic  receives the buffer low signal indicating that the jitter buffer  is operating below a predetermined threshold level, it inserts spoofed data at the appropriate place in the data signal via the data pump transmitter . Spoofing continues until the jitter buffer  is filled to the predetermined threshold level, at which time data signals are again transferred from the jitter buffer  to the data pump transmitter .","End to end clock logic  also monitors the state of the jitter buffer . The clock logic  controls the data transmission rate of the data pump transmitter  in correspondence to the state of the jitter buffer . When the jitter buffer  is below a predetermined threshold level, the clock logic  reduces the transmission rate of the data pump transmitter . Likewise, when the jitter buffer  is above a predetermined threshold level, the clock logic  increases the transmission rate of the data pump transmitter .","Before the transmission of data signals across the packet based network, the connection between the two modems must first be negotiated through a handshaking sequence. This entails a two-step process. First, a call negotiator  determines the type of modem (i.e., V.22, V.32bis, V.34, V.90, etc.) connected to each end of the packet based network. Second, a rate negotiator  negotiates the data signal transmission rate between the two modems.","The call negotiator  determines the type of modem connected locally, as well as the type of modem connected remotely via the packet based network. The call negotiator  utilizes V.25 automatic answering procedures and V.8 auto-baud software to automatically detect modem capability. The call negotiator  receives protocol indication signals (ANSam and V.8 menus) from the ingress media queue , as well as AA, AC and other message indications from the local modem via a data pump state machine , to determine the type of modem in use locally. The call negotiator  relays the ANSam answer tones and other indications from the data pump state machine  to the remote modem via a packetization engine . The call negotiator also receives ANSam, AA, AC and other indications from a remote modem (not shown) located on the opposite end of the packet based network via a depacketizing engine . The call negotiator  relays ANSam answer tones and other indications to a local modem (not shown) via an egress media queue  of the modulation system. With the ANSam, AA, AC and other indications from the local and remote modems, the call negotiator  can then negotiate a common standard (i.e., V.22, V.32bis, V.34, V.90, etc.) in which the data pumps must communicate with the local modem and the remote modems.","The packet data modem exchange preferably utilizes indication packets as a means for communicating answer tones, AA, AC and other indication signals across the packet based network However, the packet data modem exchange supports data pumps such as V.22bis and V.32bis which do not include a well defined error recovery mechanism, so that the modem connection may be terminated whenever indication packets are lost. Therefore, either the packet data modem exchange or the application layer should ensure proper delivery of indication packets when operating in a network environment that does not guarantee packet delivery.","The packet data modem exchange can ensure delivery of the indication packets by periodically retransmitting the indication packet until some expected packets are received. For example, in V.32bis relay, the call negotiator operating under the packet data modem exchange on the answer network gateway periodically retransmits ANSam answer tones from the answer modem to the call modem, until the calling modem connects to the line and transmits carrier state AA.","Alternatively, the packetization engine can embed the indication information directly into the packet header. In this approach, an alternate packet format is utilized to include the indication information. During modem handshaking, indication packets transmitted across the packet based network include the indication information, so that the system does not rely on the successful transmission of individual indication packets. Rather, if a given packet is lost, the next arriving packet contains the indication information in the packet header. Both methods increase the traffic across the network. However, it is preferable to periodically retransmit the indication packets because it has less of a detrimental impact on network traffic.","The rate negotiator  synchronizes the connection rates at the network gateways. The rate negotiator receives rate control codes from the local modem via the data pump state machine  and rate control codes from the remote modem via the depacketizing engine . The rate negotiator  also forwards the remote rate control codes received from the remote modem to the local modem via commands sent to the data pump state machine . The rate negotiator  forwards the local rate control codes received from the local modem to the remote modem via the packetization engine . Based on the exchanged rate codes the rate negotiator  establishes a common data rate between the calling and answering modems. During the data rate exchange procedure, the jitter buffer  should be disabled by the rate negotiator  to prevent data transmission between the call and answer modems until the data rates are successfully negotiated.","Similarly error control (V.42) and data compression (V.42bis) modes should be synchronized at each end of the packet based network. Error control logic  receives local error control messages from the data pump receiver  and forwards those V.14\/V.42 negotiation messages to the remote modem via the packetization engine . In addition, error control logic  receives remote V.14\/V.42 indications from the depacketizing engine  and forwards those V.14\/V.42 indications to the local modem. With the V.14\/V.42 indications from the local and remote modems, the error control logic  can negotiate a common standard to ensure that the network gateways utilize a common error protocol. In addition, error control logic , communicates the negotiated error control protocol () to the spoofing logic  to ensure data mode spoofing is in accordance with the negotiated error control mode.","V.42 is a standard error correction technique using advanced cyclical redundancy checks and the principle of automatic repeat requests (ARQ). In accordance with the V.42 standard, transmitted data signals are grouped into blocks and cyclical redundancy calculations add error checking words to the transmitted data signal stream. The receiving modem calculates new error check information for the data signal block and compares the calculated information to the received error check information. If the codes match, the received data signals are valid and another transfer takes place. If the codes do not match, a transmission error has occurred and the receiving modem requests a repeat of the last data block. This repeat cycle continues until the entire data block has been received without error.","Various voiceband data modem standards exist for error correction and data compression. V.42bis and MNP5 are examples of data compression standards. The handshaking sequence for every modem standard is different so that the packet data modem exchange should support numerous data transmission standards as well as numerous error correction and data compression techniques.","An exemplary data relay is disclosed U.S. patent application Ser. No. 09\/522,185, entitled \u201cVoice and Data Exchange Over a Packet Based Network,\u201d the contents of which has been previously incorporated herein by reference.","1.3 HomePNA Controller and AFE","The HomePNA controller and the AFE provides the interface between the voice and data processor and the HomePNA LAN (see ). Referring to , the exemplary HomePNA controller  (see ) can be a fully integrated MAC\/PHY that transmits and receives data over the HomePNA LAN. In the described exemplary embodiment, the HomePNA controller includes a bus interface , such as a PCI or MSI bus interface for communication in accordance with well-known PC-based and\/or peripheral\/internet appliance architectures.","The digital PHY  having a FDQAM\/QAM transmitter and receiver interfacing an AFE (not shown) with a MAC . The HomePNA PHY uses 4 MBaud QAM modulation and 2 MBaud Frequency Diverse QAM (FDQAM), with two to eight bits-per-Baud constellation encoding. The PHY-layer payload modulation rate therefor ranges from 4 Mb\/s to 32 Mb\/s. The modulation techniques are set forth in U.S. patent application Ser. No. 09\/169,552 entitled \u201cFrequency Diverse Single Carrier Modulation For Robust Communication Over In-Premises Wiring\u201d, which is expressly incorporated herein by reference as though set forth in full. Information is transmitted on the HomePNA LAN in bursts. Each burst or physical layer frame consists of PHY-layer payload information encapsulated with a PHY preamble, header and postamble. The PHY-layer payload in each physical frame is that part of the Ethernet Link Level frame that follows the Ethertype field through the Frame Check Sequence (FCS), plus a CRC-16 and a pad field for the 4 Mbaud rate. Hereafter, \u201cpayload\u201d refers to the PHY-layer payload unless otherwise specified.","The MAC  is modeled after the carrier-sense multiple-access with collision detection (CSMA\/CD) MAC function of Ethernet (IEEE Std 802.3, 1998 Edition), adapted to the V2 PHY and enhanced with quality-of-service (QoS) features. The Carrier Sense Multiple Access\/Collision Detect (CSMA\/CD) media access method is the means by which two or more stations share a common transmission channel. To transmit, a station waits (defers) for a quiet period on the channel (that is, no other station is transmitting) and then sends the intended message modulated as per the PHY characteristics. The transmission deferral is ordered by up to eight priority levels, implementing absolute priority among stations contending for access. If, after initiating a transmission, the message collides with that of another station, then each transmitting station ceases transmission and resolves the collision by choosing a backoff level and defers to other stations that have chosen a lower backoff level. The distributed algorithm for choosing backoff level tightly bounds the access latency.","The exemplary MAC  therefore includes carrier sense logic, collision detection logic, and CSMA\/CD collision resolution\/rx frame synchronization logic. Carrier sense logic detects the starting and ending times of a valid frame transmission on the wire. This is used to determine when frames are present on the channel\/transmission medium, as well as being used to determine the presence of a backoff signal in a signal slot. Collision detection logic detects the presence of a valid frame transmission from some other station during an active transmission, and for all stations, including non-transmitting stations, detects the received fragment that represents a transmission truncated by a collision. Collision resolution logic implements the distributed algorithm that controls backoff.","In the downstream direction the HomePNA controller  interfaces with the MIPS core  via a bus interface that is couple to the ISB . The MAC  encapsulates messages with a data layer header and start of frame (SOF) indicator. The MAC  may also add data trailer and end of frame indicators. The MAC header may include a source address (SA) to identify the node sending the message, and may also include a destination address (DA) to identify the intended recipient or group of recipients. The message with appended headers, trailers and indicators is then passed to the physical layer where it is passed on to network transmission medium through the network port of the residential gateway. In the upstream direction the reverse process occurs wherein the MAC  receives messages from the physical layer and the MAC  strips off the header and\/or trailer information and places the message in system memory (SDRAM)  via the MIPS core  and ISB  for transmission upstream to the cable head end.","The MAC  is coupled to the bus interface  through a transmit (TX) FIFO  and receive (RX) FIFO . The bus interface  is used to coupled HomePNA packets from the (RX) FIFO  to system memory by the ISB  (see ). Similarly, the bus interface  is used to coupled HomePNA packets from system memory via the ISB and bus interface  into the (TX) FIFO . A transmit state machine initiates transmission of the HomePNA packets to the MAC\/PHY when a FIFO watermark is reached or an end of packet is received. The bus interface  also has the capability of similarly communicating with other devices, such as a V.90 modem through V.90 modem interface  and its respective transmit (TX) FIFO  and receive (RX) FIFO .","Referring to , the HomePNA AFE  (see ) couples the HomePNA Controller to the HomePNA LAN. The HomePNA AFE includes a digital input\/output (I\/O) circuit  for transferring samples to and receiving samples from the HomePNA controller. The digital I\/O  includes a clock  for driving the HomePNA controller. In the described exemplary embodiment, the clock is a 64 MHz +\/\u2212100 ppm clock generated by 64 MHz crystal .","A transmit path of the HomePNA AFE includes a digital-to-analog converter  for converting digitally sampled data from the HomePNA controller to an analog signal. The transmit path may further include an AGC (Automatic Gain Control)  that adjust the gain of the analog signal in accordance with an input received by the digital I\/O circuit . A filter  and transmit-off switch  are coupled to the HomePNA LAN connector , such as a UTP wiring RJ11 connector, through an electronic hybrid  for buffering signals and filter transformer electronic protection circuit .","The receive path includes a the filter transformer electronic protection circuit  and the electronic hybrid  at the input from the HomePNA LAN. The output of the electronic hybrid is amplified by a VGA (Voltage Gain Amplifier) . The output of the VGA  is coupled to a filter  for low-pass anti-aliasing. The filtered output is then amplified by a second VGA , and the amplified signal is applied to an analog-to-digital converter . The analog-to-digital converter samples the analog signal from the HomePNA LAN and transmits the samples to the HomePNA controller through the digital I\/O circuit . The gain for the VGA's can be controlled externally though the digital I\/O circuit . The operation of the AFE is well known in the art.","An exemplary HomePNA system is disclosed U.S. patent application Ser. No. 09\/826,239, entitled \u201cA transceiver Method and Signal Therefor Embodied in a Carrier Wave for a Frame-Based Communication Network,\u201d the contents of which has been previously incorporated herein by reference.","2. Network Telephone",{"@attributes":{"id":"p-0225","num":"0224"},"figref":["FIG. 12","FIG. 1"],"i":"a","b":["126","126","1201","1206","1202","1204","1209","126","1209","1210","1208"]},"The keypad  is used to enter user inputs such as telephone numbers and passwords. The special function keys  are used to enter control command inputs, establish communications and to select different modes of operation. The LCD display  can provide the user with various forms of information including the dialed number, as well as any other desired information such as network status, caller identification, etc.",{"@attributes":{"id":"p-0227","num":"0226"},"figref":["FIG. 13","FIG. 12","FIG. 1"],"b":["1202","1302","1202","1302","1302","1302","1304"],"i":"a"},"The handset receiver includes a speaker (not shown) which allows the near end user to receive voice communications from a far end user. Specifically, the voice communications from the far end user is received by the voice processing engine  in a compressed and packetized format suitable for transport on the packet based network connected to the network port . In the described exemplary embodiment, the packet based network is the HomePNA LAN described in connection with . However, as described above, the voice processing engine  can be implemented with various voice decompression algorithms and packetization formats depending upon the particular network to which the network telephone is connected. The voice processing engine  decodes the voice packets into voice signals, decompresses the voice signals, and transmits the voice signals to the speaker in the handset receiver as analog voice signals.","The keypad  is coupled to the voice processing engine  via a GPIO bus . In the described exemplary embodiment, the keypad  generates DTMF signals in response to a sequence of keys depressed by a user. The DTMF signals are coupled to the voice processing engine  where they are further processed and packetized. The DTMF packets are coupled to the packet based network through the network port .","The voice processing engine  also controls the LCD display  through a serial port interface bus . External memory may also be provided through an external bus interface . In the described exemplary embodiment, the external memory includes FLASH memory  and a SDRAM .","The architecture for an exemplary embodiment of the voice processing engine for use in a HomePNA telephone is shown in . The voice processing engine includes a HomePNA AFE . The HomePNA AFE  is identical to the HomePNA AFE  described in connection with the residential gateway (see ). The HomePNA AFE  is coupled to a HomePNA controller .","The HomePNA controller  is similar to that described in connection with the HomePNA controller for the residential gateway  in that it enables a 4-32 Mbits\/sec HomePNA LAN on existing in home telephone wiring. The HomePNA controller  can be a fully integrated MAC\/PHY device that provides bi-directional communication with other devices on HomePNA LAN as well as the HomePNA controller in the residential gateway.","Referring to , the exemplary HomePNA controller  includes a digital PHY  having a FDQAM\/QAM transmitter and receiver interfacing the HomePNA AFE (not shown) with a MAC . The PHY  is implemented with the same modulation techniques employed in the residential gateway. However, as those skilled in the art will appreciate, the PHY  can be implemented with various modulation techniques depending upon the particular application and the overall design constraints. In the described exemplary embodiment, the PHY  is slaved to the residential gateway, and therefore, should employ the same modulation techniques. To this end, the PHY  uses 4 MBaud QAM modulation and 2 MBaud Frequency Diverse QAM (FDQAM), with two to eight bits-per-Baud constellation encoding. The PHY  and similar to the HomePNA controller in the residential gateway. The PHY-layer payload modulation rate therefor ranges from 4 Mb\/s to 32 Mb\/s. The PHY  utilizes a burst transmission methodology. Each burst or physical layer frame consists of PHY-layer payload information encapsulated with a PHY preamble, header and postamble. The PHY-layer payload in each physical frame is that part of the Ethernet Link Level frame that follows the Ethertype field through the Frame Check Sequence (FCS), plus a CRC-16 and a pad field for the 4 Mbaud rate.","The MAC  may also take on many forms depending on various factors including the system application and overall design constraints. In the described exemplary embodiment, the MAC  is implemented to be compatible with the residential gateway. To this end, the MAC  is modeled after the carrier-sense multiple-access with collision detection (CSMA\/CD) MAC function of Ethernet (IEEE Std 802.3, 1998 Edition), adapted to the V2 PHY and enhanced with quality-of-service (QoS) features. The MAC  therefore includes carrier sense logic, collision detection logic, and CSMA\/CD collision resolution\/rx frame synchronization logic.","In the upstream direction the HomePNA controller  interfaces directly with the HomePNA LAN via the HomePNA AFE. The MAC  encapsulates messages with a data layer header and start of frame (SOF) indicator. The MAC  may also add data trailer and end of frame indicators. The MAC header may include a source address (SA) to identify the node sending the message, and may also include a destination address (DA) to identify the intended recipient or group of recipients. The message with appended headers, trailers and indicators is then passed to the PHY  where it is passed on to the HomePNA LAN. In the downstream direction the reverse process occurs wherein the MAC  receives messages from the PHY  and the MAC  strips off the header and\/or trailer information and transmits the data to the voice processor  (see ).","The MAC  is coupled to the voice processor through a transmit (TX) FIFO  and a receive (RX) FIFO . A transmit state machine initiates transmission of the HomePNA packets to the MAC\/PHY when a FIFO watermark is reached or an end of packet is received.","Turning back to , the HomePNA controller  interfaces with the voice processor  over a data bus . The voice processor  performs a translation function between VoHN packets and PCM voice samples. The synchronization of the VoHN packets and the PCM voice samples is performed by the HomePNA controller. The specific translation is direction dependent. Packets arriving from the HomePNA controller are translated to PCM voice samples and delivered to a CODEC . PCM voice samples arriving from the CODEC  are translated to a VoHN format and delivered to the HomePNA controller. The HomePNA controller  is used to synchronize the CODEC sampling rate.","An exemplary voice processor can be implemented in a variety of fashions including, by way of example, the programmable DSP software architecture described above in connection with . The exemplary software architecture described above can be integrated into numerous telecommunications products and support multiple voice channels. In the context of an HomePNA telephone, only a single NetVHD is needed. The NetVHD encodes and packetizes DTMF tones from the keypad and voice from the handset and transmits the packets to the applications layer. In addition, the NetVHD disassembles DTMF tones and voice from the the applications layer, decodes the packets into signals, and transmits the signals to the CODEC .","An exemplary embodiment of the NetVHD in the described software architecture operating in the HomePNA telephone includes only a voice mode. However, those skilled in the art will appreciate that all four operational modes can implemented for expansion capability to other functions. By way of example, a fax machine could be plugged directly into the HomePNA phone and supported by the NetVHD operating in either the voiceband mode or the fax relay mode. As described above, the voice mode is implemented with a number of services provided by a packet voice exchange and a packet tone exchange. The packet voice exchange may employ numerous voice compression algorithms, including, among others, Linear 128 kbps, G.711 u-law\/A-law 64 kbps (ITU Recommendation G.711 (1988)\u2014Pulse code modulation (PCM) of voice frequencies), G.726 16\/24\/32\/40 kbps (ITU Recommendation G.726 (12\/90)\u201440, 32, 24, 16 kbit\/s Adaptive Differential Pulse Code Modulation (ADPCM)), G.729A 8 kbps (Annex A (11\/96) to ITU Recommendation G.729\u2014Coding of speech at 8 kbit\/s using conjugate structure algebraic-code-excited linear-prediction (CS-ACELP)\u2014Annex A: Reduced complexity 8 kbit\/s CS-ACELP speech CODEC), and G.723 5.3\/6.3 kbps (ITU Recommendation G.723.1 (03\/96) Dual rate coder for multimedia communications transmitting at 5.3 and 6.3 kbit\/s).","In operation, the applications layer opens the NetVHD and connects it to the PXD. In the described exemplary embodiment only one PXD is needed to support the HomePNA telephone. However, those skilled in the art will appreciate that the DSP software architecture can be implemented with numerous PXD's to support expansion capability. The applications layer configures various operational parameters of the NetVHD, including, among others, default voice compression (Linear, G.711, G.726, G.723.1, G.723.1A, G.729A, G.729B). The applications layer then loads an appropriate signaling service (not shown) into the NetVHD, configures it and sets the NetVHD to the On-hook state.","In response to events from the signaling service (not shown) via the handset and keypad, or HomePNA packets from the HomePNA LAN, the applications layer will set the NetVHD to the off-hook state. In an exemplary embodiment, if the signaling service event is triggered by the handset, the packet tone exchange will generate dial tone. Once a DTMF tone is detected, the dial tone is terminated. The DTMF tones are packetized and forwarded to the applications layer for transmission on the HomePNA LAN. The packet tone exchange could also play ringing tone back to the handset (when a far end telephony device is being rung), and a busy tone if the far end telephony device is unavailable. Other tones may also be supported to indicate all circuits are busy, or an invalid sequence of DTMF digits were entered on the keypad. Once a connection is made between the HomePNA telephone and far end telephony devices, the packet tone exchange is terminated in favor of the packet voice exchange.","The PXD for the voice mode provides echo cancellation, gain, and automatic gain control. The network VHD invokes numerous services packet voice exchange and packet tone exchange. The network VHD services operate together to provide: (1) an encoder system with DTMF detection, call progress tone detection, voice activity detection, voice compression, and comfort noise estimation, and (2) a decoder system with delay compensation, voice decoding, DTMF generation, comfort noise generation and lost frame recovery. The services invoked by the network VHD and the associated PXD is the same as that described above in connection with .","The exemplary voice processor is implemented in the HomePNA telephone to minimize end-to-end delay and jitter. One of skill in the art will appreciate that the partition of functionality of the voice processor between the residential gateway and the HomePNA telephone may vary. By way of example, the voice processor could be housed partially or entirely in the residential gateway. Alternatively, the voice and data processor  (see ) could be used to support voice compression and decompression for communications over the HomePNA LAN in addition to supporting the conventional POTS telephone  connected directly to the residential gateway as shown in . The partitioning of functionality will depend on various factors including the specific application, the overall design constraints and other relevant factors.","The voice processor  is coupled to the CODEC . The CODEC  includes an analog-to-digital converter (ADC) for digitizing voice from the handset and a digital-to-analog converter (DAC) for reconstructing voice prior to delivery to the handset. The CODEC may also include a bandlimiting filter for the ADC and a reconstruction smoothing filter for the output of the DAC. The sampling rate of the ADC and DAC is controlled by the HomePNA controller .","A keypad scanner  provides an interface between the keypad and the voice processing engine. The LCD interface  provides an interface between LCD display and the voice processing engine.","3. HomePNA Adapter","The HomePNA adapter is a device that allows a conventional POTS telephone, or other conventional telephony device, to communicate with the residential gateway on the HomePNA LAN. The HomePNA adapter can be physically housed in a variety of structures and physically located in accordance with the specific application. In the exemplary embodiment described in connection with , two HomePNA adapters are shown, one to support a conventional POTS telephone  and another to support a conventional fax machine . In this embodiment, the HomePNA adapters can be a wall dongle with a male RJ-11 plug for connecting directly into the telephone wall jack in the home. An RJ-11 female plug may also be provided for connection to the POTS telephone or fax machine by a conventional telephone wire. Alternatively, the HomePNA adapter can be a device dongle with the male RJ-11 plug connected directly to the POTS telephone or fax machine and the female RJ-11 plug supporting a telephone wire connection between the particular device and the wall jack.","The HomePNA adapter is similar to the voice processing engine described in connection with  above in that it provides two-way translations between translates VoHN packets and PCM voice signals. The architecture for an exemplary embodiment of the voice processing engine for use in a HomePNA adapter is shown in .","The voice processing engine includes a HomePNA AFE  and a HomePNA controller  to interface the HomePNA adapter to the HomePNA LAN. The HomePNA AFE  is identical to that described in connection with the residential gateway as set forth in . Likewise, the HomePNA controller  is similar to that described in connection with the HomePNA telephone and the residential gateway in that it enables a 4-32 Mbits\/sec HomePNA LAN on existing in home telephone wiring. The HomePNA controller  can be a fully integrated MAC\/PHY device that provides bidirectional communication with other devices on HomePNA LAN as well as the HomePNA controller in the residential gateway. The specific details of the HomePNA controller  is discussed with reference to the HomePNA telephone in connection with  above.","The HomePNA controller  interfaces with a voice processor  over a data bus . The voice processor  performs a translation function between VoHN packets and PCM voice samples. The HomePNA controller  synchronizes the translation between the VoHN packets and the PCM voice samples. The specific translation is direction dependent. Packets arriving from the HomePNA controller  are translated to PCM voice samples and delivered to a CODEC . PCM voice samples arriving from the CODEC  are translated to a VoHN format and delivered to the HomePNA controller . A packet synchronizer  is used to synchronize the PCM voice samples with VoHN packets under control of the HomePNA controller .","An exemplary voice processor can be implemented in a variety of fashions including, by way of example, the programmable DSP software architecture described above in connection with . The exemplary software architecture described above can be integrated into numerous telecommunications products and support multiple voice, fax and modem channels. More particularly, the exemplary software architecture described above can utilize NetVHDs for transparently managing voice, fax, and modem data across a variety of packet based networks, including by way of example, the HomePNA LAN described in connection with above. The NetVHD encodes and packetizes DTMF, voice, fax, and modem data received from its respective telephony device. and transmits the packets to the applications layer. In addition, the NetVHD disassembles DTMF, voice, fax, and modem data from the applications layer, decodes the packets into signals, and transmits the signals to its respective telephony device. Although a single telephony device is shown connected to the HomePNA adapter in , those skilled in the art will appreciate that the HomePNA device can be configured to support multiple channels of voice, fax and modem from one or more telephony devices. In these configurations, multiple NetVHDs, PXDs and services may be utilized in a manner described above in connection with the voice and data processor in the residential gateway. To this end, the exemplary NetVHD includes four operational modes, namely voice mode, voiceband data mode , fax relay mode , and data relay mode . In each operational mode, the resource manager invokes various services. For example, in the voice mode , the resource manager invokes call discrimination , packet voice exchange , and packet tone exchange . The packet voice exchange  may employ numerous voice compression algorithms, including, among others, Linear 128 kbps, G.711 u-law\/A-law 64 kbps (ITU Recommendation G.711 (1988)\u2014Pulse code modulation (PCM) of voice frequencies), G.726 16\/24\/32\/40 kbps (ITU Recommendation G.726 (12\/90)\u201440, 32, 24, 16 kbit\/s Adaptive Differential Pulse Code Modulation (ADPCM)), G.729A 8 kbps (Annex A (11\/96) to ITU Recommendation G.729 Coding of speech at 8 kbit\/s using conjugate structure algebraic-code-excited linear-prediction (CS-ACELP)\u2014Annex A: Reduced complexity 8 kbit\/s CS-ACELP speech CODEC), and G.723 5.3\/6.3 kbps (ITU Recommendation G.723.1 (03\/96)\u2014Dual rate coder for multimedia communications transmitting at 5.3 and 6.3 kbit\/s).","In the fax relay mode, the resource manager invokes a packet fax data exchange service. The packet fax exchange may employ various data pumps including, among others, V.17 which can operate up to 14,400 bits per second, V.29 which uses a 1700-Hz carrier that is varied in both phase and amplitude, resulting in 16 combinations of 8 phases and 4 amplitudes which can operate up to 9600 bits per second, and V.27ter which can operate up to 4800 bits per second.","Likewise, the resource manager invokes a packet modem data exchange service in the data relay mode. The packet modem data exchange may employ various data pumps including, among others, V.22bis\/V.22 with data rates up to 2400 bits per second, V.32bis\/V.32 which enables full-duplex transmission at 14,400 bits per second, and V.34 which operates up to 33,600 bits per second.","In operation, the applications layer opens the NetVHD and connects it to the appropriate PXD. The applications layer may then may configure various operational parameters of the NetVHD, including, among others, default voice compression (Linear, G.711, G.726, G.723.1, G.723.1A, G.729A, G.729B), fax data pump (Binary, V.17, V.29, V.27ter), and modem data pump (Binary, V.22bis, V.32bis, V.34). The applications layer then loads an appropriate signaling service (not shown) into the NetVHD, configures it and sets the NetVHD to the On-hook state.","In response to events from the signaling service (not shown) via the telephony device connected to the HomePNA adapter, or signal packets from the far end, the applications layer will set the NetVHD to the appropriate off-hook state, typically voice mode. In an exemplary embodiment, if the signaling service event is triggered by the connected telephony device, the packet tone exchange will generate dial tone. Once a DTMF tone is detected, the dial tone is terminated. The DTMF tones are packetized and forwarded to the applications layer for transmission on the HomePNA LAN via the HomePNA controller. The packet tone exchange could also play ringing tone back to the connected telephony device (when a far end telephony device is being rung), and a busy tone if the far end telephony device is unavailable. Other tones may also be supported to indicate all circuits are busy, or an invalid sequence of DTMF digits were entered on the connected telephony device.","Once a connection is made between the connected telephony device and far end telephony devices, the call discriminator is responsible for differentiating between a voice and machine call by detecting the presence of a 2100 Hz. tone (as in the case when the telephony device is a fax or a modem), a 1100 Hz. tone or V.21 modulated high level data link control (HDLC) flags (as in the case when the telephony device is a fax). If a 1100 Hz. tone, or V.21 modulated HDLC flags are detected, a calling fax machine is recognized. The NetVHD then terminates the voice mode and invokes the packet fax exchange to process the call. If however, 2100 Hz tone is detected, the NetVHD terminates voice mode and invokes the packet data exchange.","The packet data exchange service further differentiates between a fax and modem by continuing to monitor the incoming signal for V.21 modulated HDLC flags, which if present, indicate that a fax connection is in progress. If HDLC flags are detected, the NetVHD terminates packet data exchange service and initiates packet fax exchange service. Otherwise, the packet data exchange service remains operative. In the absence of an 1100 or 2100 Hz. tone, or V.21 modulated HDLC flags the voice mode remains operative.","Voice mode provides signal processing of voice signals. The PXDs for the voice mode provide echo cancellation, gain, and automatic gain control. The network VHD invokes numerous services in the voice mode including call discrimination, packet voice exchange, and packet tone exchange. These network VHD services operate together to provide: (1) an encoder system with DTMF detection, call progress tone detection, voice activity detection, voice compression, and comfort noise estimation, and (2) a decoder system with delay compensation, voice decoding, DTMF generation, comfort noise generation and lost frame recovery.","In the fax relay mode, the network VHD invokes the packet fax data exchange. The packet fax data exchange provides demodulation and re-modulation of fax data signals. This approach results in considerable bandwidth savings since only the underlying unmodulated data signals are transmitted across the packet based network. The packet fax data exchange also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange. Additionally, the packet fax data exchange compensates for lost data packets with error correction processing. Spoofing may also be provided during various stages of the procedure between the fax machines to keep the connection alive.","In the data relay mode, the packet data modem exchange provides demodulation and modulation of data signals. With full duplex capability, both modulation and demodulation of data signals can be performed simultaneously. The packet data modem exchange also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange. Additionally, the packet data modem exchange compensates for system clock jitter between modems with a dynamic phase adjustment and resampling mechanism. Spoofing may also be provided during various stages of the call negotiation procedure between the modems to keep the connection alive.","The details of the voice processor  are described above in connection with residential gateway.","The voice processor  is coupled to the CODEC . The CODEC  includes an analog-to-digital converter (ADC) for digitizing voice from the handset and a digital-to-analog converter (DAC) for reconstructing voice prior to delivery to the handset. The CODEC may also include a bandlimiting filter for the ADC and a reconstruction smoothing filter for the output of the DAC. The sampling rate of the DAC and ADC is controlled by the HomePNA controller  in a manner to be described in greater detail below.","The CODEC  is coupled to a SLIC . The SLIC  is used to deliver POTS (Plain Old Telephone Service) to a conventional telephony device, such as the POTS telephone  of . The SLIC performs a voltage level conversion delivering the voltage levels required by the POTS telephone. An exemplary voice signal processor is disclosed U.S. patent application Ser. No. 09\/579,932, entitled \u201cSLIC Architecture and Interfaces,\u201d the contents of which have been incorporated previously by reference.","Those of skill in the art would understand that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented in any number of way including electronic hardware, computer software, or combinations of both. The various illustrative components, blocks, modules, circuits, and steps have been described generally in terms of their functionality. Whether the functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans recognize the interchangeability of hardware and software under these circumstances, and how best to implement the described functionality for each particular application.","Although exemplary embodiments of the present invention has been described, it should not be construed to limit the scope of the appended claims. Those skilled in the art will understand that various modifications may be made to the described embodiment. Moreover, to those skilled in the various arts, the invention itself herein will suggest solutions to other tasks and adaptations for other applications. It is therefore desired that the present embodiments be considered in all respects as illustrative and not restrictive, reference being made to the appended claims rather than the foregoing description to indicate the scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 1","FIG. 1"],"i":"b "},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 5","FIG. 4"],"i":"a "},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5","i":"b "},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5","i":"c "},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5","i":"d "},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5","i":"e "},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5","i":"f "},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5","i":"g "},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5","i":"h "},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 14","FIG. 12"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 15","FIG. 12"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
