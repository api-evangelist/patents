---
title: Distributed software testing using cloud computing resources
abstract: A method of creating computing environment in a cloud computing environment for execution of a test is disclosed. The method includes loading a setup script from a script store. The loading is performed by a test manager that is in communication with the script store. The test manager checks if there are more setup scripts to be loaded. If yes, the remaining setup scripts are loaded by the test manager. The test manager then calculates computing resources needed to run all tests as coded in all loaded scripts. The test manager then attempts to reserve needed computing resources in a virtual data center using a data center infrastructure manager.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949791&OS=08949791&RS=08949791
owner: VMware, Inc.
number: 08949791
owner_city: Palo Alto
owner_country: US
publication_date: 20090708
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["In the conventional system testing, testers typically perform a parallel testing within one machine, either multi-threading or multi-processing, to shorten testing time cycles. However, different threads and processes on the testing machine still compete for the same computing resources. The other approach is to use multiple sets of statically configured computing hardware for parallel testing, or distributed testing. This configuration requires more computing resources. Further, this static configuration of resources is not adaptable to dynamic reconfigurations of hardware resources to meet the changed testing requirements.","Products such as Surgient VQMS\u2122 and VMware vCenter Lab Manager\u2122 provide resource reservation features in a virtual data center. These products are used to setup the required environment for executing tests.","In one embodiment, a method of creating computing environment for execution of a test is disclosed. The method includes loading a setup script from a script store. The loading is performed by a test manager that is in communication with the script store. The test manager checks if there are more setup scripts to be loaded. If yes, the remaining setup scripts are loaded by the test manager. The test manager then calculates computing resources needed to run all tests as coded in all loaded scripts. The test manager then attempts to reserve needed computing resources in a virtual data center through a data center infrastructure manager.","In another embodiment, a computer readable media for storing programming instructions for creating computing environment for execution of a test. The computer readable media includes programming instructions for loading a setup script from a script store, the loading being performed by a test manager that is in communication with the script store and programming instructions for checking if there are more setup scripts to be loaded. The computer readable media further includes programming instructions for calculating computing resources needed to run all tests as coded in all loaded scripts and programming instructions for attempting to reserve needed computing resources in a virtual data center.","In yet another embodiment, a test manager for creating computing environment for execution of a test. The test manager includes a script loader to load one or more setup scripts from a testsuite store, a testsuite merge module to merge two setup scripts and an interfacing module to communicate with a virtual data center. The test manager also includes a computing environment setup module to calculate computing resource requirements and reserving the computing resources in the virtual data center.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1","b":["50","60","52","56","58","50","62","52","54","56"]},"In one embodiment Data Center Infrastructure Manager  provides interfaces to enable managing data center resources and launching virtual machines, providing resource reservation, etc. For example, if a user wants to launch a particular type of virtual machine on a particular type of physical host, Data Center Infrastructure Manager would facilitate the performance of this task by providing interfaces to the user for selecting a virtual machine template from VM Template Store , selecting a physical host and launching the virtual machine. In another example, Data Center Infrastructure Manager  also permits a user or a program to reserve computing resources in a data center that is being managed by Data Center Infrastructure Manager . In this example, a user or a program requests Data Center Infrastructure Manger  to set aside a particular types of resources, such as particular virtual machines running on particular types of physical hosts and including a particular type of networking, etc. It may be noted that configurable virtual network switches (not shown) may be employed to provide a particular networking configuration among virtual machines.","Test Manager  is used to setup testing environments for executing various types of tests on a selected type of computing resources. Test Manager  retrieves setup scripts from Setup Scripts Store  to prepare instructions for Data Center Infrastructure Manager . These instructions are based on the application programming interface (API) exposed by Data Center Infrastructure Manager . Data Center Infrastructure Manager  is capable of creating new virtual machines, configure these newly created virtual machines in a selected network configuration and other data center provisioning tasks. The API exposed by Data Center Infrastructure Manager , in one embodiment, is defined to accept instructions as to creating specifically configured virtual machines based on pre-configured virtual machine templates. In one embodiment, virtual machine templates are stored in VM Template Store , which is accessible to Data Center Infrastructure Manager .",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2","b":["50","52"]},"In one or more embodiments, Test Manager  is capable of identifying common resources among various tests or operations. For example,  illustrates that test T and T need the same virtual machines. Hence, test T can run on the setup created for the test T. Also, the test T and T uses a common virtual machine. Hence, Test Manager , when moving from the test T to T, will reuse the virtual machine VM. It may be noted that  illustrates a very simple setup for the sake of clarity. In one or more embodiments, a setup script may also include identities of virtual infrastructure managers and hypervisors that need to be used to setup particular virtual machines and their interconnectivities.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 1"],"b":["102","50","62","104","50","106","50","1","2"]},"At decision step , if there is another setup script that needs to be loaded, the control is moved back to step . If no other setup script needs to be loaded, at step , Test Manager  formats a request to reserve necessary resources in the virtual data center and sends the request to Data Center Infrastructure Manager  ().","In one or more embodiments, reserving resources includes identifying necessary resources in a virtual data center being monitored and managed by Data Center Infrastructure Manager  and setting them aside for a particular use by a particular requester (such as the test manager in this case). In one example, the reserved resources are moved into a private network accessible only to the requester. In other embodiments, an access control mechanism may also be employed to isolate the reserved resources. If some resources do not currently exist in the virtual data center, these resources are created by Data Center Infrastructure Manager . For example, if a virtual machine in a requested configuration is not available in the available computing resources, Data Center Infrastructure Manager  instantiate a new virtual machine having the requested configuration from the VM template store. The virtual data center can be a private data center, a public data center, or a mixed private and public data center, or cloud. A cloud is a collection of computing resources and applications in which dynamically scalable and often virtualized resources are provided as a service over a network. The computing resources provided by a cloud are generally transparent to the users of the computing resources. A user simply requests a certain type of computing environment through Data Center Infrastructure Manager , the user does not need to know about the arcane details of the virtual data center itself.","At decision step , a determination is made if required resources are available to setup a computing environment as needed in all loaded setup scripts. If yes, then at step , a computing environment to run all operations or tests is created. Test Manager  then runs either all operations in parallel or some tests in parallel and then other tests after the conclusion of some required prerequisite tests or operations. If at decision step  the answer is no, then at decision step , a determination is made if resources are available to run some tests in parallel but not enough to run all tests in parallel, then at step , a computing environment to run some tests in parallel is created. Test Manager  monitors conclusion of tests and as the tests are concludes, Test Manager  requests Data Center Infrastructure Manager  to release resources reserved for the tests just concluded to make room for the remaining tests. If not, then at decision step , a determination is made if resources are available to run tests in one setup script at a time. If no, Test Manager  notifies the user that sufficient resources are not available to run any test. If yes, then Test Manager , through Data Center Infrastructure Manager , setups a computing environment to run one test at a time.","In another embodiment, the test manager calculates computing resource requirements to run all tests in all loaded scripts in parallel. However, the test manager also considers any interdependency of tests. For example, if a particular test is dependent on another test, the test manager, in one embodiment, leaves this particular test from the calculated resource requirements to run all tests in parallel. After this calculation, the test manager attempts to reserve required computing resources in a virtual data center. If the requested computing resources are not available, then the test manager recalculates by reducing the number of the loaded setup scripts in the calculations and repeating the resource reservation process again, until the required resources are obtained or it is determined that sufficient resources are not available. In one embodiment, if a test in a group of tests fails, then the computing resources in the same setup are preserved for a post test debugging. In one or more embodiments, a snapshot of the computing resources is taken and stored in a storage for a later re-creation of the same computing environment setup for debugging. In this case, the computing resources in the virtual data center will not need to be preserved and may be dismantled to make the resources available for other uses.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 4","FIG. 3"],"b":["50","152","154","156","158","102","104","106","108","160","162","50","50","1","2","2","1","1","2"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 5","FIG. 4","FIG. 3"],"b":["50","50","202","204","206","52","206","206","210","52","208","212","50","214","216"]},"With the above embodiments in mind, it should be understood that the invention can employ various computer-implemented operations involving data stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Any of the operations described herein that form part of the invention are useful machine operations. The invention also relates to a device or an apparatus for performing these operations. In one embodiment, the apparatus can be specially constructed for the required purpose (e.g. a special purpose machine), or the apparatus can be a general-purpose computer selectively activated or configured by a computer program stored in the computer. In particular, various general-purpose machines can be used with computer programs written in accordance with the teachings herein, or it may be more convenient to construct a more specialized apparatus to perform the required operations.","The embodiments of the present invention can also be defined as a machine that transforms data from one state to another state. The transformed data can be saved to storage and then manipulated by a processor. The processor thus transforms the data from one thing to another. Still further, the methods can be processed by one or more machines or processors that can be connected over a network. The machines can also be virtualized to provide physical access to storage and processing power to one or more users, servers, or clients. Thus, the virtualized system should be considered a machine that can operate as one or more general purpose machines or be configured as a special purpose machine. Each machine, or virtual representation of a machine, can transform data from one state or thing to another, and can also process data, save data to storage, display the result, or communicate the result to another machine.","The invention can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data, which can be thereafter read by a computer system. Examples of the computer readable medium include hard drives, network attached storage (NAS), read-only memory, random-access memory, CD-ROMs, CD-Rs, CD-RWs, magnetic tapes and other optical and non-optical data storage devices. The computer readable medium can include computer readable tangible medium distributed over a network-coupled computer system so that the computer readable code is stored and executed in a distributed fashion.","Although the method operations were described in a specific order, it should be understood that other housekeeping operations may be performed in between operations, or operations may be adjusted so that they occur at slightly different times, or may be distributed in a system which allows the occurrence of the processing operations at various intervals associated with the processing, as long as the processing of the overlay operations are performed in the desired way.","Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications can be practiced within the scope of the appended claims. Accordingly, the present embodiments are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
