---
title: Updating shared access machine-readable code
abstract: A computer system is provided comprising a client computer, a management server computer, and a communications network. The client computer includes hardware and software for executing an application utilizing data, files and code downloaded from the management server computer. The management server computer includes the data, files and code required by the client computer for executing the application. The management server computer includes hardware and software for registering the client computer to receive electronic change notifications for any updates made to the data, files and code at the management server computer. The client computer includes hardware and software for updating data, files and code from the management server computer prior to further execution of the application with any outdated data, files or code once an electronic change notification has been received.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09317278&OS=09317278&RS=09317278
owner: Duran Walker Group, LLC
number: 09317278
owner_city: Pace
owner_country: US
publication_date: 20140425
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Further Description of Preferred Embodiments","DRAWING REFERENCES"],"p":["Making updates to computer programs which have been distributed to multiple users or updates to items of machine-readable code which are accessible to multiple users such as web pages or shared databases is without interrupting or interfering with the users or making different updates available to different users has long been a problem.","It is an object of this invention to make machine-readable code updates to multiple users in an improved fashion.","In one embodiment of the invention, there is provided a computer system comprising a client computer, a management server computer, and a communications network. The client computer includes hardware and software for executing an application utilizing data, files and code downloaded from the management server computer. The management server computer includes the data, files and code required by the client computer for executing the application. The communications network is for conveying a request from the client computer to the management server computer for the data, files and code and for downloading the data, files and code from the management server computer to the client computer. The management server computer includes hardware and software for registering the client computer to receive electronic change notifications for any updates made to the data, files and code at the management server computer. The client computer includes hardware and software for updating data, files and code from the management server computer prior to further execution of the application with any outdated data, files or code once an electronic change notification has been received.","In another embodiment of the invention, there is provided a method for managing application code, data and files being used in remote systems by distributing these items from a single source and flagging the items for updates. In the method, a request is received on a first client machine to execute an application utilizing data, files and code residing on a management server. A request is sent over a communications network to the management server for the code. The management server fills the request from a local file system and registers a change notification for the code. The code is returned over the communications network to a repository client residing on the first client machine. The repository client dynamically assembles the code and makes the code available as an application to further execute the request. A request is sent over the communications network to the management server for the data and files for use by the application. The management server fills the request from the local file system and registers a change notification for the requested data and files. The requested data and files is returned over the communications network to the repository client for use in the application.","In the event of that an update is received at the management server for any of code, data or other files, an update notification can be sent to the first client so that steps can be taken to update the code, data or other files at the first client before the first client takes further action involving the changed items.","In another embodiment of the invention, there is provided a method for coordinating usage of a database that is maintained in a repository and that is being updated as it is used. In the method, a repository management server receives an electronic request for machine-readable code stored in a repository computer memory served by the repository management server. The management retrieves the requested machine-readable code from the repository computer memory and electronically transmits it to the requestor. The requestor electronically stores the transmitted machine-readable code in a requestor computer device. The repository management server registers the transmitted machine-readable code for update notifications from the repository management server. At least one proposed update to the previously transmitted data is received electronically at the repository management server from an editor. The repository management server accepts the at least one proposed update, stores the accepted update in the repository computer memory and deletes any outdated machine-readable code that has been superseded by updated machine-readable code. The update notification is transmitted to the requestor and outdated machine-readable code is replaced on the requestor's computer with updated machine-readable code prior to a next access by the requestor's computer of any outdated machine-readable code.","In one embodiment of the invention, there is provided a computer system comprising a client computer, a management server computer, and a communications network. The client computer includes hardware and software for executing an application utilizing data, files and code downloaded from the management server computer. The management server computer includes the data, files and code required by the client computer for executing the application. The communications network is for conveying a request from the client computer to the management server computer for the data, files and code and for downloading the data, files and code from the management server computer to the client computer. The management server computer includes hardware and software for registering the client computer to receive electronic change notifications for any updates made to the data, files and code at the management server computer. The client computer includes hardware and software for updating data, files and code from the management server computer prior to further execution of the application with any outdated data, files or code once an electronic change notification has been received.","In preferred embodiments, the client computer comprises a cache memory for storing the data and files and a JVM for executing the code. The management server computer has a repository for storing the data, files and code. The data is in the form of Java serialized objects stored in the form of a hybrid object oriented\/relational database and the code is in the form of Java class files. The application executes without XML or SQL mapping. An administrative console is in communication with the management server for managing the data in the repository.","In another embodiment of the invention, there is provided a method for managing application code, data and files being used in remote systems by distributing these items from a single source and flagging the items for updates. In the method, a request is received on a first client machine to execute an application utilizing data, files and code residing on a management server. A request is sent over a communications network to the management server for the code. The management server fills the request from a local file system and registers a change notification for the code. The code is returned over the communications network to a repository client residing on the first client machine. The repository client dynamically assembles the code and makes the code available as an application to further execute the request. A request is sent over the communications network to the management server for the data and files for use by the application. The management server fills the request from the local file system and registers a change notification for the requested data and files. The requested data and files is returned over the communications network to the repository client for use in the application.","Preferably, when an update is received to the requested data and files at the repository management server, the requested data and files at the repository management server is replaced with the update. The change notification is sent to a repository cache manager in the first client machine. The requested data and files are deleted from a data repository in the first client machine. A request is sent over the communications network to the management server from the first client machine for the update when called for use by the application which is filled at the management server repository local file system. The repository management system registers a change notification for the update. The update is returned over the communications network to the first client machine client for use in the application.","The request for the code is preferably filled at the management server repository by retrieving a class file containing the code. The class file is downloaded to a class loader in the first client machine and made available for use in the first client machine in a JVM runtime environment. The data preferably comprises serialized objects.","The update can be received from a console physically operably associated with the repository, or from a second client machine through the communications network. The number of client machines linked to the repository is limited only by practical considerations.","In another embodiment of the invention, there is provided a method for coordinating usage of a database that is maintained in a repository and that is being updated as it is used. In the method, a repository management server receives an electronic request for machine-readable code stored in a repository computer memory served by the repository management server. The management retrieves the requested machine-readable code from the repository computer memory and electronically transmits it to the requestor. The requestor electronically stores the transmitted machine-readable code in a requestor computer device. The repository management server registers the transmitted machine-readable code for update notifications from the repository management server. At least one proposed update to the previously transmitted data is received electronically at the repository management server from an editor. The repository management server accepts the at least one proposed update, stores the accepted update in the repository computer memory and deletes any outdated machine-readable code that has been superseded by updated machine-readable code. The update notification is transmitted to the requestor and outdated machine-readable code is replaced on the requestor's computer with updated machine-readable code prior to a next access by the requestor's computer of any outdated machine-readable code.","The machine-readable code can be selected from application code, data from a database, and other files such as image files or sound files. Preferably the machine-readable code comprises Java application data, files and code. Preferably, the database is a hybrid object-oriented\/relational database and it is transmitted for use with previously transmitted application code. Where the application is to display web pages, the machine-readable code generally further comprises image files.","Data from the database is preferably stored in a cache memory of the requestor's computer device and at least a portion of the data is removed from the cache memory in response to the update notification concerning the data.","The requestor's computer device preferably includes a software shell to assemble the application code into a functional application and the application code is reloaded from the repository in response to the update notification concerning the application code.","Updates are preferably made by first initiating a transaction session for receiving proposed updates into the repository management server from the editor. All updates proposed during the session are recorded. The proposed updates are committed to the repository at the end of the transaction session if all the proposed updates were successfully received and valid, and the update notification is transmitted at the close of the transaction session. An update notification is preferably also transmitted to the editor.","In a preferred embodiment, a separate modification space is provided for each transaction session and the proposed updates are recorded and available to only to that transaction session.","One preferred embodiment of the invention provides a repository management system for defining, creating, persisting, delivering and assembling Java application data, files and code provided.","One example is a client\/server environment in which a repository management system resides and is initialized on the management server and a repository client resides and is initialized on a client machine.","The client and the server may reside on the same physical machine, but it is not necessary.","The repository client may receive a request to execute an application utilizing data, files and code residing on the Management Server. First, the repository client sends a request to the repository management system for all code required.","The management system retrieves the class file from the local file system, registers a change notification for the requested class file and then returns the requested code to the repository client.","The repository client then dynamically assembles the provided code and makes this code available for use within the JVM runtime environment for the request.","The repository client then send requests to the repository management system for any data and\/or files requested via the Repository API within the executing application code provided.","The repository management System retrieves data (Serialized Objects) and files from the local file system, registers a change notification for the requested data and files and then returns the data and files requested to the repository client for use within the application.","All changes occurring through the repository management system to any of the application data, files or code will result in a change notification being sent from the repository management system to the repository client which results in the changed data, file or code being discarded and reloaded from the repository management system upon the next request for that data, file or code.","Access permissions to the local file system is determined by the Operating System user executing the Repository Management System application the server.","The framework of a preferred embodiment of the invention provides a method for the development, management, storage and delivery of application code, data and files to remote systems. The framework is divided into three application layers, a repository layer, and administration layer, and a target application layer.","The repository layer provides a storage and delivery mechanism by means of a hybrid relational\/object-oriented database, preferably written in Java. The repository allows different applications to work together and to communicate by means of notifications. The repository not only stores data, but also code and content. Applications have the ability to receive notifications about modifications made to the database by other applications, and act in response, for example, by being reassembled or by deleting and updating their cache.","As an example, Application A could modify code, data or content of another Application B based on a modification or series of modifications to a third Application C. Application A could also modify multiple other applications based on specific ordered changes in applications B and C. Applications are automatically notified of modification to their codes and are reassembled during their runtime.","The administration layer provides a development and management environment by means of individual graphical user interface applications imbedded within a single host console application. These applications interact with the repository as described previously to allow users to create, update or delete application code, data or files.","The target application layer which interacts with the repository as previously described to assemble the application code, data and files required for execution. Since the repository is object oriented, no data mapping is required for assembly. Target applications continue to interact with the repository during run time to receive and deliver application code, data, files or modifications.","In contrast to previous methods, which must divide development, management, storage and delivery into completely separate and isolated applications, one preferred embodiment of the invention supplies a seamless collaboration within the framework to provide a single administration point for all target applications and an awareness between applications and layers which allows for real time responsiveness to any change within the framework. The result is a more intelligent and productive system with increased usability, control and manageability while providing previously unattainable levels of interaction between the framework applications.","Additionally, one preferred embodiment of the invention provides compliance with the principles of the ACID model {Atomicity, Consistency, Isolation, Durability) of database design while providing the speed and agility inherent to the No SQL Base modeled databases. Atomicity is assured by initializing a modification transaction for each repository session. The transaction records all changes requested during the session and commits those changes to the database upon success or rolls the changes back in the case of failure. If one part of the transaction fails, the entire transaction fails. All modifications strictly follow the \u201call or nothing\u201d rule. Consistency is assured by requiring, in each session transaction, that all modifications be valid and successful to allow the commit to succeed. If, for any reason, a modification fails, the entire transaction will be rolled back automatically and the database returned to the last consistent state. Isolation is assured by maintaining a separate modification space for each session where the modification is recorded and available to only that transaction. Therefore, no transaction is aware of modifications performed within any other transaction. Upon successful execution of a commit, the global state is updated to reflect the transaction modifications. Upon rollback or a transaction-time-out-induced automatic rollback, the transaction modification space is cleared and all modifications are discarded. Durability is assured by logging each committed transaction for recovery in the case of failures.","Further, one preferred embodiment of the invention provides an application programming interface that unifies the communication for accessing repository data and content. The interface provides auditing, authentication and encryption functions. The auditing function provides observation capabilities for monitoring user actions. The Authentication function provides repository data and content to only valid and verified users. The Encryption function stores and delivered sensitive data in encrypted form only.","The application programming interface (API) for accessing the repository provides access only to authorized clients to ensure that proper permissions are granted for read and write activities. The permissions are granted from the repository's host operating system.","The auditing function includes a messaging system for activity tracking. Messages notifying of all modifications are sent to all registered users of the repository. Application registration is available to client applications through the repository APIs.","The authentification function requires that each client must provide a valid user name and password to gain access to the repository for any operation.","The encryption function provides the ability to mark sensitive data as encrypted. All data defined to be encrypted will be both stored and delivered as the encrypted value. All calls to create such data should be transmitted via a secure protocol such as HTTPS (Hyper-Text Transfer Protocol Secure)","One important aspect of a preferred embodiment of the invention is a repository which utilizes the hybridization of object oriented and relational database concepts to maximize performance and flexibility while minimizing overhead. Since there is no XML (Extensible Markup Language) or SQL (Structured Query Language) mapping required for object initialization, a reduction in application load times can be observed as well as a reduction in development time. There are also increased search and query response speeds due to the unique use of relation concepts. While data is stored as serialized objects, the repository also stores code and files as well. The repository client API allows access to all stored content and provides built in session based transaction management, version control, file locking, session crash recovery and operating system based file security as well as encryption. These features ensure that the framework adheres to the ACID model of database design. The repository also provides a messaging system which monitors changes to all content and allows both target and administration applications to register for and receive notifications based on event type.","A preferred embodiment of the invention utilizes an administration console that is a desktop application developed in Java that allows individually packaged applications to be executed as plugins. The repository API is exposed to all executed applications and therefore requires no additional integration considerations. This provides the ability to quickly develop customized administration application for individual customer needs. For example, a \u201cPage Manager\u201d plug-in for web developers and a \u201cData Manager\u201d plug in for loading, viewing and managing data.","The target applications in a preferred embodiment of the invention are developed in Java and utilize the repository API and custom class loader to assemble the code, data and files required. An example of a target application is a web or web service application, but it could be any application developed using the repository API. Target applications can be deployed on any Java enabled device.","Preferred embodiment of the present invention are further explained in the attached drawings, in which the reference numerals are defined as follows:",{"@attributes":{"id":"p-0057","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":[{"@attributes":{"id":"ul0001-0001","num":"0056"},"b":"1"},{"@attributes":{"id":"ul0001-0002","num":"0057"},"b":"2"},{"@attributes":{"id":"ul0001-0003","num":"0058"},"b":"11"},{"@attributes":{"id":"ul0001-0004","num":"0059"},"b":"111"},{"@attributes":{"id":"ul0001-0005","num":"0060"},"b":"21"},{"@attributes":{"id":"ul0001-0006","num":"0061"},"b":"211"},{"@attributes":{"id":"ul0001-0007","num":"0062"},"b":"2111"},{"@attributes":{"id":"ul0001-0008","num":"0063"},"b":"2112"},{"@attributes":{"id":"ul0001-0009","num":"0064"},"b":"212"},{"@attributes":{"id":"ul0001-0010","num":"0065"},"b":"2121"},{"@attributes":{"id":"ul0001-0011","num":"0066"},"b":"2122"},{"@attributes":{"id":"ul0001-0012","num":"0067"},"b":"213"},{"@attributes":{"id":"ul0001-0013","num":"0068"},"b":"12"},{"@attributes":{"id":"ul0001-0014","num":"0069"},"b":"121"},{"@attributes":{"id":"ul0001-0015","num":"0070"},"b":"1211"},{"@attributes":{"id":"ul0001-0016","num":"0071"},"b":"1212"},{"@attributes":{"id":"ul0001-0017","num":"0072"},"b":"1213"},{"@attributes":{"id":"ul0001-0018","num":"0073"},"b":"1214"},{"@attributes":{"id":"ul0001-0019","num":"0074"},"b":"113"},{"@attributes":{"id":"ul0001-0020","num":"0075"},"b":"101"},{"@attributes":{"id":"ul0001-0021","num":"0076"},"b":"102"},{"@attributes":{"id":"ul0001-0022","num":"0077"},"b":"103"},{"@attributes":{"id":"ul0001-0023","num":"0078"},"b":["21","1"]},{"@attributes":{"id":"ul0001-0024","num":"0079"},"b":["22","2"]},{"@attributes":{"id":"ul0001-0025","num":"0080"},"b":"106"},{"@attributes":{"id":"ul0001-0026","num":"0081"},"b":"108"},{"@attributes":{"id":"ul0001-0027","num":"0082"},"b":"110"},{"@attributes":{"id":"ul0001-0028","num":"0083"},"b":"112"},{"@attributes":{"id":"ul0001-0029","num":"0084"},"b":"114"},{"@attributes":{"id":"ul0001-0030","num":"0085"},"b":"116"},{"@attributes":{"id":"ul0001-0031","num":"0086"},"b":"118"},{"@attributes":{"id":"ul0001-0032","num":"0087"},"b":"120"},{"@attributes":{"id":"ul0001-0033","num":"0088"},"b":"122"},{"@attributes":{"id":"ul0001-0034","num":"0089"},"b":"124"},{"@attributes":{"id":"ul0001-0035","num":"0090"},"b":"126"},{"@attributes":{"id":"ul0001-0036","num":"0091"},"b":"128"},{"@attributes":{"id":"ul0001-0037","num":"0092"},"b":"130"},{"@attributes":{"id":"ul0001-0038","num":"0093"},"b":"132"},{"@attributes":{"id":"ul0001-0039","num":"0094"},"b":"134"},{"@attributes":{"id":"ul0001-0040","num":"0095"},"b":"136"},{"@attributes":{"id":"ul0001-0041","num":"0096"},"b":"138"},{"@attributes":{"id":"ul0001-0042","num":"0097"},"b":"140"},{"@attributes":{"id":"ul0001-0043","num":"0098"},"b":"142"},{"@attributes":{"id":"ul0001-0044","num":"0099"},"b":"144"},{"@attributes":{"id":"ul0001-0045","num":"0100"},"b":"146"},{"@attributes":{"id":"ul0001-0046","num":"0101"},"b":"148"},{"@attributes":{"id":"ul0001-0047","num":"0102"},"b":"150"},{"@attributes":{"id":"ul0001-0048","num":"0103"},"b":"152"},{"@attributes":{"id":"ul0001-0049","num":"0104"},"b":"154"},{"@attributes":{"id":"ul0001-0050","num":"0105"},"b":"156"},{"@attributes":{"id":"ul0001-0051","num":"0106"},"b":"158"},{"@attributes":{"id":"ul0001-0052","num":"0107"},"b":"160"},{"@attributes":{"id":"ul0001-0053","num":"0108"},"b":"162"},{"@attributes":{"id":"ul0001-0054","num":"0109"},"b":"164"},{"@attributes":{"id":"ul0001-0055","num":"0110"},"b":"166"},{"@attributes":{"id":"ul0001-0056","num":"0111"},"b":"168"},{"@attributes":{"id":"ul0001-0057","num":"0112"},"b":"170"},{"@attributes":{"id":"ul0001-0058","num":"0113"},"b":"172"},{"@attributes":{"id":"ul0001-0059","num":"0114"},"b":"174"},{"@attributes":{"id":"ul0001-0060","num":"0115"},"b":"176"},{"@attributes":{"id":"ul0001-0061","num":"0116"},"b":"178"},{"@attributes":{"id":"ul0001-0062","num":"0117"},"b":"180"},{"@attributes":{"id":"ul0001-0063","num":"0118"},"b":"182"},{"@attributes":{"id":"ul0001-0064","num":"0119"},"b":"184"},{"@attributes":{"id":"ul0001-0065","num":"0120"},"b":"186"},{"@attributes":{"id":"ul0001-0066","num":"0121"},"b":"188"},{"@attributes":{"id":"ul0001-0067","num":"0122"},"b":"190"},{"@attributes":{"id":"ul0001-0068","num":"0123"},"b":"192"},{"@attributes":{"id":"ul0001-0069","num":"0124"},"b":"194"},{"@attributes":{"id":"ul0001-0070","num":"0125"},"b":"196"},{"@attributes":{"id":"ul0001-0071","num":"0126"},"b":"198"},{"@attributes":{"id":"ul0001-0072","num":"0127"},"b":"200"},{"@attributes":{"id":"ul0001-0073","num":"0128"},"b":"202"},{"@attributes":{"id":"ul0001-0074","num":"0129"},"b":"204"},{"@attributes":{"id":"ul0001-0075","num":"0130"},"b":"206"},{"@attributes":{"id":"ul0001-0076","num":"0131"},"b":"208"},{"@attributes":{"id":"ul0001-0077","num":"0132"},"b":"210"},{"@attributes":{"id":"ul0001-0078","num":"0133"},"b":"212"},{"@attributes":{"id":"ul0001-0079","num":"0134"},"b":"214"},{"@attributes":{"id":"ul0001-0080","num":"0135"},"b":"216"},{"@attributes":{"id":"ul0001-0081","num":"0136"},"b":"218"},{"@attributes":{"id":"ul0001-0082","num":"0137"},"b":"220"},{"@attributes":{"id":"ul0001-0083","num":"0138"},"b":"222"},{"@attributes":{"id":"ul0001-0084","num":"0139"},"b":"224"},{"@attributes":{"id":"ul0001-0085","num":"0140"},"b":"226"},{"@attributes":{"id":"ul0001-0086","num":"0141"},"b":"228"},{"@attributes":{"id":"ul0001-0087","num":"0142"},"b":"230"},{"@attributes":{"id":"ul0001-0088","num":"0143"},"b":"232"},{"@attributes":{"id":"ul0001-0089","num":"0144"},"b":"234"},{"@attributes":{"id":"ul0001-0090","num":"0145"},"b":"236"},{"@attributes":{"id":"ul0001-0091","num":"0146"},"b":"238"},{"@attributes":{"id":"ul0001-0092","num":"0147"},"b":"240"},{"@attributes":{"id":"ul0001-0093","num":"0148"},"b":"242"},{"@attributes":{"id":"ul0001-0094","num":"0149"},"b":"244"},{"@attributes":{"id":"ul0001-0095","num":"0150"},"b":"246"},{"@attributes":{"id":"ul0001-0096","num":"0151"},"b":"250"},{"@attributes":{"id":"ul0001-0097","num":"0152"},"b":"252"},{"@attributes":{"id":"ul0001-0098","num":"0153"},"b":"254"},{"@attributes":{"id":"ul0001-0099","num":"0154"},"b":"256"},{"@attributes":{"id":"ul0001-0100","num":"0155"},"b":"258"},{"@attributes":{"id":"ul0001-0101","num":"0156"},"b":"260"},{"@attributes":{"id":"ul0001-0102","num":"0157"},"b":"262"},{"@attributes":{"id":"ul0001-0103","num":"0158"},"b":"264"},{"@attributes":{"id":"ul0001-0104","num":"0159"},"b":"266"},{"@attributes":{"id":"ul0001-0105","num":"0160"},"b":"268"},{"@attributes":{"id":"ul0001-0106","num":"0161"},"b":"270"},{"@attributes":{"id":"ul0001-0107","num":"0162"},"b":"272"},{"@attributes":{"id":"ul0001-0108","num":"0163"},"b":"274"},{"@attributes":{"id":"ul0001-0109","num":"0164"},"b":"276"},{"@attributes":{"id":"ul0001-0110","num":"0165"},"b":"278"},{"@attributes":{"id":"ul0001-0111","num":"0166"},"b":"280"},{"@attributes":{"id":"ul0001-0112","num":"0167"},"b":"282"},{"@attributes":{"id":"ul0001-0113","num":"0168"},"b":"284"},{"@attributes":{"id":"ul0001-0114","num":"0169"},"b":"286"},{"@attributes":{"id":"ul0001-0115","num":"0170"},"b":"288"},{"@attributes":{"id":"ul0001-0116","num":"0171"},"b":"290"},{"@attributes":{"id":"ul0001-0117","num":"0172"},"b":"292"},{"@attributes":{"id":"ul0001-0118","num":"0173"},"b":"294"},{"@attributes":{"id":"ul0001-0119","num":"0174"},"b":"296"},{"@attributes":{"id":"ul0001-0120","num":"0175"},"b":"298"},{"@attributes":{"id":"ul0001-0121","num":"0176"},"b":"300"},{"@attributes":{"id":"ul0001-0122","num":"0177"},"b":"302"},{"@attributes":{"id":"ul0001-0123","num":"0178"},"b":"304"},{"@attributes":{"id":"ul0001-0124","num":"0179"},"b":"306"},{"@attributes":{"id":"ul0001-0125","num":"0180"},"b":"308"},{"@attributes":{"id":"ul0001-0126","num":"0181"},"b":"310"},{"@attributes":{"id":"ul0001-0127","num":"0182"},"b":"312"},{"@attributes":{"id":"ul0001-0128","num":"0183"},"b":"314"},{"@attributes":{"id":"ul0001-0129","num":"0184"},"b":"316"},{"@attributes":{"id":"ul0001-0130","num":"0185"},"b":"318"}]}},"While certain preferred embodiments have been described herein, the invention is not to be construed as being so limited, except to the extent that such limitations are found in the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
