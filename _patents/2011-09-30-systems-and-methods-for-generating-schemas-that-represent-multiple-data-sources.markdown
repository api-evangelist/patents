---
title: Systems and methods for generating schemas that represent multiple data sources
abstract: Systems and methods generating schemas that represent multiple data sources are provided herein. According to some embodiments, methods may include determining a schema for each of the multiple data sources via a computing device communicatively couplable with each of the multiple data sources, each of the multiple data sources including one or more data structures that define how data is stored in the data source, generating a negotiated schema by comparing the schemas of the multiple data sources to one another and interrelating data points of the multiple data sources based upon the schemas, interrelating the negotiated schema with the schema for each of the multiple data sources based upon the interrelation of the data points, and storing the negotiated schema in a storage media by way of the computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09020981&OS=09020981&RS=09020981
owner: Comprehend Systems, Inc.
number: 09020981
owner_city: Redwood City
owner_country: US
publication_date: 20110930
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE PRESENT TECHNOLOGY","DETAILED DESCRIPTION"],"p":["This nonprovisional patent application is related to nonprovisional U.S. patent application Ser. No. 13\/251,132, filed on Sep. 30, 2011, now U.S. Pat. No. 8,924,431, issued Dec. 30, 2014, and entitled \u201cPLUGGABLE DOMAIN-SPECIFIC TYPING SYSTEMS AND METHODS OF USE\u201d which is hereby incorporated by reference in its entirety.","1. Field of the Invention","The present technology relates generally to schema generation and negotiation for multiple data sources. More specifically, the present technology relates to systems and methods that negotiate data sources having different data structures, create schemas for interrelating or connecting the data within the data structures, and provide for querying across multiple data sources utilizing a negotiated schema.","2. Background","Interacting with data sources that utilize various types of data storage schemas (e.g., data storage protocols) for storing data can be a tedious endeavor. For example, while different data sources may include similar types of data, the data may be stored in data structures that have vastly different storage schemas or storage mechanisms relative to one another. Accessing similar types of data stored in differing data structures requires end users or computing systems to understand and navigate each of the data structures independently, which is a time consuming and tedious undertaking. The present technology provides systems and methods for negotiating various data sources by way of negotiated schemas that represent each of the data sources.","According to some embodiments, the present technology may be directed to methods for generating a negotiated schema for multiple data sources. The methods may include: (a) determining a schema for each of the multiple data sources via a computing device communicatively couplable with each of the multiple data sources, each of the multiple data sources including one or more data structures or serialized data blobs that define how data is stored in the data source; (b) generating a negotiated schema by: (i) comparing the schemas of the multiple data sources to one another; and (ii) interrelating data points of the multiple data sources that correspond to one another; and (iii) interrelating the negotiated schema with the schema for each of the multiple data sources based upon the interrelation of the data points; and (c) storing the negotiated schema in a storage media by way of the computing device.","According to other embodiments, the present technology may be directed to systems for generating a negotiated schema for multiple data sources. The systems may include: (a) a memory for storing executable instructions; (b) a processor for executing the instructions, the instructions including: (i) an interrogation module that determines a schema for each of the multiple data sources, each of the multiple data sources including one or more data structures that define how data is stored in the data source; and (b) a schema generator that generates a negotiated schema by: (1) comparing the schemas of the multiple data sources to one another; and (2) interrelating data points of the multiple data sources, multiple pre-negotiated schemas, or an arbitrary number of pre-negotiated schemas and data sources that correspond to one another (3) interrelating the negotiated schema with the schema for each of the multiple data sources based upon the interrelation of the data points; and stores the negotiated schema in a storage media.","According to additional embodiments, the present technology may be directed to non-transitory computer readable storage media having a program embodied thereon, the program being executable by a processor to perform a method for generating a negotiated schema for multiple data sources. The method may include: (a) determining a schema for each of the multiple data sources via a computing device communicatively couplable with each of the multiple data sources, each of the multiple data sources including one or more data structures that define how data is stored in the data source; (b) generating a negotiated schema by: (i) comparing the schemas of the multiple data sources to one another; and (ii) interrelating data points of the multiple data sources that correspond to one another; (iii) interrelating the negotiated schema with the schema for each of the multiple data sources based upon the interrelation of the data points; and (c) storing the negotiated schema in a storage media by way of the computing device.","While this technology is susceptible of embodiment in many different forms, there is shown in the drawings and will herein be described in detail several specific embodiments with the understanding that the present disclosure is to be considered as an exemplification of the principles of the technology and is not intended to limit the technology to the embodiments illustrated.","It will be understood that like or analogous elements and\/or components, referred to herein, may be identified throughout the drawings with like reference characters. It will be further understood that several of the figures are merely schematic representations of the present technology. As such, some of the components may have been distorted from their actual scale for pictorial clarity.","Generally speaking, the present technology may be directed to negotiating and generating schemas that represent multiple data sources. A negotiated schema may represent the interrelations between data structures of multiple data sources and link together related data points that may be stored in dissimilar data structures. One skilled in the art may further understand that negotiated schema may include other pre-negotiated schemas. Stated otherwise, the present technology may link or \u201cinterrelate\u201d various types of data distributed across a wide variety of data systems.","It is noteworthy to mention that a schema may include an abstraction or abstract representation of a set of data, such as a data structure. For example, a data structure may include table of data, a graph, data tree, and so forth. The data structure may include a plurality of data points.","Other non-limiting examples of schema may include database tables and foreign keys, web APIs that return JSON result sets, flat files such as comma separated values (\u201cCSV\u201d) or a spreadsheet file, not-only SQL (\u201cNoSQL\u201d) data sources, and so forth. Additionally, it is possible to determine data structures from extracted data. For example, data blobs may be extracted from a compressed file, such as a .zip file. Once the data has been decompressed or extracted, the present technology may evaluate the data structure of the data blobs.","By way of non-limiting example, various types of patient data may be stored in a plurality of data sources, where each of the data sources utilizes a proprietary data structure (e.g., protocol such as health level 7 (\u201cHL7\u201d) and so forth). One data source may have patient data such as blood pressure readings while another may include data such as adverse events. One of ordinary skill in the art will readily appreciate that practical embodiments of the present technology may utilize data structures or protocols for any number of different types of subject matter including, but not limited to finances, athletics, manufacturing, statistics, and so forth. Rather than requiring individual querying of each of the data sources for requested information, the present technology may interrelate data points within data structures to create a negotiated schema. End users may query the negotiated schema to obtain a combined rich query response that includes interrelated data from each of the data sources that corresponds to the query as well as associated metadata with each of the data points.","The present technology may interrogate each of plurality of data structures individually to determine a schema that is most closely related to data structure(s) of a particular data source. Interrogation of the data structures may include comparing the data structure of the data source to a plurality of schema templates and applying heuristics to determine the schema template that most closely (or at least partially) corresponds to the data structure of the data source. The heuristics that are applied to the data source may be based upon end user input, machine learning techniques, metadata tags, previous schema negotiations, predefined custom connectors or heuristics, and the like.","Schema templates may also be generated from end user input artificial intelligence techniques, or machine learning techniques which are applied to the data source.","Once a schema template has been selected or created for each data source, the present technology may generate a negotiated schema that represents the interrelationships between the data structures of the data sources, and more specifically, between the data included in the data structures. The negotiated schema may be understood to include a comparison and linking of the individual schemas of each data source. The negotiated schema may also include new data structures that have been generated from the preexisting data.","The negotiated schema may be utilized to obtain data from the individual data structures via querying processes. The obtained data may be linked together or otherwise aggregated, assembled, joined, or interrelated together and presented to an end user as a query response. Advantageously, the response to the query may provide more robust information than would have been obtained via querying of the individual data sources alone. This advantage is due, in part, to the linking of data points or data structures via heuristic information that may link or interrelate seemingly unrelated data points. Furthermore, metadata associated with one or more of the schema templates may be applied to the negotiated schema to further enhance the information obtained during execution of a query.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["105","105"]},"The data structures A-N may be communicatively couplable to a server  that includes executable instructions for determining a schema that corresponds to the data structure of the data source, and generating a negotiated schema by interrelating the schemas of each of the data sources A-N. The server  may communicatively couple with the data sources A-N via any of a number of private or public communications mediums such as the Internet. While not shown, in some embodiments, each of the data sources A-N may include an adapter that determines an appropriate schema for the data structure. The adapter may communicatively couple with the server .","It will be understood that in some embodiments, the architecture  may include a plurality of web servers (such as server ) arranged into a cloud-based computing environment. According to some embodiments, the cloud-based computing environment negotiates and generates schemas that represent multiple data sources. In general, a cloud-based computing environment is a resource that typically combines the computational power of a large grouping of processors and\/or that combines the storage capacity of a large grouping of computer memories or storage devices. For example, systems that provide a cloud resource may be utilized exclusively by their owners, such as Google\u2122 or Amazon\u2122; or such systems may be accessible to outside users who deploy applications within the computing infrastructure to obtain the benefit of large computational or storage resources.","The cloud may be formed, for example, by a network of servers with each server (or at least a plurality thereof) providing processor and\/or storage resources. These servers may manage workloads provided by multiple users (e.g., cloud resource customers or other users). Typically, each user may place workload demands upon the cloud that vary in real-time, sometimes dramatically. The nature and extent of these variations typically depend on the type of business associated with the user.","A client device  may communicatively couple with the server  via an open application programming interface (\u201cAPI\u201d). Generally speaking, an application programming interface allows applications residing on different platforms or written in different programming languages to interoperate.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["110","200","200","110"]},"As used herein, the term \u201cmodule\u201d may also refer to any of an application-specific integrated circuit (\u201cASIC\u201d), an electronic circuit, a processor (shared, dedicated, or group) that executes one or more software or firmware programs, a combinational logic circuit, and\/or other suitable components that provide the described functionality. In other embodiments, individual modules of the application  may include separately configured servers (e.g., server ).","In some embodiments, the application  may include an interrogation module , a schema generator , and a query engine . It is noteworthy that the application  may include additional modules, engines, or components, and still fall within the scope of the present technology.","The interrogation module  may be executed to interrogate each of the data sources A-N. The interrogation module  may utilize authentication credentials to access each data source. While it will be discussed in greater detail below relative to the querying of the data sources, the present technology may respect the underlying credentials of each data source during querying of the data source such that query results may only include data that the end user is qualified to access.","Interrogation may comprise determining a schema for each of the multiple data sources. The interrogation module  may determine a schema for a data source by comparing the data structure of the data source to a plurality of schema templates or preexisting negotiated schemas. Schema templates may include exemplary abstractions that represent different types of data sources. For example, a schema template may include an abstraction of a typical data source that utilizes HL7 protocols, or any other protocol. Therefore, when a data source of having an unknown type of data structure is encountered, if an HL7 schema template is compared against the data source, and the data structure of the data source corresponds to the HL7 schema, it may be inferred that the data structure utilizes an HL7 data structure.","The interrogation module  may iterate through many schema templates before locating an appropriate schema template. It will be understood that in some cases, an appropriate schema template may include a schema template that at least partially corresponds to the data structure. This partially corresponding schema template may be referred to as a \u201cfuzzy\u201d template match. For example, a schema template may indicate that data structures having five distinct types of data points (e.g., nodes) correspond to a known type of data structure (e.g., protocol). If a data structure includes four out of the five distinct types of data, it may be inferred that the data structure is a \u201cfuzzy\u201d match for the known type of data structure and so forth.","The interrogation module  may utilize heuristic logic to determine the correspondence between a data structure and a schema template. The heuristic logic may utilize end user input, machine learning techniques, metadata tags, previous schema negotiations, predefined custom connectors, heuristics, and so forth.","The correspondence or selection of a schema template by the interrogation module  may be subject to verification by an end user. This may be particularly true if the correspondence between the data source and the schema template is fuzzy. However, it is noteworthy to mention that in some embodiments that the processes described above may be executed automatically, without end user verification.","Metadata relative to the schema determinations of the interrogation module  may be overlaid upon the data source for future use. For example, metadata relative to schema templates that did not correspond to the data structure of the data source may be associated with the data source to ensure that subsequent iterations of the data source do not include these schema templates. Other types of metadata may include a relative matching strength for a fuzzy matching template (e.g., how likely the match is to be correct\/errant).","Metadata may be attached to an object that is bucketed or \u201cnamespaced\u201d to avoid logical collisions or confusion with other objects. The metadata utilized by the application  allows for the use of \u201ceffective\u201d or \u201ccombined\u201d metadata structures that may include metadata information not only for a given object, but also other dependent objects that have metadata as well.","In some embodiments, if more than one schema template at least partially corresponds to the data structure of the data source, the interrogation module  may employ heuristic logic or solicit end user verification to determine which schema template is the most appropriate.","According to some embodiments, a schema template may be created for the data source on-the-fly by the interrogation module  when an appropriate correspondence between the data source one of the plurality of schema templates is not found. This newly created schema template may be tagged with metadata and made available for future interrogations of data structures.","Upon interrogating each of the data sources A-N, the schema generator  may be executed to negotiate or create a negotiated schema that represents the data structures of multiple data sources A-N. A negotiated schema may also be referred to as an abstraction of the relationships between data stored in the data structures of the data sources. That is, based upon the schema template selected for each data source, the schema generator  may analyze the relationships between data points or nodes of the schemas of the data sources and link the nodes of the schemas accordingly.","In some embodiments, the schema generator  may again apply heuristic logic to determine relationships between the nodes (e.g., data points) of the individual schemas. Similarly to determining if a data structure corresponds to a schema template, corresponding or interrelated nodes of different schemas may be linked together. The nodes may be directly linked or indirectly linked. For example, directly linked data, such as patient blood pressure readings, may be collected from different data sources (e.g., blood pressure readings stored in multiple files that each has different proprietary data structure). Indirectly linked data may include different types of patient medial data that may be linked together via a transformation, or via social security number or other personally identifiable information. With regard to transformations or normalization of data, it may be the case that a value has a function such as f(x)=x+1 (i.e., formula that adds one to all values) applied to it in order to conform to a schema, for example. This indirect linking may allow for various types of data (e.g., blood pressure readings, prescriptions, surgical history, allergies, and so forth) to be linked or interrelated based upon the fact that the data belongs to the same patient. Rather than having to obtain these disparate types of data from each individual data source, the negotiated schema may allow for the querying of the individual data sources at the same time, as will be described in greater detail below.","According to some embodiments, the schema generator  may establish connections or linkages between data sources A-N via utilizing one or more adaptive algorithms, such as recursive backtracking, hill-climbing, alpha-beta pruning, or any other suitable adaptive algorithm that would be known to one of ordinary skill in the art with the present disclosure before them.","In some embodiments, the connections of interrelations of data points may be subject to end user verification. Additionally, some or all of the connections between data points of various schemas may be configured manually via end user input. End user input may also be utilized to resolve conflicts between data sources. For example, when two data structures may be interrelated with the exception of one or more conflicting matches, end user input may be solicited by the schema generator  to resolve the conflict and generate a more robust negotiated schema. End user input may be stored in order to aid in and\/or automate future schema negotiations.","Again, similarly to the interrogation module , the schema generator  may append metadata to the negotiated schema that includes information that corresponds to the linking of data points of schemas in creation of the negotiated schema. Metadata may include information such as resolved conflicts, reasons for linking two or more schemas, confidence level associated with a connection that represents the reliability or accuracy of a connection, and so forth.","According to some embodiments, the schema generator  may specify which, if any, of the data sources should be available to properly process a query. The schema generator  may also specify alternate data sources that may be accessed if a primary or \u201crequired\u201d data source is unavailable. That is, the schema generator  may operate in a fault tolerant manner, such that if a required data source is unavailable, the system may process queries by locating alternate data sources or notifying the end user that a particular data source is unavailable.","In other embodiments, if no alternative data source is available the schema generator  may mark metadata in a returning result set appropriately. This metadata may be utilized enhance the efficiency of subsequent query processing.","In some embodiments, the schema generator  may be configured to automatically update a negotiated schema when the one or more data structures of one or more of the data sources changes. That is, as the data included in the data sources change over time, the negotiated schema is likewise updated such that queries executed against the negotiated schema include up-to-date information. Stated otherwise, the negotiated schemas are allowed to evolve as the data included in the data sources change.","In some instances notification of a change to a data source may occur at the point of the receipt of a query, according to a predefined interval of time, when a notification is provided from the underlying data source, and\/or when a user creates a manual notification of a change. At this point, the application  enters a \u2018repair\u2019 mode in order to be fault-tolerant, and should be able to modify the schema representing the data without interruption of service, unless a required part of the negotiated schema has been modified.","The query engine  may be executed upon the server  receiving a query from a client device . It will be understood that the query may be provided to the server  via an API connection as described above. In other embodiments, the application  may generate a web based interface (not shown) that allows end users to interact with the application  via a browser that is executable on their client device . In some embodiments, the web based interface may provide a number of mechanisms that allow end users to query the data sources. In other embodiments, the application  may generate graphical user interfaces that allow end users to verify the use of a schema template or links between data sources.","Upon receiving a query, the query engine  may analyze the query to determine attributes of the query such as keywords, phrases, protocols, and so forth. The query may also specify which of the multiple data sources are to be searched by the query engine . In some embodiments, the query engine may infer or choose an appropriate data sources that are to be searched, based upon the keywords or other information included in the query.","Next, the query engine  obtains a negotiated schema that is to be utilized to process the query. Again, the query engine  may determine an appropriate negotiated schema based upon information included in the query.","It is noteworthy to mention that in some embodiments, the query engine  may execute the schema generator  to generate a negotiated schema based upon the information included in the query. For example, if the query specifies the data sources which are to be queried and keywords that are to be queried across those selected data sources, the schema generator  may obtain schemas for each of the data sources as described above. This method may be valuable when the query engine  is unable to determine an appropriate negotiated schema to be utilized to evaluate a query.","Once the query engine  has selected a negotiated schema, the query may be executed across each of the multiple data sources, possibly in parallel. Utilizing the interrelationships between data sources included in the negotiated schema, the query engine  may quickly and efficiently obtain data from the multiple data sources that correspond to the query.","The query engine  may utilize the appropriate authentication credentials of the end user that generated the query to access the data stored in the data sources. For example, the query engine  may utilize a secure API, certificate, or username\/password combination that allows the end user to access the data sources. Because the query engine  utilizes the authentication credentials of the end user, only data that is appropriately accessible to the end user may be obtained by the query engine . That is, the query engine  respects the security protocols established for each data source.","Once data points are obtained from the data sources, the query engine  may combine or otherwise aggregate the obtained data into a query response that is then provided to the end user via their client device.","In sum, the application  allows for end users to utilize \u201cbest of breed\u201d systems that produce data that is stored in many different data structures. That is, rather than being bound by the data structures utilized by different applications, the application  allows for data processing that is agnostic to the data structure of the data source. In this way, an end user may select which applications they wish to employ, not on the basis of the data structures (e.g., file formats and protocols) themselves, but on the performance of the application itself. The application  ensures that queries may be executed across these disparate data sources without regard to the data structures themselves. Additionally, the schema negotiation and creation process may occur entirely transparent to the end user.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 3","b":["300","300","305"]},"It will be understood that each of the multiple data sources may include one or more data structures that define how data is stored in the data source. Upon determining a schema for each of the multiple data sources, the method  may include a step  of generating a negotiated schema by a step  of comparing the schemas of the multiple data sources to one another. After comparing the schemas, the method may include a step  of interrelating data points of the multiple data sources based upon the schemas. Lastly, the method  may include a step  of storing the negotiated schema in a storage media.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 4","b":["400","400","405"]},"Next, the method may include a step  of fulfilling the query by executing a step  of selecting and\/or creating a negotiated schema for the query. Again, a negotiated schema may be selected by analyzing keywords or other information included in the query. If no negotiated schema is located, a negotiated schema may be created in the manner described in greater detail above.","After selecting an appropriate negotiated schema, the method  may include a step  of obtaining data points from one or more of the multiple data sources by way of the negotiated schema. That is, the data may be obtained from the multiple data sources by way of the interrelation of data points and\/or data structures included in the negotiated schema.","Next, the method  may include a step  of combining the data points together according to the interrelationships included in the negotiated schema to create a query response, and finally a step  of providing the query response to the client device.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIG. 5"],"b":["500","500","500","510","520","520","510","520","500","530","540","550","560","570","580"]},"The components shown in  are depicted as being connected via a single bus . The components may be connected through one or more data transport means. Processor  and main memory  may be connected via a local microprocessor bus, and the mass storage device , peripheral device(s) , portable storage device , and display system  may be connected via one or more input\/output (I\/O) buses.","Mass storage device , which may be implemented with a magnetic disk drive, an optical disk drive, or SSD is a non-volatile storage device for storing data and instructions for use by processor . Mass storage device  may store the system software for implementing embodiments of the present technology for purposes of loading that software into main memory .","Portable storage device  operates in conjunction with a portable non-volatile storage medium, such as a floppy disk, compact disk, digital video disc, or USB storage device, to input and output data and code to and from the computing system  of . The system software for implementing embodiments of the present technology may be stored on such a portable medium and input to the computing system  via the portable storage device .","Input devices  provide a portion of a user interface. Input devices  may include an alphanumeric keypad, such as a keyboard, for inputting alpha-numeric and other information, or a pointing device, such as a mouse, a trackball, stylus, or cursor direction keys. Additionally, the system  as shown in  includes output devices . Suitable output devices include speakers, printers, network interfaces, and monitors.","Display system  may include a liquid crystal display (LCD) or other suitable display device. Display system  receives textual and graphical information, and processes the information for output to the display device.","Peripheral device(s)  may include any type of computer support device to add additional functionality to the computing system. Peripheral device(s)  may include a modem or a router.","The components provided in the computing system  of  are those typically found in computing systems that may be suitable for use with embodiments of the present technology and are intended to represent a broad category of such computer components that are well known in the art. Thus, the computing system  of  may be a personal computer, hand held computing system, telephone, mobile computing system, workstation, server, minicomputer, mainframe computer, or any other computing system. The computer may also include different bus configurations, networked platforms, multi-processor platforms, etc. Various operating systems may be used including Unix, Linux, Windows, Macintosh OS, Palm OS, Android, iPhone OS and other suitable operating systems.","It is noteworthy that any hardware platform suitable for performing the processing described herein is suitable for use with the technology. Computer-readable storage media refer to any medium or media that participate in providing instructions to a central processing unit (CPU), a processor, a microcontroller, or the like. Such media may take forms including, but not limited to, non-volatile and volatile media such as optical or magnetic disks and dynamic memory, respectively. Common forms of computer-readable storage media include a floppy disk, a flexible disk, a hard disk, magnetic tape, any other magnetic storage medium, a CD-ROM disk, digital video disk (DVD), any other optical storage medium, RAM, PROM, EPROM, a FLASHEPROM, any other memory chip or cartridge.","While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. The descriptions are not intended to limit the scope of the technology to the particular forms set forth herein. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above-described exemplary embodiments. It should be understood that the above description is illustrative and not restrictive. To the contrary, the present descriptions are intended to cover such alternatives, modifications, and equivalents as may be included within the spirit and scope of the technology as defined by the appended claims and otherwise appreciated by one of ordinary skill in the art. The scope of the technology should, therefore, be determined not with reference to the above description, but instead should be determined with reference to the appended claims along with their full scope of equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Certain embodiments of the present technology are illustrated by the accompanying figures. It will be understood that the figures are not necessarily to scale and that details not necessary for an understanding of the technology or that render other details difficult to perceive may be omitted. It will be understood that the technology is not necessarily limited to the particular embodiments illustrated herein.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
