---
title: Systems and methods for implementing a multi-function mode for pressure sensitive sensors and keyboards
abstract: Systems and methods are disclosed herein for implementing one or more individual pressure sensitive keys that each support multiple native scan codes, with each scan code corresponding to a unique pressure level output. The disclosed systems and methods may be implemented in one exemplary embodiment to allow users to leverage the capability of a variable pressure keyboard by providing an information handling system having individual variable pressure keys that are each capable of outputting a different macro or multi-key sequence per key pressure level sensed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08700829&OS=08700829&RS=08700829
owner: Dell Products, LP
number: 08700829
owner_city: Round Rock
owner_country: US
publication_date: 20110914
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["This application relates to systems and methods for input devices and, more particularly, to systems and methods for pressure sensitive sensors of input devices.","As the value and use of information continues to increase, individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes, compiles, stores, and\/or communicates information or data for business, personal, or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications, information handling systems may also vary regarding what information is handled, how the information is handled, how much information is processed, stored, or communicated, and how quickly and efficiently the information may be processed, stored, or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing, airline reservations, enterprise data storage, or global communications. In addition, information handling systems may include a variety of hardware and software components that may be configured to process, store, and communicate information and may include one or more computer systems, data storage systems, and networking systems.","Many information handling systems use keyboards to obtain user input. Some prior keyboard solutions have provided pressure sensitive keys. The most common technique to provide pressure sensitive keys is to use variable resistance sensing techniques to provide an indication of the pressure applied by a user to a key. Variable capacitance sensing has also been utilized in some prior art products such as console gamepad controllers. While pressure sensitive buttons have been used before, improved techniques and control of pressure sensitive keys are still needed, particularly for gaming keyboards.","A computer peripheral produced in the form of a joystick controller has been developed that allows a computer user to map up to three computer keyboard keys or a combination of such keys to the joystick movement such that the keys or combination of keys is indicated to the computer by how far the joystick is moved along a given axis (i.e. by percentage of maximum joystick travel). Such a joystick controller is an external peripheral that is separate and different from the computer keyboard functions by performing a simple software mapping. Today's legacy USB keyboards support a single scan code per key.","Keyboard macro button support has also been provided for gaming keyboards by assigning a macro to a physical macro key. The key physically is attached to the keyboard's legacy scan matrix and uses unused row\/column intersection points and uses an unassigned scan code per macro key. In such a configuration, if the keyboard has 5 macro keys, which are attached to the legacy scan matrix, the keyboard can only support 5 macros, or one macro per key.","Systems and methods are disclosed herein for implementing one or more individual pressure sensitive sensors that each support multiple native scan codes, with each scan code corresponding to a unique pressure level output. For example, a single variable pressure sensitive key may itself support multiple different native scan codes that are each normally only assigned to a single conventional momentary on key of a QWERTY keyboard. The disclosed systems and methods may be advantageously implemented in one exemplary embodiment to allow users (e.g. such as computer garners) to leverage the capability of a variable pressure keyboard by providing an information handling system having individual variable pressure keys that are each capable of outputting different macro information (e.g., multi-key sequence) per key pressure level sensed.","The disclosed systems and methods may be implemented, for example, to convert a single sensor broadcast from a variable pressure sensor into macro information that includes multiple scan codes, thus allowing for the creation of different application behaviors (e.g., computer game behaviors) from a single variable pressure sensor depending on the amount of finger pressure applied to the pressure sensitive sensor that may be provided on a keyboard, mouse, game controller or any other device employing pressure sensitive sensor inputs. In one exemplary embodiment, this capability may be supported by assigning individual macros to an unassigned scan code that is one of multiple scan codes supported by each variable pressure sensor, e.g., a variable pressure key of an information handling system keyboard. In this way, scan codes may be dynamically selected in real time depending on the amount of pressure applied to a given sensor based on the user defined profile for that given sensor. Thus, a single physical key may be employed to support performing, for example, 5 macros (acting as 5 virtual keys), and\/or to support switching between macro outputs in real-time based on a variable input such as finger pressure.","In one exemplary embodiment, the pressure sensitive keys of an information handling system keyboard may be further configured to operate in a legacy \u201cmomentary on\u201d mode of operation (i.e., to emulate normal \u201cmomentary on\u201d open\/short digital key signals), for example, such as during boot-up prior to loading an operating system, during sleep mode, or any other time a user wishes to operate in such a legacy mode by default. In yet another exemplary embodiment, the variable pressure sensitive keys of an information handling system keyboard may be further configured to operate in a single-function mode, in which the native scan code for the key is outputted but at a repetition rate that increases with an increase in finger pressure applied to the key, e.g., auto-toggling of a given key may be performed by sending its key code to a USB IN endpoint at the rate that the user has selected for a given pressure level. A software timer may be maintained and compared against the user repetition rate to determine when it is time to send the key code out. In essence, the software timer may act in such an embodiment as a variable delay mechanism. For example, the repeat rate for \u201cW\u201d at pressure level 1 may be set at 1 ms, and for pressure level 2 is 5 ms, etc. Two independent software timers may be used in such an example to implement each rate. Moreover, it is also possible that a single pressure key may be configured to selectively operate in two or more of the three previously described modes, i.e., multiple macro mode, normal \u201cmomentary on\u201d mode, and single function variable on\/off switching rate mode.","Pressure sensitive sensors of the disclosed systems and methods may be implemented using variable capacitance, variable conductance, variable resistance or any other suitable pressure sensitive measurement methodology to generate selected native scan codes based on the amount of pressure applied to a given sensor at any given time. The pressure-dependent scan codes may be supplied, for example, directly to a keyboard device driver layer executing on a processing device of an information handling system. In one exemplary embodiment, the disclosed systems and methods may be advantageously implemented to provide a drop-in \u201creplacement\u201d keyboard for a standard-type momentary-on keyboard of an information handling system, e.g., portable information handling system such as a notebook computer that employs a conventional keyboard controller configured to receive momentary-on digital key signals and no analog keyboard signals. Other examples of portable information handling system include, but are not limited to, MP3 players, portable data assistants, cellular phones, tablet computers, etc.","In the practice of the disclosed systems and methods, pressure sensing measurement circuitry and\/or pressure-based scan code selection circuitry may be, for example, embedded or integrated within a keyboard controller, though it may also be located external to the keyboard controller as well. In the latter case, a \u201cdrop-in\u201d keyboard having both conventional momentary-on and pressure sensitive keys with pressure-based scan code selection may be provided. Such a drop-in keyboard may be configured with digital outputs for the momentary-on keys that are compatible with a legacy digital keyboard controller, and with separate digital output bus for pressure-based scan codes (e.g., from a keyboard-integrated variable pressure sensor \u201cVPS\u201d controller) directly to the device driver layer of an information handling system.","The above-described capability may be implemented in one embodiment, for example, to provide a \u201cdrop-in replacement\u201d of a current production keyboard array for an information handling system such as a notebook computer (e.g., for build-to-order specification, after market replacement in an existing previously built information handling system, updated production run, etc.) with little or no modification to mechanical, electrical, or operating system (OS) of the existing information handling system. In such an embodiment, the pressure sensitive keys and the pressure-sensing digital output circuitry may be integrated into a replacement keyboard assembly that is substantially mechanically and electrically compatible with the information handling system host equipment. This capability may be advantageously employed, for example, to enable a build-to-order methodology in which either type of keyboard (i.e., traditional keyboard with only momentary-on keys, or gaming keyboard with at least some pressure sensitive keys together with pressure-based scan code selection capability) may be selectively assembled to a common information handling system notebook chassis or common desktop keyboard chassis having a legacy keyboard controller, e.g., based on details of a specific customer order.","The disclosed pressure sensitive sensor measurement methods and systems may also be optionally implemented in one exemplary embodiment with user configurable pressure sensitive keys and techniques for controlling these keys for keyboards, or alternatively in similar manner with user configurable pressure sensitive sensors of other types. For example, in a keyboard embodiment user configuration information, including information for user configurable macros (and optionally granularity scales), may be communicated from a host system to the keyboard and stored for later use by a keyboard controller or other processing device associated with the keyboard to control the operation of the pressure sensitive keys. Alternatively, such user configuration information may be employed by a software application operating on the host system that communicates with a keyboard controller to control the operation of the pressure sensitive keys. Either way, greater control of the pressure sensitive keys may be provided. This configurability is of particular use for applications such as where the keyboard is being used for gaming by a user running a gaming application on an information handling system. In particular, the user may configure selected macros and combinations of macros (and optionally also configure the granularity scale) for each pressure sensitive key so that each key may provide a desired gaming response. In addition, different configuration files may be stored so that a user may select and use different configurations for different games and\/or different users may select and use different configurations based upon their personal preferences.","In one respect, disclosed herein is a variable pressure sensor processing system, including at least one processing device configured as a multiple macro information creation component coupled to receive an analog output signal from each given one of one or more pressure sensitive sensors that is representative of pressure applied to the given sensor. The multiple macro information creation component may be configured to: detect an identity of a given one of the pressure sensitive sensors to which pressure is being applied based on a received one of the analog output signals; detect a level of pressure applied to the given one of the pressure sensitive sensors based on the received one of the analog output signals; and select and produce a given macro information that corresponds to the detected combination of sensor identity and pressure level applied to the given one of the pressure sensitive sensors.","In another respect, disclosed herein is an information handling system, including: at least one processing device configured to execute a user application thereon; keyboard circuitry including one or more pressure sensitive keys configured to provide analog output signals corresponding to each given one of the pressure sensitive keys that is representative of pressure applied to the given key; and at least one processing device configured as multiple macro information creation component coupled to receive the analog output signal from each given one of the pressure sensitive keys. The multiple macro information creation component may be configured to: detect an identity of a given one of the pressure sensitive keys to which pressure is being applied based on a received one of the analog output signals, detect a level of pressure applied to the given one of the pressure sensitive keys based on the received one of the analog output signals, select and produce a given macro information that corresponds to the detected combination of key identity and pressure level applied to the given one of the pressure sensitive keys, and provide the given macro information to the at least one user application.","In another respect, disclosed herein is a method of accepting input from one or more variable pressure sensors, including: providing one or more pressure sensitive sensors; producing an analog output signal for each given one of the pressure sensitive sensors when depressed by a user, the analog output signals being representative of pressure applied to the given pressure sensitive sensor by the user; providing one or more variable pressure sensor processing components including at least one processing device configured as multiple macro information creation component; receiving the analog output signal in the variable pressure sensor processing components from each given one of one or more pressure sensitive sensors that is representative of pressure applied to the given sensor; and using the variable pressure sensor processing components to perform the following steps: detecting an identity of a given one of the pressure sensitive sensors to which pressure is being applied based on a received one of the analog output signals, detecting a level of pressure applied to the given one of the pressure sensitive sensors based on the received one of the analog output signals, and selecting and producing a given macro information that corresponds to the detected combination of sensor identity and pressure level applied to the given one of the pressure sensitive sensors.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100","105","111","105","115","120","111","125","120","130","111","135","130","180","191","130"]},"Still referring to , a key input area  of a keyboard input device along with other optional input devices (e.g., such as mouse and\/or touchpad ) are also coupled to ICH chip  to enable the user to interact with the information handling system. In this exemplary embodiment key area  is coupled to provide a digital output signal  from momentary on digital keys to legacy keyboard (LK) controller , which in turn provides scan code signals  corresponding to individual depressed digital keys of key area  to an appropriate device driver (e.g., PS2 keyboard device driver) executing on CPU . In this regard, LK controller  may poll all the momentary on digital keys in the key matrix of key area  and broadcast a scan code output corresponding to any pressed keys to the operating system (OS) of information handling system . It will be understood that in one embodiment, LK controller  may be implemented by EC , rather than by a separate microcontroller.","In the embodiment of , key area  is also coupled as shown to provide analog output signal  representative of the pressure applied to individual depressed analog keys of key area  to pressure-sensing digital output circuitry , which may be for example, a variable pressure sensor (VPS) controller as described further herein. Pressure-sensing digital output circuitry  in turn produces pressure-based scan codes A to an appropriate device driver (e.g., USB Human Interface Device \u201cHID\u201d driver) executing on CPU . As will be described further herein, each of these pressure-based scan codes correspond to a particular combination of the key identity and real time specific pressure applied to individual depressed analog keys of key area . It will be understood that the particular configuration of  is exemplary only, and that an information handling system may be configured with fewer, additional or alternative components than those illustrated in , e.g., including a network interface card (wired and\/or wireless). It will also be understood that in other embodiments, one or more other types of input devices (e.g., mouse, game controller, etc.) may additionally or alternatively be provided that is coupled to provide an analog output signal to pressure-sensing digital output circuitry  that is representative of the pressure applied to one or more individual depressed analog keys.","The disclosed systems and methods may be implemented using analog-based variable-pressure keys  that are optionally incorporated with digitally-based momentary-on keys  of typical keyboards to make a keyboard that supports both regular make\/break keys  and keys  with variable finger pressure sensitivity, and in one exemplary embodiment that is at the same time compatible with legacy \u201cmomentary-on\u201d measurement keyboard controllers such as are typically found in information handling systems such as notebook and desktop computers. Thus, from one to all keys of a given input device (e.g., such as a keyboard) may be implemented using pressure-sensitive sensors, such as variable conductance, variable resistance, or variable capacitance sensors. One example of pressure sensitive sensors that may be employed are rubber dome keys (e.g., with conductive half-spheres or half-domes located on the underside of the rubber domes) in combination with a printed circuit board (PCB) or flexible PCB underneath it such that the conductive sphere's surface area contact increases with pressure and thus increases the measurable capacitance of that contact in relationship with a nearby charged trace. Pressure-sensitive sensors may alternatively be variable resistance keys that utilize a sensor material that changes impedance when touched, e.g. by pressure of a user's hand or finger.","Further information on example types of variable pressure sensors (e.g., keys) and associated circuitry, digital key sensors and associated circuitry, and methods and circuitry for sensing and processing signals from the same may be found in U.S. patent application Ser. No. 12\/316,703 filed Dec. 16, 2008 (U.S. Publication No. 2010-0148999A1); U.S. patent application Ser. No. 12\/802,468 filed Jun. 8, 2010 (U.S. Publication No. 2010-0321301A1); U.S. patent application Ser. No. 12\/930,125 filed Dec. 29, 2010 (U.S. Publication No. 2011-0102326A1); and U.S. patent application Ser. No. 12\/930,118 filed Dec. 29, 2010 (U.S. Publication No. 2011-0095877A1); each of which is incorporated herein by reference in its entirety.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["200","204","206","290","204","145","145","204","206","206","192","110","299","206","204","194","290","290","290","110","290","290"]},"The pressure-sensing digital output circuitry  includes a pressure sensing block  that receives an analog signal representative of the pressure being applied to each of analog keys , and a scan code look up table  that is utilized to select and output a pressure-based scan code A corresponding to the particular real-time pressure being applied to each of analog keys  to external devices, such as host components of an information handling system, through communication path A. It will be understood that the particular embodiments illustrated herein are exemplary only, and that the components and function of pressure-sensing digital output circuitry  may be implemented using any one or more circuitry components suitable for receiving analog signals representative of key pressure from pressure sensitive keys , and for selecting and providing in real time scan code\/s corresponding to the key pressure applied to each of pressure sensitive keys . Similarly, scan code look up table  is configured to process pressed key identification signal  and is coupled so that scan code information corresponding to a pressed digital key may be communicated to external devices, such as host components of an information handling system, through communication path .","In addition, external devices may optionally communicate control and\/or other configuration information to the pressure-sensing digital output circuitry  and\/or keyboard controller  through respective communication interfaces A and , respectively. Examples of possible information handling system components may be found described in U.S. patent application Ser. No. 12\/586,676, filed Sep. 25, 2009, which is incorporated herein by reference in its entirety.","It is noted that communication paths  and A may take a variety of forms. Each of communication paths  and A may be a wired communication path or a wireless communication path, as desired. With respect to personal computer systems, such as desktop computers and laptop computers, communication paths  and A may be, for example, via a Bluetooth interface if a wireless interface is desired and or a USB (universal serial bus) interface if a wired interface is desired. However, it is again noted that any desired communication interface may be utilized. It is further noted that keyboard controller  may be implemented as a microcontroller (e.g., legacy 8051-based microcontroller or custom microcontroller) that runs firmware stored on a memory device associated with the keyboard controller . Similarly, pressure-sensing digital output circuitry  may be implemented as a microcontroller (e.g., a Texas Instruments MSP430F55xx family of USB enabled 16-bit ultra-low power microcontrollers (such as the MSP430F5508), available from Texas Instruments of Dallas, Tex.) that runs firmware stored on a memory device associated with the microcontroller. Any other type of suitable pressure-sensing digital output circuitry may be employed including, for example, circuitry that uses RC discharge time to measure sensor capacitance as described in U.S. Pat. No. 3,936,674, which is incorporated herein by reference in its entirety.","It is also noted that the user configuration information  may be optionally stored in random access memory (RAM) or other memory storage that is associated with pressure sensing circuitry  (either internally or externally). Thus, configurable analog key control parameters  may be stored, for example, on a RAM device in the keyboard or on the host system (e.g., on a hard drive) and may provide a wide variety of configurable parameters that may be adjusted by a user through an application programming interface (API) to a software utility application that, for example, has a graphic user interface (GUI) to allow a user to edit the parameters through the software utility. For example, the user configuration information may be stored, for example, in nonvolatile or volatile memory on board the keyboard system . Alternatively, the user configuration information may be stored on the host system or other device that is coupled by communication paths B and A. Either way, single and\/or multiple different user configuration files and\/or multiple game (or application) configuration files may be stored allowing a user to select the applicable or desired keyboard configuration file depending on the game or application being used by the user and\/or depending upon the particular user using the keyboard at the time, e.g., in a manner as described in U.S. patent application Ser. No. 12\/316,703 filed Dec. 26, 2008, which is incorporated herein by reference in its entirety.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIGS. 3 and 4","FIG. 2","FIG. 3"],"b":["300","206","204","200","302","300","200","290","204","110","206","290","110","204","110","206","300"]},"Also shown in  are operating system (OS) layer , middleware layer , and user application layer  that may be executing, for example, on CPU  of information handling system  of . In a manner as will be described further herein, OS layer  may include a USB HID driver  that receives the VPS pressure-based scan codes A from VPS MCU , and a PS2 keyboard device driver  that receives the legacy scan code signals  from legacy MCU . USB HID driver  in turn provides VPS scan codes A as VPS keyboard events  to a VPS macro selector component  of middleware layer , which in turn provides modified VPS scan codes  to user application layer  (e.g., which may include VPS-enabled and non-VPS enabled applications). VPS macro selector component  may then select modified scan codes  (e.g., macro information in the form of a multi-key sequence) from a VPS profile based on the identity of the pressed key and the key's pressure level sensed. It will be understood that any other combination of hardware or circuitry (e.g., including one or more processing devices), firmware and\/or software may be employed as VPS macro selector component  that is suitable for selecting modified scan codes based on the identity of the pressed sensor and the sensor's pressure level sensed.","It will be understood that a scan code (e.g., such as scan code A or ) is a code generated by a controller (e.g., VPS MCU  or keyboard controller ) or other suitable component to represent an individual pressed key (e.g., analog key  or digital key ) for which a component (e.g., component of OS layer  such as USB HID driver  or PS2 keyboard device driver ) performs translation to a given key identity (e.g., the scan code \u201c04\u201d translates to the key \u201ca\u201d) unless the scan code is reserved. A keyboard event  is the mapping of a reserved scan code to a macro (i.e., including one or more key characters).","As shown, key matrix , keyboard controller , and device driver  together implement momentary-on key signal generation circuitry  that provides single event momentary on scan codes as keyboard events  to a user application . It will be understood that momentary-on key signal generation circuitry  may be implemented in any other suitable manner (e.g., with alternate hardware, firmware, and\/or software) in other embodiments to perform a legacy momentary on digital key signal generation task. It will also be understood that the term \u201cVPS keyboard event\u201d is used herein to refer to the combination of the identity of a pressed VPS key  plus the key pressure level value sensed for the identified pressed VPS key . As further shown, PS2 keyboard device driver  may provide legacy scan codes  as legacy keyboard events  to user application layer .","In this exemplary embodiment, VPS MCU , USB HID driver , and VPS macro selector component  may be implemented together as multiple macro information creation component  that provides the modified VPS scan codes  to user application layer , it being understood that any other combination of hardware or circuitry (e.g., including one or more processing devices), firmware and\/or software may be employed as multiple macro information creation component  that is suitable for selecting and outputting different macro information (e.g., modified scan codes ) in real time based on the corresponding real time pressure level applied to a given VPS analog key  in a manner as described elsewhere herein. As further described, multiple macro information creation component  may also be configured to store and consult VPS profiles to select given macro information based on a given VPS pressure level.","Referring now to , VPS MCU  may in one embodiment be configured as a USB Composite Human Interface Device (HID) that exclusively provides all assigned VPS key codes to the OS layer , e.g., such as Windows-based OS or other suitable OS. In the case of a Windows OS, VPS MCU  may use Windows OS in-box drivers  for broadcasting the scan codes of the VPS keys . This architecture may be advantageously implemented in one exemplary embodiment to require only the OS \u201cin-box\u201d drivers  and  (e.g., Windows OS in-box drivers) to handle all keyboard events from VPS analog keys  and momentary-on digital keys . No original design manufacturer (ODM) or third-party software is required for OS layer  in such an embodiment. Such a characteristic may be employed to provide simplicity and transparency of the keyboard  to the User Applications .","Still referring to , VPS MCU  may be tasked to detect VPS key  presses, measure the amount of finger pressure applied to a VPS key , associate that pressure of that detected pressed VPS key  to a pre-assigned unique key scan code A, and broadcast the corresponding key code A to the OS layer . The unique key scan code may then be further processed by the Macro selector component  that then broadcasts the corresponding user-defined scan code as per the given pressure level for the given pressed key as a VPS keyboard event to one or more applications  residing in user application layer . User applications  may be, for example, Windows-based applications such as games or non-gaming applications (e.g., Microsoft Office or other business software applications). User applications  may be executing from local storage and\/or may be cloud-based applications executing from across a network such as the Internet or a corporate area network, etc.","As shown in , VPS MCU  may have one USB keyboard interface A dedicated to broadcasting key scan codes to device driver  of OS layer , and may be configured with an optional configuration interface B (e.g., a USB vendor-specific interface or other suitable configuration interface) dedicated to communication with optional VPS macro configuration component . Device driver\/s  may periodically poll or scan the key matrix of analog VPS keys  looking for key presses of the analog keys . As shown, VPS macro configuration component  may be implemented in one exemplary embodiment as a VPS configuration application  that includes configuration and monitoring components, and that communicates with VPS MCU  of macro information creation circuitry  via communications application programming interface (API)  provided in middleware layer . In this embodiment, communication API  may be present as a software module that gives VPS-aware applications  access to VPS protocol for the purpose of configuring and monitoring the VPS keys  per a user defined VPS profile as defined for any given application . As shown, this communication may occur over a USB network to the VPS MCU  via interface B. It will be understood that any other combination of hardware or circuitry (e.g., including one or more processing devices), firmware and\/or software may be employed as VPS macro configuration component  that is suitable for accepting user input and defining VPS profiles in a manner as described elsewhere herein.","In the illustrated embodiment of , monitoring components of VPS configuration application  may be provided to monitor the system for events that will close the current system login session (e.g., logoff, lock or switch user) to place the multiple macro information creation component  in a \u201cLegacy\u201d mode where the scan codes for all VPS keys  are switched to their legacy\/native conventional scan codes. Upon detection of such an event, VPS configuration application , may send a specific protocol command to the firmware of the VPS MCU  to force the Legacy mode. Such a capability may be implemented, for example, in the event that the information handling system  goes into sleep mode, the user logs off their Windows session, system power is accidentally lost, etc. In such a case, assuming the user's OS password (e.g., Windows password) happens to include a key character corresponding to one of the VPS keys , this monitoring capability may be employed to cause the switch of all VPS keys' scan codes to that of their respective legacy\/native scan codes to enable a \u201cLegacy\u201d mode of operation.","VPS configuration application  may be configured to provide a VPS configuration profile to VPS MCU  across configuration interface B. Such a VPS configuration profile may specify, for example, the correlation of one or more given pressure levels to one or more corresponding unique key scan codes, with multiple pressure levels being supported. In one exemplary embodiment, a VPS configuration profile may be provided as a file of settings specifying how VPS keys  shall behave for a given application  (e.g., game, Microsoft Office application, etc.). Thus, VPS configuration application  may provide a VPS configuration profile to customize the behavior of the VPS keys  for any given application , it being understood that multiple different VPS configuration profiles may be provided by VPS configuration application  as needed or desired to so support corresponding multiple applications .","In one exemplary embodiment, VPS configuration application  may be configured as a component that is accessible to the user of information handling system  in the form of an interactive GUI application on display . Using VPS configuration application , a user may create, maintain, store and enable VPS keyboard profiles customized for each different application  and\/or combinations of applications . For example, a user may configure the number of and desired pressure level points for each VPS key , as well as assign macro information to each key pressure level value. This user-input profile data may be stored, for example, onto system storage  as a VPS configuration profile, and routed to the proper destinations. For example, when a given VPS profile is enabled into effect, the given profile may be sent from VPS configuration application  to VPS MCU  using the communication API  and USB network interface B. It will be further understood that multiple profiles may be defined and saved, e.g., for each user, application, operating environment, etc.","Further shown in the exemplary embodiment of  is VPS Macro selector component  that may be provided as shown in middleware layer  to monitor VPS keyboard events in the form of scan codes A provided from VPS MCU  via device driver . In this embodiment, VPS Macro selector component  may be configured to convert a single scan code from VPS MCU  into a set or group of scan codes (i.e., a set of multiple scan codes corresponding to each of two or more pressure levels that may be applied to VPS keys ) dynamically in real-time. In this regard, VPS Macro selector component  may monitor scan codes A that are provided from VPS MCU  via device driver  and that each correspond to a different applied pressure level to one of VPS keys . VPS Macro selector component  may then assign a different user defined macro information (e.g., as defined by a user profile provided by VPS configuration application ) to each such corresponding different intercepted scan code A. VPS Macro selector component  may then broadcast this defined corresponding macro information to the respective user's application . As previously described, VPS Macro selector component  may receive user defined macro information as part of a VPS configuration profile that is received from upper-layer VPS configuration application  for user configuration behavior.","Following is just one example of how VPS Macro selector component  may be configured to assign a different user defined macro information to each different corresponding scan code A for a given user application . In this example, it will be assumed that the \u201cW\u201d key of a QWERTY keyboard is configured as a VPS key , and has been pressed by a user with a particular finger pressure value of \u201cx\u201d. In this example, the VPS MCU  reports the \u201cW\u201d key scan code A via the native OS device driver\/s  to the VPS Macro selector . Upon receipt of this current scan code information, VPS Macro selector  in turn consults the current VPS user profile in effect that has been assigned and received from VPS configuration application . In particular, VPS Macro selector  determines the currently measured finger pressure level from the scan code information and finds the corresponding character or sequence of characters in the current user VPS key profile that is assigned to that pressure level for the \u201cW\u201d key and broadcasts that code sequence out to the designated user application  as a keyboard event. In this way, VPS Macro selector  acts to intercept the scan code broadcast and to dynamically convert it to the applicable key code as defined by the user in the current VPS key profile and continues to broadcast that defined key code to the designated user application  as a keyboard event. Using the methodology of this embodiment, it is possible to achieve a sufficiently fast intercept-to-conversion speed such that the user never sees a latency from the applied finger pressure action to the resulting response on the display  of an information handling system .","A VPS user profile provided from VPS configuration application  as described above may be, for example, defined by input via a graphical user interface (GUI) to VPS configuration application  from a user of information handling system . For example, a user may specify that when the \u201cW\u201d key is pressed with a first particular force \u201cx\u201d, VPS Macro selector  will select and output first macro information as a scan code that is equivalent to a first key sequence of \u201ca+b+c\u201d. After understanding that the VPS key \u201cW\u201d has been pressed with \u201cx\u201d pressure, and that this corresponds to a key code of \u201ca+b+c\u201d, it then broadcasts the key code of \u201ca+b+c\u201d as a keyboard event (e.g., key character sequence) out to the user application . In this way, one initial VPS key event is able to generate macro information (e.g., one or more grouped key codes) due to the function of the VPS Macro selector module . The same VPS user profile provided from VPS configuration application  may specify that when the same \u201cW\u201d key is pressed with a second and different particular force \u201cy\u201d, VPS Macro selector  will output second macro information as a scan code equivalent to a second and different key character sequence of \u201cd+e+f\u201d, such that after understanding that the VPS key \u201cW\u201d has been pressed with \u201cy\u201d pressure, VPS Macro selector  will then broadcast the second key sequence of \u201cd+e+f\u201d as a keyboard event to the user application . In this way, each different VPS key event is able to select and generate macro information of one or more grouped key sequences due to the function of the VPS macro selector module . It will also be understood that different macro information (e.g., different key or character sequences) for a user-defined VPS profile may be defined for each different VPS key  (e.g., \u201cS\u201d key, \u201cA\u201d key, etc.) in a similar manner for a particular force \u201cx\u201d applied by a user to each such different VPS key .","Still referring to the embodiment of , legacy keyboard MCU  may be provided and configured such that when non-VPS keys (e.g., digital keys ) are pressed, the legacy keyboard MCU  processes the keys in its normal (i.e., conventional) manner by detecting which digital keys  are pressed from the digital key matrix and then broadcasting legacy scan codes corresponding to the individual pressed keys to a device driver\/s  (e.g., native PS2 keyboard Windows OS driver), which then provides corresponding legacy keyboard events to the application\/s . In this regard, device driver\/s  may periodically poll or scan the key matrix of digital momentary on keys  looking for key presses of the digital keys . This polling of the matrix of digital keys  by device driver\/s  may be performed separately and in parallel to the polling of the matrix of analog keys  performed by device driver\/s . Utilizing this multi-controller approach (i.e., with separate and different controllers provided for handling output from VPS keys  and digital keys ) in combination with native OS layer device drivers offers simplicity and speed enhancements, e.g., in one embodiment with substantially no latency and very fast responsiveness to a user's applied finger pressure.","In one exemplary embodiment, the OS (e.g., Windows-based OS)  may be configured when coupled to the VPS keyboard  to detect each of the two respective keyboard controllers  and  of keyboard  (e.g., each MCU may be enumerated), and to combine the output from both controllers  and  to produce results. For example, if a user simultaneously presses a non-VPS digital key  (e.g., such as \u201cShift\u201d key), and an analog VPS key  (e.g., such as \u201cW\u201d key), the VPS MCU  may be configured to recognize the \u201cW\u201d key as being pressed and the Legacy keyboard MCU  may be simultaneously configured to recognize the digital non-VPS \u201cShift\u201d key as being pressed, and both characters are broadcast by the separate controllers to the OS  as \u201cShift\u201d+\u201cW\u201d. In this manner, the source of the keyboard event may be transparent to the User Applications  such that legacy applications written years ago will be able to work with the VPS keyboard  (i.e., the legacy user application will receive the keyboard event as if produced by a conventional all-digital key legacy keyboard).","It will be understood that the arrangement and number of components, processing devices, processing tasks, and\/or features illustrated and described in relation to  are exemplary only. Thus, any other alternative configuration of fewer, additional and\/or alternative circuitry and\/or logic components may be employed that is suitable for implementing one or more individual pressure sensitive keys that each support multiple native scan codes, with each scan code corresponding to a unique pressure level output, and that is capable of outputting different assigned macro information (e.g., multi-key sequence including user-assigned scan codes) per key pressure level sensed from individual pressure sensitive keys.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 5","FIG. 4"],"b":["500","500","501","408","407","204","204","204","204","501","501","408","135","135","408"]},"Next, after a user creates and enables a particular VPS profile to take effect in step , this VPS profile may be provided in step  to VPS MCU  in order to assign scan codes to VPS events. For example, a created user profile may be flashed to firmware of VPS MCU  from VPS App SW Module  via the VPS Communication API , and may include scan codes assigned to corresponding individual VPS events that will be detected in the future by VPS MCU  (with each individual VPS event being a different combination of the identity of a pressed VPS key plus the key pressure level value sensed for the identified pressed VPS key ). Following step , the VPS MCU  is knowledgeable of the number of pressure level values per individual VPS key  that are to be detected and reacted to, as well as the particular scan codes applicable to each of these VPS events for the particular VPS key . In step , the VPS App SW Module  assigns the user-specified macro information (e.g., corresponding to each of the different pressure levels per VPS key ) to scan codes and sends this to the VPS Macro selector . In one exemplary embodiment, step  may be performed in parallel with step . In any case, step  may be performed in one exemplary embodiment to set up the VPS MCU  in advance, e.g., to provide a responsive user experience by enabling fast speed and minimal latency of VPS MCU  operation.","In step , VPS MCU  may respond to detected VPS key events by providing to the VPS Macro selector component  the applicable assigned scan code corresponding to each detected VPS event received from VPS keys . In this regard, as a VPS key event is detected by VPS MCU , firmware (embedded software) may associate the detected key event to a corresponding pre-assigned scan code from the user profile of step , and then broadcast this assigned scan code to the VPS MCU . The VPS MCU  then maps the provided scan code to the applicable macro information pre-assigned in step  and broadcasts this assigned macro information in step  to the particular user application  (e.g., game, word processing application, etc.).","For a previously pressed analog key  in which a reduced pressure level is subsequently detected by VPS MCU , the following methodology may be implemented in one exemplary embodiment to distinguish if a user's finger has been completely released from the key, or if the user's finger is still applying pressure to the key but at a reduced pressure level. This methodology may be so implemented to prevent incorrectly reading the complete release of a user's finger from an analog key  as a reduced pressure level value. Using this exemplary methodology, history of the most recent previous analog output signal  pressure level signal received from each of analog keys  is maintained by VPS MCU . In this regard, whenever analog output signal  indicates that a current pressure level being applied to a given analog key  is pre-empted (or changed) to a new pressure level, the current pressure level value for the given key  is first saved by VPS MCU  as a \u201cprevious level\u201d value. Next, VPS MCU  checks to determine if the received new pressure level value for the given key  is lower than the saved \u201cprevious level\u201d value for the same key. If the VPS MCU  determines that the received new pressure level value for the given key  is lower than the saved \u201cprevious level\u201d value for the same key , VPS MCU  then may delay or wait for a predetermined number of MCU clock cycles (e.g., about 300 microseconds or other suitable time), before then again sampling the analog output signal  from the same given analog key  to determine if the given key  is active, i.e., is still being pressed. If the given key  is still being pressed, VPS MCU  processes the new pressure level value of analog output signal  in the manner previously described herein in relation to . However, if VPS MCU  finds that the resampled analog output signal  indicates that the given key  is now idle (i.e., no longer pressed), VPS MCU  resets the history of the previous pressure level value for the given key  and ignores the new pressure level value as erroneous data.","Following is an example of three outcomes that may be realized for a given sensor using the preceding methodology, it being understood that this disclosed methodology may be applied to any type of variable pressure sensor implemented using the disclosed systems and methods, i.e., in addition to variable pressure keys .","1. Assume the current VPS pressure level value for a given sensor is 2, and then pre-empted by a new pressure level value. VPS MCU  then delays and resamples the given sensor. If the resampled new pressure level for the given sensor is found to be 3, VPS MCU  processes level 3 as the new pressure level value being applied to the given sensor.","2. Assume the current VPS pressure level value for a given sensor is 2, and then pre-empted by a new pressure level value. VPS MCU  then delays and resamples the given sensor. If the resampled new pressure level for the given sensor is found to be 1, VPS MCU  processes level 1 as the new pressure level value being applied to the given sensor","3. Assume the current VPS pressure level value for a given sensor is 2, and then pre-empted by a lower pressure level value. VPS MCU  then delays and resamples the given sensor. If the given sensor is found to be no longer active when resampled, VPS MCU  does nothing, maintains the previous pressure level value in memory, and ignores the new pressure level value.","It will be understood that the number and sequence of steps of  is exemplary only, and that any other combination of number of additional, fewer, and\/or alternated steps may be employed that is suitable for implementing one or more individual pressure sensitive keys that each support multiple native scan codes, with each scan code corresponding to a unique pressure level output, and that is capable of outputting different assigned macro information (e.g., multi-key sequence including user-assigned scan codes) per key pressure level sensed from individual pressure sensitive keys.","It will be understood that one or more of the tasks, functions, or methodologies described herein (e.g., including those described herein for components , , , , , , etc.) may be implemented, for example, as software, firmware or other computer program of instructions embodied in a non-transitory tangible computer readable medium that is executed by a CPU, controller, microcontroller, processor, microprocessor, FPGA, ASIC, or other suitable processing device or combination of such processing devices.","For purposes of this disclosure, an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute, classify, process, transmit, receive, retrieve, originate, switch, store, display, manifest, detect, record, reproduce, handle, or utilize any form of information, intelligence, or data for business, scientific, control, or other purposes. For example, an information handling system may be a personal computer, a server computer system, a network storage device, or any other suitable device and may vary in size, shape, performance, functionality, and price. The information handling system may include random access memory (RAM), one or more processing resources such as a central processing unit (CPU) or hardware or software control logic, ROM, and\/or other types of nonvolatile memory. Additional components of the information handling system may include one or more disk drives, one or more network ports for communicating with external devices as well as various input and output (I\/O) devices, such as a keyboard, a mouse, and a video display. The information handling system may also include one or more buses operable to transmit communications between the various hardware components.","Further modifications and alternative embodiments of the techniques described herein will be apparent to those skilled in the art in view of this description. It will be recognized, therefore, that the techniques described herein are not limited by these example arrangements. Accordingly, this description is to be construed as illustrative only and is for the purpose of teaching those skilled in the art the manner of carrying out the techniques described herein. It is to be understood that the forms of the techniques described herein shown and described are to be taken as the presently preferred embodiments. Various changes may be made in the implementations and architectures. For example, equivalent elements may be substituted for those illustrated and described herein and certain features of the techniques described herein may be utilized independently of the use of other features, all as would be apparent to one skilled in the art after having the benefit of this description of the techniques."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
