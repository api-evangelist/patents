---
title: Full-form lexicon with tagged data and methods of constructing and using the same
abstract: A lexicon stored on a computer readable medium and used by language processing systems. The lexicon can store word information in a plurality of data fields associated with each entered word. The data fields can include information on spelling and grammar, parts of speech, steps that the entered word can be transformed into another word, a word description, and a segmentation for a compound word. Information that cannot be stored in the lexicon can be stored in an intermediate indexes table. Associated methods of constructing, updating and using the lexicon are introduced.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07421386&OS=07421386&RS=07421386
owner: Microsoft Corporation
number: 07421386
owner_city: Redmond
owner_country: US
publication_date: 20040319
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["The present application is based on and claims the benefit of U.S. provisional patent application Ser. No. 60\/513,921, filed Oct. 23, 2003, the content of which is hereby incorporated by reference in its entirety.","Reference is hereby made to the following co-pending and commonly assigned patent applications: U.S. application Ser. No. 10\/804,930, filed Mar. 19, 2004, entitled \u201cCompound Word Breaker and Spell Checker\u201d and U.S. application Ser. No. 10\/804,883, filed Mar. 19, 2004, entitled \u201cSystem and Method for Performing Analysis on Word Variants\u201d, both of which are incorporated by reference in their entirety.","The present invention relates to natural language or text processing. More particularly, the present invention relates to an improved data structure for storing a lexicon and methods of constructing and using the same.","Natural language or text processing encompasses many types of systems or applications: word breaking such as for search engines, grammar and spell checking, handwriting and speech recognition, machine translation, text mining, and the like. A common and important component of many natural language processing systems and applications is one or more lexicons.","Generally, the lexicon is a data structure containing information about words, which fall into different types. Word types include base words (or \u201clemmas\u201d), inflections, and derivatives. Lemmas generally include the simplest form of a word such as \u201cjump\u201d on which other types of words are inflected or derived. A lemma differs from a word stem in that a lemma is a complete word but a word stem is not necessarily so.","Inflections are alternate or inflected forms of a word, typically the lemma, which add affixes (prefixes or suffixes), or that reflect grammatical features such as number, person, mood, or tense. Hence, \u201cjumps,\u201d \u201cjumping,\u201d and \u201cjumped,\u201d and the like are inflections of the lemma \u201cjump.\u201d Derivatives are words that are formed from another word by derivation. Thus, \u201celectricity\u201d is a derivative of \u201celectric.\u201d","A lexicon can also contain syntactic and semantic information. Syntactic information relates to syntax rules by which words are combined into grammatically correct phrases or sentences. Thus, syntactic information for a word can include whether the word is a noun, verb, adjective, etc. and can include its relationship to one or more other words in the same sentence, such as a subject-verb or verb-object relationship. In contrast, semantic information conveys meaning. Word meaning can include a definition, gender, number, and whether a word is a named entity such as first name, last name, city name, etc. There is some overlap between syntactic and semantic information. For example, number such as singular or plural and gender convey both meaning and are used in accordance with certain syntax rules.","Additionally, a lexicon can contain information useful for the particular type of language processing. For example, information including a word and its segmentation can be stored to aid, for example, a word breaking application. Other syntactic and\/or semantic information can be stored to aid other language processing systems such as querying, grammar checking, or spell checking.","Generally, there is a trade-off between computing speed and the amount and detail of information stored in the lexicon. Thus, for example, in a word breaking application, computing speed increases when the lexicon already stores detailed information on various inflections and derivatives of each encountered lemma. Computing speed decreases when the word breaker must systematically break down a word in a query to generate, for example, lemmas and inflections from a queried word.","In operation, a natural language processing system can receive an input word or string of words and access stored information in the lexicon to process the word or words according to system parameters. For example, a search or data retrieval engine using an expansive word stemming system can receive a query such as \u201cdogs\u201d and retrieve from a lexicon stored associated terms (e.g. compounds, lemmas, inflections, derivations, synonyms, named entity, etc.) such as \u201chounddog,\u201d \u201cdog,\u201d \u201cdogged,\u201d \u201cCollie,\u201d or \u201cLassie.\u201d Alternately, a received query can be input as \u201cdogs,\u201d \u201cdogged,\u201d etc. and the system accesses a lexicon to retrieve the lemma \u201cdog.\u201d Such word generation or collapse can be used to broaden (or narrow) a word search depending on system parameters.","Another system such as a grammar or spell checking system could receive a word string such as \u201cHe eat a hptdg\u201d and access information stored in a lexicon to correct the sentence to \u201cHe eats a hot dog.\u201d Likewise, systems such as handwriting and speech recognition, machine translation, text mining, and similar systems can access stored information in the lexicon for further processing according to system parameters.","A lexicon that can be used or adapted to multiple natural language or text processing systems, especially a lexicon that is efficiently stored, easily accessible, and that can be updated would have significant utility.","A lexicon is stored on a computer readable medium and can be accessed by various language processing systems. The lexicon typically stores word information in a plurality of data fields associated with each word entry. The data fields can include information on spelling and dynamic segmentation, parts of speech, steps that the word can be transformed into another word, a word description, and a segmentation for compound terms. Information that cannot be stored in the lexicon can be stored in an intermediate indexes table.","In one aspect, the lexicon can be used with various applications or embedded with a single application. In another aspect, a method of constructing the lexicon is introduced. Optionally, the method can include updating the lexicon with new words. In still another aspect, the lexicon is constructed for a particular language, such as English. However, a subset lexicon can be constructed that relates to a particular field, such as engineering.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, telephony systems, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies.","A user may enter commands and information into the computer  through input devices such as a keyboard , a microphone , and a pointing device , such as a mouse, trackball or touch pad. Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a hand-held device, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2","b":["200","200","202","204","206","208","210"]},"Memory  is implemented as non-volatile electronic memory such as random access memory (RAM) with a battery back-up module (not shown) such that information stored in memory  is not lost when the general power to mobile device  is shut down. A portion of memory  is preferably allocated as addressable memory for program execution, while another portion of memory  is preferably used for storage, such as to simulate storage on a disk drive.","Memory  includes an operating system , application programs  as well as an object store . During operation, operating system  is preferably executed by processor  from memory . Operating system , in one preferred embodiment, is a WINDOWS\u00ae CE brand operating system commercially available from Microsoft Corporation. Operating system  is preferably designed for mobile devices, and implements database features that can be utilized by applications  through a set of exposed application programming interfaces and methods. The objects in object store  are maintained by applications  and operating system , at least partially in response to calls to the exposed application programming interfaces and methods.","Communication interface  represents numerous devices and technologies that allow mobile device  to send and receive information. The devices include wired and wireless modems, satellite receivers and broadcast tuners to name a few. Mobile device  can also be directly connected to a computer to exchange data therewith. In such cases, communication interface  can be an infrared transceiver or a serial or parallel communication connection, all of which are capable of transmitting streaming information.","Input\/output components  include a variety of input devices such as a touch-sensitive screen, buttons, rollers, and a microphone as well as a variety of output devices including an audio generator, a vibrating device, and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition, other input\/output devices may be attached to or found with mobile device  within the scope of the present invention.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3","b":["300","302","302","304","302","304","300","308","304"]},"Generally, language processing system  can be embodied as a word breaker (e.g. for a query system), spell checker, grammar checker, speech recognition system, handwriting recognition system, machine translation system, text mining system, or other language processing systems. As appreciated by those skilled in the art, language processing system  can be a stand-alone application, module, or component accessible by or included within another system.","Language processing system or application  includes text analyzer  and lexicon . Text analyzer  schematically represents components and\/or modules that receive input , access and receive word information stored in lexicon , and process received word information to generate or provide output . One aspect of the present invention is an improved data structure for lexicon  so as to efficiently provide information to text analyzer  as required by a particular application. Lexicon  can comprise fundamental aspects or data adapted, used or required to implement or aid in the implementation of numerous applications such as an expansive word stemming system, a query system and\/or word breaker, a spell checker, a grammar checker, a speech recognition system, a handwriting recognition system, and a machine translation system.","It should be noted that lexicon  can be a separate component that can be used in multiple language processing systems and\/or in conjunction with multiple text analyzers. Those skilled in the art can readily recognize how various text analyzers  can be adapted to lexicon . Lexicon  can also be made integral to a particular application or merely accessible to an application. Also, it is understood that text analyzer  can reside on computer  in , or any computer communicating with the computer , such as remote computer . Likewise, lexicon  can reside on computer  in any of the storage devices described above, or be accessible through a suitable communications link.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 4","FIG. 4"],"b":["308","401","402","405","308","401","402","404","406","408","410","403","412","414","416","418","420","405","432","434","436","438","440","402","412","432","404","414","434","406","416","436","408","418","438","410","420","440"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4A","FIG. 4"],"b":["308","450","460","470","480","490","450","460","470","480","490","450","452","454","456","458","460","462","464","466","468","470","472","474","476","478","480","482","484","486","488","490","492","494","496","498"],"sup":"32 "},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 5","b":["500","308","540","502","500","502","502","502","510"]},"In some embodiments, lexicon construction and update module  comprises pre-processing module , which generates vocabulary or word list  of words to be entered into lexicon ,  for a particular language. Word list  can also be a complete list of all words to be initially entered in lexicon , . Alternately, word list  can comprises new words to be added to lexicon ,  in order to augment or update lexicon , .","It is noted that the present invention balances the amount or richness of information stored for each word entered versus the amount of possible combinations of data across all entries in the lexicon. In most embodiments, well-known \u201cHuffman encoding\u201d having particular tables or columns can be used to implement the present invention as mentioned above. In general, the amount of information for an entry occupies a minimum storage size or space necessary to encode that information. It is important to note that more data patterns shared across entries results in a smaller overall lexicon size. However, as the information for each entry gets richer, the total number of patterns encoded for the entire lexicon becomes larger. This increase in encoded patterns has been analogized to \u201centropy\u201d and is a key challenge of compression technologies. Thus, the higher the \u201centropy,\u201d the more bits of information that will be required to encode the data without loss. It is, therefore, advantageous to minimize entropy of data stored the lexicon to the extent practicable.","Referring back to , conventionally, pre-processing module  can comprise parser  that parses or segments lexical data  into words and grammatical features such as periods and commas.  illustrates steps of a method to construct lexicon , . Pre-processing module  receives lexical data at step  illustrated in  and can comprise word extractor  that selects or identifies words at step  in lexical data  to be added to word list or vocabulary . Pre-processing module  can be optional, especially in embodiments where lexical data  comprises a dictionary or lexicon to be updated in accordance with the present invention.","Word list or vocabulary  is received by tagging module , which processes or tags words in accordance with the present invention to construct lexicon , . Generally, tags indicate certain syntactic and\/or semantic information about words that is useful when accessed by applications or systems. Tagging module  comprises sub-modules that can include any or all of the following: spelling and dynamic segmentation module , part of speech module , lemma delta module , description module , and static segmentation mask module . Each tagging sub-module adds bits of information or tags for each entry in lexicon , .","At step , spelling and dynamic segmentation module  constructs a tag or tags comprising spelling and dynamic segmentation information. In most embodiments, a text spelling of each entered word is associated with a unique identification number. Spelling information can be encoded to indicate how each word in lexicon ,  aids spelling correction applications. For example, in some embodiments, spelling information can include a frequency indication, which can be used by a spell checker to generate or adjust the ranking words in a suggestion set when a possible misspelling is encountered. Spelling information can also include whether a word should be checked for correctness but not generated in a suggestion set. This information is particularly useful for words that are considered improper or vulgar. Such encoded information would permit a vulgarity to be checked for spelling but never become part of a suggestion set of alternate words for a misspelling. Spelling information can also include information for spell checking words in different dialects of the same language. For example, American English uses the term \u201ccolor\u201d while British English has another spelling \u201ccolour.\u201d Thus, a spelling tag can indicate, for example, that \u201ccolour\u201d is spelled correctly in British English but misspelled in American English.","Additionally, spelling and dynamic segmentation module  comprises dynamic segmentation information. Dynamic segmentation information includes bits of information that can be accessed by a verification process that determines whether constituent words are legally combined in a compound term. In some embodiments, the verification process causes a word to be mapped to two or more separate lexical entries in order to recognize a valid compound term in a selected language.","For example, the compound term \u201cbluehounddog\u201d has constituent words \u201cblue,\u201d \u201chound,\u201d and \u201cdog\u201d that can be marked with segmentation bits or values. During application runtime these bits can be accessed to determine if the constituent words are correctly combined and thus a valid compound term. Dynamic segmentation bits can also indicate a position of one constituent word relative to another, such as prefix, suffix, etc., which is especially important in extensive compounding languages such as German. In other embodiments, a constituent word can comprise more than one code, such as commonly occurs in Spanish.","It should be noted that lexicon ,  should not \u201cover-accept\u201d word compounds. In other words, constituent words should not indicate that they can be combined if the compound is not valid in a particular language. Thus, in the present invention, adapting a particular language to the lexicon is language specific. For instance, German language rules for compound terms are very different than for Spanish. However, module  can encode appropriate dynamic segmentation information for constituent words in either language using bits stored in spelling and dynamic segmentation field .","In some embodiments, module  encodes dynamic segmentation information for a possible first word of a compound with a particular code or value. A possible attachment to the first word is encoded as an attachment and further encoded with another code that indicates that it can be attached to the first word. In short, there generally is a matrix of possible combination rules\u2014phonetic, syntactic, and\/or morphological\u2014for building compounds in a lexicon for a particular language. However, it is advantageous that applications can quickly access information stored in the lexicon. At step , part of speech module  adds information relating to part of speech (POS), such as whether a word is a noun, verb, or adjective. However, more detailed POS information can be included. For example, a plural noun can have a unique code relative to the singular form of the same noun. One important application for the POS tag is to distinguish the role of a word in a given sentence or string. For instance, the word \u201cdog\u201d can have two distinct POS tags: one tag indicates its role as a noun, the other as a verb. In the string \u201cI pet the dog\u201d, the term \u201cdog\u201d is a noun. However, in the sentence \u201cI dogged after my big brother\u201d, the base term \u201cdog\u201d serves as a verb. A word's specific role can be determined in conjunction with surrounding terms and POS tags encoded for individual words that define relationships between the words. It is noted that POS tags can also be used with rule sets to perform simple syntactic parsing commonly known as \u201cchunk\u201d or \u201cisland\u201d parsing. In syntactic parsing, POS tags and other information, such as tense can be used to recognize small \u201cchunks\u201d of adjacent terms as a sentence to be linked as a single syntactic unit.","At step , lemma delta module  encodes information on how two words (e.g. an inflection and lemma) differ from each other. In some embodiments, up to 4 bytes of information are encoded in lemma delta field , which essentially are steps for transforming one word (e.g. inflection or derivative) into another word (e.g. the base word or lemma). Suppose the word \u201cruns\u201d is entered in lexicon , . In the present invention, the word \u201cruns\u201d can be transformed to its lemma \u201crun\u201d using, for example, up to four states or steps necessary to make a complete transformation. Generally, the present invention attempts to encode the most common steps (e.g. 15 possible steps) necessary to transform inflections or derivations to corresponding lemmas for a given language.","In most embodiments, a four-state state machine transforms or maps words into other words using an \u201cop code\u201d followed by an \u201cargument value\u201d. In the example where \u201cruns\u201d is transformed to \u201crun\u201d, the op code can be to \u201ccut a suffix\u201d or \u201cCutSuffix\u201d and the argument value can be \u201c1\u201d (i.e. the number of letters cut from the end of \u201cruns\u201d). In some embodiments, 15 different op codes can be used to record a transformation. For example, \u201ccut a prefix\u201d or \u201cCutPrefix\u201d can be another op code indicating cutting the beginning of a word followed by an argument value or the number of letters cut. Some op codes are used only rarely. In one illustrative embodiment, 4 bits of information are encoded to indicate an op code followed by a 4-bit argument value. Thus, 8 bits of information or 1 byte can be encoded by lemma delta module  for each step, or a maximum of 4 bytes in lemma delta field .","Other transformation steps can include an op code \u201cAddSuffix\u201d where a suffix is added having an argument value corresponding to a particular identifier. Each identifier is associated with a particular suffix such as \u201cs\u201d or \u201cer\u201d. Such identifiers are in a defined list.","Another op code \u201cAddSuffixChar\u201d can be used where the suffix added is not from a defined list but rather includes an argument having the actual suffix characters. It should be noted this form of op code can take up twice as much storage space (e.g. 2 bytes).","An op code \u201cAddPrefix\u201d is similar to \u201cAddSuffix\u201d but includes an argument value corresponding to a particular identifier for a prefix from a defined list.","An op Code \u201cAddPrefixChar\u201d is similar to \u201cAddSuffixChar\u201d but includes an argument value corresponding to actual characters for a prefix.","An op code \u201cToUpper\u201d can be used to change a character to an upper case letter, where an argument value provides the character position. Similarly, an op code \u201cToLower\u201d changes a character to a lower case letter where the argument value provides the character position.","An op code \u201cRemoveAccent\u201d can be used to remove an accent from a character where the argument value provides the character position.","An op code \u201cAddAcuteAccent\u201d can be used to add an acute accent to a character where the argument value provides the character position. Similarly, op code \u201cAddGraveAccent\u201d can be used to add a grave accent at a particular character position defined by the argument value. An op code \u201cAddDiaeresis\u201d can be used to add a diaeresis at a character position defined by the argument value. An op code \u201cAddCircumflexAccent\u201d can be used to add a circumflex accent at a character position defined by the argument value. Likewise, an op code \u201cAddTilde\u201d can be used to add a tilde at a character position defined by the argument value.","Finally, an op code \u201cSubstituteChar\u201d can be used to substitute a particular character at a particular position. In this case, there can be two argument values, one associated with the character, and one associated with the selected position.","At step , description module  encodes information conveying basic meaning, such as person, gender, tense, number, or whether a term can be part of a named entity in description field . For example, a word string such as \u201cJohn Smith\u201d can be encoded so that \u201cJohn\u201d is encoded as a first name and \u201cSmith\u201d is encoded as a last name. The word \u201che\u201d can be encoded as third person, singular, and male. The word \u201cran\u201d can be encoded as first, second, and third person, and past tense. In systems or applications having, for example, named entity detection, the lexicon of the present invention can be accessed to determine when a string of words is a named entity which should be collectively rather that individually processed. Other descriptive bits such as person, gender, tense, and number are useful in applications such as spelling and grammar correction. In some embodiments, descriptive information in descriptive field  can occupy up to a 4-byte data field as previous data fields , , .","At step , static segmentation mask module  encodes information in static segmentation mask field . The encoded information comprises a segmentation or a series of cut points that divide a word, especially a compound word into different segments and lengths. For example, in the compound term \u201cbluehounddog,\u201d the cut points or segment lengths can be 4, 5, and 3 (4 characters for blue, 5 characters for hound, and 3 characters for dog). The segment lengths can be used at runtime to reconstruct the constituent words of the compound, such as in a search engine. In some embodiments, the last digit 3 can be dropped because it is implied from the first two cut points at 4 and 5. Dropping the final segmentation length (e.g. 3 in the \u201chounddog\u201d example) is advantageous for reducing the amount of storage space needed due to the reduced number of code combinations. In other embodiments, it is possible to have more than one segmentation for a particular compound term. Thus, \u201cbluehounddog\u201d can be segmented as 4, 5, 3 and\/or 4, 5. Other segmentations can include 4, 8 and\/or 4 (4 for \u201cblue\u201d and 8 for \u201chounddog\u201d) where \u201chounddog\u201d is segmented as a single constituent word. Thus, static segmentation mask module  can generate multiple sets of segmentations to be stored in lexicon ,  for a particular compound term.","In the foregoing embodiment, static segmentation mask information comprises values indicative of the length of constituent words. However, in an alternative embodiment, values can be indicative of a character indicative of the first or last character of a constituent word. Thus, in the example \u201cbluehounddog\u201d, possible segmentations can include 5, 10 or 4, 9 because values 5, 10 and 4, 9 are indicative of first and last characters, respectively, of constituent words.","In some embodiments, encoded information or \u201ctags\u201d associated with each entry or word in the lexicon can be stored as up to 5 four-byte quantities where each of spelling and dynamic segmentation module , part of speech module , lemma delta module , description module , and static segmentation mask module  stores or causes the storage of a four-byte quantity of information. However, in other embodiments other data quantities or additional fields can be used for entries in lexicon ,  as desired.","It should be noted that in some situations, data cannot be encoded into one of the five tags as described above. In such situations, at step , data can be encoded with a second mechanism that uses pointer  that points to known intermediate indexes table (IIT) , in which such data is stored. Such intermediate indexes tables were described in U.S. patent application Publication No. US2003\/0204392A1 entitled \u201cLexicon with Sectionalized Data and Method of Using the Same,\u201d filed on Oct. 30, 2003, the content of which is hereby incorporated by reference in its entirety.","Generally, there are several types of extended data supported in this manner. The first type is for entries that have more than one lemma. Because only the first or primary lemma can be stored in tags by lemma delta module , subsequent lemmas must be stored in IIT  to be available at runtime. Subsequent lemmas stored in IIT  can be stored with a given data value or word identification number associated with each word. At runtime, this unique data value can be used to reconstruct the lemma string needed for a given entry.","In some embodiments, the storage layout of ITT  comprises an array of four-byte values where a one-byte value indicates \u201ctype\u201d of the entry and a three-byte value encodes the identification code of the lemma. An inflection, etc. is stored in the same manner but marked with different identification code to indicate the entry is a particular inflection type. Another type of data stored in IIT  comprises probability information for a given part of speech tag occurring in a sentence of text. For example, in the example where \u201cdog\u201d can be a noun or verb, the probability of \u201cdog\u201d being a noun is different and undoubtedly higher than the probability that \u201cdog\u201d is used as a verb in any sentence. This probability information can be stored in a manner similar to lemmas and inflections. For example, a total of four bytes of information can be stored where a one-byte value indicates \u201ctype\u201d and a three-byte value is associated with the particular word in vocabulary .","At step , lexicon construction and update module  generates or provides data fields , , , ,  to construct lexicon ,  for a particular language. Lexicon construction and update module  can generate a lexicon in any language, e.g. English, German, Spanish, Chinese, Korean, etc. In other embodiments, module  updates lexicon ,  with new words from word list . Such a lexicon update functionality permits lexicon construction and update module  to continuously monitor, for example, lexical data (e.g. publications or web sites) for new words to be added to lexicon ,  as the words become available. In still other embodiments, lexicon construction and update module  can generate subset lexicons for specific purposes. For example, it can be advantageous to have different lexicons directed to specific scientific, engineering, sports, cultural, or artistic endeavors that comprise words used in those endeavors. Lexicons limited to particular endeavors would advantageously tend to limit the overall size of the lexicon because some words are common in some endeavors but not others. Also, some words can be used or spelled differently depending on endeavors.","Although the present invention has been described with reference to particular embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE ILLUSTRATIVE EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4A","FIG. 4"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
