---
title: Method and system for encoding and decoding data in a video stream
abstract: In a block-based video stream, a first bit representing video data at a predefined location is identified. The video data at the first bit is replaced with a bit of non-video data prior to being transmitted to a device used to process the block-based video stream. Additional bits of non-video information are transmitted by replacing additional bits of video data within the block based video stream. A processing device that receives the block-based video stream accesses the non-video bits to obtain the non-video data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07130350&OS=07130350&RS=07130350
owner: ViXS Systems, Inc.
number: 07130350
owner_city: Toronto
owner_country: CA
publication_date: 20030228
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION OF THE FIGURES"],"p":["The present invention relates generally to providing data over a video stream, and more specifically to providing data over a block based video stream.","Many different compression algorithms have been developed in the past for digitally encoding video and audio information to minimize the bandwidth required to transmit this information for a given picture quality. Several multimedia specification committees have established and proposed standards for encoding\/compressing and decoding\/decompressing audio and video information. The most widely accepted international standards have been proposed by the Moving Pictures Expert Groups (MPEG), and are generally referred to as the MPEG-1, MPEG-2 and MPEG-4 standards. These MPEG standards for moving picture compression are used in a variety of current video playback products, including digital versatile (or video) disk (DVD) players, multimedia PCs having DVD playback capability, and satellite broadcast digital video.","In general, in accordance with the MPEG standards, the audio and video data comprising a multimedia data stream are encoded\/compressed in an intelligent manner using a compression technique generally know as \u201cmotion coding\u201d. More particularly, rather than transmitting each video frame in its entirety, MPEG uses motion estimation for only those parts of sequential pictures that vary due to motion, where possible. In general, the picture elements or \u201cpixels\u201d of a picture are specified relative to those of a previously transmitted reference frame using motion vectors that specify the location of a 16-by-16 array of pixels or \u201cmacroblock\u201d within the current frame relative to its original location within the reference frame. Three main types of video frames or pictures are specified by MPEG, namely, I-type, P-type, and B-type pictures.","An I frame is coded using only the information contained in that frame, and hence, is referred to an \u201cintra-coded\u201d.","A P frame is coded\/compressed using motion compensated prediction (or \u2018motion estimation\u201d) based upon information from a past reference frame (either I-type or P-type).","A B frame is coded\/compressed using motion compensated prediction (or \u201cmotion estimation\u201d) based upon information from either a past and\/or a future reference frame (either I-type or P-type), or both. B frame pictures are usually inserted between I-type or P-type pictures, or combinations of either.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":"00"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 1","FIG. 1"],"b":["1","2","3","4","5","6","7","2","2","1","3"]},"The MPEG protocol supports transmission of audio stream data, video stream data, and other non-audio\/video stream data. It is often desirable for content, such as the video content to be blocked based on access control techniques to prevent unauthorized access. This information is generally sent using the non-audio\/video packet capabilities of the MPEG protocol. However, such transmission of access control information lends itself to be bypassed by merely separating the video stream data from the non-video stream data. Therefore, it would be useful to provide access control information and other information in a manner that didn't lend itself to being separated from the video stream.","Therefore it can be seen that a system and method for transmitting non-video information in a block based multimedia protocol would be useful.","The present disclosure relates generally to providing non-video data to a block based video stream. In addition, the present disclosure relates generally to retrieving the non-video data from block-based video streams.  illustrates a specific method in accordance with the present disclosure.","At step , a location within a block-based video stream is identified for the storage of non-video data. As indicated in block , there are numerous considerations which can be taken into account in identifying a specific location for the non-video based data. For example, the specific location where non-video data is to be stored can be dependent upon a specific group of pictures, a specific frame within a group of pictures, or a specific block within a group or frame of pictures. For example, within a group of pictures a specific frame selected by its frame type, or frame location, could be identified to contain the non-video data. Furthermore, within an identified frame, specific blocks may be identified to contain the non-video data. Within an identified block, the location to store non-video data can be restricted to specific samples associated with the block. Likewise, within each identified sample, it is possible for the location of non-video data to be further limited by a specific bit location. It will be appreciated, that any type of information uniquely identifying a group of pictures, a frame, a block, or a sample within a block that is associated with the MPEG protocol can be used to identify a specific location where non-video data is to be stored.","At step , a video data at the location identified at step , is replaced with non-video data. As indicated in block , such information can be: data authentification information, such as would be used to allow a user to view specific multimedia presentation material; user control information, such as channel select, volume control, or picture control information that would be provided by the user; or system control information, whereby a system between an end user and an content provider of the video content inserts digital information for any of a number of purposes including data authentification, control or identification.","At step , a determination is made whether more non-video data is to be inserted in the correct video stream, if so the flow proceeds back to step . If not, the flow terminates at step . Specific implementations of the method of  are further described with reference to .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 3","FIG. 3"],"b":["120","125","130","120","121","122","120","120","125"]},"Upon receiving the combined video\/non-video data, the data extraction module  extracts non-video data from the video data and provides it to appropriate destinations. For example, the non-video data can be provided to an external source, or to an internal source, such as control module . The video data or the video\/non-video data can be processed to create rendered video and provided to a display device. The data insertion module  further comprises a video encode module  coupled to a control module . In operation, the video encode module  receives video-in data and non-video data. The non-video data can be received from an external source, as indicated, or from an internal control module . Examples of an internal control module would include user authentification modules, identification insertion modules, as well as other control modules for controlling the flow of video information. In addition, it will be appreciated that the data inserted does not have to be related to the content of the video stream.","Data extraction system  further includes a video decode module  which receives the video\/non-video data and extracts the non-video data. In one embodiment, at least a portion of the non-video data is provided to a control module . It will be appreciated that control module  working in unison with the control module , can be used to provide a wide range of control features between the data insertion system  and the data extraction system . Since the video data replaced by the non-video information is lost, the video decode module  can decode the non-video information, or replace it with a predefined value.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 4","FIG. 3","FIG. 4"],"b":["121","121","135","136","137","135","135","136","136","137","135"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 5","FIG. 3","FIG. 5"],"b":["126","141","142","143","141","141","126","142","142","143"]},"The back end video decompression system  can receive video data to be decompressed either directly from the non-video data extraction module , or from the front end decompression module . Where the information is received from the front end decompression module , it will be appreciated that the back end video decompression module receives both the video data and the non-video data. In one embodiment, this is acceptable in that the non-video data has been inserted into the video stream such that any artifacts introduced into the picture as a result of the non-video data would be either imperceptible to the viewer or degrade the quality by a level whereby it would be acceptable. In an alternate embodiment, the non-video data could be replaced by other data by the non-video data extraction module . For example, all of the locations containing non-video data could be set to a specific value. However, it will be appreciated that the original video data contained at the storage location of the non-video data will not be recovered.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 6","FIG. 4","FIG. 6","FIG. 8"],"b":["135","151","152","153","154"]},"In operation, when a non-compressed video signal is received, a motion compensation is performed by block . As previously discussed, one aspect of motion compensation would be to determine motion vectors. These motion vectors would generally be associated with the specific macroblock. Referring to , a block of data  represents raw of compressed video data. For references herein, the raw data can be either the video-in data prior to motion compensation or the video-in data after motion compression. Specifically, the raw data refers to image data which is stored in a spatial format hence the \u201cs\u201d prefix representing each sample.","The block of data  is received at the discreet cosinus transform block , where a discreet cosinus transform is performed. It will be appreciated that the discreet cosinus transform will convert the block of data  from a spatial domain into a frequency domain. Because most of the information associated with specific blocks of video tend to have low frequency components, it is a well recognized property of video that, as a general rule, video information stored within the frequency domain will be more compacted than the information stored in the spatial domain. This is represented in  by block , where only those samples having non-zero information are illustrated. In other words, T, T, T represent specific samples of block  having non-zero data. The prefix \u201cF\u201d is used in block  to indicate the samples represent frequency data.","Next, at the quantization module , a quantization is performed on the data block  generated by module . By quantizing the data, the amount of data representing a frame is further reduced. This is illustrated in  by block , whereby even fewer samples of the block  contain non-zero data as compared to the block . It will be further appreciated, that the quantization step performed by the quantization module  is a lossy operation, in that it is not possible to get back the exact information once quantization is performed.","At the data reorganization module  the information received from the quantization module  is reorganized. Often referred as a zigzag operation, the data reorganization module  operates on the fact that the non-zero data of quantized information following the discreet cosinus transform step of  results in the non-zero data being generally located at the low frequency corner (top left) at the macroblock . By reorganizing the data to place the data stream samples containing data adjacent to one another, the back end compression step performed by compression module  can be more efficient. The reorganized video data  is provided to the non-video data insertion module  which inserts the non-video data prior to providing it to the compression module .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 7","FIG. 5","FIG. 7","FIG. 8"],"b":["143","143","161","162","163","164","161","142","141","161","212"]},"Module  provides its output stream to the de-quantification  which performs a de-quantification to provide a block representation similar to that of  in . It will be appreciated, that because the quantification is a lossy operation the data values represented in  following de-quantification will generally not be exactly the same as they were prior to quantification by quantification module .","Following de-quantification, an inverse discreet transform module  performs an inverse discreet transform function on the frequency domain block in order to provide a block of spatial data such as block  representing video data. Lastly, the motion compensation module  can perform any additional decompression such as motion compensation prior to providing the video-out.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIGS. 9\u201311","FIG. 9","FIG. 9"],"b":["220","1","2","3","230"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 10","b":["240","250","250"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 11","FIG. 11","FIG. 11"],"b":["300","310","1","3","2","4","5","7","6"]},"The specific B frame is illustrated as stream  in . B frame B is illustrated to have blocks of data B () through B (N,N). Each of the blocks illustrated in stream  represents a macroblock of the B frame B.","The first macroblock of stream , B (), is further illustrated as data block  to comprise four blocks of luminance data, Y\u2013Y, and two blocks of chrominance data, U and V. Likewise, the second macroblock of B frame B, B (), is illustrated as data block  which also include four luminance blocks and two chrominance blocks. In the specific embodiment illustrated, the block  representing the macroblock B () stores a single bit of non-video data in each of the chrominance blocks. For example, a first bit of data, B, is stored within the U chrominance block of the macroblock B () while a second bit of data, B , is stored within the V chrominance block of macroblock B, (). In a similar manner, the block , representing macroblock B (), stores a single bit of information in each of the two chrominance blocks as illustrated. The chrominance block U of data block  is further illustrated as samples . As illustrated, 64 samples reside within each 8\u00d78 block of data. Therefore, samples S through S are represented. In a similar manner, the V chrominance data is also represented as samples . The sample S within sample  represents the last word of the chrominance data block U of block B() data stream. By the last sample, it is referred to as the sample that would be at one end of a specific block of data transmission of a specific block of data. For example, the last sample of a chrominance block, Sample  of block  is further represented by byte . Byte  is illustrated to have seven bits of zeros followed by an unknown bit X. The unknown Bit X represents the non-data to be inserted. The first sample of the V, in stream , block immediately following the last sample of the U block is illustrated as sample .  is illustrated as having 8 bits set to X. It will be appreciated, that a bit set to X represents a bit that is associated with a byte that is expected to have non-zero value.","Therefore, during compression, the samples of a block are encoded only if one of them is different from zero. A flag specifies the presence or not of the block samples in the video stream. In an embodiment, the data bit will be inserted in the last bit of the last sample of a chrominance block. For example, byte  is the last sample of U chrominance block , and byte  is the last sample of the V chrominance block . By limiting data insertion to only those blocks of data that are non-zero, an efficient compression is realized when entropy encoding, involving a run length encoding is implemented by block . Note that even though all bytes \u2013 are illustrated as flowing to compressed run length data , each block is generally compressed independently of each other block. By limiting data insertion to only those blocks of data that are chrominance blocks, artifacts resulting from the insertion of data are minimized.","In a specific embodiment, the data inserted in the data stream can include a specific bit code representing a start code. For example, a series of zeros of a specified length followed by a one can indicate a data start indicator. Once the data start indicator is recognized, the inserted data stream can be retrieved. Where the data to be inserted has a fixed length, it can be repeated in a continuous manner. In another embodiment, additional codes can be inserted in place of the start code, or following the start code to indicate the presence and\/or types of data being sent.","It will now be appreciated that non-video data can be inserted in a video stream in a manner that will reduce artifacts in displayed video, and won't have significant impact on data size.","The various functions and components in the present application may be implemented using an information-handling machine such as a data processor, or a plurality of processing devices. Such a data processor may be a microprocessor, microcontroller, microcomputer, digital signal processor, state machine, logic circuitry, and\/or any device that manipulates digital information based on operational instruction, or in a predefined manner. Generally, the various functions, and systems represented by block diagrams are readily implemented by one of ordinary skill in the art using one or more of the implementation techniques listed herein. When a data processor for issuing instructions is used, the instruction may be stored in memory. Such a memory may be a single memory device or a plurality of memory devices. Such a memory device may be read-only memory device, random access memory device, magnetic tape memory, floppy disk memory, hard drive memory, external tape, and\/or any device that stores digital information. Note that when the data processor implements one or more of its functions via a state machine or logic circuitry, the memory storing the corresponding instructions may be embedded within the circuitry that includes a state machine and\/or logic circuitry, or it may be unnecessary because the function is performed using combinational logic. Such an information handling machine may be a system, or part of a system, such as a computer, a personal digital assistant (PDA), a hand held computing device, a cable set-top box, an Internet capable device, such as a cellular phone, and the like.","In the preceding detailed description of the figures, reference has been made to the accompanying drawings, which form a part thereof, and in which is shown by way of illustration specific embodiments in which the disclosure may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the disclosure, and it is to be understood that other embodiments may be utilized and that logical, mechanical, chemical and electrical changes may be made without departing from the spirit or scope of the disclosure. To avoid detail not necessary to enable those skilled in the art to practice the disclosure, the description may omit certain information known to those skilled in the art. Furthermore, many other varied embodiments that incorporate the teachings of the disclosure may be easily constructed by those skilled in the art. Accordingly, the present disclosure is not intended to be limited to the specific form set forth herein, but on the contrary, it is intended to cover such alternatives, modifications, and equivalents, as can be reasonably included within the spirit and scope of the disclosure. The preceding detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present disclosure is defined only by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 6","FIG. 4"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 9 and 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
