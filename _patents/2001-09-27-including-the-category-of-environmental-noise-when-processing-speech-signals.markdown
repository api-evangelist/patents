---
title: Including the category of environmental noise when processing speech signals
abstract: A method and apparatus are provided for identifying a noise environment for a frame of an input signal based on at least one feature for that frame. Under one embodiment, the noise environment is identified by determining the probability of each of a set of possible noise environments. For some embodiments, the probabilities of the noise environments for past frames are included in the identification of an environment for a current frame. In one particular embodiment, a count is generated for each environment that indicates the number of past frames for which the environment was the most probable environment. The environment with the highest count is then selected as the environment for the current frame.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06959276&OS=06959276&RS=06959276
owner: Microsoft Corporation
number: 06959276
owner_city: Redmond
owner_country: US
publication_date: 20010927
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["The present invention relates to noise in signals. In particular, the present invention relates to identifying noise environments from noisy signals used in pattern recognition.","A pattern recognition system, such as a speech recognition system, takes an input signal and attempts to decode the signal to find a pattern represented by the signal. For example, in a speech recognition system, a speech signal (often referred to as a test signal) is received by the recognition system and is decoded to identify a string of words represented by the speech signal.","To decode the incoming test signal, most recognition systems utilize one or more models that describe the likelihood that a portion of the test signal represents a particular pattern. Examples of such models include Neural Nets, Dynamic Time Warping, segment models, and Hidden Markov Models.","Before a model can be used to decode an incoming signal, it must be trained. This is typically done by measuring input training signals generated from a known training pattern. For example, in speech recognition, a collection of speech signals is generated by speakers reading from a known text. These speech signals are then used to train the models.","In order for the models to work optimally, the signals used to train the model should be similar to the eventual test signals that are decoded. In particular, the training signals should have the same amount and type of noise as the test signals that are decoded.","Typically, the training signal is collected under \u201cclean\u201d conditions and is considered to be relatively noise free. To achieve this same low level of noise in the test signal, many prior art systems apply noise reduction techniques to the testing data.","One particular technique for removing noise under the prior art, identifies a set of correction vectors from a stereo signal formed of two channel signals, each channel containing the same pattern signal. One of the channel signals is \u201cclean\u201d and the other includes additive noise. Using feature vectors that represent frames of these channel signals, a collection of noise correction vectors are determined that map the feature vectors of the noisy channel signal to the feature vectors of the clean channel signal. When a feature vector of a noisy pattern signal, either a training signal or a test signal, is later received, a suitable correction vector is added to the feature vector to produce a noise reduced feature vector.","Under the prior art, such systems are either trained using data from a single noise environment, such as an office or a car, or by treating data from different environments as occurring in a single environment. Systems that are trained using data from only a single noise environment experience a drop in performance when they are used in a different noise environment. Thus, a system trained with car noise will not work as well in an airplane.","Systems that treat noise data from different environments as occurring in a single environment are not optimal because they tend to jump between noise correction vectors for different noise environments even when the noise environment in which the system is being used is not changing. Thus, such a system may switch between correction vectors associated with a car, a plane, and an office while it is being used in the single environment of a car.","Some speech recognition systems of the prior art have attempted to identify an environment for an entire utterance by selecting the environment from a group of possible environments. However, because these systems only identify the environment at utterance boundaries, they do not work well when the noise environment changes during an utterance. Thus, a system is needed that can identify a noise environment \u201con the fly\u201d as each section of an utterance is processed instead of waiting for the entire utterance to be received.","A method and apparatus are provided for identifying a noise environment for a frame of an input signal based on at least one feature for that frame. Under one embodiment, the noise environment is identified by determining the probability of each of a set of possible noise environments. For some embodiments, the probabilities of the noise environments for past frames are included in the identification of an environment for a current frame. In one particular embodiment, a count is generated for each environment that indicates the number of past frames for which the environment was the most probable environment. The environment with the highest count is then selected as the environment for the current frame.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general-purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer .","Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, FR, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies.","A user may enter commands and information into the computer  through input devices such as a keyboard , a microphone , and a pointing device , such as a mouse, trackball or touch pad. Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a hand-held device, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2","b":["200","200","202","204","206","208","210"]},"Memory  is implemented as non-volatile electronic memory such as random access memory (RAM) with a battery back-up module (not shown) such that information stored in memory  is not lost when the general power to mobile device  is shut down. A portion of memory  is preferably allocated as addressable memory for program execution, while another portion of memory  is preferably used for storage, such as to simulate storage on a disk drive.","Memory  includes an operating system , application programs  as well as an object store . During operation, operating system  is preferably executed by processor  from memory . Operating system , in one preferred embodiment, is a WINDOWS\u00ae CE brand operating system commercially available from Microsoft Corporation. Operating system  is preferably designed for mobile devices, and implements database features that can be utilized by applications  through a set of exposed application programming interfaces and methods. The objects in object store  are maintained by applications  and operating system , at least partially in response to calls to the exposed application programming interfaces and methods.","Communication interface  represents numerous devices and technologies that allow mobile device  to send and receive information. The devices include wired and wireless modems, satellite receivers and broadcast tuners to name a few. Mobile device  can also be directly connected to a computer to exchange data therewith. In such cases, communication interface  can be an infrared transceiver or a serial or parallel communication connection, all of which are capable of transmitting streaming information.","Input\/output components  include a variety of input devices such as a touch-sensitive screen, buttons, rollers, and a microphone as well as a variety of output devices including an audio generator, a vibrating device, and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition, other input\/output devices may be attached to or found with mobile device  within the scope of the present invention.","Under the present invention, a system and method are provided that make a decision at each frame of a noisy input signal to identify a noise environment for the frame. The identification of the noise environment can be used for several purposes including setting confidence measure thresholds for accepting a proposed pattern from the recognition system and for reducing noise in the noisy input signal.","A method for training a noise environment identification model is described below with reference to the flow diagram of FIG.  and the block diagram of FIG. . The method of  also includes steps for generating correction vectors that can be used to remove noise from noisy signals generated in a set of expected noise environments. A method of identifying a noise environment from an input noisy feature vector is described below with reference to the flow diagram of FIG.  and the block diagram of FIG. .","The method of training a noise environment identification model and of generating correction vectors begins in step  of , where a \u201cclean\u201d channel signal is converted into a sequence of feature vectors. To do this, a speaker  of , speaks into a microphone , which converts the audio waves into electrical signals. The electrical signals are then sampled by an analog-to-digital converter  to generate a sequence of digital values, which are grouped into frames of values by a frame constructor . In one embodiment, A-to-D converter  samples the analog signal at 16 kHz and 16 bits per sample, thereby creating 32 kilobytes of speech data per second and frame constructor  creates a new frame every 10 milliseconds that includes 25 milliseconds worth of data.","Each frame of data provided by frame constructor  is converted into a feature vector by a feature extractor . Examples of feature extraction modules include modules for performing Linear Predictive Coding (LPC), LPC derived cepstrum, Perceptive Linear Prediction (PLP), Auditory model feature extraction, and Mel-Frequency Cepstrum Coefficients (MFCC) feature extraction. Note that the invention is not limited to these feature extraction modules and that other modules may be used within the context of the present invention.","In step  of , an expected noise environment is selected and a noisy channel signal from that environment is converted into feature vectors. Although the conversion of step  is shown as occurring after the conversion of step , any part of the conversion may be performed before, during or after step  under the present invention","In the embodiment of , the process of step  begins when the same speech signal generated by speaker  is provided to a second microphone . The signal detected by this second microphone includes the speech signal as distorted by a channel associated with the selected noise environment and some amount of additive noise from an additive noise source  associated with the selected noise environment. Microphone  converts the distorted and\/or noisy speech signal into a single electrical signal, which is sampled by an analog-to-digital converter . The sampling characteristics for A\/D converter  are the same as those described above for A\/D converter . The samples provided by A\/D converter  are collected into frames by a frame constructor , which acts in a manner similar to frame constructor . These frames of samples are then converted into feature vectors by a feature extractor , which uses the same feature extraction method as feature extractor .","In other embodiments, not all of the noisy feature vectors are formed from an actual noisy signal. Instead, a copy of the clean speech signal is modified at some point within the processing chain formed by microphone , A\/D converter , frame constructor , and feature extractor  to produce synthesized noisy speech.","In one particular embodiment, an average channel distortion vector and an average noise vector are determined for the selected environment based on a relatively small set of clean feature vectors and noisy feature vectors created using the stereo system above. Any of several known techniques for identifying additive noise and channel distortion in a noisy signal can be used to identify these average vectors. A larger set of clean speech vectors are then convolved with the average channel distortion vector and the result is added to the average noise vector to produce a large set of noisy vectors representing a synthesized noisy speech signal.","The ability to synthesize a large amount of noisy data is helpful under the present invention because it allows a large number of environments to be modeled without requiring the recording of a large amount of stereo data from each environment. Those skilled in the art will recognize that the collection of a large amount of stereo data is expensive and that this aspect of the present invention provides a significant cost savings.","The feature vectors for the noisy channel signal and the \u201cclean\u201d channel signal are provided to a noise environment identification trainer  in FIG. . At step  of , noise environment identification trainer  groups the feature vectors for the noisy channel signal into mixture components. This grouping can be done by grouping feature vectors of similar noises together using a maximum likelihood training technique or by grouping feature vectors that represent a temporal section of the speech signal together. Those skilled in the art will recognize that other techniques for grouping the feature vectors may be used and that the two techniques listed above are only provided as examples.","After the feature vectors of the noisy channel signal have been grouped into mixture components, noise environment identification trainer  generates a set of distribution values that are indicative of the distribution of the feature vectors within the mixture component. This is shown as step  in FIG. . In many embodiments, this involves determining a mean vector and a standard deviation vector for each vector component in the feature vectors of each mixture component. In an embodiment in which maximum likelihood training is used to group the feature vectors, the means and standard deviations are provided as by-products of identifying the groups for the mixture components.","Under one embodiment, each mixture component is associated with a codeword (i.e. the mean vector of the mixture component) that provides an approximate and more compact representation of the noisy feature vectors found in the mixture component. By storing a smaller codeword instead of the noisy feature vectors, this embodiment reduces the amount of storage used by the system. In one embodiment, the codeword is based on the mean vector for the mixture component.","For embodiments that use the identified environment to locate correction vectors, the noise environment identification trainer  determines a correction vector for each mixture component, at step  of FIG. . Under one embodiment, the vector components of the correction vector for each mixture component are determined by determining the difference between the average vector of the noisy vectors and the average vectors of the clean vectors for the component.","After a correction vector has been determined for each mixture component at step , the correction vectors and distribution values for each mixture component are stored as parameters of the codeword associated with the mixture component at step . In , the parameters for the first selected environment are stored in parameter storage  of FIG. .","At step , it is determined whether there are any other noise environments that the model should be trained to identify. If there are additional environments, the process returns to step  and a new noise environment is selected. Steps , , , , and  are then repeated using a noisy channel signal from the newly selected environment. Repeating these steps produces a collection of noise environment identification parameter sets such as sets , , and , with one set for each noise environment. In one embodiment, twenty parameter sets are formed for twenty different noise environments.","Once the parameters for the mixture components and\/or codewords have been formed for each environment, they may be used to identify an environment for a frame of a noisy signal.  provide a flow diagram and a block diagram, respectively, that describe a technique and apparatus for identifying a noise environment and for using that identification in a speech recognition system.","The process of  begins at step  where a noisy training signal or test signal is converted into a series of feature vectors. In , step  involves a speaker , either a trainer or a user, speaking into a microphone . Microphone  also receives additive noise from one or more noise sources  in one or more noise environments. The audio signals detected by microphone  are converted into electrical signals that are provided to analog-to-digital converter . Although additive noise  is shown entering through microphone  in the embodiment of , in other embodiments, additive noise  may be added to the input speech signal as a digital signal after A-to-D converter .","A-to-D converter  converts the analog signal from microphone  into a series of digital values. In several embodiments, A-to-D converter  samples the analog signal at 16 kHz and 16 bits per sample, thereby creating 32 kilobytes of speech data per second. These digital values are provided to a frame constructor , which, in one embodiment, groups the values into 25 millisecond frames that start 10 milliseconds apart.","The frames of data created by frame constructor  are provided to feature extractor , which extracts a feature from a frame. The same feature extraction that was used to train the noise environment parameters (the correction vectors, means, and standard deviations of the mixture components) is used in feature extraction . As mentioned above, examples of such feature extraction modules include modules for performing Linear Predictive Coding (LPC), LPC derived cepstrum, Perceptive Linear Prediction (PLP), Auditory model feature extraction, and Mel-Frequency Cepstrum Coefficients (MFCC) feature extraction.","The feature extraction module produces a stream of feature vectors that are each associated with a frame of the speech signal. This stream of feature vectors is provided to an environment identification unit , which identifies a noise environment for each feature vector by making a separate environment decision at each frame.","At step , environment identification unit  determines a set of probabilities that describe the probability that the noise in a noisy feature vector was generated in a particular environment. In particular, environment identification unit  determines a separate set of probabilities for each feature vector it receives.","Under one embodiment, the probability of an environment given a noisy feature vector, P(E|A), is determined by first using Bayes rule: \n\n\nwhere P(E|A) is the probability of a noise environment E given a noisy signal A, P(A|E) is the probability of noisy signal A given environment E, P(E) is the prior probability of environment E, and P(A) is the prior probability of noisy signal A.\n","In Equation 1, P(A) is independent of the environment and therefore can be ignored. P(E) may also be ignored because its affects on the total probability is small compared to the P(A|E) term if a sufficient number of frames are used when determining P(A|E)","Thus, the maximum likelihood estimate of the environment can be determined as:\n\n=arg max()\u2003\u2003EQ. 2\n\nwhich means that the most likely environment is the environment that has the highest probability of producing the noisy signal.\n","Under one embodiment, the probability P(A|E) is determined for each noisy vector based on a mixture of Gaussians formed from the mixture components of each environment. In terms of an equation: \n\n\nwhere d(y,c) is a distance measure between noisy feature vector y and codeword c for mixture component i of environment E. For a Gaussian distribution, this distance measure is of the form:\n\n(y\u2212c)\u03a3(y\u2212c)\u2003\u2003EQ. 4\n\nwhere \u03a3is the variance of the training noisy feature vectors associated with mixture component i.\n","Further simplifications can be made by assuming a uniform prior of codewords so P(c) can be ignored. In a further simplification, it is assumed that P(A|E) is dominated by the closest codeword so that: \n\n","To determine the probability in equation 5, one embodiment of the present invention uses a tree-based vector quantization technique so that the distance between the noisy feature vector and each codeword in an environment does not have to be determined. Instead, the codeword space is sequentially divided into a set of sub-spaces by a set of boundaries until one codeword is in each sub-space. The noisy feature vector is then compared sequentially to boundaries in the set of boundaries until it is placed in a sub-space that is not further divided by a boundary. It is then compared to the codeword in that sub-space to determine the probability of equation 5.","At step , the probabilities determined for each environment are used to identify an environment for the current frame. Under one embodiment, the environment is identified simply by selecting the environment that provides the highest probability for the current frame using equation 5. In other embodiments, the observation that the environment is usually stable is used to apply a time filter to the probabilities before selecting a most probable environment. Under one embodiment, the filter is a Finite Impulse Response (FIR) filter of the form: \n\n\nwhere P(A|E) is a filtered probability of noisy signal A given environment E for current frame n, P(A|E) is an unfiltered probability for a frame that is m frames before current frame n, h[m] is a weight for a frame that is m frames before current frame n, and M is the number of past frames applied to the filter.\n","The effects of filtering can be seen in .  shows the value of the calculated probabilities without filtering for a set of frames. In particular,  shows probability graphs  and  for two different environments with frame numbers shown along horizontal axis  and probability shown along vertical axis .  shows the calculated probabilities of  after filtering. In particular, graphs  and  represent filtered versions of graphs  and , respectively. As can be seen by comparing , the filtering removes a spike  in graph  that would otherwise cause a switch in the identified environment.","In other embodiments, a voting filter is used that selects an environment for the current frame based on the number of frames in which each environment was most probable over a set of past frames. The probability used for voting can either be a one-frame probability such as the probability of equation 5 or a filtered probability such as the probability of equation 6. The operation of this voting filter can be seen in  where dotted graph  corresponds to probability graph  and graph  corresponds to probability graph .","Once an environment has been selected for a frame, the selected environment can be used during the training and\/or use of a pattern recognition system. Under one embodiment, shown in , the selected environment is used to create a clean input feature vector from the noisy input feature. Under this embodiment, the identified environment and the noisy feature vector are provided to a noise reduction module , which selects and applies a correction vector to the noisy input feature vector. In particular, noise reduction module  accesses stored parameters for the identified environment from environment parameter storage , which contains the parameters for all of the expected environments. Typically, noise reduction module  selects a correction vector that is associated with the closest codeword to the noisy input feature vector in the identified environment. By applying the selected correction vector to the noisy input feature vector, noise reduction module  generates a clean feature vector that can be used to train a recognition model or can be applied to a recognition model to identify a speech unit.","Thus, the output of noise reduction module  is a series of clean feature vectors. If the input signal is a training signal, this series of clean feature vectors is provided to a trainer , which uses the clean feature vectors and a training text  to train an acoustic model . Techniques for training such models are known in the art and a description of them is not required for an understanding of the present invention.","If the input signal is a test signal, the clean feature vectors are provided to a decoder , which identifies a most likely sequence of words based on the stream of feature vectors, a lexicon , a language model , and the acoustic model . The particular method used for decoding is not important to the present invention and any of several known methods for decoding may be used.","The most probable sequence of hypothesis words is provided to a confidence measure module . Confidence measure module  identifies which words are most likely to have been improperly identified by the speech recognizer, based in part on a secondary acoustic model(not shown). Confidence measure module  then provides the sequence of hypothesis words to an output module  along with identifiers indicating which words may have been improperly identified.","In some embodiments, the environment identified by environment identifier  is used by confidence measure module  when determining the confidence of a hypothesis. Using this information, confidence measure module  adjusts the confidence measure based on which environment the hypothesis was generated from. In particular, the confidence measure is changed based on the ability of decoder  to identify words spoken in particular environments. If the decoder performs well in an environment, the confidence measure will be higher for that environment. If the decoder performs poorly in an environment, the confidence measure will be lower for words identified from that environment.","Although  depicts a speech recognition system, the present invention may be used in any pattern recognition system and is not limited to speech.","Although the present invention has been described with reference to particular embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 9","FIGS. 7 and 8"]}]},"DETDESC":[{},{}]}
