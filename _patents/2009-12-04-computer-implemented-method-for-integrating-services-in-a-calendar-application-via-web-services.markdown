---
title: Computer implemented method for integrating services in a calendar application via web services
abstract: A system and method to integrate a service in a calendar application. A service integration module and a calendar application may be installed on a client computing device. The service integration module may have read and write access to the calendar application of the client computing device and may submit a service request to a remote service. The service request may be a call of a first web service interface of the service and may initiate the execution of the service which may generate a result. The service integration module may receive the result. The service integration module may process the result, which may include extracting data required for specifying an event in an electronic calendar of the calendar application. The service integration module may create, delete, or modify an event in the electronic calendar of the calendar application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08296266&OS=08296266&RS=08296266
owner: SAP AG
number: 08296266
owner_city: Walldorf
owner_country: DE
publication_date: 20091204
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND AND RELATED ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","ABBREVIATIONS","LIST OF REFERENCE NUMERALS"],"p":["The present invention relates to the field of data processing, and more particularly to a computer implemented method for integrating services in a calendar application via web services.","Calendar applications are software applications comprising an electronic calendar. In addition to providing a calendar functionality, calendar applications may assist in managing events and dates, may comprise address books and integrated e-mail clients. They assist in organizing meetings by providing a meeting request functionality for inviting multiple persons to meetings and telephone conferences. Microsoft Outlook, for example, provides the user with means to invite one or more potential participants to join a meeting via a meeting request e-mail sent to the e-mail addresses of the invited persons.","A core limitation of current calendar applications is the fact that they are decoupled from the events of the real world they are supposed to help organizing. If an event or an activity in the \u2018real world\u2019 has to be postponed or modified, these changes usually have to be entered in the calendar application manually in order to update the data objects in the electronic calendar resembling those events of the real world. The multitude of manual steps which have to be exercised in order to synchronize the events in the electronic calendar (the data objects) with the events in the real world costs considerable time and effort and may lead to errors. In addition, many tasks have to be manually exercised repeatedly, e.g. the booking of train tickets, the booking of a table in a restaurant or the search for trip accompanies with the help of a trip sharing service. In particular for uniformly executed, repeated tasks, the automated execution of the corresponding services and an automated synchronization of the service with the calendar application would highly be appreciated by many users of calendar applications.","In the following, the term \u2018event\u2019 refers to data objects being stored in, written to or read from an electronic calendar of a calendar application, the data objects representing an event in the real world. The data object comprises data being adapted to specify an event. For example, an event in an electronic calendar may comprise a starting time, an ending time, a location or the subject. The data object can be manipulated by the commands of a programming language. An event can be a singular event or a recurring event comprising a particular recurrence pattern.","As the calendar applications currently in use are not able to communicate with services assisting in organizing events such as trip events or business appointments automatically, the user currently fulfils the function of a human interface between the calendar application and the services: the user has to remember multiple passwords, log into multiple services in order to book flights, order taxies or buy train tickets. While the user exercises a task, e.g. buys a train ticket, he is notified about the actual departure and arrival time of the chosen connection. This information in the next step has to be entered by the user in the electronic calendar manually.","The tasks mentioned in the previous examples commonly and repeatedly occur in business as well as private life but currently no adequate solution exists to execute them automatically, thereby saving working time, preventing the introduction of errors and ensuring that the electronic calendar is up-to-date, synchronized with the real world and free of inconsistencies.","The present invention provides a computer implemented method for integrating one or multiple services in a calendar application via a service integration module. The service integration module according to one embodiment of the invention is a software component installed on the same processing device as the calendar application and having read and write access to the electronic calendar of the calendar application. According to a further embodiment of the invention, the service integration module is installed on a computer having installed a groupware server of the calendar application. The service integration module in operation is capable to submit service request via an interface provided by the service. Depending on the embodiment of the invention, the service integration module is in addition able to receive the result generated by the service and create, delete and modify events according to the received result into the electronic calendar. According to further embodiments of the invention, the service integration module in addition may facilitate the entry and specification of the service request via a GUI or be able to predict required events and submit corresponding service requests automatically. The presented method can be used to integrate services into any calendar application, e.g. Microsoft Outlook, Apple iCal, Mozilla Thunderbird, Google Calendar, Blackberry Calendar, Lotus Notes, the iPhone Calendar and many more, provided that the provider of the service to be integrated makes a service integration module available to the user, the service integration module being interoperable with the respective calendar application.","The integration of services into an calendar application according to the invention requires the installation of a service integration module on the client machine on which the calendar application is installed. Alternatively, the service integration module is installed on a machine hosting the groupware server of the calendar application. A groupware server, e.g. Microsoft Exchange Server, Lotus Domino or groupware servers based e.g. on the CalDAV internet standard (Calendaring Extensions to WebDAV) are software programs for scheduling information on a remote server. Said groupware servers like MS Exchange server manage electronic mail, calendaring, contacts and tasks of one or multiple calendar applications functioning as groupware-clients. For example, Microsoft Outlook is the groupware client of Microsoft Exchange server and the Lotus Notes calendar application is a groupware client of Lotus Domino. The groupware server manages the events and corresponding data of one or multiple electronic calendars each corresponding to a calendar application acting as groupware-client.","The term \u2018service integration module\u2019 denotes a software program being installed on the same client device as the calendar application, being interoperable with the calendar application and having read and write access to the calendar application. According to other embodiments, the service integration module is a software program installed on a computer or server running a groupware server of the calendar application. According to said embodiments, the service integration module is interoperable with the groupware server and has read and write access to said server.","The service integration module can be implemented as \u2018plug-in\u2019 or \u2018add-in\u2019 for the calendar application or the groupware server of the calendar application. It can also be implemented as an independent service program being registered as event listener with a calendar event of a calendar application or the groupware server of the calendar application. It can also be implemented as an independent service program updating the electronic calendar on a regular basis. As said service integration module has to be interoperable with the calendar application or the respective groupware server, the implementation details of the service integration module depend on the type and version of the calendar application, e.g. on a particular version of Microsoft Outlook or Lotus Notes or the corresponding groupware servers.","The invention according to one embodiment comprises the step of sending service requests (SR) to one or multiple services via a first web service interface provided by each service. The service request is submitted by the service integration module. Depending on the embodiment of the invention, the service requests can be submitted automatically, semi-automatically or according to the specifications of a user entered manually into a GUI of the service integration module. The term \u2018web service\u2019 in the following does not refer to a web service in the strict meaning of the word (a software system for machine-to-machine communication based on SOAP, the XML based interface of the service being described by an WSDL file). Accordingly, the term \u2018web service interface\u2019 does not necessarily refer to an XML based interface described by an WSDL file and supporting the data exchange via web services in the strict meaning of the word. Rather, the term \u2018web service\u2019 in the following denotes any kind of communication technology for exchanging data between two processing devices. The term \u2018web service\u2019 as used in the following therefore includes web services in the strict sense, e.g. RESTful web services, but includes also the exchange of data via SMSs, Http requests, remote procedure calls (RPC), CORBA, DCOM, RMI or any other communication technology. The term web service also includes data exchange via RDS, satellite link, e-mails or SMS interface or via instant messaging based e.g. on XMPP\/Jabber. Web services in the strict sense, conforming to the specification of the world wide web consortium (W3C) will in the following be referred to as \u2018W3C web services\u2019 and their corresponding XML based interfaces will be referred to as \u2018W3C web service interface\u2019. The W3C web service may according to some embodiments of the invention be registered in an UDDI registry.","The service, after receiving the service request, processes the data submitted in the service request and executes one or multiple service routines. Depending on the implementation of the service, second order services may be called and data may be read from or be written to various storage facilities, e.g. databases. According to one embodiment of the invention, the service returns the generated result immediately after having finished the processing of the service request. The result is returned via an interface that is accessible by the service integration module. The interface used by the service integration module to submit the service request to the service to be integrated in the calendar application is referred to as \u2018first web service interface\u2019 and may be the same or a different interface as the interface used by the service to return the generated result. In case the service does not use the first interface to return the result, said interface used for returning the result to the service integration module is referred to as \u2018second web service interface\u2019. After receiving the result generated by the called service, the service integration module extracts data from the result which is required to specify an event in the electronic calendar of the calendar program. This data usually includes a time information, e.g. the starting time or ending time of an event, and may in addition comprise a location of the event or further event associated information. The data is used by the service integration module according to one embodiment of the invention to create a new event or modify an existing event according to the data contained in the received result. Finally, the event is written into the electronic calendar of the calendar application.","The result generated by the service after receiving the service request may be returned immediately or after a period of time, e.g. after some minutes, hours or even days depending on the type of the service. Depending on the service, a result may be returned only in case a particular result could be obtained. It is also possible that the receipt of a service request is necessary, but not sufficient for the service to generate a result: only in case of additional incidents, e.g. congruent requests submitted by other persons, a positive result may be generated by the service and returned to the client.","According to a typical use case scenario of one embodiment of the invention, a supplier of a service provides a service integration module for download on the company's homepage, e.g. in the form of a plug-in for a particular calendar application like Microsoft Outlook and a particular operating system, e.g. Microsoft Windows XP. After installing the plug-in on the client machine, the plug-in in operation is capable to submit service requests to the service the plug-in was created to communicate with. The plug-in may be provided by e.g. by a company running a commercial service in order to facilitate the submission of service requests to the service and to facilitate the management of the result returned by the service. As the result is integrated in the electronic calendar of a calendar application, the service result can be managed by the user very easily. The plug-in may therefore help to boost the usage of the service. The increased number of service requests may, depending on the service, be connected with an increased economic profit of the service provider.","For example, a railway company could provide a plug-in for Microsoft Outlook for download on its homepage, the plug-in providing the possibility to call a remote ticketing service hosted on a server of the railway company via a W3C web service interface. The W3C web service interface provides access to the ticketing service. A user specifies via a GUI provided by the plug-in a train ride he plans to take. The service integration module creates a service request based on the specifications of the user. The service request comprises the request to order a train ticket according to specifications of the user. The service request is submitted by the user via the service integration plug-in to the W3C web service interface of the ticketing service of the railway company. The manual specification of a service request via the GUI of the service integration module (manual submission of a service request) is not the only way to submit a service request. Alternatively, the service integration module may have automatically submitted a service request in case some condition checking program routines of the service integration module detected a necessity to submit the service request. For example, if the user takes the same train connection every Friday evening, he could specify a recurring service request in the service integration module.","Alternatively, the service integration module could autonomously submit a service request if some conditions are met by existing events in the calendar application or by any other data objects evaluated by the service integration module. The service integration module may, depending on the embodiment of the invention, submit the detected required service request fully automatically to the service. In case the service integration module detects the necessity for a service request but postpones the submission of the service request until the user has approved to their submission, this approach of calling a service is called \u2018semi-automatic\u2019.","After having received the service request, the ticketing service hosted on the server of the railway company is executed. The service returns a result in a synchronous way as XML file via the same interface used for submitting the service request. According to said use case scenario, the result returned via the first web service interface is a W3C web service response. According to other embodiments, the service request and the retrieved result are asynchronous. For example, in case a service takes several hours or days for execution, an asynchronous receipt of the result by the client is preferable, e.g. via asynchronous web services or by returning the result as SMS. The result may comprise a list of five best matching train connections according to the specifications of the planned trip in the service request. In the next step, the plug-in may take the data from the best matching connection, e.g. departure and arrival time to specify a \u2018possible train trip event\u2019 and write that event into the electronic calendar of the calendar application. Alternatively or in addition to creating a new event, the software integration module having read and write access to an electronic calendar may also modify and update one or multiple existing events in the electronic calendar.","According to a further embodiment of the invention, the result generated by the service is returned to the client machine via a different interface than that used for submitting the service request. For example, the ticketing service of the railway company may have been called by a service request submitted to the first web service interface, in this case, a W3C web service interface, while the result generated by the service may be sent via SMS to the service integration module on the client device. The service integration module according to this embodiment must in operation be able to receive and process SMS messages. The interface used for communication (submitting service requests to the service, receiving the result generated by the service) may depend on various factors. In case a service provides multiple different interfaces, an important aspect determining which interface should be used for data exchange is the availability of a particular data exchange infrastructure, e.g. the availability of the Internet. User-specific preferences contained e.g. in user profiles of users having registered for the service may also be considered. In the following, the interface used by the service to return the result will be referred to as \u2018second web service interface\u2019. Here again, the term \u2018web service\u2019 does not necessarily refer to web services in the strict meaning of the word. Rather, any kind of data exchange technology between two processing devices is referred to. The same applies to the meaning of the term \u2018web service interface\u2019.","According to a further embodiment of the invention, the second interface is an e-mail interface and the result is returned to the calendar application in the form of a meeting request e-mail sent to the user of the calendar application, the user having submitted the service request. A peculiarity of said embodiment is the fact that the service integration module is, according to this scenario, is no longer required for receiving the generated result. Its main function is the submission of service requests. As the calendar application can receive the meeting request e-mail used for updating the calendar automatically, it is according to this application scenario not necessary that the service integration module receives and processes the result.","According to a further embodiment of the invention, the service integration module creates multiple events in the electronic calendar of the calendar application after the receipt of the service result or modifies existing events. e.g. by supplementing the event's data with data derived from the result. According to the example described in the preceding paragraph, five new events representing the five best matching potential train trips could have been created in the electronic calendar by the service integration module.","According to a further embodiment of the invention, the service integration module and the remote service exchange data multiple times before one or multiple events are created in the electronic calendar. For example, the first service request of the service integration module sent to the ticketing service of the railway company may have resulted in the creation of a ranked list of 10 potential train trips varying regarding the ticket price, the train type, departure and arrival time or the kind of seats still available for reservation. The service integration module, in this case a plug-in, provides the user with means to specify user preferences regarding said trip features in order to enable the plug-in to automatically determine the best matching train connection. Based on the user defined settings, the plug-in determines the best matching connection. It does not create a corresponding event in the calendar at that point, but rather submits a second request to the W3C web service interface of the railway company's ticketing service to automatically buy a ticket for the best matching train connection. The service processes the second request, books a ticket, may in addition reserve a seat, and return the details of the bought ticket via the W3C web service interface to the plug-in. The connection details may comprise for example the train number, departure time, the ticket price and platform. The plug-in reads the result of the second service request, extracts data required to specify an event and writes an event with corresponding starting and ending time and additional information into the electronic calendar.","According to a further embodiment of the invention, the service integration module comprises a graphical user interface (GUI). The GUI provides the user with additional means to efficiently specify service requests to services which shall be integrated in a calendar application. For example, various graphical elements such as drop down menus, text boxes or check boxes may be used in order to facilitate the process of entering data to the service integration module.","According to a further embodiment of said invention, the GUI may in addition be used to display one or multiple intermediate results. The intermediate results, e.g. the five best matching potential train trips of the preceding example, could be displayed to the user for selection. The specifications of the selected train connection would be according to this scenario be sent to the service in a second service request. The second service request could, for example, comprise the request to buy a train ticket for the selected connection. A second result would be generated by the service, comprising for example a confirmation of the successful ordering of the ticket and additional information, e.g. on the train number and the reserved seat.","According to a further preferred embodiment of the invention, the services are hosted on servers being accessible e.g. via a network connection, e.g. the Internet or an Intranet of a company, a LAN or a WAN. The term network connection in the following also includes the availability of electronic means for exchanging data between a processing devices, e.g. between a client device and a server, e.g. via satellite based communication using SMS or instant messages.","The seamless integration of services into calendar applications according to preferred embodiments of the present invention reduces the number of tasks a user has to execute manually in order to organize a trip or an appointment. The term trip and travel will in the following be used synonymously. Embodiments of the present invention render many manual update steps unnecessary as the results returned by the called services are used to update the calendar application automatically or semi-automatically, thereby also reducing possible sources of error.","According to a further embodiment, the specification of locations within a service request (SR) by a user is facilitated by a process of replacing tags by unequivocal addresses. Unequivocal address information is required by many services in the context of appointment and trip management, e.g. for calculating the distance between two locations and for estimating the required travel time. The entry of those unequivocal addresses is, however, time consuming, as most people memorize only a very limited number of complete addresses including street, house number and postal code. Usually, people use the names of persons, buildings or activities when referring to particular places, e.g. \u2018Mike\u2019, \u2018Mr. Peters\u2019, \u2018the Pentagon\u2019, \u2018Home\u2019 or \u2018Work\u2019.","According to said embodiment of the invention, the user is allowed to enter ambiguous names, for example \u2018Mike\u2019 or \u2018Home\u2019, in order to refer to an unequivocal address including street, house number and postal code. The ambiguous tags are mapped to unique addresses, the addresses being used in further processing steps. In contrast to complete address blocks, those tags can be entered by the user very quickly and conveniently. It is possible, for example, to specify a route by entering \u2018from Mike to Tom\u2019 or \u2018from Home to Work\u2019. In order to calculate the route to get from one person to the other, e.g. by a route planning service, those tags have to be mapped to the complete address of each person. As the name \u2018Mike\u2019 may, depending on the user, denominate different persons located in different places, a personalized, user-specific mapping and tag replacement has to take place. In order to calculate a route based on location tags contained in a service request, a personalized mapping schema specifying to which address the name \u2018Mike\u2019 has to be mapped is required. The personalized mapping information may be provided as additional information within the service request or may be a part of a user profile available to the service.","According to a further embodiment of the invention, the mapping also comprises the mapping of general terms and names to unequivocal addresses, e.g. \u2018Pentagon\u2019 or \u2018White House\u2019 and the mapping of group specific tags. The general and personalized tags of a user profile according to said embodiment of the invention can be supplemented by tags being specific for a particular social group the user belongs to. The user being registered for a service may be member of a particular social group, e.g. a social network such as Xing or MySpace, may belong to the personnel of a company or a particular department of a company. In case the department of the company the user is working at organizes a Christmas staff party at a particular restaurant, the tag \u2018Christmasparty\u2019 may be mapped to the unequivocal address of the restaurant for all user profiles being member of said social group. The process of mapping comprises a text analysis step in which token boundaries are determined, in which some of the tokens are recognized by the service as tags representing unequivocal addresses and wherein regular expressions may be applied in order to identify location tags.","According to a further embodiment of the invention, the mapping of location tags to unequivocal addresses also comprises the mapping of tags to routes. According to this use case scenario, the service request may comprise one single tag representing a route rather than two location tags representing the starting point and destination. For example, the tag \u2018Highway\u2019 could represent the route from \u2018Work\u2019 to \u2018Home\u2019 via the highway, while the tag \u2018Countryroad\u2019 refers to an alternative route from \u2018Work\u2019 to \u2018Home\u2019. The required mapping information is derived, according to one embodiment of the invention, from a list of \u2018favorite routes\u2019 being contained in a user's profile. Alternatively, the mapping information could be specified within a text field of the service request.","The process of tag resolution may be executed on the client side hosting the calendar application or the groupware server of an calendar application, if the service integration module is operable to exercise the text analysis and personalized tag mapping. According to a further embodiment of the invention, the address book of the calendar application being locally available to the service integration module can be used for the task of personalized tag mapping: in order to map the tag \u2018Mike\u2019 to an unequivocal address, the contact list of the calendar is searched for an entry comprising \u2018Mike\u2019 in one of the name fields. In case there exists only one \u2018Mike\u2019 entry in the contact list, the address block of this entry can automatically be used for the mapping process. In case multiple entries comprising \u2018Mike\u2019 in their name fields exist, the user is asked, e.g. via a dialog window of the service integration component, which of the found addresses should be mapped to the \u2018Mike\u2019 tag. According to a further embodiment of the invention, the decision of the user is memorized by the service integration module in a \u2018mapping history\u2019. In this case, the user is required to execute the selection step only once when the \u2018Mike\u2019 tag is used the first time. In all subsequent tag mapping processes, the mapping history is used to resolve a tag automatically.","The tag mapping according to a further embodiment of the invention may also be exercised on a server hosting a mapping service. In this case, the server must be able to analyze the text of the received service request, and must have access to the personalized mapping information required for tag replacement. According to a preferred embodiment, the tag replacement and corresponding text processing steps are adapted for the English language, but other languages can be supported by other embodiments of the invention as well.","According to a further embodiment of the invention, here referred to as \u2018explicit event specification\u2019, the user has to explicitly and manually determine and specify service requests e.g. via a GUI provided by the service integration module given the context of existing events in the calendar application. The user may, for example, specify a service request for a trip sharing service via the GUI of a trip sharing service integration component provided by the trip sharing service provider. The user has to specify the planned trip, wherein the specification comprises determining the earliest acceptable departure time, the latest acceptable arrival time, the place of departure and the destination or, alternatively, the route of the planned shared trip. The service request may comprise additional data being interpretable by the called trip sharing service. Further embodiments of the invention correspond to service integration modules in operation being able to integrate multiple different services. For example, a service integration module could integrate services for booking tickets for trains or concerts, for ordering tables in restaurants, for booking conference rooms and for ordering overhead projectors and other presentation devices for a particular conference room.","According to a further embodiment of the invention, here referred to as \u2018implicit required event prediction\u2019, the determination of required events, e.g. required trip events to get from one meeting to another, is based on knowledge which is implicitly contained in the calendar application. A trip event is an entry in an electronic calendar representing a trip. Other than the explicit specification of service request described beforehand, this approach does not require the user to explicitly specify service requests in order to call a service assisting in organizing a corresponding event of the \u2018real world\u2019 resulting in the creation of a data object (an event in the electronic calendar) representing this event in the real world. Depending on the embodiment of the invention, the implicit required event prediction may be implemented as an additional remote service or as an integral part of the service integration module located on the client side.","A further embodiment of the invention comprises an implicit required event prediction on the client side. The service integration module in operation analyzes a first event within the calendar application given the context of other events in the electronic calendar being in temporal proximity to the first event. According to a further embodiment of the invention, the implicitly predicted event is a trip, the trip being required to get from one event scheduled in the electronic calendar to the other. After having predicted a required event, e.g. a required trip event, to get from one meeting to the next, the service integration module executing said implicit required event prediction method automatically calls an appropriate service via a service request in order to organize the event or execute any other task related to this event. This scenario is especially advantageous if the quality of the prediction is high enough for the user to completely rely on the output of the prediction. According to further embodiments of the invention, the service integration module is capable of estimating the accuracy of the prediction of the required event based on the number of positive confirmations of predictions of required events of a particular type in the past.","Depending on the embodiment of the invention, the prediction of required trip events may be executed after the user has entered a new event or on a regular basis. The prediction may be executed for a newly entered event in the context of other events lying in temporal proximity to this event, it may be executed for all events within a calendar or for any other sub-set of events defined according to other criteria.","According to a further embodiment of the invention, the required events predicted according to the implicit required event prediction method are displayed to the user by the service integration module. The sending of service requests according to this embodiment is delayed until the user has approved to the predicted required events. The question, if a an approval by the user is required before services associated with the predicted required events are called may also depend on user defined settings.","According to a further embodiment of the invention, the service integration module is operable to exchange data with remote services e.g. via web services, CORBA, remote procedure calls or the like to receive user profile data from the remote service required for predicting required evens locally. If the user has specified in his user profile a time margin to be added to each predicted trip in order to be sure not to arrive late at a meeting, this time margin information could be received by the plug-in via accessing user profile data stored remotely by the host of the service.","Further embodiments of the invention comprise the integration of services for recurring events.","According to a further embodiment of the invention, the implicit required event prediction is executed on the server side. According to this application scenario, the specifications of all events being of relevance for the prediction of the required event have to be contained in the service request sent to the service. The number and type of the events being of relevance depends on the type of the service used for predicting required events. For example, a service for predicting long distance travels could require the received service request to comprise time and location information of a new event and additional events being scheduled at maximum two weeks before or after the new event. If the service is a service for ordering a taxi for short trips, this service may require the service request to comprise only a new event and additional events starting a few hours before or after the new event and being in addition located in the same town. The criteria used to select a subset of relevant events from the calendar application being submitted to a service for implicitly predicting required events on the server side therefore strongly depends on the called service. The service analyses the received service request and uses the event information contained therein to predict additional required events. In case one or multiple required events could be predicted by the service, a result is returned either via the first or via a second interface to the client. In case the result is received and processed by the service integration module, said module extracts the predicted required events from the result and creates new events or updates existing events in the electronic calendar accordingly. In case the result is returned directly to the calendar application via a meeting request e-mail, a further action of the service integration module is not required.","According to a further embodiment of the invention, the implicit required event prediction is also executed on the server side. However, the specifications of all events being of relevance for the prediction of the required event are not sent within one service request to the service. Rather, each event created in the calendar application is sent as one new service request to the server, resulting in a duplication of the electronic calendar on the server side. The service integration module according to this scenario is implemented as an event listener listening to the creation or modification of electronic events in the electronic calendar. On each creation of a new event or modification of an existing event, the event specifications are retrieved and sent by the service integration module in the form of a service request to the remote implicit required event prediction service. The implicit required event prediction service hosted on a remote server may execute the event prediction routines on a regular basis or upon receipt of each new service request. If, according to this scenario, the server predicts a new required event, the specifications of that event (time, location, additional data) are sent to the client machine via the first web service interface used by the service integration module for submitting the service request or via a different interface accessible and interpretable by the service integration module.","A service that can be integrated into a calendar application according to the present invention has to be accessible via a first web service interface, the first web service interface in operation receiving service requests submitted by a service integration module installed on a client or on a machine having installed a groupware server corresponding to the calendar application installed on the client. The service must be operable to interpret and process the service request and must be operable to return the generated result via the first or a different web service interface. The service in operation may call second or third order services via any available communication technology, e.g. web services, CORBA, remote procedure calls or the like. In case the second web service interface is an e-mail interface, the service integration module is not required to receive and process the result and to update the electronic calendar.","In case the user has created a user profile for a service, the processing of a service request by the service may also comprise the step of associating a service request to an existing user profile, e.g. based on a matching of the e-mail address of the service request and the e-mail address of the user-profile. Information contained within this user-profile may be used by the service during the processing of the service request.","According to a further embodiment of the present invention, the called service is a trip sharing service which can be called and be seamlessly integrated to a current calendar application via a service integration module. This trip sharing service provides the user with the possibility to automate and facilitate the organization of shared trips. For example, the entry of a new meeting in the electronic calendar of the calendar application may automatically result in a request to the trip sharing service to search for appropriate trip accompanies. The service processes the service request and returns the result via the first or via a second web service interface.","Said seamless integration of the trip sharing service into current calendar applications is only one example for the integration of a service to a calendar application via the submission of service requests to the web service interface of remote services. It shall be explicitly stated here that, based on the presented approach, any kind of service may be integrated to a calendar application.","In the following like elements are designated by identical reference numerals throughout the various embodiments.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 1","i":"a ","b":["156","152","152","150","167","150","152","153","158","155","156","154","156","152","156"]},"In the first step , the service integration module submits a service request to a first web service interface  provided by the remote service . The web service interface is an interface adapted to a particular kind of data exchange format between two processing devices, including web services in the broad and in the strict sense as defined beforehand. The service request submitted in step  may be specified explicitly and manually by the user, e.g. via a GUI provided by the service integration module , according to some embodiments of the invention. According to other embodiments, the service request is submitted fully automatically or semi-automatically by the service integration module  if the module is operable to implicitly predict required events and service requests.","Depending on the implementation and settings of the service integration module, predicted required events and corresponding service requests may be submitted fully automatically or may be submitted after the user has approved to the submission of the service request (semi-automatic service request submission). The service  receives the service request in step , executes the service in step  and generates a result in step . The execution of the service is decoupled (asynchronous) from the submission of the service request. Step  may be executed immediately after receiving the service request or after a predefined period of time.","The service may also be executed repeatedly on a regular basis until a certain condition is fulfilled. The execution of the service may also be triggered by any other event, e.g. the submission of a congruent service request by another user. Which kind of trigger is used by the service for its execution depends on the service. The execution of the service in step  may involve the calling of one or more second order services (not shown) or the reading and\/or writing of data from or to various storage media, e.g. a database. In step , the result is returned to the service integration module  installed on the client machine .","The result is returned via the first web service interface  as depicted in .","According to several embodiments of the invention, the first web service interface is a W3C web service interface based on XML and SOAP, because this communication technology is particularly advantageous for machine-to-machine communication as depicted in , and . The service integration module calls a service via the first web service interface and may in addition retrieve the result via the same  or a different web service interface . Provided no human user is required to read the exchanged data, XML is particularly advantageous for data interchange between distributed software components because it can be parsed and processed easily, it can be used to represent data objects commonly defined by software applications written in an object oriented programming language and is supported by multiple freely available software libraries. Therefore, the interface used for data exchange, in particular for submitting service requests to the service, is in many embodiments a W3C web service interface. However, it shall be explicitly stated here that the present invention is not restricted to W3C web services.","Depending on the service and on the question if the availability of an Internet connection can be expected in situations in which a service is typically called, other data exchange technologies and interfaces may be used. For example, if the client device  is an old mobile phone lacking a network card and the integrated service is a taxi ordering service, the usage of a W3C web service interface may be inappropriate. Rather, the submission of the service request to the server via a SMS interface provided by the service would currently appear as more appropriate. The service integration module submitting the service request in step  and for receiving the result in step  according to the embodiment depicted in figure is uses the same web service interface , here referred to as first web service interface.","After the service integration module has received in step  the result generated by the service , the service integration module processes the result and creates an event  in the electronic calendar  in step . Alternatively, the service integration plug-in modifies an existing event in the calendar application. The existing event may be deleted or modified, e.g. by supplementing the event with additional data or by changing the staring or ending time or location of the event. Step  requires the service integration module to be interoperable with a particular calendar application, e.g. Microsoft Outlook or Lotus Notes, and to have read and write access to the electronic calendar .","According to a further embodiment, the service integration module  creates or modifies multiple events in the electronic calendar  after receiving and processing the result generated by the service. The result according to said embodiment comprises data for multiple events, which is parsed and used to specify and write multiple events by the service integration module. The parsed data typically comprises the starting and ending time of an event, a subject and a location. The data may comprise additional data or lack e.g. the location information, depending on the called service.","To simplify matters, the embodiments of the present invention according to which the service integration module is installed on the machine hosting the groupware server of the calendar application is not depicted. The exchange of data between said machine and the servers hosting the requested services is in principle the same as explained for the communication between the service integration module installed on the client hosting the calendar application. The service integration module installed on the groupware server machine has read and write access to the data managed by the group ware server. The managed data corresponds to electronic calendars of one or multiple groupware-clients. Based on said calendars, the service integration module may predict required events and services, submit service requests and update the electronic calendar(s) after receiving and processing the result from the service. In case service requests are submitted via the service integration module installed on the host machine of the groupware server, the results of the called service can be received by the said service integration module via a first or via a second web service interface. The service integration module processes the results and deletes, creates and modifies events in one or multiple electronic calendars of the clients by manipulating data of the groupware server. Alternatively, the service may return the results via an e-mail to an e-mail address of a user of the calendar application.","The submission of the service request to the first web service interface  and the receipt of the result by the service via the first web service interface  can be synchronous or asynchronous.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 1","FIG. 1","FIGS. 1","FIG. 2"],"i":["b ","b ","a ","b "],"b":["168","168","1","240"]},"According to embodiments of the invention depicted in , two different web service interfaces for receiving a service request and for returning the result are used by the service, depending on the service integration component, the service and the communication technology which can be assumed to be available to the client in situations in which the service is usually called.","The submission of the service request to the first web service interface  and the receipt of the result by the service via the second interface  can be synchronous or asynchronous.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 2","FIG. 1","FIG. 2","FIG. 1","FIG. 1","FIG. 2"],"b":["156","157","240","241","152","159","2","156","157","153","152","242","243","241","166"]},"According to a further embodiment of the invention depicted in  or , the service integration module comprises a graphical user interface (GUI) facilitating the entry and specification of a service request. For example, a plug-in integrating a ticketing service of a railway company into the calendar application Microsoft Outlook could provide the user with means to specify service request interpretable by the service. The user is provided with means to specify default settings for ordering train tickets by the service integration module. The settings comprise e.g. the user's preference regarding the reserved seat (saloon coach, compartment coach, first or second class) or regarding the type of the connection (regional train or express train). GUI elements specially adapted to facilitate the entry of data for ordering a train ticket could, for example, comprise a popup window resembling a small calendar for selecting dates and being displayed upon setting the mouse cursor on an input field regarding the starting time and date of the planned train trip.","According to a further embodiment, a service integration module integrating a remote trip sharing service provides the user with means to conveniently specify his trip sharing preferences, e.g. his driver\/passenger preferences. Said service integration module may display graphical elements like drop down lists and checkboxes facilitating the specification of service requests for a particular trip via a particular route.","In summary, the main purpose of the service integration module is to integrate a service to a calendar application by submitting one or multiple service requests to a remote service. In case the result generated by the service is not returned via a meeting request e-mail directly to the calendar application, but via the first  or a second interface accessible to the service integration module, the service integration module may in addition receive and process the result, specify one or multiple events and write the events into the electronic calendar of the calendar application. In addition, the service integration module may provide features such as an implicit required event prediction or the provision of a GUI facilitating the entry of a service request by the user.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 3","b":["322","152","157","153","152","150","157"]},"The service integration module  in operation analyzes in step  the events contained in the electronic calendar  in order to predict events or service request necessary or useful for organizing the events in the real world represented by the existing calendar event data objects. The begin of the analysis step  is triggered according to one embodiment of the invention by the entry of a new event by the user. Step  can also be initiated and executed on a regular bases in predefined time intervals according to a further embodiment. In step , all events within a calendar or only a subset of events may be evaluated. The subset of events to be evaluated can be determined e.g. by the temporal proximity of an event  to a newly entered event  or any other criteria depending on the implementation of the service integration module .","According to a further embodiment of the invention, all events of the electronic calendar being in temporal proximity to a newly entered event  are used by the service integration module  for the prediction of required trip events. If, for example, event  is a business meeting in the office of an employee at 9.00 a.m. already existing within the calendar application and the newly entered event  is a business meeting in another town at 4 p.m., then the service integration module  predicts in step  that a trip is required in order to get from the office to the meeting in the other town in time. The service integration module  may execute several additional computation tasks depending on the implementation of . For example, the service integration module  could comprise the functionality of mapping tags contained in the location or text body fields of events to unequivocal addresses. If the meeting locations have been entered in the electronic calendar in the form of ambiguous names, e.g. \u2018Mike\u2019 or \u2018Mr. Miller\u2019, these location tags are replaced by their respective unequivocal addresses. The mapping of route tags to routes is also supported. In addition, or alternatively, the unequivocal addresses of the first and the second meeting place may be used by service integration module  to predict the best route, predict the route with the shortest travel time and to suggest a time of departure corresponding to the specified route. The prediction of the best route may also depend on user specific settings if available to the service integration module . The ending time of the first event and the starting time of the following event may determine the earliest acceptable starting time and the latest acceptable arrival time for the planned trip. Those settings may comprise data on the driver\/passenger preferences of the user registered for the trip sharing service. In step , additional data which may be required by the trip sharing service for processing the service request is assigned to the predicted required event. In step , the service integration module  submits a service request to the first web service interface of a trip sharing service assisting in organizing the trip, the request comprising the start and ending time of the predicted required event. The request may comprise additional data provided by the service integration module .","According to one embodiment of the invention, the service integration module  in step  automatically initiates the submission of a service request to the first web service interface of the service.","Depending on the implementation of the service integration module and the prediction result, step  may also comprise the prediction of multiple required events of different types. For example, service integration module  could have predicted the required event of a trip to get from one appointment to the next appointment, and could have in addition predicted the requirement of ordering a business gift for a particular meeting participant in time resulting in the submission of one service request to a trip sharing service to organize the trip and the submission of a second service request to a vendor of business gifts.","According to a further embodiment of the invention, the predicted required events are presented to the user of the calendar application before submission, they are not used to automatically specify and submit service requests to the services. The user has the option to check if he really wants to submit the predicted required service request, e.g. to the trip sharing service. In case the user accepts the prediction of the service integration module  and marks a predicted required event accordingly, the corresponding service request(s) are submitted to one or multiple services. This embodiment of the invention is particular beneficial if the predicted required events and actions often vary depending on multiple additional factors and an automated service request may therefore be inappropriate. In case the user feels ill and does not know in advance if he will be able to join a meeting scheduled in the following week, the user in this case has the option to delay his approval to the submission of the service requests until he is sure to be able to join the meeting and to make use of the trip sharing service.","According to a further embodiment of the invention, the service integration module  is used to predict required trip events and to submit corresponding service requests to a trip sharing service. The service integration module  predicts required trip events to get from one appointment to the next. The service integration module analyzes all events  being in temporal proximity to a particular event , e.g. an event that has just been added to the calendar application. The analysis according to one embodiment of the invention is initiated by the entry of the new event , but according to other embodiments, the analysis could be triggered by other events or be executed on a regular basis.","According to a typical use case scenario, a supplier of a remote service provides the service integration module  in the form of a downloadable service integration module , e.g. a downloadable plug-in, developed for a particular calendar application. e.g. Microsoft Outlook. After installation on the client machine, the plug-in in operation is capable to analyze the calendar application, to predict required events and actions and to send corresponding service requests to the service. The service providing the downloadable plug-in may also provide means for entering user profile data or any other additional data to the plug-in, this data being used as additional information submitted in the service requests.","The service integration module  may have access to the user's profile data via accessing an online service related to the service integration module  or via the user entering his profile data to the service integration module  manually. This user profile data, if available, and context data of the analyzed events (e.g. time and location) is used in the analyzing step  to determine required trip events to get from the first meeting event to the next.","The existing event  in the calendar may be a telephone conference on Monday, 9 a.m., having associated the location tag \u2018Work\u2019. The second event may be a business meeting on 3 p.m. on the same day being assigned the location tag \u2018Dr. Millor Ltd.\u2019. The plug-in predicts a required trip event to get from the employee's home to his office, the trip having an arrival time several minutes before the telephone conference starts. The time security margin can be specified by the user in the user profile, e.g. 15 minutes. In this case, the service integration module  will predict a required trip event from home to the employee's office with an arrival time 8.45 a.m. (15 minutes earlier than 9 a.m.). The predicted departure time is the earliest departure time acceptable for the user while the arrival time is the latest arrival time acceptable for the user. The latest acceptable arrival time can be calculated by considering the starting time of a meeting in combination with a time margin specified e.g. in the user's profile data ensuring the user does not arrive late at a meeting. The predicted starting and arrival time therefore specify a time window within which the user is willing to travel. The service integration module may in addition predict further trip events required during the office day, e.g. in order to get from the office to the meeting scheduled at 3 p.m. in another town, or predict trip events required for spare time activities, e.g. to travel from the office to a movie theater. The prediction comprises the following steps:\n\n",{"@attributes":{"id":"p-0086","num":"0092"},"figref":["FIG. 4","FIG. 4"],"i":["a ","a"],"b":["450","473","473","447","472","459"]},"An event managing service  is installed on a remote server . The event managing service offers its customers via an interface, e.g. an Http interface, tickets for concerts and sports events. The Http interface  is an Html page hosted on the server  which is accessible via the world wide web by the customers of the event managing service. The Html page comprises an Html form which upon submission triggers the execution of the event managing service . The execution of the event managing service may result in the reservation or ordering of a concert ticket for a particular customer. The Http page is presented to the customer of the event managing service in the form of an Html based graphical user interface  by a browser installed on the client processing device . The client processing device, e.g. a notebook or desktop PC of the customer, is connected to the server  via a network, e.g. the Internet. In operation, the customer opens the Html page provided by the event managing service  via the browser installed on the customer's processing device . The customer selects the event he wants to take part in, in this case, a concert . The graphical user interface  provides the user with the option  o select \u2018travel via trip sharing service\u2019. The option can be provided for example in the form of a checkbox or radio button. After the user presses the Html button , a Http request is transmitted via the network to the Http interface of the event managing service . The event managing service processes the request according to its particular implementation.","In case the customer selected the option  to travel to the concert with the assistance of the trip sharing service, the event managing service  submits a service request  to the W3C web service interface of the trip sharing service  hosted on the trip sharing backend server . The service request  comprises at least the information of the starting time and location of the event booked by the customer. The starting time and location of the concert represent the destination and latest acceptable arrival time. The service request  may in addition comprise information on the place of departure, e.g. the home or office address of the customer, which could be specified by the user via additional GUI elements on the GUI . The architecture of the trip sharing service  is depicted and explained in greater detail in . The trip sharing service  processes the service request  and tries to find other persons traveling at the same or a similar time to the same event like the customer ordering the ticket for the concert . In case at least one person having similar travel plans and congruent driving preferences, e.g. driver\/passenger preferences, a result is returned to the customer ordering the concert ticket via a meeting request e-mail . The sending of the result is executed via a second server belonging to the trip sharing service, the trip sharing message server . The trip sharing message server comprises multiple interfaces and corresponding adapters, e.g. an e-mail interface  and an e-mail adapter , an SMS interface  and a corresponding SMS adapter . According to further embodiments of the invention, it is also possible that some interface\/adapter pairs are hosted on a third server, e.g. in order to raise the performance of the system.","Each adapter software module - is operable to receive a result generated by the trip sharing service . The result is processed and formatted according to the requirements of the communication protocol used to forward the result to the client. The formatted result is then forwarded from the adapter module to its corresponding interface. For example, the result received by the SMS adapter  would be processed and formatted according to the requirements of an exchange of data based on SMS technology. The data would then be forwarded to the corresponding SMS interface , the interface  submitting an SMS to the mobile phone number of the customer. The data exchange between the interfaces - and their corresponding adapter modules is illustrated with double arrows. The result generated by the trip sharing service  can be returned  via many different communication technologies (SMS, W3C web services, e-mail), because the result can be is transformed with the help of an appropriate adapter software module according to the data exchange format used to forward the result to the user\/the client machine . While the adapter components comprise program routines for data exchange with the trip sharing service  hosted on the trip sharing backend server , the interfaces - and the W3C web service interface  can be used for the data exchange with a client machine .","According to the embodiment depicted in , the service request  may comprise an additional information that the result generated by the trip sharing service is to be returned to the customer via a meeting request e-mail. This information could also be contained in the user profile data of the customer available to the trip sharing service . In case the trip sharing service  was able to detect an appropriate trip accompany, the result  is returned to the e-mail adapter  hosted on the trip sharing message server . The data contained in the result  is extracted and used by the e-mail adapter  to specify a meeting request e-mail. The e-mail is returned via the e-mail interface  to the e-mail address  of the customer. The information on the customer's e-mail address  may, for example, be submitted as part of the service request .","Depending on the customer's preferences and on the type of the client device , the trip sharing service result could alternatively have been delivered to the customer via SMS or a W3C web service interface, the result being formatted according to the selected interface by the corresponding adapter.","According to a further embodiment of the invention, the user can specify, e.g. in his user profile, that the result generated by the called service shall be returned via different second interfaces depending on the time span that is left between the generation of the result (a trip event associated with at least one matching user profile) and the begin of the trip event. For example, the user can specify to receive the result via an e-mail interface one day before the trip starts. In addition, or alternatively, the user can specify that the server should return the result per SMS one hour before the trip starts.","According to a further embodiment of the invention, the trip sharing service  comprises a registry. The registry is a data structure mapping a particular service request of a client to a particular adapter module -. The registry in addition comprises information required to send the result to the client according to the preferred interface, e.g. a mobile phone number for the SMS adapter or an e-mail address for the e-mail adapter. Upon receipt of a service request by the service , the service is mapped to a particular adapter module by specifying a new entry in the registry connecting the request with a preferred adapter module. After the service  has finished processing the service request, the generated result is returned via push technology to the adapter module mapped to the service request. The adapter module hosted on the trip sharing message server receives the result, generates a message according to the communication technology supported by the adapter module and forwards the result to its corresponding interface. The interface returns the result to the client, e.g. via an SMS or an e-mail.",{"@attributes":{"id":"p-0094","num":"0100"},"figref":"FIG. 4","i":"b ","b":["450","471","420","428","472","420","428","430"]},"A service request  is sent to the trip sharing service  via the service's W3C web service interface . The service request may be received directly from a client machine , a server  hosting a different service or from the trip service messaging server receiving a service request from a client e.g. via its e-mail interface or SMS interface (not shown). The service request comprises departure and arrival time of the trip, starting point and destination and may also comprise additional parameters, e.g. tag mapping information. The service request  may, for example, be specified by the user of the calendar application  manually via a service specific plug-in providing a GUI or may have been submitted (semi-) automatically upon prediction of a required trip event by a service integration module  (not shown) or via a remote required event prediction service (not shown). The service request  comprises the starting time and location of an event, e.g. the concert booked by the customer. The service request also contains the e-mail address of the customer . The location may be encoded as complete and unequivocal address or as user specific tag which can be mapped to an unequivocal address by the service . The service request in addition contains information on the location from which the customer plans to start his trip to the concert.","All relevant information is extracted from the service request . At first, a profile service is invoked for assigning a user profile to the service request. The profile service has access to the database  comprising, among other data, also user profiles. A user profile  may comprise multiple attributes, e.g. the real name of the user , his date of birth , his e-mail address , and may also comprise mapping information  and additional parameters  specifying e.g. driver\/passenger preferences of the user.","The profile service  searches for the user profile stored in the database . The search concentrates on the e-mail address attribute  of the user profile in order to map a user profile to the service request based on identity of the e-mail address of the user profile  and the customer's e-mail address  specified in the service request. The data contained in a service request sent to the trip sharing service and the data contained in each user profile according to one embodiment of the invention is illustrated in detail in . If an appropriate user profile  was found by the profile service, mapping information  contained in this user profile is retrieved and used during the execution of the mapping service . The mapping service maps ambiguous tags ,  within the service request to unequivocal addresses ,  (). There exist generally available tags, e.g. \u2018Home\u2019 or \u2018Work\u2019, but also user-specific tags, e.g. \u2018Mike\u2019 or \u2018Supermarket\u2019. These tags are automatically replaced by user specific, complete addresses as specified in the mapping schema  of the user profile. The two addresses  and  define the starting point and destination of the trip. In addition, external services such as Google Maps may be used to derive the of those addresses or to derive street maps depicting the route of the shared trip.","According to a further embodiment of the invention, the service request  may comprise additional mapping information  overwriting the tag mapping schema  of the user profile. For example, the tag \u2018Work\u2019 may be mapped according to the specification in a user's profile to a particular address. Three days in a year the employee works in a different dependence of his company. Instead of changing the mapping information of his user profile, the employee during those three days may simply add additional mapping information to his service requests sent to the trip sharing service, the additional information mapping \u2018Work\u2019 to a different address. The additional mapping information could, for example, be submitted via the GUI of a service integration module for the trip sharing service installed on the client machine. After retrieving the unequivocal addresses for the location tags, a route is calculated to get by car from the starting point to the destination. According to a further embodiment of the invention, the route calculation may be executed by a third party service, e.g. Google maps. The route can be used by the service to calculate the time the trip via the predicted route will probably take.","After the execution  of the mapping service , a matching service  is executed. Based on the calculated route and additional parameters contained in the user's profile or the service request , the mapping service of the trip sharing service searches for users having associated preferences being congruent with the preferences specified in the service request  and the sender's user profile  and who plan to travel the same route or a part of the same route within the time window defined by the starting time (the earliest acceptable starting time for the user) and the arrival time (the latest acceptable arrival time for the user) as specified in service request . In addition, the matching service checks if the profile of the user submitting the service request  and the profile of a potential trip accompany match regarding their trip specifications and preferences , e.g. regarding their driver\/passenger preferences. In case one or multiple matching user profiles are detected in the database , the best matching profiles are assigned automatically to the trip. The result comprising the best matching user profiles is sent according to the depicted use case scenario via a second order service request  to the e-mail adapter component hosted on the trip sharing message server . The Email adapter  creates a meeting request e-mail with the e-mail address of the customer in the recipients field. The MR e-mail is sent to the customers e-mail address  by the E-mail interface , resulting in an update of the electronic calendar of the customer. The updated calendar comprises a new trip event characterized by a starting and arrival time, the location of the concert and user profile data of one or multiple matching trip accompanies.","According to a further embodiment of the invention, the user profile database of the trip sharing service is operable to be populated via an automated import of user profiles of various social networks, e.g. Facebook, via an import of lists of employee profiles of a company, via an import of LDAP directories or an import of user profiles stored according to any other data format. The import is executed by software modules being operable to read the user profiles from a source data repository and to store them to the user profile database  of the trip sharing service. This feature is advantageous, as the user specific settings used in the matching procedure of the trip sharing service may comprise the option for a preferential matching of users being member of the same social network or company. If a company uses the trip sharing service to reduce expenses, preferentially employees from the same company will be matched by the matching service . Only in case there are car seats left which cannot be assigned to employees of the same company, persons outside the company may be accepted by the matching service in this scenario.",{"@attributes":{"id":"p-0101","num":"0107"},"figref":"FIG. 5","b":["541","561","526","541","551","455","552","553","554","541","561","556","557","558","559","560"]},"In operation, the trip sharing service allocates a user profile  and the data contained therein to a service request , e.g. via the user's e-mail address  being specified in the service request as well as in the user profile. The mapping of a user profile to a service request enables the mapping of user specific ambiguous location tags such as \u2018Home\u2019  or \u2018Mike\u2019  to unequivocal addresses  and  according to the tag mapping information  of the user profile.",{"@attributes":{"id":"p-0103","num":"0109"},"figref":"FIG. 6","b":["450","471"]},"Steps executed on the trip sharing backend server :\n\n","Steps Executed on the Trip Sharing Message Server :\n\n",{"@attributes":{"id":"p-0106","num":"0124"},"figref":"FIG. 7","b":["450","704","703","705","706","707","702","707","472","471","472"]},"According to a further embodiment of the invention, the service request may be sent at first to an interface hosted on the trip sharing message server  or the trip sharing web server . The trip sharing web server  hosting an Http interface  and an Http adapter  fulfils an equivalent function like the trip sharing message server  hosting adapters and interfaces supporting the data exchange between the backend server and the client via other communication technologies, e.g. SMS or e-mail. Not every client device - may be able to communicate via all communication interfaces -,  provided by the trip sharing service.","Any service, for example the trip sharing service hosted on server , can be integrated into a calendar application running on any of the user devices - by installing a service integration module  on any of those devices, the module  being operable to submit a service request to at least one of the interfaces -,  for accessing the trip sharing service.","Some exemplary and in no way limiting use case scenarios are:\n\n","The features described with reference to particular embodiments can freely be combined depending on the requirements of a particular service to be integrated. The main purpose of the service integration module according to a preferred embodiment of the invention is to integrate a service into a calendar application. Additional benefits provided by the service integration module may comprise the automated detection of required service requests or the facilitation of the entry and specification of a service request via a GUI. Features such as the mapping of tags to unequivocal addresses are highly beneficial in the context of services helping to organize trips but may be unnecessary in case a different service is integrated. Other service integration modules designed to integrate other services may therefore comprise other or additional program routines assisting in the seamless integration of service they are designed to help integrating.","The event being specified in the electronic calendar upon the receipt of a meeting request e-mail by the calendar application or upon the receipt of the service result by the service integration plug-in can be a singular or a recurring event. This statement holds true for each described embodiment of the invention.","Although the invention herein has been described with reference to particular embodiments, it is to be understood that these embodiments are merely illustrative of the principles and applications of the present invention. It is therefore to be understood that numerous modifications may be made to the illustrative embodiments and that other arrangements may be devised without departing from the spirit and scope of the present invention as defined by the appended claims.",{"@attributes":{"id":"p-0113","num":"0135"},"figref":"FIG. 8","b":["800","151","151","152","157","800","801","151","804"]},"According to a further embodiment of the invention, the client device is a mobile processing device, for example a mobile phone, a smart phone, a blackberry, an iPhone, a notebook or netbook comprising a mobile phone adapter or any equivalent mobile device. Said mobile processing device, also referred to as \u2018mobile device\u2019, comprises means to exchange data with other mobile or immobile processing devices. The means for exchanging data may be available permanently or temporarily. In operation, they provide access to the Internet or provide access to other data transfer technologies and systems. For example, the means for exchanging data can provide the mobile device with the function to exchange data with other processing devices via SMS, via instant messaging technology. The data exchange can be based on various different Protocols, for example Http, XMPP\/Jabber and others.",{"@attributes":{"id":"p-0115","num":"0000"},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":{"@attributes":{"id":"ul0006-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":["API Application Programming Interface","CaIDAV Calendaring Extensions to WebDAVGPS Global Positioning System","LAN Local Area Network","LDAP Lightweight Directory Access Protocol","MR Meeting Request","MRR Meeting Request Response","UDDI Universal Description, Discovery and Integration","UR Update Request","SR Service Request","XMPP Extensible Messaging and Presence Protocol formerly named Jabber","W3C World Wide Web Consortium","WAN Wide Area Network","WebDAV Web-based Distributed Authoring and Versioning"]}}}},{"@attributes":{"id":"p-0116","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":{"@attributes":{"id":"ul0008-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":[{"@attributes":{"id":"ul0009-0001","num":"0150"},"b":"150"},{"@attributes":{"id":"ul0009-0002","num":"0151"},"b":"151"},{"@attributes":{"id":"ul0009-0003","num":"0152"},"b":"152"},{"@attributes":{"id":"ul0009-0004","num":"0153"},"b":"153"},{"@attributes":{"id":"ul0009-0005","num":"0154"},"b":"154"},{"@attributes":{"id":"ul0009-0006","num":"0155"},"b":"155"},{"@attributes":{"id":"ul0009-0007","num":"0156"},"b":"156"},{"@attributes":{"id":"ul0009-0008","num":"0157"},"b":"157"},{"@attributes":{"id":"ul0009-0009","num":"0158"},"b":"158"},{"@attributes":{"id":"ul0009-0010","num":"0159"},"b":"159"},{"@attributes":{"id":"ul0009-0011","num":"0160"},"b":"160"},{"@attributes":{"id":"ul0009-0012","num":"0161"},"b":"161"},{"@attributes":{"id":"ul0009-0013","num":"0162"},"b":"162"},{"@attributes":{"id":"ul0009-0014","num":"0163"},"b":"163"},{"@attributes":{"id":"ul0009-0015","num":"0164"},"b":"164"},{"@attributes":{"id":"ul0009-0016","num":"0165"},"b":"165"},{"@attributes":{"id":"ul0009-0017","num":"0166"},"b":"166"},{"@attributes":{"id":"ul0009-0018","num":"0167"},"b":"167"},{"@attributes":{"id":"ul0009-0019","num":"0168"},"b":"168"},{"@attributes":{"id":"ul0009-0020","num":"0169"},"b":"234"},{"@attributes":{"id":"ul0009-0021","num":"0170"},"b":"240"},{"@attributes":{"id":"ul0009-0022","num":"0171"},"b":["241","152"]},{"@attributes":{"id":"ul0009-0023","num":"0172"},"b":"242"},{"@attributes":{"id":"ul0009-0024","num":"0173"},"b":"330"},{"@attributes":{"id":"ul0009-0025","num":"0174"},"b":"331"},{"@attributes":{"id":"ul0009-0026","num":"0175"},"b":"334"},{"@attributes":{"id":"ul0009-0027","num":"0176"},"b":"335"},{"@attributes":{"id":"ul0009-0028","num":"0177"},"b":"336"},{"@attributes":{"id":"ul0009-0029","num":"0178"},"b":"337"},{"@attributes":{"id":"ul0009-0030","num":"0179"},"b":"338"},{"@attributes":{"id":"ul0009-0031","num":"0180"},"b":"420"},{"@attributes":{"id":"ul0009-0032","num":"0181"},"b":"422"},{"@attributes":{"id":"ul0009-0033","num":"0182"},"b":"424"},{"@attributes":{"id":"ul0009-0034","num":"0183"},"b":"426"},{"@attributes":{"id":"ul0009-0035","num":"0184"},"b":"428"},{"@attributes":{"id":"ul0009-0036","num":"0185"},"b":"440"},{"@attributes":{"id":"ul0009-0037","num":"0186"},"b":"441"},{"@attributes":{"id":"ul0009-0038","num":"0187"},"b":"442"},{"@attributes":{"id":"ul0009-0039","num":"0188"},"b":"443"},{"@attributes":{"id":"ul0009-0040","num":"0189"},"b":"444"},{"@attributes":{"id":"ul0009-0041","num":"0190"},"b":"446"},{"@attributes":{"id":"ul0009-0042","num":"0191"},"b":"447"},{"@attributes":{"id":"ul0009-0043","num":"0192"},"b":"450"},{"@attributes":{"id":"ul0009-0044","num":"0193"},"b":"454"},{"@attributes":{"id":"ul0009-0045","num":"0194"},"b":"456"},{"@attributes":{"id":"ul0009-0046","num":"0195"},"b":"457"},{"@attributes":{"id":"ul0009-0047","num":"0196"},"b":["455","469"]},{"@attributes":{"id":"ul0009-0048","num":"0197"},"b":"458"},{"@attributes":{"id":"ul0009-0049","num":"0198"},"b":"459"},{"@attributes":{"id":"ul0009-0050","num":"0199"},"b":"462"},{"@attributes":{"id":"ul0009-0051","num":"0200"},"b":"463"},{"@attributes":{"id":"ul0009-0052","num":"0201"},"b":"464"},{"@attributes":{"id":"ul0009-0053","num":"0202"},"b":"465"},{"@attributes":{"id":"ul0009-0054","num":"0203"},"b":"466"},{"@attributes":{"id":"ul0009-0055","num":"0204"},"b":"467"},{"@attributes":{"id":"ul0009-0056","num":"0205"},"b":"468"},{"@attributes":{"id":"ul0009-0057","num":"0206"},"b":"469"},{"@attributes":{"id":"ul0009-0058","num":"0207"},"b":"470"},{"@attributes":{"id":"ul0009-0059","num":"0208"},"b":"471"},{"@attributes":{"id":"ul0009-0060","num":"0209"},"b":"472"},{"@attributes":{"id":"ul0009-0061","num":"0210"},"b":"473"},{"@attributes":{"id":"ul0009-0062","num":"0211"},"b":"526"},{"@attributes":{"id":"ul0009-0063","num":"0212"},"b":"530"},{"@attributes":{"id":"ul0009-0064","num":"0213"},"b":"532"},{"@attributes":{"id":"ul0009-0065","num":"0214"},"b":"534"},{"@attributes":{"id":"ul0009-0066","num":"0215"},"b":"536"},{"@attributes":{"id":"ul0009-0067","num":"0216"},"b":"538"},{"@attributes":{"id":"ul0009-0068","num":"0217"},"b":"550"},{"@attributes":{"id":"ul0009-0069","num":"0218"},"b":"551"},{"@attributes":{"id":"ul0009-0070","num":"0219"},"b":"552"},{"@attributes":{"id":"ul0009-0071","num":"0220"},"b":"553"},{"@attributes":{"id":"ul0009-0072","num":"0221"},"b":"554"},{"@attributes":{"id":"ul0009-0073","num":"0222"},"b":"555"},{"@attributes":{"id":"ul0009-0074","num":"0223"},"b":"556"},{"@attributes":{"id":"ul0009-0075","num":"0224"},"b":"557"},{"@attributes":{"id":"ul0009-0076","num":"0225"},"b":"558"},{"@attributes":{"id":"ul0009-0077","num":"0226"},"b":"559"},{"@attributes":{"id":"ul0009-0078","num":"0227"},"b":"560"},{"@attributes":{"id":"ul0009-0079","num":"0228"},"b":"561"},{"@attributes":{"id":"ul0009-0080","num":"0229"},"b":"600"},{"@attributes":{"id":"ul0009-0081","num":"0230"},"b":"608"},{"@attributes":{"id":"ul0009-0082","num":"0231"},"b":"612"},{"@attributes":{"id":"ul0009-0083","num":"0232"},"b":"614"},{"@attributes":{"id":"ul0009-0084","num":"0233"},"b":"616"},{"@attributes":{"id":"ul0009-0085","num":"0234"},"b":"618"},{"@attributes":{"id":"ul0009-0086","num":"0235"},"b":"620"},{"@attributes":{"id":"ul0009-0087","num":"0236"},"b":"622"},{"@attributes":{"id":"ul0009-0088","num":"0237"},"b":"643"},{"@attributes":{"id":"ul0009-0089","num":"0238"},"b":"644"},{"@attributes":{"id":"ul0009-0090","num":"0239"},"b":"645"},{"@attributes":{"id":"ul0009-0091","num":"0240"},"b":"701"},{"@attributes":{"id":"ul0009-0092","num":"0241"},"b":"702"},{"@attributes":{"id":"ul0009-0093","num":"0242"},"b":"703"},{"@attributes":{"id":"ul0009-0094","num":"0243"},"b":"704"},{"@attributes":{"id":"ul0009-0095","num":"0244"},"b":"705"},{"@attributes":{"id":"ul0009-0096","num":"0245"},"b":"706"},{"@attributes":{"id":"ul0009-0097","num":"0246"},"b":"707"},{"@attributes":{"id":"ul0009-0098","num":"0247"},"b":"800"},{"@attributes":{"id":"ul0009-0099","num":"0248"},"b":"801"},{"@attributes":{"id":"ul0009-0100","num":"0249"},"b":"802"},{"@attributes":{"id":"ul0009-0101","num":"0250"},"b":"803"},{"@attributes":{"id":"ul0009-0102","num":"0251"},"b":"804"}]}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the following, embodiments of the invention are described by way of example, only making reference to the drawings in which:",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 1","i":"b "},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 4","i":"a "},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 4","i":"b "},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
