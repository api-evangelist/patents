---
title: User registry adapter framework
abstract: A method, computer program product, and data processing system, with which a unified security policy may be implemented using existing application components with disparate security mechanisms and user registries is disclosed. The present invention provides a generic application programming interface (API) that forms a framework for creating registry adapters. Registry adapters allow a policy director (an item of software for imposing a sitewide security policy) to operate with new or unfamiliar registry types by acting as a drop-in translator for converting generic registry-access commands into operations specific to the particular registry in question.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07146637&OS=07146637&RS=07146637
owner: International Business Machines Corporation
number: 07146637
owner_city: Armonk
owner_country: US
publication_date: 20010629
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["1. Technical Field","The present invention is related to security systems for use with large sites on the World Wide Web. More specifically, the present invention provides a method, computer program product, and data processing system for allowing centralized access to information in disparate user registries across networked data processing system.","2. Description of Related Art","The Internet, also referred to as an \u201cinternetwork,\u201d is a set of computer networks, possibly dissimilar, joined together by means of gateways that handle data transfer and the conversion of messages from protocols of the sending network to the protocols used by the receiving network (with packets if necessary). When capitalized, the term \u201cInternet\u201d refers to the collection of networks and gateways that use the TCP\/IP suite of protocols.","The Internet has become a cultural fixture as a source of both information and entertainment. Many businesses are creating Internet sites as an integral part of their marketing efforts, informing consumers of the products or services offered by the business or providing other information seeking to engender brand loyalty. Many federal, state, and local government agencies are also employing Internet sites for informational purposes, particularly agencies which must interact with virtually all segments of society such as the Internal Revenue Service and secretaries of state. Providing informational guides and\/or searchable databases of online public records may reduce operating costs. Further, the Internet is becoming increasingly popular as a medium for commercial transactions.","Currently, the most commonly employed method of transferring data over the Internet is to employ the World Wide Web environment, also called simply \u201cthe Web\u201d. Other Internet resources exist for transferring information, such as File Transfer Protocol (FTP) and Gopher, but have not achieved the popularity of the Web. In the Web environment, servers and clients effect data transaction using the Hypertext Transfer Protocol (HTTP), a known protocol for handling the transfer of various data files (e.g., text, still graphic images, audio, motion video, etc.). The information in various data files is formatted for presentation to a user by a standard page description language, the Hypertext Markup Language (HTML). In addition to basic presentation formatting, HTML allows developers to specify \u201clinks\u201d to other Web resources identified by a Uniform Resource Locator (URL). A URL is a special syntax identifier defining a communications path to specific information. Each logical block of information accessible to a client, called a \u201cpage\u201d or a \u201cWeb page\u201d, is identified by a URL. The URL provides a universal, consistent method for finding and accessing this information, not necessarily for the user, but mostly for the user's Web \u201cbrowser\u201d. A browser is a program capable of submitting a request for information identified by an identifier, such as, for example, a URL. A user may enter a domain name through a graphical user interface (GUI) for the browser to access a source of content. The domain name is automatically converted to the Internet Protocol (IP) address by a domain name system (DNS), which is a service that translates the symbolic name entered by the user into an IP address by looking up the domain name in a database.","The Internet also is widely used to transfer applications to users using browsers. With respect to commerce on the Web, individual consumers and business use the Web to purchase various goods and services. In offering goods and services, some companies offer goods and services solely on the Web while others use the Web to extend their reach.","In recent years, organizations have expanded the role of the Web from a mere disseminator of information to an integral part of business operations. Organizations increasingly rely on the Web to provide essential business services, such as allowing customers to view their accounts online or to allow internal employees to access internal information over the Internet for use while working from home.","As organizations move from providing static content to providing key services, the amount of sensitive data becoming accessible over the Web is increasing steadily. This has brought about a major change in the requirements for data security over the Web. It is no longer sufficient to \u201ckeep the bad guys out.\u201d Organizations with a strong web presence must not only keep out unauthorized users, but must also keep authorized users from accessing data and applications they should not be allowed to access.","To complicate matters, even sophisticated websites are often a hodge-podge of various applications and servers, each with their own authentication systems and user registries (the databases that store data for use in authenticating users). Rewriting each and every application on a site so as to implement a unified security policy is a Herculean task. To provide effective site-wide security over a complex website, however, some sort of centralized access control is needed, so that authorized users may access only those resources they are authorized to access. It would also be beneficial if a user need only sign onto the site once, rather than for each time a new application is accessed.","What is needed then, is a system whereby a unified security policy may be implemented in a website having disparate user registries and authentication mechanisms.","The present invention provides a method, computer program product, and data processing system, with which a unified security policy may be implemented using existing application components with disparate security mechanisms and user registries. The present invention provides a generic application programming interface (API) that forms a framework for creating registry adapters.","A policy director server authenticates a user using data stored in a registry associated with an existing application. The policy director issues generic registry-independent function calls taken from the API to a registry adapter. The registry adapter is custom-made to operate with the particular registry in question. The registry adapter, in response to the function calls, performs registry-dependent operations on the registry and returns the results to the policy director, thus obviating the need for the policy director to be programmed to operate with each type of registry. The policy director may be made to operate with a new type of registry by simply pairing it with a new registry adapter made to operate with the new registry type and exporting the API so as to make it accessible to the policy director.","With reference now to the figures,  is a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network data processing system  is a network of computers in which the present invention may be implemented. Network data processing system  contains a network , which is the medium used to provide communications links between various devices and computers connected together within network data processing system . Network  may include connections, such as wire, wireless communication links, or fiber optic cables.","In the depicted example, a server  is connected to network  along with storage unit . In addition, clients , , and  also are connected to network . These clients , , and  may be, for example, personal computers or network computers. In the depicted example, server  provides data, such as boot files, operating system images, and applications to clients \u2013. Clients , , and  are clients to server . Network data processing system  may include additional servers, clients, and other devices not shown. In the depicted example, network data processing system  is the Internet with network  representing a worldwide collection of networks and gateways that use the TCP\/IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational and other computer systems that route data and messages. Of course, network data processing system  also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN).  is intended as an example, and not as an architectural limitation for the present invention.","Referring to , a block diagram of a data processing system that may be implemented as a server, such as server  in , is depicted in accordance with a preferred embodiment of the present invention. Data processing system  may be a symmetric multiprocessor (SMP) system including a plurality of processors  and  connected to system bus . Alternatively, a single processor system may be employed. Also connected to system bus  is memory controller\/cache , which provides an interface to local memory . I\/O bus bridge  is connected to system bus  and provides an interface to I\/O bus . Memory controller\/cache  and I\/O bus bridge  may be integrated as depicted.","Peripheral component interconnect (PCI) bus bridge  connected to I\/O bus  provides an interface to PCI local bus . A number of modems may be connected to PCI bus . Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to network computers \u2013 in  may be provided through modem  and network adapter  connected to PCI local bus  through add-in boards.","Additional PCI bus bridges  and  provide interfaces for additional PCI buses  and , from which additional modems or network adapters may be supported. In this manner, data processing system  allows connections to multiple network computers. A memory-mapped graphics adapter  and hard disk  may also be connected to I\/O bus  as depicted, either directly or indirectly.","Those of ordinary skill in the art will appreciate that the hardware depicted in  may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention.","The data processing system depicted in  may be, for example, an IBM eServer pseries, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system, or alternatively, the Linux operating system, which is freely available for a number of hardware platforms.","With reference now to , a block diagram illustrating a data processing system is depicted in which the present invention may be implemented. Data processing system  is an example of a client computer. Data processing system  employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Accelerated Graphics Port (AGP) and Industry Standard Architecture (ISA) may be used. Processor  and main memory  are connected to PCI local bus  through PCI bridge . PCI bridge  also may include an integrated memory controller and cache memory for processor . Additional connections to PCI local bus  may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN) adapter , SCSI host bus adapter , and expansion bus interface  are connected to PCI local bus  by direct component connection. In contrast, audio adapter , graphics adapter , and audio\/video adapter  are connected to PCI local bus  by add-in boards inserted into expansion slots. Expansion bus interface  provides a connection for a keyboard and mouse adapter , modem , and additional memory . Small computer system interface (SCSI) host bus adapter  provides a connection for hard disk drive , tape drive , and CD-ROM drive . Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors.","An operating system runs on processor  and is used to coordinate and provide control of various components within data processing system  in . The operating system may be a commercially available operating system, such as Windows 2000, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on data processing system . \u201cJava\u201d is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented operating system, and applications or programs are located on storage devices, such as hard disk drive , and may be loaded into main memory  for execution by processor .","Those of ordinary skill in the art will appreciate that the hardware in  may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash ROM (or equivalent nonvolatile memory) or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in . Also, the processes of the present invention may be applied to a multiprocessor data processing system.","As another example, data processing system  may be a stand-alone system configured to be bootable without relying on some type of network communication interface, whether or not data processing system  comprises some type of network communication interface. As a further example, data processing system  may be a Personal Digital Assistant (PDA) device, which is configured with ROM and\/or flash ROM in order to provide non-volatile memory for storing operating system files and\/or user-generated data.","The depicted example in  and above-described examples are not meant to imply architectural limitations. For example, data processing system  also may be a notebook computer or hand held computer in addition to taking the form of a PDA. Data processing system  also may be a kiosk or a Web appliance.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":["400","402","404","406","402","408","410"]},"Authentication gateway server  allows or denies client computer  access to the resources of servers  and  based on a single-signon system. In other words, the user of client computer  provides a single username and password to authentication gateway server  and then is allowed access to the other servers in intranet . The user of client computer , however, may have varying levels of access to different servers, once signed on. For instance, although a user may be signed onto the intranet as a whole, the user might not be allowed to access all intranet resources (including hardware resources such as servers, clients, and peripheral devices, and software resources such as applications), once signed on.","In a typical intranet pieced together from existing \u201coff-the-shelf\u201d components, each application or server will have its own registry of users, user groups, and other application-specific objects-the information each application or server itself uses to authenticate users. Having all of this authentication information distributed in this way, among different software and hardware components, makes providing a single-signon difficult. In order to authenticate a user when a user may have access to some resources, but not others, policy director software needs to have a way of accessing the various user registries throughout the intranet. Thus, the present invention provides a technique by which existing hardware and software components may be made to interact with policy director software, so as to provide single-signon capability readily and to also allow for central establishment of users, user groups, and policies across disparate application platforms.","One of ordinary skill in the art will note that the processes of the present invention will apply with equal utility in the situation where client computer  is within intranet , rather than connected through Internet .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 5","b":["500","502","504","506","508","506","508","502","504","506","508","500"]},"The API is a vocabulary of function definitions that provide a single interface that policy director  may use to communicate with any registry adapter. The actual program code corresponding to each of the function definitions within the API is custom tailored for each registry. Thus, each registry adapter acts as a translator, receiving function calls from policy director  to perform particular tasks, then performing the tasks on a particular registry.","In this way, existing registry systems may be incorporated with existing policy director software by simply writing a registry adapter that includes program code for each of the functions in the API. In a preferred embodiment, a registry adapter is compiled as a dynamically-linked library (DLL), so that it may be loaded by policy director software  as needed, without rebuilding any existing software components, such as policy director software .","In a preferred embodiment, the API adopts an object-oriented approach to handling registry data. Each basic data concept is associated with a particular object class. Thus, a preferred embodiment of the API recognizes objects corresponding to users, user groups, policies, resources, resource groups, and resource credentials. A preferred embodiment also recognizes objects representing lists of the previously-mentioned objects. Each of these objects contains a number of data fields representing properties of that object. For instance, a \u201cUser\u201d object will have a \u201cfirstName\u201d field, containing a user's first (given) name. Table I provides a list of basic object classes with associated data fields in a preferred embodiment of the present invention. Objects that represent lists of these basic objects are called URAF_UserList, URAF_GroupList, URAF_PolicyList, and so forth. It should be noted that Table I is merely an example of the kinds of objects that may be included in an embodiment of the present invention; it is by no means exhaustive or exclusive. Actual embodiments of the present invention may employ more, fewer, or different classes than those described in Table I.",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE I"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Object Classes and their Fields"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Data Field in the",{}]},{"entry":["Primary Data Object","Object","Field Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["URAF_User","userID","Policy Director user ID"]},{"entry":[{},"domainName","Policy Director domain name"]},{"entry":[{},"description","User description"]},{"entry":[{},"type","User type"]},{"entry":[{},"uuid","Unique object identification"]},{"entry":[{},"accountValid","User account valid"]},{"entry":[{},"authnDataValid","Authentication data valid"]},{"entry":[{},"authnData","Authentication data"]},{"entry":[{},"loginTypes","Login types"]},{"entry":[{},"firstName","User's first name"]},{"entry":[{},"middleName","User's middle name"]},{"entry":[{},"lastName","User's last name"]},{"entry":[{},"registryUID","Registry specific user ID"]},{"entry":[{},"failedlogins","Number of failed logins"]},{"entry":[{},"pwdLastChanged","Password last changed time"]},{"entry":[{},"lastLogin","Last successful login time"]},{"entry":[{},"policyID","Policy ID for this user"]},{"entry":[{},"properties","Registry specific data"]},{"entry":[{},"blob","For future data requirements"]},{"entry":["URAF_Group","groupID","Policy Director group ID"]},{"entry":[{},"domainName","Policy Director domain name"]},{"entry":[{},"description","Group description"]},{"entry":[{},"type","Group type"]},{"entry":[{},"uuid","Unique object identification"]},{"entry":[{},"valid","Group valid"]},{"entry":[{},"registryGID","Registry specific group ID"]},{"entry":[{},"members","List of users in this group"]},{"entry":[{},"properties","Registry specific data"]},{"entry":[{},"blob","For future data requirements"]},{"entry":["URAF_Policy","policyID","Policy Director policy ID"]},{"entry":[{},"domainName","Policy Director domain name"]},{"entry":[{},"description","Policy description"]},{"entry":[{},"type","Policy type"]},{"entry":[{},"uuid","Unique object identification"]},{"entry":[{},"valid","Policy valid"]},{"entry":[{},"acctExpires","Account expiration time"]},{"entry":[{},"acctLife","Account lifetime in seconds"]},{"entry":[{},"acctInactivity","Account inactivity seconds"]},{"entry":[{},"acctFailedLockout","Account lockout in seconds"]},{"entry":[{},"maxFailedLogins","Max allowed login failures"]},{"entry":[{},"pwdMinLen","Minimum password length"]},{"entry":[{},"pwdMaxLen","Maximum password length"]},{"entry":[{},"pwdAlphaOnly","Alpha only password allowed"]},{"entry":[{},"pwdSpacesAllowed","Spaces allowed in password"]},{"entry":[{},"loginRestrictions","Login restrictions string"]},{"entry":[{},"properties","Registry specific data"]},{"entry":[{},"blob","For future data requirements"]},{"entry":["URAF_Resource","resourceID","Policy director resource ID"]},{"entry":[{},"description","Resource description"]},{"entry":[{},"type","Resource type"]},{"entry":[{},"uuid","Unique object identification"]},{"entry":[{},"valid","Resource valid"]},{"entry":[{},"properties","Registry specific data"]},{"entry":[{},"blob","For future data requirements"]},{"entry":["URAF_ResGroup","resgroupID","Policy Director resgroup ID"]},{"entry":[{},"description","Resource group description"]},{"entry":[{},"type","Resource group type"]},{"entry":[{},"uuid","Unique object identification"]},{"entry":[{},"valid","Resource group valid"]},{"entry":[{},"members","Resources in this resgroup"]},{"entry":[{},"properties","Registry specific data"]},{"entry":[{},"blob","For future data requirements"]},{"entry":["URAF_ResCreds","rescredsID","Policy Director rescreds ID"]},{"entry":[{},"description","Resource creds description"]},{"entry":[{},"type","Resources creds type"]},{"entry":[{},"uuid","Unique object identification"]},{"entry":[{},"valid","Resource credentials valid"]},{"entry":[{},"uid","Resource user ID"]},{"entry":[{},"authnData","Resource authentication data"]},{"entry":[{},"properties","Registry specific data"]},{"entry":[{},"blob","For future data requirements"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Each object class has methods associated with it. For instance, an object class representing a list of users has associated methods for accessing the first element of the list and the each next element in the list.","One of ordinary skill in the art will recognize that this object-oriented data organization need not be implemented using an object-oriented programming language, such as C++ or Java. A procedural language, such as C, may be used to implement an object-oriented API in accordance with the present invention. Typically, when a procedural language is used to implement an object-oriented API, objects are replaced with some type of structured data type (such as a C struct, or a Pascal record), and the object methods will be replaced with functions that take the object's structured data type (or some kind of pointer or handle representing a structured datatype) as an argument. For example, a call to an object's method in C++ or Java, \u201cobject.method(x)\u201d would be replaced with a function call resembling \u201cmethod(object,x)\u201d in C.","In a preferred embodiment, API functions (or methods) return a completion status code. This code can be interpreted to tell whether an API function completed successfully.","In a preferred embodiment, API functions exist for reading, modifying, and making use of all of the various object classes. Table II provides a representative listing of API functions and the tasks they perform in a preferred embodiment of the present invention. It should be noted that Table II is merely an example of the kinds of functions that may be included in an embodiment of the present invention; it is by no means exhaustive or exclusive. Actual embodiments of the present invention may employ more, fewer, or different functions than those described in Table II.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"API Functions"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"INITIALIZATION\/TERMINATION FUNCTIONS"},{"entry":"uraf_router - Route requests to the proper adapter"},{"entry":"uraf_initialize - Initialization of URAF"},{"entry":"uraf_terminate - Termination of URAF"},{"entry":"MISCELLANEOUS FUNCTIONS"},{"entry":"uraf_version - Get the URAF implementation version number"},{"entry":"uraf_registry_type - Get the URAF implementation registry type"},{"entry":"uraf_authn_type - Get the URAF implementation authentication type"},{"entry":"uraf_extensions - Get URAF implementation extensions"},{"entry":"REGISTRY PROPERTY FUNCTIONS"},{"entry":"uraf_registry_properties - Get URAF registry specific properties"},{"entry":"uraf_alloc_properties - Allocate a URAF_Properties object"},{"entry":"uraf_free_properties - Free a URAF_Properties object"},{"entry":"MEMORY MANAGEMENT FUNCTIONS"},{"entry":"uraf_alloc - Allocate memory"},{"entry":"uraf_strdup - String duplication"},{"entry":"uraf_free - Free memory"},{"entry":"uraf_alloc_user - Allocate a URAF_User object"},{"entry":"uraf_alloc_userlist - Allocate a URAF_UserList object"},{"entry":"uraf_free_user - Free a URAF_User object"},{"entry":"uraf_free_userlist - Free a URAF_UserList object"},{"entry":"uraf_alloc_group- Allocate a URAF_Group object"},{"entry":"uraf_alloc_grouplist - Allocate a URAF_GroupList object"},{"entry":"uraf_free_group - Free a URAF_Group object"},{"entry":"uraf_free_grouplist - Free a URAF_GroupList object"},{"entry":"uraf_alloc_policy - Allocate a URAF_Policy object"},{"entry":"uraf_alloc_policylist - Allocate a URAF_PolicyList object"},{"entry":"uraf_free_policy - Free a URAF_Policy object"},{"entry":"uraf_free_policylist - Free a URAF_PolicyList object"},{"entry":"uraf_alloc_resource - Allocate a URAF_Resource object"},{"entry":"uraf_alloc_resourcelist - Allocate a URAF_ResourceList object"},{"entry":"uraf_free_resource - Free a URAF_Resource object"},{"entry":"uraf_free_resourcelist - Free a URAF_ResourceList object"},{"entry":"uraf_alloc_resgroup - Allocate a URAF_ResGroup object"},{"entry":"uraf_alloc_resgrouplist - Allocate a URAF_ResGroupList object"},{"entry":"uraf_free_resgroup - Free a URAF_ResGroup object"},{"entry":"uraf_free_resgrouplist - Free a URAF_ResGroupList object"},{"entry":"uraf_alloc_rescreds - Allocate a URAF_ResCreds object"},{"entry":"uraf_alloc_rescredslist - Allocate a URAF_ResCredsList object"},{"entry":"uraf_free_rescreds - Free a URAF_ResCreds object"},{"entry":"uraf_free_rescredslist - Free a URAF_ResCredsList object"},{"entry":"uraf_alloc_authndata - Allocate a URAF_AuthnData structure (for"},{"entry":"holding authentication data)"},{"entry":"uraf_free_authndata - Free a URAF_AuthnData structure"},{"entry":"uraf_alloc_logintypes - Allocate a URAF_logintypes structure"},{"entry":"uraf_free_logintypes - Free a URAF_logintypes structure"},{"entry":"uraf_alloc_resgroupmembers - Allocate a URAF_ResGroupMembers"},{"entry":"structure"},{"entry":"uraf_free_resgroupmembers - Free a URAF_ResGroupMembers"},{"entry":"structure"},{"entry":"uraf_alloc_blob - Allocate a URAF_blob structure"},{"entry":"uraf_free_blob - Free a URAF_blob structure"},{"entry":"USER MANAGEMENT FUNCTIONS"},{"entry":"uraf_authenticate_user - Authenticate user in the Registry"},{"entry":"uraf_change_authndata - Change authentication data in the"},{"entry":"Registry"},{"entry":"uraf_create_user - Create a new user in the Registry"},{"entry":"uraf_delete_user - Delete a user from the Registry"},{"entry":"uraf_enable_user - Enable a user for Policy Director use"},{"entry":"uraf_disable_user - Disable a user for Policy Director use"},{"entry":"uraf_get_user - Get user data from the Registry"},{"entry":"uraf_get_user_by_uuid - Get user data from the Registry by UUID"},{"entry":"uraf_user_grouplist - Get list of groups user belongs to"},{"entry":"uraf_get_userlist - Get list of users from the Registry"},{"entry":"uraf_first_user - Get first user from list of users"},{"entry":"uraf_next_user - Get next user from list of users"},{"entry":"uraf_previous_user - Get previous user from list of users"},{"entry":"GROUP MANAGEMENT FUNCTIONS"},{"entry":"uraf_create_group - Create a new group in the Registry"},{"entry":"uraf_delete_group - Delete a group from the Registry"},{"entry":"uraf_enable_group - Enable a group for Policy Director use"},{"entry":"uraf_disable_group - Disable a group for Policy Director use"},{"entry":"uraf_modify_group - Modify a group in the Registry"},{"entry":"uraf_add_group_member - add a user to a group in the Registry"},{"entry":"uraf_remove_group_member - remove a user from a group in the"},{"entry":"Registry"},{"entry":"uraf_get_group - Get group data from the Registry"},{"entry":"uraf_get_group_by_uuid - Get group data from the Registry by UUID"},{"entry":"uraf_get_grouplist - Get list of groups from the Registry"},{"entry":"uraf_first_group - Get first group from list of groups"},{"entry":"uraf_next_group - Get next group from list of groups"},{"entry":"uraf_previous_group - Get previous group from list of groups"},{"entry":"POLICY MANAGEMENT FUNCTIONS"},{"entry":"uraf_create_policy - Create a new policy in the Registry"},{"entry":"uraf_delete_policy - Delete a policy from the Registry"},{"entry":"uraf_modify_policy - Modify a policy in the Registry"},{"entry":"uraf_get_policy - Get policy data from the Registry"},{"entry":"uraf_get_policylist - Get list of policy data from the Registry"},{"entry":"uraf_first_policy - Get first policy from policy list"},{"entry":"uraf_next_policy - Get next policy from policy list"},{"entry":"uraf_previous_policy - Get previous policy from policy list"},{"entry":"RESOURCE MANAGEMENT FUNCTIONS"},{"entry":"uraf_create_resource - Create a new resource in the Registry"},{"entry":"uraf_delete_resource - Delete a resource from the Registry"},{"entry":"uraf_modify_resource - Modify a resource in the Registry"},{"entry":"uraf_get_resource - Get resource data from the Registry"},{"entry":"uraf_get_resourcelist - Get list of resource data from the"},{"entry":"Registry"},{"entry":"uraf_first_resource - Get first resource from resource list"},{"entry":"uraf_next_resource - Get next resource from resource list"},{"entry":"uraf_previous_resource - Get previous resource from resource list"},{"entry":"RESGROUP MANAGEMENT FUNCTIONS"},{"entry":"uraf_create_resgroup - Create a new resgroup in the Registry"},{"entry":"uraf_delete_resgroup - Delete a resgroup from the Registry"},{"entry":"uraf_modify_resgroup - Modify a resgroup in the Registry"},{"entry":"uraf_get_resgroup - Get resgroup data from the Registry"},{"entry":"uraf_get_resgrouplist - Get list of resgroup data from the"},{"entry":"Registry"},{"entry":"uraf_first_resgroup - Get first resgroup from resgroup list"},{"entry":"uraf_next_resgroup - Get next resgroup from resgroup list"},{"entry":"uraf_previous_resgroup - Get previous resgroup from resgroup list"},{"entry":"RESCREDS MANAGEMENT FUNCTIONS"},{"entry":"uraf_create_rescreds - Create a new rescreds in the Registry"},{"entry":"uraf_delete_rescreds - Delete a rescreds from the Registry"},{"entry":"uraf_modify_rescreds - Modify a rescreds in the Registry"},{"entry":"uraf_get_rescreds - Get rescreds data from the Registry"},{"entry":"uraf_get_rescredslist - Get list of rescreds data from the"},{"entry":"Registry"},{"entry":"uraf_first_rescreds - Get first rescreds from rescreds list"},{"entry":"uraf_next_rescreds - Get next rescreds from rescreds list"},{"entry":"uraf_previous_rescreds - Get previous rescreds from rescreds list"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":["600","602","604"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIGS. 7","b":["8","9"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 7","b":["502","500","702","500","506","704","506","502","706","708","500"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 8","b":"2617"},"The URAF_ResCreds object administration process starts with a request issued from the administrator of policy director software  to create an SSO ResCreds for a particular user (step ). A call to uraf_create_rescreds interface call will be issued to URAF adapter  to create a URAF_ResCreds object associated with a URAF_Resource or a URAF_ResGroup (step ). The adapter then in turn creates a URAF_ResCreds object under the user object corresponding to the user in question in registry  (step ). This procedure can, be repeated (step ) by the administrator of policy director software .","Once the administration flows in  and  are completed, the environment is ready for user to perform web single sign-on.  is a flowchart representation of the actual single sign-on task between application, URAF adapter, and all the related objects in underlying registry.","The user starts from requesting a web resource in a SSO object name space located in policy director software  (step ). When the request is received by the policy director software , the SSO ResCreds name and user's id associated with the requested web resource will be used by policy director software  to retrieve the user's id and password for signing onto the backend server.","Specifically, the uraf_get_rescreds interface will be issued to URAF adapter  (step ). Adapter  will then locate the SSO ResCreds name under the requested user object, and return the ResCreds object back to policy director software  (step ). Upon receiving the ResCreds object, policy director software  then extracts the user id and password stored in the ResCreds object, and forwards them to the backend server to perform authentication on behalf of the user (step ). After successfully, authenticating to the backend server, the user requested resource (e.g., a web resource) will be sent back from the server to policy director software , which in turn passes it back to the user and completes the single signon task for the user (step ). If policy director software  receives another request (step ), the process cycles to step . Otherwise, the process terminates.","It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable-type media, such as a floppy disk, a hard disk drive, a RAM, CD-ROMs, DVD-ROMS, and transmission-type media, such as digital and analog communications links, wired or wireless communications links using transmission forms, such as, for example, radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in a particular data processing system.","The description of the present invention has been presented for purposes of illustration and description, and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
