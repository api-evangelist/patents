---
title: Method and architecture for a dynamically extensible web-based management solution
abstract: A framework for extending a network management platform, including an object manager that retrieves an entire class hierarchy including any code or other functionality needed to retrieve data about a server or other network device (e.g., code needed to retrieve actual instances of an object of the class). The object manager holds the object hierarchy and initiates retrieval of actual instances of the object. The class hierarchies are maintained in plug-in type Object Providers. Newly developed network technologies are managed via managed objects defined by class hierarchies held by the Object providers. The Object Provider can be seamlessly installed in an existing extensible network management platform.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06965932&OS=06965932&RS=06965932
owner: 3Com Corporation
number: 06965932
owner_city: Santa Clara
owner_country: US
publication_date: 20010419
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS","Table 1 Example Object Class Definition"],"p":["A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","1. Field of Invention","The present invention relates to network management and more specifically to a framework for developing a network management services. The present invention is more particularly related to a framework for developing extensible network management services.","2. Discussion of Background","Networks have become important, strategic foundations for competing in a global economy. And every day, more users and more business activities step into the network realm. Users are demanding that access to the network be delivered with the same simplicity, reliability, quality, and flexibility associated with picking up a phone and calling anywhere in the world.","In this network-centric environment, the behind-the-scenes designers and operators of networks face three concurrent challenges:","Networks are growing larger and more dispersed. With each new user comes another PC, many of them notebooks and a growing number are scattered to remote locations, users' home offices, or all corners of the earth in the hands of mobile workers. While the initial capital cost of PCs gets a lot of attention, the greatest chunk of technology budgets goes to maintaining and managing users' connections. Lowering total cost of ownership (TCO) for a growing PC population means finding a way to simplify and automate management and troubleshooting of desktops, servers, and mobile PCs spread across the business. It also means enhancing the fault tolerance of servers so IS staffs escape the need to constantly fine-tune performance or deal with emergencies.","Networks are growing more complex. New technologies and applications are reaching into corporate networks at an accelerating pace. More users and greedier applications are competing for bandwidth. Fully switched local networks are common. Consequently, it is growing more difficult to monitor performance and pinpoint problems. The terminal-to-host model is long gone, and even the relatively predictable shape and behavior of client-server environments has given way to the more fluid and \u201cfractal\u201d connections that support intranets, Internet connectivity, multimedia, and other emerging applications. It is essential to gain increased visibility into today's complex networks.","Networks are growing more critical. Businesses are using information technology as a competitive advantage. And those that are getting the strongest return on their investment are graduating from e-mail and office applications to business-critical, production applications-process controls, customer service, medical imaging, e-commerce and others. In these situations, near-100-percent network availability is essential the days of overnight outages lasting up to several hours are over.","Along with this need for nonstop networks comes a need for greater control over, and information about, how traffic moves through the network. Companies are deploying applications such as enterprise resource planning (ERP), sales automation, e-commerce, distributed training, and voice-over-IP (VoIP) at a rapid pace. This business-critical and, in the case of voice and video, delay-sensitive traffic needs to move through the network unobstructed by lower-priority activities such as e-mail or Internet browsing.","Therefore, IS managers need tools capable of providing network support for these critical business objectives on an immediate real time basis. The supporting information is preferably provided in an intuitive format that allows the managers to quickly find the needed information with simple searching and a minimum of additional research. However, because of display complexities, and lack of available tools, the data presented to IS managers is not presented as effectively as is preferred to allow quick and easy access to the data needed for making proper network management decisions. Furthermore, many of the network devices and deployed applications are newly developed, and may use new or advanced protocols, methods, and types of data. However, network management devices are typically set-up to use a specific communication technique or, protocol suite, leaving little or any variation for improved methods. For example, U.S. Pat. No. 6,058,314 provides a network management device that is set up for a known application or protocol and gather data in a specific format for that application\/protocol. Unless specifically developed for a particular application, protocol, method, or data type, existing management programs are either inefficient, unprepared, or unable to properly manage the new devices and\/or applications.","The present inventors have realized the need for a framework for extending network management devices to new technologies and protocols as they are developed. The present invention includes a network management framework that is dynamically extensible for at least new network features, new network device types, and new networking technologies and protocols.","Instead of being programmed to work with specific devices or protocols, the invention includes an object manager that retrieves objects having an entire class hierarchy including any code or other functionality needed to retrieve data about a server or other network device (e.g., code needed to retrieve actual instances of an object of the class). The object manager holds the retrieved object and initiates retrieval of actual instances of the object. Retrieval of the object instance is, for example, performed using a class function.","In one embodiment, a proxy is utilized to collect data from one or more managed devices on the network, and the class function for the object retrieves the class instance from the proxy. In another embodiment, the class function contains all the programming necessary to directly request data from the managed devices and build the object instance.","The present invention is embodied as a framework for a network management device, comprising, an object repository having a set of at least one object class definition, each object class definition containing information needed to retrieve instances of an object defined by the corresponding object class definition and configured to maintain data regarding at least one managed device on a network, an object manager configured to retrieve at least one object class definition from the object repository and initiate at least one class function of the retrieved objects to retrieve at least one class instance, and an interface configured to retrieve data from the class instances and forward it to a user of the network management device.","The present invention includes a module for use in an extensible network management device, comprising, at least one class definition, including, a data storage definition configured to hold data needed to evaluate at least one aspect of a device, at least one routine configured to retrieve data for the data storage, and at least one routine that provide access to the data storage for display by the extensible network management device.","The present invention also includes a method of retrieving network management information, comprising the steps of, determining a set of information needed for network management, loading at least one object having a class hierarchy and class routines capable of retrieving and maintaining the needed network management data into an object manager, invoking class routines for retrieving an instance of the object, and forwarding the needed management data to a user.","Both the device, object, and method may be conveniently implemented on a general purpose computer, or networked computers, and the results may be displayed on an output device connected to any of the general purpose, networked computers, or transmitted to a remote device for output or display. In addition, the processes of the present invention may be embodied in a set of electronic signals transmitted using any of wireless, wired, optical, or other communication devices.","The present invention provides a framework for extending network management devices to new technologies and protocols as they are developed. Rather than being tied to specific procedures or protocols for retrieving network management information, the present invention defines an open framework in which plug-in modules are used to extend the framework to newly developed technologies, including new features, new device types, and new networking technologies.","Referring now to the drawings, wherein like reference numerals designate identical or corresponding parts, and more particularly to  thereof, there is illustrated a block diagram of an embodiment of the present invention. A browser  running a network management user interface (applet , for example) interfaces with a back end  that has an open architecture for retrieving network management information or data used by the user interface.","The backend's open architecture is a network management framework that is dynamically extensible for new features, new devices types, and new networking technologies. Rather than defining certain requirements for gathering, distributing, or using data, the back end  leaves those requirements open so that the new devices, features, and technologies can be supported using plug-in style modules that include definitions of managed objects that include all the necessary programming for gathering, distributing and\/or using network data.","Typical network management devices use a protocol, such as Simple Network Management Protocol (SNMP) which is capable of managing many current network devices. However, these network management devices are limited to managing network devices that are SNMP compliant. For example, HP Open View\u2122 is a known network management product that allows adding new management devices, however, HP Open View\u2122 is an SNMP based product and any new devices added need to be SNMP compliant.","In another example, some network management devices utilize software that follow proprietary protocols and data formats. However, again, these devices are limited to managing devices that know the proprietary protocols and data formats.","The present inventors realized the need to be able to add products with new technologies to a network management platform. For example, Palm Pilots (Palm\u2122) have gained extraordinary popularity in recent years. However, these devices are not SNMP devices, but may be networked using other technologies. One of the problems realized is how to communicate with the devices, and how can they be added to a network management platform.","The present invention solves this problem in one of several ways. In one embodiment, the present invention includes a centralized collection server using a protocol. In , the centralized collection server is embodied as, for example, any one of proxy , proxy , and distributed RMON Probe . The centralized collection server collects network management information from any of a number of network devices, including any combination of devices, probes, databases, or other network management information sources. The collected data is stored at the collection server and then communicated to the back end  upon either a request, or via a regularly scheduled communication.","Details on how to communicate with the centralized collection server are contained in an object class definitions maintained on the back end . The details are contained in plug-in modules referred to as Object Providers (A, B, and C, for example). Any number of object providers may be maintained on the back end . Each object provider contains at least one object class definition including all facilities needed for retrieving data for class objects. The facilities for retrieving data for the class objects include, for example, device specific programming to retrieve data from a specific device on the network, and generalized programming for retrieving data from network devices that are compliant with a general communications protocol (such as SNMP).","Table 1 is an example class definition for an object provider. As with all code examples contained herein, the class definition of Table 1 is not intended as a compilable or executable code segment, but instead is provided as an example of one or more processes of the present invention.\n\n","The object class definition contains various routines for providing data needed for network management, and routines for retrieving data from the network devices or a proxy. For example, the example class includes functions that provide packet traffic information for printers on a network. An object defined of class PacketTrafficForPrinters, for example:\n\n","The Object Providers and their object class definition provide all the facilities needed to communicate with either devices or proxies attached to the network. In one embodiment, the proxies are set up to communicate using emerging standards such as Internet Inter Orb Protocol (also known as IIOP). Other inter module communications are also preferably performed using other emerging standards, such as Web Based Enterprise Management (WBEM), Common Information Model (CIM), and XML\/HTTP. The Network management Framework (mainly the back end ) preferably contains a set of centralized routines available to all of the object provider plug-ins that take care of standardized communication tasks using the IIOP protocol. The present invention prefers a Common Object Request Broker Architecture (CORBA) implementation, as defined by the Object Management Group (OMG), that provides communication routines to each of the object providers. Other sets of centralized routines may also be implemented for other types or different communication protocols which are then made available to the object providers. The objects defined by the object provider object class definitions are passed from the proxy to the back end using CORBA's IIOP protocol.","Central to the concept of passing objects from the proxies to the back end  is the object manager . The object manager manages interactions between management interfaces (which enable network administrators to view and manage data for their networks) and providers (which actually collect this data from their networks). These interactions take place using the managed objects (see Table 1, for example). The object manager also controls an object repository maintained by the object providers which contains a list of classes and the providers for the managed objects.","The object manager  retrieves the object class definitions from the object providers and holds them available for use in retrieving instances of the classes held. The object manager  retrieves the object classes needed by applet  running on browser .","An example overall process for retrieving and using an object defined by the object class definitions of an object provider are shown in the flow chart of . At step , a user navigating applet  invokes a screen that is designed to display printer traffic. A request for printer information is generated by the applet  and sent to the back end  (step ). At step , the object manager recognizes the object needed to fulfill the data request made by the UI, and, if not already present, retrieves the object class definition for an object that holds the data needed to fulfill the UI request. The object manager determines the needed object by reference to the object repository and scanning the object\/provider list. More than one object may be required, and, in that case, multiple object class definitions are retrieved from one or more of the object providers. The retrieved object class definitions are loaded and held by the object manager .","At step , the object manager  invokes a class function for retrieval of an instance of the object class definition. Object instances for each of the object class definitions held by the object manager, or at least the object instances needed to respond to the UI data request are retrieved. Preferably, the object is retrieved by the class function that invokes a remote CORBA method having an underlying implementation of IIOP protocol that handles passing of the object instance from a proxy to the backend . In another embodiment, the object may be built by the class function invoked, and the class function utilizes specific communication or data protocols to retrieve the data needed to build the object from a proxy or directly from a network device(s).","At step , the object data is forwarded to the UI in response to the UI data request. The data may be displayed in any format. Some example formats are shown in Grace et al., U.S. patent application Ser. No. 09\/732,991, filed Dec. 8, 2000, entitled \u201cMETHOD FOR CORRELATING AND PRESENTING NETWORK MANAGEMENT DATA,\u201d the contents of which are incorporated herein by reference, in their entirety.","Continuing now with , it can be seen that several different methods or connections for delivering data to the back end  are envisioned. IIOP communications retrieving object instances from proxy  are generally discussed above. The proxy  retrieves data, via SNMP, for example, from an RMON Probe . The data may also be retrieved from a database  via a database (DB) application programming interface (API). SNMP may be utilized to gather data from other devices, and\/or other APIs may also be utilized to gather data from specific devices.","Proxy  is shown gathering data from any device  using any protocol. Devices may also be directly accessed via any protocol supported by the object class definition wishing to retrieve the data (see device , for example). When using an any protocol to retrieve data, the object class definition preferably uses a protocol supported by the Network Management Framework (NMF), but may provide its own specialized routines for the communication.","Local DB  illustrates another method for communicating data or an object instance to the backend. DB  communicates object instances via a DB protocol to the backend . The DB protocol is an NMF supported protocol used by an object class function, or is a protocol implemented by the object class. Alternatively, an RMON probe  may be set up to query the database  and then communicate the retrieved objects\/data to the backend  using IIOP.","The present invention includes another local database (DB ) and a set of access mechanisms (core functions and database access ) for the database. The local database  adds persistence and ensures that the Network management framework is scalable and not limited by memory restrictions. The local database  provides needed historical data for the generation of reports or reference to a previous time period. Preferably, the database is an object oriented database because it more effectively models the relationship between the managed\/management objects (in contrast, HPOpenview type platforms use SQL based databases).","Network devices to be managed may be located using, for example, file lookup, and LDAP (note LDAP directory  see LDAP RFC defined by IETF).","A policy server  and Policy Proxy server communicate via Common Open Policy Services (COPS) protocol (see COPS RFC, defined by IETF) to administer and set policies. Policies administered include the distribution of bandwidth among competing devices. The policies may be set by using policy rules, such as CIM policy schema based rules, stored persistently in an LDAP accessed directory, for example.","The present invention also facilitates the development of new devices, protocols, and other technologies by providing a framework in which object definitions and how the objects will be used. In the development process, all entities involved in the development of a new device or technology, including the user interface (UI) developers, plug-in developers, and the engineers developing the device to be managed agree on a set of data and other routines needed to retrieve network management data regarding the new technology. UI developers provide input on how the data is best arranged for viewing by a user, and how that data arrangement may facilitate display. An agreed upon object class definition then encompasses these inputs and is utilized for accessing and displaying network information regarding the new technology.",{"@attributes":{"id":"p-0047","num":"0053"},"figref":"FIG. 3"},"At step  separate groups responsible for the development of the management framework extension reach agreement regarding the definitions of the objects to be managed. The separate groups will include, for example, a management interface group, a providers (information collection), and a network devices group).","Once the objects to be managed are defined (see the printer example shown in Table 1), the separate groups develop in parallel each of the required components. At step , a management interface is developed. The management interface is based on the defined managed objects and may be organized in many ways. Preferably, the management interface is a GUI. In one embodiment, the management interface is a combination of Java Applets Java Applet , for example), XML pages, and HTML pages (or other combinations thereof). These GUI components obtain the relevant network data by communicating with the object manager  and accessing the corresponding managed objects. This communication follows the well defined protocol (XML\/HTTP , for example).","At step , Information Collection (provider) routines are developed by the providers group. The providers group develops the functionality for actually collecting information from the network. The information collection process may include the use of a local database for storing and aggregating the data (Local DB , for example).","As discussed above, communication between a provider module and a network device may take many forms. For example, the communications may be direct with a network device using a known (SNMP, for example) or proprietary protocol (note device  having direct communications). Alternatively, a provider may communicate using a Remote Procedure Call RPC mechanism (IIOP, for example) with a provider proxy (note proxy , communicating using IIOP). In this alternative, the proxy communicates with any number of network devices (using SNMP, for example). In , development of the proxy, if utilized, is performed at step .","Preferably, a set of classes developed that make up a provider are bundled together in an archive file (JAR file, for example). The JAR file is used so that the class files can be loaded as one unit rather than loading each one seperately. The object repository is then configured to plug the JAR file into the Network Management Framework. The configuration method is, for example, a text file with a JAR list and a run time load command file (load.exe, for example). Alternatively, an ITOP interface may be used (e.g., to remotely load JAR files).","At step , the group developing the network devices will provide the necessary instrumentation and agent code for the device to communicate with the management framework. Preferably, the communication use the methods described herein.","Upon completion of the development, the individually developed features are tested (steps , , and ), and then integrated (step ) into a management module. The management module (including the GUI, providers, instrumentation, agent, and proxies, if any) is then deployed (step ). Deployment includes installation of each of the new network devices and management module at a customer site.","The installation process can use a utility program that is configured to dynamically load the new management module into the network management framework without requiring a shutdown of network management applications or devices. The utility program may be configured as a load command file or IIOP interface. Thus, the new network management module is seamlessly integrated into an existing network management framework.","Portions of the present invention may be conveniently implemented using a conventional general purpose or a specialized digital computer or microprocessor programmed according to the teachings of the present disclosure, as will be apparent to those skilled in the computer art.","Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure, as will be apparent to those skilled in the software art. The invention may also be implemented by the preparation of application specific integrated circuits or by interconnecting an appropriate network of conventional component circuits, as will be readily apparent to those skilled in the art.","The present invention includes a computer program product which is a storage medium (media) having instructions stored thereon\/in which can be used to control, or cause, a computer to perform any of the processes of the present invention. The storage medium can include, but is not limited to, any type of disk including floppy disks, mini disks (MD's), optical discs, DVD, CD-ROMS, micro-drive, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, DRAMs, VRAMs, flash memory devices (including flash cards), magnetic or optical cards, nanosystems (including molecular memory ICs), RAID devices, remote data storage\/archive\/warehousing, or any type of media or device suitable for storing instructions and\/or data.","Stored on any one of the computer readable medium (media), the present invention includes software for controlling both the hardware of the general purpose\/specialized computer or microprocessor, and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the present invention. Such software may include, but is not limited to, device drivers, operating systems, and user applications. Ultimately, such computer readable media further includes software for performing the present invention, as described above.","Included in the programming (software) of the general\/specialized computer or microprocessor are software modules for implementing the teachings of the present invention, including, but not limited to, identifying requested modules, loading and holding retrieved objects, gathering data via proxy or direct communication with network devices, retrieving instances of objects, forwarding display information to requesting applets, and the display, storage, or communication of results according to the processes of the present invention.","Obviously, numerous modifications and variations of the present invention are possible in light of the above teachings. It is therefore to be understood that within the scope of the appended claims, the invention may be practiced otherwise than as specifically described herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete appreciation of the invention and many of the attendant advantages thereof will be readily obtained as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
