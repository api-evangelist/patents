---
title: Method and apparatus for providing identity based encryption in distributed computations
abstract: An approach is provided for providing identity based encryption in distributed computations. An identity based encryption platform causes, at least in part, a segmentation of a computation closure into at least a first part and one or more second parts. The identity based encryption platform also causes, at least in part, an encryption of the one or more second parts using the first part as a public key of an identity-based encryption.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09166953&OS=09166953&RS=09166953
owner: Nokia Technologies Oy
number: 09166953
owner_city: Espoo
owner_country: FI
publication_date: 20111031
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SOME EXAMPLE EMBODIMENTS","DESCRIPTION OF SOME EMBODIMENTS"],"p":["Mobile devices with various methods of connectivity are now for many people becoming the primary gateway to the internet and also a major storage point for personal information. This is in addition to the normal range of personal computers and furthermore sensor devices plus internet based providers. Combining these devices together and lately the applications and the information stored by those applications is a major challenge of interoperability. This can be achieved through numerous, individual and personal information spaces in which persons, groups of persons, etc. can place, share, interact and manipulate (or program devices to automatically perform the planning, interaction and manipulation of) webs of information with their own locally agreed semantics without necessarily conforming to an unobtainable, global whole.","Furthermore, in addition to information, the information spaces may be combined with webs of shared and interactive computations or computation spaces so that the devices having connectivity to the computation spaces can have the information in the information space manipulated within the computation space environment and the results delivered to the device, rather than the whole process being performed locally in the device. It is noted that such computation spaces may consist of connectivity between devices, from devices to network infrastructure, to distributed information spaces so that computations can be executed where enough computational elements are available. These combined information spaces and computation spaces often referred to as computation clouds, are extensions of the \u2018Giant Global Graph\u2019 in which one can apply semantics and reasoning at a local level.","In one example, clouds are working spaces respectively embedded with distributed information and computation infrastructures spanned around computers, information appliances, processing devices and sensors that allow people to work efficiently through access to information and computations from computers or other devices. An information space or a computation space can be rendered by the computation devices physically presented as heterogeneous networks (wired and wireless). On the other hand, different levels of proactive computational elements may be available to the device in various other components of various architectural levels (e.g. device level, infrastructure level, etc.), wherein different distributed components may have different capabilities and support different processes. In various example circumstances, to enhance the information processing power of a device and reduce the processing cost, one might consider minimizing or at least significantly improving exchange of data, information and computations among the distributed components within a computational architecture by providing multi-level distributed computations, such that the data can be migrated to the closest possible computation level with minimized or improved cost.","However, despite the fact that information and computation presented by the respective levels of computation architecture can be distributed with different granularity, still there are challenges in certain example implementations to achieve scalable high context information processing within such heterogeneous environments. For example, in various implementations, due to distributed nature of the architecture, (e.g., devices, infrastructures, and clouds), data, information, and computation elements (e.g., computation closures) are being exchanged among distributed devices within heterogeneous network environments wherein information with various levels of granularity and various structures is provided by and transmitted among various independent sources. However, there is no identity-based encryption of the computation closures such that allows a component to place a restriction on computation closures of other components within the distributed environment. Furthermore, there are no anonymization mechanisms for protecting the privacy of the computation closure owners.","Therefore, there is a need for an approach for providing identity based encryption in distributed computations.","According to one embodiment, a method comprises causing, at least in part, a segmentation of a computation closure into at least a first part and one or more second parts. The method also comprises causing, at least in part, an encryption of the one or more second parts using the first part as a public key of an identity-based encryption.","According to another embodiment, an apparatus comprises at least one processor, and at least one memory including computer program code for one or more computer programs, the at least one memory and the computer program code configured to, with the at least one processor, cause, at least in part, the apparatus to cause, at least in part, a segmentation of a computation closure into at least a first part and one or more second parts. The apparatus is also caused to cause, at least in part, an encryption of the one or more second parts using the first part as a public key of an identity-based encryption.","According to another embodiment, a computer-readable storage medium carries one or more sequences of one or more instructions which, when executed by one or more processors, cause, at least in part, an apparatus to cause, at least in part, a segmentation of a computation closure into at least a first part and one or more second parts. The apparatus is also caused to cause, at least in part, an encryption of the one or more second parts using the first part as a public key of an identity-based encryption.","According to another embodiment, an apparatus comprises means for causing, at least in part, a segmentation of a computation closure into at least a first part and one or more second parts. The apparatus also comprises means for causing, at least in part, an encryption of the one or more second parts using the first part as a public key of an identity-based encryption.","In addition, for various example embodiments of the invention, the following is applicable: a method comprising facilitating a processing of and\/or processing (1) data and\/or (2) information and\/or (3) at least one signal, the (1) data and\/or (2) information and\/or (3) at least one signal based, at least in part, on (or derived at least in part from) any one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","For various example embodiments of the invention, the following is also applicable: a method comprising facilitating access to at least one interface configured to allow access to at least one service, the at least one service configured to perform any one or any combination of network or service provider methods (or processes) disclosed in this application.","For various example embodiments of the invention, the following is also applicable: a method comprising facilitating creating and\/or facilitating modifying (1) at least one device user interface element and\/or (2) at least one device user interface functionality, the (1) at least one device user interface element and\/or (2) at least one device user interface functionality based, at least in part, on data and\/or information resulting from one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention, and\/or at least one signal resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","For various example embodiments of the invention, the following is also applicable: a method comprising creating and\/or modifying (1) at least one device user interface element and\/or (2) at least one device user interface functionality, the (1) at least one device user interface element and\/or (2) at least one device user interface functionality based at least in part on data and\/or information resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention, and\/or at least one signal resulting from one or any combination of methods (or processes) disclosed in this application as relevant to any embodiment of the invention.","In various example embodiments, the methods (or processes) can be accomplished on the service provider side or on the mobile device side or in any shared way between service provider and mobile device with actions being performed on both sides.","For various example embodiments, the following is applicable: An apparatus comprising means for performing the method of any of the originally filed claims.","Still other aspects, features, and advantages of the invention are readily apparent from the following detailed description, simply by illustrating a number of particular embodiments and implementations, including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments, and its several details can be modified in various obvious respects, all without departing from the spirit and scope of the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","Examples of a method, apparatus, and computer program for providing identity based encryption in distributed computations are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent, however, to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.","As used herein, the term \u201ccomputation closure\u201d identifies a particular computation procedure together with relations and communications among various processes including passing arguments, sharing process results, selecting results provided from computation of alternative inputs, flow of data and process results, etc. The computation closures (e.g., a granular reflective set of instructions, data, and\/or related execution context or state) provide the capability of slicing of computations for processes and transmitting the computation slices between devices, infrastructures and information sources.","As used herein, the term \u201ccloud\u201d refers to an aggregated set of information and computation closures from different sources. This multi-sourcing is very flexible since it accounts and relies on the observation that the same piece of information or computation can come from different sources. In one embodiment, information and computations within the cloud are represented using Semantic Web standards such as Resource Description Framework (RDF), RDF Schema (RDFS), OWL (Web Ontology Language), FOAF (Friend of a Friend ontology), rule sets in RuleML (Rule Markup Language), etc. Furthermore, as used herein, RDF refers to a family of World Wide Web Consortium (W3C) specifications originally designed as a metadata data model. It has come to be used as a general method for conceptual description or modeling of information and computations that is implemented in web resources; using a variety of syntax formats. Although various embodiments are described with respect to clouds, it is contemplated that the approach described herein may be used with other structures and conceptual description methods used to create distributed models of information and computations.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1"},"The basic concept of cloud computing technology provides access to distributed computations for various devices within the scope of the cloud, in such a way that the distributed nature of the computations is hidden from users and it appears to a user as if all the computations are performed on the same device. The cloud computing also enables a user to have control over computation distribution by transferring computations between devices that the user has access to. For example, a user may want to transfer computations among work devices, home devices, and portable devices, other private and public devices, etc. Current technologies enable a user of a mobile device to manipulate contexts such as data and information via the elements of a user interface of their user equipment. However, distribution of computations and processes related to or acting on the data and information within the cloud is typically controlled by the system. In other words, a cloud in general does not provide a user (e.g., an owner of a collection of information distributed over the information space) with the ability to control distribution of related computations and processes of, for instance, applications acting on the information. For example, a contact management application that processes contact information distributed within one or more clouds generally executes on a single device (e.g., with all processes and computations of the application also executing on the same device) to operate on the distributed information. In some cases (e.g., when computations are complex, the data set is large, etc.), providing a means to also distribute the related computations in addition to the information is advantageous.","This goal is achieved by introduction of the capability to construct, distribute, and aggregate computations as well as their related data. More specifically, to enable a user of a cloud (e.g., a mobile device user, an application developer, etc.) who connects to the cloud via one or more devices, to distribute computations among the one or more user devices or other devices with access to the cloud, each computation is deconstructed to its basic or primitive processes or computation closures. Once a computation is divided into its primitive computation closures, the processes within or represented by each closure may be executed in a distributed fashion and the processing results can be collected and aggregated into the result of the execution of the initial overall computation.","In one embodiment, a computational architecture consists of a plurality of architectural levels, including a device level, and infrastructure level, and a cloud computing level. A device from the device level has connectivity to the cloud computing level via one or more infrastructure levels, wherein each infrastructure level may consist of layers and components such as backbones, routers, base stations, etc. Typically, the computation closures associated with a process related to a device from device level are defined, constructed, and executed within the cloud computing level which may have various levels of distribution as well. However, the components of the infrastructure levels may be equipped with various resources (e.g., processing environments, storage spaces, access control, etc.) that can be utilized for the execution of computation closures associated with a process. Since the infrastructure level functions as an interface between the device level and the cloud computing level, if the computation closures can be executed in the infrastructure level, there will be no need for the computation closures to be migrated to the cloud computing level that may very well require excessive use of resources. Furthermore, if such activities can be executed in the devices level, other migrations can be considered as optional, to be used for protection at the time of any failures that may occur in device to device computation closure activities. Therefore, execution of computation closures associated with a process related to a device at the infrastructure level can provide services to device users in a more efficient manner. However, components of a multi-level architectural environment composed of device level, infrastructure level and cloud level each may differ in configuration, communication capability, policies applied in terms of ownership, privacy and security of distributed computations, etc.","It is noted that, as part of the context sharing process, it is important to have control on context migration as the execution context (e.g. computation closures) can be communicated across potential insecure channels within one or more components or levels of the computation architecture. Also, the consistency of the execution context, as communicated across potentially insecure channels, is important. Moreover, parts of the execution context may not be safe to be published without at least some form of encryption. Public key cryptography is a widely used encryption\/decryption method to protect data. However, use of long and randomly generated encryption keys and management and storage of encryption\/decryption keys, encryption\/decryption criteria, certificate, etc., are becoming daunting as the number of users, computing platforms, etc., and complexity of computation architecture structure in general is increasing. Further, the particular problem in publishing the execution context is how to publish the context with one or more criteria so that only intended recipients meeting execution context criteria can decrypt or otherwise access the shared execution context among one or more computational environments.","Therefore, there is a challenge to achieve computation security, anonymization and privacy within a heterogeneous environment of distributed architectures, wherein computations with various levels of granularity and various structures are provided and transmitted among various independent sources.","To address this problem, a system  of  introduces the capability to provide identity based encryption in distributed computations.","It is noted that, various computation architectures are equipped with encryption mechanisms such as, for example, Identity Based Encryption (IBE), anonymization, privacy policies and rules, etc. The Identity Based Encryption (IBE) is a type of public-key encryption in which the public key of a user is some unique information about the identity of the user (e.g., user's email address). This encryption mechanism can, for example, use the value of the name or domain name as a key. Anonymization of computation closures enables masking of the identity.","Typically, in a multi-level computation architecture, one level of architecture does not have the authority to encrypt or decrypt computation closures across all levels of the architecture unless proper policies are defined. In one embodiment, IBE anonymization policies of one component or level of the computation architecture may be combined with the anonymization policies of other components and levels, creating new broader policies that cover all the components and levels involved.","In one embodiment, one or more IBE anonymization policies can be selected as primary capabilities of computation closures such as, for example, energy consumption, security enforcement, privacy policies\/rules, IBE anonymization policies\/rules, connection quality, etc. In this case, other capabilities may be combined and operated with the primary capabilities, providing various results to be used in setting up the computational parameters such as, for example, capabilities, functional flow map, cost functions, rules, etc. For example, a primary capability parameter may allow selection of secondary capabilities.","In one embodiment, device-infrastructure as well as infrastructure-cloud and device-cloud architectures have computation closure based structures and functional flows, which are balanced among the available components, include energy rules determining energy requirements, and utilize end to end secure computation closures.","In one embodiment, IBE encryption, decryption, execution and validation within a distributed environment (e.g., a multi-level environment) consist of IBE anonymization, IBE encryption and decryption anonymization execution domain at every component or level of the architecture, wherein each domain may provide its own IBE mechanism.","In one embodiment, IBE encryption policies for signed functional flows of computation closures may have overlapping capabilities which may affect overall execution results. For example, one or more components (e.g. devices) may have power limitations and this may affect the IBE encryption policy rules, and information sharing schemes used.","In one embodiment, IBE encryption-decryption anonymization policy provides different degrees of what and how policy enforcement is performed. The computation closure IBE encryption-decryption anonymization policy consists of mechanisms such as encryption, decryption, filtering, privacy enforcement, etc.","In one embodiment, computation closures are used based on IBE encryption policy enforcement and, for example, mechanisms for closure signing. The identity based encryption provided, creates balance between security, privacy and energy limitation settings and threshold for every component or level of a distributed computation environment.","In one embodiment, different components may support different computation closures. Each component (e.g. infrastructure element) may have a number of pre-created entities, computation closures and hooks for the computation (e.g., connectors between closures, multiple branches, interaction points, rules, etc.).","In one embodiment, the identity based encryption platform  of  enables any of the components of the computation architecture to require the presence of pre-created elements (e.g. rules, policies, etc.) on any other component of the architecture such that the continuation of execution of one or more computation closures can be unlocked (decrypted) only by components with present pre-created elements.","As shown in , the system  comprises a set  user equipments (UEs) -having connectivity to the identity based encryption platform  via a communication network . By way of example, the communication network  of system  includes one or more networks such as a data network, a wireless network, a telephony network, or any combination thereof. It is contemplated that the data network may be any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), a public data network (e.g., the Internet), short range wireless network, or any other suitable packet-switched network, such as a commercially owned, proprietary packet-switched network, e.g., a proprietary cable or fiber-optic network, and the like, or any combination thereof. In addition, the wireless network may be, for example, a cellular network and may employ various technologies including enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., worldwide interoperability for microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), wireless LAN (WLAN), Bluetooth\u00ae, Internet Protocol (IP) data casting, satellite, mobile ad-hoc network (MANET), and the like, close proximity technologies such as Near Field Communication (NFC) and the like, or any combination thereof. Furthermore, the wireless network may be equipped with separate channels for wireless power transfer for the peer computation closure device platform and separate channels for close proximity data transfer.","The UEs -are any type of mobile terminal, fixed terminal, or portable terminal including a mobile handset, station, unit, device, multimedia computer, multimedia tablet, Internet node, communicator, desktop computer, laptop computer, notebook computer, netbook computer, tablet computer, personal communication system (PCS) device, personal navigation device, personal digital assistants (PDAs), audio\/video player, digital camera\/camcorder, positioning device, television receiver, radio broadcast receiver, electronic book device, game device, or any combination thereof, including the accessories and peripherals of these devices, or any combination thereof. It is also contemplated that the UEs -can support any type of interface to the user (such as \u201cwearable\u201d circuitry, etc.).","In one embodiment, the UEs -are respectively equipped with one or more user interfaces (UI) -. Each UI -may consist of several UI elements (not shown) at any time, depending on the service that is being used. UI elements may be icons representing user contexts such as information (e.g., music information, contact information, video information, etc.), functions (e.g., setup, search, etc.) and\/or processes (e.g., download, play, edit, save, etc.). These contexts may require certain sets of media dependent computation closures, which may affect the service, for example the bit error rate, etc. Additionally, each UI element may be bound to a context\/process by granular distribution. In one embodiment, granular distribution enables processes to be implicitly or explicitly migrated between devices, computation clouds, and other infrastructure. Additionally, a UE -may be a mobile device with embedded Radio Frequency (RF) tag system of device to device connections such that computational operations and content can be locally transmitted among devices.","In one embodiment, process distribution can be initiated for example by means of unicast (e.g., to just another device) or multicast (e.g., to multiple other devices). For example one UE  may communicate with many infrastructures (or many components of many infrastructures), while many nodes of infrastructures may communicate with multiple clouds. Additionally, process distribution may be triggered via gesture recognition, wherein the user preselects a particular set of UI elements and makes a gesture to simulate \u201cpouring\u201d the selected UE elements from one device to another. In other embodiments, process distribution may be initiated automatically without direct user involvement and based on default setup by the manufacturer of the UE -, previous setup by the user of the UE, default setup in an application activated on or associated with a UE -, or a combination thereof. Furthermore, process distribution may be triggered by wireless power transfer systems such as, for example, close proximity environments, where applicable. The wireless power transfer may be used only for process triggering, or remain in use during the rest of the process period.","As seen in , a user of UEs -may own, use, or otherwise have access to various pieces of information and computations distributed over one or more computation clouds -in information stores -and computation stores -where each of the one or more computation spaces -include multiple sets of one or more computation closures. In one embodiment, the user may be an application developer that uses a UE -to connect to the infrastructure and the cloud not only for accessing the services provided for end users but also for activities such as developing, distributing, processing, and aggregating various computations.","In one embodiment, the communication network  consists of one or more infrastructures -wherein each infrastructure is a designed communication system including multiple components -. The components -include backbones, routers, switches, wireless access points, access methods, protocols, etc. used for communication within the communication network  or between communication network  and other networks.","In one embodiment, the identity based encryption platform  controls the distribution of computations associated with UEs -to other components or levels of the computational architecture including the infrastructure level -within the environment of the communication network , and the cloud level -, based on privacy policies, anonymization policies, rules, security enforcements, etc. associated with different architectural components and\/or levels and security\/privacy requirements of computations.","In one embodiment, security verification of computation distribution may be initiated by the user, or based on a background activity for example by triggering a sequence of computation closures which in turn support distribution process. Prior to computation distribution the capabilities, including the security, privacy, anonymization, etc. capabilities of components performing the computations, are evaluated. If capabilities of an architectural level are not satisfactory or changes in capabilities are found, the evaluation process will continue until proper capabilities become available. The capabilities may be found in the same or other levels of the computational architecture and the computation closure execution will be performed at the level where available capabilities are found.","In another embodiment, network components -may provide different levels of functionality. For example, some components -may provide static computation closures while others may provide dynamic computation closures. As used herein, static computation closures are closures with predetermined configurations, which in return may require a predefined level of capabilities for execution, while dynamic computation closures are closures that may function differently based on dynamic factors such as time, traffic load, energy level, type or amount of available capabilities, etc. In one embodiment, a dynamic computation closure may adjust itself based on the dynamic factors by modifying parameters such as the level of available privacy. For example, a dynamic computation closure may downgrade itself in order to be handled with a lower level of privacy. In other embodiments, critical computation closures may be assigned lower and upper acceptable privacy or security thresholds wherein available privacy\/security within that range is acceptable.","In one embodiment the level and type of available capabilities at a component of the infrastructure -may or may not be aligned with the required capabilities by computation closures of UE -through a one to one mapping. This means that the component may need to locate (or request) other components with higher levels of capabilities from current or next layer or level of the computational architecture and forward the computations to located components. The component may also have the capability to adjust its capability settings and adapt it to the computation requirements. In other words, if the capabilities availability between a process and its processing environment is not directly aligned, the processing environment may expand its capabilities (for dynamic closures) or locate other components (for static closures) or a combination thereof. In one embodiment, if neither the direct alignment succeeds nor alternate environment is found, the setup may be aligned with lower capability requirements. The requirements may be lowered, for example by dropping part of the computation closures, substituting complex computations with more primitive computations that may produce less accurate, but accurate enough for user's needs, results. Additionally, the satisfaction threshold may be lowered (with service provider and user's agreement) so that a lower level of computation capability can be considered as satisfactory.","In one embodiment, the identity based encryption platform  may hide the information showing the ownership of computation closure and functional flows. The identity based encryption platform  may also decompose anonymization policies associated with users, devices, contents, computation closures, etc. that are applied to certain functional flows (e.g., processes, executions, contents, etc.). Additionally, the identity based encryption platform  may enforce methods of selected and verified identity based encryption, anonymization and decryption on the computation closures.","In one embodiment, the identity based encryption platform  utilizes IBE encryption mechanisms, to protects the anonymity of the encryptor or computation owner, who may target a large audience (e.g. a group by social or other criteria) that may be identified only by the capability of executing a computation closure or an aggregated closure consisting of a composition of primitive closures and connectors.","In one embodiment, the identity based encryption platform  checks that a component has the necessary facilities, in a broad sense, to continue the execution of a whole closure chain or functional flow, wherein the facilities may include suitable primitive closures, suitable ordering of the primitive closures, suitable state, etc.","In one embodiment, the identity based encryption platform  provides a policy mechanism including encryption and anonymization methods for computation closures that have been built from primitive closures or from chains of closures. The IBE encryption mechanism, which protects anonymity of the encryptor, who may target a large audience while only identified by the capability of executing one or more computation closures","In one embodiment, an encryptor may aim at execution of a complete chain of computation closures. In order to ensure the execution, the encryption may use part of the computation closure chain for encryption of the rest of the chain using IBE mechanism and publish the encrypted part. In this embodiment, other components will be able to decrypt the content only if they can present the same first part of the chain as the encryptor has originally used. The Identity based computation closures or closure chains can be selected from various attributes, components or levels of the computation architecture such as for example users, devices, time, space, infrastructures, clouds, etc. The encryptor may encrypt different content as desired and control what kind of computation closures can be executed.","In one embodiment, the identity based encryption mechanism may be bidirectional, meaning that a device may set its own criteria for an infrastructure or for a cloud and an infrastructure may set its own criteria for devices and clouds, to provide IBE based encryption-decryption anonymization policy.","In one embodiment, the identity based encryption platform  uses a private key generator (PKG) which is used to obtain the decryption keys corresponding to the criteria which may also reside in any part of the computation architecture (e.g., device, infrastructure, cloud). However, a PKG can only reside inside trustworthy devices, infrastructures, or services which ensure integrity, since only the PKG can be used to generate a private key for decryption. It is noted that the trustworthiness of a device can be verified using device certification.","In one embodiment, the IBE anonymization can be applied in various domains of any level of the computation architecture at device, infrastructure, or cloud level, where each domain may provide its own IBE mechanism. Additionally, each computation closure, branch or functional flow may enable and utilize different IBE mechanisms and rulings, if needed.","By way of example, the UEs -, and the identity based encryption platform  communicate with each other and other components of the communication network  using well known, new or still developing protocols. In this context, a protocol includes a set of rules defining how the network nodes within the communication network  interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node, from generating and receiving physical signals of various types, to selecting a link for transferring those signals, to the format of information indicated by those signals, to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection (OSI) Reference Model.","Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises (1) header information associated with a particular protocol, and (2) payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols, the packet includes (3) trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet, its destination, the length of the payload, and other properties used by the protocol. Often, the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different, higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks, such as the Internet, typically include a physical (layer ) header, a data-link (layer ) header, an internetwork (layer ) header and a transport (layer ) header, and various application (layer , layer  and layer ) headers as defined by the OSI Reference Model.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 2","b":["201","203","205","207","209","211"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 2","FIGS. 3 AND 4","FIG. 3","FIG. 4","FIG. 12"],"b":["103","300"]},"In one embodiment, per step  of flowchart  of , the segmentation module  causes, at least in part, a segmentation of a computation closure  (shown in ) associated with a process of a UE -, a network component -, a computation cloud -or a combination thereof, into at least a first part  and one or more second parts , wherein the computation closure  comprises concatenation of the first part and the second part.","In one embodiment the segmentation module  may cause the segmentation of closure  based, at least in part, on one or more cost functions, one or more functional flow maps, or a combination thereof associated with the computation closure .","In one embodiment, per step  of , the configuration module  determines one or more criteria for executing the computation closure , the one or more second parts , or a combination thereof. The configuration module  also determines one or more processes for determining the one or more criteria, or a combination thereof.","In one embodiment, per step  of , the configuration module  causes, at least in part, an inclusion of the one or more criteria, the one or more processes, or a combination  in the first part .","In one embodiment, per step  of , the encryption module  causes, at least in part, an encryption of the one or more second parts  using the first part  as a public key of an identity-based encryption. In one embodiment the encryption module  may cause the encryption of the second part  based, at least in part, on one or more cost functions, one or more functional flow maps, or a combination thereof associated with the computation closure . Furthermore, the encryption may be further based, at least in part, on one or more private keys.","In one embodiment, per step  of , the configuration module  causes, at least in part, a publication of the first part , the encrypted one or more second parts , or a combination for access by one or more subscribing devices , wherein a subscriber device may be a UE -, an infrastructure component -, a component  of the computation cloud -, or a combination thereof.","In one embodiment, per step  of , the capability evaluator  determines capability information  of the one or more subscribing devices . The capability information  may be obtained directly from the subscribing device , from the storage , from clouds -, or a combination thereof.","In one embodiment, the capability evaluator , per step  of , processes and\/or facilitating a processing of the capability information  associated with the one or more subscribing devices  to determine whether the one or more subscribing devices can decrypt the one or more encrypted second parts  for execution. If one or more subscriber devices  are allowed to decrypt the encrypted second parts  per arrow  the capability evaluator  approves the access and decryption  of the encrypted second parts  by the one or more subscriber devices .","In one embodiment, the capability information  is based, at least in part, on energy consumption information, security enforcement information, one or more privacy policies, computational resource information, bandwidth availability information, or a combination thereof associated with the one or more subscribing devices .","In one embodiment, per step  of , the policy module  determines one or more anonymization policies associated with the identity-based encryption, the computation closure , the first part , the one or more second parts , or a combination thereof, wherein the encryption of the second part  by the encryption module  is based, at least in part, on the one or more anonymization policies determined by the policy module .","In one embodiment, the policy module  may determine the one or more anonymization policies based, at least in part, on a concatenation of the one or more level-specific anonymization policies associated with the one or more levels of the computational architecture. In this embodiment, the device capabilities  may include level-specific anonymization policies associated with each of the subscribing devices , ,  from device set . The policy module  determines one or more anonymization policies by combining (e.g. concatenating) the anonymization policies for each device , , , etc.","In various embodiments, the computation closures , the criteria and processes , the device capabilities  or a combination thereof may be determined from the storage , from the UEs -, from infrastructures -, from clouds -, or a combination thereof. Furthermore, the first part , the second parts , the encrypted second parts  or a combination thereof may be stored in storage , in information spaces -, in computation stores -, in UEs -, or a combination thereof.","In one exemplary embodiment, the identity based encryption platform  may have access to a complete chain of closures that is being executed. In order to ensure the execution, the encryption module  uses first part  of the closure chain  to IBE-encrypt the rest of the chain  and publishes the encrypted part . The identity based encryption platform  checks that the only entities from set  that can decrypt the content  must present the same first part  of the chain as the first part generated by the segmentation module .","In one embodiment, the encrypted second part  can be made available publicly at any of the subscribing devices , wherein the subscribing devices may be components of a multi-level device-infrastructure-cloud computation architecture. Furthermore, the encryption can be done based on factory or retail installed IBE parameters and the criteria.","In one embodiment, the encrypted closure(s)  can be decrypted only when another, previously unknown entity, from set  can present the same criteria as was used by the encryption module  to encrypt the content  and the original closure  can be recombined from its parts  and .","In one embodiment, the device performing decryption  will need to obtain the decryption key matching the criteria from a Private Key Generator (PKG). (not shown)","In one embodiment, a private Key generator (PKG) may use various methods to verify identity of the entity requesting a private key. For example, the PKG may verify the identity based on the access rights of the entity or the component containing the entity. Alternatively, the PKG may access information from the information store -and make deductions from the information. For example, if a UE -offers criteria stating that the user is a fan of the Beatles, the PKG may check whether the user of UE -belongs to any Beatles fan clubs. Additionally, the PKG may make history based deductions. For example, the PKG may check whether the user of UE -has listened to any Beatles songs. The PKG may be associated with a PKG infrastructure that provides access rights, policies, rules, configurations, etc. to the PKG. This ensures the identity based encryption platform  that a device , , , etc. has the necessary combination of primitive closures to perform the computation without other details. Any device  may opportunistically attempt to decrypt the encrypted second part . Upon a successful decryption , the device can construct the original closure  and execute it.","In one embodiment, the Private Key Generator (PKG) which is used to obtain the decryption keys corresponding to the criteria may reside in any part of the system  of . However, for any device  to be trustworthy (e.g. be able to decrypt the encrypted second part ), the device should have access to the PKG for generating the private key to decrypt. Furthermore, trustworthiness of a device may be verified using device certification.","As closures  may include process states, in one embodiment, the same mechanism described above for decryption of computation closures may enforce a particular state of the computation at the decrypting device. Furthermore, the decryption may happen locally at the decrypting device , or at any other entity, device, component, or a combination thereof, especially the device that hosts the encrypted second part .","In one embodiment, the encryption module  may label the encrypted content  with partial criteria so that the decrypting device  can easily find a matching content for the criteria. For example, the encryption module  may label the encrypted second part  with the \u2018static\u2019 part of the closure , but use the state and the \u2018static\u2019 parts as criteria. This enables the decrypting device  to match its static part to look for potential decrypted second parts  to decrypt.","In one embodiment, when the process state is available, the encryption module  may use both of the state and the \u2018static\u2019 part of the closure to label with plain closure, but use closure and state as criteria. This means that any device  that has the \u2018static\u2019 closure part can easily find the encrypted content ; however, it still needs the proper state to decrypt the encrypted content.","In one embodiment, instead of the first part , the last part of the closure  can be used as criteria. Furthermore, in other embodiments, the original closure  may be split into several parts, wherein some parts form the criteria while some other parts form the content. In this embodiment, an ordering of the parts is being determined to be used for recombining of the original closure  from the encrypted content .","In one embodiment, any device  may assign a policy, based on the capabilities  of anonymous other devices to construct the whole chain of closures. The mechanism may be bidirectional in the sense that a device may set its own criteria for other devices, the infrastructure, etc. while the infrastructure may also set its own criteria for devices.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 5","FIG. 3","FIG. 4","FIG. 5"],"b":["101","107","107","107","107","501","107","503","501","503","501","503","103","107","107","501","503","103","117","117","111","111","501","503","119","119","117","501","119","119","503","501","119","119","117","505","503","119","119","117","507","117","111","111","511","513","501","107","119","119","117","111","111"],"i":["a","b","c","a ","b ","a ","b ","a","c ","a","n ","a ","c ","a ","b ","d ","a ","c ","a ","b ","d ","a ","a ","a","n ","a","a ","c ","a ","a","n "]},"Subsequent to the distribution, the receiving components can decrypt the encrypted closures and execute them, as described with regards to . Once the execution is completed, the results of execution of the distributed closures can be aggregated and returned to UEs and ","In one embodiment, the identity based encryption platform  may periodically receive updated information about capabilities of available components and paths, security, privacy and anonymization statuses and updated related parameters from the infrastructures and\/or clouds. Additionally, the identity based encryption platform  may periodically request updates from the infrastructures and\/or clouds about the availability status of components and paths.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIGS. 6A-6B","FIG. 6A","FIG. 6A"],"b":["601","601","603","603","605","605","603","603"],"i":["a","d","a","c ","a","d"]},"In one embodiment, connectors may contain information about parameters such as security, privacy, anonymization requirement and\/or capabilities, functional flows, distribution maps, links between closures and architectural levels, encryption keys, etc. Arrows connecting closures to connectors and connectors to next closures show the functional flow adopted based on the parameters. As seen in , the closures have been distributed from component  to component  via communication between connector and connector . The computation branch of component  includes closures -communicating via connectors and , while branches  and  communicate via connectors and . Similarly, a third branch  has been formed of closures -being decrypted and executed at component  and connected by connectors and , while the branch communicates with other branches via connector ","In one embodiment, the initial branch  may be in a UE -, the second branch  in a component of the infrastructure -, and the third branch in another device, another component of the same infrastructure, a different infrastructure, in a cloud, or a combination thereof.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIG. 6B","FIG. 6B"],"b":["631","631","633","633","635","635","633","633","671","647","659"],"i":["a","d","a","c ","a","d "]},"In one embodiment, connectors may contain information about parameters such as capabilities including security, privacy, anonymization requirements and availability, a cost function, functional flow specifications, distribution maps, encryption keys, links between closures and architectural levels, etc. Arrows connecting closures to connectors and connectors to next closures show the functional flow adopted based on the parameters. For example, star signs -, -, and -, represent security, privacy, anonymization rules and policies, or a combination thereof, imposed on the closures and the signs -represent the security, privacy, anonymization rules and policies, or a combination thereof imposed on closures by the user of UEs -, default by the manufacturer of UEs -, by the infrastructures -, by the clouds -, or a combination thereof, and associated with each closure -, -, and -respectively. Additionally, blocks -, -, and -represent capability evaluation by the capability evaluator  for one or more closures, and blocks -represent capability evaluation for one or more closure chains or functional flows. In the example of , the evaluation shows the capability requirements for closure based on the rules . In one embodiment, if capabilities is in accordance with rules , the capability is validated and the closure can be distributed (e.g. decryption allowed), however if capabilities contradicts any rule of rules , decryption of closure will be denied.","In one embodiment, the block represents a set of policies -and block represents combined security, privacy, anonymization rules of component  of the multi-level computation architecture. In this embodiment, if the policy module  detects a contradiction between the policies and the rules , the distribution of the closures (e.g. decryption of closures by component ) will be denied.","In one embodiment, a closure or a group of closures may lack access to security, privacy, anonymization rules for the verification of their encryption. For example, in  the closure is encrypted with no rules available. In this embodiment as seen by arrow , the distributed computation component that is executing branch  bypasses closure without decryption and executing the computation . The final results from closure decryption and execution of the three branches , , and  are aggregated by result aggregator  and forwarded to the requesting device.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIGS. 7A-7B","FIG. 7A","FIG. 7A"],"b":["117","111","107","107","117","119","707","107","107","705","705","709","119","5","707","119","3","4","117","705","705","107","1","107","2","3","4","107","107","713","713","111","715","715","713","713","717","717","117"],"i":["a ","b ","a ","a ","b ","a ","b","a ","a ","a ","b ","a ","b ","a ","b ","a ","b ","a","e ","a","b "]},"In one embodiment, the backend device may be equipped with a closure recycling and marshaling component  that monitors and manages any access to the computation closures store .","In one embodiment, the computation closures within environments , and the computation closures store  may be composed based on anonymous function objects and automatically created by a compiling system using methods for generating anonymous function objects such as lambda expressions.",{"@attributes":{"id":"p-0110","num":"0109"},"figref":["FIG. 7B","FIG. 7A","FIG. 1","FIG. 2","FIG. 3","FIG. 4"],"b":["713","713","713","723","107","107","723","103","1","723","749","723","749","741"]},"In another embodiment, the computation closure environment  has a developer experience module  that provides various tools for a developer for manipulating services offered by the UE . The tools may include standardized and\/or abstract data types and services allowing the developers to chain processes together across development platforms. In one embodiment, the developer experience module  provides cross platform support for abstract data types and services under the supervision of an identity based encryption platform  as discussed in . The agent Agent retrieves the computation closures required by the developer experience module  from the computation closures store  and stores the newly generated computation closures by the developer experience module  into the computation closures store  for distribution purposes per arrow .","In yet another embodiment, the computation closure environment  has a scalable computing module  that provides an abstract wrapper (i.e. monadic wrapper) for the migrating closures . This abstraction provides computation compatibility between the closures  and the UE . The abstract wrapper may provide scheduling, memory management, system calls and other services for various processes associated with the closures . These services are provided under the supervision of the identity based encryption platform  as discussed in . The agent Agent retrieves the computation closures required by the scalable computing module  from the computation closures store  and stores the newly generated computation closures by the scalable computing module  into the computation closures store  for distribution purposes per arrow . In one embodiment, the backend environment  may access the computation closures store  and exchange\/migrate one or more computer closures  between the computation closures store  and the backend computation closures store .",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 8","FIG. 5"],"b":["800","801","801","801","801","800","803","803","805","801","801","803","803","800"],"i":["a","d","a","d","a","d","a","d ","a","d "]},"In one embodiment, the identity based encryption platform  causes the segmentation of the computation closure  into, for example, a first part and second parts , , and . The identity based encryption platform  may also causes encryption of the second parts , , and using the first part as a public key of an identity-based encryption.","In one embodiment, distribution of process  includes distribution of closures -, combinators -and the process states  as independent elements into, for instance, an infrastructure environment . The independent closures -from infrastructure environment  may be distributed into different components -based on the capabilities of the components where they may be decrypted and executed.",{"@attributes":{"id":"p-0116","num":"0115"},"figref":["FIG. 9","FIG. 9"],"b":["107","107","903","1","2","903","905","1","2","107","907","1","909","1","913","911"],"i":["a ","a ","a"]},"It is assumed, in this example, that component of an infrastructure level (not shown) is selected by the identity based encryption platform  as a destination for closure distribution from UE , based on the capabilities such as, for example, availability of sufficient security, privacy, computational resources, bandwidth, energy, or a combination thereof. The extracted computation closure, closure_ is migrated to component following the assignment of a distribution path (similar to path  in , and is executed on component ","In one embodiment, the component receives the computation closure closure_ and extracts it from the computation closure store  using the Get command . The extracted closure_ is projected into a closure with the user device context and the object  is produced. The block  represents the reconstruction of the closure into the initial context by a component in charge of the execution. The aggregated context may then be executed in the run-time environment  of component by Agent.","In another embodiment, the UE and component may exchange places and the distribution is performed from the component to UE or both devices may be UEs. In this embodiment the decomposition and aggregation processes are similar to the above example.",{"@attributes":{"id":"p-0120","num":"0119"},"figref":["FIG. 10","FIG. 10"],"b":["1001","107","119","117"],"i":["a ","a "]},"In one embodiment, the UE may include RDF store , which holds computation closures for processes associated with the UE . Similarly the backend device may includes a RDF store , which holds computation closures associated with processes related to device , UEs -, or any other devices having connectivity to device or cloud .","In other embodiments, the Uniform Resource Identifiers (URIs)  in UE and  in backend device may be used to identify names or resources accessible to their respective devices via the communication network . Additionally, UE and backend device may have rule sets and that include security, privacy, anonymization rules imposed on device similar to rules -of . It is noted that the rule base of UE may be a subset of the rule base of the backend device , wherein the rules is a subset of a superset of rules managed by a cloud . Furthermore, the legacy codes associated with each device may be stored in legacy code memory areas and on UE and and on backend device ","In one embodiment, UE may be provided with a non-volatile memory space  as a closure store. The closure store  may include a set of closure primitives shown as geometric objects, similar to primitives of sets  or  of . Similarly, the backend device may be provided with a non-volatile memory space  as a closure store. The closure store  may also include a set of closure primitives shown as geometric objects. In one embodiment, the closure store  is a subset of closure store  determined, at least in part, based on one or more criteria such as time of access, frequency of access, a priority classification, security, privacy, anonymization settings, or a combination thereof, etc. The geometric shapes of closure stores  and  have been each divided into two groups of solidly filled geometric shapes (representing signed closures) and unfilled geometric shapes (representing unsigned closures). Since non-volatile memories are costly and require extensive resources (e.g. power consumption) compared with volatile memories (such as , , , and ), the capacity of non-volatile memory on a UE -is limited. However, a backend device , serving high numbers of users, may be equipped with larger volumes of non-volatile memory spaces. Because of the limited capacity of non-volatile memory spaces on UEs -, and also because differing levels of security, privacy, anonymization setup on various devices, only a subset of the closure store  is stored locally at the closure store  for local use by the UE . In order to minimize the number of times a UE  needs to retrieve one or more primitives from closure store  of device , the subset  is determined based on one or more criteria. In one embodiment, the closure store  may be determined as a set of the most frequently accessed closure primitives of closure store  by UE . In another embodiment, the closure store  may be determined as a set of the most recently accessed closure primitives of closure store  by UE . In other embodiments, various combined conditions and criteria may be used for determining subset  from set  as the content of closure store for UE . Furthermore, the closure stores  and  may be periodically synchronized. The synchronization of closure stores ensures that any changes (addition, deletion, modification, etc.) in closure primitives and in root elements of the signature lattice of closure store  are reflected in the closure store .","In one embodiment, for execution of a closure set  (a subset of closure store ) associated with a process on UE , the set  can be migrated under the supervision of the identity based encryption platform  and after verification of the security, privacy, anonymization of closures, or a combination thereof, and capabilities of the destination component, to the backend device which is a component of the infrastructure  (the distribution path shown as arrow ). The identity based encryption platform  may then inform the processing components of the UE , the backend device or a combination thereof (the processing components are not shown), that the security, privacy, anonymization, or a combination thereof, of closure primitives has been approved and the closures are ready for decryption and execution. Alternatively, the identity based encryption platform  may determine that the closures are not approved from point of view of the security, privacy, anonymization, or a combination thereof, and terminate their distribution, decryption and execution.","In one embodiment, any changes on the closure store  of the backend device (e.g., addition, deletion, modification, etc.) may first enter the URIs  via the communication network . The changes may then be applied from URIs  on closure store  shown by arrows -. Similarly, the closure store  is updated based on the content of the closure store  and the updates are shared with other authorized components within UE (e.g. with URIs  as shown by arrows -).","In one embodiment, the commonly accessible memory address space  is formed from the RDF stores  and  and the closure stores  and . The commonly accessible memory address space  can be accessed as a continuous memory space by each of the devices and ","The processes described herein for providing identity based encryption in distributed computations may be advantageously implemented via software, hardware, firmware or a combination of software and\/or firmware and\/or hardware. For example, the processes described herein, may be advantageously implemented via processor(s), Digital Signal Processing (DSP) chip, an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Arrays (FPGAs), etc. Such exemplary hardware for performing the described functions is detailed below.",{"@attributes":{"id":"p-0128","num":"0127"},"figref":["FIG. 11","FIG. 11"],"b":["1100","1100","1100","1100","1110","1100","1100"]},"A bus  includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors  for processing information are coupled with the bus .","A processor (or multiple processors)  performs a set of operations on information as specified by computer program code related to providing identity based encryption in distributed computations. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and\/or the computer system to perform specified functions. The code, for example, may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set (e.g., machine language). The set of operations include bringing information in from the bus  and placing information on the bus . The set of operations also typically include comparing two or more units of information, shifting positions of units of information, and combining two or more units of information, such as by addition or multiplication or logical operations like OR, exclusive OR (XOR), and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions, such as an operation code of one or more digits. A sequence of operations to be executed by the processor , such as a sequence of operation codes, constitute processor instructions, also called computer system instructions or, simply, computer instructions. Processors may be implemented as mechanical, electrical, magnetic, optical, chemical or quantum components, among others, alone or in combination.","Computer system  also includes a memory  coupled to bus . The memory , such as a random access memory (RAM) or any other dynamic storage device, stores information including processor instructions for providing identity based encryption in distributed computations. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory  is also used by the processor  to store temporary values during execution of processor instructions. The computer system  also includes a read only memory (ROM)  or any other static storage device coupled to the bus  for storing static information, including instructions, that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus  is a non-volatile (persistent) storage device , such as a magnetic disk, optical disk or flash card, for storing information, including instructions, that persists even when the computer system  is turned off or otherwise loses power.","Information, including instructions for providing identity based encryption in distributed computations, is provided to the bus  for use by the processor from an external input device , such as a keyboard containing alphanumeric keys operated by a human user, a microphone, an Infrared (IR) remote control, a joystick, a game pad, a stylus pen, a touch screen, or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus , used primarily for interacting with humans, include a display device , such as a cathode ray tube (CRT), a liquid crystal display (LCD), a light emitting diode (LED) display, an organic LED (OLED) display, a plasma screen, or a printer for presenting text or images, and a pointing device , such as a mouse, a trackball, cursor direction keys, or a motion sensor, for controlling a position of a small cursor image presented on the display  and issuing commands associated with graphical elements presented on the display . In some embodiments, for example, in embodiments in which the computer system  performs all functions automatically without human input, one or more of external input device , display device  and pointing device  is omitted.","In the illustrated embodiment, special purpose hardware, such as an application specific integrated circuit (ASIC) , is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor  quickly enough for special purposes. Examples of ASICs include graphics accelerator cards for generating images for display , cryptographic boards for encrypting and decrypting messages sent over a network, speech recognition, and interfaces to special external devices, such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.","Computer system  also includes one or more instances of a communications interface  coupled to bus . Communication interface  provides a one-way or two-way communication coupling to a variety of external devices that operate with their own processors, such as printers, scanners and external disks. In general the coupling is with a network link  that is connected to a local network  to which a variety of external devices with their own processors are connected. For example, communication interface  may be a parallel port or a serial port or a universal serial bus (USB) port on a personal computer. In some embodiments, communications interface  is an integrated services digital network (ISDN) card or a digital subscriber line (DSL) card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments, a communication interface  is a cable modem that converts signals on bus  into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example, communications interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN, such as Ethernet. Wireless links may also be implemented. For wireless links, the communications interface  sends or receives or both sends and receives electrical, acoustic or electromagnetic signals, including infrared and optical signals, that carry information streams, such as digital data. For example, in wireless handheld devices, such as mobile telephones like cell phones, the communications interface  includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments, the communications interface  enables connection to the communication network  for providing identity based encryption in distributed computations provided to the UEs -in sets -","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing information to processor , including instructions for execution. Such a medium may take many forms, including, but not limited to computer-readable storage medium (e.g., non-volatile media, volatile media), and transmission media. Non-transitory media, such as non-volatile media, include, for example, optical or magnetic disks, such as storage device . Volatile media include, for example, dynamic memory . Transmission media include, for example, twisted pair cables, coaxial cables, copper wire, fiber optic cables, and carrier waves that travel through space without wires or cables, such as acoustic waves and electromagnetic waves, including radio, optical and infrared waves. Signals include man-made transient variations in amplitude, frequency, phase, polarization or other physical properties transmitted through the transmission media. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, CDRW, DVD, any other optical medium, punch cards, paper tape, optical mark sheets, any other physical medium with patterns of holes or other optically recognizable indicia, a RAM, a PROM, an EPROM, a FLASH-EPROM, an EEPROM, a flash memory, any other memory chip or cartridge, a carrier wave, or any other medium from which a computer can read. The term computer-readable storage medium is used herein to refer to any computer-readable medium except transmission media.","Logic encoded in one or more tangible media includes one or both of processor instructions on a computer-readable storage media and special purpose hardware, such as ASIC .","Network link  typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example, network link  may provide a connection through local network  to a host computer  or to equipment  operated by an Internet Service Provider (ISP). ISP equipment  in turn provides data communication services through the public, world-wide packet-switching communication network of networks now commonly referred to as the Internet .","A computer called a server host  connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example, server host  hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system  can be deployed in various configurations within other computer systems, e.g., host  and server .","At least some embodiments of the invention are related to the use of computer system  for implementing some or all of the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more processor instructions contained in memory . Such instructions, also called computer instructions, software and program code, may be read into memory  from another computer-readable medium such as storage device  or network link . Execution of the sequences of instructions contained in memory  causes processor  to perform one or more of the method steps described herein. In alternative embodiments, hardware, such as ASIC , may be used in place of or in combination with software to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware and software, unless otherwise explicitly stated herein.","The signals transmitted over network link  and other networks through communications interface , carry information to and from computer system . Computer system  can send and receive information, including program code, through the networks ,  among others, through network link  and communications interface . In an example using the Internet , a server host  transmits program code for a particular application, requested by a message sent from computer , through Internet , ISP equipment , local network  and communications interface . The received code may be executed by processor  as it is received, or may be stored in memory  or in storage device  or any other non-volatile storage for later execution, or both. In this manner, computer system  may obtain application program code in the form of signals on a carrier wave.","Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor  for execution. For example, instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system  receives the instructions and data on a telephone line and uses an infra-red transmitter to convert the instructions and data to a signal on an infra-red carrier wave serving as the network link . An infrared detector serving as communications interface  receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus  carries the information to memory  from which processor  retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory  may optionally be stored on storage device , either before or after execution by the processor .",{"@attributes":{"id":"p-0142","num":"0141"},"figref":["FIG. 12","FIG. 11"],"b":["1200","1200","1200","1200","1200","1200"]},"In one embodiment, the chip set or chip  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays (FPGA), one or more controllers, or one or more other special-purpose computer chips.","In one embodiment, the chip set or chip  includes merely one or more processors and some software and\/or firmware supporting and\/or relating to and\/or for the one or more processors.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein to provide identity based encryption in distributed computations. The memory  also stores the data associated with or generated by the execution of the inventive steps.",{"@attributes":{"id":"p-0146","num":"0145"},"figref":["FIG. 13","FIG. 1"],"b":"1301"},"Pertinent internal components of the telephone include a Main Control Unit (MCU) , a Digital Signal Processor (DSP) , and a receiver\/transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit  provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of providing identity based encryption in distributed computations. The display  includes display circuitry configured to display at least a portion of a user interface of the mobile terminal (e.g., mobile telephone). Additionally, the display  and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry  includes a microphone  and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone  is fed to a coder\/decoder (CODEC) .","A radio section  amplifies power and converts frequency in order to communicate with a base station, which is included in a mobile communication system, via antenna . The power amplifier (PA)  and the transmitter\/modulation circuitry are operationally responsive to the MCU , with an output from the PA  coupled to the duplexer  or circulator or antenna switch, as known in the art. The PA  also couples to a battery interface and power control unit .","In use, a user of mobile terminal  speaks into the microphone  and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter (ADC) . The control unit  routes the digital signal into the DSP  for processing therein, such as speech encoding, channel encoding, encrypting, and interleaving. In one embodiment, the processed voice signals are encoded, by units not separately shown, using a cellular transmission protocol such as enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, and the like, or any combination thereof.","The encoded signals are then routed to an equalizer  for compensation of any frequency-dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream, the modulator  combines the signal with a RF signal generated in the RF interface . The modulator  generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission, an up-converter  combines the sine wave output from the modulator  with another sine wave generated by a synthesizer  to achieve the desired frequency of transmission. The signal is then sent through a PA  to increase the signal to an appropriate power level. In practical systems, the PA  acts as a variable gain amplifier whose gain is controlled by the DSP  from information received from a network base station. The signal is then filtered within the duplexer  and optionally sent to an antenna coupler  to match impedances to provide maximum power transfer. Finally, the signal is transmitted via antenna  to a local base station. An automatic gain control (AGC) can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone, any other mobile phone or a land-line connected to a Public Switched Telephone Network (PSTN), or other telephony networks.","Voice signals transmitted to the mobile terminal  are received via antenna  and immediately amplified by a low noise amplifier (LNA) . A down-converter  lowers the carrier frequency while the demodulator  strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer  and is processed by the DSP . A Digital to Analog Converter (DAC)  converts the signal and the resulting output is transmitted to the user through the speaker , all under control of a Main Control Unit (MCU)  which can be implemented as a Central Processing Unit (CPU).","The MCU  receives various signals including input signals from the keyboard . The keyboard  and\/or the MCU  in combination with other user input components (e.g., the microphone ) comprise a user interface circuitry for managing user input. The MCU  runs a user interface software to facilitate user control of at least some functions of the mobile terminal  to provide identity based encryption in distributed computations. The MCU  also delivers a display command and a switch command to the display  and to the speech output switching controller, respectively. Further, the MCU  exchanges information with the DSP  and can access an optionally incorporated SIM card  and a memory . In addition, the MCU  executes various control functions required of the terminal. The DSP  may, depending upon the implementation, perform any of a variety of conventional digital processing functions on the voice signals. Additionally, DSP  determines the background noise level of the local environment from the signals detected by microphone  and sets the gain of microphone  to a level selected to compensate for the natural tendency of the user of the mobile terminal .","The CODEC  includes the ADC  and DAC . The memory  stores various data including call incoming tone data and is capable of storing other data including music data received via, e.g., the global Internet. The software module could reside in RAM memory, flash memory, registers, or any other form of writable storage medium known in the art. The memory device  may be, but not limited to, a single memory, CD, DVD, ROM, RAM, EEPROM, optical storage, magnetic disk storage, flash memory storage, or any other non-volatile storage medium capable of storing digital data.","An optionally incorporated SIM card  carries, for instance, important information, such as the cellular phone number, the carrier supplying service, subscription details, and security information. The SIM card  serves primarily to identify the mobile terminal  on a radio network. The card  also contains a memory for storing a personal telephone number registry, text messages, and user specific mobile terminal settings.","While the invention has been described in connection with a number of embodiments and implementations, the invention is not so limited but covers various obvious modifications and equivalent arrangements, which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims, it is contemplated that these features can be arranged in any combination and order."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments of the invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 6A-6B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 7A-7B"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
