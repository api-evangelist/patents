---
title: Method for client configuration management in remote computing
abstract: A method and apparatus for endpoint configuration management comprising receiving an endpoint topology and storing the endpoint topology in a configuration store, modifying a configuration for a remote session to conform to the endpoint topology and corresponding the configuration to the endpoint topology in the data structure and presenting to the endpoint the modified configuration of the remote session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09081746&OS=09081746&RS=09081746
owner: Teradici Corporation
number: 09081746
owner_city: Burnaby, British Columbia
owner_country: CA
publication_date: 20121016
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of the present invention relate generally to a method and apparatus for client configuration management in remote computing.","2. Description of the Related Art","User profiles, adaptive hypermedia (AH) and web personalization techniques generally store descriptions related to the characteristics of people in order to personalize human-computer interaction or apply administrative policies across groups of users. Device profiles generally comprise simple sets of device attributes assigned to a user or a specified enterprise access device such as a phone that, when applied to a device, restrict or tailor its capabilities.","However, these techniques fail to address many challenges faced by the modern employee who desires effective access to a mix of remote enterprise, personal, or cloud-based computing resources using any from a variety of client devices without the need to continuously re-configure or adjust back-end desktops or applications to most effectively utilize the capabilities of the client topology at hand. Therefore, there is a need in the art for a method and apparatus that manages client configurations according to the immediate needs of computer users.","Embodiments of the present invention generally relate to a method for endpoint configuration management comprising receiving an endpoint topology and storing the endpoint topology in a configuration store, modifying a configuration for a remote session to conform to the endpoint topology and corresponding the configuration to the endpoint topology in the data structure and presenting to the endpoint the modified configuration of the remote session.","Further embodiments of the present invention generally relate to an apparatus for endpoint configuration management comprising a configuration manager for receiving an endpoint topology and storing the endpoint topology in a configuration store, modifying a configuration for a remote session to conform to the endpoint topology and corresponding the configuration to the endpoint topology in the data structure and a connection manager for presenting to the endpoint the modified configuration of the remote session.","The invention may be implemented in numerous ways, including as a process, an article of manufacture, an apparatus, a system, and as a set of computer-readable descriptions and\/or instructions embedded on and\/or in a computer-readable medium such as a computer-readable storage medium. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. The Detailed Description provides an exposition of one or more embodiments of the invention that enable improvements in features such as performance, power utilization, cost, scalability, efficiency, and utility of use in the field identified above. The Detailed Description includes an Introduction to facilitate the more rapid understanding of the remainder of the Detailed Description. The invention encompasses all possible modifications and variations within the scope of the issued claims.","The term processor as used herein refers to any type of processor, central processing unit (CPU), microprocessor, microcontroller, embedded processor, media processor, graphics processor, or any other programmable device capable of executing and\/or interpreting instructions in a form of software (such as microcode, firmware and\/or programs).","The term software as used herein refers to any type of computer-executable instructions for any type of processor, such as programs, applications, scripts, drivers, operating systems, firmware, and microcode. Computer-executable instructions include any types of instructions performed by a processor, such as binary instructions that are directly performed, instructions that are translated and\/or decoded prior to being performed, and instructions that are interpreted.","The term \u2018physical topology\u2019 as used herein generally refers to the physical attributes of a client endpoint including a unique identifier (typically a MAC address), an identification of supported remote computing protocol versions, a display configuration (e.g. quantity, layout and native resolution of displays) and peripheral device configuration (e.g. device descriptions). A topology may present additional attributes such as memory information, cache information, decoder attributes, client endpoint application descriptions and the like.","The term \u2018topology preference\u2019 as used herein refers to a stored preference such as a language preference, time zone preference, peripheral device preference (e.g. mouse sensitivity or audio preference), image quality or a security setting. Some topology preferences may be user programmable while others are generally enforced by administrative policies.","The term \u2018session\u2019 as used herein generally refers to a 1:1 computing connection between a client's user interface and a \u2018session host\u2019 comprising one of i) a local operating system, ii) a local application, iii) a remote computer, iv) a hosted desktop or v) a hosted application. In some Universal Communications (UC) embodiments, a session comprises a voice or video connection between a client and a UC client elsewhere on the network.","The term \u2018configuration\u2019 as used herein refers to a uniquely identified set of topology and session preferences that may be applied to a client and\/or associated session host.","The term \u2018computing resources\u2019 as used herein refers to any of local operating system, local application, remote computer, hosted desktop or hosted application resources.","Introduction","In one or more embodiments of the present invention, a computing system, such as system  in , comprises a connection server configured to facilitate the establishment of computing sessions by mapping the physical topology attributes of client devices, including display topology and peripheral device attributes, to desired computing configurations managed by the connection server. Such computing configurations include user-defined preferences such as display layout and connection rules in addition to administrative policies such as accessibility restrictions. A user initiates a session with the connection server with one or more hosted desktops or one or more hosted applications. A hosted desktop is a desktop computing environment which is hosted by a remote server and delivers all applications and other functionality from the server to the client in the hosted desktop. A hosted application is a single application which is hosted by a remote server and delivers a single application in addition to other functionality from the server to the client in the application.","As an example, when a user accesses a hosted desktop from a first client (e.g. a client comprising multiple displays), one or several application windows are presented in a desired layout on the displays which is retained as configuration information, typically by the connection server. When the user accesses the same hosted desktop from a second client (e.g. a less capable mobile client), a different layout of application windows is presented on the mobile display which might require automatic launch of some applications and automatic termination or window minimization of others. The user is later enabled to select a best matching configuration when returning to the first client. Such a best matching configuration may include the last used configuration at the same client, a last used configuration intelligently mapped from a different client or a pre-defined configuration associated with the user's present role or activity.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 1","b":["100","100","100","110","140","150","160","170","130","112","110","100","114","130"]},"According to one embodiment, the client  comprises a computer  coupled to displays  (shown as a display - and a display -) and peripheral devices including for example a keyboard  and a mouse . Computer  comprises processor, memory and software or firmware suitable for executing one or several remote computing client protocols. Embodiments of computer  include workstation computers, thin client terminals or zero client terminals. Alternative embodiments of client  may comprise any different number of displays supported by computer  and may further comprise additional peripheral devices such as microphone and\/or speakers, printer, personal music players, webcam and the like coupled to computer  using an interface such as USB. Alternative embodiments of client  comprise a projection device with embedded or co-located computer  with projection screen and wireless peripheral devices as might be utilized in a meeting room or conference facility.","A user of system  may access hosted desktop  or hosted application  from any of various clients such as one of a portable computer  (e.g. a laptop, an ultra-book or the like), a mobile client  (e.g. a smartphone or tablet computer) or an entertainment client such as television  with remote control  or gaming apparatus such as XBOX, PLAYSTATION or the like, any of which is enabled to execute at least one remote computing client protocol and connect to network  by wired or wireless means. In some embodiments, a mobile client  is enabled to connect to network  via either wireless LAN (W-LAN e.g. 802.11) or cellular (e.g. 3G data protocols) dependent on location and the applied computing configuration.","System  comprises a connection server  such as a rack mounted server enabled to execute connection management software including one or more connection managers (shown as a connection manger - and a connection manager -) and endpoint configuration manager  and further enabled to store computing configurations i.e. \u201cconfigurations\u201d in configuration store  which may comprise any suitable database structure accessible by a query language such as SQL, according to one embodiment. The connection manager  generally manages lists or pools of users, desktops and application resources and facilitates the establishment of secure and authorized connections between authenticated clients and hosted applications. According to one embodiment, one or more connection managers, including those from service providers or well-known enterprise brokers such as VMware VIEW connection server, Citrix Desktop Studio or Ericom BLAZE are enhanced to accept client-originated user credentials from endpoint configuration manager  and present available hosted applications to endpoint configuration manager  for parsing and presentation to the client. The endpoint configuration manager  provides rule-based mapping of configurations comprising available computing resources and client topology preferences using methods described herein. A structured approach to mapping enables users to tailor endpoint environments to their immediate roles (e.g. \u201cMy Laboratory Configuration\u201d, \u201cMy Consultation Office\u201d; \u201cMy Surgery Room\u201d, \u201cMy Office Cubicle\u201d, \u201cMy Home TV Desktop\u201d etc.), move around between endpoints while maintaining desired configurations or changing roles and efficiently migrating desired preferences from one client endpoint to another.","In various embodiments, the connection manager  and endpoint configuration manager  are executed by different connection servers  which are nevertheless coupled by network . In different embodiments, the connection manager  and endpoint configuration manager  comprise virtualized appliances configured to run directly on a hypervisor such as ESX or server application software compatible with standard server operating systems such as LINUX or Microsoft WINDOWS SERVER products. Configuration store  stores various data described herein typically stored on non-volatile media such as disk or solid state drives (SSD) local to the connection server  or a network accessible storage apparatus coupled to network . In some embodiments, clients ,  or  contain data structures in local memory for storage of endpoint configuration information or topology preferences (i.e. a portion of store ) that enables the client to determine an appropriate endpoint configuration in the absence of immediate accessibility to store .","The network  comprises a communication system (e.g., the Internet, local area network (LAN), wireless LAN, wide area network (WAN), and the like) that connects computer systems completely by wire, cable, fiber optic, and\/or wireless links facilitated by various types of well-known network elements, such as hubs, switches, routers, and the like. In one embodiment, the network  may be a shared packet switched network that employs various well-known protocols (e.g., TCP\/IP, UDP\/IP and the like) to communicate information amongst the network resources. For example, in various embodiments, the network  employs part of the Internet.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 2","FIG. 2"],"b":["120","220","210","230","232","130","210","210","210","124","126","126","122","140","150","160","126"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 3","b":["112","310","320","112","330","340","124","320","312","310","310","124","312","140","144","312","320","322","110","160"]},"In some embodiments, the host connection service  provides interface  (e.g. an Application Programming Interface (API)) to the underlying desktop operating system for exchanging commands that prepare the desktop according to a negotiated configuration (e.g. launch select applications, terminate other select applications, minimize select applications, modify the window layout position or z-ordering (ordering of overlapping windows in a display), set a specified application to full screen view, adjust audio preferences, adjust cursor sensitivity, adjust desktop wallpaper or icon placement, set default printer device, set active network interface such as WiFi\/3G or other programmable preferences related to the operating-system). Host connection services  may retrieve application information (e.g. a list of available applications) for sharing with the endpoint configuration manager, typically as a prequel to mapping a configuration.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 4","b":["142","410","420","402","430","404","432","130","430","430","410","142","430","434","144","436","146","148","434"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 5","b":["410","140","140","150","410","550","550","1","550","2","320","410"]},"For example, client  may connect to hosted desktop  using a PCOIP protocol connection while simultaneously connected to hosted application  using a XENDESKTOP connection. Desktop Manager  operates in conjunction with image decoder, optional scaler  used for scaling client-rendered protocols and graphics processor to compose different desktop and\/or application sessions as movable windows on one or more displays . Generally, the client connection services  (shown as a connection service - and a connection service -) initiate requests with pre-assigned connection managers  to establish remote sessions or local sessions such as a session between client agent  and a local operating system or a local device such as a smartphone or tablet device. In some embodiments, for example if a child session is logically coupled to a different parent session, the child session is initiated by a connection manager  and presents configuration options to the user as described later herein. Device manager  manages the interface between peripheral device termination services (e.g. local HID class drivers or device redirection drivers associated with HID drivers executed by a remote desktop) and the client protocol engines  by bridging peripheral device information to the active computing session (e.g. the session window deemed to be \u2018in focus\u2019 as determined by the pointer location) or directing the peripheral device information to a session associated with a local operating system or attached device.","Topology store  stores data structures for storing physical topology attributes such as network MAC information, display attributes (e.g. resolution and display topology order), application descriptions or a list of protocol versions supported by client . Client configuration services  support user login functions for establishing sessions and provides utilities such as local menus and\/or a browser that enable users to save desired configuration information including topology preferences (e.g. keyboard language preferences) and window layout for subsequent retrieval at the same client or replication on a different client. Such preferences may be stored as encrypted topology information on topology store  or uploaded to configurations data store  via a suitable connection such as a management connection between configuration service  and endpoint configuration manager . Client configuration services  may also provide client or network diagnostic functions, session management functions (e.g. session window maximize, session minimize, session thumbnail view, session status indication or metrics), physical topology change detection and notification services (e.g. notifying endpoint configuration manager  when devices are added or removed, network status monitoring, image quality metrics etc.) and additional support services.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 6","b":["122","540","600","610","602","620","1","620","2","612","1","612","2","602","620","610","612"],"i":"n "},"Referring to client data structures , each client determines its own physical attributes which are stored and made available to endpoint configuration manager  in order to map a suitable configuration to the client topology. For example, client  comprises topology attributes -, client  comprises topology attributes - and so on.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 7","b":["620","702","710","720","730","730","1","730","2","620","730","620","740","126"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 8","b":["630","630","150","630"]},"Administrative policies may also define constraints on a particular configuration (such as CPU, network, display access or other topology constraints) based on such user credentials. Local applications may be identified to facilitate selection (e.g. in preference over remote applications) if a suitable local application is available. In some embodiments, for a particular client, a distinction can be made between the topology attributes associated with a remote computing session and those topology attributes associated with the local operating system and applications. This enables a remote administrator to assign topology resources for local and remote applications as well as determine application availability from a broad perspective to allow remote selection of source applications, to redirect users to alternative clients (e.g. higher performance client with additional features) or to unlock additional client capabilities. Furthermore, such differentiated topology attributes provides a means for extracting usage statistics in terms of attributes and capabilities of a client portfolio, useful for infrastructure forecasts and so on.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 9","b":["710","710"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 10","b":["720","160"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 11","b":["730","1102","1110","150"]},"Session state  specifies whether a session is active and displayed, active and minimized or presented as a thumbnail image, whether a session is parked as might be the case when a multi-session configuration is mapped to a single session client or a null session once it has terminated. Session policies  comprise a variety of policies including auto-connect policy , security policies , administrative policies  and protocol policies . In an embodiment, auto-connect policy  specifies login credentials that facilitate automatic connection to a particular host. In another embodiment, auto-connect policy  defines an abstracted connection path that enables a configuration with multiple sessions to be mapped to a client that only supports a single session. In such an embodiment, the policy identifies a host intermediary (e.g. a VM) enabled to provide both client agent and remote computing agent services.","The host intermediary terminates the multiple sessions to hosted applications and simultaneously proxies as an application host that presents a single session connection to the current endpoint. Security policies  may be used to set encryption criteria or access policies that restrict the session by criteria such as client identity, location information, session-in-session limitations and the like. Security policies  may define constraints on how data is shared with other sessions. One such \u201ccut and paste\u201d policy defines whether data may be \u201ccut\u201d or \u201ccopied\u201d from the present session (including for example a whitelist of authorized recipient sessions or a blacklist or unauthorized recipient sessions) or similarly rules for \u201cpasting\u201d such data in from another session.","Administrative policies  may include \u2018time-of-day\u2019 based access regulations, parental controls such as session duration limitations and other administrative policies such as constraints on the available topology resources. Another administrative policy controls visibility of specific configurations  and\/or sessions  in accordance with the active security policy. Protocol policies  may be used to store attributes and restrictions for the protocols associated with the session  and rules for managing endpoint disparity or client setup when connected to a host with limited capabilities. Such attributes include image and audio bandwidth, frame rate, image quality, authorized peripherals and so on. An exemplary rule for managing endpoint disparity manages the difference between video resources (e.g. Video RAM) available to the computing application and display attributes (e.g. number and resolution of displays) of the client topology.","If a hosted desktop has a limited size video memory for only one display as an example, but the client topology comprises 2 or 4 displays configured as a multi-monitor resource, a rule is used to limit the session to only one display in accordance with the hosted desktop capability. The rule might further dictate selection of a specific default display for the best user experience. Other such rules for dealing with host limitations might suitably be addressed via administrative policies since an administrator typically determines the capabilities of a host associated with a hosted desktop or application. In some embodiments, protocol policies  prescribe CPU, memory or network constraints on the available client resources which enables managed sharing of such client resources amongst competing sessions.","Operating system configuration  includes display settings  which stores display scaling information, desktop settings  store icon positions, wallpaper preferences, aero glass preferences and other settings such as audio volume, default language, keyboard layout, HID settings such as touch sensitivity and so on. Disconnect rules  provide session termination instructions which specify whether a hosted desktop is disconnected (with applications active), logged off (applications terminated), shut down or restarted. Each session  generally comprises at least one window  (shown as a window - and a window -) utilized to store window attributes described further below. Session characteristics  provide information useful for endpoint configuration manager in selecting or advertising appropriate configurations and dependent sessions for a specified client. Such characteristics include performance analytics (delivered frame rate, latency, packet loss, image quality etc. and associated timestamps) useful in determining an optimum host location in relation to the client location, or usage patterns for the same session and concurrent sessions useful in advertising new configurations.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 12","b":["1150","1202","1252","730","620","1150","1254","112","1256"]},"Conversely disconnect rules  specify actions to be taken upon disconnection such as application termination. In some embodiments, window  comprises application information  which serves as a data store for the application associated with the window. As one example, a client (e.g. client ) comprises a software browser with browser storage facilities redirected to configuration store . Such an approach enables, for example, separation of cookies from the browser itself. This eliminates any possibility of residual user-related information being stored on the client once disconnected from network  which enhances the security of the client. However, the user continues to benefit from the convenience of cookies as they are retrieved from application information  when the user launches the browser from the same client at a later time or a compatible browser from a different client.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 13","b":["1300","1300","1302","1310","1310","630"]},"Process  proceeds to step  (\u201cMap Configuration\u201d) in which a suitable configuration  is selected for the client based on user ID  and mapping criteria. An embodiment of step  is described by process  in .","Process  proceeds to step  (\u201cConfigure Sessions and Windows\u201d) in which topology preferences  and network preferences  are applied to the client, the various sessions  and related windows  associated with the configuration  are parsed and the usage characteristics  for the configuration are updated. Session parsing typically comprises establishing a session defined by type  according to session policies . In some embodiments, the remote operating system or application is configured according to parameters associated with OS CONFIG  and application windows launched and configured according to window parameters . In some embodiments, a window may be associated with a child session in which case a \u201csession-in-session\u201d is launched. In other embodiments, so-enabled sessions are redirected to a host intermediary which proxies as a multi-session client.","In an embodiment in which a client supports multiple sessions, each session may be granted a \u201cvirtual portion\u201d of the client topology. On initialization, each session is assigned a default window layout and the corresponding hosted desktop or application is provided scaling information, window cropping criteria, device assignment, USB port assignment and the like. In some embodiments, USB ports are pooled such that devices may be utilized across sessions. Desktop scaling and cropping parameters for each session are exchanged within a session (i.e. directly between host and client) or facilitated by endpoint configuration manager  in different embodiments; window layout updates are provided to endpoint configuration manager  at intervals and\/or at disconnect for storage as window information  and utilization in conjunction with subsequent sessions. Given the hosted desktop is operating with \u201cvirtual topology\u201d information, layout information referenced in absolute co-ordinates is generally provided by the client.","In some embodiments in which a session comprises a child configuration or a session-in-session, process  proceeds to step  (\u201cspawn child configuration\u201d) otherwise process  proceeds to step . At step , a child configuration (comprising a full or partial set of session window and topology parameters as described for configuration ) associated with a second identified client (for example, as identified by window type information ) is used to establish one or more dependent sessions terminated at the second client. Endpoint configuration manager  may be required to initialize and authenticate the second client before establishing sessions or opening application windows. The connection status of child sessions are monitored so that sessions can be re-established in event of connection failures or interruptions and parent sessions can be terminated if a user initiates disconnection of the child session at step .","Process  proceeds to step  in which one or more local or remote computing and\/or application sessions are active. In event a change in configuration is detected (i.e. a change in physical topology or topology preferences, mobile location change or change in window or session state including addition or termination of sessions), the configuration is updated at step  and process  returns to step . In some embodiments in which a configuration is assigned to a role , other configurations associated with the role are updated to reflect the change in topology or preferences. At step , a new configuration may be defined or the existing configuration updated, for example as specified by a configuration update preference. Session characteristics  are updated to reflect changes in performance, usage patterns and so on for use in assisting the determination of new configurations. If windows are closed or sessions terminated, disconnect rules ( and ) are followed. After all sessions are terminated, process  ends at step . The user may be prompted to i) save the last used role or configuration (i.e. final window placement etc.) as the starting point for next use or ii) ignore configuration changes during step  and revert to the initial configuration (i.e. pre step ) at the subsequent log on.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 14","b":["1400","1320","1300","1410","1320","1134"]},"When such configurations or portions of configurations are culled and not presented in the same ordering as stored in the configuration store  based on security policy, endpoint configuration manager  is engaged to manipulate and parse available configurations before being presented at the client via the client configuration services . In some embodiments, a new role template comprising a pick list of available remote desktops and\/or remote applications and\/or local applications compatible with the physical client topology is generated for presentation and a configuration only saved once a user has selected one or more resources from the new role template. Configuration manager  may provide a secondary menu in which such best fit and sorting criteria are prioritized, \u2018auto-select\u2019 configurations are specified, the number of presented configurations regulated and so on. Map  below depicts ways in which a new configuration may be derived based on the user's role and\/or location (i.e. client identity).","In event no personalized configuration can be determined (for example in the case of a new user), method  proceeds to step  in which one or more default roles and associated configurations (as might be prescribed by a system administrator) are presented to the user. At step , the user selects one of the presented configurations and method  proceeds to step  in which the configuration is saved (in the event it is a newly determined configuration) and usage characteristics updated. In event a default role and configuration has been selected at step , the user may be prompted to give the role a personalized name for future access.","If, at step , one or more personalized configurations are determined, these are presented at step , following which one is selected at step . If, at step , the user seeks an alternative role or configuration (i.e. not currently presented), method  proceeds to selection step  in which either the user is presented with additional configuration options in an extended (or alternative) configuration list at step  or a new configuration is derived from a presented configuration at step . In an embodiment, step  comprises adding one or more computing resources and\/or deleting one or more other computing resources from one of the configurations presented at step  or  based on best fit or user-specified search criteria.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 15","b":["1500","126","1500","602","1502","1504","1506","1508","1512","1514","1516","1518","1510","1520"]},"Configuration  defines a user  (e.g. a laboratory technician) in his or her role  (e.g. conducting a scientific experiment A) using client  (e.g. a client in the laboratory with dual monitors) and a computing session defined by parameters  which might for example comprise a hosted desktop with several concurrent active application windows. Configuration  defines the user  in the same role  using client , for example a smartphone, to access the hosted desktop. However, configuration  may comprise different session attributes better matched to the capabilities of the smartphone. As an example, role  may be characterized by a single maximized application window that enables user  to monitor progress of Experiment A outside the laboratory. Configuration  defines user  in a different role  (e.g. conducing an experiment B) accessing computing resources from client . For example, configuration  may be characterized by display of a different maximized application window associated with the same hosted desktop, a different hosted desktop or a hosted application from an unrelated server.","Transformation  represents the mapping of configuration attributes between configurations  and  associated with role , transformation  represents the mapping of configuration attributes between configurations  and  associated with device  and transformation  represents the mapping of configuration attributes between configurations  and  associated with changes in both role and device. Each transformation observes transformation rules determined by white- and\/or blacklist administrative policies, user defined preferences and optionally best fit criteria based on usage characteristics  and session characteristics , enabling selective topology, network and session preferences to be maintained or mapped using best fit methods across a specified range of clients within a defined role or similarly across a specified range of roles for a determined client. As examples, language, printing or audio preferences, window positions, image quality, network bandwidth consumption, connection policies and routing preferences may all be managed across any selection of user roles and devices.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 16","b":["1600","126","1602","1510","1516","1602","126","1510","1602","1516","1602","1450","1462","1602","1516"]},"New configuration  is defined for a previously role  and a newly-identified client . In an embodiment, configuration  presents a best-fit transformation of preferences associated with previously defined devices for same role. Usage characteristics and preferences (i.e. topology, network and session preferences) for all configurations in role  are compared in view of administrative policies and a set of preferences is selected and\/or derived based on best fit rules. In a select embodiment, a new configuration selects alternative computing resources (e.g. a preferred hosted desktop or preferred hosted application location) based in part on the location of the newly-identified client in relation to computing resources in order to optimize quality of experience or use a preferred network path. In one such embodiment, the new configuration specifies a session with direct access to local applications (for example as advertised by physical topology attributes of a laptop client comprising a suite of office applications) as a substitute for a remote computing session in order to maximize user experience and limit bandwidth demands on the network.","New configuration  is defined for a newly-defined role  and a newly-identified client . One sorting strategy for presenting a new configuration  involves first determining which client device in map  has best matching physical topology attributes and deriving the new configuration from the most recently- or actively-used role associated with the best matching client.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 17","b":["1710","1720","110","1722","1724","160","1712","160","1724","1734","1252"]},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 18","b":["1830","1810","1820","110","1822","1824","160","1812","160","1824","1834","1252","1612","126","1820","1830","1822","1810","1812"]},{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 19","b":["150","1910","1920","110","1922","150","1912","150","1910","150","1932","1910"]},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 20","b":["2000","2010","122","126","124","1","2020","124","2","124","3","2050","1","250","2","2050","3","124","4","2030"]},{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 21","b":["2100","2110","2112","2114","2112","2114","2116","2100","2110","2114","710","720","2110","2112","2118","2120"]},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 22","b":["2200","2210","2212","2016","2012","2114","2116","2212","2250","2250","2262","2264","2210","2262"]},{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 23","b":["2300","126","2310","2210","2262","2312","2112","126"]},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 24","b":["2400","2270","2250","2400","2210","2262","2410","2420","2412","2422","2412"]},{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 25","b":["2500","2502","2120","2100","2520","2502","2502","2116","2502","2504","740","1160","2510"]},"While the foregoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features of the present invention can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to embodiments, some of which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 25"}]},"DETDESC":[{},{}]}
