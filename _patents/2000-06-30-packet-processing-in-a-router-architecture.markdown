---
title: Packet processing in a router architecture
abstract: A routing architecture comprising at least one or more switches for packet switching and a controller for controlling the switches is proposed. A packet is received by the controller through the switch as if the switch is located in the controller.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06879587&OS=06879587&RS=06879587
owner: Intel Corporation
number: 06879587
owner_city: Santa Clara
owner_country: US
publication_date: 20000630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["This invention relates to packet processing in a router architecture.","A conventional single-box router processes packets that need to be switched (or forwarded) as well as packets that contain control information called control packets for computing routing tables. A routing table keeps track of routes to particular network destinations. Packet switching includes the sending of data information in packets, through a network, to a remote location. Each packet of data information has a unique source address and carries its own destination address.","A conventional router has a device-driver that controls network interface cards located in the router. The device-driver handles communication between the interface cards between remotely located devices and a networking stack in the router. The networking stack is a stack of software layers such as IP (internet protocol), TCP\/UDP (transmission control protocol\/user datagram protocol), and socket library (application programming interface library) between networking applications and the device-driver. A packet traverses the networking stack to be delivered to a networking application, which handles the processing of control packets of a networking device.","A router architecture described below separates the processing of packet switching (or forwarding) from the processing of control packets.  shows an implementation of a distributed router architecture  in which switches ,  for handling packet switching and a controller  for processing control packets are distributed across a network such as an Ethernet network . The controller  controls the switches , .","The distributed router architecture  may be made compatible with networking applications , such as telnet, that work in a conventional router. One way is by keeping the distributed switches ,  as hidden from the networking applications . Otherwise, the networking applications  would require modification to work under the distributed architecture. Hiding the fact that the switches ,  are distributed can provide a single router view of the switches ,  to the networking applications . From the perspective of the networking applications , packets may appear to come from a router and not through a separate switch.","A known single-box router contains network interfaces, each controlled by a device-driver. In the distributed router architecture , the network interfaces that communicate with other routers or hosts are placed in the switches , , but not in the controller .  shows network interfaces A, B, and C located in the switch  and network interfaces D and E located in the switch . To \u201chide\u201d the fact that the switches are distributed over the Ethernet , a pseudo device-driver  can be introduced in the controller . The pseudo device-driver  causes control packets, which are packets containing routing information for computing routing tables, to be delivered to the networking stack (e.g. socket library , TCP\/UDP , and IP ) of the controller  as if coming from virtual interfaces Av, Bv, Cv, Dv, or Ev in the pseudo device-driver . Each virtual interface corresponds to an interface present in a switch. For example, the virtual interface Av in the controller  corresponds to the interface A in the switch , and so on. To the networking applications , the controller  appears to be a conventional single-box router with as many interfaces as there are in all the switches.","A control packet that is received by one of switch's interfaces can be relayed to the controller  and appear as input to its corresponding virtual interface. Conversely, a control packet sent out through one of the virtual interfaces in the controller  can be relayed to an appropriate switch containing the corresponding interface. The receiving and sending of packets as described above can be accomplished using an IP encapsulation protocol termed a virtual interface protocol (VIP). The VIP is implemented by a VIP module  located in the controller  and VIP modules  and  located in the switches  and , respectively. The encapsulation carries frames of one protocol which includes as the data in another protocol.",{"@attributes":{"id":"P-00010","num":"00010"},"figref":"FIG. 1","b":["100","500","502","1","100","2","100","106","500","3","106","500","102","4","500","514","102","512","5","512","510","6","510","508","7","508","510","510","100","8","10","510","506","504","502"]},{"@attributes":{"id":"P-00011","num":"00011"},"figref":["FIG. 2","FIG. 2"],"b":["502","11","13","502","504","506","510","14","510","15","512","200","512","200","200","514","16","200","202","17","202","206","206","18","204","19","204","20"]},"In the foregoing example, the controller  and the switches ,  were distributed across the Ethernet . However, the controller  and the switches ,  can be tightly coupled using a high-speed switching fabric instead of being distributed. The routing architecture and the method described above can also be employed for the tightly coupled controller and the switches.","Routing architectures represented by the distributed architecture  and the tightly coupled architecture are scalable, provide a single point of management at the controller, and reduce the load on the network. Additionally, the logic circuit of the switches ,  can be made simpler and more efficient. The foregoing distributed architecture can be implemented in any Network Operating System (NOS) without any changes to its networking stack and routing infrastructure such as routing protocols or a routing table manager. Any networking application that works in an NOS will work without any changes in the exemplary disclosed architecture. The distributed architecture would also be useful in creating a number of applications such as firewalls for distributed switches with the feature of single point management.","The foregoing techniques can be implemented, for example, in a computer program executable on a computer. The computer program can be stored on a storage medium, such as random access memory (RAM), readable by a general or special purpose programmable computer, for routing packets under the exemplary disclosed architecture.","Other implementations are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":{"@attributes":{"id":"P-00005","num":"00005"},"figref":"FIGS. 1 and 2"}},"DETDESC":[{},{}]}
