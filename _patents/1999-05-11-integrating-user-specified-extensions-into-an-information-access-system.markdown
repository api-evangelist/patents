---
title: Integrating user specified extensions into an information access system
abstract: A method and apparatus is provided for securely executing access control functions that may be customized by or on behalf of administrators of information access systems. Examples of such functions include changing a password of a user, determining whether or not data specifying a user and a password identifies an authentic user, and displaying a message indicating whether a login attempt was successful. An access control function is mapped to a digital signature. The digital signature is used to verify that an executable element retrieved for executing the access control function is the proper executable element. The access control functions may be invoked upon the occurrence of access control events, such as a user successfully logging onto an information access system or the modification of a user's password. A mapping contains data used to determine what events are tied to what access control functions, and whether the access control function should be executed. Upon the occurrence of an extension event that is tied to an extension, an executable element for the extension is retrieved. After executing an extension, data is returned to the caller of the extension. The returned data may be a hash table that includes other objects, such as strings or even other hash tables. The access control functions are developed in manner that exploits the power and simplicity of the inheritance feature of object oriented programming.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07155737&OS=07155737&RS=07155737
owner: Entrust, Inc.
number: 07155737
owner_city: Plano
owner_country: US
publication_date: 19990511
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Overview of Access Control System","Protected Server","Integration Tools","Access Server\/Detecting Extension Events","Other Extension Events","Extension Implementations","Values Returned by Extensions","Cookies","Secure_Cookies","Specialized_Fields","Hookcomm","Exceptions","Hook Configuration Mapping","Implementing Extensions","Securely Invoking Extensions","Hardware Overview","Appendix 1\u2014Access Control Library Public API","Appendix 2\u2014Exception Handling"],"p":["This invention generally relates to methods of controlling access to protected information resources in a network environment. The invention relates more specifically to methods, apparatus, and products for integrating extensions into a system that provides secure and selective access to network resources based on a role of a user of the resources.","Computer networks have become ubiquitous in business, industry, and education. Networks have one or more resources, such as application programs that provide various computing functions, which are available to all users. Organizations that operate networks are referred to as network operators.","Development of the globally accessible, packet-switched network known as the Internet has enabled network resources to become available worldwide. Development of hypertext protocols that implement the World Wide Web (\u201cthe Web\u201d) enables networks to serve as a platform for global electronic commerce. In particular, through the Web a business easily exchanges information with its customers, suppliers and partners worldwide. Because some exchanged information is valuable and sensitive, access to it should be limited to selected users. Thus, there is a need to provide selective access to network resources and information over the Web.","One approach to solve the foregoing problems is to provide each network resource or application program with an access control mechanism. Typically, the access control mechanism is commercial software, which is purchased as off-the-shelf software from vendors of access control mechanisms.","Commercial access control mechanisms have several advantages. First, they are developed by developers that specialize in network security. Second, businesses operating networks may purchase commercial access control mechanisms at a price much less than the cost of producing comparable software in house.","Vendors of commercial access control mechanisms develop access control functionality demanded by network operators. The functionality demanded varies between network operators. One approach to providing functionality that meets the varying demands is to incorporate, into the access control mechanisms, configuration mechanisms that enable network operators to customize security functions.","For example, access control mechanisms often request a valid password from a user who is requesting access to the network that is protected by the access control mechanism. Some network operators may desire that the password contain a relatively small number of characters, while other network operators may prefer more secure passwords, such as passwords that contain relatively larger number of characters that include both alpha and numeric characters. To meet the functionality desired by both groups of network operators, access control mechanisms may provide a configuration mechanism that enables network administers to specify the format of passwords.","Some security functionality is demanded by a relatively large subset of network operators, while other functionality is demanded by a relatively small subset of network operators. Vendors of access control mechanisms are more likely to develop the more heavily demanded functionality, and less likely to develop the less demanded functionality. Less demanded functionality is less economical for vendors to develop, and consequently, less likely to be offered commercially. Therefore there is a need for a mechanism that provides functionality that is less demanded or special to a particular set of network operators.","One approach to providing specialized functionality is the \u201cexternal call\u201d approach. Under the external call approach, the access control mechanism has an external call mechanism that invokes, under particular circumstances, software supplied by network operators themselves. This approach enables network operators to tailor commercial access control software to provide desired functionality.","For example, an external call mechanism may call a routine supplied by a network operator. The routine is called while logging in a user, after the user has supplied a valid password, but before access to the network is granted to the user. The access control mechanism expects the routine to return data that indicates whether or not access should be granted. When invoked, the routine accesses via the internet a service that verifies whether or not the user is a terminated employee of the network operator, and returns data that indicates whether access should be denied when the user is a terminated employee.","The external call approach, however, leaves network operators vulnerable to those who may maliciously alter externally invoked software, thereby circumventing the access control mechanism and exposing network resources. There is therefore a need to prevent the access control system from calling external call routines that have been altered maliciously or otherwise.","A method and apparatus is described for securely executing access control functions that may be customized by or on behalf of administrators of information access systems. Examples of such functions include changing a password of a user, determining whether or not data specifying a user and a password identifies an authentic user, and displaying a message indicating whether a login attempt was successful.","According to an aspect of the present invention, an access control function is mapped to a digital signature. The digital signature is used to verify that an executable element retrieved for executing the access control function is the proper executable element.","According to another aspect of the present invention, the access control functions may be invoked upon the occurrence of access control events. Examples of access control events are a user successfully logging onto an information access system or the modification of a user's password. A mapping contains data used to determine what events are tied to what access control functions, and whether the access control function should be executed. Upon the occurrence of an access control event that is tied to an extension, an executable element for the extension is retrieved. After executing an extension, data is returned to the caller of the extension. The returned data may be a hash table that includes other objects, such as strings or even other hash tables.","According to another aspect of the invention, the access control functions are developed in manner that exploits the power and simplicity of the inheritance feature of object oriented programming. Specifically, a superclass is established from which access control functions in the form of subclasses may be created. Subclasses of the superclass inherit the methods and attributes of the superclass.","A method and apparatus for controlling access to protected information resources is described. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one skilled in the art that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","A technique is described for securely executing customized access control functions implemented by administrators of information access systems. An access control function is software that performs functions related to managing access to resources on a network. Examples of such functions include changing a password of a user, determining whether or not data specifying a user and a password identifies an authentic user, and displaying a message indicating whether a login attempt was successful. Customized access control functions written by or for administrators of an information access system are referred to as extensions.","Extensions are developed in manner that exploits the power and simplicity of the inheritance feature of object oriented programming. Specifically, a superclass is established from which extensions in the form of subclasses may be created. Extensions that belong to subclasses of the superclass inherit the methods and attributes of the superclass.","Extensions may be invoked upon the occurrence of access control events, which are key events related to controlling access to information resources on a computer system. Examples of access control events are a user successfully logging onto an information access system or the modification of a user's password. Access control events for which an extension may be called are referred to extension events.","A Hook Configuration Mapping contains data that specifies which access control events are extension events, whether \u201cextension invocation\u201d is active for the extension event, and the one or more extensions tied to the extension event. When extension invocation is active for an extension event, the one or more extensions tied to the extension event will be invoked upon the occurrence of the extension event that is tied to the extensions. For each extension tied to an extension event, the data may specify whether extension invocation is active for the extension, the order of execution of the extension, and a signature for the extension. The signature uniquely identifies the contents of the element to a substantial degree of certainty. A Hook Configuration Mapping may be configured by, for example, system administrators to tie extensions to extension events, and to activate or inactivate extension invocation for a particular extension event.","Upon the occurrence of an extension event for which extension invocation is active, an executable element for each of the mapped extensions is retrieved. When each extension element is retrieved, a signature for the executable element is generated. The signature of the just retrieved executable element is compared to the signature mapped to the extension by the Hook Configuration Mapping. If the signatures match, then the executable element is executed.","After executing an extension, data is returned to the caller of the extension. The returned data may be a hash table that includes other objects, such as strings or even other hash tables.","By developing extensions, an access information system may be tailored to suit the individual needs and desires of organizations using the access information system. Extensions may developed to provide desired custom functionality. To ensure that the proper code element for an extension is loaded for execution, a signature generated for the code element is used to determine that the code element is the intended code to execute. The security of the protected computer system may not be comprised surreptitiously by altering extensions. In this manner, the security of the code and the computer system protected by the access information system are enhanced.","Extensions are called by an information access system when it detects the occurrence of extension events. It is therefore useful to describe an exemplary information access system, how its components and processes operate to not only secure information resources, but to detect the occurrence of extension events and to initiate the steps for executing the proper extensions.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 1","b":["2","2","106","108","114","115","104","112","2","104","2"]},"A browser  is coupled by a communication link to a network . The block shown for browser  represents a terminal, workstation computer, or an equivalent that executes a standard Web browser program or an equivalent, such as Netscape Navigator, Internet Explorer, or NCSA Mosaic. Network  is a compatible information communication network, preferably the Internet. In alternate embodiments, the browser  is a client process or client workstation of any convenient type, and the network  is a data communication network that can transfer information between the client and a server that is also coupled to the network.","The system  enables organizations to register information sources or Resources and register Users of the information in a central repository. A Resource is a source of information, identified by a Resource ID and a Uniform Resource Locator (URL), and published by a Web server either in a static file formatted using Hypertext Markup Language (HTML) or in a dynamically generated page created by a CGI-based program. Examples of resources include a Web page, a complete Web site, a Web-enabled database, and an applet.","The Registry Server  is coupled to a Registry Repository  that stores information about users and resources. Registry Server  is coupled by a secure communication link  to Access Server , which is coupled to network . Registry Server  has an Authentication Server Module that manages concurrent access of multiple users or browser  to Registry Repository . Registry Repository  is structured as a database. For example, the Registry Repository may be an SQL Server relational database management system, the Oracle7\u00ae database, etc. The Registry Server also contains an Access Control Library that is structured as a Java library.","An Access Control Library (\u201cACL\u201d) is used to make remote procedure calls to Registry Server . The Access Control Library also includes a Public API that enables application programmers or developers to customize system . For example, in the preferred embodiment, the ACL exports Java\u00ae classes called UserResourceMenu and UserAPI, which may be used by developers to provide several services.","The system  enables administrators to implement access rules by defining resource profiles or user profiles. System  automatically links a user profile to the resource profiles of the resources a user may access.","The system  enables Users to log-in to the system once, and thereafter access one or more Resources during an authenticated session. Users may log in either with a digital certificate or by opening a login page URL with a Web browser and entering a name and password. In the past, users have had to log in individually to each Web application that they are authorized to use. In the preferred embodiment, users always access the same login page regardless of the number of resources to which they need access. Thus, the system provides a mechanism of single secure log-in to Web resources. If the login attempt is successful, the system  presents the User with a Personalized Menu that assists the User in identifying and selecting a Resource.","Administration Application  contains Administration Application Modules, a Runtime Module, and an Access Control Library. The Administration Application Modules are structured as one or more HTML pages, CGI-based Java programs, or applets. The Runtime Module is structured as a C\/C++ web server plug-in.","A Protected Server  is coupled to Registry Server . The Protected Server  executes or supervises execution of an Administration Application , which functions to register and manage users and resources by reading and writing information to or from Registry Repository .","Integration Tools  includes source code, templates, and utilities which may be used by developers to customize and integrate system . Integration Tools  shall be explained in greater detail later. The Access Server  is a server that authenticates users of the access system .","When the user selects a resource, the browser sends an open URL request and cookie to a Protected Web Server. A Protected Web Server is a Web server with resources protected by the Runtime Module. The Runtime Module decrypts information in the cookie and uses it to verify that the user is authorized to access the resource. The cookie is also used by the resource to return information that is customized for the user.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2","b":["104","208","206","206","206"]},"The Access Control Library  provides access to the Registry Server . The Protected Server  executes an HTTP Server , which sends and receives requests or messages conforming to the Hypertext Transfer Protocol (HTTP). An example of the HTTP Server  is the public domain Apache Web server.","To associate a Protected Server  with system , the Administration Application  is used to enter information about the Protected Server. The information is stored in the Registry Repository .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 3","b":["115","115","2","115","342","344","344"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 4","b":["106","106","106","2","106","402","404","414","412","406","410"]},"Access Server  stores a log-in page which is used to receive data specifying a user name and a password. The Authentication Client Module  authenticates a user by verifying the name and password with the Registry Server .","Once a user has been authenticated, the Access Menu Module of the Access Server returns a Personalized Menu of the type described above.","HTTP Server  sends and receives messages and requests that conform to the HTTP protocol. Server API  enables external programs and processes to access functions of HTTP Server . The Authentication Client Module  functions to provide an Authentication Service, Login Tracking Service, Profile Management Service, Authorization Service, and Logout Service. Each service is structured as one or more HTML pages, or CGI-based Java programs. The Access Menu Module  provides a Personalized Menu Service. It is also structured as one or more HTML pages or CGI-based Java\u00ae programs. The Access Control Library  protects system resources and provides access to the Registry Server.","The Authentication Client Module  enables users to begin and end authenticated sessions and change their account profiles. The Authentication Service of Authentication Client Module  is invoked when a user opens the login page URL of system . The Authentication Service is also invoked when a user tries to access a protected resource  without first logging in.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 5A","b":["106","502","100","503","106","504"]},"The user enters the name and password into the login page using browser , which provides the name and password to Access Server . As shown by state , Access server  determines whether the loginVerification event is an extension event and whether extension invocation is active for the event, in a manner which shall be described in further detail. If extension invocation is active, then, as indicated by state , the extension for the loginVerification event is securely invoked. Otherwise, as indicated by state , access server  requests that Registry Server  verify whether the user is authentic. A user is considered authenticated if the name and password match information stored in the Registry Repository . The Registry Server  returns the result of the verification step to Access Server , as shown by state .","Next, the access server securely invokes an extension for the login failure event as shown by state , if the login failure event is an extension event. If the name and password cannot be authenticated or the account is marked inactive, then as shown by state , Access Server  returns an error message to browser .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 5B","b":["108","510","106","108","514","516","108","106","108","517","106","518","520","106","100"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 5C","b":["108","106","414","108","521","522","108","414","524","414","100"]},"A \u201ccookie\u201d is a packet of data sent by web servers to web browsers. Each cookie is saved by browser  until the cookie expires. A cookie returned by the Authentication Client Module is required for access to resources protected by the system .","The extension events described herein are expository. While these expository extension events occur while authenticating a user, extension events may occur while performing other types of functions or processes. For example, an extension event can be the modification of a password, the connection of a user to a protected server, or a user logging off. Appendix One shows examples of access control events which may be used as extension events. It should be understood that the present invention is not limited to any particular set of extension events.","Before an extension may be invoked, it must be developed. According to an embodiment, extensions may be developed, in an object-oriented programming language, as subclasses that inherit from an abstract class.","Referring to , an abstract class SiteHook  defines a variety of methods which are inherited by a subclass of SiteHook . A description of some of these methods follows. In order to operate properly, a subclass of SiteHook  calls the constructor of its parent, which may be SiteHook  or a subclass of SiteHook . In addition, for some of methods defined for SiteHook , the developer supplies an implementation, as indicated below by the following description of methods.\n\n","\u201cEXAMPLE_KEY\u201d is a string, and exampleHashTable is a reference to a hash table object. Classes defining hash tables are available in standard libraries. When setRetValue is invoked, it stores the hash table referenced by exampleHashTable in a hash table used to collect return values, becoming in effect a hash table within a hash table. The referenced hash table is associated with the key string \u201cEXAMPLE_KEY\u201d.","removeRetValue\u2014This method is invoked to delete a value from the set of values returned to the caller of an extension. In one embodiment of the present invention, a key name is passed as a parameter when calling the removeRetValue method. The key name passed in specifies the name-value pair to delete from the hash used to collect return values.","getRetValue\u2014This method is invoked to get return values generated by an extension. The values returned are those collected through one or more invocations or setRetValues.","When a caller calls an extension, the extension returns a set of values. The caller then handles the set of values the caller is designed to handle. In an embodiment of the present invention, an extension returns a hash table containing objects. The contained objects may be strings, hash tables, or other types of objects. A caller expects a hash table that may contain the following hash tables or strings, each of which shall be explained in greater detail:","COOKIES;","SECURE_COOKIES;","SPECIALIZED_FIELDS; and","HOOKCOMM","This hash table contains name-value pairs of information to be stored in the user's browser. For example:",{"@attributes":{"id":"p-0076","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name (Hashtable Key)","Value (Hashtable Value)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SSN","123456789"]},{"entry":[{},"SECRET_PHRASE","Hello world!!!"]},{"entry":[{},"COMPANY","enCommerce, Inc."]},{"entry":[{},"ACCOUNT_ID","7575"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"This hash table also contains name-value pairs of information that the Access Server  sends to the user's browser as cookies. However, these cookies are more secure. Only the on SuccessLogin event returns SECURE_COOKIES. The extension returns a hash table that contains keys named by Resource IDs. The keys are associated with hash table values that may themselves include name-value pairs separated by commas. For example:",{"@attributes":{"id":"p-0078","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Resource ID (Hashtable Key)","Name-Value Pair (Hashtable Value)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["resid1","SSN = 123563785, COLOR = red"]},{"entry":["resid2","FOOD = pasta, FRUIT = banana"]},{"entry":["Scglobal","LANGUAGE = english"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The key names correspond to the Resource IDs entered in the Administration application during Resource creation. Commas separate name-value pairs. The Runtime decrypts secure cookies and looks for a match between their component Resource IDs and the Resources the users want to access. When the Runtime finds a match, it loads the name-value pairs for that Resource ID into HTTP_SC environment variables. The variables generated for resid1 key from the table above may be, for example,","HTTP_SCSSN=123563785","HTTP_SCCOLOR=red","HTTP_SCLANGUAGE=english","This hash table contains specific fields returned by an extension for a particular extension event. Here is an example.",{"@attributes":{"id":"p-0084","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Name (Hashtable Key)","Value (Hashtable Value)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["GETACCESSUSERNAME","Existing getAccess"]},{"entry":[{},"username websecadm"]},{"entry":["MESSAGE","Specific message Pass-"]},{"entry":[{},"word expires in 1 day"]},{"entry":["URL URL","string http:\/\/ourcompany.com"]},{"entry":["SKIPGETACCESSADDCERT","String, value true or false"]},{"entry":["SKIPGETACCESSAUTH","String, value true or false"]},{"entry":["SKIPGETACCESSDELETECERT","String, value true or false"]},{"entry":["SKIPGETACCESSPASSWORD","String, value true or false"]},{"entry":["SKIPGETACCESSPROFILING","String, value true or false"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"It is useful to transmit data between extensions. HOOKCOM enables such communication, containing data that is shared between extensions.","This hash table contains information that extensions tied to different extension events can share. An extension may make data available to others that are subsequently invoked by creating name-value pairs in HOOKCOM. The following code illustrates how data is made available in this manner.","public class HookCommExtension extends SiteHook","{\n\n","public void action( ) throws Exception\n\n","}","}","The above code defines a method named action. The action method creates a hash table object MyHookComm, and initializes it with values currently stored in the hash table HOOKCOM. Next, the action method adds as an entry a name-value pair, specifically, the action method adds as an entry the key \u201cinfo\u201d and the string \u201cHello World!\u201d. Then the method setRetValue is invoked, which establishes the data in MyHookComm as the hash table HOOKCOM.","In an embodiment of the present invention, extensions are developed so that error conditions are handled as exceptions. Extensions should be designed so the exceptions are caught and thrown. Any of the functions or classes in, for example, Server API  or Access Control Library  may throw exceptions. Appendix Two shows examples of some of exceptions that may occur, and further explains them.","A Hook Configuration mapping specifies which access control events are extensions, and whether extension invocation is active for the extension event or any of the extensions tied to the extension event.  shows a Hook Configuration mapping in the form of Hook Configuration file . Hook Configuration file  contains set of records , which includes records , , , , and .","Record  specifies that an access control event is an extension event, and in particular, that on SuccessLogin is an extension event. Record  has the following format.","Extension Event Name=ON|OFF","The string \u2018ON|OFF\u2019 is a switch which may be set to the string \u2018ON\u2019 or \u2018OFF\u201d. When set to \u2018ON\u201d, the switch specifies that extension invocation is active for the extension event.","Record  maps an extension to an extension event and a signature. Record  has the following format.\n\n","The name of the extension event to which an extension is tied is appended to a numeric string specifying the order of execution. Extension Class Name is the name of extension in the form of the name of a class that may loaded and executed. The string \u2018ON|OFF\u2019 is a switch which may be set to the string \u2018ON\u2019 or \u2018OFF\u201d. When set to \u2018ON\u201d, the switch specifies that extension invocation is active for the extension, that is, the extension class mapped to the extension event is called upon the occurrence of the extension event.","Record  specifies that on LogOut is an extension event. Record  specifies that the first extension to execute upon the occurrence of on LogOut is class MyonLogOut. Record  specifies that the second to execute is EMailLogOut.",{"@attributes":{"id":"p-0101","num":"0113"},"figref":"FIG. 7","b":["344","610"]},{"@attributes":{"id":"p-0102","num":"0114"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public class MyonSuccessLogin extends SiteHook"]},{"entry":[{},"("]},{"entry":[{},"public MyonSuccessLogin (Hashtable params)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"super (pararms);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},")"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public void action( ) throws Exception"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"String username = (String)get ParamValue(\u201cuserName\u201d);"]},{"entry":[{},"String GARoot = getAccessRoot( ).trim( );"]},{"entry":[{},"String configFile = \u201cconfig\/connection.conf\u201d;"]},{"entry":[{},"Hashtable cookies = new Hashtable( );"]},{"entry":[{},"\/\/ if no username is provided, then return"]},{"entry":[{},"if(username == null && username.length( ) < 1)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ setup the path to get the connection information"]},{"entry":[{},"if(GARoot.charAt(GARoot.length( ) \u22121) == \u2018\/\u2019\u2225"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GARoot.charAt(GARoot.length( ) \u22121) == \u2018\\\\\u2019)"]},{"entry":[{},"configFile = GARoot + configFile;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"configFile = GARoot + \u201c\/\u201d + configFile;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"try"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ establish connection to getAccess"]},{"entry":[{},"enCommConnection db = new"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"enCommConnection(configFile);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ ready to create a UserAPI instance"]},{"entry":[{},"enCommUserAPI userAPI = new enCommUserAPI(db);"]},{"entry":[{},"\/\/ get the person id for the current user and"]},{"entry":[{},"\/\/ get the user plus information"]},{"entry":[{},"String personID = userAPI.getPersonID(username);"]},{"entry":[{},"Hashtable ht = userAPI.getUserPlus(personID);"]},{"entry":[{},"\/\/ Getting the information from the user plus table"]},{"entry":[{},"String memNum = (String)ht.get(\u201cCHAR1\u201d);"]},{"entry":[{},"String rpin = (String)ht.get(\u201cCHAR2\u201d);"]},{"entry":[{},"\/\/ Assign the information to the following cookie names"]},{"entry":[{},"cookies.put(\u201cMEM_NUM, memNum);"]},{"entry":[{},"cookies.put(\u201cRPIN\u201d, rpin);"]},{"entry":[{},"\/\/ Return the cookies to the caller"]},{"entry":[{},"setRetValue(\u201cCOOKIES\u201d, cookies);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},")"]},{"entry":[{},"catch(Exception e)"]},{"entry":[{},"("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"throw e;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},")"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},")"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"At block , source code for an extension is received. In this example, the source code shown above is received. The source code implements class MYonSuccessLogin . Note that MYonSuccessLogin defines a method named action. MYonSuccessLogin also invokes method setRetValue.","At block , the received source code is compiled, if necessary. In this example, the received source code is compiled using commercially available Java compilers.","At block , a signature is generated for the just compiled class. In this example, the signature is generated by invoking class HookSigner  and passing parameters values identifying the class for which to generate a signature and a password supplied by an administrator of system . The following is a sample command that invokes HookSigner  to generate a signature for class MYonSuccessLogin .","java HookSigner MyonSuccessLoginExtension.class password HookSigner returns the following signature after being invoked.\n\n","At block , mapping data is received that maps an extension event to an extension and the extension to a signature. In this example, administration application  receives the following delimited string from an administrator of systems2.\n\n","At block , the mapping data is stored. In this example, the mapping data is stored in Hook Configuration file  as record .",{"@attributes":{"id":"p-0109","num":"0124"},"figref":["FIG. 8","FIG. 8","FIG. 5B","FIG. 8"],"b":["2","610","610","610","2","2"]},"For purposes of illustration, access server  has determined that a user is authentic, and has thus detected the on SuccessLogin event. At block , Access Server  begins the process for securely invoking extensions for the on SuccessLogin event.","At block , access server  determines whether the detected access control function is an extension event. If the access control function is an extension event, control passes to block . Otherwise, execution of the blocks ceases. In this example, the records from the Hook Configuration file  are examined to determine whether any record specifies that OnSuccessLogin is an extension. Because record  specifies that OnSuccessLogin is an extension event, control flows to block .","At block , it is determined whether extension invocation for the extension is active. If extension invocation is active, control flows to block . Otherwise, execution of the blocks in  ends. In the current example, record  indicates that extension invocation for on SuccessLogin is active, control therefore flows to block .","At block , it is determined whether there are any unprocessed extensions. An unprocessed extension is an extension mapped to the detected extension event which has not been selected at block  in the current invocation of the process depicted in . If there are unprocessed extensions, execution of the blocks flows to block . Otherwise, execution of the blocks ceases. In this example, no mapped extension has been selected. Therefore, execution of the blocks flows to block .","At block , an unprocessed extension is selected, in the order specified by Hook Configuration File . In this example, the extension MYonSuccessLogin is selected.","At block , it is determined whether extension invocation for the selected extension is active. If so, then control passes to block . Otherwise, control returns to block . In this example, record  indicates that extension invocation for MYonSuccessLogin is active. Therefore, control flows to block .","At block , the executable element for the selected extension is retrieved. In this example, class MYonSuccessLogin is retrieved.","At block , a signature for the retrieved executable element is generated. In this example, the signature generated is:\n\n","At block , it is determined whether the just generated signature matches the signature mapped to the selected extension. If not, control passes to block . Otherwise, the extension is executed at block , and then control returns to block .",{"@attributes":{"id":"p-0119","num":"0135"},"figref":"FIG. 9","b":["1000","1000","1002","1004","1002","1000","1006","1002","1004","1006","1004","1000","1008","1002","1004","1010","1002"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (CRT), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","The invention is related to the use of computer system  for controlling access to protected information resources. According to one embodiment of the invention, controlling access to protected information resources is provided by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process blocks described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punchcards, papertape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the world wide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface . In accordance with the invention, one such downloaded application provides for controlling access to protected information resources as described herein.","The received code may be executed by processor  as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","Extension Event: on BeforeVerify","Default Behavior: Occurs when the getAccess login screen displays.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm,","loginPolicy, userLocale","Returns: HOOKCOMM (optional)","Example Usage: Tie an extension to this event to initialize code, read or write files, or connect to another system.","Extension Event: on VerifyLogin","Default Behavior: Occurs when a user clicks Login after entering a username and password.","Parameters: userName, userHost, userBrowser, formData, referPage, serverURL, hookComm, loginPolicy, userLocale, userPassword, userCert, verifyPolicy","Returns: SPECIALIZED_FIELDS: SKIPGETACCESSAUTH, GETACCESSUSERNAME, HOOKCOMM (optional)","Example Usage: Tie an extension to this event to override the default authentication process and use information from another server to verify a user's privileges.","Extension Event: on FailLogin","Default Behavior: Occurs when there's no match for a user's login and password in the Authentication Server database.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, loginPolicy, userLocale","Returns: COOKIES, HOOKCOMM (optional)","Example Usage: Tie an extension to this event to send a cookie to the user's browser that displays an alert message, or to write a message describing the failure and automatically e-mail it to a specified individual.","Extension Event: on ShowFailLogin","Default Behavior: Occurs when an error screen displays after a user attempts to log in unsuccessfully.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, loginPolicy, userLocale","Returns: SPECIALIZED_FIELDS: URL, HOOKCOMM (optional)","Example Usage: Tie an extension to this event to redirect a user to another URL after an unsuccessful login attempt, either to allow login to a different server or to report a forgotten password.","Extension Event: on SuccessLogin","Default Behavior: Occurs when a user logs in successfully. Triggers recording of the date, time, and host server of the user's successful login and storage of the information in a cookie.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, loginPolicy, userLocale, attemptsInfo","Returns: COOKIES, SPECIALIZED_FIELDS: MESSAGE, SECURE_COOKIES, HOOKCOMM","(optional)","Example Usage: Tie an extension to this event to record a custom message in the cookie, for instance, adding a password-expiration or stock-purchase plan message to a user's previous login data.","Extension Event: on ShowSuccessLogin","Default Behavior: Occurs when a user logs in successfully.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, loginPolicy, userLocale, attemptsInfo","Returns: SPECIALIZED_FIELDS: URL, HOOKCOMM (optional)","Example Usage: Tie an extension to this event to redirect a user to another URL after a successful login attempt.","Extension Event: onLogout","Default Behavior: Occurs when a user logs out.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: COOKIES, HOOKCOMM (optional)","Example Usage: Tie an extension to this event to destroy a cookie when a user logs out, or to send a custom message to the user.","Extension Event: on AddCertificate","Default Behavior: Occurs when a user self-registers a digital certificate.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, loginPolicy, userLocale, userPassword, userCert, verifyPolicy","Returns: SPECIALIZED_FIELDS: SKIPGETACCESSADDCERT, HOOKCOMM","(optional)","Example Usage: Tie this event to an extension to store the digital certificate in a Registry Repository on an alternate server.","Extension Event: onBeforeChangeProfile","Default Behavior: Occurs when a user clicks Change Profile in the getAccess Client.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: HOOKCOMM (optional)","Example Usage: Tie this event to an extension to initialize code, connect to an external database, or open files.","Extension Event: on ChangeProfile","Default Behavior: Occurs when a user updates his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm,","loginPolicy, userLocale, userTimeZone, userDateCode, userNewPassword (if any)","Returns: SPECIALIZED_FIELDS: SKIPGETACCESSPROFILING, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to update profile information stored on alternate servers, or to add custom fields such as name and address data.","Extension Event: onFailChangeProfile","Default Behavior: Occurs when a user unsuccessfully attempts to change his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: COOKIES, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to send a cookie to the browser that displays a custom error message.","Extension Event: onShowFailChangeProfile","Default Behavior: Occurs when a screen showing an error message displays after a user unsuccessfully attempts to change his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: URL, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to redirect the user to a different URL before or after the error-message screen displays.","Extension Event: onSuccessChangeProfile","Default Behavior: Occurs when a user successfully changes his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: COOKIES, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to send a cookie to the browser that displays a custom update-confirmation message.","Extension Event: onShowSuccessChangeProfile","Default Behavior: Occurs when a screen showing an update-confirmation message appears after a user successfully changes his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: SPECIALIZED_FIELDS: URL, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to redirect the user to another URL that displays a custom message.","Extension Event: onBeforeChangePassword","Default Behavior: Occurs when a user clicks Change Profile in the getAccess Client.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: HOOKCOMM (optional)","Example Usage: Tie this event to an extension to initialize code, connect to an external database, or open files.","Extension Event: onChangePassword","Default Behavior: Occurs when a user updates his or her profile. Triggers updating of the user profile information in the Registry Repository.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, formData, loginPolicy, userLocale, userTimeZone, userDateCode, userNewPassword(if any)","Returns: SPECIALIZED_FIELDS: SKIPGETACCESSPASSWORD, GETACCESSUSERNAME, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to update profile information stored on alternate servers, or to add custom fields such as name and address data.","Extension Event: onFailChangePassword","Default Behavior: Occurs when a user unsuccessfully attempts to change his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: COOKIES, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to send a cookie to the browser that displays a custom error message.","Extension Event: onShowFailChangePassword","Default Behavior: Occurs when a screen showing an error message displays after a user unsuccessfully attempts to change his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: URL, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to redirect the user to a different URL before or after the error-message screen displays.","Extension Event: onSuccessChangePassword","Default Behavior: Occurs when a user successfully changes his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: COOKIES, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to send a cookie to the browser that displays a custom update-confirmation message.","Extension Event: onShowSuccessChangePassword","Default Behavior: Occurs when a screen showing an update-confirmation message appears after a user successfully changes his or her profile.","Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale","Returns: SPECIALIZED_FIELDS: URL, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to redirect the user to another URL that displays a custom message.","Extension Event: onAddCertificateMgmt","Default Behavior: Occurs when an administrator registers a user's digital certificate.","Parameters: userName, userHost, userBrowser, referPage, serverURL, userLocale, userCert","Returns: SPECIALIZED_FIELDS: SKIPGETACCESSADDCERT, HOOKCOMM (optional)","Example Usage: Tie this event to an extension to add newly-registered digital certificates to an alternate Registry Repository on a different server. (To accomplish this particular task, you must override the on VerifyLogin event.)","Extension Event: onDeleteCertificateMgmt","Default Behavior: Occurs when an administrator deletes a user's digital certificate. Parameters: userName, userHost, userBrowser, referPage, serverURL, hookComm, userLocale, certSerial","Returns: SPECIALIZED_FIELDS: SKIPGETACCESSDELETECERT, HOOKCOMM (optional)","Example Usage: Tie this even to an extension to delete digital certificates from an alternate Registry Repository on a different server. (To accomplish this particular task, you must override the on VerifyLogin event.)","Design your extensions to throw exceptions when both explainable and unidentifiable errors occur. The exceptions trigger the display of the following error messages to the user:",{"@attributes":{"id":"p-0130","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":{"@attributes":{"id":"ul0016-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":["Event: onVerifyLogin","InvalidUserException=The user and password are not valid.","InactiveAccountException=The user is inactive.","PasswordExpiredException=The user's password has expired.","CANotTrustedException=The CA is not a trusted CA.","InvalidParameterException=The user does not exist in the system.","Exception=Something unexplainable happened in the extension. Proceed with getAccess execution.","OtherException=Stops getAccess execution and displays a system error.","Event: onAddCertificate","CANotTrustedException=The CA is not a trusted CA.","Exception=Something unexplainable happened in the extension. Proceed with getAccess execution.","OtherException=Stops getAccess execution and displays a system error.","Event: onChangeProfile","InvalidUserException=The user and password are not valid.","InvalidParameterException=The user does not exist in the system.","InactiveAccountException=The user is inactive.","PasswordExpiredException=The user's password has expired.","Exception=Something unexplainable happened in the extension. Proceed with getAccess execution.","OtherException=Stops getAccess execution and displays a system error.","Event: onChangePassword","InvalidUserException=The user and password are not valid.","InvalidParameterException=The user does not exist in the system.","InactiveAccountException=The user is inactive.","Exception=Something unexplainable happened in the extension. Proceed with getAccess execution.","OtherException=Stops getAccess execution and displays a system error.","Event: onAddCertificateMgmt","PrimaryKeyException=Certificate already exists.","DuplicatedRowsException=Duplicate data already exist.","Exception=Something unexplainable happened in the extension. Proceed with getAccess execution","OtherException=Stops getAccess execution and displays a system error.","Event: All Events","OtherException=Stops getAccess execution and displays a system error."]}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
