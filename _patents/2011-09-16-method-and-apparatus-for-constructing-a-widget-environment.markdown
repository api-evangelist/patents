---
title: Method and apparatus for constructing a widget environment
abstract: A method and apparatus construct a widget environment. The method converts an application programming interface (API) into an API call in a Web service format in response to identifying that the API that is not executable in a current device is called. The method transmits the API call in the Web service format to a remote device in which the API is executable. The method receives a result obtained from the API call being executed in the Web service format in the remote device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09298475&OS=09298475&RS=09298475
owner: Samsung Electronics Co., Ltd
number: 09298475
owner_city: Suwon-si
owner_country: KR
publication_date: 20110916
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION(S) AND CLAIM OF PRIORITY","TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present application is related to and claims priority to Korean Patent Application No. 10-2010-0091959, filed on Sep. 17, 2010, in the Korean Intellectual Property Office, the disclosure of which is incorporated herein in its entirety by reference.","The present invention relates generally to a method and apparatus for constructing a widget environment, and more particularly to, a method and apparatus for constructing a widget environment by transmitting an application programming interface (API) that is not executed in a current device to a remote device and receiving a result of an executed API.","An open mobile terminal platform (OMTP) is a form launched by mobile communication providers for the purpose of a growth of a user-oriented mobile service and data business. OMTP Bondi is the standard device API specification in Javascript. Major carriers want to have a cross mobile platform solution (write-once run-anywhere) based on web\/widget technologies. This goal is same with W3C DAP (Device APIs and Policy group). There are a couple of well know industry cross platform solutions for mobile devices such as Phonegap and Rhomobile. These solutions are not yet compatible to Bondi and hardly expected to become soon due to their major target platform in the mobile application market, Apple iPhone. OMTP has released v1.1 specification and Window mobile reference implementation by the first quarter in 2010. Bondi is considered a major candidate platform for WAC (wholesale application community) of which alliance plan has been announced in MWC 2010 by major carriers and device vendors including AT&T, China Mobile, Orange, Softbank, Vodafone, KT, Telefonica, Verizon Wireless, Samsung, LG, and Sonic Ericsson.","OMTP Bondi aims at offering a set of common APIs to application developers such that they are not required to learn and use different APIs for accessing the same capability on different mobile devices and platforms. In general, web applications are device- and platform-independent but even web applications should use specific methods inherently dependent to a platform for accessing the internal resources and functionalities on devices. Bondi provides the standard interface to device internal resources, so Bondi applications could be run on any target devices without source code modification.","BONDI has exceeded the limit of a simple network application in a web runtime and approaches resources inside a phone based on standards, and thus mobile applications can be developed irrespective of operating systems (OSs) and platforms. Owing to these attributes, BONDI is expected to grow as a next-generation standard mobile development platform.","Although an application open market recently initiated by manufacturers is dependent on OSs or platforms, since a web runtime follows a web standard and is independent on platforms, BONDI will be an important selection in an application open market led by mobile communication providers strategically.","However, BONDI provides a standard interface accessible to internal device resources according to a device API specification of BONDI, whereas BONDI does not provide an interface that accesses to remote resources and calls a remote procedure call.","To address the above-discussed deficiencies of the prior art, it is a primary object to provide a method and apparatus for constructing a widget environment that, when an application programming interface (API) is not executed in a current device, transmits the API to a remote device in which the API is executed, and receives a result of the executed API, and uses remote resources.","According to an aspect of the present disclosure, there is provided a method of constructing a widget environment. The method converts an application programming interface (API) into an API call in a Web service format in response to identifying that the API that is not executable in a current device is called. The method transmits the API call in the Web service format to a remote device in which the API is executable. The method receives a result obtained from the API call being executed in the Web service format in the remote device.","The method may further include calling the API; and determining whether the API is executable in the current device.","The determining of whether the API is executable in the current device may include comparing the API with a function of a Web runtime included in the current device and determining whether the API is executable in the current device.","The method may further include if it is determined that the API is executable in the current device, executing the API in the current device.","The method may further include receiving an address of the remote device in which the API is executable, wherein the transmitting of the API call in the Web service format to the remote device in which the API is executable may include transmitting the API call in the Web service format to the remote device according to the address of the remote device.","The address of the remote device may be a uniform resource locator (URL).","The transmitting of the API call in the Web service format to the remote device in which the API is executable may include transmitting the API call in the Web service format to the remote device in which the API is executable in a HTTP request format.","The receiving of the result obtained by executing the API call in the Web service format in the remote device may include receiving the result obtained by executing the API call in the Web service format in the remote device in a HTTP response format.","The method may further include converting the result obtained by executing the API call in the Web service format into a result obtained by executing the called API.","The API call in the Web service format may be a representational state transfer (REST) API call.","The API may be a Bondi API.","According to another aspect of the present disclosure, there is provided an apparatus for constructing a widget environment. An API converting unit is configured to convert the API into an API call in a Web service format in response to identifying that an API that is not executable in the apparatus for constructing the widget environment is called. A transmitting unit configured to transmit the API call in the Web service format to a remote device in which the API is executable. A receiving unit configured to receive a result obtained from the API call being executed in the Web service format in the remote device.","Before undertaking the DETAILED DESCRIPTION OF THE INVENTION below, it may be advantageous to set forth definitions of certain words and phrases used throughout this patent document: the terms \u201cinclude\u201d and \u201ccomprise,\u201d as well as derivatives thereof, mean inclusion without limitation; the term \u201cor,\u201d is inclusive, meaning and\/or; the phrases \u201cassociated with\u201d and \u201cassociated therewith,\u201d as well as derivatives thereof, may mean to include, be included within, interconnect with, contain, be contained within, connect to or with, couple to or with, be communicable with, cooperate with, interleave, juxtapose, be proximate to, be bound to or with, have, have a property of, or the like; and the term \u201ccontroller\u201d means any device, system or part thereof that controls at least one operation, such a device may be implemented in hardware, firmware or software, or some combination of at least two of the same. It should be noted that the functionality associated with any particular controller may be centralized or distributed, whether locally or remotely. Definitions for certain words and phrases are provided throughout this patent document, those of ordinary skill in the art should understand that in many, if not most instances, such definitions apply to prior, as well as future uses of such defined words and phrases.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIGS. 1 through 8"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1"},"Referring to , in operation , a user transmits an address of a second device to a first device. In this example, the second device is located remotely from the first device. The first device receives and stores the address of the second device. The second device denotes a remote device in which a specific application programming interface (API) is executable. The address means a device uniform resource locator (URL) of the remote second device. For example, the device URL of the remote second device may be \u201cJohn.Bondira.com\/mobile.\u201d An operation of setting the device URL of the second device in the first device is performed when the device URL of the second device is initially registered or corrected.","In operation , the first device calls the API. An application for executing the specific API may need to be previously downloaded and installed in the first device. When the first device drives the application, the application calls the specific API. For example, to use a Bondi API, a Bondi application may need to be previously downloaded and installed. The Bondi application is installed and executed in a device as a web application prepared in HyperText Mark Up Language\/Cascading Style Sheets\/JavaScript (HTML\/CSS\/Javascript), and uses the Bondi API to use a device function for a runtime. According to an embodiment of the present disclosure, an example of the Bondi API prepared in HTML\/CSS\/Javascript of the Bondi application is illustrated in . Referring to , the first device calls the Bondi API \u201cBondi.geolocation.getCurrentPosition\u201d based on an external input. The example of the Bondi API illustrated in  is an API that obtains latitude position information in a coordinate system.","In operation , the first device determines whether the called API is executable in the first device. The first device compares the called API with a Web runtime function included in the first device and determines whether the called API is executable in the first device. The Web runtime means a software environment in which a Web application is executed, and enables the use of a partial function of a device. In the Bondi application, the Web runtime means a software environment in which HTML\/CSS\/Javascript is executed, and enables the use of a partial function of the device as HTML\/CSS\/Javascript. For example, if the called API is the Bondi API, the first device compares the Bondi API called in the Bondi application with a function of the Web runtime and determines whether the called Bondi API is executable in the first device.","In operation , if the called API is executable in the first device, the first device executes the called API in the Web runtime of the first device.","In operation , if the called API is not executable in the first device, the first device converts a called API call into an API call in a Web service format. If the called API is not executable in the first device, the first device searches for a device in which the called API is executable, and selects a URL of the found device. In the present embodiment, an API that is not executable in the first device is assumed to be executable in the second device. Then, the first device converts the called API call into the API call in the Web service format by using a URL of the second device. According to an embodiment of the present disclosure, the first device converts the called API call into a representational state transfer (REST) API call that can be called between Web services by using a remote application. An example of converting the Bondi API call of  into the REST API call is illustrated in . Referring to , the first device obtains the URL of the second device \u201cJohnMobile.Bondira.com\u201d by using a \u201cgetDeviceUrl ( )\u201d API function, and converts the Bondi API call \u201cgetCurrentPosition\u201d into the REST API call \u201capi\/geolocation\/location.json\u201d.","In operation , the first device transmits the API call in the Web service format to the second device. According to an embodiment of the present disclosure, the first device transmits the REST API call to the second device in a HTTP request format by using the URL of the second device. An example of transmitting the REST API call to the second device in the HTTP request format is illustrated in . Referring to , the first device transmits the REST API call \u201capi\/geolocation\/location.json\u201d to the URL of the second device \u201cJohnMobile.Bondira.com\u201d in the HTTP request format.","In operation , the second device executes the received API call in the Web service format. More specifically, the second device transfers the received API call in the Web service format to a corresponding device API call, and executes the corresponding device API call. For example, when the second device receives the REST API call, the second device executes a device API call corresponding to the REST API call. In this example, the second device may need to provide a RESTful device interface. An example of executing the REST API call in the HTTP request format by using the corresponding device API call in the second device is illustrated in .","In operation , the second device transmits a result obtained by executing the API call in the Web service format to the first device. The second device transmits the result obtained by executing the API call in a HTTP response format to the first device. The second device formats a result obtained by executing a device API corresponding to a REST API according to a REST API specification, and transmits the result in the HTTP response format to the first device. An example of transmitting the result obtained by executing the REST API call in the HTTP response format to the first device in the second device is illustrated in .","In operation , the first device converts the result obtained by executing the API call in the Web service format into a result obtained by executing the called API. For example, the first device changes a format of the result obtained by executing the REST API according to a Bondi API specification and transmits the changed result to the Bondi application. When the HTTP Response of  is received, an example of calling the HTTP Response as a callback function is illustrated in .","With reference to the method of , a television corresponds to the first device in which a video call Bondi application is installed, and a mobile phone corresponds to the second device in which the video call Bondi application is installed. The video call Bondi application may need a camera function, a communication (VoIP) function, and a phonebook function. The television can provide the camera and communication functions, and thus an error occurs when a user performs a video call in the television. In this example, the television converts the video call into a REST call, and transmits the REST call in the HTTP response format to the mobile phone according to a URL of the mobile phone. Thereafter, the REST call is executed in the mobile phone, and a result obtained by executing the REST call is transmitted to the television in the HTTP response format. The television converts the executed REST call into the executed video call and displays an execution result thereon.","According to an embodiment of the present disclosure, devices may access to each other through HTTP request and response. A HTTP request for devices from a browser or a Web service may be made through a service gateway. This process is not provided to users.","A common accessible IP address is not allocated to a device in a network address translation (NAT) gateway that is a network technology used in network equipments such as a router or a firewall or an Internet security product. A common security strategy of mobile operators blocks a HTTP request directly transmitted between devices in a network of mobile operators by using a very strict firewall policy. Therefore, the service gateway is used according to another embodiment of the present disclosure.","The service gateway operates based on a fact that the HTTP request is transmitted from devices in the network of mobile operators through a firewall thereof. Thus, devices of the mobile operators establish channels in the service gateway. In this regard, the service gateway operates as a relay server. That is, a HTTP request from each browser or Web service is transmitted to devices in the HTTP response format. In the present embodiment, the first device transmits the HTTP request to the service gateway, and the service gateway transmits the HTTP response including the HTTP request to the second device, receives the HTTP request to establish tunnels from the second device, and transmits the HTTP response to the first device.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 8"},"Referring to , the system for constructing the widget environment includes a first device  and a second device . The first device  that is an apparatus for constructing the widget environment includes a receiving unit , a storage unit , an API switching unit , a Web runtime , a device platform , an API converting unit , and a transmitting unit . The second device  includes a receiving unit , a Web runtime , a device platform , and a transmitting unit . The first device  and the second device  are remotely connected to each other over a predetermined communication network. The second device  means a remote device in which a specific API that is not executable in the first device  is executable.","The receiving unit  of the first device  receives an address of the second device  from a user. The address means a device URL of the second device . An operation of setting the device URL of the second device  in the first device  is performed when the device URL of the second device  is initially registered or corrected.","The storage unit  of the first device  receives and stores the address of the second device . An application for executing a specific API is previously downloaded and installed in the storage unit  of the first device . For example, to sue a Bondi API, a Bondi application may need to be previously downloaded and installed in the storage unit  of the first device . The Bondi application is a Web application prepared in HTML\/CSS\/Javascript, installed and executed in a device, and uses the Bond API so as to use a function of the device for a runtime.","The API switching unit  determines whether a called API is executable in the first device . The API switching unit  compares the called API with the Web runtime  included in the first device  and determines whether the called API is executable in the first device . The Web runtime  means a software environment in which a Web application is executed, and enables the use of a part of a device function. The Bondi application means a software environment in which HTML\/CSS\/Javascript is executed, and enables the use of a part of a device function as HTML\/Javascript. For example, if the called API is the Bondi API, the API switching unit  compares the Bondi API called in the Bondi application with a function of the Web runtime  of the first device  and determines whether the called Bondi API is executable in the first device .","If the called API is executable in the first device , the Web runtime  of the first device  executes the called API by using the device platform  of the first device .","If the called Bondi API is not executable in the first device , the API converting unit  converts the called API call into an API call in a Web service format. If the called Bondi API is not executable in the first device , the API converting unit  searches for a device in which the called API is executable, and selects a URL of the found device. In the present embodiment, the API that is not executable in the first device  is assumed to be executable in the second device . Thereafter, the API converting unit  converts the called API call into an API call in the Web service format by using the URL of the second device . According to an embodiment of the present disclosure, the API converting unit  converts the called API call into a REST API call that is a standard by which Web services can remotely call applications on Web. If the API converting unit  receives a result obtained by executing the API call in the Web service format from the second device , the API converting unit  converts the API call in the Web service format into a result obtained by executing the called API. For example, the API converting unit  changes a format of a result obtained by executing the REST API according to the Bondi API specification, and transmits the changed result to the Bondi application.","The transmitting unit  of the first device  transmits the API call in the Web service format to the second device . According to an embodiment of the present disclosure, the transmitting unit  of the first device  transmits the REST API call in the HTTP request format to the second device  by using the URL of the second device .","The Web runtime  of the second device  executes the API call in the Web service format through the receiving unit  of the second device . More specifically, the Web runtime  of the second device  transmits the API call in the Web service format to the corresponding device platform  of the second device , and executes a corresponding device API call. For example, if the Web runtime  of the second device  receives the REST API call, the Web runtime  of the second device  executes a device API call corresponding to the REST PAI call. In this example, the second device  may need to provide a RESTful device interface.","The transmitting unit  of the second device  transmits a result obtained by executing the API call in the Web service format to the first device . The transmitting unit  of the second device  transmits a result obtained by executing the API call in the Web service format to the first device  in the HTTP response format. The transmitting unit  of the second device  formats a result obtained by executing a device API corresponding to the RESET API according to a REST API specification and transmits the formatted result in the HTTP response format to the first device .","According to another embodiment of the present disclosure, the first device  and the second device  may not directly transmit and receive the HTTP request and the HTTP response and transmit and receive the HTTP request and the HTTP response by using a service gateway (not illustrated) as a relay server. The HTTP request for devices from a browser or a Web service may be made through the service gateway. This process is not provided to users.","According to an embodiment of the present disclosure, devices may access to each other through the HTTP request and the HTTP response. However, a common accessible IP address is not allocated to a device in a NAT gateway that is a network technology used in network equipments such as a router or a firewall or an Internet security product. A common security strategy of mobile operators blocks a HTTP request directly transmitted between devices in a network of mobile operators by using a very strict firewall policy. Therefore, the service gateway is used according to another embodiment of the present disclosure.","The service gateway operates based on a fact that the HTTP request is transmitted from devices in the network of mobile operators through a firewall thereof. Thus, devices of the mobile operators establish channels in the service gateway. In this regard, the service gateway operates as a relay server. That is, a HTTP request from each browser or Web service is transmitted to devices in the HTTP response format. In the present embodiment, the first device  transmits the HTTP request to the service gateway (not illustrated), and the service gateway (not illustrated) transmits the HTTP response including the HTTP request to the second device , receives the HTTP request to establish tunnels from the second device , and transmits the HTTP response to the first device .","The invention can also be embodied as computer-readable codes on a computer-readable recording medium. The computer-readable recording medium is any data storage device that can store data which can be thereafter read by a computer system. Examples of the computer-readable recording medium include read-only memory (ROM), random-access memory (RAM), CD-ROMs, magnetic tapes, floppy disks, and optical data storage devices. The computer-readable recording medium can also be distributed over network-coupled computer systems such that the computer-readable code is stored and executed in a distributed fashion. Also, functional programs, codes, and code segments for accomplishing the present invention can be easily construed by programmers of ordinary skill in the art to which the present invention pertains.","Although the present disclosure has been described with an exemplary embodiment, various changes and modifications may be suggested to one skilled in the art. It is intended that the present disclosure encompass such changes and modifications as fall within the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present disclosure and its advantages, reference is now made to the following description taken in conjunction with the accompanying drawings, in which like reference numerals represent like parts:",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
