---
title: Matching target strings to known strings
abstract: One or more techniques and/or systems are disclosed for matching a target string to a known string. A target string is broken into one or more target terms, and the one or more target terms are matched to known terms in an index tree. The index tree comprises one or more known terms from a plurality of known strings, where the respective known terms in the index tree are associated with one or more known string IDs. A known term that is associated with a known string ID (in the index tree, and to which a target term is matched), is comprised in a known string, which corresponds to the known string ID. The target string can be matched to the known string using the known string's corresponding known string ID that is associated with a desired number of occurrences in the matching of the one or more target terms.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09251289&OS=09251289&RS=09251289
owner: Microsoft Technology Licensing, LLC
number: 09251289
owner_city: Redmond
owner_country: US
publication_date: 20110909
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Searching for relevant information in a large pool of data is commonly performed in enterprise operations, academic operations, and by individual users. Internet search engine and database management systems are typical examples of ways that users may search for data that matches query search terms. Typical systems and techniques utilize a \u201cfull text search\u201d in an attempt to match query terms to one or more portions of the data in the large pool of data.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","For a given large collection of random and unstructured known strings, a user may wish to quickly search through all the known strings to select a known string that matches a target string. For example, where there are many known strings that comprise phrases in English for which a translation into another language already exists, it may be desirable to find which of these phrases (known string) match a phrase in English (target string) for which a translation into the other language does not already exist. In this manner, the phrase (target string) for which a translation does not exist may not have to be translated. Rather, the translation for the know phrase (known string) to which that phrase (target string) matches may be used for that phrase (target string). Generally, to perform operations such as this, full-text search engines typically utilize a type of fuzziness matching (e.g., linguistic matching), which may provide too much \u201cfuzziness\u201d (e.g., results that are overly imprecise). These systems are typically very slow, and they often utilize a relative score for respective matched candidates, which is not intuitive and can be difficult to understand.","Accordingly, one or more techniques and\/or systems are disclosed that can provide fast, efficient, and improved matching of a target string to a known string. An index of known terms from a plurality of known strings can be created merely once for the plurality of known strings, and the index can be modified\/updated if needed. Searching of the index can be performed on-demand for target strings, where results from the searching of the index can result in one or more matching known strings for the target string.","In one embodiment of matching a target string to a known string, respective one or more target terms, comprised in the target string, can be matched to a known term in an index tree. The index tree can comprise one or more known terms from a plurality of known strings, where the respective known terms in the index tree are associated with at least one known string identifier (ID). A known term that is associated with a known string ID, and that is matched to the target term in the index tree, is comprised in a known string, which corresponds to the known string ID. The target string can be matched to the known string based at least upon the known string's corresponding known string ID being associated with a desired number of occurrences in the matching of the one or more target terms.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are generally used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.","As provided herein, a method may be devised that provides for fast, efficient, and improved matching of a target string to a known string. An index of known terms from a plurality of known strings can be created for the plurality of known strings, where the respective known terms are associated, in the index tree, to a known string ID. The known string ID corresponds to a known string that comprises the known term associated with the known string ID in the index tree. The index tree can be searched for target terms from a target string, where results from the searching of the index can result in one or more matching known strings for the target string.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","102","104"]},"In the exemplary method , the index tree comprises one or more known terms that are comprised in a plurality of known strings. The known terms comprised in the index tree are respectively associated with at least one known string identifier (ID), where an associated known string ID corresponds to a known string that comprises the known term. For example, a known string may comprise one or more known terms. Further, in this example, the known string has a corresponding known string ID (e.g., which may be particular to the known string to distinguish it from other known strings). The respective known terms that are comprised in the known string, in this example, are associated with the known string ID for the known string from which they came.","Therefore, as an example, the index tree that may be populated with known terms can be further populated with the associated known string IDs for the known terms. Further, a known term populated in the index tree may be associated with more than one known string ID. As an illustrative example, a known term \u201ctable\u201d may be found in more than one known string, such as a first known string \u201cthe cat is on the table,\u201d and a second known string \u201cthe table is big.\u201d In this example, a first known string ID corresponding to the first known string can be associated with the known term \u201ctable\u201d, and a second known string ID corresponding to the second known string can be associated with the known term \u201ctable\u201d (e.g., in the index tree).","If a matching known term is identified in the index tree for the target term (YES at ), one or more known string IDs associated with the matching known term in the index tree can be identified at . If a matching known term is not identified in the index tree for the target term (NO at ), or after identifying the one or more known string IDs associated with the matching known term in the index tree at , a next target term may be identified. If a next target term is identified for the target string (e.g., the target string comprises more than one target term) (YES at ), the next target term can be run though the index tree to identify a matching known term, at . The process of  to  can be iterated until no more target terms are available for the target string (NO at ).","As an example, the target string may comprise four target terms. In this example, respective target terms can be run through the index tree to search for a matching known term, comprising four searches of the index tree. Further, in this example, if the respective searches identify a matching known term, four sets of known string IDs may be identified, one for the respective matching known terms, where respective sets may comprise one or more known string IDs. If one or more of the four searches do not result in a matching known term, in this example, a resulting number of sets of known string IDs may correspond to a number of matching known terms from the four target term searches of the index tree.","At  in the exemplary method , a number of occurrences of respective known strings IDs can be counted, resulting from the running of the one or more target terms through the index tree. As described above, the running of the one or more target terms through the index tree may respectively identify matching known terms, where the matching known term can be associated with one or more known string IDs. A same known string ID may be identified for more than one target term from the target string, for example.","As an illustrative example, a target string \u201cselect big table\u201d can comprise three target terms \u201cselect\u201d, \u201cbig\u201d, and \u201ctable\u201d. In this example, a first known string may comprise \u201cthe table is big,\u201d corresponding to a first known string ID \u201cX\u201d, and a second known string can comprise \u201cthe cat is on the table\u201d, corresponding to a second known string ID \u201cY\u201d. In this example, after running the three target terms through the index tree, a resulting identification of known string IDs may comprise: \u201cselect\u201d->no match; \u201cbig\u201d->\u201cX\u201d; and \u201ctable\u201d->\u201cX\u201d, Y. In this example, when the number of occurrences of respective known strings IDs are counted, a resulting count may comprise: \u201cX\u201d->two occurrences; and \u201cY\u201d->one occurrence.","At  in the exemplary method , the target string is matched to the known string based at least upon the known string's corresponding known string ID associated with a desired number of occurrences in the matching of the one or more target terms. As an example, a desired number of occurrences may comprise a highest number of occurrences. In this example, the known string that corresponds to the known string ID with the highest number of occurrences resulting from the matching of the target terms to the known terms in the index tree can comprise the matching known string.","As an illustrative example, if the first known string ID \u201cX\u201d comprises two occurrences, as a result of the matching of the target terms to the known terms in the index tree, and the second known string ID \u201cY\u201d comprises merely one occurrence, the first known string \u201cthe table is big\u201d can comprise the known string that is matched to the target string \u201cselect big table.\u201d In this illustrative example, the first known string comprises two target terms \u201cbig\u201d and \u201ctable\u201d that are also comprised in the target string.","Having matched the target string to the known string, the exemplary method  ends at .",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":"200"},"At  in the example embodiment , an iterative process ( to ), for identifying data used to populate the known string database , can begin for respective known strings in the plurality of known strings . At , a hash value can be generated for a known string . In one embodiment, the hash value can be generated for the known string using one or more hash functions. Typically, hashing an input value (e.g., the known string) results in a hash value that is particular to the input value, for example, where different input values are respectively hashed to different hash values. In this way, for example, a first hash value derived from a first known string may be different than a second hash value derived from a second known string.","At , the hash value generated for the known hash string  can be compared with any existing hash values in the known string database . It will be appreciated that, when the iterative process  to  is first initiated, the known string database may comprise no known strings and associated hash values. Therefore, as an example, for a first known string run through the iterative process  to , a first hash value may be compared with no hash values in an empty database. Further, in this example, a second hash value for a second known string may be compared merely with the first hash value in a second run through the iterative process  to , and so on for a third, fourth, etc. hash value.","If the hash value generated for the known hash string  already exists in the known string database (YES at ), a next known string, at , may be identified from the known strings , and run through the iterative process  to , beginning at . If the hash value generated for the known hash string  does not already exists in the known string database (NO at ), a known string ID may be determined for the known string .","In one embodiment, determining the known string ID for the known string can comprise retrieving a first ID from a database of IDs, for example, where respective IDs in the database of IDs are different. In one embodiment, determining the known string ID for the known string can comprise creating (e.g., using a function, using a next available number from a sequence of numbers, etc.) a new ID for the known string, for example, where the newly created ID is particular to merely the known string.","At  in the example embodiment , the known string can be stored in the known string database  and linked to the corresponding generated hash value in the known string database . At , the known string ID determined (e.g., retrieved, created, etc.) for the known string can be associated with the known string in the known string database . For example, the known string database  may comprise an entry comprising the known string, a link to the known string ID, and\/or a link to the hash value.","At , a next known string can be identified from the plurality of known strings , and the next known string can be run through the iterative process  to . In this way, for example, the resulting known string database  may be populated merely with different known strings (e.g., no two known strings in the database comprise the same one or more known terms in a same order), respectively linked to a different known string ID and a different hash value.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 3","b":"300"},"At  in the example embodiment , an iterative process ( to ), for identifying data used to populate the index tree , can begin for respective known strings in the known string database  (e.g.,  of FIG. ). At , a first known string from the known string database  can be broken down into one or more first known terms. As an illustrative example, the known string \u201chosting operating systems in the cloud\u201d may be broken down in the known terms \u201chosting\u201d, \u201coperating\u201d, \u201csystems\u201d, \u201cin\u201d, \u201cthe\u201d, and \u201ccloud\u201d.","At , for the respective one or more first known terms identified in the first known string, it may be determined whether the first known term comprises a \u201cnoise term.\u201d In one embodiment, a \u201cnoise term\u201d can comprise a term that may not yield a useful search result, and may merely add \u201cnoise\u201d to the result when matching a target string to a known string. As an example, in a language-based pool of known strings, a \u201cnoise term\u201d may comprise a word that is very commonly found in phrases or sentences (e.g., a, the, an, as, for, it, they, was, where, you, etc.). In this example, performing a search (e.g., matching a target string to a known string) using these \u201cnoise words\u201d may merely add \u201cnoise\u201d to results of the search by increasing a number of target terms matched to known terms in the index tree, and may not result in useful information. As an illustrative example, a list of \u201cnoise terms\u201d for the English language may comprise the following:\n\n","If the first known term is identified as a \u201cnoise term\u201d (YES at ) a next first known term may be identified (if available), at , from the first known string. If the first known term is not identified as a \u201cnoise term\u201d (NO at ) the index tree  may be searched for a match of the first known term at . It will be appreciated that, when the iterative process  to  is first initiated, the index tree  may comprise no known terms. Therefore, as an example, for the first known string run through the iterative process  to , a first known term may be searched against an empty index tree. Further, in this example, a second, first known term for the first known string may be searched against merely the first, first known term in a subsequent search of the index tree , and so on for a third, fourth, etc. first known term.","As an example, searching the index tree can comprise performing a string match, such as where the terms are matched if they respectively comprise the same characters in a same order. If the first known term from the first known string is matched to an existing known term in the index tree  (YES at ) a next first known term may be identified (if available), at , from the first known string. If the first known term from the first known string is not matched to an existing known term in the index tree  (NO at ) the first known term may be added to the index tree.","At  in the example embodiment , a first known string ID corresponding to the first known string in the known string database  can be added to a list of one or more known string IDs associated with the first known term in the index tree . As an example, respective nodes of the index tree  may comprise a known term comprised in one or more of the known strings from the known string database . Further, in this example, respective nodes can comprise a set of one or more known string IDs, associated with the known term in the node, corresponding to the one or more known strings comprising the known term.","At , a second known term may be identified for the first known string. If the second known term is available for the first known string, the second known term may be run through the iterative process  to , for example, and for a third known term, etc., until no more known terms are available for the first known string. At , a second known string may be identified from the known string database . If the second known string is available from the known string database , the second known string may be run through the iterative process  to , for example, and a third known string, etc., until no more known string are available in the known string database .","In one embodiment, the resulting index tree  can comprise a plurality of nodes respectively populated with a known term, for example, where no two nodes in the index tree  comprise a same known term. Further, the respective nodes may comprise a set of one or more known string IDs corresponding to the strings within which the known terms respectively appear. As an example, the index tree may comprise a B-tree. A B-tree is a tree data structure that comprises sorted data (e.g., comprising the known terms), and provides for fast searching (e.g., to match a target term to a known term), insertions (e.g., to add known terms), deletions (e.g., to remove known terms), and sequential access (e.g., providing for fast look-up and searches).",{"@attributes":{"id":"p-0044","num":"0044"},"figref":"FIG. 4","b":"400"},"At , the target string  can be broken down into one or more target terms, by identifying one or more target terms comprised in the target string . As an illustrative example, a target string comprising the text \u201chow to use cloud hosted operating systems\u201d may be broken down in the target terms \u201chow,\u201d \u201cto, \u201cuse,\u201d \u201ccloud,\u201d \u201chosted,\u201d \u201coperating,\u201d and \u201csystems.\u201d","In one embodiment, the identification of target terms may comprise ignoring (e.g., or removing) \u201cnoise terms\u201d from the target string . As an illustrative example, for the target string \u201chow to use cloud hosted operating systems,\u201d the terms \u201chow,\u201d \u201cto,\u201d and \u201cuse\u201d may be considered \u201cnoise terms,\u201d as they may merely add noise to search results, and may not provide useful search-related information when matching a target string to a known string. Therefore, in this embodiment, for example, the target terms identified for the target string  may merely comprise \u201ccloud,\u201d \u201chosted,\u201d \u201coperating,\u201d and \u201csystems.\u201d","At  in the example embodiment , an iterative process ( to ) can begin for the respective one or more target terms identified in the target string . At , the index tree  (e.g.,  from ) can be searched for a match to a first target term from the respective one or more target terms. As an example, searching the index tree for a match to the first target term can comprise performing a string match, such as where the target term is matched to a known term in the index tree  if they respectively comprise the same characters in a same order. If the first target term from the target string  is not matched to a known term in the index tree  (NO at ) a next target term (second target term) may be identified (if available), at , from the target string . For example, if the first target term does not match a known term in the index tree , the target term may not comprise a known term from the plurality of known strings.","If the first known term from the target string is matched to a known term in the index tree  (YES at ) one or more string IDs associated with the matching known term can be identified at  from the index tree . As described above (e.g., at  in ), for example, the index tree  can comprise a plurality of nodes respectively comprising a known term and an associated set of one or more known string IDs, respectively corresponding to a known string in a known string database. In one embodiment, the one or more string IDs associated with the matching known term can be identified in the node of the index tree comprising the matching known term. At , a next (second) target term can be identified, if available, and run through the iterative process  to , for example, until there are no more target terms available for the target string  (e.g., all the target terms from the target string have been run through the matching process  to ).","As an illustrative example,  illustrates an example embodiment  of an implementation of an index tree and corresponding known string database. In this example, an index tree  comprises a plurality of nodes , , ,  (among others), respectively comprising a known term (cloud, host, operating, system). Further, in this example , the respective nodes , , ,  comprise an associated set of one or more known string IDs , , , , where the respective known string IDs correspond to a known string , , ,  in the known string database .","It will be appreciated that the example index tree  merely shows a portion of the nodes and\/or known term that may be populated therein, and that the index tree (e.g.,  of ) may comprise more (or fewer) nodes, respectively comprising a known term and an associated set of one or more known string IDs. Further, it will be appreciated that the known string database  merely shows a portion of the entries and\/or known strings (e.g., text) populated in the database, and that the known string database (e.g.,  of ) may comprise more (or fewer) entries, respectively comprising a known string (e.g., a word, phrase, or sentence).","In the example embodiment , a first target term may comprise the text \u201ccloud,\u201d which can be matched to a first known term \u201ccloud\u201d in node  of the index tree . Further, in this example, the first known term in node  is associated with a first set of known string IDs , comprising the known string IDs  and . A second target term may comprise the text \u201chosted,\u201d which can be matched to a second known term \u201chosted\u201d in node  (abbreviated to \u201chost\u201d in the figure). Additionally, in this example, the second known term in node  is associated with a second set of known string IDs , comprising the known string IDs  and .","In the example , a third target term may comprise the text \u201coperating,\u201d which can be matched to a third known term \u201coperating\u201d in node  (abbreviated to \u201cop.\u201d in the figure). Further, in this example, the third known term in node  is associated with a third set of known string IDs , comprising the known string IDs  and . A fourth target term may comprise the text \u201csystems,\u201d which can be matched to a fourth known term \u201csystems\u201d in node  (abbreviated to \u201csys.\u201d in the figure). Additionally, in this example, the fourth known term in node  is associated with a fourth set of known string IDs , comprising the known string IDs  and .","Returning to , at , a number of occurrences can be determined for the respective one or more known string IDs identified in the matching of the one or more target terms to the known terms. As an illustrative example, in , the known string ID  was identified once in the first set of known string IDs . In this example, the known string ID  was identified four times, once respectively in: the first set of known string IDs , the second set of known string IDs , the third set of known string IDs , and the fourth set of known string IDs . Further, the known string ID  was identified once in the second set of known string IDs . Additionally, the known string ID  was identified twice, once respectively in: the third set of known string IDs , and in the fourth set of known string IDs .","In one embodiment, determining the number of occurrences can comprise determining a hit-count for the respective known string IDs identified in the matching. In the example  of , a hit count for the respective identified known string IDs may be represented by the following table 1:",{"@attributes":{"id":"p-0055","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"KNOWN STRING ID","HIT COUNT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"358","1"]},{"entry":[{},"1057","4"]},{"entry":[{},"2160","1"]},{"entry":[{},"3168","2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"In one embodiment, for example, where a larger number of target terms may be matched to the known terms in the index tree and\/or two or more known string IDs comprise a same number of hit counts (e.g., 1 for string ID  and 1 for string ID ), an array may be used to facilitate identifying a number of occurrences of respective known string IDs. In this embodiment, a hit-count dictionary comprising a number of times the respective one or more known string IDs are identified for the one or more target terms may be used. As an example, table 1, described above, may represent a hit-count dictionary, such that the respective known string IDs comprise a corresponding hit count.","Further, in this embodiment, the dictionary can be sorted by order of hit counts. As an example, the above table 1 may be sorted by order of hit counts, and represented by the following table 2:",{"@attributes":{"id":"p-0058","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"KNOWN STRING ID","HIT COUNT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1057","4"]},{"entry":[{},"3168","2"]},{"entry":[{},"358","1"]},{"entry":[{},"2160","1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Additionally, in this embodiment, an array, having a size of a number of target terms identified for the target string, can be populated with an element key comprising a number of hit counts, and with element data comprising a list of one or more known string IDs associated with the element key. As an example, for the target string comprising the text \u201chow to use cloud hosted operating systems,\u201d four target terms may be identified (e.g., ignoring the \u201cnoise terms\u201d). Therefore, in this embodiment, for example, an array having a size of four can be used. The following example array may represent the hit counts:",{"@attributes":{"id":"p-0060","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"1","2","3","4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"358","3168",{},"1057"]},{"entry":[{},"2160"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Returning to , at , at the known string ID comprising a desired number of occurrences (e.g., hit counts) can be selected. As an example, a desired number of hit counts may comprise a highest number of hit counts. As an illustrative example, in , the identified known string ID comprising a highest number of hit counts is 1057. In this example, the highest number of hit counts may correspond to a number of times a target term from the target string is found in a corresponding known string , thereby comprising a higher number of matching known terms than other known strings , ,  in the known string database .","Returning to , at , the selected known string ID can be matched to a corresponding known string in the known string database , resulting in a matched known string . As an illustrative example, in , the target string comprising the text \u201chow to use cloud hosted operating systems,\u201d may be matched to the known string comprising the text \u201c . . . operating . . . systems . . . cloud . . . hosted . . . in the known string database .","In one embodiment, matching the target string to the known string can comprise selecting one or more known strings that respectively correspond to one or more known string IDs associated with a number of occurrences that meet a desired threshold ID count (e.g., threshold hit count). As an example, a user may wish to merely match the target string to those known strings that comprise at least four matching terms. Therefore, in this example, the desired threshold ID count (e.g., threshold hit count) can comprise four, and merely those known strings that comprise four known terms matching at least four of the target terms in the target string may be selected as a match to the target string.","A system may be devised that may be used to determine whether a target string matches one or more known strings from a plurality of known strings. For example, the plurality of known strings may be associated with data, and a user may wish to utilize the associated data for the target string. In this example, if the target string can be matched to one or more of the known strings, the user may be able to utilize the data, associated with the one or more matching known strings, for the target string. The target string can be broken into target terms, which may be respectively matched to a known term in an index tree of known terms from the plurality of known terms. One or more matching known terms may be linked to one or more known strings, which can be matched to the target string.",{"@attributes":{"id":"p-0065","num":"0065"},"figref":"FIG. 6","b":["600","600","602","602","604","604","650","652","652","652","654"]},"For example, the index tree may be populated with a first known term from a first known string, and the first known term can be associated with (in the index tree) a first known string ID that corresponds to the first known string. Further, the index tree can be populated with a second known term from the first known string, and the second known term can also be associated with the first known string ID. Additionally, the index tree can be populated with a third known term from a second known string, and the third known term can be associated with a second known string ID that corresponds to the second known string, etc.","In the exemplary system , a string matching component  is operably coupled with the term matching component . The string matching component  is configured to match the target string  to the known string  based at least upon the known string's corresponding known string ID that is associated with a desired number of occurrences in the matching of the one or more target terms. As an example, the string matching component  may match the target string  to the known string  that comprises a desired number (e.g., a highest number) of known terms matching the one or more target terms of the target string in the index tree .",{"@attributes":{"id":"p-0068","num":"0068"},"figref":["FIG. 7","FIG. 6","FIG. 6"],"b":["700","700","700","710","758","754","710","758","758","758"]},"A duplicate string identification component  can be configured to determine whether a known string being populated into the known string database  already exists in the known string database . The duplicate string identification component  can be configured to generate a first hash value for a first known string and a third hash value for a third known string, for example, using one or more hash functions; associate the first hash value with the first known string in the known string database ; compare the third hash value with the first hash value; and block the populating of the third known string to the known string database  if the third hash value matches the first hash value. In this way, for example, a known string may be populated to the known string database  merely once.","In the example embodiment , an index structure creation component  can be configured to create an index tree , for example, comprising respective known terms comprised in the known string in the known string database . The index structure creation component  can be configured to populate the index tree  with respective one or more first known terms comprised in a first known string; link the first known string ID to the respective one or more first known terms in index tree ; populate the index tree  with a second known term comprised in a second known string, merely if the second known term does not match one or more of the one or more first known terms already added to the index tree; link the second known string ID to the second known term in index tree  (e.g., where the second known term did not match any terms in the index tree and thus is added to the index tree); and link the second known string ID to a first known term populated in index tree  that matches the second known term (e.g., where the second known term did match a term in the index tree and thus is not added to the index tree (again), rather merely the second known string ID is associated with matched term). In this way, for example, the index tree  can be populated with the respective known terms comprised in the known strings from the known string database , and associated the respective known terms in the index tree  with at least one known string ID corresponding to a known string comprising the known term.","In the example embodiment , a term identification component  can be configured to break one or more of the plurality of known strings  into the one or more known terms, for example, which may respectively be populated into the index tree . Further, the term identification component  can be configured to break the target string  into the one or more target terms , which may respectively be matched to a known term in the index tree  by the term matching component .","In the example embodiment , a string transformation component  can be configured to remove one or more noise words from the target string , and\/or remove one or more noise words from the plurality of known strings . For example, a \u201cnoise term\u201d can comprise a term that may not yield a useful search result, and may merely add \u201cnoise\u201d to the result when matching a target string to a known string. In this example, the string transformation component  may identify the \u201cnoise terms\u201d in the target string and\/or the one or more known strings, and remove the \u201cnoise terms\u201d such that the matching of the target string to the known string  may yield more useful results.","Further, the string transformation component  can be configured to normalize the respective one or more target terms , and\/or normalize the respective one or more known terms populated to the index tree . As an example, language-based strings (e.g., the English language) can comprise words that may be arranged differently for linguistic purposes. For example, words may comprise a singular or plural form; words can be changed due to tense differences of verbs; and other possible arrangements of a same word. In one embodiment, the known terms in the index tree  and the target terms used for the matching may be normalized, for example, so that the matching may be improved. As an illustrative example, a plural may be normalized to a singular form and a past tense may be normalized to a present tense.","In the example embodiment , a hit-count determination component  can be configured to count a number of times a matching known string ID is identified for the target string , where the matching known string ID is associated with a matching term; and identify one or more matching known string IDs that meets a desired threshold ID count (e.g., threshold hit count). For example, a matching term can comprise a target term  that is matched to a known term in the index tree  by the term matching component , and the hit-count determination component  can count a number of times a known string ID, associated with the matching term, is identified. In one embodiment, the desired threshold ID count (e.g., threshold hit count) can comprise a highest number of hit counts for the known string ID, for example, where the known string comprising the known string ID with the highest number of hit counts may comprise the matched known string  (matched to the target string).","Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable instructions  may be configured to perform a method, such as at least some of the exemplary method  of , for example. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as at least some of the exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0079","num":"0079"},"figref":["FIG. 9","FIG. 9"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0081","num":"0081"},"figref":["FIG. 9","FIG. 9"],"b":["900","912","912","916","918","918","914"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. Further, At least one of A and B and\/or the like generally means A or B or both A and B. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
