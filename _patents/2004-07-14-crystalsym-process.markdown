---
title: CrystalSym process
abstract: The CrystalSym process is a logical process. It enables users of the process to easily construct symmetric systems of objects within a 3D virtual space. This process utilizes the gamut of the crystallographic 3D space filling symmetry groups of which there are 230, as well as subgroups of these 230 groups. These subgroups include point groups, line groups, frieze groups, plane groups, rod groups and layer groups. It also utilizes a certain class of non-space filling point groups.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07801688&OS=07801688&RS=07801688
owner: 
number: 07801688
owner_city: 
owner_country: 
publication_date: 20040714
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH AND DEVELOPMENT","REFERENCE TO SEQUENCE LISTING, A TABLE, OR A COMPUTER PROGRAM LISTING COMPACT DISK APPENDIX","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["Not Applicable","Not Applicable","Accompanying the application is one compact disk. The disk is in MS Windows FAT format. The files on the disk are ASCII files. The names of the files are:\n\n","The .spg files are referenced, and their format and use is described, in Chapter IV of the section titled DETAILED DESCRIPTION OF THE INVENTION. These files are ASCII data files which contain all of the space group operation information needed for each space group category used by the CrystalSym process. These categories, and the names of the operations within each of them, are enumerated in Chapter V of the DETAILED DESCRIPTION OF THE INVENTION.","This invention is in the field of Computational Processes within the sub-fields of Computer Modeling and Computer Imagery (Computer Graphics). It utilizes the mathematics of space group symmetry as defined within the fields of Mathematics and Crystallography.","This invention may be utilized within any field which makes use of computer modeling, whether for educational, recreational, research, design, manufacturing or other uses. This includes the fields of mathematical and scientific research and education, 3D modeling, architecture, millinery, plastic art, kinetic art, image synthesis and animation, database interfaces, computer and arcade games, puzzles, music, visual music, virtual reality and others.","In one aspect, a method is provided, which comprises creating multiple instances of at least one virtual object as selected within a host system in accordance with a selected one of a plurality of crystallographic space groups and associated parameter values, grouping the resulting set of virtual object instances as a unit cell having an origin, and outputting the unit cell to the host system.","In another aspect, a method is provided, which comprises creating multiple instances of at least one virtual object as selected within a host system in accordance with a selected one of a plurality of crystallographic space groups and associated parameter values, each of the crystallographic space groups being defined as associated lattice parameters, a set of matrices in unit cell space, a Cartesian space to unit cell space conversion matrix C2U, and a unit cell space to Cartesian space transformation matrix U2C; grouping the resulting set of virtual object instances as a unit cell having an origin; and outputting the unit cell to the host system.","By way of brief introduction, disclosed herein is a method which we call the \u201cCrystalSym\u201d process. The Crystalsym process is a logical process which multiplies at least one virtual object within a virtual environment, also referred to herein as a host system, according to any one of a plurality of crystallographic space groups, each defined as a set of matrices.","The CrystalSym process creates instances of the virtual object(s) in accordance with a selected one of the crystallographic space groups and associated parameter values; outputting the instances to the host system. We call the output group of instances a unit cell. Subsequently, the process can multiply the unit cell, creating instances of the unit cell in accordance with selected lattice dimension values; outputting these instances to the host system. We call the output group of unit cell instances a lattice.","The CrystalSym process solves the problem of needing a simple generic process by which one can create symmetric relationships of objects within a virtual space, i.e., the host system. It gives access to the entire gamut of three dimensional crystallographic symmetries which exist, within one easy to use process.","The CrystalSym process allows any virtual object, or set of objects, to be multiplied to create a system of object replicas (instances) of that (those) object(s) according to any symmetry relationship one might desire, such that when one moves the original object, all of the instances also move, maintaining their symmetrical relationships with the original. The CrystalSym process easily creates such systems of objects.","Several implementations of the CrystalSym process using different host systems and languages have been made. The most recent implementation is a set of scripts, written in the scripting language MEL, which are interpreted by the Maya\u2122 Animation application.","The mathematics which are utilized by the CrystalSym process are from the Space Groups described in Crystallographic literature such as International Tables for Crystallography, Vol. A. Space-Group Symmetry, Edited by Theo Hahn, Published for The International Union of Crystallography by D. Reidel Publishing Company, Dordrecht\/Boston\/Lancaster\/Tokyo, 1987.","Also used are the Subperiodic Groups listed in the International Tables for Crystallography, Vol. E. Subperiodic Groups, Edited by V. Kropsky and D. B. Litvin, Published for The International Union of Crystallography, by Kluwer Academic Publishers, Dordrecht\/Boston\/London 2002.","These mathematics are more accessibly described in basic crystallography texts on the subject such as Elementary Crystallography, Julian Martin Buerger, John Wiley & Sons, New York, N.Y. 1963, c1956.","The mathematics describes 230 unique space groups describing all possible crystal symmetries in three dimensions. Each space group is created from a combination of the translational symmetry of a unit cell including lattice centering, and the point group symmetry operations of reflection, rotation and rotoinversion (also called improper rotation). Also included are the screw axis and glide plane symmetry operations which are combinations of a rotation or reflection with a translation less than the unit cell size.","Prior art utilizing the mathematics of symmetry groups is primarily within the realm of two dimensional computer imagery. There are several implementations of similar processes which operate on two dimensional entities.","A distinguishing characteristic is that the CrystalSym process operates upon objects within a 3D space. Even when the operations are essentially 2D operations the objects being acted upon exist within a three dimensional space.","Crystallographic software usually works from analytical data to derive resulting space group symmetry information. It is always oriented toward visualizing atomic data. The objects being modeled within crystallography are atoms and bonds and molecules.","There do exist systems which present atoms and bonds visually as unit cells and lattices of unit cells. In some of them you can specify the atoms of the asymmetric unit and choose the symmetry and lattice parameters in a way that is similar to our process. These processes always are visualizing atomic structures.","A distinguishing characteristic of the CrystalSym process compared to what is accomplished within crystallography software is the ability to put any virtual object into any symmetric relationship implemented by the system. The system is not specifically oriented toward the visualization of atomic phenomena. It is totally general in its applicability.","There are many examples of two dimensional art which take advantage of 2D symmetry relationships. From wall paper to the complex mosaics of Islamic artworks, two dimensional symmetry is a well known basis for creating interesting visual motifs. There exists in the three dimensional realm many more possible symmetric relationships which could similarly be used to create interesting visual experiences.","There exist many systems for creating interesting 3D imagery. These systems are now used extensively in video and film production. However, none of these systems allow a user to systematically create visualizations of objects placed and moving in three dimensional symmetry relationships.","Chapters:",{"@attributes":{"id":"p-0027","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["I. Definitions","II. Method of Specification","III. Host System Requirements","IV. Specification of Symmetry Operations and Data Files","V. Specification of Parameters","VI. Specification of the CrystalSym Process","VII. Detail of Matrix Methods Used in Chapter VI.","VIII. Summary of CrystalSym Methods Used in Chapter VI.\n\nI. Definitions\n"]}}}},"The CrystalSym Process:\n\n","Crystallographic Space Groups:","The crystallographic space groups used by the CrystalSym process are the mathematical groups which are described for example in Crystallographic literature such as International Tables for Crystallography, Vol. A. Space-Group Symmetry, Edited by Theo Hahn, Published for The International Union of Crystallography by D. Reidel Publishing Company, Dordrecht\/Boston\/Lancaster\/Tokyo, 1987; and in the International Tables for Crystallography, Vol. E. Subperiodic Groups, Edited by V. Kropsky and D. B. Litvin, Published for The International Union of Crystallography, by Kluwer Academic Publishers, Dordrecht\/Boston\/London 2002.","Symmetry Group:\n\n","Asymmetric Unit:\n\n","Instances:\n\n","Unit Cell:\n\n","Lattice:\n\n","Host System:","The CrystalSym process can be implemented within any logic system, whether software or hardware, which allows the user to create virtual objects within a three dimensional virtual space. For the purposes of this application, such systems will be called the Host System. A non-exhaustive list of potential Host Systems would include CAD\/CAM systems, 3D Computer Animation programs, 3D Computer Modeling programs, Virtual Reality design programs, Virtual Reality environments, Computer Drawing and Painting programs, Web page design programs, Computer Game environments, all of which will be recognized as three dimensional creation and rendering applications. In the drawing FIGURE, a representative logic system , i.e. a computer system , includes a display  and is running a representative 3D application program .","II. Method of Specification","Within this application the CrystalSym process will be specified by logic using pseudo-code, as it could be implemented using many possible computer languages within many possible Host Systems. In the drawing FIGURE, the CrystalSym process is represented as computer program code . The pseudo-code at times may look similar to C++ and utilize its constructs. Parameter names (variableNames) will be written in italics. Parameter values are written in bold.","The names chosen for this specification are not intrinsic to the process. That is, any name used for a parameter name or enumerated parameter value within this specification can be altered, as long as the alterations are consistent throughout the implementation of the process.","III. Host System Requirements","Described here is required and useful (optional) host system Application Programmers Interface (API) functionality, represented in the drawing FIGURE at . The functionality is described by listing an object method definition which will be used as pseudo-code to represent the functionality within this specification. The functionality of the method is then described and a notation is made of where within the specification the method is invoked. The Steps identified as to where the methods are invoked are all within the algorithm in Chapter VI.","Required Functionality: The host system will need to have the following functionality within an API which will be utilized by the CrystalSym process. With regard to the functionality of an object graph or hierarchy, if the host system does not implement such, then it is possible to implement a simple reference list database which will maintain such information in parallel with the host system. This specification does not go into the details of this option. It is assumed that any competent programmer would know how to do this.","i) HostSystem.selectedObject( );\n\n","ii) HostSystem.createObjectInstance(object, name);\n\n","iii) HostSystem.addParent(childObject, parentObject);\n\n","iv) HostSystem.setScale(object, <x_value, y_value, z_value>);\n\n","v) HostSystem.setRotation(object, <x_value, y_value, z_value>);\n\n","vi) HostSystem.setTranslation(object, <x_value, y_value, z_value>);\n\n","v) The following standard mathematical functions:\n\n","Optional Functionality: The following functionality is useful, though not absolutely necessary. Some of the features listed here have alternative methods of implementation.","i) HostSystem.group(object, name);\n\n","ii) HostSystem.setTransformMatrix(object, aMatrix);\n\n","iii) HostSystem.setParent(childObject, parentObject);\n\n","iv) HostSystem.createCube(parameterList);\n\n","v) HostSystem.addParameter(object, parameterName, parameterType);\n\n","vi) HostSystem.setParameter(object, parameterName, value);\n\n","vii) HostSystem.createObject(parameterList);\n\n","viii) HostSystem.copyObject(object);\n\n","When a symmetry group is selected, the matrices which implement the symmetry operations for that symmetry group will need to be used. The implementer of the CrystalSym process can decide how best to retrieve the information when it is needed.","The Compact Disc Appendix includes files containing the matrices which specify the mathematics of the symmetry operations utilized by the CrystalSym process. For each SpaceGroupCategory, there is a file named: SpaceGroupCategory.spg","The format of the .spg files follows a format which is specified in online SYBIL documentation. SYBIL is a crystallography program available from Tripos, Inc., 1699 South Hanley Rd., St. Louis, Mo., 63144-2319, phone: 1-800-323-2960, 1-314-647-9241. The data format is as follows:\n\n","Within each SpaceGroupCategory, there is a unique SymmetryNumber integer value and a corresponding unique SymmetryName for each symmetry group. On the second line, either the word \u201cCentrosymmetric\u201d or \u201cNoncentrosymmetric\u201d is included. If the value is \u201cCentrosymmetric\u201d that means that each symmetry operation matrix listed in the file for this symmetry group should be duplicated then inverted as an additional symmetry operation for the symmetry group. Inversion is defined according to the space of the group, ie: 1D, 2D or 3D.","The third line indicates the number of symmetry operation matrices that immediately follow for this symmetry group. There are three lines for each matrix [M]. Each matrix line may optionally contain a matrix id number in columns 1-5. It can be used to help make the files more readable but it may be absent. The other four values on the line form one column of the matrix[M] which will perform a symmetry operation.","The data which is within the spacegroups files was created by referring to crystallographic literature as well as using the online service called: Bilbao Crystallographic Server. A reference to it is in the BACKGROUND OF THE INVENTION","All of the operations together are what is meant by \u201csymmetry group\u201d.","The operations are in UnitCell space. In order to obtain a matrix which will implement the operation in Cartesian space, the matrix[M] must be pre-multiplied by a matrix[C2U] that will convert into the UnitCell space, then post multiplied by a matrix[U2C] that will transform back from the UnitCell space into Cartesian space. This is the combined matrix[SymOp]. For Equation 1 algorithm, see CrystalSym.Matrix.combine( ) in Chapter VII.\n\n[SymOp]=[22\u2003\u2003(Equation 1)\n","[SymOp] can be used to transform the instance of the object if the host system allows one to set the transform matrix directly. Often host systems only allow the manipulation of an object's transformation matrix indirectly through specification of translate, rotate and scale values. If that is the case, one must determine these values by interpreting the resulting matrix.","The [C2U] matrix is defined as:",{"@attributes":{"id":"p-0068","num":"0138"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mn":"1","mo":"\/","mi":"a"}},{"mrow":{"mrow":[{"mo":"-","mi":"cos"},{"mi":"\u03b3","mo":"\/","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":["a","sin"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b3"}}}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["cos","\u03b3"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mi":["\u03b1","cos"],"mo":"\u00b7"}},{"mi":["cos","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":"-"}},"mo":"\/"}},{"mn":"0"}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["a","sin"],"mo":"\u00b7"},{"mi":["\u03b3","factor"],"mo":"\u00b7"}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]},{"mtd":[{"mn":"0"},{"mrow":{"mn":"1","mo":"\/","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":["b","sin"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b3"}}}},{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["cos","\u03b3"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mi":["\u03b2","cos"],"mo":"\u00b7"}},{"mi":["cos","\u03b1"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":"-"}},"mo":"\/"}},{"mn":"0"}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["b","sin"],"mo":"\u00b7"},{"mi":["\u03b3","factor"],"mo":"\u00b7"}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mrow":{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03b3","mo":"\/","mrow":{"mo":["(",")"],"mrow":{"mi":["c","factor"],"mo":"\u00b7"}}}}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]}]}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},"mn":"2"}}}]}}}},"br":{},"in-line-formulae":[{},{}],"sup":["2","2","2","0.5"]},"The [U2C] matrix is defined as:",{"@attributes":{"id":"p-0070","num":"0140"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mi":"a"},{"mrow":{"mrow":{"mi":["b","cos"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b3"}},{"mrow":{"mrow":{"mi":["c","cos"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b2"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mrow":{"mi":["b","sin"],"mo":"\u00b7"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b3"}},{"mrow":{"mrow":{"mi":"c","mo":"\u00b7","mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["cos","\u03b1"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":["cos","\u03b2","cos","\u03b3"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}],"mo":"-"}},"mo":"\/","mi":"sin"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b3"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mrow":{"mrow":{"mi":"c","mo":"\u00b7","mrow":{"mi":["factor","sin"],"mo":"\/"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b3"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]}]}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},"mn":"4"}}}]}}}}},"Because these matrices are dependent upon the UnitCell parameters, they must be created after those parameters are specified (see Chapter V). The values for a, b, c, \u03b1, \u03b2 and \u03b3 the above equations correspond with the UnitCell parameters: aVectorMagnitude, bVectorMagnitude, cVectorMagnitude, alphaAngle, betaAngle and gammaAngle respectively.","V. Specification of Parameters","Specification of parameter data required by the CrystalSym process. Selection of a set of symmetry relationships, or symmetry group, and selection of parameters associated with the chosen group.","Following are the groups of parameter data described in this chapter:\n\n","All of the parameters which are used by the CrystalSym process are described in this Chapter. User selection of parameter values may occur in various orders. It will depend upon how the parameter specification interface is implemented. It is possible to implement the process by only allowing selection of symmetry group and\/or relationships (section iv) and using that choice to help determine SymmetryGroupCategory (section i), Lattice (section ii) and Unit Cell (section iii) parameters.","It is also possible to determine parameter data from the virtual object chosen, see optional part of Chapter VI, Step C. Such a situation might result by a previous application of the process to that object. If the chosen object has internal symmetry corresponding to a particular lattice, the symmetry of the chosen object could then be used to determine a lattice which can create copies of the Unit Cell symmetry throughout the space.","The implementation of the process may implement default or assumed values for any of the parameter data listed in this section. The process may also implement any subset of the specified groups. The implementation may use whatever form of interface is useful and\/or possible, given the host system, to collect the parameter information from the user.","In the CrystalSym process, as detailed herein, it is assumed that the interface implementation enforces the constraints listed in the parameter specifications which follow. The interface logic is not detailed, as the interface is not, per se, a part of the process. However, enforcing the constraints on parameter values is required for correct results.","If the constraints are not followed, the result may be that the lattices created by the process will not be correct. It would be easy enough to add checking for the constraints within the CrystalSym process, but it is not essential to the process. The process may still yield results even if the constraints are not followed. Such results may be interesting for artists and other users of the process, therefore, for the purposes of the patent, enforcing constraints is an optional feature.","CrystalSym Parameter Tables\n\n",{"@attributes":{"id":"p-0080","num":"0156"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SymmetryGroupCategory","Enumerated","member of set:"]},{"entry":[{},{},"{\u2003\u2002PointGroups_0D,"]},{"entry":[{},{},"\u2003\u2003PointGroups_1D,"]},{"entry":[{},{},"\u2003\u2003LineGroups,"]},{"entry":[{},{},"\u2003\u2003PointGroups_2D,"]},{"entry":[{},{},"\u2003\u2003FriezeGroups,"]},{"entry":[{},{},"\u2003\u2003PlaneGroups,"]},{"entry":[{},{},"\u2003\u2003PointGroups_3D,"]},{"entry":[{},{},"\u2003\u2003RodGroups,"]},{"entry":[{},{},"\u2003\u2003LayerGroups,"]},{"entry":[{},{},"\u2003\u2003SpaceGroups }"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0052","list-style":"none"},"li":{"@attributes":{"id":"ul0052-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0053","list-style":"none"},"li":["a) The values for SymmetryGroupCategory represent all of the uniform space filling (crystallographic) lattices in zero through three dimensions. There are other possible lattices which are not described in this application. Such lattices could be sparse, non-uniform or irregular. These other lattices might require additional or different parameters.","b) PointGroups0D has no symmetry operations and is included only for the sake of completeness, to include all possible crystallographic groups from zero dimensions through three dimensions.","c) PointGroups1D and LineGroups are groups which implement only one dimensional operations (although the operations are performed within the context of 3D space). The reason for implementing them is again for reasons of completeness. There may be some educational benefits to including the zero and one dimensional groups in the CrystalSym process.","d) PointGroups2D, FriezeGroups and PlaneGroups are groups which implement only two dimensional operations (although the operations are performed within the context of 3D space). An additional reason to include these groups, other than the reason of completeness, even though they are sub-groups of the 3D groups, is because the 2D group names and Lattices are familiar to a larger number of people than are the 3D group names and Lattices.","e) PointGroups3D, RodGroups, LayerGroups and SpaceGroups implement all of the crystallographic three dimensional space group operations."]}}}},"ii) Selection of Lattice Parameters for the Selected SymmetryGroupCategory Pseudo-Code:","CrystalSym.UI.getLatticeParameters\n\n",{"@attributes":{"id":"p-0083","num":"0167"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_0D"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Lattice","Enumerated","None\/Any"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0084","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_1D,"},{"entry":"LineGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Lattice","Enumerated","member of set:"]},{"entry":[{},{},{},"{ None\/Any, Row }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0085","num":"0169"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_2D,"},{"entry":"FriezeGroups,"},{"entry":"PlaneGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Lattice","Enumerated","member of set:"]},{"entry":[{},{},{},"{ None\/Any, Oblique,"]},{"entry":[{},{},{},"Rectangular\/Primitive,"]},{"entry":[{},{},{},"Rectangular\/Centered,"]},{"entry":[{},{},{},"Square, Hexagonal}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0086","num":"0170"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_3D"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Lattice","Enumerated","member of set:"]},{"entry":[{},{},{},"{None\/Any, Triclinic,"]},{"entry":[{},{},{},"Monoclinic, Orthorhombic,"]},{"entry":[{},{},{},"Tetragonal,"]},{"entry":[{},{},{},"Trigonal\/Hexagonal,"]},{"entry":[{},{},{},"Hexagonal\/Hexagonal, Cubic}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0087","num":"0171"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RodGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Lattice","Enumerated","member of set:"]},{"entry":[{},{},{},"{None\/Any, Triclinic,"]},{"entry":[{},{},{},"Monoclinic\/Inclined,"]},{"entry":[{},{},{},"Monoclinic\/Orthogonal,"]},{"entry":[{},{},{},"Orthorhombic, Tetragonal,"]},{"entry":[{},{},{},"Trigonal, Hexagonal}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0088","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 7"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"LayerGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Lattice","Enumerated","member of set:"]},{"entry":[{},{},{},"{None\/Any, Triclinic\/Oblique,"]},{"entry":[{},{},{},"Monoclinic\/Oblique,"]},{"entry":[{},{},{},"Monoclinic\/Rectangular,"]},{"entry":[{},{},{},"Orthorhombic\/Rectangular,"]},{"entry":[{},{},{},"Tetragonal\/Square,"]},{"entry":[{},{},{},"Trigonal\/Hexagonal,"]},{"entry":[{},{},{},"Hexagonal\/Hexagonal }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0089","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 8"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SpaceGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Lattice","Enumerated","member of set:"]},{"entry":[{},{},{},"{None\/Any,"]},{"entry":[{},{},{},"Triclinic,"]},{"entry":[{},{},{},"Monoclinic\/Primitive,"]},{"entry":[{},{},{},"Monoclinic\/CFaceCentered,"]},{"entry":[{},{},{},"Orthorhombic\/Primitive,"]},{"entry":[{},{},{},"Orthorhombic\/CFaceCentered,"]},{"entry":[{},{},{},"Orthorhombic\/BodyCentered,"]},{"entry":[{},{},{},"Orthorhombic\/FaceCentered,"]},{"entry":[{},{},{},"Tetragonal\/Primitive,"]},{"entry":[{},{},{},"Tetragonal\/BodyCentered,"]},{"entry":[{},{},{},"Cubic\/Primitive,"]},{"entry":[{},{},{},"Cubic\/BodyCentered,"]},{"entry":[{},{},{},"Cubic\/FaceCentered,"]},{"entry":[{},{},{},"Trigonal,"]},{"entry":[{},{},{},"Trigonal\/Hexagonal,"]},{"entry":[{},{},{},"Hexagonal\/Hexagonal }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0090","num":"0174"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 9"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Default values recommended for when not specified for the indicated"},{"entry":"SymmetryGroupCategory. Any default value is acceptable however."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"aInstances","Integer","aInstances == 1"]},{"entry":[{},"bInstances","Integer","bInstances == 1"]},{"entry":[{},"cInstances","Integer","cInstances == 1"]},{"entry":[{},"aDirection","Enumerated","positive"]},{"entry":[{},"bDirection","Enumerated","positive"]},{"entry":[{},"cDirection","Enumerated","positive"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0091","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_0D"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"No Further Parameters"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0092","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 11"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_1D"},{"entry":"LineGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"aInstances","Integer","aInstances > 0"]},{"entry":[{},"aDirection","Enumerated","member of set:"]},{"entry":[{},{},{},"{ positive, negative, centered }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0093","num":"0177"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 12"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_2D"},{"entry":"FriezeGroups"},{"entry":"PlaneGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"aInstances","Integer","aInstances > 0"]},{"entry":[{},"bInstances","Integer","bInstances > 0"]},{"entry":[{},"aDirection","Enumerated","member of set:"]},{"entry":[{},{},{},"{ positive, negative, centered }"]},{"entry":[{},"bDirection","Enumerated","member of set:"]},{"entry":[{},{},{},"{ positive, negative, centered }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0094","num":"0178"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 13"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_3D"},{"entry":"RodGroups"},{"entry":"LayerGroups"},{"entry":"SpaceGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"aInstances","Integer","aInstances > 0"]},{"entry":[{},"bInstances","Integer","bInstances > 0"]},{"entry":[{},"cInstances","Integer","cInstances > 0"]},{"entry":[{},"aDirection","Enumerated","member of set:"]},{"entry":[{},{},{},"{ positive, negative, centered }"]},{"entry":[{},"bDirection","Enumerated","member of set:"]},{"entry":[{},{},{},"{ positive, negative, centered }"]},{"entry":[{},"cDirection","Enumerated","member of set:"]},{"entry":[{},{},{},"{ positive, negative, centered }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"iii) Selection of Unit Cell parameters for selected symmetry group category or Lattice. The prior selection of a Lattice is necessary if one wishes to constrain the choices for the angular dimensions of the Unit Cell to choices that are valid for the Lattice.","psuedocode:","CrystalSym.UI.getUnitCellParameters\n\n",{"@attributes":{"id":"p-0098","num":"0184"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["alphaAngle","Real (floating point)","alphaAngle == 90.0"]},{"entry":["betaAngle","Real (floating point)","betaAngle == 90.0"]},{"entry":["gammaAngle","Real (floating point)","gammaAngle == 90.0"]},{"entry":["aVectorMagnitude","Real (floating point)","aVectorMagnitude == 1.0"]},{"entry":["bVectorMagnitude","Real (floating point)","bVectorMagnitude == 1.0"]},{"entry":["cVectorMagnitude","Real (floating point)","cVectorMagnitude == 1.0"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0058","list-style":"none"},"li":{"@attributes":{"id":"ul0058-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0059","list-style":"none"},"li":["b) Alternatively, default magnitude values based upon the size of the selected object may be more appropriate. Usually the magnitudes of the UnitCell vectors a, b and c would be in a similar size range to the size of the selected object(s). However any values within the capabilities of the host system to handle are acceptable in terms of the process itself.","c) In the situations where the values are not specified (because they are not within the dimensions of the space), the values would not affect the building of the Unit Cell, but could affect the Lattice, should it be built in the direction of a vector which is not a part of the default space of the Unit Cell."]}}}},{"@attributes":{"id":"p-0099","num":"0187"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 14"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"For all SymmetryGroupCategory values"},{"entry":"(these parameters would usually be assumed)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Origin","3D Point","The origin of the"]},{"entry":[{},{},"UnitCell."]},{"entry":[{},{},"The aVector, bVector and cVector which"]},{"entry":[{},{},"intersect the Origin are the axes which"]},{"entry":[{},{},"form the coordinate system"]},{"entry":[{},{},"of the UnitCell."]},{"entry":[{},{},"The Origin is the SymmetryPoint for"]},{"entry":[{},{},"PointGroups_1D, PointGroups_2D"]},{"entry":[{},{},"and PointGroups_3D."]},{"entry":["aVectorDirection","3D Vector","The aVectorDirection and"]},{"entry":["bVectorDirection","3D Vector","bVectorDirection which"]},{"entry":[{},{},"intersect the Origin"]},{"entry":[{},{},"together define the SymmetryPlane for"]},{"entry":[{},{},"PlaneGroups and LayerGroups."]},{"entry":["cVectorDirection","3D Vector","The cVectorDirection"]},{"entry":[{},{},"through the Origin"]},{"entry":[{},{},"is the SymmetryLine for LineGroups,"]},{"entry":[{},{},"FriezeGroups and RodGroups."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0100","num":"0188"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 15"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_1D"},{"entry":"PointGroups_2D"},{"entry":"PointGroups_3D"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"SymmetryPoint","3D point","The host system may determine"]},{"entry":[{},{},{},"the best way to specify a point."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"There are no UnitCell Dimensions for PointGroups_1D, PointGroups_2D"},{"entry":"and PointGroups_3D."},{"entry":"Alternatively:"},{"entry":"For Pointgroups_1D, one could implement the one LineGroups UnitCell"},{"entry":"Dimension. For PointGroups_2D, one could implement the three"},{"entry":"PlaneGroups UnitCell Dimensions. For PointGroups_3D, one could"},{"entry":"implement the six SpaceGroups UnitCell Dimensions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0101","num":"0189"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 16"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"LineGroups"},{"entry":"FriezeGroups"},{"entry":"RodGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"SymmetryLine","3D line","The host system may determine"]},{"entry":[{},{},{},"the best way to specify a line."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"There is one UnitCell Dimension for LineGroups,"},{"entry":"FriezeGroups and RodGroups."},{"entry":"aVectorMagnitude Real (floating point) a_Magnitude > 0.0"},{"entry":"Alternatively:"},{"entry":"For FriezeGroups, one could implement the three PlaneGroups UnitCell"},{"entry":"Dimensions. For RodGroups, one could implement the six SpaceGroups"},{"entry":"UnitCell Dimensions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0102","num":"0190"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 17"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PlaneGroups"},{"entry":"LayerGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryPlane","3D plane","The host system may"]},{"entry":[{},{},"determine the best way to"]},{"entry":[{},{},"specify a plane."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"There are three UnitCell Dimensions for PlaneGroups and LayerGroups."},{"entry":"vectors a and b, and the angle between them gamma"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["aVectorMagnitude","Real (floating point)","aVectorMagnitude > 0.0"]},{"entry":[{},{},"with Lattice conditions below"]},{"entry":["bVectorMagnitude","Real (floating point)","bVectorMagnitude > 0.0"]},{"entry":[{},{},"with Lattice conditions below"]},{"entry":["gammaAngle","Real (floating point)","depends upon Lattice"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"None\/Any","No Conditions"]},{"entry":[{},"Oblique","0.0 < gamma_angle < 180.0"]},{"entry":[{},"Rectangular","gamma_angle = 90.0"]},{"entry":[{},"Square","gamma_angle = 90.0"]},{"entry":[{},{},"aVectorMagnitude =="]},{"entry":[{},{},"bVectorMagnitude"]},{"entry":[{},"Hexagonal","gamma_angle = 120.0"]},{"entry":[{},{},"aVectorMagnitude =="]},{"entry":[{},{},"bVectorMagnitude"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Alternatively:"},{"entry":"For LayerGroups, one could implement the six SpaceGroups UnitCell"},{"entry":"Dimensions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0103","num":"0191"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"336pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SpaceGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetrySpace","3D space","Usually it is assumed."]},{"entry":[{},{},"It is possible that a host system"]},{"entry":[{},{},"may have more than one space being modeled. It would"]},{"entry":[{},{},"then have a way of specifying the space."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"336pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"There are six UnitCell dimensions for SpaceGroups."},{"entry":"vectors a, b, c and the angles between them alpha, beta, gamma"},{"entry":"alpha is the angle between vectors b and c"},{"entry":"beta is the angle between vectors c and a"},{"entry":"gamma is the angle between vectors a and b"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["aVectorMagnitude","Real (floating point)","aVectorMagnitude > 0.0"]},{"entry":[{},{},"with Lattice conditions below"]},{"entry":["bVectorMagnitude","Real (floating point)","bVectorMagnitude > 0.0"]},{"entry":[{},{},"with Lattice conditions below"]},{"entry":["cVectorMagnitude","Real (floating point)","cVectorMagnitude > 0.0"]},{"entry":[{},{},"with Lattice conditions below"]},{"entry":["alphaAngle","Real (floating point)","depends upon Lattice"]},{"entry":["betaAngle","Real (floating point)","depends upon Lattice"]},{"entry":["gammaAngle","Real (floating point)","depends upon Lattice"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Lattice","Values"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"None\/Any, Triclinic","0.0 < alpha_angle < 180.0"]},{"entry":[{},{},"0.0 < beta_angle < 180.0"]},{"entry":[{},{},"0.0 < gamma_angle < 180.0"]},{"entry":[{},"Monoclinic\/Inclined,","0.0 < alpha_angle < 180.0"]},{"entry":[{},"Monoclinic\/Rectangular","beta_angle = 90.0"]},{"entry":[{},{},"gamma_angle = 90.0"]},{"entry":[{},"Monoclinic\/Orthogonal,","alpha_angle = 90.0"]},{"entry":[{},"Monoclinic\/Oblique,","beta_angle = 90.0"]},{"entry":[{},"Monoclinic\/Primitive","0.0 < gamma_angle < 180.0"]},{"entry":[{},"Monoclinic\/CFaceCentered","alpha_angle = 90.0"]},{"entry":[{},{},"0.0 < beta_angle < 180.0"]},{"entry":[{},{},"gamma_angle = 90.0"]},{"entry":[{},"Orthorhombic,","alpha_angle = 90.0"]},{"entry":[{},"Tetragonal, Cubic","beta_angle = 90.0"]},{"entry":[{},{},"gamma_angle = 90.0"]},{"entry":[{},"Tetragonal","aVectorMagnitude == bVectorMagnitude"]},{"entry":[{},"Cubic","aVectorMagnitude == bVectorMagnitude == cVectorMagnitude"]},{"entry":[{},"Trigonal","alpha_angle < 120.0"]},{"entry":[{},{},"beta_angle < 120.0"]},{"entry":[{},{},"gamma_angle < 120.0"]},{"entry":[{},{},"aVectorMagnitude == bVectorMagnitude == cVectorMagnitude"]},{"entry":[{},"Hexagonal","alpha_angle = 90.0"]},{"entry":[{},{},"beta_angle = 90.0"]},{"entry":[{},{},"gamma_angle = 120.0"]},{"entry":[{},{},"aVectorMagnitude == bVectorMagnitude"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"iv) Selection of Symmetry Group and\/or Relationships Psuedocode:","CrystalSym.UI.getSymmetryGroupParameters\n\n",{"@attributes":{"id":"p-0106","num":"0206"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 19"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_0D"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"SymmetryNumber","Integer","0"]},{"entry":[{},"SymmetryName","Enumerated","0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0107","num":"0207"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 20"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_1D"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"SymmetryNumber","Integer","0 < SymmetryNumber <= 2"]},{"entry":[{},"SymmetryName","Enumerated","member of set: { 1, m }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0108","num":"0208"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 21"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"LineGroups"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter","Type","Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"SymmetryNumber","Integer","0 < SymmetryNumber <= 2"]},{"entry":[{},"SymmetryName","Enumerated","member of set: { 11, 1m }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0109","num":"0209"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 22"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_2D"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryNumber","Integer","0 < SymmetryNumber <= 10"]},{"entry":["SymmetryName","Enumerated","Member of set depending upon"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","Value Sets"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Oblique","{ 1, 2 }"]},{"entry":[{},"Rectangular","{ m, 2m }"]},{"entry":[{},"Square","{ 4, 4m }"]},{"entry":[{},"Hexagonal","{ 3, 3m, 6, 6m }"]},{"entry":[{},"None\/Any","{ X, Xm }"]},{"entry":[{},{},"where X is an integer > 0"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0110","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 23"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"FriezeGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryNumber","Integer","0 < SymmetryNumber <= 7"]},{"entry":["SymmetryName","Enumerated","Member of set depending upon"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","Value Sets"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Oblique","{ p1, p211 }"]},{"entry":[{},"Rectangular","{ p1m1, p11m, p11g,"]},{"entry":[{},{},"p2mm, p2mg }"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0111","num":"0211"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 24"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PlaneGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryNumber","Integer","0 < SymmetryNumber <= 17"]},{"entry":["SymmetryName","Enumerated","Member of set depending upon"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","Value Sets"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Oblique","{ p1, p2 }"]},{"entry":[{},"Rectangular\/","{ pm, pg,"]},{"entry":[{},"Primitive","pmm, pmg, pgg }"]},{"entry":[{},"Rectangular\/","{ cm, cmm }"]},{"entry":[{},"Centered"]},{"entry":[{},"Square","{ p4, p4m, p4g }"]},{"entry":[{},"Hexagonal","{ p3, p3m1, p31m,"]},{"entry":[{},{},"p6, p6m }"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0112","num":"0212"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 25"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PointGroups_3D"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryNumber","Integer","0 < SymmetryNumber <= 32"]},{"entry":["SymmetryName","Enumerated","Member of set depending upon"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","Possible Name Values"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Triclinic","{ 1, \u22121 }"]},{"entry":[{},"Monoclinic","{ 2, m, 2\/m }"]},{"entry":[{},"Orthorhombic","{ 222, mm2, mmm }"]},{"entry":[{},"Tetragonal","{ 4, \u22124, 4\/m, 422,"]},{"entry":[{},{},"4mm, \u221242m, 4\/mmm }"]},{"entry":[{},"Trigonal","{ 3, \u22123, 32, 3m, \u22123m }"]},{"entry":[{},"Hexagonal","{ 6, \u22126, 6\/m, 622, 6mm,"]},{"entry":[{},{},"\u22126m2, 6\/mmm }"]},{"entry":[{},"Cubic","{ P23, Pm3, P432, P-43m,"]},{"entry":[{},{},"Pm3m }"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0113","num":"0213"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 26"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RodGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryNumber","Integer","0 < SymmetryNumber < 75"]},{"entry":["SymmetryName","Enumerated","member of set depending upon"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","ValueSets"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Triclinic","{ p1, p-1 }"]},{"entry":[{},"Monoclinic\/","{ p2, pm, pc, p2\/m, p2\/c }"]},{"entry":[{},"Inclined"]},{"entry":[{},"Monoclinic\/","{ p112, p112(1), p11m,"]},{"entry":[{},"Orthogonal","p112\/m, p112(1)\/m }"]},{"entry":[{},"Orthorhombic","{ p222, p222(1), pmm2,"]},{"entry":[{},{},"pcc2, pmc2(1), p2mm,"]},{"entry":[{},{},"p2cm, pmmm, pccm, pmcm }"]},{"entry":[{},"Tetragonal","{ p4, p4(1), p4(2), p4(3),"]},{"entry":[{},{},"p-4, p4\/m, p4(2)\/m, p422,"]},{"entry":[{},{},"p4(1)22, p4(2)22, p4(3)22,"]},{"entry":[{},{},"p4mm, p4(2)cm, p4cc, p-42m,"]},{"entry":[{},{},"p-42c, p4\/mmm,"]},{"entry":[{},{},"p4\/mcc, p4(2)\/mmc }"]},{"entry":[{},"Trigonal\/","{ p3, p3(1), p3(2), p-3,"]},{"entry":[{},"Hexagonal","p312, p3(1)12, p3(2)12,"]},{"entry":[{},{},"p3m1, p3c1, p-31m, p-31c }"]},{"entry":[{},"Hexagonal\/","{ p6, p6(1), p6(2), p6(3),"]},{"entry":[{},"Hexagonal","p6(4), p6(5), p-6, p6\/m,"]},{"entry":[{},{},"p6(3)\/m, p622, p6(1)22,"]},{"entry":[{},{},"p6(2)22, p6(3)22, p6(4)22,"]},{"entry":[{},{},"p6(5)22, p6mm, p6cc, p6(3)mc,"]},{"entry":[{},{},"p-6m2, p-6c2, p6\/mmm,"]},{"entry":[{},{},"p6\/mcc, p6\/mmc }"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0114","num":"0214"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 27"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"LayerGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryNumber","Integer","0 < SymmetryNumber < 80"]},{"entry":["SymmetryName","Enumerated","member of set depending upon"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","Value Sets"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Triclinic","{ p1, p-1 }"]},{"entry":[{},"Monoclinic\/","{ p112, p11m, p11a,"]},{"entry":[{},"Oblique","p112\/m, p112\/a }"]},{"entry":[{},"Monoclinic\/","{ p211, p2(1)11, c211, pm11,"]},{"entry":[{},"Rectangular","pb11, cm11, p2\/m11, p2(1)\/m11,"]},{"entry":[{},{},"p2\/b11, p2(1)\/b11, c2\/m11 }"]},{"entry":[{},"Orthorhombic\/","{ p222, p2(1)22, p2(1)2(1)2,"]},{"entry":[{},"Rectangular","c222, pmm2, pma2, pba2, cmm2,"]},{"entry":[{},{},"pm2m, pm2(1)b, pb2(1)m, pb2b,"]},{"entry":[{},{},"pm2a, pm2(1)n, pb2(1)a, pb2n,"]},{"entry":[{},{},"cm2m, cm2e, pmmm, pmaa, pban,"]},{"entry":[{},{},"pmam, pmma, pman, pbaa, pbam,"]},{"entry":[{},{},"pbma, pmmn, cmmm, cmme }"]},{"entry":[{},"Tetragonal\/","{ p4, p-4, p4\/m, p4\/n, p422,"]},{"entry":[{},"Square","p42(1)2, p4mm, p4bm,"]},{"entry":[{},{},"p-42m, p-42(1)m, p-4m2, p-4b2,"]},{"entry":[{},{},"p4\/mmm, p4\/nbm, p4\/mbm,"]},{"entry":[{},{},"p4\/nm }"]},{"entry":[{},"Trigonal\/","{ p3, p-3, p312, p321,"]},{"entry":[{},"Hexagonal","p3m1, p31m, p-31m, p-3m1 }"]},{"entry":[{},"Hexagonal\/","{ p6, p-6, p6\/m, p622,"]},{"entry":[{},"Hexagonal","p6mm, p-6m2, p-62m, p6\/mmm }"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0115","num":"0215"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 28"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SpaceGroups"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Type","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["SymmetryNumber","Integer","0 < SymmetryNumber < 230"]},{"entry":["SymmetryName","Enumerated","member of set depending upon"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Lattice","Value Sets"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Triclinic","{\u2003\u2002P1, P-1 }"]},{"entry":[{},"Monoclinic\/Primitive","{\u2003\u2002P2, P2(1), Pm, Pc, P2\/m,"]},{"entry":[{},{},"\u2003\u2003P2(1)\/m, P2\/c, P2(1)\/c }"]},{"entry":[{},"Monoclinic\/CFaceCentered","{\u2003\u2002C2, Cm, Cc, C2\/m, C2\/c }"]},{"entry":[{},"Orthorhombic\/Primitive","{\u2003\u2002P222, P222(1), P2(1)2(1)2,"]},{"entry":[{},{},"\u2003\u2003P2(1)2(1)2(1), Pmm2, Pmc2(1),"]},{"entry":[{},{},"\u2003\u2003Pcc2, Pma2, Pca2(1), Pnc2,"]},{"entry":[{},{},"\u2003\u2003Pmn2(1), Pba2, Pna2(1), Pnn2,"]},{"entry":[{},{},"\u2003\u2003Pmmm, Pnnn, Pccm, Pban, Pmma,"]},{"entry":[{},{},"\u2003\u2003Pnna, Pmna, Pcca, Pbam, Pccn,"]},{"entry":[{},{},"\u2003\u2003Pbcm, Pnnm, Pmmn, Pbcn, Pbca,"]},{"entry":[{},{},"\u2003\u2003Pnma }"]},{"entry":[{},"Orthorhombic\/CFaceCentered","{\u2003\u2002C222(1), C222, Cmm2, Cmc2(1),"]},{"entry":[{},{},"\u2003\u2003Ccc2, Amm2, Abm2, Ama2, Aba2,"]},{"entry":[{},{},"\u2003\u2003Cmcm, Cmca, Cmmm, Cccm, Cmma,"]},{"entry":[{},{},"\u2003\u2003Ccca }"]},{"entry":[{},"Orthorhombic\/BodyCentered","{\u2003\u2002I222, I2(1)2(1)2(1), Imm2, Iba2,"]},{"entry":[{},{},"\u2003\u2003Ima2, Imm, Ibam, Ibca, Imma }"]},{"entry":[{},"Orthorhombic\/FaceCentered","{\u2003\u2002F222, Fmm2, Fdd2, Fmmm, Fddd }"]},{"entry":[{},"Tetragonal\/Primitive","{\u2003\u2002P4, P4(1), P4(2), P4(3), P-4,"]},{"entry":[{},{},"\u2003\u2003P4\/m, P4(2)\/m, P4\/n, P4(2)\/n,"]},{"entry":[{},{},"\u2003\u2003P422, P42(1)2, P4(1)22,"]},{"entry":[{},{},"\u2003\u2003P4(1)2(1)2, P4(2)22,"]},{"entry":[{},{},"\u2003\u2003P4(2)2(1)2, P4(3)22,"]},{"entry":[{},{},"\u2003\u2003P4(3)2(1)2, P4mm, P4bm,"]},{"entry":[{},{},"\u2003\u2003P4(2)cm, P4(2)nm, P4cc, P4nc,"]},{"entry":[{},{},"\u2003\u2003P4(2)mc, P4(2)bc, P-42m,"]},{"entry":[{},{},"\u2003\u2003P-42c, P-42(1)m, P-42(1)c,"]},{"entry":[{},{},"\u2003\u2003P-4m2, P-4c2, P-4b2, P-4n2,"]},{"entry":[{},{},"\u2003\u2003P4\/mmm, P4\/mcc, P4\/nbm,"]},{"entry":[{},{},"\u2003\u2003P4\/nnc, P4\/mbm, P4\/mnc,"]},{"entry":[{},{},"\u2003\u2003P4\/nmm, P4\/ncc, P4(2)\/mmc,"]},{"entry":[{},{},"\u2003\u2003P4(2)\/mcm, P4(2)\/nbc,"]},{"entry":[{},{},"\u2003\u2003P4(2)\/nnm, P4(2)\/mbc,"]},{"entry":[{},{},"\u2003\u2003P4(2)\/mnm, P4(2)\/nmc,"]},{"entry":[{},{},"\u2003\u2003P4(2)\/ncm }"]},{"entry":[{},"Tetragonal\/BodyCentered","{\u2003\u2002I4, I4(1), I-4, I4\/m, I4(1)\/a,"]},{"entry":[{},{},"\u2003\u2003I422, I4(1)22, I4mm, I4cm,"]},{"entry":[{},{},"\u2003\u2003I4(1)md, I4(1)cd, I-4m2,"]},{"entry":[{},{},"\u2003\u2003I-4c2, I-42m, I-42d, I4\/mmm,"]},{"entry":[{},{},"\u2003\u2003I4\/mcm, I4(1)\/amd, I4(1)\/acd}"]},{"entry":[{},"Cubic\/Primitive","{\u2003\u2002P23, P2(1)3, Pm-3, Pn-3, Pa-3, P432,"]},{"entry":[{},{},"\u2003\u2003P4(2)32, P4(3)32, P4(1)32,"]},{"entry":[{},{},"\u2003\u2003P-43m, P-43n, Pm-3m, Pn-3n,"]},{"entry":[{},{},"\u2003\u2003Pm-3n, Pn-3m }"]},{"entry":[{},"Cubic\/BodyCentered","{\u2003\u2002I23, I2(1)3, Im-3, Ia-3, I432,"]},{"entry":[{},{},"\u2003\u2003I4(1)32, I-43m, I-43d, Im-3m,"]},{"entry":[{},{},"\u2003\u2003Ia-3d }"]},{"entry":[{},"Cubic\/FaceCentered","{\u2003\u2002F23, Fm-3, Fd-3, F432, F4(1)32,"]},{"entry":[{},{},"\u2003\u2003F-43m, F-43c, Fm-3m, Fm-3c,"]},{"entry":[{},{},"\u2003\u2003Fd-3m, Fd-3c }"]},{"entry":[{},"Trigonal","{\u2003\u2002R3, R-3, R32, R3m, R3c, R-3m, R-3c }"]},{"entry":[{},"Trigonal\/Hexagonal","{\u2003\u2002P3, P3(1), P3(2), P-3,"]},{"entry":[{},{},"\u2003\u2003P312, P321, P3(1)12,"]},{"entry":[{},{},"\u2003\u2003P3(1)21, P3(2)12, P3(2)21,"]},{"entry":[{},{},"\u2003\u2003P3m1, P31m, P3c1, P31c,"]},{"entry":[{},{},"\u2003\u2003P-31m, P-31c, P-3m1,"]},{"entry":[{},{},"\u2003\u2003P-3c1 }"]},{"entry":[{},"Hexagonal\/Hexagonal","{\u2003\u2002P6, P6(1), P6(5), P6(2),"]},{"entry":[{},{},"\u2003\u2003P6(4), P6(3), P-6, P6\/m,"]},{"entry":[{},{},"\u2003\u2003P6(3)\/m, P622, P6(1)22,"]},{"entry":[{},{},"\u2003\u2003P6(5)22, P6(2)22, P6(4)22,"]},{"entry":[{},{},"\u2003\u2003P6(3)22, P6mm, P6cc, P6(3)cm,"]},{"entry":[{},{},"\u2003\u2003P6(3)mc, P-6m2, P-6c2, P-62m,"]},{"entry":[{},{},"\u2003\u2003P-62c, P6\/mmm, P6\/mcc,"]},{"entry":[{},{},"\u2003\u2003P6(3)\/mcm, P6(3)\/mmc }"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Creation of a Lattice of Unit Cells within the Host System's virtual space. The UnitCell consists of instances of the user selected virtual object(s) each instance having been transformed according to the user selected symmetry group and UnitCell parameters.","The Lattice consists of instances of the created UnitCells, each instance having been transformed according to the selected Lattice parameters.","In systems which implement 3D virtual space, objects are often created in a graph structure. Our graph structure is:\n\n","If the Host System does not implement graph structure for its objects, then it may be necessary to implement the process using copies of the selected object (s) rather than references. The implementer may wish to keep track of the graph relationship information in this case, in order to maintain object relationships when objects are moved within the host system subsequent to their creation.","If the host system does not allow objects to be grouped, then the implementation will need to handle the grouping of objects. This process description assumes that objects can be grouped within the host system.","One may need to query and store the current location of the selected object(s) within the graph structure in order to insert the Lattice of UnitCells which gets created into the correct location within that structure. One can also create the Lattice outside of the current object hierarchy. This will depend upon the needs of the implementation.","Following is an outline of the basic steps of the process:\n\n","The above process description builds the Lattice from the bottom up, ie: first makes the AsymetricUnit instances to build the UnitCell, then makes the UnitCell instances to build the Lattice. The order in which the steps appear is influenced by the capabilities of the most recent host system within which I implemented the CrystalSym process. Several of the steps could be done in a different order. It is also possible to implement the process in the reverse order. Which order is best may depend upon the Host System.","One possible reverse ordering of the steps follows:\n\n","Note that the below pseudo-code might sometimes look like C++ but it is not code. The implementer of the process will need to decide in which language to implement the CrystalSym process, declare types and variables, objects and methods, etc. in order to implement the process. This pseudo-code simply details the logic of the process. Any process which substantially follows the logic detailed herein would be considered an implementation of the CrystalSym process.","Comments are preceded by \u201c\/*\u201d and ended with \u201c*\/\u201d. Logical steps of the process are the sections which are not enclosed by comment markers.","Any section of the logic which is [optional] to the process will be preceded by [begin optional section] and ended by [end optional section]",{"@attributes":{"id":"p-0128","num":"0254"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003Detail of the CrystalSym Process"]},{"entry":[{},"pseudo-code:"]},{"entry":[{},"CrystalSym.createLatticeOfUnitCells ( )"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003[begin optional section]"]},{"entry":[{},"\u2003\u2003\/*"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0129","num":"0255"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"A) Ensure that the CrystalSym process is initialized."},{"entry":"That is, ensure that access to the matrix data for the operations is available"},{"entry":"to the process. This step is optional only in the sense that if you don't"},{"entry":"do it then your process may not work if the data is not available."},{"entry":"*\/"},{"entry":"If (the CrystalSym process is not initialized)"},{"entry":"{"},{"entry":"\u2003\u2003CrystalSym.initSymmetryGroups( );"},{"entry":"\u2003\u2003CrystalSym.setupErrorHandlers( );"},{"entry":"\u2003\u2003\/* Do anything else you need to do to initialize your"},{"entry":"\u2003\u2003particular implementation of the process. *\/"},{"entry":"}"},{"entry":"[end optional section]"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0070","list-style":"none"},"li":{"@attributes":{"id":"ul0070-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0071","list-style":"none"},"li":"B) Initialize values from selected parameters.\n        \n        "}}}},{"@attributes":{"id":"p-0130","num":"0261"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"symmetryGroupCategory ="},{"entry":"CrystalSym.UI.getSymmetryGroupCategory( );"},{"entry":"for (each Lattice parameterName needed)"},{"entry":"{"},{"entry":"\u2003\u2003lattice.parameterName"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.UI.getLatticeParameters"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(symmetryGroupCategory, parameterName);"},{"entry":"}"},{"entry":"for (each UnitCell parameterName needed)"},{"entry":"{"},{"entry":"\u2003\u2003unitCell.parameterName"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.UI.getUnitCellParameters"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(symmetryGroupCategory, lattice, parameterName);"},{"entry":"}"},{"entry":"SymmetryNumber"},{"entry":"\u2003\u2003= CrystalSym.UI.getSymmetryGroupParameters"},{"entry":"\u2003\u2003\u2003\u2003(symmetryGroupCategory, lattice, \u201cSymmetryNumber\u201d);"},{"entry":"\u2003\u2003SymmetryName"},{"entry":"\u2003\u2003\u2003\u2003CrystalSym.UI.getSymmetryGroupParameters"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(symmetryGroupCategory, lattice, \u201cSymmetryName\u201d);"},{"entry":"[end optional section]"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0073","list-style":"none"},"li":{"@attributes":{"id":"ul0073-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0074","list-style":"none"},"li":["C) Initialize values from selected object(s).","It is an optional step, if you have direct access to the selected object(s) and there is one. Not checking whether there is actually a selected object, just makes your process less robust. *\/"]}}}},{"@attributes":{"id":"p-0131","num":"0264"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"object = HostSystem.selectedObject( );"]},{"entry":[{},"[begin optional section]"]},{"entry":[{},"if (there is no selected object)"]},{"entry":[{},"\u2003\u2003CrystalSym.handleTheError( \u201cNo Object Selected\u201d );"]},{"entry":[{},"else if (object is a previously created UnitCell)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\/* That is, object is a single selected object and it is a"]},{"entry":[{},"\u2003\u2003unitCell object created via a previous invocation of the"]},{"entry":[{},"\u2003\u2003CrystalSym process *\/"]},{"entry":[{},"\u2003\u2003if (the user wishes to have the UnitCell parameters be set"]},{"entry":[{},"\u2003\u2003\u2003\u2003according to those that are stored within object)"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/* Set parameters from this previously created object."]},{"entry":[{},"\u2003\u2003\u2003\u2003This is an optional feature of the CrystalSym process."]},{"entry":[{},"\u2003\u2003\u2003\u2003This overrides some of the parameters set in step B) *\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003CrystalSym.UI.setUnitCellParametersFrom(object);"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":[{},"[end optional section]"]},{"entry":[{},"\/*"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0075","list-style":"none"},"li":{"@attributes":{"id":"ul0075-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0076","list-style":"none"},"li":"D) Group the selected object(s). This is called the AsymetricUnit. Create and initialize the asymetricUnit.\n        \n        "}}}},{"@attributes":{"id":"p-0132","num":"0268"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"\u2003\u2003asymetricUnit.object"},{"entry":"\u2003\u2003\u2003\u2003= HostSystem.group(object, CrystalSym.createUniqueNaine( ));"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0078","list-style":"none"},"li":{"@attributes":{"id":"ul0078-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0079","list-style":"none"},"li":"E) Create object reference nodes (AsymetricUnit instances) with the requested symmetry operation transformations, pointing them to (making them parents of) the AsymetricUnit.\n        \n        "}}}},{"@attributes":{"id":"p-0133","num":"0271"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"if (SymmetryNumber is valid)"},{"entry":"\u2003\u2003\/* get the symmetryOpList corresponding to SymmetryNumber *\/"},{"entry":"\u2003\u2003symmetryOpList = CrystalSym.getSymmetryOperationsFor"},{"entry":"\u2003\u2003\u2003\u2003(SymmetryGroupCategory , SymmetryNumber );"},{"entry":"else if (SymmetryName is specified )"},{"entry":"\u2003\u2003\/* get the symmetryOpList corresponding to SymmetryName *\/"},{"entry":"\u2003\u2003symmetryOpList = CrystalSym.getSymmetryOperationsFor"},{"entry":"\u2003\u2003\u2003\u2003(SymmetryGroupCategory, SymmetryName );"},{"entry":"if (no symmetryOpList was found)"},{"entry":"\u2003\u2003CrystalSym.handleTheError(\u201cInvalid or No Symmetry Operation\u201d);"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0081","list-style":"none"},"li":{"@attributes":{"id":"ul0081-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0082","list-style":"none"},"li":{"@attributes":{"id":"ul0082-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0083","list-style":"none"},"li":"ii) create an instance for each operation in the group *\/ for (each operation (currentOperation) in symmetryOpList)"}}}}}},{"@attributes":{"id":"p-0134","num":"0273"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"{"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003a) create the object instance for this operation."},{"entry":"\u2003\u2003\u2003\u2003Depending upon how the host system implements object"},{"entry":"\u2003\u2003instancing, it may be that the implementation will want to use"},{"entry":"\u2003\u2003the AsymmetricUnit as the first object instance, then create"},{"entry":"\u2003\u2003references to that first object for subsequent instances. That"},{"entry":"\u2003\u2003can work assuming that the first matrix is the identity matrix,"},{"entry":"\u2003\u2003as it always is in the files accompanying this specification."},{"entry":"\u2003\u2003It may also depend upon how graph structure is implemented within"},{"entry":"\u2003\u2003the host system."},{"entry":"\u2003\u2003\u2003\u2003This description of the process creates a graph"},{"entry":"\u2003\u2003where each instance, including the first one, is a parent of the"},{"entry":"\u2003\u2003asymmetric unit. That is they point to the asymmetric unit as"},{"entry":"\u2003\u2003their object description."},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003asymmetricUnitInstance = HostSystem.createObjectInstance"},{"entry":"\u2003\u2003\u2003\u2003(asymmetricUnit, CrystalSym.createuniqueName( ));"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003b) place the newObject instance above the asymmetricUnit"},{"entry":"\u2003\u2003in the HostSystem object graph. This might be done by the"},{"entry":"\u2003\u2003HostSystem when the object is created in part a)"},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003HostSystem.addParent"},{"entry":"\u2003\u2003\u2003\u2003(asymmetricUnit, asymmetricUnitInstance);"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003c) create the transform matrix for this operation *\/"},{"entry":"\u2003\u2003\/* get the UnitCell Matrix [M] for the current operation *\/"},{"entry":"\u2003\u2003M = CrystalSym.List.getObjectAtIndex"},{"entry":"\u2003\u2003\u2003\u2003(symmetryOpList, currentOperation);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0084","list-style":"none"},"li":{"@attributes":{"id":"ul0084-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0085","list-style":"none"},"li":{"@attributes":{"id":"ul0085-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0086","list-style":"none"},"li":{"@attributes":{"id":"ul0086-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0087","list-style":"none"},"li":["\/* Create the [C2U] and [U2C] matrices.","See Equation 2, Equation 3 and Equation 4 in Chapter IV, Specification of Symmetry Operations and Files. The following parameters are needed for the creation of the [C2U] and [U2C] matrices. They are listed with the symbols which correspond to each parameter in the Equations:"]}}}}}}}},{"@attributes":{"id":"p-0135","num":"0276"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 29"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Parameter","Name in Equations"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aVectorMagnitude","a"]},{"entry":[{},"bVectorMagnitude","b"]},{"entry":[{},"cVectorMagnitude","c"]},{"entry":[{},"alphaAngle","\u03b1"]},{"entry":[{},"betaAngle","\u03b2"]},{"entry":[{},"gammaAngle","\u03b3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0136","num":"0277"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"C2U = CrystalSym.Matrix.createC2U("},{"entry":"\u2003\u2003aVectorMagnitude, bVectorMagnitude,"},{"entry":"\u2003\u2003cVectorMagnitude, alphaAngle,"},{"entry":"\u2003\u2003betaAngle, gammaAngle);"},{"entry":"U2C = CrystalSym.Matrix.createU2C("},{"entry":"\u2003\u2003aVectorMagnitude, bVectorMagnitude,"},{"entry":"\u2003\u2003cVectorMagnitude, alphaAngle,"},{"entry":"\u2003\u2003betaAngle, gammaAngle);"},{"entry":"operationMatrix = CrystalSym.Matrix.combine(C2U, M, U2C);"},{"entry":"\/*"},{"entry":"d) Set the Matrix and\/or transformation values for the"},{"entry":"instance"},{"entry":"*\/"},{"entry":"if (the host system allows"},{"entry":"\u2003\u2003direct setting of transformation matrix)"},{"entry":"{"},{"entry":"\u2003\u2003HostSystem.setTransformMatrix"},{"entry":"\u2003\u2003\u2003\u2003(asymmetricUnitInstance, operationMatrix);"},{"entry":"}"},{"entry":"else"},{"entry":"{"},{"entry":"\u2003\u2003HostSystem.setScale"},{"entry":"\u2003\u2003\u2003\u2003(asymmetricUnitInstance,"},{"entry":"\u2003\u2003\u2003\u2003CrystalSym.Matrix.scaleValues"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(operationMatrix));"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.setRotation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(asymmetricUnitInstance,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.Matrix.rotationValues"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(operationMatrix));"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.setTranslation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(asymmetricUnitInstance,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.Matrix.translationValues"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(operationMatrix));"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003e) add the instance to a list or in some other way keep"},{"entry":"\u2003\u2003\u2003\u2003track of the instances that this loop is creating)"},{"entry":"\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003CrystalSym.List.add"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(asymUnitInstanceList, asymmetricUnitInstance);"},{"entry":"\u2003\u2003} \/* End of Section E)ii) All asymmetricUnitInstances are created *\/"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0088","list-style":"none"},"li":{"@attributes":{"id":"ul0088-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0089","list-style":"none"},"li":"F) Create a UnitCell object as a group of the AsymetricUnit instances.\n        \n        "}}}},{"@attributes":{"id":"p-0137","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003[end optional section]"},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003unitCell = HostSystem.group"},{"entry":"\u2003\u2003\u2003\u2003(asymUnitInstanceList, CrystalSym.createUniqueName( ));"},{"entry":"[begin optional section]"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0091","list-style":"none"},"li":{"@attributes":{"id":"ul0091-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0092","list-style":"none"},"li":"G) [optional] Create an object to show the bounding box of the UnitCell and add the bounding box object as a child of the UnitCell."}}}},{"@attributes":{"id":"p-0138","num":"0286"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003i) Create a unit cube object within the host system."},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003unitCube = HostSystem.createCube(0.0, 0.0, 0.0, 1.0, 1.0, 1.0);"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003ii) Transform each vertex of the cube by multiplying it through"},{"entry":"\u2003\u2003(dot product with) the [U2C] matrix."},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003unitCube.vertex1"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct(U2C, unitCube.vertex1);"},{"entry":"\u2003\u2003unitCube.vertex2"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct(U2C, unitCube.vertex2);"},{"entry":"\u2003\u2003unitCube.vertex3"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct(U2C, unitCube.vertex3);"},{"entry":"\u2003\u2003unitCube.vertex4"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct(U2C, unitCube.vertex4);"},{"entry":"\u2003\u2003unitCube.vertex5"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct(U2C, unitCube.vertex5);"},{"entry":"\u2003\u2003unitCube.vertex6"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct(U2C, unitCube.vertex6);"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003iii) Place the unit cube into the object graph as a child of the"},{"entry":"UnitCell."},{"entry":"\u2003\u2003\u2002*\/"},{"entry":"\u2003\u2003\u2002HostSystem.setParent(unitCube, unitCell);"},{"entry":"[end optional section]"},{"entry":"[begin optional section]"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0093","list-style":"none"},"li":{"@attributes":{"id":"ul0093-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0094","list-style":"none"},"li":["H) [optional] Add parameter values to the UnitCell object.","That is, add parameters to the unitCell object within the host system. This option allows the ability to initialize parameters from previously created objects."]}}}},{"@attributes":{"id":"p-0139","num":"0289"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003i) Add unitCell dimension parameters"},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003HostSystem.addParameter(unitCell, \u201ca\u201d, double);"},{"entry":"\u2003\u2003HostSystem.addParameter(unitCell, \u201cb\u201d, double);"},{"entry":"\u2003\u2003HostSystem.addParameter(unitCell, \u201cc\u201d, double);"},{"entry":"\u2003\u2003HostSystem.addParameter(unitCell, \u201calpha\u201d, double);"},{"entry":"\u2003\u2003HostSystem.addParameter(unitCell, \u201cbeta\u201d, double);"},{"entry":"\u2003\u2003HostSystem.addParameter(unitCell, \u201cgamma\u201d, double);"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003ii) Add group category parameter."},{"entry":"\u2003\u2003For GROUPCATEGORYTYPES see Chapter V. They are all the"},{"entry":"\u2003\u2003enumerated values which are listed. It could just be a string type"},{"entry":"\u2003\u2003or it could be implemented as integers, etc."},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003HostSystem.addParameter"},{"entry":"\u2003\u2003\u2003\u2003(unitCell, \u201cGroupCategory\u201d, GROUPCATEGORYTYPES);"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003iii) Add lattice parameters."},{"entry":"\u2003\u2003LATTICETYPES are the enumerated lattice values valid"},{"entry":"\u2003\u2003for the selected groupCategory."},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003HostSystem.addParameter(unitCell, \u201cLattice\u201d, LATTICETYPES);"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003iv) Set the values of the added parameters."},{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201ca\u201d, aVectorMagnitude);"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201cb\u201d, bVectorMagnitude);"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201cc\u201d, cVectorMagnitude);"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201calpha\u201d, alphaAngle);"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201cbeta\u201d, betaAngle);"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201cgamma\u201d, gammaAngle);"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201cLattice\u201d, lattice);"},{"entry":"\u2003\u2003HostSystem.setParameter(unitCell, \u201cGroupCategory\u201d,"},{"entry":"\u2003\u2003\u2003\u2003SymmetryGroupCategory);"},{"entry":"[end optional section]"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0095","list-style":"none"},"li":{"@attributes":{"id":"ul0095-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0096","list-style":"none"},"li":"I) Create object reference nodes (UnitCell instances) with the requested Lattice transformations, pointing them to (making them parents of) the UnitCell."}}}},{"@attributes":{"id":"p-0140","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\/* for each row of the lattice *\/"},{"entry":"\u2003\u2003for ( i=0; i<aInstances; i++)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\/* for each column of the lattice *\/"},{"entry":"\u2003\u2003\u2003\u2003for ( j=0; j<bInstances; j++)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/* for each layer of the lattice *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003for ( k=0; k<cInstances; k++)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003i) Create an instance of the unit cell."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003unitCellInstance ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.createObjectInstance"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(unitCell, CrystalSym.createUniqueName( ));"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ii) place the unitCellInstance above the"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003unitCell in the HostSystem object graph. This might"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003be done by the HostSystem when the object is created"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003in part i)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.addParent"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(unitCell, unitCellInstance);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003iii) Create a matrix which will translate"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003the unitCellInstance to the correct location."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003transformMatrix ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.Matrix.createTranslationMatrix"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(k, j, i) ;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003finalMatrix"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.Matrix.combine"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(C2U, transformMatrix , U2C);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003iv) Set the unitCellInstance transform matrix."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (the host system allows direct setting of"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003transformation matrix)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.setTransformMatrix"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(unitCellInstance, finalMatrix);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.setScale"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(unitCellInstance,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.Matrix.scaleValues"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(finalMatrix));"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.setRotation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(unitCellInstance,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.Matrix.rotationValues"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(finalMatrix));"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.setTranslation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(unitCellInstance,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.Matrix.translationValues"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(finalMatrix));"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003v) add the instance to a list or in some other"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003way keep track of the instances that this loop"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003is creating)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003CrystalSym.List.add"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(unitCellInstanceList, unitCellInstance);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/* end of layer loop *\/"},{"entry":"\u2003\u2003\u2003\u2003\/* end of column loop *\/"},{"entry":"\u2003\u2003\/* end of row loop *\/"},{"entry":"\/*"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0097","list-style":"none"},"li":{"@attributes":{"id":"ul0097-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0098","list-style":"none"},"li":"J) Create a Lattice as a group of the UnitCell instances.\n        \n        "}}}},{"@attributes":{"id":"p-0141","num":"0295"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"*\/"]},{"entry":[{},"latticeObject = HostSystem.group"]},{"entry":[{},"\u2003\u2003(unitCellInstanceList, CrystalSym.createUniqueName( ));"]},{"entry":[{},"[begin optional section]"]},{"entry":[{},"\/*"]},{"entry":[{},"iii) determine the location of the lattice *\/"]},{"entry":[{},"\/* In this algorithm there are four choices,"]},{"entry":[{},"negative locates the lattice on the negative side"]},{"entry":[{},"\u2003\u2003of the origin of the axis"]},{"entry":[{},"positive locates the lattice on the positive side"]},{"entry":[{},"\u2003\u2003of the origin of the axis"]},{"entry":[{},"centered locates the lattice such that the origin of the axis is"]},{"entry":[{},"\u2003\u2003centered within the lattice."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"This description of the process sets the start location for each axis and builds the lattice in the positive direction along each axis. This specific algorithm is not essential within the CrystalSym process. Any implementation of the process will however make some assumptions or allow specification of some sort of parameters to determine where the lattice is located when it is created.","With the given direction parameters it is possible to place the Origin location at any corner of the lattice, at the center of any face of the Lattice or at the center of the body of the Lattice.",{"@attributes":{"id":"p-0144","num":"0298"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"*\/"]},{"entry":[{},"if (aDirection == negative)"]},{"entry":[{},"\u2003\u2003latticeOrigin.x = Origin.x \u2212 aInstances;"]},{"entry":[{},"else if (aDirection == centered)"]},{"entry":[{},"\u2003\u2003latticeOrigin.x = Origin.x \u2212 (aInstances\/2.0);"]},{"entry":[{},"else \/* (aDirection = positive) *\/"]},{"entry":[{},"\u2003\u2003iatticeOrigin.x = Origin.x;"]},{"entry":[{},"if (bDirection == negative)"]},{"entry":[{},"\u2003\u2003latticeOrigin.y = Origin.y \u2212 bInstances;"]},{"entry":[{},"else if (bDirection == centered)"]},{"entry":[{},"\u2003\u2003latticeOrigin.y = Origin.y \u2212 (bInstances\/2.0);"]},{"entry":[{},"else \/* (bDirection == positive) *\/"]},{"entry":[{},"\u2003\u2003latticeOrigin.y = Origin.y;"]},{"entry":[{},"if (cDirection == negative)"]},{"entry":[{},"\u2003\u2003latticeOrigin.z = Origin.z cInstances;"]},{"entry":[{},"else if (cDirection == centered)"]},{"entry":[{},"\u2003\u2003latticeOrigin.z = Origin.z \u2212 (c.Instances\/2.0);"]},{"entry":[{},"else \/* (cDirection == positive) *\/"]},{"entry":[{},"\u2003\u2003latticeorigin.z = Origin.z;"]},{"entry":[{},"\/*"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0100","list-style":"none"},"li":{"@attributes":{"id":"ul0100-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0101","list-style":"none"},"li":{"@attributes":{"id":"ul0101-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0102","list-style":"none"},"li":"iv) Set the lattice location and orientation so that it is aligned with the unitCell direction vectors a, b and c and place it at latticeOrigin. In the algorithm I devised below, I actually first figure out the reverse, that is how to rotate the UnitCell vectors so they are aligned with the Cartesian Coordinate system. Then I use the reverse order and the opposite angle when orienting the Lattice. There is nothing special about this algorithm. It is typical computer graphics manipulations. I just detailed an algorithm so the process specification would be complete."}}}}}},{"@attributes":{"id":"p-0145","num":"0300"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"*\/"]},{"entry":[{},"\u2003\u2003a) determine the angles required to rotate the lattice so that"]},{"entry":[{},"\u2003\u2003its, positive x-axis is pointing in the aVectorDirection."]},{"entry":[{},"\u2003\u2003We will find a rotation about the z-axis, then the y-axis to"]},{"entry":[{},"\u2003\u2003get the x_axis aligned with the aVectorDirection."]},{"entry":[{},"\u2003\u2003*\/"]},{"entry":[{},"\u2003\u2003projectionOfAonXYPlane"]},{"entry":[{},"\u2003\u2003\u2003\u2003= < aVectorDirection.x, aVectorDirection.y, 0.0 >;"]},{"entry":[{},"\u2003\u2003z_rotation_angle"]},{"entry":[{},"\u2003\u2003\u2003\u2003= HostSystem.atan"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003(aVectorDirection.y \/ aVectorDirection.x);"]},{"entry":[{},"\u2003\u2003z_rotation_matrix"]},{"entry":[{},"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.createZRotationMatrix"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003(z_rotation_angle);"]},{"entry":[{},"\u2003\u2003rotated_vector"]},{"entry":[{},"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003(z_rotation_matrix, aVectorDirection);"]},{"entry":[{},"\u2003\u2003y_rotation_angle"]},{"entry":[{},"\u2003\u2003\u2003\u2003= HostSystem.atan"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003(rotated_vector.z \/ rotated_vector.x);"]},{"entry":[{},"\u2003\u2003y_rotation_matrix"]},{"entry":[{},"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.createYRotationMatrix"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003(yrotation angle);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0103","list-style":"none"},"li":{"@attributes":{"id":"ul0103-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0104","list-style":"none"},"li":{"@attributes":{"id":"ul0104-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0105","list-style":"none"},"li":{"@attributes":{"id":"ul0105-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0106","list-style":"none"},"li":["b.) determine the angle required to rotate the lattice so that its y-axis is in the SymmetryPlane and the bVectorDirection lies in the UnitCell's positive-y hemi-plane.","This will be a rotation about the x-axis."]}}}}}}}},{"@attributes":{"id":"p-0146","num":"0303"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003*\/"},{"entry":"\u2003\u2003rotated_vector"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(z_rotation_matrix, bVectorDirection);"},{"entry":"\u2003\u2003rotated_vector"},{"entry":"\u2003\u2003= CrystalSym.Matrix.dotProduct"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(y_rotation_matrix, rotated_vector);"},{"entry":"\u2003\u2003x_rotation_angle"},{"entry":"\u2003\u2003\u2003\u2003= HostSystem.atan"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(rotated_vector.z \/ rotated_vector.y);"},{"entry":"x_rotation_matrix"},{"entry":"\u2003\u2003= CrystalSym.Matrix.createXRotationMatrix"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(x_rotation_angle);"},{"entry":"\u2003\u2003\/*"},{"entry":"\u2003\u2003c.) if the cDirection Vector lies in the negative-z hemi-space"},{"entry":"\u2003\u2003mirror the lattice z-coordinates (scale z by \u22121.0). This turns"},{"entry":"\u2003\u2003a left handed coord system to a right handed coord system. *\/"},{"entry":"\u2003\u2003rotated_vector"},{"entry":"\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(z_rotation_matrix, cVectorDirection);"},{"entry":"\u2003\u2003rotated_vector"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(y_rotation_matrix, rotated_vector);"},{"entry":"\u2003\u2003\u2003\u2003rotated_vector"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003= CrystalSym.Matrix.dotProduct"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(x_rotation_matrix, rotated_vector);"},{"entry":"\u2003\u2003\u2003\u2003if (rotated_vector.z < 0.0) \/* scale z by \u22121.0 *\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003HostSystem.setScale(lattice, <1.0, 1.0, 1.0>);"},{"entry":"\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003d.) rotate the lattice in the reverse order and opposite"},{"entry":"\u2003\u2003\u2003\u2003direction by the angles which were determined previously."},{"entry":"\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003HostSystem.setRotation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(lattice, < -x_rotation angle,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003-y_rotation_angle,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003-z rotation angle >);"},{"entry":"\u2003\u2003\u2003\u2003\/*"},{"entry":"\u2003\u2003\u2003\u2003e.) translate the lattice so that its origin is at latticeOrigin"},{"entry":"\u2003\u2003\u2003\u2003*\/"},{"entry":"\u2003\u2003\u2003\u2003HostSystem.setTranslation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003(lattice, < latticeOrigin.x,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003latticeOrigin.x,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003latticeOrigin.y,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003latticeOrigin.z > );"},{"entry":"\u2003\u2003[end optional section]"},{"entry":"} \/* end of CrystalSym.createLatticeOfUnitCells( ) *\/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The Steps listed where these methods are called are all within Chapter VI. Some of these methods may be available within the host system, as they are standard matrix mathematics. These methods use the following standard mathematical functions: sin( ), cos( ), asin( ), acos( ), atan( ), abs( ), sqrt( ) and sqr( ). It is assumed that these functions are implemented within the host system. They are listed within Chapter III. with the prefix \u201cHostSystem\u201d. I did not use the prefix in the descriptions in this Chapter.","Methods which implement standard computer graphics matrix functions:","i) CrystalSym.Matrix.dotProduct(aMatrix, aPoint|aVector);\n\n","NP[0]=(M[0][0]*P[0])+(M[1][0]*P[1])+(M[2][0]*P[2])+M[3][0];","NP[1]=(M[0][1]*P[0])+(M[1][1]*P[1])+(M[2][1]*P[2])+M[3][1];","NP[2]=(M[0][2]*P[0])+(M[1][2]*P[1])+(M[2][2]*P[2])+M[3][2];","ii) CrystalSym.Matrix.combine(matrix1, matrix2, matrix3);\n\n",{"@attributes":{"id":"p-0154","num":"0316"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for (i=0; i<4; i++)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for (j=0; j<4; j++)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TM[i][j] = (M1[i][0] * M2[0][j]) + (M1[i][1] * M2[1][j])"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2009+(M1[i][2] * M2[2][j]) + (M1[i][3] * M2[3][j]);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"for (i=0; i<4; i++)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for (j=0; j<4; j++)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"F[i][j] = (TM[i][0] * M3[0][j]) + (TM[i][1] * M3[1][j])"]},{"entry":[{},"\u2003\u2003\u2009\u2009\u2009\u2009\u2009\u2009+(TM[i][2] * M3[2][j]) + (TM[i][3] * M3[3][j]);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"iii) CrystalSym.Matrix. createTranslationMatrix\n\n","T[0][0]=1.0; T[0][1]=0.0; T[0][2]=0.0; T[0][3]=0.0;","T[1][0]=0.0; T[1][1]=1.0; T[1][2]=0.0; T[1][3]=0.0;","T[2][0]=0.0; T[2][1]=0.0; T[2][2]=1.0; T[2][3]=0.0;","T[3][0]=x_value; T[3][1]=y_value; T[3][2]=z_value; T[3][3]=1.0;","iv) CrystalSym.Matrix.createXRotationMatrix(angle);\n\n","RX[0][0]=1.0; RX[0][1]=0.0; RX[0][2]=; RX[0][3]=0.0;","RX[1][0]=0.0; RX[1][1]=cos(angle); RX[1][2]=\u2212sin(angle); RX[1][3]=0.0;","RX[2][0]=0.0; RX[2][1]=sin(angle); RX[2][2]=cos(angle); RX[2][3]=0.0;","RX[3][0]=0.0; RX[3][1]=0.0; RX[3][2]=; RX[3][3]=1.0;","v) CrystalSym.Matrix.createYRotationMatrix(angle);\n\n","RY[0][0]=cos(angle); RY[0][1]=0.0; RY[0][2]=sin(angle); RY[0][3]=0.0;","RY[1][0]=0.0; RY[1][1]=1.0; RY[1][2]=0.0; RY[1][3]=0.0;","RY[2][0]=\u2212sin(angle); RY[2][1]=0.0; RY[2][2]=cos(angle); RY[2][3]=0.0;","RY[3][0]=0.0; RY[3][1]=0.0; RY[3][2]=0.0; RY[3][3]=1.0;","vi) CrystalSytn.Matrix.createZRotationMatrix(angle);\n\n","RZ[0][0]=cos(angle); RZ[0][1]=\u2212sin(angle); RZ[0][2]=0.0; RZ[0][3]=0.0;","RZ[1][0]=sin(angle); RZ[1][1]=cos(angle); RZ[1][2]=0.0; RZ[1][3]=0.0;","RZ[2][0]=0.0; RZ[2][1]=0.0; RZ[2][2]=1.0; RZ[2][3]=0.0;","RZ[3][0]=0.0; RZ[3][1]=0.0; RZ[3][2]=0.0; RZ[3][3]=1.0;","iv) CrystalSym.Matrix.createScaleMatrix(x_value, y_value, z_value);\n\n","S[0][0]=x_value; S[0][1]=0.0; S[0][2]=0.0; S[0][3]=0.0;","S[1][0]=0.0; S[1][1]=y_value; S[1][2]=0.0; S[1][3]=0.0;","S[2][0]=0.0; S[2][1]=0.0; S[2][2]=z_value; S[2][3]=0.0;","S[3][0]=0.0; S[3][1]=0.0; S[3][2]=0.0; S[3][3]=1.0;","Methods whose math is described in Chapter IV.","i) CrystalSym.Matrix.createC2U(a,b,c,alpha,beta,gamma);\n\n","ii) CrystalSym.Matrix.createU2C(a,b,c,alpha,beta,gamma);\n\n","Methods which extract information from aMatrix. In most cases these algorithms work. There are however, matrices for which the algorithms do not work. In some cases the algorithms fail to find the scale and rotation values. This is primarilly due to the nature of the trigonometric operations used in the algorithms, and sometimes is due to the imprecision of computer computation.","i) CrystalSym.Matrix.translationValues(aMatrix);\n\n","ii) CrystalSym.Matrix.rotationValues(aMatrix);\n\n",{"@attributes":{"id":"p-0186","num":"0372"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"a) This method extracts the rotation values from aMatrix(M[4][4])"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"and places them in a vector (VR[3]), which is returned. VR[0] is the"},{"entry":"rotation angle about the x-axis. VR[1] is the rottion angle about the y-axis."},{"entry":"VR[2] is the rotation angle about the z-axis. The rotation order is assumed"},{"entry":"to be x-axis, y-axis, then z-axis. The algorithm would need to be adjusted"},{"entry":"to get rotation angle values for other orderings."},{"entry":"\/*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"b) clean the matrix of \u201calmost zero\u201d values."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"for (i=0; i<4; i++)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"for (j=0; j<4; j++)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (abs(M[i][j]) < VERY_SMALL_VALUE)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"M[i][j] = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/*"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"c) set the denominator value"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"denominator = sqrt(sqr(M[0][0]) + sqr(M[0][1]));"},{"entry":"if (abs(denominator) < VERY_SMALL_VALUE)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/*"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"d) compute the rotation values"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"if (denominator != 0.0)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*"]},{"entry":[{},"e) compute y rotation"]},{"entry":[{},"*\/"]},{"entry":[{},"VR[1] = atan(\u2212(M[0][2] \/ denominator));"]},{"entry":[{},"\/*"]},{"entry":[{},"f) compute z rotation"]},{"entry":[{},"*\/"]},{"entry":[{},"if (asin((M[0][1] \/ denominator)) > 0)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VR[2] = acos((M[0][0] \/ denominator));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VR[2] = \u2212acos((M[0][0] \/ denominator));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/*"]},{"entry":[{},"g) compute x rotation"]},{"entry":[{},"*\/"]},{"entry":[{},"if ((denominator = sqrt(sqr(M[1][2]) + sqr(M[2][2]))) != 0.0)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (asin((M[1][2] \/ denominator)) > 0)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VR[0] = acos((M[2][2] \/ denominator));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VR[0] = \u2212acos((M[2][2] \/ denominator));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*"]},{"entry":[{},"** Either Scale of x or scale of y is zero,"]},{"entry":[{},"** or rotate y is +90 or \u221290 degrees."]},{"entry":[{},"** But rotate y cannot be 90 degrees"]},{"entry":[{},"** if we are in this part of the algorithm..."]},{"entry":[{},"*\/"]},{"entry":[{},"VR[0] = 0.0;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"else"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*"]},{"entry":[{},"h) set rotation values for when the y angle is zero"]},{"entry":[{},"** If the denominator is 0, then the y angle is 90 degrees."]},{"entry":[{},"** When the y angle is + or \u221290 degrees, then x and z rotations"]},{"entry":[{},"** become complementary, so we can set the z angle to whatever"]},{"entry":[{},"** we want and the x angle will be able to rotate to any possible"]},{"entry":[{},"** angle."]},{"entry":[{},"*\/"]},{"entry":[{},"VR[1] = PI\/2.0;"]},{"entry":[{},"VR[2] = 0;"]},{"entry":[{},"VR[0] = asin(M[1][0]);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"iii) CrystalSym.Matrix.scaleValues(aMatrix);\n\n",{"@attributes":{"id":"p-0188","num":"0376"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"a) This method extracts the scale values from aMatrix(M[4][4]) and"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"places them in a vector(VS[3]), which is returned. VS[0] is the scalar"},{"entry":"value for the x-axis. VS[1] is the scalar value for the y-axis. VS[2] is the"},{"entry":"scalar value for the z-axis. This method uses"},{"entry":"CrystalSym.Matrix.rotationValues( ), from Chapter VII, section ii)."},{"entry":"\/*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"b) clean the matrix of \u201calmost zero\u201d values."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"for (i=0; i<4; i++)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"for (j=0; j<4; j++)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (abs(M[i][j]) < VERY_SMALL_VALUE)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"M[i][j] = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/*"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"c) Get the Rotation values, place into vector VR[3]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"VR = CrystalSym.MatrixRotationValues(M);"},{"entry":"\/*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"d) Get the X scale value."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"denominator = sin(VR[1]);"},{"entry":"if (abs(denominator) < VERY_SMALL_VALUE)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"if ((M[0][2] != 0.0) && (denominator != 0.0))"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[0] = \u2212M[0][2] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"else"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"denominator = cos(VR[1]) * sin(VR[2]);"]},{"entry":[{},"if (abs(denominator) < VERY_SMALL_VALUE)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if ((M[0][1] != 0.0) && (denominator != 0.0))"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[0] = M[0][1] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"denominator = cos(v->rotate.y) * cos(v->rotate.z);"]},{"entry":[{},"if (abs(denominator) < VERY_SMALL_VALUE)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if ((M[0][0] != 0.0) && (denominator != 0.0))"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[0] = M[0][0] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[0] = 1.0; \/* 1 instead of zero, so result looks OK *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"e) Get the Y scale value."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"denominator = sin(VR[0]) * cos(VR[1]);"},{"entry":"if (abs(denominator) < VERY_SMALL_VALUE)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"if ((M[1][2] != 0.0) && (denominator != 0.0))"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[1] = M[1][2] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"else"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"= (sin(VR[0]) * sin(VR[1]) * sin(VR[2]))"]},{"entry":[{},"+ (cos(VR[0]) * cos(VR[2]));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (abs(denominator) < VERY_SMALL_VALUE)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if ((M[1][1] != 0.0) && (denominator != 0.0))"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[1] = M[1][1] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"= (sin(VR[0]) * sin(VR[1]) * cos(VR[2]))"]},{"entry":[{},"\u2212 (cos(VR[0]) * sin(VR[2]));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (abs(denominator) < VERY_SMALL_VALUE)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if ((M[1][0] != 0.0) && (denominator != 0.0))"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[1] = M[1][0] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[1] = 1.0; \/* 1 instead of zero, so result looks OK *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"f) Get the Z scale value."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*\/"},{"entry":"denominator = cos(VR[0]) * cos(VR[1]);"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (abs(denominator) < VERY_SMALL_VALUE)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"denominator = 0.0;"},{"entry":"if ((M[2][2] != 0.0) && (denominator != 0.0))"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"VS[2] = M[2][2] \/ denominator;"},{"entry":"}"},{"entry":"else"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"= (cos(VR[0]) * sin(VR[1]) * sin(VR[2]))"]},{"entry":[{},"\u2212 sin(VR[0]) * cos(VR[2]));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (abs(denominator) < VERY_SMALL_VALUE)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if ((M[2][1] != 0.0) && (denominator != 0.0))"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[2] = M[2][1] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"denominator"]},{"entry":[{},"= (cos(VR[0]) * sin(VR[1]) * cos(VR[2]))"]},{"entry":[{},"+ (sin(VR[0]) * sin(VR[2]));"]},{"entry":[{},"if (abs(denominator) < VERY_SMALL_VALUE)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"denominator = 0.0;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if ((M[2][0] != 0.0) && (denominator != 0.0))"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[2] = M[2][0] \/ denominator;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"VS[2] = 1.0; \/* 1 instead of zero, so result looks OK *\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Methods whose descriptions or details are in previous sections. Unless other wise indicated, locations specified by Step are within an algorithm in Chapter VI.","i) CrystalSym.createLatticeOfUnitCells( );\n\n","ii) CrystalSym.UI.getSymmetryGroupCategory( );\n\n","iii) CrystalSym.UI.getLatticeParameters\n\n","iv) CrystalSym.UI.getUnitCellParameters\n\n","v) CrystalSym.UI.getSymmetryGroupParameters\n\n","Methods Described Here","i) CrystalSym.initSymmetryGroups( );\n\n","ii) CrystalSym.setupErrorHandlers( );\n\n","iii) CrystalSym.UI.setUnitCellParametersFrom(object);\n\n","iv) CrystalSym.handleTheError(errorMessage);\n\n","v) CrystalSym.createUniqueName( );\n\n","vi) CrystalSym.getSymmetryOperationsFor\n\n","vi) CrystalSym.List.getObjectAtIndex(aList, index);\n\n","viii) CrystalSym.List.add(aList, object);\n\n"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING","p":"The single drawing FIGURE represents a computer system embodying the invention."},"DETDESC":[{},{}]}
